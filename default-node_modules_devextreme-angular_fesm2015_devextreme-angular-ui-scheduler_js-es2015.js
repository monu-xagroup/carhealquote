"use strict";
(self["webpackChunkcar_heal_quote"] = self["webpackChunkcar_heal_quote"] || []).push([["default-node_modules_devextreme-angular_fesm2015_devextreme-angular-ui-scheduler_js"],{

/***/ 20330:
/*!*************************************************************************************!*\
  !*** ./node_modules/devextreme-angular/fesm2015/devextreme-angular-ui-scheduler.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DxSchedulerComponent": function() { return /* binding */ DxSchedulerComponent; },
/* harmony export */   "DxSchedulerModule": function() { return /* binding */ DxSchedulerModule; }
/* harmony export */ });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ 71570);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var devextreme_ui_scheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/ui/scheduler */ 70610);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme-angular/core */ 55643);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 83203);









/*!
 * devextreme-angular
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/**
 * The Scheduler is a UI component that represents scheduled data and allows a user to manage and edit it.

 */
class DxSchedulerComponent extends devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxComponent {
    constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {
        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);
        this._watcherHelper = _watcherHelper;
        this._idh = _idh;
        this._createEventEmitters([
            { subscribe: 'appointmentAdded', emit: 'onAppointmentAdded' },
            { subscribe: 'appointmentAdding', emit: 'onAppointmentAdding' },
            { subscribe: 'appointmentClick', emit: 'onAppointmentClick' },
            { subscribe: 'appointmentContextMenu', emit: 'onAppointmentContextMenu' },
            { subscribe: 'appointmentDblClick', emit: 'onAppointmentDblClick' },
            { subscribe: 'appointmentDeleted', emit: 'onAppointmentDeleted' },
            { subscribe: 'appointmentDeleting', emit: 'onAppointmentDeleting' },
            { subscribe: 'appointmentFormOpening', emit: 'onAppointmentFormOpening' },
            { subscribe: 'appointmentRendered', emit: 'onAppointmentRendered' },
            { subscribe: 'appointmentTooltipShowing', emit: 'onAppointmentTooltipShowing' },
            { subscribe: 'appointmentUpdated', emit: 'onAppointmentUpdated' },
            { subscribe: 'appointmentUpdating', emit: 'onAppointmentUpdating' },
            { subscribe: 'cellClick', emit: 'onCellClick' },
            { subscribe: 'cellContextMenu', emit: 'onCellContextMenu' },
            { subscribe: 'contentReady', emit: 'onContentReady' },
            { subscribe: 'disposing', emit: 'onDisposing' },
            { subscribe: 'initialized', emit: 'onInitialized' },
            { subscribe: 'optionChanged', emit: 'onOptionChanged' },
            { emit: 'accessKeyChange' },
            { emit: 'adaptivityEnabledChange' },
            { emit: 'allDayExprChange' },
            { emit: 'allDayPanelModeChange' },
            { emit: 'appointmentCollectorTemplateChange' },
            { emit: 'appointmentDraggingChange' },
            { emit: 'appointmentTemplateChange' },
            { emit: 'appointmentTooltipTemplateChange' },
            { emit: 'cellDurationChange' },
            { emit: 'crossScrollingEnabledChange' },
            { emit: 'currentDateChange' },
            { emit: 'currentViewChange' },
            { emit: 'customizeDateNavigatorTextChange' },
            { emit: 'dataCellTemplateChange' },
            { emit: 'dataSourceChange' },
            { emit: 'dateCellTemplateChange' },
            { emit: 'dateSerializationFormatChange' },
            { emit: 'descriptionExprChange' },
            { emit: 'disabledChange' },
            { emit: 'dropDownAppointmentTemplateChange' },
            { emit: 'editingChange' },
            { emit: 'elementAttrChange' },
            { emit: 'endDateExprChange' },
            { emit: 'endDateTimeZoneExprChange' },
            { emit: 'endDayHourChange' },
            { emit: 'firstDayOfWeekChange' },
            { emit: 'focusStateEnabledChange' },
            { emit: 'groupByDateChange' },
            { emit: 'groupsChange' },
            { emit: 'heightChange' },
            { emit: 'hintChange' },
            { emit: 'indicatorUpdateIntervalChange' },
            { emit: 'maxChange' },
            { emit: 'maxAppointmentsPerCellChange' },
            { emit: 'minChange' },
            { emit: 'noDataTextChange' },
            { emit: 'recurrenceEditModeChange' },
            { emit: 'recurrenceExceptionExprChange' },
            { emit: 'recurrenceRuleExprChange' },
            { emit: 'remoteFilteringChange' },
            { emit: 'resourceCellTemplateChange' },
            { emit: 'resourcesChange' },
            { emit: 'rtlEnabledChange' },
            { emit: 'scrollingChange' },
            { emit: 'selectedCellDataChange' },
            { emit: 'shadeUntilCurrentTimeChange' },
            { emit: 'showAllDayPanelChange' },
            { emit: 'showCurrentTimeIndicatorChange' },
            { emit: 'startDateExprChange' },
            { emit: 'startDateTimeZoneExprChange' },
            { emit: 'startDayHourChange' },
            { emit: 'tabIndexChange' },
            { emit: 'textExprChange' },
            { emit: 'timeCellTemplateChange' },
            { emit: 'timeZoneChange' },
            { emit: 'useDropDownViewSwitcherChange' },
            { emit: 'viewsChange' },
            { emit: 'visibleChange' },
            { emit: 'widthChange' }
        ]);
        this._idh.setHost(this);
        optionHost.setHost(this);
    }
    /**
     * Specifies the shortcut key that sets focus on the UI component.
    
     */
    get accessKey() {
        return this._getOption('accessKey');
    }
    set accessKey(value) {
        this._setOption('accessKey', value);
    }
    /**
     * Specifies whether the UI component adapts to small screens.
    
     */
    get adaptivityEnabled() {
        return this._getOption('adaptivityEnabled');
    }
    set adaptivityEnabled(value) {
        this._setOption('adaptivityEnabled', value);
    }
    /**
     * Specifies the name of the data source item field whose value defines whether or not the corresponding appointment is an all-day appointment.
    
     */
    get allDayExpr() {
        return this._getOption('allDayExpr');
    }
    set allDayExpr(value) {
        this._setOption('allDayExpr', value);
    }
    /**
     * Specifies the display mode for the All day panel.
    
     */
    get allDayPanelMode() {
        return this._getOption('allDayPanelMode');
    }
    set allDayPanelMode(value) {
        this._setOption('allDayPanelMode', value);
    }
    /**
     * Specifies a custom template for cell overflow indicators.
    
     */
    get appointmentCollectorTemplate() {
        return this._getOption('appointmentCollectorTemplate');
    }
    set appointmentCollectorTemplate(value) {
        this._setOption('appointmentCollectorTemplate', value);
    }
    /**
     * Configures appointment reordering using drag and drop gestures.
    
     */
    get appointmentDragging() {
        return this._getOption('appointmentDragging');
    }
    set appointmentDragging(value) {
        this._setOption('appointmentDragging', value);
    }
    /**
     * Specifies a custom template for appointments.
    
     */
    get appointmentTemplate() {
        return this._getOption('appointmentTemplate');
    }
    set appointmentTemplate(value) {
        this._setOption('appointmentTemplate', value);
    }
    /**
     * Specifies a custom template for tooltips displayed when users click an appointment or cell overflow indicator.
    
     */
    get appointmentTooltipTemplate() {
        return this._getOption('appointmentTooltipTemplate');
    }
    set appointmentTooltipTemplate(value) {
        this._setOption('appointmentTooltipTemplate', value);
    }
    /**
     * Specifies cell duration in minutes. This property&apos;s value should divide the interval between startDayHour and endDayHour into even parts.
    
     */
    get cellDuration() {
        return this._getOption('cellDuration');
    }
    set cellDuration(value) {
        this._setOption('cellDuration', value);
    }
    /**
     * Specifies whether or not an end user can scroll the view in both directions at the same time.
    
     */
    get crossScrollingEnabled() {
        return this._getOption('crossScrollingEnabled');
    }
    set crossScrollingEnabled(value) {
        this._setOption('crossScrollingEnabled', value);
    }
    /**
     * Specifies the current date.
    
     */
    get currentDate() {
        return this._getOption('currentDate');
    }
    set currentDate(value) {
        this._setOption('currentDate', value);
    }
    /**
     * Specifies the displayed view. Accepts name or type of a view available in the views array.
    
     */
    get currentView() {
        return this._getOption('currentView');
    }
    set currentView(value) {
        this._setOption('currentView', value);
    }
    /**
     * Customizes the date navigator&apos;s text.
    
     */
    get customizeDateNavigatorText() {
        return this._getOption('customizeDateNavigatorText');
    }
    set customizeDateNavigatorText(value) {
        this._setOption('customizeDateNavigatorText', value);
    }
    /**
     * Specifies a custom template for table cells.
    
     */
    get dataCellTemplate() {
        return this._getOption('dataCellTemplate');
    }
    set dataCellTemplate(value) {
        this._setOption('dataCellTemplate', value);
    }
    /**
     * Binds the UI component to data.
    
     */
    get dataSource() {
        return this._getOption('dataSource');
    }
    set dataSource(value) {
        this._setOption('dataSource', value);
    }
    /**
     * Specifies a custom template for day scale items.
    
     */
    get dateCellTemplate() {
        return this._getOption('dateCellTemplate');
    }
    set dateCellTemplate(value) {
        this._setOption('dateCellTemplate', value);
    }
    /**
     * Specifies the format in which date-time values should be sent to the server.
    
     */
    get dateSerializationFormat() {
        return this._getOption('dateSerializationFormat');
    }
    set dateSerializationFormat(value) {
        this._setOption('dateSerializationFormat', value);
    }
    /**
     * Specifies the name of the data source item field whose value holds the description of the corresponding appointment.
    
     */
    get descriptionExpr() {
        return this._getOption('descriptionExpr');
    }
    set descriptionExpr(value) {
        this._setOption('descriptionExpr', value);
    }
    /**
     * Specifies whether the UI component responds to user interaction.
    
     */
    get disabled() {
        return this._getOption('disabled');
    }
    set disabled(value) {
        this._setOption('disabled', value);
    }
    /**
     * Specifies a custom template for tooltips displayed when users click a cell overflow indicator.
    
     * @deprecated Use the appointmentTooltipTemplate option instead.
    
     */
    get dropDownAppointmentTemplate() {
        return this._getOption('dropDownAppointmentTemplate');
    }
    set dropDownAppointmentTemplate(value) {
        this._setOption('dropDownAppointmentTemplate', value);
    }
    /**
     * Specifies which editing operations a user can perform on appointments.
    
     */
    get editing() {
        return this._getOption('editing');
    }
    set editing(value) {
        this._setOption('editing', value);
    }
    /**
     * Specifies the global attributes to be attached to the UI component&apos;s container element.
    
     */
    get elementAttr() {
        return this._getOption('elementAttr');
    }
    set elementAttr(value) {
        this._setOption('elementAttr', value);
    }
    /**
     * Specifies the name of the data source item field that defines the ending of an appointment.
    
     */
    get endDateExpr() {
        return this._getOption('endDateExpr');
    }
    set endDateExpr(value) {
        this._setOption('endDateExpr', value);
    }
    /**
     * Specifies the name of the data source item field that defines the timezone of the appointment end date.
    
     */
    get endDateTimeZoneExpr() {
        return this._getOption('endDateTimeZoneExpr');
    }
    set endDateTimeZoneExpr(value) {
        this._setOption('endDateTimeZoneExpr', value);
    }
    /**
     * Specifies the last hour on the time scale. Accepts integer values from 0 to 24.
    
     */
    get endDayHour() {
        return this._getOption('endDayHour');
    }
    set endDayHour(value) {
        this._setOption('endDayHour', value);
    }
    /**
     * Specifies the first day of a week. Does not apply to the agenda view.
    
     */
    get firstDayOfWeek() {
        return this._getOption('firstDayOfWeek');
    }
    set firstDayOfWeek(value) {
        this._setOption('firstDayOfWeek', value);
    }
    /**
     * Specifies whether the UI component can be focused using keyboard navigation.
    
     */
    get focusStateEnabled() {
        return this._getOption('focusStateEnabled');
    }
    set focusStateEnabled(value) {
        this._setOption('focusStateEnabled', value);
    }
    /**
     * If true, appointments are grouped by date first and then by resource; opposite if false. Applies only if appointments are grouped and groupOrientation is &apos;horizontal&apos;.
    
     */
    get groupByDate() {
        return this._getOption('groupByDate');
    }
    set groupByDate(value) {
        this._setOption('groupByDate', value);
    }
    /**
     * Specifies the resource kinds by which the scheduler&apos;s appointments are grouped in a timetable.
    
     */
    get groups() {
        return this._getOption('groups');
    }
    set groups(value) {
        this._setOption('groups', value);
    }
    /**
     * Specifies the UI component&apos;s height.
    
     */
    get height() {
        return this._getOption('height');
    }
    set height(value) {
        this._setOption('height', value);
    }
    /**
     * Specifies text for a hint that appears when a user pauses on the UI component.
    
     */
    get hint() {
        return this._getOption('hint');
    }
    set hint(value) {
        this._setOption('hint', value);
    }
    /**
     * Specifies the time interval between when the date-time indicator changes its position, in milliseconds.
    
     */
    get indicatorUpdateInterval() {
        return this._getOption('indicatorUpdateInterval');
    }
    set indicatorUpdateInterval(value) {
        this._setOption('indicatorUpdateInterval', value);
    }
    /**
     * The latest date the UI component allows you to select.
    
     */
    get max() {
        return this._getOption('max');
    }
    set max(value) {
        this._setOption('max', value);
    }
    /**
     * Specifies the limit of full-sized appointments displayed per cell. Applies to all views except &apos;agenda&apos;.
    
     */
    get maxAppointmentsPerCell() {
        return this._getOption('maxAppointmentsPerCell');
    }
    set maxAppointmentsPerCell(value) {
        this._setOption('maxAppointmentsPerCell', value);
    }
    /**
     * The earliest date the UI component allows you to select.
    
     */
    get min() {
        return this._getOption('min');
    }
    set min(value) {
        this._setOption('min', value);
    }
    /**
     * Specifies the text or HTML markup displayed by the UI component if the item collection is empty. Available for the Agenda view only.
    
     */
    get noDataText() {
        return this._getOption('noDataText');
    }
    set noDataText(value) {
        this._setOption('noDataText', value);
    }
    /**
     * Specifies the edit mode for recurring appointments.
    
     */
    get recurrenceEditMode() {
        return this._getOption('recurrenceEditMode');
    }
    set recurrenceEditMode(value) {
        this._setOption('recurrenceEditMode', value);
    }
    /**
     * Specifies the name of the data source item field that defines exceptions for the current recurring appointment.
    
     */
    get recurrenceExceptionExpr() {
        return this._getOption('recurrenceExceptionExpr');
    }
    set recurrenceExceptionExpr(value) {
        this._setOption('recurrenceExceptionExpr', value);
    }
    /**
     * Specifies the name of the data source item field that defines a recurrence rule for generating recurring appointments.
    
     */
    get recurrenceRuleExpr() {
        return this._getOption('recurrenceRuleExpr');
    }
    set recurrenceRuleExpr(value) {
        this._setOption('recurrenceRuleExpr', value);
    }
    /**
     * Specifies whether filtering is performed on the server or client side.
    
     */
    get remoteFiltering() {
        return this._getOption('remoteFiltering');
    }
    set remoteFiltering(value) {
        this._setOption('remoteFiltering', value);
    }
    /**
     * Specifies a custom template for resource headers.
    
     */
    get resourceCellTemplate() {
        return this._getOption('resourceCellTemplate');
    }
    set resourceCellTemplate(value) {
        this._setOption('resourceCellTemplate', value);
    }
    /**
     * Specifies an array of resources available in the scheduler.
    
     */
    get resources() {
        return this._getOption('resources');
    }
    set resources(value) {
        this._setOption('resources', value);
    }
    /**
     * Switches the UI component to a right-to-left representation.
    
     */
    get rtlEnabled() {
        return this._getOption('rtlEnabled');
    }
    set rtlEnabled(value) {
        this._setOption('rtlEnabled', value);
    }
    /**
     * Configures scrolling.
    
     */
    get scrolling() {
        return this._getOption('scrolling');
    }
    set scrolling(value) {
        this._setOption('scrolling', value);
    }
    /**
     * The data of the currently selected cells.
    
     */
    get selectedCellData() {
        return this._getOption('selectedCellData');
    }
    set selectedCellData(value) {
        this._setOption('selectedCellData', value);
    }
    /**
     * Specifies whether to apply shading to cover the timetable up to the current time.
    
     */
    get shadeUntilCurrentTime() {
        return this._getOption('shadeUntilCurrentTime');
    }
    set shadeUntilCurrentTime(value) {
        this._setOption('shadeUntilCurrentTime', value);
    }
    /**
     * Specifies the &apos;All-day&apos; panel&apos;s visibility. Setting this property to false hides the panel along with the all-day appointments.
    
     */
    get showAllDayPanel() {
        return this._getOption('showAllDayPanel');
    }
    set showAllDayPanel(value) {
        this._setOption('showAllDayPanel', value);
    }
    /**
     * Specifies the current date-time indicator&apos;s visibility.
    
     */
    get showCurrentTimeIndicator() {
        return this._getOption('showCurrentTimeIndicator');
    }
    set showCurrentTimeIndicator(value) {
        this._setOption('showCurrentTimeIndicator', value);
    }
    /**
     * Specifies the name of the data source item field that defines the start of an appointment.
    
     */
    get startDateExpr() {
        return this._getOption('startDateExpr');
    }
    set startDateExpr(value) {
        this._setOption('startDateExpr', value);
    }
    /**
     * Specifies the name of the data source item field that defines the timezone of the appointment start date.
    
     */
    get startDateTimeZoneExpr() {
        return this._getOption('startDateTimeZoneExpr');
    }
    set startDateTimeZoneExpr(value) {
        this._setOption('startDateTimeZoneExpr', value);
    }
    /**
     * Specifies the first hour on the time scale. Accepts integer values from 0 to 24.
    
     */
    get startDayHour() {
        return this._getOption('startDayHour');
    }
    set startDayHour(value) {
        this._setOption('startDayHour', value);
    }
    /**
     * Specifies the number of the element when the Tab key is used for navigating.
    
     */
    get tabIndex() {
        return this._getOption('tabIndex');
    }
    set tabIndex(value) {
        this._setOption('tabIndex', value);
    }
    /**
     * Specifies the name of the data source item field that holds the subject of an appointment.
    
     */
    get textExpr() {
        return this._getOption('textExpr');
    }
    set textExpr(value) {
        this._setOption('textExpr', value);
    }
    /**
     * Specifies a custom template for time scale items.
    
     */
    get timeCellTemplate() {
        return this._getOption('timeCellTemplate');
    }
    set timeCellTemplate(value) {
        this._setOption('timeCellTemplate', value);
    }
    /**
     * Specifies the time zone for the Scheduler&apos;s grid. Accepts values from the IANA time zone database.
    
     */
    get timeZone() {
        return this._getOption('timeZone');
    }
    set timeZone(value) {
        this._setOption('timeZone', value);
    }
    /**
     * Specifies whether a user can switch views using tabs or a drop-down menu.
    
     */
    get useDropDownViewSwitcher() {
        return this._getOption('useDropDownViewSwitcher');
    }
    set useDropDownViewSwitcher(value) {
        this._setOption('useDropDownViewSwitcher', value);
    }
    /**
     * Specifies and configures the views to be available in the view switcher.
    
     */
    get views() {
        return this._getOption('views');
    }
    set views(value) {
        this._setOption('views', value);
    }
    /**
     * Specifies whether the UI component is visible.
    
     */
    get visible() {
        return this._getOption('visible');
    }
    set visible(value) {
        this._setOption('visible', value);
    }
    /**
     * Specifies the UI component&apos;s width.
    
     */
    get width() {
        return this._getOption('width');
    }
    set width(value) {
        this._setOption('width', value);
    }
    get resourcesChildren() {
        return this._getOption('resources');
    }
    set resourcesChildren(value) {
        this.setChildren('resources', value);
    }
    get viewsChildren() {
        return this._getOption('views');
    }
    set viewsChildren(value) {
        this.setChildren('views', value);
    }
    _createInstance(element, options) {
        return new devextreme_ui_scheduler__WEBPACK_IMPORTED_MODULE_0__.default(element, options);
    }
    ngOnDestroy() {
        this._destroyWidget();
    }
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        this.setupChanges('dataSource', changes);
        this.setupChanges('groups', changes);
        this.setupChanges('resources', changes);
        this.setupChanges('selectedCellData', changes);
        this.setupChanges('views', changes);
    }
    setupChanges(prop, changes) {
        if (!(prop in this._optionsToUpdate)) {
            this._idh.setup(prop, changes);
        }
    }
    ngDoCheck() {
        this._idh.doCheck('dataSource');
        this._idh.doCheck('groups');
        this._idh.doCheck('resources');
        this._idh.doCheck('selectedCellData');
        this._idh.doCheck('views');
        this._watcherHelper.checkWatchers();
        super.ngDoCheck();
        super.clearChangedOptions();
    }
    _setOption(name, value) {
        let isSetup = this._idh.setupSingle(name, value);
        let isChanged = this._idh.getChanges(name, value) !== null;
        if (isSetup || isChanged) {
            super._setOption(name, value);
        }
    }
}
/** @nocollapse */ DxSchedulerComponent.ɵfac = function DxSchedulerComponent_Factory(t) { return new (t || DxSchedulerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDifferHelper), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.TransferState), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.PLATFORM_ID)); };
/** @nocollapse */ DxSchedulerComponent.ɵcmp = /** @pureOrBreakMyCode */ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: DxSchedulerComponent, selectors: [["dx-scheduler"]], contentQueries: function DxSchedulerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵcontentQuery"](dirIndex, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceComponent, 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵcontentQuery"](dirIndex, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewComponent, 4);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.resourcesChildren = _t);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.viewsChildren = _t);
    } }, inputs: { accessKey: "accessKey", adaptivityEnabled: "adaptivityEnabled", allDayExpr: "allDayExpr", allDayPanelMode: "allDayPanelMode", appointmentCollectorTemplate: "appointmentCollectorTemplate", appointmentDragging: "appointmentDragging", appointmentTemplate: "appointmentTemplate", appointmentTooltipTemplate: "appointmentTooltipTemplate", cellDuration: "cellDuration", crossScrollingEnabled: "crossScrollingEnabled", currentDate: "currentDate", currentView: "currentView", customizeDateNavigatorText: "customizeDateNavigatorText", dataCellTemplate: "dataCellTemplate", dataSource: "dataSource", dateCellTemplate: "dateCellTemplate", dateSerializationFormat: "dateSerializationFormat", descriptionExpr: "descriptionExpr", disabled: "disabled", dropDownAppointmentTemplate: "dropDownAppointmentTemplate", editing: "editing", elementAttr: "elementAttr", endDateExpr: "endDateExpr", endDateTimeZoneExpr: "endDateTimeZoneExpr", endDayHour: "endDayHour", firstDayOfWeek: "firstDayOfWeek", focusStateEnabled: "focusStateEnabled", groupByDate: "groupByDate", groups: "groups", height: "height", hint: "hint", indicatorUpdateInterval: "indicatorUpdateInterval", max: "max", maxAppointmentsPerCell: "maxAppointmentsPerCell", min: "min", noDataText: "noDataText", recurrenceEditMode: "recurrenceEditMode", recurrenceExceptionExpr: "recurrenceExceptionExpr", recurrenceRuleExpr: "recurrenceRuleExpr", remoteFiltering: "remoteFiltering", resourceCellTemplate: "resourceCellTemplate", resources: "resources", rtlEnabled: "rtlEnabled", scrolling: "scrolling", selectedCellData: "selectedCellData", shadeUntilCurrentTime: "shadeUntilCurrentTime", showAllDayPanel: "showAllDayPanel", showCurrentTimeIndicator: "showCurrentTimeIndicator", startDateExpr: "startDateExpr", startDateTimeZoneExpr: "startDateTimeZoneExpr", startDayHour: "startDayHour", tabIndex: "tabIndex", textExpr: "textExpr", timeCellTemplate: "timeCellTemplate", timeZone: "timeZone", useDropDownViewSwitcher: "useDropDownViewSwitcher", views: "views", visible: "visible", width: "width" }, outputs: { onAppointmentAdded: "onAppointmentAdded", onAppointmentAdding: "onAppointmentAdding", onAppointmentClick: "onAppointmentClick", onAppointmentContextMenu: "onAppointmentContextMenu", onAppointmentDblClick: "onAppointmentDblClick", onAppointmentDeleted: "onAppointmentDeleted", onAppointmentDeleting: "onAppointmentDeleting", onAppointmentFormOpening: "onAppointmentFormOpening", onAppointmentRendered: "onAppointmentRendered", onAppointmentTooltipShowing: "onAppointmentTooltipShowing", onAppointmentUpdated: "onAppointmentUpdated", onAppointmentUpdating: "onAppointmentUpdating", onCellClick: "onCellClick", onCellContextMenu: "onCellContextMenu", onContentReady: "onContentReady", onDisposing: "onDisposing", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", accessKeyChange: "accessKeyChange", adaptivityEnabledChange: "adaptivityEnabledChange", allDayExprChange: "allDayExprChange", allDayPanelModeChange: "allDayPanelModeChange", appointmentCollectorTemplateChange: "appointmentCollectorTemplateChange", appointmentDraggingChange: "appointmentDraggingChange", appointmentTemplateChange: "appointmentTemplateChange", appointmentTooltipTemplateChange: "appointmentTooltipTemplateChange", cellDurationChange: "cellDurationChange", crossScrollingEnabledChange: "crossScrollingEnabledChange", currentDateChange: "currentDateChange", currentViewChange: "currentViewChange", customizeDateNavigatorTextChange: "customizeDateNavigatorTextChange", dataCellTemplateChange: "dataCellTemplateChange", dataSourceChange: "dataSourceChange", dateCellTemplateChange: "dateCellTemplateChange", dateSerializationFormatChange: "dateSerializationFormatChange", descriptionExprChange: "descriptionExprChange", disabledChange: "disabledChange", dropDownAppointmentTemplateChange: "dropDownAppointmentTemplateChange", editingChange: "editingChange", elementAttrChange: "elementAttrChange", endDateExprChange: "endDateExprChange", endDateTimeZoneExprChange: "endDateTimeZoneExprChange", endDayHourChange: "endDayHourChange", firstDayOfWeekChange: "firstDayOfWeekChange", focusStateEnabledChange: "focusStateEnabledChange", groupByDateChange: "groupByDateChange", groupsChange: "groupsChange", heightChange: "heightChange", hintChange: "hintChange", indicatorUpdateIntervalChange: "indicatorUpdateIntervalChange", maxChange: "maxChange", maxAppointmentsPerCellChange: "maxAppointmentsPerCellChange", minChange: "minChange", noDataTextChange: "noDataTextChange", recurrenceEditModeChange: "recurrenceEditModeChange", recurrenceExceptionExprChange: "recurrenceExceptionExprChange", recurrenceRuleExprChange: "recurrenceRuleExprChange", remoteFilteringChange: "remoteFilteringChange", resourceCellTemplateChange: "resourceCellTemplateChange", resourcesChange: "resourcesChange", rtlEnabledChange: "rtlEnabledChange", scrollingChange: "scrollingChange", selectedCellDataChange: "selectedCellDataChange", shadeUntilCurrentTimeChange: "shadeUntilCurrentTimeChange", showAllDayPanelChange: "showAllDayPanelChange", showCurrentTimeIndicatorChange: "showCurrentTimeIndicatorChange", startDateExprChange: "startDateExprChange", startDateTimeZoneExprChange: "startDateTimeZoneExprChange", startDayHourChange: "startDayHourChange", tabIndexChange: "tabIndexChange", textExprChange: "textExprChange", timeCellTemplateChange: "timeCellTemplateChange", timeZoneChange: "timeZoneChange", useDropDownViewSwitcherChange: "useDropDownViewSwitcherChange", viewsChange: "viewsChange", visibleChange: "visibleChange", widthChange: "widthChange" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵProvidersFeature"]([
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost,
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper,
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost,
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDifferHelper
        ]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵNgOnChangesFeature"]], decls: 0, vars: 0, template: function DxSchedulerComponent_Template(rf, ctx) { }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](DxSchedulerComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Component,
        args: [{
                selector: 'dx-scheduler',
                template: '',
                providers: [
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost,
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper,
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost,
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDifferHelper
                ]
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ElementRef }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone }, { type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost }, { type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper }, { type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDifferHelper }, { type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost }, { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.TransferState }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Inject,
                args: [_angular_core__WEBPACK_IMPORTED_MODULE_2__.PLATFORM_ID]
            }] }]; }, { accessKey: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], adaptivityEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], allDayExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], allDayPanelMode: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], appointmentCollectorTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], appointmentDragging: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], appointmentTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], appointmentTooltipTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], cellDuration: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], crossScrollingEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], currentDate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], currentView: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], customizeDateNavigatorText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], dataCellTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], dataSource: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], dateCellTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], dateSerializationFormat: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], descriptionExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], disabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], dropDownAppointmentTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], editing: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], elementAttr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], endDateExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], endDateTimeZoneExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], endDayHour: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], firstDayOfWeek: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], focusStateEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], groupByDate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], groups: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], height: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], hint: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], indicatorUpdateInterval: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], max: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], maxAppointmentsPerCell: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], min: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], noDataText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], recurrenceEditMode: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], recurrenceExceptionExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], recurrenceRuleExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], remoteFiltering: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], resourceCellTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], resources: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], rtlEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], scrolling: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], selectedCellData: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], shadeUntilCurrentTime: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], showAllDayPanel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], showCurrentTimeIndicator: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], startDateExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], startDateTimeZoneExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], startDayHour: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], tabIndex: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], textExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], timeCellTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], timeZone: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], useDropDownViewSwitcher: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], views: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], visible: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], width: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], onAppointmentAdded: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentAdding: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentContextMenu: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentDblClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentDeleted: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentDeleting: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentFormOpening: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentRendered: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentTooltipShowing: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentUpdated: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onAppointmentUpdating: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onCellClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onCellContextMenu: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onContentReady: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onDisposing: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onInitialized: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onOptionChanged: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], accessKeyChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], adaptivityEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], allDayExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], allDayPanelModeChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], appointmentCollectorTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], appointmentDraggingChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], appointmentTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], appointmentTooltipTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], cellDurationChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], crossScrollingEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], currentDateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], currentViewChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], customizeDateNavigatorTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], dataCellTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], dataSourceChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], dateCellTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], dateSerializationFormatChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], descriptionExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], disabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], dropDownAppointmentTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], editingChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], elementAttrChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], endDateExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], endDateTimeZoneExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], endDayHourChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], firstDayOfWeekChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], focusStateEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], groupByDateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], groupsChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], heightChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], hintChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], indicatorUpdateIntervalChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], maxChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], maxAppointmentsPerCellChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], minChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], noDataTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], recurrenceEditModeChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], recurrenceExceptionExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], recurrenceRuleExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], remoteFilteringChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], resourceCellTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], resourcesChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], rtlEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], scrollingChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], selectedCellDataChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], shadeUntilCurrentTimeChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], showAllDayPanelChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], showCurrentTimeIndicatorChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], startDateExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], startDateTimeZoneExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], startDayHourChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], tabIndexChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], textExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], timeCellTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], timeZoneChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], useDropDownViewSwitcherChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], viewsChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], visibleChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], widthChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], resourcesChildren: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChildren,
            args: [devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceComponent]
        }], viewsChildren: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChildren,
            args: [devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewComponent]
        }] }); })();
class DxSchedulerModule {
}
/** @nocollapse */ DxSchedulerModule.ɵfac = function DxSchedulerModule_Factory(t) { return new (t || DxSchedulerModule)(); };
/** @nocollapse */ DxSchedulerModule.ɵmod = /** @pureOrBreakMyCode */ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({ type: DxSchedulerModule });
/** @nocollapse */ DxSchedulerModule.ɵinj = /** @pureOrBreakMyCode */ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({ imports: [[
            devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule,
            devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule,
            devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule,
            devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule,
            devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule,
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule,
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule,
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule
        ], devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule,
        devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](DxSchedulerModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule,
        args: [{
                imports: [
                    devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule,
                    devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule,
                    devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule,
                    devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule,
                    devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule,
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule,
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule,
                    _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule
                ],
                declarations: [
                    DxSchedulerComponent
                ],
                exports: [
                    DxSchedulerComponent,
                    devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule,
                    devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule,
                    devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule,
                    devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule,
                    devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule,
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](DxSchedulerModule, { declarations: [DxSchedulerComponent], imports: [devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule,
        devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule,
        devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule,
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule], exports: [DxSchedulerComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule,
        devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule,
        devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule] }); })();

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ 39348:
/*!***************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/m_draggable.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _animation_position__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../animation/position */ 85094);
/* harmony import */ var _animation_translator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../animation/translator */ 10829);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/dom_adapter */ 81113);
/* harmony import */ var _core_dom_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/dom_component */ 530);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/element */ 60213);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _core_templates_empty_template__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/templates/empty_template */ 3896);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/common */ 37552);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/utils/deferred */ 97233);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_inflector__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../core/utils/inflector */ 75102);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/utils/position */ 9622);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../core/utils/size */ 84167);
/* harmony import */ var _core_utils_string__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../core/utils/string */ 13089);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../core/utils/type */ 33275);
/* harmony import */ var _core_utils_view_port__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../core/utils/view_port */ 30228);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../core/utils/window */ 88684);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../events/core/events_engine */ 99064);
/* harmony import */ var _events_drag__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../events/drag */ 85970);
/* harmony import */ var _events_pointer__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../events/pointer */ 24842);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../events/utils/index */ 3151);
/* harmony import */ var _ui_scroll_view_animator__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../ui/scroll_view/animator */ 10795);
/**
 * DevExtreme (esm/__internal/m_draggable.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
























var window = (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_18__.getWindow)();
var KEYDOWN_EVENT = "keydown";
var DRAGGABLE = "dxDraggable";
var DRAGSTART_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_20__.start, DRAGGABLE);
var DRAG_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_20__.move, DRAGGABLE);
var DRAGEND_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_20__.end, DRAGGABLE);
var DRAG_ENTER_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_20__.enter, DRAGGABLE);
var DRAGEND_LEAVE_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_20__.leave, DRAGGABLE);
var POINTERDOWN_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_21__.default.down, DRAGGABLE);
var KEYDOWN_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(KEYDOWN_EVENT, DRAGGABLE);
var CLONE_CLASS = "clone";
var targetDraggable;
var sourceDraggable;
var ANONYMOUS_TEMPLATE_NAME = "content";
var getMousePosition = event => ({
    x: event.pageX - (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(window).scrollLeft(),
    y: event.pageY - (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(window).scrollTop()
});
var GESTURE_COVER_CLASS = "dx-gesture-cover";
var OVERLAY_WRAPPER_CLASS = "dx-overlay-wrapper";
var OVERLAY_CONTENT_CLASS = "dx-overlay-content";
class ScrollHelper {
    constructor(orientation, component) {
        this._$scrollableAtPointer = null;
        this._preventScroll = true;
        this._component = component;
        if ("vertical" === orientation) {
            this._scrollValue = "scrollTop";
            this._overFlowAttr = "overflowY";
            this._sizeAttr = "height";
            this._scrollSizeProp = "scrollHeight";
            this._clientSizeProp = "clientHeight";
            this._limitProps = {
                start: "top",
                end: "bottom"
            }
        } else {
            this._scrollValue = "scrollLeft";
            this._overFlowAttr = "overflowX";
            this._sizeAttr = "width";
            this._scrollSizeProp = "scrollWidth";
            this._clientSizeProp = "clientWidth";
            this._limitProps = {
                start: "left",
                end: "right"
            }
        }
    }
    updateScrollable(elements, mousePosition) {
        var isScrollableFound = false;
        elements.some(element => {
            var $element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(element);
            var isTargetOverOverlayWrapper = $element.hasClass(OVERLAY_WRAPPER_CLASS);
            var isTargetOverOverlayContent = $element.hasClass(OVERLAY_CONTENT_CLASS);
            if (isTargetOverOverlayWrapper || isTargetOverOverlayContent) {
                return true
            }
            isScrollableFound = this._trySetScrollable(element, mousePosition);
            return isScrollableFound
        });
        if (!isScrollableFound) {
            this._$scrollableAtPointer = null;
            this._scrollSpeed = 0
        }
    }
    isScrolling() {
        return !!this._scrollSpeed
    }
    isScrollable($element) {
        return ("auto" === $element.css(this._overFlowAttr) || $element.hasClass("dx-scrollable-container")) && $element.prop(this._scrollSizeProp) > Math.ceil("width" === this._sizeAttr ? (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getWidth)($element) : (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getHeight)($element))
    }
    _trySetScrollable(element, mousePosition) {
        var $element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(element);
        var distanceToBorders;
        var sensitivity = this._component.option("scrollSensitivity");
        var isScrollable = this.isScrollable($element);
        if (isScrollable) {
            distanceToBorders = this._calculateDistanceToBorders($element, mousePosition);
            if (sensitivity > distanceToBorders[this._limitProps.start]) {
                if (!this._preventScroll) {
                    this._scrollSpeed = -this._calculateScrollSpeed(distanceToBorders[this._limitProps.start]);
                    this._$scrollableAtPointer = $element
                }
            } else if (sensitivity > distanceToBorders[this._limitProps.end]) {
                if (!this._preventScroll) {
                    this._scrollSpeed = this._calculateScrollSpeed(distanceToBorders[this._limitProps.end]);
                    this._$scrollableAtPointer = $element
                }
            } else {
                isScrollable = false;
                this._preventScroll = false
            }
        }
        return isScrollable
    }
    _calculateDistanceToBorders($area, mousePosition) {
        var area = $area.get(0);
        var areaBoundingRect;
        if (area) {
            areaBoundingRect = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_13__.getBoundingRect)(area);
            return {
                left: mousePosition.x - areaBoundingRect.left,
                top: mousePosition.y - areaBoundingRect.top,
                right: areaBoundingRect.right - mousePosition.x,
                bottom: areaBoundingRect.bottom - mousePosition.y
            }
        }
        return {}
    }
    _calculateScrollSpeed(distance) {
        var component = this._component;
        var sensitivity = component.option("scrollSensitivity");
        var maxSpeed = component.option("scrollSpeed");
        return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed)
    }
    scrollByStep() {
        if (this._$scrollableAtPointer && this._scrollSpeed) {
            if (this._$scrollableAtPointer.hasClass("dx-scrollable-container")) {
                var $scrollable = this._$scrollableAtPointer.closest(".dx-scrollable");
                var scrollableInstance = $scrollable.data("dxScrollable") || $scrollable.data("dxScrollView");
                if (scrollableInstance) {
                    var nextScrollPosition = scrollableInstance.scrollOffset()[this._limitProps.start] + this._scrollSpeed;
                    scrollableInstance.scrollTo({
                        [this._limitProps.start]: nextScrollPosition
                    })
                }
            } else {
                var _nextScrollPosition = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;
                this._$scrollableAtPointer[this._scrollValue](_nextScrollPosition)
            }
            var dragMoveArgs = this._component._dragMoveArgs;
            if (dragMoveArgs) {
                this._component._dragMoveHandler(dragMoveArgs)
            }
        }
    }
    reset() {
        this._$scrollableAtPointer = null;
        this._scrollSpeed = 0;
        this._preventScroll = true
    }
    isOutsideScrollable($scrollable, event) {
        if (!$scrollable) {
            return false
        }
        var scrollableSize = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_13__.getBoundingRect)($scrollable.get(0));
        var start = scrollableSize[this._limitProps.start];
        var size = scrollableSize[this._sizeAttr];
        var mousePosition = getMousePosition(event);
        var location = "width" === this._sizeAttr ? mousePosition.x : mousePosition.y;
        return location < start || location > start + size
    }
}
var ScrollAnimator = _ui_scroll_view_animator__WEBPACK_IMPORTED_MODULE_23__.default.inherit({
    ctor(strategy) {
        this.callBase();
        this._strategy = strategy
    },
    _step() {
        var horizontalScrollHelper = this._strategy._horizontalScrollHelper;
        var verticalScrollHelper = this._strategy._verticalScrollHelper;
        horizontalScrollHelper && horizontalScrollHelper.scrollByStep();
        verticalScrollHelper && verticalScrollHelper.scrollByStep()
    }
});
var Draggable = _core_dom_component__WEBPACK_IMPORTED_MODULE_5__.default.inherit({
    reset: _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.noop,
    dragMove: _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.noop,
    dragEnter: _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.noop,
    dragLeave: _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.noop,
    dragEnd(sourceEvent) {
        var sourceDraggable = this._getSourceDraggable();
        sourceDraggable._fireRemoveEvent(sourceEvent);
        return (0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.Deferred)().resolve()
    },
    _fireRemoveEvent: _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.noop,
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_11__.extend)(this.callBase(), {
            onDragStart: null,
            onDragMove: null,
            onDragEnd: null,
            onDragEnter: null,
            onDragLeave: null,
            onDragCancel: null,
            onCancelByEsc: false,
            onDrop: null,
            immediate: true,
            dragDirection: "both",
            boundary: void 0,
            boundOffset: 0,
            allowMoveByClick: false,
            itemData: null,
            container: void 0,
            dragTemplate: void 0,
            contentTemplate: "content",
            handle: "",
            filter: "",
            clone: false,
            autoScroll: true,
            scrollSpeed: 30,
            scrollSensitivity: 60,
            group: void 0,
            data: void 0
        })
    },
    _setOptionsByReference() {
        this.callBase.apply(this, arguments);
        (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_11__.extend)(this._optionsByReference, {
            component: true,
            group: true,
            itemData: true,
            data: true
        })
    },
    _init() {
        this.callBase();
        this._attachEventHandlers();
        this._scrollAnimator = new ScrollAnimator(this);
        this._horizontalScrollHelper = new ScrollHelper("horizontal", this);
        this._verticalScrollHelper = new ScrollHelper("vertical", this);
        this._initScrollTop = 0;
        this._initScrollLeft = 0
    },
    _normalizeCursorOffset(offset) {
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isObject)(offset)) {
            offset = {
                h: offset.x,
                v: offset.y
            }
        }
        offset = (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_9__.splitPair)(offset).map(value => parseFloat(value));
        return {
            left: offset[0],
            top: 1 === offset.length ? offset[0] : offset[1]
        }
    },
    _getNormalizedCursorOffset(offset, options) {
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isFunction)(offset)) {
            offset = offset.call(this, options)
        }
        return this._normalizeCursorOffset(offset)
    },
    _calculateElementOffset(options) {
        var elementOffset;
        var dragElementOffset;
        var {
            event: event
        } = options;
        var $element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(options.itemElement);
        var $dragElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(options.dragElement);
        var isCloned = this._dragElementIsCloned();
        var cursorOffset = this.option("cursorOffset");
        var normalizedCursorOffset = {
            left: 0,
            top: 0
        };
        var currentLocate = this._initialLocate = (0,_animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($dragElement);
        if (isCloned || options.initialOffset || cursorOffset) {
            elementOffset = options.initialOffset || $element.offset();
            if (cursorOffset) {
                normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);
                if (isFinite(normalizedCursorOffset.left)) {
                    elementOffset.left = event.pageX
                }
                if (isFinite(normalizedCursorOffset.top)) {
                    elementOffset.top = event.pageY
                }
            }
            dragElementOffset = $dragElement.offset();
            elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;
            elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left
        }
        return elementOffset
    },
    _initPosition(options) {
        var $dragElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(options.dragElement);
        var elementOffset = this._calculateElementOffset(options);
        if (elementOffset) {
            this._move(elementOffset, $dragElement)
        }
        this._startPosition = (0,_animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($dragElement)
    },
    _startAnimator() {
        if (!this._scrollAnimator.inProgress()) {
            this._scrollAnimator.start()
        }
    },
    _stopAnimator() {
        this._scrollAnimator.stop()
    },
    _addWidgetPrefix(className) {
        var componentName = this.NAME;
        return (0,_core_utils_inflector__WEBPACK_IMPORTED_MODULE_12__.dasherize)(componentName) + (className ? "-".concat(className) : "")
    },
    _getItemsSelector() {
        return this.option("filter") || ""
    },
    _$content() {
        var $element = this.$element();
        var $wrapper = $element.children(".dx-template-wrapper");
        return $wrapper.length ? $wrapper : $element
    },
    _attachEventHandlers() {
        if (this.option("disabled")) {
            return
        }
        var $element = this._$content();
        var itemsSelector = this._getItemsSelector();
        var allowMoveByClick = this.option("allowMoveByClick");
        var data = {
            direction: this.option("dragDirection"),
            immediate: this.option("immediate"),
            checkDropTarget: ($target, event) => {
                var targetGroup = this.option("group");
                var sourceGroup = this._getSourceDraggable().option("group");
                var $scrollable = this._getScrollable($target);
                if (this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {
                    return false
                }
                return sourceGroup && sourceGroup === targetGroup
            }
        };
        if (allowMoveByClick) {
            $element = this._getArea();
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__.default.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this))
        }
        if (">" === itemsSelector[0]) {
            itemsSelector = itemsSelector.slice(1)
        }
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__.default.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__.default.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__.default.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__.default.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__.default.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this));
        if (this.option("onCancelByEsc")) {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__.default.on($element, KEYDOWN_EVENT_NAME, this._keydownHandler.bind(this))
        }
    },
    _dragElementIsCloned() {
        return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS))
    },
    _getDragTemplateArgs($element, $container) {
        return {
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_6__.getPublicElement)($container),
            model: {
                itemData: this.option("itemData"),
                itemElement: (0,_core_element__WEBPACK_IMPORTED_MODULE_6__.getPublicElement)($element)
            }
        }
    },
    _createDragElement($element) {
        var result = $element;
        var clone = this.option("clone");
        var $container = this._getContainer();
        var template = this.option("dragTemplate");
        if (template) {
            template = this._getTemplate(template);
            result = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)("<div>").appendTo($container);
            template.render(this._getDragTemplateArgs($element, result))
        } else if (clone) {
            result = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)("<div>").appendTo($container);
            $element.clone().css({
                width: $element.css("width"),
                height: $element.css("height")
            }).appendTo(result)
        }
        return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass("dx-rtl", this.option("rtlEnabled"))
    },
    _resetDragElement() {
        if (this._dragElementIsCloned()) {
            this._$dragElement.remove()
        } else {
            this._toggleDraggingClass(false)
        }
        this._$dragElement = null
    },
    _resetSourceElement() {
        this._toggleDragSourceClass(false);
        this._$sourceElement = null
    },
    _detachEventHandlers() {
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__.default.off(this._$content(), ".".concat(DRAGGABLE));
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__.default.off(this._getArea(), ".".concat(DRAGGABLE))
    },
    _move(position, $element) {
        (0,_animation_translator__WEBPACK_IMPORTED_MODULE_2__.move)($element || this._$dragElement, position)
    },
    _getDraggableElement(e) {
        var $sourceElement = this._getSourceElement();
        if ($sourceElement) {
            return $sourceElement
        }
        var allowMoveByClick = this.option("allowMoveByClick");
        if (allowMoveByClick) {
            return this.$element()
        }
        var $target = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(e && e.target);
        var itemsSelector = this._getItemsSelector();
        if (">" === itemsSelector[0]) {
            var $items = this._$content().find(itemsSelector);
            if (!$items.is($target)) {
                $target = $target.closest($items)
            }
        }
        return $target
    },
    _getSourceElement() {
        var draggable = this._getSourceDraggable();
        return draggable._$sourceElement
    },
    _pointerDownHandler(e) {
        if ((0,_events_utils_index__WEBPACK_IMPORTED_MODULE_22__.needSkipEvent)(e)) {
            return
        }
        var position = {};
        var $element = this.$element();
        var dragDirection = this.option("dragDirection");
        if ("horizontal" === dragDirection || "both" === dragDirection) {
            position.left = e.pageX - $element.offset().left + (0,_animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($element).left - (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getWidth)($element) / 2
        }
        if ("vertical" === dragDirection || "both" === dragDirection) {
            position.top = e.pageY - $element.offset().top + (0,_animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($element).top - (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getHeight)($element) / 2
        }
        this._move(position, $element);
        this._getAction("onDragMove")(this._getEventArgs(e))
    },
    _isValidElement(event, $element) {
        var handle = this.option("handle");
        var $target = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(event.originalEvent && event.originalEvent.target);
        if (handle && !$target.closest(handle).length) {
            return false
        }
        if (!$element.length) {
            return false
        }
        return !$element.is(".dx-state-disabled, .dx-state-disabled *")
    },
    _dragStartHandler(e) {
        var $element = this._getDraggableElement(e);
        this.dragInProgress = true;
        if (!this._isValidElement(e, $element)) {
            e.cancel = true;
            return
        }
        if (this._$sourceElement) {
            return
        }
        var dragStartArgs = this._getDragStartArgs(e, $element);
        this._getAction("onDragStart")(dragStartArgs);
        if (dragStartArgs.cancel) {
            e.cancel = true;
            return
        }
        this.option("itemData", dragStartArgs.itemData);
        this._setSourceDraggable();
        this._$sourceElement = $element;
        var initialOffset = $element.offset();
        if (!this._hasClonedDraggable() && this.option("autoScroll")) {
            this._initScrollTop = this._getScrollableScrollTop();
            this._initScrollLeft = this._getScrollableScrollLeft();
            initialOffset = this._getDraggableElementOffset(initialOffset.left, initialOffset.top)
        }
        var $dragElement = this._$dragElement = this._createDragElement($element);
        this._toggleDraggingClass(true);
        this._toggleDragSourceClass(true);
        this._setGestureCoverCursor($dragElement.children());
        var isFixedPosition = "fixed" === $dragElement.css("position");
        this._initPosition((0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_11__.extend)({}, dragStartArgs, {
            dragElement: $dragElement.get(0),
            initialOffset: isFixedPosition && initialOffset
        }));
        this._getAction("onDraggableElementShown")((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, dragStartArgs), {
            dragElement: $dragElement
        }));
        var $area = this._getArea();
        var areaOffset = this._getAreaOffset($area);
        var boundOffset = this._getBoundOffset();
        var areaWidth = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getOuterWidth)($area);
        var areaHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getOuterHeight)($area);
        var elementWidth = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getWidth)($dragElement);
        var elementHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getHeight)($dragElement);
        var startOffset_left = $dragElement.offset().left - areaOffset.left,
            startOffset_top = $dragElement.offset().top - areaOffset.top;
        if ($area.length) {
            e.maxLeftOffset = startOffset_left - boundOffset.left;
            e.maxRightOffset = areaWidth - startOffset_left - elementWidth - boundOffset.right;
            e.maxTopOffset = startOffset_top - boundOffset.top;
            e.maxBottomOffset = areaHeight - startOffset_top - elementHeight - boundOffset.bottom
        }
        if (this.option("autoScroll")) {
            this._startAnimator()
        }
    },
    _getAreaOffset($area) {
        var offset = $area && _animation_position__WEBPACK_IMPORTED_MODULE_1__.default.offset($area);
        return offset || {
            left: 0,
            top: 0
        }
    },
    _toggleDraggingClass(value) {
        this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix("dragging"), value)
    },
    _toggleDragSourceClass(value, $element) {
        var $sourceElement = $element || this._$sourceElement;
        $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix("source"), value)
    },
    _setGestureCoverCursor($element) {
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(".".concat(GESTURE_COVER_CLASS)).css("cursor", $element.css("cursor"))
    },
    _getBoundOffset() {
        var boundOffset = this.option("boundOffset");
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isFunction)(boundOffset)) {
            boundOffset = boundOffset.call(this)
        }
        return (0,_core_utils_string__WEBPACK_IMPORTED_MODULE_15__.quadToObject)(boundOffset)
    },
    _getArea() {
        var area = this.option("boundary");
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isFunction)(area)) {
            area = area.call(this)
        }
        return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(area)
    },
    _getContainer() {
        var container = this.option("container");
        if (void 0 === container) {
            container = (0,_core_utils_view_port__WEBPACK_IMPORTED_MODULE_17__.value)()
        }
        return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(container)
    },
    _getDraggableElementOffset(initialOffsetX, initialOffsetY) {
        var _a, _b, _c, _d;
        var initScrollTop = this._initScrollTop;
        var initScrollLeft = this._initScrollLeft;
        var scrollTop = this._getScrollableScrollTop();
        var scrollLeft = this._getScrollableScrollLeft();
        var elementPosition = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(this.element()).css("position");
        var isFixedPosition = "fixed" === elementPosition;
        var result = {
            left: (null !== (_b = null === (_a = this._startPosition) || void 0 === _a ? void 0 : _a.left) && void 0 !== _b ? _b : 0) + initialOffsetX,
            top: (null !== (_d = null === (_c = this._startPosition) || void 0 === _c ? void 0 : _c.top) && void 0 !== _d ? _d : 0) + initialOffsetY
        };
        if (isFixedPosition || this._hasClonedDraggable()) {
            return result
        }
        return {
            left: (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isNumeric)(scrollLeft) ? result.left + scrollLeft - initScrollLeft : result.left,
            top: (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isNumeric)(scrollTop) ? result.top + scrollTop - initScrollTop : result.top
        }
    },
    _hasClonedDraggable() {
        return this.option("clone") || this.option("dragTemplate")
    },
    _dragMoveHandler(e) {
        this._dragMoveArgs = e;
        if (!this._$dragElement) {
            e.cancel = true;
            return
        }
        var offset = this._getDraggableElementOffset(e.offset.x, e.offset.y);
        this._move(offset);
        this._updateScrollable(e);
        var eventArgs = this._getEventArgs(e);
        this._getAction("onDragMove")(eventArgs);
        if (true === eventArgs.cancel) {
            return
        }
        var targetDraggable = this._getTargetDraggable();
        targetDraggable.dragMove(e, scrollBy)
    },
    _updateScrollable(e) {
        if (this.option("autoScroll")) {
            var mousePosition = getMousePosition(e);
            var allObjects = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__.default.elementsFromPoint(mousePosition.x, mousePosition.y, this.$element().get(0));
            this._verticalScrollHelper.updateScrollable(allObjects, mousePosition);
            this._horizontalScrollHelper.updateScrollable(allObjects, mousePosition)
        }
    },
    _getScrollable($element) {
        var $scrollable;
        $element.parents().toArray().some(parent => {
            var $parent = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(parent);
            if (this._horizontalScrollHelper.isScrollable($parent) || this._verticalScrollHelper.isScrollable($parent)) {
                $scrollable = $parent;
                return true
            }
            return false
        });
        return $scrollable
    },
    _getScrollableScrollTop() {
        var _a, _b;
        return null !== (_b = null === (_a = this._getScrollable((0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(this.element()))) || void 0 === _a ? void 0 : _a.scrollTop()) && void 0 !== _b ? _b : 0
    },
    _getScrollableScrollLeft() {
        var _a, _b;
        return null !== (_b = null === (_a = this._getScrollable((0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(this.element()))) || void 0 === _a ? void 0 : _a.scrollLeft()) && void 0 !== _b ? _b : 0
    },
    _defaultActionArgs() {
        var args = this.callBase.apply(this, arguments);
        var component = this.option("component");
        if (component) {
            args.component = component;
            args.element = component.element()
        }
        return args
    },
    _getEventArgs(e) {
        var sourceDraggable = this._getSourceDraggable();
        var targetDraggable = this._getTargetDraggable();
        return {
            event: e,
            itemData: sourceDraggable.option("itemData"),
            itemElement: (0,_core_element__WEBPACK_IMPORTED_MODULE_6__.getPublicElement)(sourceDraggable._$sourceElement),
            fromComponent: sourceDraggable.option("component") || sourceDraggable,
            toComponent: targetDraggable.option("component") || targetDraggable,
            fromData: sourceDraggable.option("data"),
            toData: targetDraggable.option("data")
        }
    },
    _getDragStartArgs(e, $itemElement) {
        var args = this._getEventArgs(e);
        return {
            event: args.event,
            itemData: args.itemData,
            itemElement: $itemElement,
            fromData: args.fromData
        }
    },
    _revertItemToInitialPosition() {
        !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement)
    },
    _dragEndHandler(e) {
        var d = (0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.Deferred)();
        var dragEndEventArgs = this._getEventArgs(e);
        var dropEventArgs = this._getEventArgs(e);
        var targetDraggable = this._getTargetDraggable();
        var needRevertPosition = true;
        this.dragInProgress = false;
        try {
            this._getAction("onDragEnd")(dragEndEventArgs)
        } finally {
            (0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.when)((0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.fromPromise)(dragEndEventArgs.cancel)).done(cancel => {
                if (!cancel) {
                    if (targetDraggable !== this) {
                        targetDraggable._getAction("onDrop")(dropEventArgs)
                    }
                    if (!dropEventArgs.cancel) {
                        needRevertPosition = false;
                        (0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.when)((0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.fromPromise)(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);
                        return
                    }
                }
                d.resolve()
            }).fail(d.resolve);
            d.done(() => {
                if (needRevertPosition) {
                    this._revertItemToInitialPosition()
                }
                this._resetDragOptions(targetDraggable)
            })
        }
    },
    _isTargetOverAnotherDraggable(e) {
        var sourceDraggable = this._getSourceDraggable();
        if (this === sourceDraggable) {
            return false
        }
        var $dragElement = sourceDraggable._$dragElement;
        var $sourceDraggableElement = sourceDraggable.$element();
        var $targetDraggableElement = this.$element();
        var mousePosition = getMousePosition(e);
        var elements = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__.default.elementsFromPoint(mousePosition.x, mousePosition.y, this.element());
        var firstWidgetElement = elements.filter(element => {
            var $element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(element);
            if ($element.hasClass(this._addWidgetPrefix())) {
                return !$element.closest($dragElement).length
            }
            return false
        })[0];
        var $sourceElement = this._getSourceElement();
        var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);
        var isTargetOverNestedDraggable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(firstWidgetElement).closest($sourceElement).length;
        return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable
    },
    _dragEnterHandler(e) {
        this._fireDragEnterEvent(e);
        if (this._isTargetOverAnotherDraggable(e)) {
            this._setTargetDraggable()
        }
        var sourceDraggable = this._getSourceDraggable();
        sourceDraggable.dragEnter(e)
    },
    _dragLeaveHandler(e) {
        this._fireDragLeaveEvent(e);
        this._resetTargetDraggable();
        if (this !== this._getSourceDraggable()) {
            this.reset()
        }
        var sourceDraggable = this._getSourceDraggable();
        sourceDraggable.dragLeave(e)
    },
    _keydownHandler(e) {
        if (this.dragInProgress && "Escape" === e.key) {
            this._keydownEscapeHandler(e)
        }
    },
    _keydownEscapeHandler(e) {
        var $sourceElement = this._getSourceElement();
        if (!$sourceElement) {
            return
        }
        var dragCancelEventArgs = this._getEventArgs(e);
        this._getAction("onDragCancel")(dragCancelEventArgs);
        if (dragCancelEventArgs.cancel) {
            return
        }
        this.dragInProgress = false;
        null === sourceDraggable || void 0 === sourceDraggable ? void 0 : sourceDraggable._toggleDraggingClass(false);
        this._detachEventHandlers();
        this._revertItemToInitialPosition();
        var targetDraggable = this._getTargetDraggable();
        this._resetDragOptions(targetDraggable);
        this._attachEventHandlers()
    },
    _getAction(name) {
        return this["_".concat(name, "Action")] || this._createActionByOption(name)
    },
    _getAnonymousTemplateName: () => ANONYMOUS_TEMPLATE_NAME,
    _initTemplates() {
        if (!this.option("contentTemplate")) {
            return
        }
        this._templateManager.addDefaultTemplates({
            content: new _core_templates_empty_template__WEBPACK_IMPORTED_MODULE_8__.EmptyTemplate
        });
        this.callBase.apply(this, arguments)
    },
    _render() {
        this.callBase();
        this.$element().addClass(this._addWidgetPrefix());
        var transclude = this._templateManager.anonymousTemplateName === this.option("contentTemplate");
        var template = this._getTemplateByOption("contentTemplate");
        if (template) {
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)(template.render({
                container: this.element(),
                transclude: transclude
            }))
        }
    },
    _optionChanged(args) {
        var {
            name: name
        } = args;
        switch (name) {
            case "onDragStart":
            case "onDragMove":
            case "onDragEnd":
            case "onDrop":
            case "onDragEnter":
            case "onDragLeave":
            case "onDragCancel":
            case "onDraggableElementShown":
                this["_".concat(name, "Action")] = this._createActionByOption(name);
                break;
            case "dragTemplate":
            case "contentTemplate":
            case "container":
            case "clone":
                break;
            case "allowMoveByClick":
            case "dragDirection":
            case "disabled":
            case "boundary":
            case "filter":
            case "immediate":
                this._resetDragElement();
                this._detachEventHandlers();
                this._attachEventHandlers();
                break;
            case "onCancelByEsc":
                this._keydownHandler();
                break;
            case "autoScroll":
                this._verticalScrollHelper.reset();
                this._horizontalScrollHelper.reset();
                break;
            case "scrollSensitivity":
            case "scrollSpeed":
            case "boundOffset":
            case "handle":
            case "group":
            case "data":
            case "itemData":
                break;
            default:
                this.callBase(args)
        }
    },
    _getTargetDraggable() {
        return targetDraggable || this
    },
    _getSourceDraggable() {
        return sourceDraggable || this
    },
    _setTargetDraggable() {
        var currentGroup = this.option("group");
        var sourceDraggable = this._getSourceDraggable();
        if (currentGroup && currentGroup === sourceDraggable.option("group")) {
            targetDraggable = this
        }
    },
    _setSourceDraggable() {
        sourceDraggable = this
    },
    _resetSourceDraggable() {
        sourceDraggable = null
    },
    _resetTargetDraggable() {
        targetDraggable = null
    },
    _resetDragOptions(targetDraggable) {
        this.reset();
        targetDraggable.reset();
        this._stopAnimator();
        this._horizontalScrollHelper.reset();
        this._verticalScrollHelper.reset();
        this._resetDragElement();
        this._resetSourceElement();
        this._resetTargetDraggable();
        this._resetSourceDraggable()
    },
    _dispose() {
        this.callBase();
        this._detachEventHandlers();
        this._resetDragElement();
        this._resetTargetDraggable();
        this._resetSourceDraggable();
        this._$sourceElement = null;
        this._stopAnimator()
    },
    _fireDragEnterEvent(sourceEvent) {
        var args = this._getEventArgs(sourceEvent);
        this._getAction("onDragEnter")(args)
    },
    _fireDragLeaveEvent(sourceEvent) {
        var args = this._getEventArgs(sourceEvent);
        this._getAction("onDragLeave")(args)
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_3__.default)(DRAGGABLE, Draggable);
/* harmony default export */ __webpack_exports__["default"] = (Draggable);


/***/ }),

/***/ 30892:
/*!**************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointment_popup/m_form.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "APPOINTMENT_FORM_GROUP_NAMES": function() { return /* binding */ APPOINTMENT_FORM_GROUP_NAMES; },
/* harmony export */   "AppointmentForm": function() { return /* binding */ AppointmentForm; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _ui_scheduler_recurrence_editor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../ui/scheduler/recurrence_editor */ 68632);
/* harmony import */ var _ui_text_area__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../ui/text_area */ 46740);
/* harmony import */ var _ui_tag_box__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../ui/tag_box */ 77100);
/* harmony import */ var _ui_switch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../ui/switch */ 98222);
/* harmony import */ var _ui_select_box__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../ui/select_box */ 67373);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/devices */ 41881);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../core/utils/date_serialization */ 37043);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _data_data_source__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../data/data_source */ 69379);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../localization/message */ 19336);
/* harmony import */ var _renovation_ui_scheduler_utils_semaphore_semaphore__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/utils/semaphore/semaphore */ 26571);
/* harmony import */ var _ui_form__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../ui/form */ 19128);
/* harmony import */ var _ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../ui/scheduler/appointmentAdapter */ 50760);
/* harmony import */ var _timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../timezones/m_utils_timezones_data */ 78514);
/**
 * DevExtreme (esm/__internal/scheduler/appointment_popup/m_form.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

















var SCREEN_SIZE_OF_SINGLE_COLUMN = 600;
var APPOINTMENT_FORM_GROUP_NAMES = {
    Main: "mainGroup",
    Recurrence: "recurrenceGroup"
};
var getStartDateWithStartHour = (startDate, startDayHour) => new Date(new Date(startDate).setHours(startDayHour));
var validateAppointmentFormDate = (editor, value, previousValue) => {
    var isCurrentDateCorrect = null === value || !!value;
    var isPreviousDateCorrect = null === previousValue || !!previousValue;
    if (!isCurrentDateCorrect && isPreviousDateCorrect) {
        editor.option("value", previousValue)
    }
};
var updateRecurrenceItemVisibility = (recurrenceRuleExpr, value, form) => {
    var _a;
    form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, "visible", value);
    !value && form.updateData(recurrenceRuleExpr, "");
    null === (_a = form.getEditor(recurrenceRuleExpr)) || void 0 === _a ? void 0 : _a.changeValueByVisibility(value)
};
var createDateBoxEditor = (dataField, colSpan, firstDayOfWeek, label, onValueChanged) => ({
    editorType: "dxDateBox",
    dataField: dataField,
    colSpan: colSpan,
    label: {
        text: _localization_message__WEBPACK_IMPORTED_MODULE_12__.default.format(label)
    },
    validationRules: [{
        type: "required"
    }],
    editorOptions: {
        width: "100%",
        calendarOptions: {
            firstDayOfWeek: firstDayOfWeek
        },
        onValueChanged: onValueChanged,
        useMaskBehavior: true
    }
});
class AppointmentForm {
    constructor(scheduler) {
        this.scheduler = scheduler;
        this.form = null;
        this.semaphore = new _renovation_ui_scheduler_utils_semaphore_semaphore__WEBPACK_IMPORTED_MODULE_13__.Semaphore
    }
    get dxForm() {
        return this.form
    }
    set readOnly(value) {
        this.form.option("readOnly", value);
        var {
            recurrenceRuleExpr: recurrenceRuleExpr
        } = this.scheduler.getDataAccessors().expr;
        var recurrenceEditor = this.form.getEditor(recurrenceRuleExpr);
        null === recurrenceEditor || void 0 === recurrenceEditor ? void 0 : recurrenceEditor.option("readOnly", value)
    }
    get formData() {
        return this.form.option("formData")
    }
    set formData(value) {
        this.form.option("formData", value)
    }
    create(triggerResize, changeSize, formData) {
        var {
            allowTimeZoneEditing: allowTimeZoneEditing
        } = this.scheduler.getEditingConfig();
        var {
            expr: expr
        } = this.scheduler.getDataAccessors();
        var recurrenceEditorVisibility = !!formData[expr.recurrenceRuleExpr];
        var colSpan = recurrenceEditorVisibility ? 1 : 2;
        var mainItems = [...this._createMainItems(expr, triggerResize, changeSize, allowTimeZoneEditing), ...this.scheduler.createResourceEditorModel()];
        changeSize(recurrenceEditorVisibility);
        var items = [{
            itemType: "group",
            name: APPOINTMENT_FORM_GROUP_NAMES.Main,
            colCountByScreen: {
                lg: 2,
                xs: 1
            },
            colSpan: colSpan,
            items: mainItems
        }, {
            itemType: "group",
            name: APPOINTMENT_FORM_GROUP_NAMES.Recurrence,
            visible: recurrenceEditorVisibility,
            colSpan: colSpan,
            items: this._createRecurrenceEditor(expr)
        }];
        var element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_7__.default)("<div>");
        this.form = this.scheduler.createComponent(element, _ui_form__WEBPACK_IMPORTED_MODULE_14__.default, {
            items: items,
            showValidationSummary: true,
            scrollingEnabled: true,
            colCount: "auto",
            colCountByScreen: {
                lg: 2,
                xs: 1
            },
            formData: formData,
            showColonAfterLabel: false,
            labelLocation: "top",
            customizeItem: e => {
                if (this.form && "group" === e.itemType) {
                    var dataExprs = this.scheduler.getDataAccessors().expr;
                    var startDate = new Date(this.formData[dataExprs.startDateExpr]);
                    var endDate = new Date(this.formData[dataExprs.endDateExpr]);
                    var startTimeZoneEditor = e.items.find(i => i.dataField === dataExprs.startDateTimeZoneExpr);
                    var endTimeZoneEditor = e.items.find(i => i.dataField === dataExprs.endDateTimeZoneExpr);
                    if (startTimeZoneEditor) {
                        startTimeZoneEditor.editorOptions.dataSource = this.createTimeZoneDataSource(startDate)
                    }
                    if (endTimeZoneEditor) {
                        endTimeZoneEditor.editorOptions.dataSource = this.createTimeZoneDataSource(endDate)
                    }
                }
            },
            screenByWidth: width => width < SCREEN_SIZE_OF_SINGLE_COLUMN || "desktop" !== _core_devices__WEBPACK_IMPORTED_MODULE_6__.default.current().deviceType ? "xs" : "lg"
        })
    }
    createTimeZoneDataSource(date) {
        return new _data_data_source__WEBPACK_IMPORTED_MODULE_11__.default({
            store: _timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_16__.default.getDisplayedTimeZones(date),
            paginate: true,
            pageSize: 10
        })
    }
    _createAppointmentAdapter(rawAppointment) {
        return (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_15__.createAppointmentAdapter)(rawAppointment, this.scheduler.getDataAccessors())
    }
    _dateBoxValueChanged(args, dateExpr, isNeedCorrect) {
        validateAppointmentFormDate(args.component, args.value, args.previousValue);
        var value = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_9__.default.deserializeDate(args.value);
        var previousValue = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_9__.default.deserializeDate(args.previousValue);
        var dateEditor = this.form.getEditor(dateExpr);
        var dateValue = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_9__.default.deserializeDate(dateEditor.option("value"));
        if (this.semaphore.isFree() && dateValue && value && isNeedCorrect(dateValue, value)) {
            var duration = previousValue ? dateValue.getTime() - previousValue.getTime() : 0;
            dateEditor.option("value", new Date(value.getTime() + duration))
        }
    }
    _createTimezoneEditor(timeZoneExpr, secondTimeZoneExpr, visibleIndex, colSpan, isMainTimeZone) {
        var visible = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : false;
        var noTzTitle = _localization_message__WEBPACK_IMPORTED_MODULE_12__.default.format("dxScheduler-noTimezoneTitle");
        return {
            dataField: timeZoneExpr,
            editorType: "dxSelectBox",
            visibleIndex: visibleIndex,
            colSpan: colSpan,
            label: {
                text: " "
            },
            editorOptions: {
                displayExpr: "title",
                valueExpr: "id",
                placeholder: noTzTitle,
                searchEnabled: true,
                onValueChanged: args => {
                    var {
                        form: form
                    } = this;
                    var secondTimezoneEditor = form.getEditor(secondTimeZoneExpr);
                    if (isMainTimeZone) {
                        secondTimezoneEditor.option("value", args.value)
                    }
                }
            },
            visible: visible
        }
    }
    _createDateBoxItems(dataExprs, allowTimeZoneEditing) {
        var colSpan = allowTimeZoneEditing ? 2 : 1;
        var firstDayOfWeek = this.scheduler.getFirstDayOfWeek();
        return [createDateBoxEditor(dataExprs.startDateExpr, colSpan, firstDayOfWeek, "dxScheduler-editorLabelStartDate", args => {
            this._dateBoxValueChanged(args, dataExprs.endDateExpr, (endValue, startValue) => endValue < startValue)
        }), this._createTimezoneEditor(dataExprs.startDateTimeZoneExpr, dataExprs.endDateTimeZoneExpr, 1, colSpan, true, allowTimeZoneEditing), createDateBoxEditor(dataExprs.endDateExpr, colSpan, firstDayOfWeek, "dxScheduler-editorLabelEndDate", args => {
            this._dateBoxValueChanged(args, dataExprs.startDateExpr, (startValue, endValue) => endValue < startValue)
        }), this._createTimezoneEditor(dataExprs.endDateTimeZoneExpr, dataExprs.startDateTimeZoneExpr, 3, colSpan, false, allowTimeZoneEditing)]
    }
    _changeFormItemDateType(itemPath, isAllDay) {
        var itemEditorOptions = this.form.itemOption(itemPath).editorOptions;
        var type = isAllDay ? "date" : "datetime";
        var newEditorOption = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, itemEditorOptions), {
            type: type
        });
        this.form.itemOption(itemPath, "editorOptions", newEditorOption)
    }
    _createMainItems(dataExprs, triggerResize, changeSize, allowTimeZoneEditing) {
        return [{
            dataField: dataExprs.textExpr,
            editorType: "dxTextBox",
            colSpan: 2,
            label: {
                text: _localization_message__WEBPACK_IMPORTED_MODULE_12__.default.format("dxScheduler-editorLabelTitle")
            }
        }, {
            itemType: "group",
            colSpan: 2,
            colCountByScreen: {
                lg: 2,
                xs: 1
            },
            items: this._createDateBoxItems(dataExprs, allowTimeZoneEditing)
        }, {
            itemType: "group",
            colSpan: 2,
            colCountByScreen: {
                lg: 2,
                xs: 2
            },
            items: [{
                dataField: dataExprs.allDayExpr,
                cssClass: "dx-appointment-form-switch",
                editorType: "dxSwitch",
                label: {
                    text: _localization_message__WEBPACK_IMPORTED_MODULE_12__.default.format("dxScheduler-allDay"),
                    location: "right"
                },
                editorOptions: {
                    onValueChanged: args => {
                        var {
                            value: value
                        } = args;
                        var startDateEditor = this.form.getEditor(dataExprs.startDateExpr);
                        var endDateEditor = this.form.getEditor(dataExprs.endDateExpr);
                        var startDate = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_9__.default.deserializeDate(startDateEditor.option("value"));
                        if (this.semaphore.isFree() && startDate) {
                            if (value) {
                                var allDayStartDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_8__.default.trimTime(startDate);
                                startDateEditor.option("value", new Date(allDayStartDate));
                                endDateEditor.option("value", new Date(allDayStartDate))
                            } else {
                                var startDateWithStartHour = getStartDateWithStartHour(startDate, this.scheduler.getStartDayHour());
                                var endDate = this.scheduler.getCalculatedEndDate(startDateWithStartHour);
                                startDateEditor.option("value", startDateWithStartHour);
                                endDateEditor.option("value", endDate)
                            }
                        }
                        var startDateItemPath = "".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, ".").concat(dataExprs.startDateExpr);
                        var endDateItemPath = "".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, ".").concat(dataExprs.endDateExpr);
                        this._changeFormItemDateType(startDateItemPath, value);
                        this._changeFormItemDateType(endDateItemPath, value)
                    }
                }
            }, {
                editorType: "dxSwitch",
                dataField: "repeat",
                cssClass: "dx-appointment-form-switch",
                name: "visibilityChanged",
                label: {
                    text: _localization_message__WEBPACK_IMPORTED_MODULE_12__.default.format("dxScheduler-editorLabelRecurrence"),
                    location: "right"
                },
                editorOptions: {
                    onValueChanged: args => {
                        var {
                            form: form
                        } = this;
                        var colSpan = args.value ? 1 : 2;
                        form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Main, "colSpan", colSpan);
                        form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, "colSpan", colSpan);
                        updateRecurrenceItemVisibility(dataExprs.recurrenceRuleExpr, args.value, form);
                        changeSize(args.value);
                        triggerResize()
                    }
                }
            }]
        }, {
            itemType: "empty",
            colSpan: 2
        }, {
            dataField: dataExprs.descriptionExpr,
            editorType: "dxTextArea",
            colSpan: 2,
            label: {
                text: _localization_message__WEBPACK_IMPORTED_MODULE_12__.default.format("dxScheduler-editorLabelDescription")
            }
        }, {
            itemType: "empty",
            colSpan: 2
        }]
    }
    _createRecurrenceEditor(dataExprs) {
        return [{
            dataField: dataExprs.recurrenceRuleExpr,
            editorType: "dxRecurrenceEditor",
            editorOptions: {
                firstDayOfWeek: this.scheduler.getFirstDayOfWeek(),
                timeZoneCalculator: this.scheduler.getTimeZoneCalculator(),
                getStartDateTimeZone: () => this._createAppointmentAdapter(this.formData).startDateTimeZone
            },
            label: {
                text: " ",
                visible: false
            }
        }]
    }
    setEditorsType(allDay) {
        var {
            startDateExpr: startDateExpr,
            endDateExpr: endDateExpr
        } = this.scheduler.getDataAccessors().expr;
        var startDateItemPath = "".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, ".").concat(startDateExpr);
        var endDateItemPath = "".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, ".").concat(endDateExpr);
        var startDateFormItem = this.form.itemOption(startDateItemPath);
        var endDateFormItem = this.form.itemOption(endDateItemPath);
        if (startDateFormItem && endDateFormItem) {
            var startDateEditorOptions = startDateFormItem.editorOptions;
            var endDateEditorOptions = endDateFormItem.editorOptions;
            startDateEditorOptions.type = endDateEditorOptions.type = allDay ? "date" : "datetime";
            this.form.itemOption(startDateItemPath, "editorOptions", startDateEditorOptions);
            this.form.itemOption(endDateItemPath, "editorOptions", endDateEditorOptions)
        }
    }
    updateRecurrenceEditorStartDate(date, expression) {
        var options = {
            startDate: date
        };
        this.setEditorOptions(expression, "Recurrence", options)
    }
    setEditorOptions(name, groupName, options) {
        var editorPath = "".concat(APPOINTMENT_FORM_GROUP_NAMES[groupName], ".").concat(name);
        var editor = this.form.itemOption(editorPath);
        editor && this.form.itemOption(editorPath, "editorOptions", (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)({}, editor.editorOptions, options))
    }
    setTimeZoneEditorDataSource(date, path) {
        var dataSource = this.createTimeZoneDataSource(date);
        this.setEditorOptions(path, "Main", {
            dataSource: dataSource
        })
    }
    updateFormData(formData) {
        this.semaphore.take();
        this.form.option("formData", formData);
        var dataExprs = this.scheduler.getDataAccessors().expr;
        var allDay = formData[dataExprs.allDayExpr];
        var startDate = new Date(formData[dataExprs.startDateExpr]);
        var endDate = new Date(formData[dataExprs.endDateExpr]);
        this.setTimeZoneEditorDataSource(startDate, dataExprs.startDateTimeZoneExpr);
        this.setTimeZoneEditorDataSource(endDate, dataExprs.endDateTimeZoneExpr);
        this.updateRecurrenceEditorStartDate(startDate, dataExprs.recurrenceRuleExpr);
        this.setEditorsType(allDay);
        this.semaphore.release()
    }
}


/***/ }),

/***/ 80619:
/*!***************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointment_popup/m_popup.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ACTION_TO_APPOINTMENT": function() { return /* binding */ ACTION_TO_APPOINTMENT; },
/* harmony export */   "AppointmentPopup": function() { return /* binding */ AppointmentPopup; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/devices */ 41881);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/utils/deferred */ 97233);
/* harmony import */ var _events_visibility_change__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../events/visibility_change */ 23495);
/* harmony import */ var _renovation_ui_scheduler_appointment_edit_form_popup_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/appointment_edit_form/popup_config */ 72930);
/* harmony import */ var _ui_popup_ui_popup__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../ui/popup/ui.popup */ 23772);
/* harmony import */ var _ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../ui/scheduler/appointmentAdapter */ 50760);
/* harmony import */ var _ui_scheduler_loading__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../ui/scheduler/loading */ 68225);
/* harmony import */ var _resources_m_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../resources/m_utils */ 48025);
/**
 * DevExtreme (esm/__internal/scheduler/appointment_popup/m_popup.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */











var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_3__.default.dateToMilliseconds;
var APPOINTMENT_POPUP_CLASS = "dx-scheduler-appointment-popup";
var DAY_IN_MS = toMs("day");
var POPUP_CONFIG = {
    height: "auto",
    maxHeight: "100%",
    showCloseButton: false,
    showTitle: false,
    defaultOptionsRules: [{
        device: () => _core_devices__WEBPACK_IMPORTED_MODULE_1__.default.current().android,
        options: {
            showTitle: false
        }
    }]
};
var ACTION_TO_APPOINTMENT = {
    CREATE: 0,
    UPDATE: 1,
    EXCLUDE_FROM_SERIES: 2
};
class AppointmentPopup {
    constructor(scheduler, form) {
        this.scheduler = scheduler;
        this.form = form;
        this.popup = null;
        this.state = {
            action: null,
            lastEditData: null,
            saveChangesLocker: false,
            appointment: {
                data: null
            }
        }
    }
    get visible() {
        return this.popup ? this.popup.option("visible") : false
    }
    show(appointment, config) {
        this.state.appointment.data = appointment;
        this.state.action = config.action;
        this.state.excludeInfo = config.excludeInfo;
        if (!this.popup) {
            var popupConfig = this._createPopupConfig();
            this.popup = this._createPopup(popupConfig)
        }
        this.popup.option("toolbarItems", (0,_renovation_ui_scheduler_appointment_edit_form_popup_config__WEBPACK_IMPORTED_MODULE_6__.getPopupToolbarItems)(config.isToolbarVisible, e => this._doneButtonClickHandler(e)));
        this.popup.show()
    }
    hide() {
        this.popup.hide()
    }
    dispose() {
        var _a;
        null === (_a = this.popup) || void 0 === _a ? void 0 : _a.$element().remove()
    }
    _createPopup(options) {
        var popupElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(APPOINTMENT_POPUP_CLASS).appendTo(this.scheduler.getElement());
        return this.scheduler.createComponent(popupElement, _ui_popup_ui_popup__WEBPACK_IMPORTED_MODULE_7__.default, options)
    }
    _createPopupConfig() {
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, POPUP_CONFIG), {
            onHiding: () => this.scheduler.focus(),
            contentTemplate: () => this._createPopupContent(),
            onShowing: e => this._onShowing(e),
            wrapperAttr: {
                class: APPOINTMENT_POPUP_CLASS
            }
        })
    }
    _onShowing(e) {
        this._updateForm();
        var arg = {
            form: this.form.dxForm,
            popup: this.popup,
            appointmentData: this.state.appointment.data,
            cancel: false
        };
        this.scheduler.getAppointmentFormOpening()(arg);
        this.scheduler.processActionResult(arg, canceled => {
            if (canceled) {
                e.cancel = true
            } else {
                this.updatePopupFullScreenMode()
            }
        })
    }
    _createPopupContent() {
        this._createForm();
        return this.form.dxForm.$element()
    }
    _createFormData(rawAppointment) {
        var appointment = this._createAppointmentAdapter(rawAppointment);
        var dataAccessors = this.scheduler.getDataAccessors();
        var resources = this.scheduler.getResources();
        var normalizedResources = (0,_resources_m_utils__WEBPACK_IMPORTED_MODULE_10__.getNormalizedResources)(rawAppointment, dataAccessors, resources);
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, rawAppointment), normalizedResources), {
            repeat: !!appointment.recurrenceRule
        })
    }
    _createForm() {
        var rawAppointment = this.state.appointment.data;
        var formData = this._createFormData(rawAppointment);
        this.form.create(this.triggerResize.bind(this), this.changeSize.bind(this), formData)
    }
    _isReadOnly(rawAppointment) {
        var appointment = this._createAppointmentAdapter(rawAppointment);
        if (rawAppointment && appointment.disabled) {
            return true
        }
        if (this.state.action === ACTION_TO_APPOINTMENT.CREATE) {
            return false
        }
        return !this.scheduler.getEditingConfig().allowUpdating
    }
    _createAppointmentAdapter(rawAppointment) {
        return (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_8__.createAppointmentAdapter)(rawAppointment, this.scheduler.getDataAccessors(), this.scheduler.getTimeZoneCalculator())
    }
    _updateForm() {
        var {
            data: data
        } = this.state.appointment;
        var appointment = this._createAppointmentAdapter(this._createFormData(data));
        if (appointment.startDate) {
            appointment.startDate = appointment.calculateStartDate("toAppointment")
        }
        if (appointment.endDate) {
            appointment.endDate = appointment.calculateEndDate("toAppointment")
        }
        var formData = appointment.source();
        this.form.readOnly = this._isReadOnly(formData);
        this.form.updateFormData(formData)
    }
    triggerResize() {
        if (this.popup) {
            (0,_events_visibility_change__WEBPACK_IMPORTED_MODULE_5__.triggerResizeEvent)(this.popup.$element())
        }
    }
    changeSize(isRecurrence) {
        if (this.popup) {
            var isFullScreen = (0,_renovation_ui_scheduler_appointment_edit_form_popup_config__WEBPACK_IMPORTED_MODULE_6__.isPopupFullScreenNeeded)();
            var maxWidth = isFullScreen ? "100%" : (0,_renovation_ui_scheduler_appointment_edit_form_popup_config__WEBPACK_IMPORTED_MODULE_6__.getMaxWidth)(isRecurrence);
            this.popup.option("fullScreen", isFullScreen);
            this.popup.option("maxWidth", maxWidth)
        }
    }
    updatePopupFullScreenMode() {
        if (this.form.dxForm) {
            var {
                formData: formData
            } = this.form;
            var isRecurrence = formData[this.scheduler.getDataAccessors().expr.recurrenceRuleExpr];
            if (this.visible) {
                this.changeSize(isRecurrence)
            }
        }
    }
    saveChangesAsync(isShowLoadPanel) {
        var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred;
        var validation = this.form.dxForm.validate();
        isShowLoadPanel && this._showLoadPanel();
        (0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.when)(validation && validation.complete || validation).done(validation => {
            if (validation && !validation.isValid) {
                (0,_ui_scheduler_loading__WEBPACK_IMPORTED_MODULE_9__.hide)();
                deferred.resolve(false);
                return
            }
            var adapter = this._createAppointmentAdapter(this.form.formData);
            var clonedAdapter = adapter.clone({
                pathTimeZone: "fromAppointment"
            });
            this._addMissingDSTTime(adapter, clonedAdapter);
            var appointment = clonedAdapter.source();
            delete appointment.repeat;
            switch (this.state.action) {
                case ACTION_TO_APPOINTMENT.CREATE:
                    this.scheduler.addAppointment(appointment).done(deferred.resolve);
                    break;
                case ACTION_TO_APPOINTMENT.UPDATE:
                    this.scheduler.updateAppointment(this.state.appointment.data, appointment).done(deferred.resolve);
                    break;
                case ACTION_TO_APPOINTMENT.EXCLUDE_FROM_SERIES:
                    this.scheduler.updateAppointment(this.state.excludeInfo.sourceAppointment, this.state.excludeInfo.updatedAppointment);
                    this.scheduler.addAppointment(appointment).done(deferred.resolve)
            }
            deferred.done(() => {
                (0,_ui_scheduler_loading__WEBPACK_IMPORTED_MODULE_9__.hide)();
                this.state.lastEditData = appointment
            })
        });
        return deferred.promise()
    }
    _doneButtonClickHandler(e) {
        e.cancel = true;
        this.saveEditDataAsync()
    }
    saveEditDataAsync() {
        var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred;
        if (this._tryLockSaveChanges()) {
            (0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.when)(this.saveChangesAsync(true)).done(() => {
                if (this.state.lastEditData) {
                    var adapter = this._createAppointmentAdapter(this.state.lastEditData);
                    var {
                        startDate: startDate,
                        endDate: endDate,
                        allDay: allDay
                    } = adapter;
                    var startTime = startDate.getTime();
                    var endTime = endDate.getTime();
                    var inAllDayRow = allDay || endTime - startTime >= DAY_IN_MS;
                    var dataAccessors = this.scheduler.getDataAccessors();
                    var resourceList = this.scheduler.getResources();
                    var normalizedResources = (0,_resources_m_utils__WEBPACK_IMPORTED_MODULE_10__.getNormalizedResources)(this.state.lastEditData, dataAccessors, resourceList);
                    this.scheduler.updateScrollPosition(startDate, normalizedResources, inAllDayRow);
                    this.state.lastEditData = null
                }
                this._unlockSaveChanges();
                deferred.resolve()
            })
        }
        return deferred.promise()
    }
    _showLoadPanel() {
        var container = this.popup.$overlayContent();
        (0,_ui_scheduler_loading__WEBPACK_IMPORTED_MODULE_9__.show)({
            container: container,
            position: {
                of: container
            }
        })
    }
    _tryLockSaveChanges() {
        if (false === this.state.saveChangesLocker) {
            this.state.saveChangesLocker = true;
            return true
        }
        return false
    }
    _unlockSaveChanges() {
        this.state.saveChangesLocker = false
    }
    _addMissingDSTTime(formAppointmentAdapter, clonedAppointmentAdapter) {
        var timeZoneCalculator = this.scheduler.getTimeZoneCalculator();
        clonedAppointmentAdapter.startDate = this._addMissingDSTShiftToDate(timeZoneCalculator, formAppointmentAdapter.startDate, clonedAppointmentAdapter.startDate);
        if (clonedAppointmentAdapter.endDate) {
            clonedAppointmentAdapter.endDate = this._addMissingDSTShiftToDate(timeZoneCalculator, formAppointmentAdapter.endDate, clonedAppointmentAdapter.endDate)
        }
    }
    _addMissingDSTShiftToDate(timeZoneCalculator, originFormDate, clonedDate) {
        var _a, _b;
        var originTimezoneShift = null === (_a = timeZoneCalculator.getOffsets(originFormDate)) || void 0 === _a ? void 0 : _a.common;
        var clonedTimezoneShift = null === (_b = timeZoneCalculator.getOffsets(clonedDate)) || void 0 === _b ? void 0 : _b.common;
        var shiftDifference = originTimezoneShift - clonedTimezoneShift;
        return shiftDifference ? new Date(clonedDate.getTime() + shiftDifference * toMs("hour")) : clonedDate
    }
}


/***/ }),

/***/ 33845:
/*!********************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/data_provider/m_appointment_data_provider.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppointmentDataProvider": function() { return /* binding */ AppointmentDataProvider; }
/* harmony export */ });
/* harmony import */ var _core_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/config */ 99284);
/* harmony import */ var _renovation_ui_scheduler_utils_filtering_remote__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/utils/filtering/remote */ 57285);
/* harmony import */ var _m_appointment_data_source__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./m_appointment_data_source */ 11811);
/* harmony import */ var _m_appointment_filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./m_appointment_filter */ 61965);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/data_provider/m_appointment_data_provider.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var FilterStrategies = {
    virtual: "virtual",
    standard: "standard"
};
class AppointmentDataProvider {
    constructor(options) {
        this.options = options;
        this.dataSource = this.options.dataSource;
        this.dataAccessors = this.options.dataAccessors;
        this.timeZoneCalculator = this.options.timeZoneCalculator;
        this.appointmentDataSource = new _m_appointment_data_source__WEBPACK_IMPORTED_MODULE_2__.AppointmentDataSource(this.dataSource);
        this.initFilterStrategy()
    }
    get keyName() {
        return this.appointmentDataSource.keyName
    }
    get isDataSourceInit() {
        return !!this.dataSource
    }
    get filterStrategyName() {
        return this.options.getIsVirtualScrolling() ? FilterStrategies.virtual : FilterStrategies.standard
    }
    getFilterStrategy() {
        if (!this.filterStrategy || this.filterStrategy.strategyName !== this.filterStrategyName) {
            this.initFilterStrategy()
        }
        return this.filterStrategy
    }
    initFilterStrategy() {
        var filterOptions = {
            resources: this.options.resources,
            dataAccessors: this.dataAccessors,
            startDayHour: this.options.startDayHour,
            endDayHour: this.options.endDayHour,
            showAllDayPanel: this.options.showAllDayPanel,
            timeZoneCalculator: this.options.timeZoneCalculator,
            loadedResources: this.options.getLoadedResources,
            supportAllDayRow: this.options.getSupportAllDayRow,
            viewType: this.options.getViewType,
            viewDirection: this.options.getViewDirection,
            dateRange: this.options.getDateRange,
            groupCount: this.options.getGroupCount,
            viewDataProvider: this.options.getViewDataProvider,
            allDayPanelMode: this.options.allDayPanelMode
        };
        this.filterStrategy = this.filterStrategyName === FilterStrategies.virtual ? new _m_appointment_filter__WEBPACK_IMPORTED_MODULE_3__.AppointmentFilterVirtualStrategy(filterOptions) : new _m_appointment_filter__WEBPACK_IMPORTED_MODULE_3__.AppointmentFilterBaseStrategy(filterOptions)
    }
    setDataSource(dataSource) {
        this.dataSource = dataSource;
        this.initFilterStrategy();
        this.appointmentDataSource.setDataSource(this.dataSource)
    }
    updateDataAccessors(dataAccessors) {
        this.dataAccessors = dataAccessors;
        this.initFilterStrategy()
    }
    filter(preparedItems) {
        return this.getFilterStrategy().filter(preparedItems)
    }
    filterByDate(min, max, remoteFiltering, dateSerializationFormat) {
        if (!this.dataSource || !remoteFiltering) {
            return
        }
        var dataSourceFilter = this.dataSource.filter();
        var filter = (0,_renovation_ui_scheduler_utils_filtering_remote__WEBPACK_IMPORTED_MODULE_1__.default)({
            dataSourceFilter: dataSourceFilter,
            dataAccessors: this.dataAccessors,
            min: min,
            max: max,
            dateSerializationFormat: dateSerializationFormat,
            forceIsoDateParsing: (0,_core_config__WEBPACK_IMPORTED_MODULE_0__.default)().forceIsoDateParsing
        });
        this.dataSource.filter(filter)
    }
    hasAllDayAppointments(filteredItems, preparedItems) {
        return this.getFilterStrategy().hasAllDayAppointments(filteredItems, preparedItems)
    }
    filterLoadedAppointments(filterOption, preparedItems) {
        return this.getFilterStrategy().filterLoadedAppointments(filterOption, preparedItems)
    }
    calculateAppointmentEndDate(isAllDay, startDate) {
        return this.getFilterStrategy().calculateAppointmentEndDate(isAllDay, startDate)
    }
    cleanState() {
        this.appointmentDataSource.cleanState()
    }
    getUpdatedAppointment() {
        return this.appointmentDataSource._updatedAppointment
    }
    getUpdatedAppointmentKeys() {
        return this.appointmentDataSource._updatedAppointmentKeys
    }
    add(rawAppointment) {
        return this.appointmentDataSource.add(rawAppointment)
    }
    update(target, rawAppointment) {
        return this.appointmentDataSource.update(target, rawAppointment)
    }
    remove(rawAppointment) {
        return this.appointmentDataSource.remove(rawAppointment)
    }
    destroy() {
        this.appointmentDataSource.destroy()
    }
}


/***/ }),

/***/ 11811:
/*!******************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/data_provider/m_appointment_data_source.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppointmentDataSource": function() { return /* binding */ AppointmentDataSource; }
/* harmony export */ });
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/deferred */ 97233);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/data_provider/m_appointment_data_source.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var STORE_EVENTS = {
    updating: "updating",
    push: "push"
};
class AppointmentDataSource {
    constructor(dataSource) {
        this.setDataSource(dataSource);
        this._updatedAppointmentKeys = []
    }
    get keyName() {
        var store = this._dataSource.store();
        return store.key()
    }
    get isDataSourceInit() {
        return !!this._dataSource
    }
    _getStoreKey(target) {
        var store = this._dataSource.store();
        return store.keyOf(target)
    }
    setDataSource(dataSource) {
        this._dataSource = dataSource;
        this.cleanState();
        this._initStoreChangeHandlers()
    }
    _initStoreChangeHandlers() {
        var dataSource = this._dataSource;
        var store = null === dataSource || void 0 === dataSource ? void 0 : dataSource.store();
        if (store) {
            store.on(STORE_EVENTS.updating, key => {
                var keyName = store.key();
                if (keyName) {
                    this._updatedAppointmentKeys.push({
                        key: keyName,
                        value: key
                    })
                } else {
                    this._updatedAppointment = key
                }
            });
            store.on(STORE_EVENTS.push, pushItems => {
                var items = dataSource.items();
                var keyName = store.key();
                pushItems.forEach(pushItem => {
                    var itemExists = 0 !== items.filter(item => item[keyName] === pushItem.key).length;
                    if (itemExists) {
                        this._updatedAppointmentKeys.push({
                            key: keyName,
                            value: pushItem.key
                        })
                    } else {
                        var {
                            data: data
                        } = pushItem;
                        data && items.push(data)
                    }
                });
                dataSource.load()
            })
        }
    }
    getUpdatedAppointment() {
        return this._updatedAppointment
    }
    getUpdatedAppointmentKeys() {
        return this._updatedAppointmentKeys
    }
    cleanState() {
        this._updatedAppointment = null;
        this._updatedAppointmentKeys = []
    }
    add(rawAppointment) {
        return this._dataSource.store().insert(rawAppointment).done(() => this._dataSource.load())
    }
    update(target, data) {
        var key = this._getStoreKey(target);
        var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_0__.Deferred;
        this._dataSource.store().update(key, data).done(result => this._dataSource.load().done(() => d.resolve(result)).fail(d.reject)).fail(d.reject);
        return d.promise()
    }
    remove(rawAppointment) {
        var key = this._getStoreKey(rawAppointment);
        return this._dataSource.store().remove(key).done(() => this._dataSource.load())
    }
    destroy() {
        var _a;
        var store = null === (_a = this._dataSource) || void 0 === _a ? void 0 : _a.store();
        if (store) {
            store.off(STORE_EVENTS.updating);
            store.off(STORE_EVENTS.push)
        }
    }
}


/***/ }),

/***/ 61965:
/*!*************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/data_provider/m_appointment_filter.js ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppointmentFilterBaseStrategy": function() { return /* binding */ AppointmentFilterBaseStrategy; },
/* harmony export */   "AppointmentFilterVirtualStrategy": function() { return /* binding */ AppointmentFilterVirtualStrategy; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/utils/array */ 36959);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/utils/type */ 33275);
/* harmony import */ var _data_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../data/query */ 3398);
/* harmony import */ var _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay */ 89448);
/* harmony import */ var _renovation_ui_scheduler_resources_hasResourceValue__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/resources/hasResourceValue */ 78993);
/* harmony import */ var _renovation_ui_scheduler_utils_filtering_getDatesWithoutTime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/utils/filtering/getDatesWithoutTime */ 31424);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../ui/scheduler/appointmentAdapter */ 50760);
/* harmony import */ var _ui_scheduler_recurrence__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../ui/scheduler/recurrence */ 68155);
/* harmony import */ var _resources_m_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../resources/m_utils */ 48025);
/* harmony import */ var _m_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./m_utils */ 57534);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/data_provider/m_appointment_filter.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */














var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.dateToMilliseconds;
var FilterStrategies = {
    virtual: "virtual",
    standard: "standard"
};
class AppointmentFilterBaseStrategy {
    constructor(options) {
        this.options = options;
        this.dataAccessors = this.options.dataAccessors;
        this._init()
    }
    get strategyName() {
        return FilterStrategies.standard
    }
    get timeZoneCalculator() {
        return this.options.timeZoneCalculator
    }
    get viewStartDayHour() {
        return this.options.startDayHour
    }
    get viewEndDayHour() {
        return this.options.endDayHour
    }
    get timezone() {
        return this.options.timezone
    }
    get firstDayOfWeek() {
        return this.options.firstDayOfWeek
    }
    get showAllDayPanel() {
        return this.options.showAllDayPanel
    }
    get loadedResources() {
        return this._resolveOption("loadedResources")
    }
    get supportAllDayRow() {
        return this._resolveOption("supportAllDayRow")
    }
    get viewType() {
        return this._resolveOption("viewType")
    }
    get viewDirection() {
        return this._resolveOption("viewDirection")
    }
    get dateRange() {
        return this._resolveOption("dateRange")
    }
    get groupCount() {
        return this._resolveOption("groupCount")
    }
    get viewDataProvider() {
        return this._resolveOption("viewDataProvider")
    }
    get allDayPanelMode() {
        return this._resolveOption("allDayPanelMode")
    }
    _resolveOption(name) {
        var result = this.options[name];
        return "function" === typeof result ? result() : result
    }
    _init() {
        this.setDataAccessors(this.dataAccessors)
    }
    filter(preparedItems) {
        var {
            dateRange: dateRange
        } = this;
        var allDay;
        if (!this.showAllDayPanel && this.supportAllDayRow) {
            allDay = false
        }
        return this.filterLoadedAppointments({
            startDayHour: this.viewStartDayHour,
            endDayHour: this.viewEndDayHour,
            viewStartDayHour: this.viewStartDayHour,
            viewEndDayHour: this.viewEndDayHour,
            min: dateRange[0],
            max: dateRange[1],
            resources: this.loadedResources,
            allDay: allDay,
            supportMultiDayAppointments: (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__.isTimelineView)(this.viewType),
            firstDayOfWeek: this.firstDayOfWeek
        }, preparedItems)
    }
    hasAllDayAppointments(filteredItems, preparedItems) {
        var adapters = filteredItems.map(item => (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_10__.createAppointmentAdapter)(item, this.dataAccessors, this.timeZoneCalculator));
        var result = false;
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__.each)(adapters, (_, item) => {
            if ((0,_renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_6__.getAppointmentTakesAllDay)(item, this.viewStartDayHour, this.viewEndDayHour, this.allDayPanelMode)) {
                result = true;
                return false
            }
        });
        return result
    }
    setDataAccessors(dataAccessors) {
        this.dataAccessors = dataAccessors
    }
    _createAllDayAppointmentFilter(filterOptions) {
        var {
            viewStartDayHour: viewStartDayHour,
            viewEndDayHour: viewEndDayHour
        } = filterOptions;
        return [
            [appointment => (0,_renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_6__.getAppointmentTakesAllDay)(appointment, viewStartDayHour, viewEndDayHour, this.allDayPanelMode)]
        ]
    }
    _createCombinedFilter(filterOptions) {
        var min = new Date(filterOptions.min);
        var max = new Date(filterOptions.max);
        var {
            startDayHour: startDayHour,
            endDayHour: endDayHour,
            viewStartDayHour: viewStartDayHour,
            viewEndDayHour: viewEndDayHour,
            resources: resources,
            firstDayOfWeek: firstDayOfWeek,
            checkIntersectViewport: checkIntersectViewport,
            supportMultiDayAppointments: supportMultiDayAppointments
        } = filterOptions;
        var [trimMin, trimMax] = (0,_renovation_ui_scheduler_utils_filtering_getDatesWithoutTime__WEBPACK_IMPORTED_MODULE_8__.default)(min, max);
        var useRecurrence = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isDefined)(this.dataAccessors.getter.recurrenceRule);
        return [
            [appointment => {
                var _a;
                var appointmentVisible = null !== (_a = appointment.visible) && void 0 !== _a ? _a : true;
                if (!appointmentVisible) {
                    return false
                }
                var {
                    startDate: startDate,
                    endDate: endDate,
                    hasRecurrenceRule: hasRecurrenceRule
                } = appointment;
                if (!hasRecurrenceRule) {
                    if (!(endDate >= trimMin && startDate < trimMax || _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.sameDate(endDate, trimMin) && _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.sameDate(startDate, trimMin))) {
                        return false
                    }
                }
                var appointmentTakesAllDay = (0,_renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_6__.getAppointmentTakesAllDay)(appointment, viewStartDayHour, viewEndDayHour, this.allDayPanelMode);
                var appointmentTakesSeveralDays = (0,_m_utils__WEBPACK_IMPORTED_MODULE_13__.getAppointmentTakesSeveralDays)(appointment);
                var isAllDay = appointment.allDay;
                var isLongAppointment = appointmentTakesSeveralDays || appointmentTakesAllDay;
                if ((null === resources || void 0 === resources ? void 0 : resources.length) && !this._filterAppointmentByResources(appointment.rawAppointment, resources)) {
                    return false
                }
                if (appointmentTakesAllDay && false === filterOptions.allDay) {
                    return false
                }
                if (hasRecurrenceRule) {
                    var recurrenceException = (0,_m_utils__WEBPACK_IMPORTED_MODULE_13__.getRecurrenceException)(appointment, this.timeZoneCalculator, this.timezone);
                    if (!this._filterAppointmentByRRule((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, appointment), {
                            recurrenceException: recurrenceException,
                            allDay: appointmentTakesAllDay
                        }), min, max, startDayHour, endDayHour, firstDayOfWeek)) {
                        return false
                    }
                }
                if (!isAllDay && supportMultiDayAppointments && isLongAppointment) {
                    if (endDate < min && (!useRecurrence || useRecurrence && !hasRecurrenceRule)) {
                        return false
                    }
                }
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isDefined)(startDayHour) && (!useRecurrence || !filterOptions.isVirtualScrolling)) {
                    if (!(0,_m_utils__WEBPACK_IMPORTED_MODULE_13__.compareDateWithStartDayHour)(startDate, endDate, startDayHour, appointmentTakesAllDay, appointmentTakesSeveralDays)) {
                        return false
                    }
                }
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isDefined)(endDayHour)) {
                    if (!(0,_m_utils__WEBPACK_IMPORTED_MODULE_13__.compareDateWithEndDayHour)({
                            startDate: startDate,
                            endDate: endDate,
                            startDayHour: startDayHour,
                            endDayHour: endDayHour,
                            viewStartDayHour: viewStartDayHour,
                            viewEndDayHour: viewEndDayHour,
                            allDay: appointmentTakesAllDay,
                            severalDays: appointmentTakesSeveralDays,
                            min: min,
                            max: max,
                            checkIntersectViewport: checkIntersectViewport
                        })) {
                        return false
                    }
                }
                if (!isAllDay && (!isLongAppointment || supportMultiDayAppointments)) {
                    if (endDate < min && useRecurrence && !hasRecurrenceRule) {
                        return false
                    }
                }
                return true
            }]
        ]
    }
    _createAppointmentFilter(filterOptions) {
        return this._createCombinedFilter(filterOptions)
    }
    _filterAppointmentByResources(appointment, resources) {
        var checkAppointmentResourceValues = (resourceName, resourceIndex) => {
            var resourceGetter = this.dataAccessors.resources.getter[resourceName];
            var resource;
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isFunction)(resourceGetter)) {
                resource = resourceGetter(appointment)
            }
            var appointmentResourceValues = (0,_core_utils_array__WEBPACK_IMPORTED_MODULE_1__.wrapToArray)(resource);
            var resourceData = (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__.map)(resources[resourceIndex].items, _ref => {
                var {
                    id: id
                } = _ref;
                return id
            });
            for (var i = 0; i < appointmentResourceValues.length; i++) {
                if ((0,_renovation_ui_scheduler_resources_hasResourceValue__WEBPACK_IMPORTED_MODULE_7__.hasResourceValue)(resourceData, appointmentResourceValues[i])) {
                    return true
                }
            }
            return false
        };
        var result = false;
        for (var i = 0; i < resources.length; i++) {
            var resourceName = resources[i].name;
            result = checkAppointmentResourceValues(resourceName, i);
            if (!result) {
                return false
            }
        }
        return result
    }
    _filterAppointmentByRRule(appointment, min, max, startDayHour, endDayHour, firstDayOfWeek) {
        var {
            recurrenceRule: recurrenceRule
        } = appointment;
        var {
            recurrenceException: recurrenceException
        } = appointment;
        var {
            allDay: allDay
        } = appointment;
        var result = true;
        var appointmentStartDate = appointment.startDate;
        var appointmentEndDate = appointment.endDate;
        var recurrenceProcessor = (0,_ui_scheduler_recurrence__WEBPACK_IMPORTED_MODULE_11__.getRecurrenceProcessor)();
        if (allDay || (0,_m_utils__WEBPACK_IMPORTED_MODULE_13__._appointmentPartInInterval)(appointmentStartDate, appointmentEndDate, startDayHour, endDayHour)) {
            var [trimMin, trimMax] = (0,_renovation_ui_scheduler_utils_filtering_getDatesWithoutTime__WEBPACK_IMPORTED_MODULE_8__.default)(min, max);
            min = trimMin;
            max = new Date(trimMax.getTime() - toMs("minute"))
        }
        if (recurrenceRule && !recurrenceProcessor.isValidRecurrenceRule(recurrenceRule)) {
            result = appointmentEndDate > min && appointmentStartDate <= max
        }
        if (result && recurrenceProcessor.isValidRecurrenceRule(recurrenceRule)) {
            result = recurrenceProcessor.hasRecurrence({
                rule: recurrenceRule,
                exception: recurrenceException,
                start: appointmentStartDate,
                end: appointmentEndDate,
                min: min,
                max: max,
                firstDayOfWeek: firstDayOfWeek,
                appointmentTimezoneOffset: this.timeZoneCalculator.getOriginStartDateOffsetInMs(appointmentStartDate, appointment.startDateTimeZone, false)
            })
        }
        return result
    }
    filterLoadedAppointments(filterOptions, preparedItems) {
        var filteredItems = this.filterPreparedItems(filterOptions, preparedItems);
        return filteredItems.map(_ref2 => {
            var {
                rawAppointment: rawAppointment
            } = _ref2;
            return rawAppointment
        })
    }
    filterPreparedItems(filterOptions, preparedItems) {
        var combinedFilter = this._createAppointmentFilter(filterOptions);
        return (0,_data_query__WEBPACK_IMPORTED_MODULE_5__.default)(preparedItems).filter(combinedFilter).toArray()
    }
    filterAllDayAppointments(filterOptions, preparedItems) {
        var combinedFilter = this._createAllDayAppointmentFilter(filterOptions);
        return (0,_data_query__WEBPACK_IMPORTED_MODULE_5__.default)(preparedItems).filter(combinedFilter).toArray().map(_ref3 => {
            var {
                rawAppointment: rawAppointment
            } = _ref3;
            return rawAppointment
        })
    }
}
class AppointmentFilterVirtualStrategy extends AppointmentFilterBaseStrategy {
    get strategyName() {
        return FilterStrategies.virtual
    }
    get resources() {
        return this.options.resources
    }
    filter(preparedItems) {
        var hourMs = toMs("hour");
        var isCalculateStartAndEndDayHour = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__.isDateAndTimeView)(this.viewType);
        var checkIntersectViewport = isCalculateStartAndEndDayHour && "horizontal" === this.viewDirection;
        var isAllDayWorkspace = !this.supportAllDayRow;
        var showAllDayAppointments = this.showAllDayPanel || isAllDayWorkspace;
        var endViewDate = this.viewDataProvider.getLastViewDateByEndDayHour(this.viewEndDayHour);
        var filterOptions = [];
        var groupsInfo = this.viewDataProvider.getCompletedGroupsInfo();
        groupsInfo.forEach(item => {
            var {
                groupIndex: groupIndex
            } = item;
            var groupStartDate = item.startDate;
            var groupEndDate = new Date(Math.min(item.endDate, endViewDate));
            var startDayHour = isCalculateStartAndEndDayHour ? groupStartDate.getHours() : this.viewStartDayHour;
            var endDayHour = isCalculateStartAndEndDayHour ? startDayHour + groupStartDate.getMinutes() / 60 + (groupEndDate - groupStartDate) / hourMs : this.viewEndDayHour;
            var resources = this._getPrerenderFilterResources(groupIndex);
            var hasAllDayPanel = this.viewDataProvider.hasGroupAllDayPanel(groupIndex);
            var supportAllDayAppointment = isAllDayWorkspace || !!showAllDayAppointments && hasAllDayPanel;
            filterOptions.push({
                isVirtualScrolling: true,
                startDayHour: startDayHour,
                endDayHour: endDayHour,
                viewStartDayHour: this.viewStartDayHour,
                viewEndDayHour: this.viewEndDayHour,
                min: groupStartDate,
                max: groupEndDate,
                supportMultiDayAppointments: (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__.isTimelineView)(this.viewType),
                allDay: supportAllDayAppointment,
                resources: resources,
                firstDayOfWeek: this.firstDayOfWeek,
                checkIntersectViewport: checkIntersectViewport
            })
        });
        return this.filterLoadedAppointments({
            filterOptions: filterOptions,
            groupCount: this.groupCount
        }, preparedItems)
    }
    filterPreparedItems(_ref4, preparedItems) {
        var {
            filterOptions: filterOptions,
            groupCount: groupCount
        } = _ref4;
        var combinedFilters = [];
        var itemsToFilter = preparedItems;
        var needPreFilter = groupCount > 0;
        if (needPreFilter) {
            itemsToFilter = itemsToFilter.filter(_ref5 => {
                var {
                    rawAppointment: rawAppointment
                } = _ref5;
                for (var i = 0; i < filterOptions.length; ++i) {
                    var {
                        resources: resources
                    } = filterOptions[i];
                    if (this._filterAppointmentByResources(rawAppointment, resources)) {
                        return true
                    }
                }
            })
        }
        filterOptions.forEach(option => {
            combinedFilters.length && combinedFilters.push("or");
            var filter = this._createAppointmentFilter(option);
            combinedFilters.push(filter)
        });
        return (0,_data_query__WEBPACK_IMPORTED_MODULE_5__.default)(itemsToFilter).filter(combinedFilters).toArray()
    }
    hasAllDayAppointments(adapters, preparedItems) {
        return this.filterAllDayAppointments({
            viewStartDayHour: this.viewStartDayHour,
            viewEndDayHour: this.viewEndDayHour
        }, preparedItems).length > 0
    }
    _getPrerenderFilterResources(groupIndex) {
        var cellGroup = this.viewDataProvider.getCellsGroup(groupIndex);
        return (0,_resources_m_utils__WEBPACK_IMPORTED_MODULE_12__.getResourcesDataByGroups)(this.loadedResources, this.resources, [cellGroup])
    }
}


/***/ }),

/***/ 57534:
/*!************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/data_provider/m_utils.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compareDateWithStartDayHour": function() { return /* binding */ compareDateWithStartDayHour; },
/* harmony export */   "compareDateWithEndDayHour": function() { return /* binding */ compareDateWithEndDayHour; },
/* harmony export */   "getAppointmentTakesSeveralDays": function() { return /* binding */ getAppointmentTakesSeveralDays; },
/* harmony export */   "_isEndDateWrong": function() { return /* binding */ _isEndDateWrong; },
/* harmony export */   "_appointmentPartInInterval": function() { return /* binding */ _appointmentPartInInterval; },
/* harmony export */   "getRecurrenceException": function() { return /* binding */ getRecurrenceException; },
/* harmony export */   "_convertRecurrenceException": function() { return /* binding */ _convertRecurrenceException; },
/* harmony export */   "replaceWrongEndDate": function() { return /* binding */ replaceWrongEndDate; },
/* harmony export */   "sortAppointmentsByStartDate": function() { return /* binding */ sortAppointmentsByStartDate; }
/* harmony export */ });
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/utils/date_serialization */ 37043);
/* harmony import */ var _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../ui/scheduler/expressionUtils */ 91286);
/* harmony import */ var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../ui/scheduler/utils.timeZone */ 53374);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/data_provider/m_utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateToMilliseconds;
var FULL_DATE_FORMAT = "yyyyMMddTHHmmss";
var compareDateWithStartDayHour = (startDate, endDate, startDayHour, allDay, severalDays) => {
    var startTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateTimeFromDecimal(startDayHour);
    var result = startDate.getHours() >= startTime.hours && startDate.getMinutes() >= startTime.minutes || endDate.getHours() === startTime.hours && endDate.getMinutes() > startTime.minutes || endDate.getHours() > startTime.hours || severalDays || allDay;
    return result
};
var compareDateWithEndDayHour = options => {
    var {
        startDate: startDate,
        endDate: endDate,
        startDayHour: startDayHour,
        endDayHour: endDayHour,
        viewStartDayHour: viewStartDayHour,
        viewEndDayHour: viewEndDayHour,
        allDay: allDay,
        severalDays: severalDays,
        min: min,
        max: max,
        checkIntersectViewport: checkIntersectViewport
    } = options;
    var hiddenInterval = (24 - viewEndDayHour + viewStartDayHour) * toMs("hour");
    var apptDuration = endDate.getTime() - startDate.getTime();
    var delta = (hiddenInterval - apptDuration) / toMs("hour");
    var apptStartHour = startDate.getHours();
    var apptStartMinutes = startDate.getMinutes();
    var result;
    var endTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateTimeFromDecimal(endDayHour);
    var startTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateTimeFromDecimal(startDayHour);
    var apptIntersectViewport = startDate < max && endDate > min;
    result = checkIntersectViewport && apptIntersectViewport || apptStartHour < endTime.hours || apptStartHour === endTime.hours && apptStartMinutes < endTime.minutes || allDay && startDate <= max || severalDays && apptIntersectViewport && (apptStartHour < endTime.hours || 60 * endDate.getHours() + endDate.getMinutes() > 60 * startTime.hours);
    if (apptDuration < hiddenInterval) {
        if (apptStartHour > endTime.hours && apptStartMinutes > endTime.minutes && delta <= apptStartHour - endDayHour) {
            result = false
        }
    }
    return result
};
var getAppointmentTakesSeveralDays = adapter => !_core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.sameDate(adapter.startDate, adapter.endDate);
var _isEndDateWrong = (startDate, endDate) => !endDate || isNaN(endDate.getTime()) || startDate.getTime() > endDate.getTime();
var _appointmentPartInInterval = (startDate, endDate, startDayHour, endDayHour) => {
    var apptStartDayHour = startDate.getHours();
    var apptEndDayHour = endDate.getHours();
    return apptStartDayHour <= startDayHour && apptEndDayHour <= endDayHour && apptEndDayHour >= startDayHour || apptEndDayHour >= endDayHour && apptStartDayHour <= endDayHour && apptStartDayHour >= startDayHour
};
var getRecurrenceException = (appointmentAdapter, timeZoneCalculator, timeZone) => {
    var {
        recurrenceException: recurrenceException
    } = appointmentAdapter;
    if (recurrenceException) {
        var exceptions = recurrenceException.split(",");
        for (var i = 0; i < exceptions.length; i++) {
            exceptions[i] = _convertRecurrenceException(exceptions[i], appointmentAdapter.startDate, timeZoneCalculator, timeZone)
        }
        return exceptions.join()
    }
    return recurrenceException
};
var _convertRecurrenceException = (exceptionString, startDate, timeZoneCalculator, timeZone) => {
    exceptionString = exceptionString.replace(/\s/g, "");
    var getConvertedToTimeZone = date => timeZoneCalculator.createDate(date, {
        path: "toGrid"
    });
    var exceptionDate = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_1__.default.deserializeDate(exceptionString);
    var convertedStartDate = getConvertedToTimeZone(startDate);
    var convertedExceptionDate = getConvertedToTimeZone(exceptionDate);
    convertedExceptionDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_3__.default.correctRecurrenceExceptionByTimezone(convertedExceptionDate, convertedStartDate, timeZone);
    exceptionString = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_1__.default.serializeDate(convertedExceptionDate, FULL_DATE_FORMAT);
    return exceptionString
};
var replaceWrongEndDate = (rawAppointment, startDate, endDate, appointmentDuration, dataAccessors) => {
    if (_isEndDateWrong(startDate, endDate)) {
        var isAllDay = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_2__.ExpressionUtils.getField(dataAccessors, "allDay", rawAppointment);
        var calculatedEndDate = ((isAllDay, startDate) => {
            if (isAllDay) {
                return _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.setToDayEnd(new Date(startDate))
            }
            return new Date(startDate.getTime() + appointmentDuration * toMs("minute"))
        })(isAllDay, startDate);
        dataAccessors.setter.endDate(rawAppointment, calculatedEndDate)
    }
};
var sortAppointmentsByStartDate = (appointments, dataAccessors) => {
    appointments.sort((a, b) => {
        var firstDate = new Date(_ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_2__.ExpressionUtils.getField(dataAccessors, "startDate", a.settings || a));
        var secondDate = new Date(_ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_2__.ExpressionUtils.getField(dataAccessors, "startDate", b.settings || b));
        return Math.sign(firstDate.getTime() - secondDate.getTime())
    })
};


/***/ }),

/***/ 5331:
/*!****************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_appointment.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Appointment": function() { return /* binding */ Appointment; },
/* harmony export */   "AgendaAppointment": function() { return /* binding */ AgendaAppointment; }
/* harmony export */ });
/* harmony import */ var _animation_translator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../animation/translator */ 10829);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _core_dom_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/dom_component */ 530);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/utils/deferred */ 97233);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../events/core/events_engine */ 99064);
/* harmony import */ var _events_pointer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../events/pointer */ 24842);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../events/utils/index */ 3151);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../localization/date */ 83881);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../localization/message */ 19336);
/* harmony import */ var _ui_resizable__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../ui/resizable */ 511);
/* harmony import */ var _ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../ui/scheduler/classes */ 19156);
/* harmony import */ var _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../ui/scheduler/expressionUtils */ 91286);
/* harmony import */ var _ui_scheduler_recurrence__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../ui/scheduler/recurrence */ 68155);
/* harmony import */ var _ui_tooltip_ui_tooltip__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../ui/tooltip/ui.tooltip */ 75934);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/m_appointment.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
















var DEFAULT_HORIZONTAL_HANDLES = "left right";
var DEFAULT_VERTICAL_HANDLES = "top bottom";
var REDUCED_APPOINTMENT_POINTERENTER_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_8__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_7__.default.enter, "dxSchedulerAppointment");
var REDUCED_APPOINTMENT_POINTERLEAVE_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_8__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_7__.default.leave, "dxSchedulerAppointment");
class Appointment extends _core_dom_component__WEBPACK_IMPORTED_MODULE_2__.default {
    get coloredElement() {
        return this.$element()
    }
    get rawAppointment() {
        return this.option("data")
    }
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(super._getDefaultOptions(), {
            data: {},
            groupIndex: -1,
            groups: [],
            geometry: {
                top: 0,
                left: 0,
                width: 0,
                height: 0
            },
            allowDrag: true,
            allowResize: true,
            reduced: null,
            isCompact: false,
            direction: "vertical",
            resizableConfig: {
                keepAspectRatio: false
            },
            cellHeight: 0,
            cellWidth: 0,
            isDragSource: false
        })
    }
    notifyObserver(subject, args) {
        var observer = this.option("observer");
        if (observer) {
            observer.fire(subject, args)
        }
    }
    invoke(funcName) {
        var observer = this.option("observer");
        if (observer) {
            return observer.fire.apply(observer, arguments)
        }
    }
    _optionChanged(args) {
        switch (args.name) {
            case "data":
            case "groupIndex":
            case "geometry":
            case "allowDrag":
            case "allowResize":
            case "reduced":
            case "sortedIndex":
            case "isCompact":
            case "direction":
            case "resizableConfig":
            case "cellHeight":
            case "cellWidth":
                this._invalidate();
                break;
            case "isDragSource":
                this._renderDragSourceClass();
                break;
            default:
                super._optionChanged(args)
        }
    }
    _getHorizontalResizingRule() {
        var reducedHandles = {
            head: this.option("rtlEnabled") ? "right" : "left",
            body: "",
            tail: this.option("rtlEnabled") ? "left" : "right"
        };
        var getResizableStep = this.option("getResizableStep");
        var step = getResizableStep ? getResizableStep() : 0;
        return {
            handles: this.option("reduced") ? reducedHandles[this.option("reduced")] : DEFAULT_HORIZONTAL_HANDLES,
            minHeight: 0,
            minWidth: this.invoke("getCellWidth"),
            step: step,
            roundStepValue: false
        }
    }
    _getVerticalResizingRule() {
        var height = Math.round(this.invoke("getCellHeight"));
        return {
            handles: DEFAULT_VERTICAL_HANDLES,
            minWidth: 0,
            minHeight: height,
            step: height,
            roundStepValue: true
        }
    }
    _render() {
        super._render();
        this._renderAppointmentGeometry();
        this._renderEmptyClass();
        this._renderReducedAppointment();
        this._renderAllDayClass();
        this._renderDragSourceClass();
        this._renderDirection();
        this.$element().data("dxAppointmentStartDate", this.option("startDate"));
        var text = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_13__.ExpressionUtils.getField(this.option("dataAccessors"), "text", this.rawAppointment);
        this.$element().attr("title", text);
        this.$element().attr("role", "button");
        this._renderRecurrenceClass();
        this._renderResizable();
        this._setResourceColor()
    }
    _setResourceColor() {
        var appointmentConfig = {
            itemData: this.rawAppointment,
            groupIndex: this.option("groupIndex"),
            groups: this.option("groups")
        };
        var deferredColor = this.option("getAppointmentColor")(appointmentConfig);
        deferredColor.done(color => color && this.coloredElement.css("backgroundColor", color))
    }
    _renderAppointmentGeometry() {
        var geometry = this.option("geometry");
        var $element = this.$element();
        (0,_animation_translator__WEBPACK_IMPORTED_MODULE_0__.move)($element, {
            top: geometry.top,
            left: geometry.left
        });
        $element.css({
            width: geometry.width < 0 ? 0 : geometry.width,
            height: geometry.height < 0 ? 0 : geometry.height
        })
    }
    _renderEmptyClass() {
        var geometry = this.option("geometry");
        if (geometry.empty || this.option("isCompact")) {
            this.$element().addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.EMPTY_APPOINTMENT_CLASS)
        }
    }
    _renderReducedAppointment() {
        var reducedPart = this.option("reduced");
        if (!reducedPart) {
            return
        }
        this.$element().toggleClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.REDUCED_APPOINTMENT_CLASS, true).toggleClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.REDUCED_APPOINTMENT_PARTS_CLASSES[reducedPart], true);
        this._renderAppointmentReducedIcon()
    }
    _renderAppointmentReducedIcon() {
        var $icon = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_3__.default)("<div>").addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.REDUCED_APPOINTMENT_ICON).appendTo(this.$element());
        var endDate = this._getEndDate();
        var tooltipLabel = _localization_message__WEBPACK_IMPORTED_MODULE_10__.default.format("dxScheduler-editorLabelEndDate");
        var tooltipText = [tooltipLabel, ": ", _localization_date__WEBPACK_IMPORTED_MODULE_9__.default.format(endDate, "monthAndDay"), ", ", _localization_date__WEBPACK_IMPORTED_MODULE_9__.default.format(endDate, "year")].join("");
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_6__.default.off($icon, REDUCED_APPOINTMENT_POINTERENTER_EVENT_NAME);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_6__.default.on($icon, REDUCED_APPOINTMENT_POINTERENTER_EVENT_NAME, () => {
            (0,_ui_tooltip_ui_tooltip__WEBPACK_IMPORTED_MODULE_15__.show)({
                target: $icon,
                content: tooltipText
            })
        });
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_6__.default.off($icon, REDUCED_APPOINTMENT_POINTERLEAVE_EVENT_NAME);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_6__.default.on($icon, REDUCED_APPOINTMENT_POINTERLEAVE_EVENT_NAME, () => {
            (0,_ui_tooltip_ui_tooltip__WEBPACK_IMPORTED_MODULE_15__.hide)()
        })
    }
    _getEndDate() {
        var result = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_13__.ExpressionUtils.getField(this.option("dataAccessors"), "endDate", this.rawAppointment);
        if (result) {
            return new Date(result)
        }
        return result
    }
    _renderAllDayClass() {
        this.$element().toggleClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.ALL_DAY_APPOINTMENT_CLASS, !!this.option("allDay"))
    }
    _renderDragSourceClass() {
        this.$element().toggleClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.APPOINTMENT_DRAG_SOURCE_CLASS, !!this.option("isDragSource"))
    }
    _renderRecurrenceClass() {
        var rule = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_13__.ExpressionUtils.getField(this.option("dataAccessors"), "recurrenceRule", this.rawAppointment);
        if ((0,_ui_scheduler_recurrence__WEBPACK_IMPORTED_MODULE_14__.getRecurrenceProcessor)().isValidRecurrenceRule(rule)) {
            this.$element().addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.RECURRENCE_APPOINTMENT_CLASS)
        }
    }
    _renderDirection() {
        this.$element().addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.DIRECTION_APPOINTMENT_CLASSES[this.option("direction")])
    }
    _createResizingConfig() {
        var config = "vertical" === this.option("direction") ? this._getVerticalResizingRule() : this._getHorizontalResizingRule();
        if (!this.invoke("isGroupedByDate")) {
            config.stepPrecision = "strict"
        }
        return config
    }
    _renderResizable() {
        if (this.option("allowResize")) {
            this._createComponent(this.$element(), _ui_resizable__WEBPACK_IMPORTED_MODULE_11__.default, (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this._createResizingConfig(), this.option("resizableConfig")))
        }
    }
    _useTemplates() {
        return false
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_1__.default)("dxSchedulerAppointment", Appointment);
class AgendaAppointment extends Appointment {
    get coloredElement() {
        return this.$element().find(".".concat(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.APPOINTMENT_CONTENT_CLASSES.AGENDA_MARKER))
    }
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(super._getDefaultOptions(), {
            createPlainResourceListAsync: new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred
        })
    }
    _renderResourceList(container, list) {
        list.forEach(item => {
            var itemContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_3__.default)("<div>").addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.APPOINTMENT_CONTENT_CLASSES.AGENDA_RESOURCE_LIST_ITEM).appendTo(container);
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_3__.default)("<div>").text("".concat(item.label, ":")).appendTo(itemContainer);
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_3__.default)("<div>").addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.APPOINTMENT_CONTENT_CLASSES.AGENDA_RESOURCE_LIST_ITEM_VALUE).text(item.values.join(", ")).appendTo(itemContainer)
        })
    }
    _render() {
        super._render();
        var createPlainResourceListAsync = this.option("createPlainResourceListAsync");
        createPlainResourceListAsync(this.rawAppointment).done(list => {
            var parent = this.$element().find(".".concat(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_CONTENT_DETAILS));
            var container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_3__.default)("<div>").addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_12__.APPOINTMENT_CONTENT_CLASSES.AGENDA_RESOURCE_LIST).appendTo(parent);
            this._renderResourceList(container, list)
        })
    }
}


/***/ }),

/***/ 13216:
/*!***************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_appointment_collection.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _animation_translator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../animation/translator */ 10829);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/dom_adapter */ 81113);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/element */ 60213);
/* harmony import */ var _core_element_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/element_data */ 25694);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_utils_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/utils/array */ 36959);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/utils/common */ 37552);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_object__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../core/utils/object */ 163);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../core/utils/position */ 9622);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../events/core/events_engine */ 99064);
/* harmony import */ var _events_double_click__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../events/double_click */ 66368);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../events/utils/index */ 3151);
/* harmony import */ var _ui_collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../ui/collection/ui.collection_widget.edit */ 2076);
/* harmony import */ var _ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../ui/scheduler/appointmentAdapter */ 50760);
/* harmony import */ var _ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../ui/scheduler/classes */ 19156);
/* harmony import */ var _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../ui/scheduler/constants */ 27895);
/* harmony import */ var _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../../ui/scheduler/expressionUtils */ 91286);
/* harmony import */ var _ui_scheduler_recurrence__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../../ui/scheduler/recurrence */ 68155);
/* harmony import */ var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../../ui/scheduler/utils.timeZone */ 53374);
/* harmony import */ var _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./data_provider/m_utils */ 57534);
/* harmony import */ var _m_appointment__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./m_appointment */ 5331);
/* harmony import */ var _m_appointment_layout__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./m_appointment_layout */ 61865);
/* harmony import */ var _resizing_m_core__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./resizing/m_core */ 4937);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/m_appointment_collection.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */






























var COMPONENT_CLASS = "dx-scheduler-scrollable-appointments";
var DBLCLICK_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_double_click__WEBPACK_IMPORTED_MODULE_17__.name, "dxSchedulerAppointment");
var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_9__.default.dateToMilliseconds;
class SchedulerAppointments extends _ui_collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_19__.default {
    constructor(element, options) {
        super(element, options);
        this._virtualAppointments = {}
    }
    get isAgendaView() {
        return this.invoke("isCurrentViewAgenda")
    }
    get isVirtualScrolling() {
        return this.invoke("isVirtualScrolling")
    }
    get appointmentDataProvider() {
        return this.option("getAppointmentDataProvider")()
    }
    option(optionName, value) {
        return super.option(...arguments)
    }
    notifyObserver(subject, args) {
        var observer = this.option("observer");
        if (observer) {
            observer.fire(subject, args)
        }
    }
    invoke(funcName) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key]
        }
        var observer = this.option("observer");
        if (observer) {
            return observer.fire.apply(observer, arguments)
        }
    }
    _dispose() {
        clearTimeout(this._appointmentClickTimeout);
        super._dispose()
    }
    _supportedKeys() {
        var parent = super._supportedKeys();
        var currentAppointment = this._$currentAppointment;
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(parent, {
            escape: function() {
                var _a, _b, _c;
                if (this.resizeOccur) {
                    this.moveAppointmentBack();
                    this.resizeOccur = false;
                    null === (_a = currentAppointment.dxResizable("instance")) || void 0 === _a ? void 0 : _a._detachEventHandlers();
                    null === (_b = currentAppointment.dxResizable("instance")) || void 0 === _b ? void 0 : _b._attachEventHandlers();
                    null === (_c = currentAppointment.dxResizable("instance")) || void 0 === _c ? void 0 : _c._toggleResizingClass(false)
                }
            }.bind(this),
            del: function(e) {
                if (this.option("allowDelete")) {
                    e.preventDefault();
                    var data = this._getItemData(e.target);
                    this.notifyObserver("onDeleteButtonPress", {
                        data: data,
                        target: e.target
                    })
                }
            }.bind(this),
            tab: function(e) {
                var appointments = this._getAccessAppointments();
                var focusedAppointment = appointments.filter(".dx-state-focused");
                var index = focusedAppointment.data(_ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_22__.APPOINTMENT_SETTINGS_KEY).sortedIndex;
                var lastIndex = appointments.length - 1;
                if (index > 0 && e.shiftKey || index < lastIndex && !e.shiftKey) {
                    e.preventDefault();
                    e.shiftKey ? index-- : index++;
                    var $nextAppointment = this._getAppointmentByIndex(index);
                    this._resetTabIndex($nextAppointment);
                    _events_core_events_engine__WEBPACK_IMPORTED_MODULE_16__.default.trigger($nextAppointment, "focus")
                }
            }
        })
    }
    _getAppointmentByIndex(sortedIndex) {
        var appointments = this._getAccessAppointments();
        return appointments.filter((_, $item) => (0,_core_element_data__WEBPACK_IMPORTED_MODULE_5__.data)($item, _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_22__.APPOINTMENT_SETTINGS_KEY).sortedIndex === sortedIndex).eq(0)
    }
    _getAccessAppointments() {
        return this._itemElements().filter(":visible").not(".dx-state-disabled")
    }
    _resetTabIndex($appointment) {
        this._focusTarget().attr("tabIndex", -1);
        $appointment.attr("tabIndex", this.option("tabIndex"))
    }
    _moveFocus() {}
    _focusTarget() {
        return this._itemElements()
    }
    _renderFocusTarget() {
        var $appointment = this._getAppointmentByIndex(0);
        this._resetTabIndex($appointment)
    }
    _focusInHandler(e) {
        super._focusInHandler(e);
        this._$currentAppointment = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(e.target);
        this.option("focusedElement", (0,_core_element__WEBPACK_IMPORTED_MODULE_4__.getPublicElement)((0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(e.target)))
    }
    _focusOutHandler(e) {
        var $appointment = this._getAppointmentByIndex(0);
        this.option("focusedElement", (0,_core_element__WEBPACK_IMPORTED_MODULE_4__.getPublicElement)($appointment));
        super._focusOutHandler(e)
    }
    _eventBindingTarget() {
        return this._itemContainer()
    }
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(super._getDefaultOptions(), {
            noDataText: null,
            activeStateEnabled: true,
            hoverStateEnabled: true,
            tabIndex: 0,
            fixedContainer: null,
            allDayContainer: null,
            allowDrag: true,
            allowResize: true,
            allowAllDayResize: true,
            onAppointmentDblClick: null,
            _collectorOffset: 0,
            groups: [],
            resources: []
        })
    }
    _optionChanged(args) {
        if (this.option("isRenovatedAppointments")) {
            return
        }
        switch (args.name) {
            case "items":
                this._cleanFocusState();
                this._clearDropDownItems();
                this._clearDropDownItemsElements();
                this._repaintAppointments(args.value);
                this._renderDropDownAppointments();
                this._attachAppointmentsEvents();
                break;
            case "fixedContainer":
            case "allDayContainer":
            case "onAppointmentDblClick":
                break;
            case "allowDrag":
            case "allowResize":
            case "allowAllDayResize":
                this._invalidate();
                break;
            case "focusedElement":
                this._resetTabIndex((0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(args.value));
                super._optionChanged(args);
                break;
            case "allowDelete":
                break;
            case "focusStateEnabled":
                this._clearDropDownItemsElements();
                this._renderDropDownAppointments();
                super._optionChanged(args);
                break;
            default:
                super._optionChanged(args)
        }
    }
    _isAllDayAppointment(appointment) {
        return appointment.settings.length && appointment.settings[0].allDay || false
    }
    _isRepaintAppointment(appointment) {
        return !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(appointment.needRepaint) || true === appointment.needRepaint
    }
    _isRepaintAll(appointments) {
        if (this.isAgendaView) {
            return true
        }
        for (var i = 0; i < appointments.length; i++) {
            if (!this._isRepaintAppointment(appointments[i])) {
                return false
            }
        }
        return true
    }
    _applyFragment(fragment, allDay) {
        if (fragment.children().length > 0) {
            this._getAppointmentContainer(allDay).append(fragment)
        }
    }
    _onEachAppointment(appointment, index, container, isRepaintAll) {
        if (true === (null === appointment || void 0 === appointment ? void 0 : appointment.needRemove)) {
            this._clearItem(appointment)
        } else if (isRepaintAll || this._isRepaintAppointment(appointment)) {
            (() => {
                appointment.needRepaint = false;
                this._clearItem(appointment);
                this._renderItem(index, appointment, container)
            })()
        }
    }
    _repaintAppointments(appointments) {
        this._renderByFragments(($commonFragment, $allDayFragment) => {
            var isRepaintAll = this._isRepaintAll(appointments);
            if (isRepaintAll) {
                this._getAppointmentContainer(true).html("");
                this._getAppointmentContainer(false).html("")
            }!appointments.length && this._cleanItemContainer();
            appointments.forEach((appointment, index) => {
                var container = this._isAllDayAppointment(appointment) ? $allDayFragment : $commonFragment;
                this._onEachAppointment(appointment, index, container, isRepaintAll)
            })
        })
    }
    _renderByFragments(renderFunction) {
        if (this.isVirtualScrolling) {
            var $commonFragment = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__.default.createDocumentFragment());
            var $allDayFragment = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__.default.createDocumentFragment());
            renderFunction($commonFragment, $allDayFragment);
            this._applyFragment($commonFragment, false);
            this._applyFragment($allDayFragment, true)
        } else {
            renderFunction(this._getAppointmentContainer(false), this._getAppointmentContainer(true))
        }
    }
    _attachAppointmentsEvents() {
        this._attachClickEvent();
        this._attachHoldEvent();
        this._attachContextMenuEvent();
        this._attachAppointmentDblClick();
        this._renderFocusState();
        this._attachFeedbackEvents();
        this._attachHoverEvents()
    }
    _clearItem(item) {
        var $items = this._findItemElementByItem(item.itemData);
        if (!$items.length) {
            return
        }
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)($items, (_, $item) => {
            $item.detach();
            $item.remove()
        })
    }
    _clearDropDownItems() {
        this._virtualAppointments = {}
    }
    _clearDropDownItemsElements() {
        this.invoke("clearCompactAppointments")
    }
    _findItemElementByItem(item) {
        var result = [];
        var that = this;
        this.itemElements().each((function() {
            var $item = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(this);
            if ($item.data(that._itemDataKey()) === item) {
                result.push($item)
            }
        }));
        return result
    }
    _itemClass() {
        return _ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_21__.APPOINTMENT_ITEM_CLASS
    }
    _itemContainer() {
        var $container = super._itemContainer();
        var $result = $container;
        var $allDayContainer = this.option("allDayContainer");
        if ($allDayContainer) {
            $result = $container.add($allDayContainer)
        }
        return $result
    }
    _cleanItemContainer() {
        super._cleanItemContainer();
        var $allDayContainer = this.option("allDayContainer");
        if ($allDayContainer) {
            $allDayContainer.empty()
        }
        this._virtualAppointments = {}
    }
    _clean() {
        super._clean();
        delete this._$currentAppointment;
        delete this._initialSize;
        delete this._initialCoordinates
    }
    _init() {
        super._init();
        this.$element().addClass(COMPONENT_CLASS);
        this._preventSingleAppointmentClick = false
    }
    _renderAppointmentTemplate($container, appointment, model) {
        var config = {
            isAllDay: appointment.allDay,
            isRecurrence: appointment.recurrenceRule,
            html: (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isPlainObject)(appointment) && appointment.html ? appointment.html : void 0
        };
        var formatText = this.invoke("getTextAndFormatDate", model.appointmentData, this._currentAppointmentSettings.agendaSettings || model.targetedAppointmentData, "TIME");
        $container.append(this.isAgendaView ? (0,_m_appointment_layout__WEBPACK_IMPORTED_MODULE_28__.createAgendaAppointmentLayout)(formatText, config) : (0,_m_appointment_layout__WEBPACK_IMPORTED_MODULE_28__.createAppointmentLayout)(formatText, config))
    }
    _executeItemRenderAction(index, itemData, itemElement) {
        var action = this._getItemRenderAction();
        if (action) {
            action(this.invoke("mapAppointmentFields", {
                itemData: itemData,
                itemElement: itemElement
            }))
        }
        delete this._currentAppointmentSettings
    }
    _itemClickHandler(e) {
        super._itemClickHandler(e, {}, {
            afterExecute: function(e) {
                this._processItemClick(e.args[0].event)
            }.bind(this)
        })
    }
    _processItemClick(e) {
        var $target = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(e.currentTarget);
        var data = this._getItemData($target);
        if ("keydown" === e.type || (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_18__.isFakeClickEvent)(e)) {
            this.notifyObserver("showEditAppointmentPopup", {
                data: data,
                target: $target
            });
            return
        }
        this._appointmentClickTimeout = setTimeout(() => {
            if (!this._preventSingleAppointmentClick && _core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__.default.getBody().contains($target[0])) {
                this.notifyObserver("showAppointmentTooltip", {
                    data: data,
                    target: $target
                })
            }
            this._preventSingleAppointmentClick = false
        }, 300)
    }
    _extendActionArgs($itemElement) {
        var args = super._extendActionArgs($itemElement);
        return this.invoke("mapAppointmentFields", args)
    }
    _render() {
        super._render();
        this._attachAppointmentDblClick()
    }
    _attachAppointmentDblClick() {
        var that = this;
        var itemSelector = that._itemSelector();
        var itemContainer = this._itemContainer();
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_16__.default.off(itemContainer, DBLCLICK_EVENT_NAME, itemSelector);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_16__.default.on(itemContainer, DBLCLICK_EVENT_NAME, itemSelector, e => {
            that._itemDXEventHandler(e, "onAppointmentDblClick", {}, {
                afterExecute(e) {
                    that._dblClickHandler(e.args[0].event)
                }
            })
        })
    }
    _dblClickHandler(e) {
        var $targetAppointment = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(e.currentTarget);
        var appointmentData = this._getItemData($targetAppointment);
        clearTimeout(this._appointmentClickTimeout);
        this._preventSingleAppointmentClick = true;
        this.notifyObserver("showEditAppointmentPopup", {
            data: appointmentData,
            target: $targetAppointment
        })
    }
    _renderItem(index, item, container) {
        var {
            itemData: itemData
        } = item;
        var $items = [];
        for (var i = 0; i < item.settings.length; i++) {
            var setting = item.settings[i];
            this._currentAppointmentSettings = setting;
            var $item = super._renderItem(index, itemData, container);
            $item.data(_ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_22__.APPOINTMENT_SETTINGS_KEY, setting);
            $items.push($item)
        }
        return $items
    }
    _getItemContent($itemFrame) {
        $itemFrame.data(_ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_22__.APPOINTMENT_SETTINGS_KEY, this._currentAppointmentSettings);
        var $itemContent = super._getItemContent($itemFrame);
        return $itemContent
    }
    _createItemByTemplate(itemTemplate, renderArgs) {
        var {
            itemData: itemData,
            container: container,
            index: index
        } = renderArgs;
        return itemTemplate.render({
            model: {
                appointmentData: itemData,
                targetedAppointmentData: this.invoke("getTargetedAppointmentData", itemData, (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(container).parent())
            },
            container: container,
            index: index
        })
    }
    _getAppointmentContainer(allDay) {
        var $allDayContainer = this.option("allDayContainer");
        var $container = this.itemsContainer().not($allDayContainer);
        if (allDay && $allDayContainer) {
            $container = $allDayContainer
        }
        return $container
    }
    _postprocessRenderItem(args) {
        this._renderAppointment(args.itemElement, this._currentAppointmentSettings)
    }
    _renderAppointment(element, settings) {
        var _a;
        element.data(_ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_22__.APPOINTMENT_SETTINGS_KEY, settings);
        this._applyResourceDataAttr(element);
        var rawAppointment = this._getItemData(element);
        var geometry = this.invoke("getAppointmentGeometry", settings);
        var allowResize = this.option("allowResize") && (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(settings.skipResizing) || (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isString)(settings.skipResizing));
        var allowDrag = this.option("allowDrag");
        var {
            allDay: allDay
        } = settings;
        this.invoke("setCellDataCacheAlias", this._currentAppointmentSettings, geometry);
        if (settings.virtual) {
            var appointmentConfig = {
                itemData: rawAppointment,
                groupIndex: settings.groupIndex,
                groups: this.option("groups")
            };
            var deferredColor = this.option("getAppointmentColor")(appointmentConfig);
            this._processVirtualAppointment(settings, element, rawAppointment, deferredColor)
        } else {
            var config = {
                data: rawAppointment,
                groupIndex: settings.groupIndex,
                observer: this.option("observer"),
                geometry: geometry,
                direction: settings.direction || "vertical",
                allowResize: allowResize,
                allowDrag: allowDrag,
                allDay: allDay,
                reduced: settings.appointmentReduced,
                isCompact: settings.isCompact,
                startDate: new Date(null === (_a = settings.info) || void 0 === _a ? void 0 : _a.appointment.startDate),
                cellWidth: this.invoke("getCellWidth"),
                cellHeight: this.invoke("getCellHeight"),
                resizableConfig: this._resizableConfig(rawAppointment, settings),
                groups: this.option("groups"),
                getAppointmentColor: this.option("getAppointmentColor"),
                getResourceDataAccessors: this.option("getResourceDataAccessors")
            };
            if (this.isAgendaView) {
                var agendaResourceProcessor = this.option("getAgendaResourceProcessor")();
                config.createPlainResourceListAsync = rawAppointment => agendaResourceProcessor.createListAsync(rawAppointment)
            }
            this._createComponent(element, this.isAgendaView ? _m_appointment__WEBPACK_IMPORTED_MODULE_27__.AgendaAppointment : _m_appointment__WEBPACK_IMPORTED_MODULE_27__.Appointment, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, config), {
                dataAccessors: this.option("dataAccessors"),
                getResizableStep: this.option("getResizableStep")
            }))
        }
    }
    _applyResourceDataAttr($appointment) {
        var dataAccessors = this.option("getResourceDataAccessors")();
        var rawAppointment = this._getItemData($appointment);
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)(dataAccessors.getter, key => {
            var value = dataAccessors.getter[key](rawAppointment);
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(value)) {
                var prefix = "data-".concat((0,_core_utils_common__WEBPACK_IMPORTED_MODULE_8__.normalizeKey)(key.toLowerCase()), "-");
                (0,_core_utils_array__WEBPACK_IMPORTED_MODULE_7__.wrapToArray)(value).forEach(value => $appointment.attr(prefix + (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_8__.normalizeKey)(value), true))
            }
        })
    }
    _resizableConfig(appointmentData, itemSetting) {
        return {
            area: this._calculateResizableArea(itemSetting, appointmentData),
            onResizeStart: function(e) {
                this.resizeOccur = true;
                this._$currentAppointment = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(e.element);
                if (this.invoke("needRecalculateResizableArea")) {
                    var updatedArea = this._calculateResizableArea(this._$currentAppointment.data(_ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_22__.APPOINTMENT_SETTINGS_KEY), this._$currentAppointment.data("dxItemData"));
                    e.component.option("area", updatedArea);
                    e.component._renderDragOffsets(e.event)
                }
                this._initialSize = {
                    width: e.width,
                    height: e.height
                };
                this._initialCoordinates = (0,_animation_translator__WEBPACK_IMPORTED_MODULE_1__.locate)(this._$currentAppointment)
            }.bind(this),
            onResizeEnd: function(e) {
                this.resizeOccur = false;
                this._resizeEndHandler(e)
            }.bind(this)
        }
    }
    _calculateResizableArea(itemSetting, appointmentData) {
        var area = this.$element().closest(".dx-scrollable-content");
        return this.invoke("getResizableAppointmentArea", {
            coordinates: {
                left: itemSetting.left,
                top: 0,
                groupIndex: itemSetting.groupIndex
            },
            allDay: itemSetting.allDay
        }) || area
    }
    _resizeEndHandler(e) {
        var $element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(e.element);
        var {
            allDay: allDay,
            info: info
        } = $element.data("dxAppointmentSettings");
        var sourceAppointment = this._getItemData($element);
        var dateRange = {};
        if (allDay) {
            dateRange = this.resizeAllDay(e)
        } else {
            var startDate = this._getEndResizeAppointmentStartDate(e, sourceAppointment, info.appointment);
            var {
                endDate: endDate
            } = info.appointment;
            dateRange = this._getDateRange(e, startDate, endDate)
        }
        this.updateResizedAppointment($element, dateRange, this.option("dataAccessors"), this.option("timeZoneCalculator"))
    }
    resizeAllDay(e) {
        var $element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(e.element);
        var timeZoneCalculator = this.option("timeZoneCalculator");
        var dataAccessors = this.option("dataAccessors");
        return (0,_resizing_m_core__WEBPACK_IMPORTED_MODULE_29__.getAppointmentDateRange)({
            handles: e.handles,
            appointmentSettings: $element.data("dxAppointmentSettings"),
            isVerticalViewDirection: this.option("isVerticalViewDirection")(),
            isVerticalGroupedWorkSpace: this.option("isVerticalGroupedWorkSpace")(),
            appointmentRect: (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_13__.getBoundingRect)($element[0]),
            parentAppointmentRect: (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_13__.getBoundingRect)($element.parent()[0]),
            viewDataProvider: this.option("getViewDataProvider")(),
            isDateAndTimeView: this.option("isDateAndTimeView")(),
            startDayHour: this.invoke("getStartDayHour"),
            endDayHour: this.invoke("getEndDayHour"),
            timeZoneCalculator: timeZoneCalculator,
            dataAccessors: dataAccessors,
            rtlEnabled: this.option("rtlEnabled"),
            DOMMetaData: this.option("getDOMElementsMetaData")()
        })
    }
    updateResizedAppointment($element, dateRange, dataAccessors, timeZoneCalculator) {
        var sourceAppointment = this._getItemData($element);
        var modifiedAppointmentAdapter = (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_20__.createAppointmentAdapter)(sourceAppointment, dataAccessors, timeZoneCalculator).clone();
        modifiedAppointmentAdapter.startDate = new Date(dateRange.startDate);
        modifiedAppointmentAdapter.endDate = new Date(dateRange.endDate);
        this.notifyObserver("updateAppointmentAfterResize", {
            target: sourceAppointment,
            data: modifiedAppointmentAdapter.clone({
                pathTimeZone: "fromGrid"
            }).source(),
            $appointment: $element
        })
    }
    _getEndResizeAppointmentStartDate(e, rawAppointment, appointmentInfo) {
        var timeZoneCalculator = this.option("timeZoneCalculator");
        var appointmentAdapter = (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_20__.createAppointmentAdapter)(rawAppointment, this.option("dataAccessors"), timeZoneCalculator);
        var {
            startDate: startDate
        } = appointmentInfo;
        var recurrenceProcessor = (0,_ui_scheduler_recurrence__WEBPACK_IMPORTED_MODULE_24__.getRecurrenceProcessor)();
        var {
            recurrenceRule: recurrenceRule,
            startDateTimeZone: startDateTimeZone
        } = appointmentAdapter;
        var isAllDay = this.invoke("isAllDay", rawAppointment);
        var isRecurrent = recurrenceProcessor.isValidRecurrenceRule(recurrenceRule);
        if (!e.handles.top && !isRecurrent && !isAllDay) {
            startDate = timeZoneCalculator.createDate(appointmentAdapter.startDate, {
                appointmentTimeZone: startDateTimeZone,
                path: "toGrid"
            })
        }
        return startDate
    }
    _getDateRange(e, startDate, endDate) {
        var itemData = this._getItemData(e.element);
        var deltaTime = this.invoke("getDeltaTime", e, this._initialSize, itemData);
        var renderingStrategyDirection = this.invoke("getRenderingStrategyDirection");
        var isStartDateChanged = false;
        var isAllDay = this.invoke("isAllDay", itemData);
        var needCorrectDates = this.invoke("needCorrectAppointmentDates") && !isAllDay;
        var startTime;
        var endTime;
        if ("vertical" !== renderingStrategyDirection || isAllDay) {
            isStartDateChanged = this.option("rtlEnabled") ? e.handles.right : e.handles.left
        } else {
            isStartDateChanged = e.handles.top
        }
        if (isStartDateChanged) {
            startTime = needCorrectDates ? this._correctStartDateByDelta(startDate, deltaTime) : startDate.getTime() - deltaTime;
            startTime += _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_25__.default.getTimezoneOffsetChangeInMs(startDate, endDate, startTime, endDate);
            endTime = endDate.getTime()
        } else {
            startTime = startDate.getTime();
            endTime = needCorrectDates ? this._correctEndDateByDelta(endDate, deltaTime) : endDate.getTime() + deltaTime;
            endTime -= _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_25__.default.getTimezoneOffsetChangeInMs(startDate, endDate, startDate, endTime)
        }
        return {
            startDate: new Date(startTime),
            endDate: new Date(endTime)
        }
    }
    _correctEndDateByDelta(endDate, deltaTime) {
        var endDayHour = this.invoke("getEndDayHour");
        var startDayHour = this.invoke("getStartDayHour");
        var result = endDate.getTime() + deltaTime;
        var visibleDayDuration = (endDayHour - startDayHour) * toMs("hour");
        var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);
        var maxDate = new Date(endDate);
        var minDate = new Date(endDate);
        minDate.setHours(startDayHour, 0, 0, 0);
        maxDate.setHours(endDayHour, 0, 0, 0);
        if (result > maxDate.getTime() || result <= minDate.getTime()) {
            var tailOfCurrentDay = maxDate.getTime() - endDate.getTime();
            var tailOfPrevDays = deltaTime - tailOfCurrentDay;
            var correctedEndDate = new Date(endDate).setDate(endDate.getDate() + daysCount);
            var lastDay = new Date(correctedEndDate);
            lastDay.setHours(startDayHour, 0, 0, 0);
            result = lastDay.getTime() + tailOfPrevDays - visibleDayDuration * (daysCount - 1)
        }
        return result
    }
    _correctStartDateByDelta(startDate, deltaTime) {
        var endDayHour = this.invoke("getEndDayHour");
        var startDayHour = this.invoke("getStartDayHour");
        var result = startDate.getTime() - deltaTime;
        var visibleDayDuration = (endDayHour - startDayHour) * toMs("hour");
        var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);
        var maxDate = new Date(startDate);
        var minDate = new Date(startDate);
        minDate.setHours(startDayHour, 0, 0, 0);
        maxDate.setHours(endDayHour, 0, 0, 0);
        if (result < minDate.getTime() || result >= maxDate.getTime()) {
            var tailOfCurrentDay = startDate.getTime() - minDate.getTime();
            var tailOfPrevDays = deltaTime - tailOfCurrentDay;
            var firstDay = new Date(startDate.setDate(startDate.getDate() - daysCount));
            firstDay.setHours(endDayHour, 0, 0, 0);
            result = firstDay.getTime() - tailOfPrevDays + visibleDayDuration * (daysCount - 1)
        }
        return result
    }
    _processVirtualAppointment(appointmentSetting, $appointment, appointmentData, color) {
        var virtualAppointment = appointmentSetting.virtual;
        var virtualGroupIndex = virtualAppointment.index;
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(this._virtualAppointments[virtualGroupIndex])) {
            this._virtualAppointments[virtualGroupIndex] = {
                coordinates: {
                    top: virtualAppointment.top,
                    left: virtualAppointment.left
                },
                items: {
                    data: [],
                    colors: [],
                    settings: []
                },
                isAllDay: !!virtualAppointment.isAllDay,
                buttonColor: color
            }
        }
        appointmentSetting.targetedAppointmentData = this.invoke("getTargetedAppointmentData", appointmentData, $appointment);
        this._virtualAppointments[virtualGroupIndex].items.settings.push(appointmentSetting);
        this._virtualAppointments[virtualGroupIndex].items.data.push(appointmentData);
        this._virtualAppointments[virtualGroupIndex].items.colors.push(color);
        $appointment.remove()
    }
    _renderContentImpl() {
        super._renderContentImpl();
        this._renderDropDownAppointments()
    }
    _renderDropDownAppointments() {
        this._renderByFragments(($commonFragment, $allDayFragment) => {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)(this._virtualAppointments, groupIndex => {
                var virtualGroup = this._virtualAppointments[groupIndex];
                var virtualItems = virtualGroup.items;
                var virtualCoordinates = virtualGroup.coordinates;
                var $fragment = virtualGroup.isAllDay ? $allDayFragment : $commonFragment;
                var {
                    left: left
                } = virtualCoordinates;
                var buttonWidth = this.invoke("getDropDownAppointmentWidth", virtualGroup.isAllDay);
                var buttonHeight = this.invoke("getDropDownAppointmentHeight");
                var rtlOffset = this.option("rtlEnabled") ? buttonWidth : 0;
                this.notifyObserver("renderCompactAppointments", {
                    $container: $fragment,
                    coordinates: {
                        top: virtualCoordinates.top,
                        left: left + rtlOffset
                    },
                    items: virtualItems,
                    buttonColor: virtualGroup.buttonColor,
                    width: buttonWidth - this.option("_collectorOffset"),
                    height: buttonHeight,
                    onAppointmentClick: this.option("onItemClick"),
                    allowDrag: this.option("allowDrag"),
                    cellWidth: this.invoke("getCellWidth"),
                    isCompact: this.invoke("isAdaptive") || this._isGroupCompact(virtualGroup)
                })
            })
        })
    }
    _isGroupCompact(virtualGroup) {
        return !virtualGroup.isAllDay && this.invoke("supportCompactDropDownAppointments")
    }
    _sortAppointmentsByStartDate(appointments) {
        return (0,_data_provider_m_utils__WEBPACK_IMPORTED_MODULE_26__.sortAppointmentsByStartDate)(appointments, this.option("dataAccessors"))
    }
    _processRecurrenceAppointment(appointment, index, skipLongAppointments) {
        var recurrenceRule = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__.ExpressionUtils.getField(this.option("dataAccessors"), "recurrenceRule", appointment);
        var result = {
            parts: [],
            indexes: []
        };
        if (recurrenceRule) {
            var dates = appointment.settings || appointment;
            var startDate = new Date(_ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__.ExpressionUtils.getField(this.option("dataAccessors"), "startDate", dates));
            var startDateTimeZone = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__.ExpressionUtils.getField(this.option("dataAccessors"), "startDateTimeZone", appointment);
            var endDate = new Date(_ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__.ExpressionUtils.getField(this.option("dataAccessors"), "endDate", dates));
            var appointmentDuration = endDate.getTime() - startDate.getTime();
            var recurrenceException = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__.ExpressionUtils.getField(this.option("dataAccessors"), "recurrenceException", appointment);
            var startViewDate = this.invoke("getStartViewDate");
            var endViewDate = this.invoke("getEndViewDate");
            var timezoneCalculator = this.option("timeZoneCalculator");
            var recurrentDates = (0,_ui_scheduler_recurrence__WEBPACK_IMPORTED_MODULE_24__.getRecurrenceProcessor)().generateDates({
                rule: recurrenceRule,
                exception: recurrenceException,
                start: startDate,
                end: endDate,
                min: startViewDate,
                max: endViewDate,
                appointmentTimezoneOffset: timezoneCalculator.getOriginStartDateOffsetInMs(startDate, startDateTimeZone, false)
            });
            var recurrentDateCount = appointment.settings ? 1 : recurrentDates.length;
            for (var i = 0; i < recurrentDateCount; i++) {
                var appointmentPart = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)({}, appointment, true);
                if (recurrentDates[i]) {
                    var appointmentSettings = this._applyStartDateToObj(recurrentDates[i], {});
                    this._applyEndDateToObj(new Date(recurrentDates[i].getTime() + appointmentDuration), appointmentSettings);
                    appointmentPart.settings = appointmentSettings
                } else {
                    appointmentPart.settings = dates
                }
                result.parts.push(appointmentPart);
                if (!skipLongAppointments) {
                    this._processLongAppointment(appointmentPart, result)
                }
            }
            result.indexes.push(index)
        }
        return result
    }
    _processLongAppointment(appointment, result) {
        var parts = this.splitAppointmentByDay(appointment);
        var partCount = parts.length;
        var endViewDate = this.invoke("getEndViewDate").getTime();
        var startViewDate = this.invoke("getStartViewDate").getTime();
        var timeZoneCalculator = this.option("timeZoneCalculator");
        result = result || {
            parts: []
        };
        if (partCount > 1) {
            (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(appointment, parts[0]);
            for (var i = 1; i < partCount; i++) {
                var startDate = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__.ExpressionUtils.getField(this.option("dataAccessors"), "startDate", parts[i].settings).getTime();
                startDate = timeZoneCalculator.createDate(startDate, {
                    path: "toGrid"
                });
                if (startDate < endViewDate && startDate > startViewDate) {
                    result.parts.push(parts[i])
                }
            }
        }
        return result
    }
    _reduceRecurrenceAppointments(recurrenceIndexes, appointments) {
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)(recurrenceIndexes, (i, index) => {
            appointments.splice(index - i, 1)
        })
    }
    _combineAppointments(appointments, additionalAppointments) {
        if (additionalAppointments.length) {
            appointments.push(...additionalAppointments)
        }
        this._sortAppointmentsByStartDate(appointments)
    }
    _applyStartDateToObj(startDate, obj) {
        _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__.ExpressionUtils.setField(this.option("dataAccessors"), "startDate", obj, startDate);
        return obj
    }
    _applyEndDateToObj(endDate, obj) {
        _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__.ExpressionUtils.setField(this.option("dataAccessors"), "endDate", obj, endDate);
        return obj
    }
    moveAppointmentBack(dragEvent) {
        var $appointment = this._$currentAppointment;
        var size = this._initialSize;
        var coords = this._initialCoordinates;
        if (dragEvent) {
            this._removeDragSourceClassFromDraggedAppointment();
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDeferred)(dragEvent.cancel)) {
                dragEvent.cancel.resolve(true)
            } else {
                dragEvent.cancel = true
            }
        }
        if ($appointment && !dragEvent) {
            if (coords) {
                (0,_animation_translator__WEBPACK_IMPORTED_MODULE_1__.move)($appointment, coords);
                delete this._initialSize
            }
            if (size) {
                (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_14__.setOuterWidth)($appointment, size.width);
                (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_14__.setOuterHeight)($appointment, size.height);
                delete this._initialCoordinates
            }
        }
    }
    focus() {
        if (this._$currentAppointment) {
            var focusedElement = (0,_core_element__WEBPACK_IMPORTED_MODULE_4__.getPublicElement)(this._$currentAppointment);
            this.option("focusedElement", focusedElement);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_16__.default.trigger(focusedElement, "focus")
        }
    }
    splitAppointmentByDay(appointment) {
        var dates = appointment.settings || appointment;
        var dataAccessors = this.option("dataAccessors");
        var originalStartDate = new Date(_ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__.ExpressionUtils.getField(dataAccessors, "startDate", dates));
        var startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_9__.default.makeDate(originalStartDate);
        var endDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_9__.default.makeDate(_ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_23__.ExpressionUtils.getField(dataAccessors, "endDate", dates));
        var maxAllowedDate = this.invoke("getEndViewDate");
        var startDayHour = this.invoke("getStartDayHour");
        var endDayHour = this.invoke("getEndDayHour");
        var timeZoneCalculator = this.option("timeZoneCalculator");
        var adapter = (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_20__.createAppointmentAdapter)(appointment, dataAccessors, timeZoneCalculator);
        var appointmentIsLong = (0,_data_provider_m_utils__WEBPACK_IMPORTED_MODULE_26__.getAppointmentTakesSeveralDays)(adapter);
        var result = [];
        startDate = timeZoneCalculator.createDate(startDate, {
            path: "toGrid"
        });
        endDate = timeZoneCalculator.createDate(endDate, {
            path: "toGrid"
        });
        if (startDate.getHours() <= endDayHour && startDate.getHours() >= startDayHour && !appointmentIsLong) {
            result.push(this._applyStartDateToObj(new Date(startDate), {
                appointmentData: appointment
            }));
            startDate.setDate(startDate.getDate() + 1)
        }
        while (appointmentIsLong && startDate.getTime() < endDate.getTime() && startDate < maxAllowedDate) {
            var currentStartDate = new Date(startDate);
            var currentEndDate = new Date(startDate);
            this._checkStartDate(currentStartDate, originalStartDate, startDayHour);
            this._checkEndDate(currentEndDate, endDate, endDayHour);
            var appointmentData = (0,_core_utils_object__WEBPACK_IMPORTED_MODULE_12__.deepExtendArraySafe)({}, appointment, true);
            var appointmentSettings = {};
            this._applyStartDateToObj(currentStartDate, appointmentSettings);
            this._applyEndDateToObj(currentEndDate, appointmentSettings);
            appointmentData.settings = appointmentSettings;
            result.push(appointmentData);
            startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_9__.default.trimTime(startDate);
            startDate.setDate(startDate.getDate() + 1);
            startDate.setHours(startDayHour)
        }
        return result
    }
    _checkStartDate(currentDate, originalDate, startDayHour) {
        if (!_core_utils_date__WEBPACK_IMPORTED_MODULE_9__.default.sameDate(currentDate, originalDate) || currentDate.getHours() <= startDayHour) {
            currentDate.setHours(startDayHour, 0, 0, 0)
        } else {
            currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds())
        }
    }
    _checkEndDate(currentDate, originalDate, endDayHour) {
        if (!_core_utils_date__WEBPACK_IMPORTED_MODULE_9__.default.sameDate(currentDate, originalDate) || currentDate.getHours() > endDayHour) {
            currentDate.setHours(endDayHour, 0, 0, 0)
        } else {
            currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds())
        }
    }
    _removeDragSourceClassFromDraggedAppointment() {
        var $appointments = this._itemElements().filter(".".concat(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_21__.APPOINTMENT_DRAG_SOURCE_CLASS));
        $appointments.each((_, element) => {
            var appointmentInstance = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(element).dxSchedulerAppointment("instance");
            appointmentInstance.option("isDragSource", false)
        })
    }
    _setDragSourceAppointment(appointment, settings) {
        var $appointments = this._findItemElementByItem(appointment);
        var {
            startDate: startDate,
            endDate: endDate
        } = settings.info.sourceAppointment;
        var {
            groupIndex: groupIndex
        } = settings;
        $appointments.forEach($item => {
            var {
                info: itemInfo,
                groupIndex: itemGroupIndex
            } = $item.data(_ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_22__.APPOINTMENT_SETTINGS_KEY);
            var {
                startDate: itemStartDate,
                endDate: itemEndDate
            } = itemInfo.sourceAppointment;
            var appointmentInstance = $item.dxSchedulerAppointment("instance");
            var isDragSource = startDate.getTime() === itemStartDate.getTime() && endDate.getTime() === itemEndDate.getTime() && groupIndex === itemGroupIndex;
            appointmentInstance.option("isDragSource", isDragSource)
        })
    }
    updateResizableArea() {
        var $allResizableElements = this.$element().find(".dx-scheduler-appointment.dx-resizable");
        var horizontalResizables = (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_8__.grep)($allResizableElements, el => {
            var $el = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(el);
            var resizableInst = $el.dxResizable("instance");
            var {
                area: area,
                handles: handles
            } = resizableInst.option();
            return ("right left" === handles || "left right" === handles) && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isPlainObject)(area)
        });
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)(horizontalResizables, (_, el) => {
            var $el = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)(el);
            var position = (0,_animation_translator__WEBPACK_IMPORTED_MODULE_1__.locate)($el);
            var appointmentData = this._getItemData($el);
            var area = this._calculateResizableArea({
                left: position.left
            }, appointmentData);
            $el.dxResizable("instance").option("area", area)
        })
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_2__.default)("dxSchedulerAppointments", SchedulerAppointments);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerAppointments);


/***/ }),

/***/ 61865:
/*!***********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_appointment_layout.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAppointmentLayout": function() { return /* binding */ createAppointmentLayout; },
/* harmony export */   "createAgendaAppointmentLayout": function() { return /* binding */ createAgendaAppointmentLayout; }
/* harmony export */ });
/* harmony import */ var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/dom_adapter */ 81113);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../localization/message */ 19336);
/* harmony import */ var _ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../ui/scheduler/classes */ 19156);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/m_appointment_layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var allDayText = " ".concat(_localization_message__WEBPACK_IMPORTED_MODULE_2__.default.format("dxScheduler-allDay"), ": ");
var createAppointmentLayout = (formatText, config) => {
    var result = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_0__.default.createDocumentFragment());
    (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").text(formatText.text).addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_TITLE).appendTo(result);
    if (config.html) {
        result.html(config.html)
    }
    var $contentDetails = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_CONTENT_DETAILS).appendTo(result);
    (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_DATE).text(formatText.formatDate).appendTo($contentDetails);
    config.isRecurrence && (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<span>").addClass("".concat(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.RECURRING_ICON, " dx-icon-repeat")).appendTo(result);
    config.isAllDay && (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").text(allDayText).addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.ALL_DAY_CONTENT).prependTo($contentDetails);
    return result
};
var createAgendaAppointmentLayout = (formatText, config) => {
    var result = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_0__.default.createDocumentFragment());
    var leftLayoutContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass("dx-scheduler-agenda-appointment-left-layout").appendTo(result);
    var rightLayoutContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass("dx-scheduler-agenda-appointment-right-layout").appendTo(result);
    var marker = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.AGENDA_MARKER).appendTo(leftLayoutContainer);
    config.isRecurrence && (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<span>").addClass("".concat(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.RECURRING_ICON, " dx-icon-repeat")).appendTo(marker);
    (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_TITLE).text(formatText.text).appendTo(rightLayoutContainer);
    var additionalContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_CONTENT_DETAILS).appendTo(rightLayoutContainer);
    (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_DATE).text(formatText.formatDate).appendTo(additionalContainer);
    if (config.isAllDay) {
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").text(allDayText).addClass(_ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.ALL_DAY_CONTENT).prependTo(additionalContainer)
    }
    return result
};


/***/ }),

/***/ 34290:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_cell_position_calculator.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CellPositionCalculator": function() { return /* binding */ CellPositionCalculator; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/m_cell_position_calculator.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class BaseStrategy {
    constructor(options) {
        this.isVirtualScrolling = false;
        this.options = options
    }
    get DOMMetaData() {
        return this.options.DOMMetaData
    }
    get appointments() {
        return this.options.dateSettings
    }
    get viewDataProvider() {
        return this.options.viewDataProvider
    }
    get positionHelper() {
        return this.options.positionHelper
    }
    get startViewDate() {
        return this.options.startViewDate
    }
    get viewStartDayHour() {
        return this.options.viewStartDayHour
    }
    get viewEndDayHour() {
        return this.options.viewEndDayHour
    }
    get cellDuration() {
        return this.options.cellDuration
    }
    get getPositionShift() {
        return this.options.getPositionShiftCallback
    }
    get groupCount() {
        return this.options.groupCount
    }
    get rtlEnabled() {
        return this.options.rtlEnabled
    }
    get isVerticalGrouping() {
        return this.options.isVerticalGroupOrientation
    }
    get showAllDayPanel() {
        return this.options.showAllDayPanel
    }
    get supportAllDayRow() {
        return this.options.supportAllDayRow
    }
    get isGroupedAllDayPanel() {
        return this.options.isGroupedAllDayPanel
    }
    calculateCellPositions(groupIndices, isAllDayRowAppointment, isRecurrentAppointment) {
        var result = [];
        this.appointments.forEach((dateSetting, index) => {
            var coordinates = this.getCoordinateInfos({
                appointment: dateSetting,
                groupIndices: groupIndices,
                isAllDayRowAppointment: isAllDayRowAppointment,
                isRecurrentAppointment: isRecurrentAppointment
            });
            coordinates.forEach(item => {
                !!item && result.push(this._prepareObject(item, index))
            })
        });
        return result
    }
    getCoordinateInfos(options) {
        var {
            appointment: appointment,
            isAllDayRowAppointment: isAllDayRowAppointment,
            groupIndices: groupIndices,
            recurrent: recurrent
        } = options;
        var {
            startDate: startDate
        } = appointment;
        var groupIndex = !recurrent ? appointment.source.groupIndex : void 0;
        return this.getCoordinatesByDateInGroup(startDate, groupIndices, isAllDayRowAppointment, groupIndex)
    }
    _prepareObject(position, dateSettingIndex) {
        position.dateSettingIndex = dateSettingIndex;
        return {
            coordinates: position,
            dateSettingIndex: dateSettingIndex
        }
    }
    getCoordinatesByDate(date, groupIndex, inAllDayRow) {
        var validGroupIndex = groupIndex || 0;
        var cellInfo = {
            groupIndex: validGroupIndex,
            startDate: date,
            isAllDay: inAllDayRow
        };
        var positionByMap = this.viewDataProvider.findCellPositionInMap(cellInfo);
        if (!positionByMap) {
            return
        }
        var position = this.getCellPosition(positionByMap, inAllDayRow && !this.isVerticalGrouping);
        var timeShift = inAllDayRow ? 0 : this.getTimeShift(date);
        var shift = this.getPositionShift(timeShift, inAllDayRow);
        var horizontalHMax = this.positionHelper.getHorizontalMax(validGroupIndex, date);
        var verticalMax = this.positionHelper.getVerticalMax({
            groupIndex: validGroupIndex,
            isVirtualScrolling: this.isVirtualScrolling,
            showAllDayPanel: this.showAllDayPanel,
            supportAllDayRow: this.supportAllDayRow,
            isGroupedAllDayPanel: this.isGroupedAllDayPanel,
            isVerticalGrouping: this.isVerticalGrouping
        });
        return {
            positionByMap: positionByMap,
            cellPosition: position.left + shift.cellPosition,
            top: position.top + shift.top,
            left: position.left + shift.left,
            rowIndex: position.rowIndex,
            columnIndex: position.columnIndex,
            hMax: horizontalHMax,
            vMax: verticalMax,
            groupIndex: validGroupIndex
        }
    }
    getCoordinatesByDateInGroup(startDate, groupIndices, inAllDayRow, groupIndex) {
        var result = [];
        if (this.viewDataProvider.isSkippedDate(startDate)) {
            return result
        }
        var validGroupIndices = [groupIndex];
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(groupIndex)) {
            validGroupIndices = this.groupCount ? groupIndices : [0]
        }
        validGroupIndices.forEach(groupIndex => {
            var coordinates = this.getCoordinatesByDate(startDate, groupIndex, inAllDayRow);
            if (coordinates) {
                result.push(coordinates)
            }
        });
        return result
    }
    getCellPosition(cellCoordinates, isAllDayPanel) {
        var {
            dateTableCellsMeta: dateTableCellsMeta,
            allDayPanelCellsMeta: allDayPanelCellsMeta
        } = this.DOMMetaData;
        var {
            columnIndex: columnIndex,
            rowIndex: rowIndex
        } = cellCoordinates;
        var position = isAllDayPanel ? allDayPanelCellsMeta[columnIndex] : dateTableCellsMeta[rowIndex][columnIndex];
        var validPosition = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, position);
        if (this.rtlEnabled) {
            validPosition.left += position.width
        }
        if (validPosition) {
            validPosition.rowIndex = cellCoordinates.rowIndex;
            validPosition.columnIndex = cellCoordinates.columnIndex
        }
        return validPosition
    }
    getTimeShift(date) {
        var currentDayStart = new Date(date);
        var currentDayEndHour = new Date(new Date(date).setHours(this.viewEndDayHour, 0, 0));
        if (date.getTime() <= currentDayEndHour.getTime()) {
            currentDayStart.setHours(this.viewStartDayHour, 0, 0, 0)
        }
        var timeZoneDifference = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.getTimezonesDifference(date, currentDayStart);
        var currentDateTime = date.getTime();
        var currentDayStartTime = currentDayStart.getTime();
        var minTime = this.startViewDate.getTime();
        return currentDateTime > minTime ? (currentDateTime - currentDayStartTime + timeZoneDifference) % this.cellDuration / this.cellDuration : 0
    }
}
class VirtualStrategy extends BaseStrategy {
    constructor() {
        super(...arguments);
        this.isVirtualScrolling = true
    }
    calculateCellPositions(groupIndices, isAllDayRowAppointment, isRecurrentAppointment) {
        var appointments = isAllDayRowAppointment ? this.appointments : this.appointments.filter(_ref => {
            var {
                source: source,
                startDate: startDate,
                endDate: endDate
            } = _ref;
            return this.viewDataProvider.isGroupIntersectDateInterval(source.groupIndex, startDate, endDate)
        });
        if (isRecurrentAppointment) {
            return this.createRecurrentAppointmentInfos(appointments, isAllDayRowAppointment)
        }
        return super.calculateCellPositions(groupIndices, isAllDayRowAppointment, isRecurrentAppointment)
    }
    createRecurrentAppointmentInfos(dateSettings, isAllDayRowAppointment) {
        var result = [];
        dateSettings.forEach((_ref2, index) => {
            var {
                source: source,
                startDate: startDate
            } = _ref2;
            var coordinate = this.getCoordinatesByDate(startDate, source.groupIndex, isAllDayRowAppointment);
            if (coordinate) {
                result.push(this._prepareObject(coordinate, index))
            }
        });
        return result
    }
}
class CellPositionCalculator {
    constructor(options) {
        this.options = options
    }
    calculateCellPositions(groupIndices, isAllDayRowAppointment, isRecurrentAppointment) {
        var strategy = this.options.isVirtualScrolling ? new VirtualStrategy(this.options) : new BaseStrategy(this.options);
        return strategy.calculateCellPositions(groupIndices, isAllDayRowAppointment, isRecurrentAppointment)
    }
}


/***/ }),

/***/ 95126:
/*!***********************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_render.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "renderAppointments": function() { return /* binding */ renderAppointments; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _ui_scheduler_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../ui/scheduler/utils */ 56943);
/* harmony import */ var _renovation_ui_scheduler_appointment_layout_j__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/appointment/layout.j */ 13812);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/m_render.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var renderAppointments = options => {
    var {
        instance: instance,
        $dateTable: $dateTable,
        viewModel: viewModel
    } = options;
    var container = getAppointmentsContainer($dateTable);
    _ui_scheduler_utils__WEBPACK_IMPORTED_MODULE_1__.utils.renovation.renderComponent(instance, container, _renovation_ui_scheduler_appointment_layout_j__WEBPACK_IMPORTED_MODULE_2__.default, "renovatedAppointments", viewModel)
};
var getAppointmentsContainer = $dateTable => {
    var container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(".dx-appointments-container");
    if (0 === container.length) {
        container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass("dx-appointments-container").appendTo($dateTable)
    }
    return container
};


/***/ }),

/***/ 66767:
/*!***********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_settings_generator.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DateGeneratorBaseStrategy": function() { return /* binding */ DateGeneratorBaseStrategy; },
/* harmony export */   "DateGeneratorVirtualStrategy": function() { return /* binding */ DateGeneratorVirtualStrategy; },
/* harmony export */   "AppointmentSettingsGenerator": function() { return /* binding */ AppointmentSettingsGenerator; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../ui/scheduler/appointmentAdapter */ 50760);
/* harmony import */ var _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../ui/scheduler/expressionUtils */ 91286);
/* harmony import */ var _ui_scheduler_recurrence__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../ui/scheduler/recurrence */ 68155);
/* harmony import */ var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../ui/scheduler/utils.timeZone */ 53374);
/* harmony import */ var _resources_m_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../resources/m_utils */ 48025);
/* harmony import */ var _m_cell_position_calculator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./m_cell_position_calculator */ 34290);
/* harmony import */ var _m_text_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./m_text_utils */ 3092);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/m_settings_generator.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */












var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds;
var APPOINTMENT_DATE_TEXT_FORMAT = "TIME";
class DateGeneratorBaseStrategy {
    constructor(options) {
        this.options = options
    }
    get rawAppointment() {
        return this.options.rawAppointment
    }
    get timeZoneCalculator() {
        return this.options.timeZoneCalculator
    }
    get viewDataProvider() {
        return this.options.viewDataProvider
    }
    get appointmentTakesAllDay() {
        return this.options.appointmentTakesAllDay
    }
    get supportAllDayRow() {
        return this.options.supportAllDayRow
    }
    get isAllDayRowAppointment() {
        return this.options.isAllDayRowAppointment
    }
    get timeZone() {
        return this.options.timeZone
    }
    get dateRange() {
        return this.options.dateRange
    }
    get firstDayOfWeek() {
        return this.options.firstDayOfWeek
    }
    get viewStartDayHour() {
        return this.options.viewStartDayHour
    }
    get viewEndDayHour() {
        return this.options.viewEndDayHour
    }
    get endViewDate() {
        return this.options.endViewDate
    }
    get viewType() {
        return this.options.viewType
    }
    get isGroupedByDate() {
        return this.options.isGroupedByDate
    }
    get isVerticalOrientation() {
        return this.options.isVerticalGroupOrientation
    }
    get dataAccessors() {
        return this.options.dataAccessors
    }
    get loadedResources() {
        return this.options.loadedResources
    }
    get isDateAppointment() {
        return !(0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.isDateAndTimeView)(this.viewType) && this.appointmentTakesAllDay
    }
    getIntervalDuration() {
        return this.appointmentTakesAllDay ? this.options.allDayIntervalDuration : this.options.intervalDuration
    }
    generate(appointmentAdapter) {
        var itemGroupIndices = this._getGroupIndices(this.rawAppointment);
        var appointmentList = this._createAppointments(appointmentAdapter, itemGroupIndices);
        appointmentList = this._getProcessedByAppointmentTimeZone(appointmentList, appointmentAdapter);
        if (this._canProcessNotNativeTimezoneDates(appointmentAdapter)) {
            appointmentList = this._getProcessedNotNativeTimezoneDates(appointmentList, appointmentAdapter)
        }
        var dateSettings = this._createGridAppointmentList(appointmentList, appointmentAdapter);
        var firstViewDates = this._getAppointmentsFirstViewDate(dateSettings);
        this._fillNormalizedStartDate(dateSettings, firstViewDates);
        dateSettings = this._cropAppointmentsByStartDayHour(dateSettings, firstViewDates);
        dateSettings = this._fillNormalizedEndDate(dateSettings, this.rawAppointment);
        if (this._needSeparateLongParts()) {
            dateSettings = this._separateLongParts(dateSettings, appointmentAdapter)
        }
        var {
            isRecurrent: isRecurrent
        } = appointmentAdapter;
        return {
            dateSettings: dateSettings,
            itemGroupIndices: itemGroupIndices,
            isRecurrent: isRecurrent
        }
    }
    _getProcessedByAppointmentTimeZone(appointmentList, appointment) {
        var hasAppointmentTimeZone = !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(appointment.startDateTimeZone) || !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(appointment.endDateTimeZone);
        if (hasAppointmentTimeZone) {
            var appointmentOffsets = {
                startDate: this.timeZoneCalculator.getOffsets(appointment.startDate, appointment.startDateTimeZone),
                endDate: this.timeZoneCalculator.getOffsets(appointment.endDate, appointment.endDateTimeZone)
            };
            appointmentList.forEach(a => {
                var sourceOffsets_startDate = this.timeZoneCalculator.getOffsets(a.startDate, appointment.startDateTimeZone),
                    sourceOffsets_endDate = this.timeZoneCalculator.getOffsets(a.endDate, appointment.endDateTimeZone);
                var startDateOffsetDiff = appointmentOffsets.startDate.appointment - sourceOffsets_startDate.appointment;
                var endDateOffsetDiff = appointmentOffsets.endDate.appointment - sourceOffsets_endDate.appointment;
                if (sourceOffsets_startDate.appointment !== sourceOffsets_startDate.common) {
                    a.startDate = new Date(a.startDate.getTime() + startDateOffsetDiff * toMs("hour"))
                }
                if (sourceOffsets_endDate.appointment !== sourceOffsets_endDate.common) {
                    a.endDate = new Date(a.endDate.getTime() + endDateOffsetDiff * toMs("hour"))
                }
            })
        }
        return appointmentList
    }
    _createAppointments(appointment, groupIndices) {
        var appointments = this._createRecurrenceAppointments(appointment, groupIndices);
        if (!appointment.isRecurrent && 0 === appointments.length) {
            appointments.push({
                startDate: appointment.startDate,
                endDate: appointment.endDate
            })
        }
        appointments = appointments.map(item => {
            var _a;
            var resultEndTime = null === (_a = item.endDate) || void 0 === _a ? void 0 : _a.getTime();
            if (item.startDate.getTime() === resultEndTime) {
                item.endDate.setTime(resultEndTime + toMs("minute"))
            }
            return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, item), {
                exceptionDate: new Date(item.startDate)
            })
        });
        return appointments
    }
    _canProcessNotNativeTimezoneDates(appointment) {
        var isTimeZoneSet = !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(this.timeZone);
        if (!isTimeZoneSet) {
            return false
        }
        if (!appointment.isRecurrent) {
            return false
        }
        return !_ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_8__.default.isEqualLocalTimeZone(this.timeZone, appointment.startDate)
    }
    _getProcessedNotNativeDateIfCrossDST(date, offset) {
        if (offset < 0) {
            var newDate = new Date(date);
            var newDateMinusOneHour = new Date(newDate);
            newDateMinusOneHour.setHours(newDateMinusOneHour.getHours() - 1);
            var newDateOffset = this.timeZoneCalculator.getOffsets(newDate).common;
            var newDateMinusOneHourOffset = this.timeZoneCalculator.getOffsets(newDateMinusOneHour).common;
            if (newDateOffset !== newDateMinusOneHourOffset) {
                return 0
            }
        }
        return offset
    }
    _getCommonOffset(date) {
        return this.timeZoneCalculator.getOffsets(date).common
    }
    _getProcessedNotNativeTimezoneDates(appointmentList, appointment) {
        return appointmentList.map(item => {
            var diffStartDateOffset = this._getCommonOffset(appointment.startDate) - this._getCommonOffset(item.startDate);
            var diffEndDateOffset = this._getCommonOffset(appointment.endDate) - this._getCommonOffset(item.endDate);
            if (0 === diffStartDateOffset && 0 === diffEndDateOffset) {
                return item
            }
            diffStartDateOffset = this._getProcessedNotNativeDateIfCrossDST(item.startDate, diffStartDateOffset);
            diffEndDateOffset = this._getProcessedNotNativeDateIfCrossDST(item.endDate, diffEndDateOffset);
            var newStartDate = new Date(item.startDate.getTime() + diffStartDateOffset * toMs("hour"));
            var newEndDate = new Date(item.endDate.getTime() + diffEndDateOffset * toMs("hour"));
            var testNewStartDate = this.timeZoneCalculator.createDate(newStartDate, {
                path: "toGrid"
            });
            var testNewEndDate = this.timeZoneCalculator.createDate(newEndDate, {
                path: "toGrid"
            });
            if (appointment.duration > testNewEndDate.getTime() - testNewStartDate.getTime()) {
                newEndDate = new Date(newStartDate.getTime() + appointment.duration)
            }
            return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, item), {
                startDate: newStartDate,
                endDate: newEndDate,
                exceptionDate: new Date(newStartDate)
            })
        })
    }
    _needSeparateLongParts() {
        return this.isVerticalOrientation ? this.isGroupedByDate : this.isGroupedByDate && this.appointmentTakesAllDay
    }
    normalizeEndDateByViewEnd(rawAppointment, endDate) {
        var result = new Date(endDate.getTime());
        var isAllDay = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.isDateAndTimeView)(this.viewType) && this.appointmentTakesAllDay;
        if (!isAllDay) {
            var roundedEndViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.roundToHour(this.endViewDate);
            if (result > roundedEndViewDate) {
                result = roundedEndViewDate
            }
        }
        var endDayHour = this.viewEndDayHour;
        var allDay = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_6__.ExpressionUtils.getField(this.dataAccessors, "allDay", rawAppointment);
        var currentViewEndTime = new Date(new Date(endDate.getTime()).setHours(endDayHour, 0, 0, 0));
        if (result.getTime() > currentViewEndTime.getTime() || allDay && result.getHours() < endDayHour) {
            result = currentViewEndTime
        }
        return result
    }
    _fillNormalizedEndDate(dateSettings, rawAppointment) {
        return dateSettings.map(item => {
            var {
                endDate: endDate
            } = item;
            var normalizedEndDate = this.normalizeEndDateByViewEnd(rawAppointment, endDate);
            return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, item), {
                normalizedEndDate: normalizedEndDate
            })
        })
    }
    _separateLongParts(gridAppointmentList, appointmentAdapter) {
        var result = [];
        gridAppointmentList.forEach(gridAppointment => {
            var maxDate = new Date(this.dateRange[1]);
            var {
                normalizedEndDate: endDateOfPart
            } = gridAppointment;
            var longStartDateParts = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.getDatesOfInterval(gridAppointment.startDate, endDateOfPart, {
                milliseconds: this.getIntervalDuration()
            });
            var list = longStartDateParts.filter(startDatePart => new Date(startDatePart) < maxDate).map(date => {
                var endDate = new Date(new Date(date).setMilliseconds(appointmentAdapter.duration));
                var normalizedEndDate = this.normalizeEndDateByViewEnd(this.rawAppointment, endDate);
                return {
                    startDate: date,
                    endDate: endDate,
                    normalizedEndDate: normalizedEndDate,
                    source: gridAppointment.source
                }
            });
            result = result.concat(list)
        });
        return result
    }
    _createGridAppointmentList(appointmentList, appointmentAdapter) {
        return appointmentList.map(source => {
            var offsetDifference = appointmentAdapter.startDate.getTimezoneOffset() - source.startDate.getTimezoneOffset();
            if (0 !== offsetDifference && this._canProcessNotNativeTimezoneDates(appointmentAdapter)) {
                source.startDate = new Date(source.startDate.getTime() + offsetDifference * toMs("minute"));
                source.endDate = new Date(source.endDate.getTime() + offsetDifference * toMs("minute"));
                source.exceptionDate = new Date(source.startDate)
            }
            var startDate = this.timeZoneCalculator.createDate(source.startDate, {
                path: "toGrid"
            });
            var endDate = this.timeZoneCalculator.createDate(source.endDate, {
                path: "toGrid"
            });
            return {
                startDate: startDate,
                endDate: endDate,
                allDay: appointmentAdapter.allDay || false,
                source: source
            }
        })
    }
    _createExtremeRecurrenceDates(groupIndex) {
        var startViewDate = this.appointmentTakesAllDay ? _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.trimTime(this.dateRange[0]) : this.dateRange[0];
        var endViewDateByEndDayHour = this.dateRange[1];
        if (this.timeZone) {
            startViewDate = this.timeZoneCalculator.createDate(startViewDate, {
                path: "fromGrid"
            });
            endViewDateByEndDayHour = this.timeZoneCalculator.createDate(endViewDateByEndDayHour, {
                path: "fromGrid"
            });
            var daylightOffset = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_8__.default.getDaylightOffsetInMs(startViewDate, endViewDateByEndDayHour);
            if (daylightOffset) {
                endViewDateByEndDayHour = new Date(endViewDateByEndDayHour.getTime() + daylightOffset)
            }
        }
        return [startViewDate, endViewDateByEndDayHour]
    }
    _createRecurrenceOptions(appointment, groupIndex) {
        var [minRecurrenceDate, maxRecurrenceDate] = this._createExtremeRecurrenceDates(groupIndex);
        return {
            rule: appointment.recurrenceRule,
            exception: appointment.recurrenceException,
            min: minRecurrenceDate,
            max: maxRecurrenceDate,
            firstDayOfWeek: this.firstDayOfWeek,
            start: appointment.startDate,
            end: appointment.endDate,
            appointmentTimezoneOffset: this.timeZoneCalculator.getOriginStartDateOffsetInMs(appointment.startDate, appointment.rawAppointment.startDateTimeZone, true),
            getPostProcessedException: date => {
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(this.timeZone) || _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_8__.default.isEqualLocalTimeZone(this.timeZone, date)) {
                    return date
                }
                var appointmentOffset = this.timeZoneCalculator.getOffsets(appointment.startDate).common;
                var exceptionAppointmentOffset = this.timeZoneCalculator.getOffsets(date).common;
                var diff = appointmentOffset - exceptionAppointmentOffset;
                diff = this._getProcessedNotNativeDateIfCrossDST(date, diff);
                return new Date(date.getTime() - diff * _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds("hour"))
            }
        }
    }
    _createRecurrenceAppointments(appointment, groupIndices) {
        var {
            duration: duration
        } = appointment;
        var option = this._createRecurrenceOptions(appointment);
        var generatedStartDates = (0,_ui_scheduler_recurrence__WEBPACK_IMPORTED_MODULE_7__.getRecurrenceProcessor)().generateDates(option);
        return generatedStartDates.map(date => {
            var utcDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_8__.default.createUTCDateWithLocalOffset(date);
            utcDate.setTime(utcDate.getTime() + duration);
            var endDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_8__.default.createDateFromUTCWithLocalOffset(utcDate);
            return {
                startDate: new Date(date),
                endDate: endDate
            }
        })
    }
    _getAppointmentsFirstViewDate(appointments) {
        return appointments.map(appointment => this._getAppointmentFirstViewDate(appointment))
    }
    _fillNormalizedStartDate(appointments, firstViewDates, rawAppointment) {
        appointments.forEach((appointment, idx) => {
            appointment.startDate = this._getAppointmentResultDate({
                appointment: appointment,
                rawAppointment: rawAppointment,
                startDate: new Date(appointment.startDate),
                startDayHour: this.viewStartDayHour,
                firstViewDate: firstViewDates[idx]
            })
        })
    }
    _cropAppointmentsByStartDayHour(appointments, firstViewDates) {
        return appointments.filter((appointment, idx) => {
            if (!firstViewDates[idx]) {
                return false
            }
            if (this.appointmentTakesAllDay) {
                return true
            }
            return appointment.endDate > appointment.startDate
        })
    }
    _getAppointmentResultDate(options) {
        var {
            appointment: appointment,
            startDayHour: startDayHour,
            firstViewDate: firstViewDate
        } = options;
        var {
            startDate: startDate
        } = options;
        var resultDate;
        if (this.appointmentTakesAllDay) {
            resultDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.normalizeDate(startDate, firstViewDate)
        } else {
            if (startDate < firstViewDate) {
                startDate = firstViewDate
            }
            resultDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.normalizeDate(appointment.startDate, startDate)
        }
        return !this.isDateAppointment ? _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.roundDateByStartDayHour(resultDate, startDayHour) : resultDate
    }
    _getAppointmentFirstViewDate(appointment) {
        var groupIndex = appointment.source.groupIndex || 0;
        var {
            startDate: startDate,
            endDate: endDate
        } = appointment;
        if (this.isAllDayRowAppointment || appointment.allDay) {
            return this.viewDataProvider.findAllDayGroupCellStartDate(groupIndex, startDate)
        }
        return this.viewDataProvider.findGroupCellStartDate(groupIndex, startDate, endDate, this.isDateAppointment)
    }
    _getGroupIndices(rawAppointment) {
        var result = [];
        if (rawAppointment && this.loadedResources.length) {
            var tree = (0,_resources_m_utils__WEBPACK_IMPORTED_MODULE_9__.createResourcesTree)(this.loadedResources);
            result = (0,_resources_m_utils__WEBPACK_IMPORTED_MODULE_9__.getResourceTreeLeaves)((field, action) => (0,_resources_m_utils__WEBPACK_IMPORTED_MODULE_9__.getDataAccessors)(this.options.dataAccessors.resources, field, action), tree, rawAppointment)
        }
        return result
    }
}
class DateGeneratorVirtualStrategy extends DateGeneratorBaseStrategy {
    get groupCount() {
        return (0,_resources_m_utils__WEBPACK_IMPORTED_MODULE_9__.getGroupCount)(this.loadedResources)
    }
    _createRecurrenceAppointments(appointment, groupIndices) {
        var {
            duration: duration
        } = appointment;
        var result = [];
        var validGroupIndices = this.groupCount ? groupIndices : [0];
        validGroupIndices.forEach(groupIndex => {
            var option = this._createRecurrenceOptions(appointment, groupIndex);
            var generatedStartDates = (0,_ui_scheduler_recurrence__WEBPACK_IMPORTED_MODULE_7__.getRecurrenceProcessor)().generateDates(option);
            var recurrentInfo = generatedStartDates.map(date => {
                var startDate = new Date(date);
                var utcDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_8__.default.createUTCDateWithLocalOffset(date);
                utcDate.setTime(utcDate.getTime() + duration);
                var endDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_8__.default.createDateFromUTCWithLocalOffset(utcDate);
                return {
                    startDate: startDate,
                    endDate: endDate,
                    groupIndex: groupIndex
                }
            });
            result.push(...recurrentInfo)
        });
        return result
    }
    _updateGroupIndices(appointments, groupIndices) {
        var result = [];
        groupIndices.forEach(groupIndex => {
            var groupStartDate = this.viewDataProvider.getGroupStartDate(groupIndex);
            if (groupStartDate) {
                appointments.forEach(appointment => {
                    var appointmentCopy = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({}, appointment);
                    appointmentCopy.groupIndex = groupIndex;
                    result.push(appointmentCopy)
                })
            }
        });
        return result
    }
    _getGroupIndices(resources) {
        var groupIndices = super._getGroupIndices(resources);
        var viewDataGroupIndices = this.viewDataProvider.getGroupIndices();
        if (!(null === groupIndices || void 0 === groupIndices ? void 0 : groupIndices.length)) {
            groupIndices = [0]
        }
        return groupIndices.filter(groupIndex => -1 !== viewDataGroupIndices.indexOf(groupIndex))
    }
    _createAppointments(appointment, groupIndices) {
        var appointments = super._createAppointments(appointment, groupIndices);
        return !appointment.isRecurrent ? this._updateGroupIndices(appointments, groupIndices) : appointments
    }
}
class AppointmentSettingsGenerator {
    constructor(options) {
        this.options = options;
        this.appointmentAdapter = (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_5__.createAppointmentAdapter)(this.rawAppointment, this.dataAccessors, this.timeZoneCalculator)
    }
    get rawAppointment() {
        return this.options.rawAppointment
    }
    get dataAccessors() {
        return this.options.dataAccessors
    }
    get timeZoneCalculator() {
        return this.options.timeZoneCalculator
    }
    get isAllDayRowAppointment() {
        return this.options.appointmentTakesAllDay && this.options.supportAllDayRow
    }
    get groups() {
        return this.options.groups
    }
    get dateSettingsStrategy() {
        var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this.options), {
            isAllDayRowAppointment: this.isAllDayRowAppointment
        });
        return this.options.isVirtualScrolling ? new DateGeneratorVirtualStrategy(options) : new DateGeneratorBaseStrategy(options)
    }
    create() {
        var {
            dateSettings: dateSettings,
            itemGroupIndices: itemGroupIndices,
            isRecurrent: isRecurrent
        } = this._generateDateSettings();
        var cellPositions = this._calculateCellPositions(dateSettings, itemGroupIndices);
        var result = this._prepareAppointmentInfos(dateSettings, cellPositions, isRecurrent);
        return result
    }
    _generateDateSettings() {
        return this.dateSettingsStrategy.generate(this.appointmentAdapter)
    }
    _calculateCellPositions(dateSettings, itemGroupIndices) {
        var cellPositionCalculator = new _m_cell_position_calculator__WEBPACK_IMPORTED_MODULE_10__.CellPositionCalculator((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this.options), {
            dateSettings: dateSettings
        }));
        return cellPositionCalculator.calculateCellPositions(itemGroupIndices, this.isAllDayRowAppointment, this.appointmentAdapter.isRecurrent)
    }
    _prepareAppointmentInfos(dateSettings, cellPositions, isRecurrent) {
        var infos = [];
        cellPositions.forEach(_ref => {
            var {
                coordinates: coordinates,
                dateSettingIndex: dateSettingIndex
            } = _ref;
            var dateSetting = dateSettings[dateSettingIndex];
            var dateText = this._getAppointmentDateText(dateSetting);
            var info = {
                appointment: dateSetting,
                sourceAppointment: dateSetting.source,
                dateText: dateText,
                isRecurrent: isRecurrent
            };
            infos.push((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, coordinates), {
                info: info
            }))
        });
        return infos
    }
    _getAppointmentDateText(sourceAppointment) {
        var {
            startDate: startDate,
            endDate: endDate,
            allDay: allDay
        } = sourceAppointment;
        return (0,_m_text_utils__WEBPACK_IMPORTED_MODULE_11__.createFormattedDateText)({
            startDate: startDate,
            endDate: endDate,
            allDay: allDay,
            format: APPOINTMENT_DATE_TEXT_FORMAT
        })
    }
}


/***/ }),

/***/ 3092:
/*!***************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_text_utils.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createFormattedDateText": function() { return /* binding */ createFormattedDateText; },
/* harmony export */   "getFormatType": function() { return /* binding */ getFormatType; },
/* harmony export */   "formatDates": function() { return /* binding */ formatDates; }
/* harmony export */ });
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../localization/date */ 83881);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/m_text_utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var createFormattedDateText = options => {
    var {
        startDate: startDate,
        endDate: endDate,
        allDay: allDay,
        format: format
    } = options;
    var formatType = format || getFormatType(startDate, endDate, allDay);
    return formatDates(startDate, endDate, formatType)
};
var getFormatType = (startDate, endDate, isAllDay, isDateAndTimeView) => {
    if (isAllDay) {
        return "DATE"
    }
    if (isDateAndTimeView && _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.sameDate(startDate, endDate)) {
        return "TIME"
    }
    return "DATETIME"
};
var formatDates = (startDate, endDate, formatType) => {
    var isSameDate = startDate.getDate() === endDate.getDate();
    switch (formatType) {
        case "DATETIME":
            return [_localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(startDate, "monthandday"), " ", _localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(startDate, "shorttime"), " - ", isSameDate ? "" : "".concat(_localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(endDate, "monthandday"), " "), _localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(endDate, "shorttime")].join("");
        case "TIME":
            return "".concat(_localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(startDate, "shorttime"), " - ").concat(_localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(endDate, "shorttime"));
        case "DATE":
            return "".concat(_localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(startDate, "monthandday")).concat(isSameDate ? "" : " - ".concat(_localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(endDate, "monthandday")))
    }
};


/***/ }),

/***/ 69929:
/*!*************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_view_model_generator.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppointmentViewModelGenerator": function() { return /* binding */ AppointmentViewModelGenerator; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _renovation_ui_scheduler_appointment_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/appointment/utils */ 259);
/* harmony import */ var _rendering_strategies_m_strategy_agenda__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rendering_strategies/m_strategy_agenda */ 92323);
/* harmony import */ var _rendering_strategies_m_strategy_horizontal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rendering_strategies/m_strategy_horizontal */ 61061);
/* harmony import */ var _rendering_strategies_m_strategy_horizontal_month__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rendering_strategies/m_strategy_horizontal_month */ 74812);
/* harmony import */ var _rendering_strategies_m_strategy_horizontal_month_line__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rendering_strategies/m_strategy_horizontal_month_line */ 69254);
/* harmony import */ var _rendering_strategies_m_strategy_vertical__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rendering_strategies/m_strategy_vertical */ 21163);
/* harmony import */ var _rendering_strategies_m_strategy_week__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rendering_strategies/m_strategy_week */ 48926);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/m_view_model_generator.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */








var RENDERING_STRATEGIES = {
    horizontal: _rendering_strategies_m_strategy_horizontal__WEBPACK_IMPORTED_MODULE_3__.default,
    horizontalMonth: _rendering_strategies_m_strategy_horizontal_month__WEBPACK_IMPORTED_MODULE_4__.default,
    horizontalMonthLine: _rendering_strategies_m_strategy_horizontal_month_line__WEBPACK_IMPORTED_MODULE_5__.default,
    vertical: _rendering_strategies_m_strategy_vertical__WEBPACK_IMPORTED_MODULE_6__.default,
    week: _rendering_strategies_m_strategy_week__WEBPACK_IMPORTED_MODULE_7__.default,
    agenda: _rendering_strategies_m_strategy_agenda__WEBPACK_IMPORTED_MODULE_2__.default
};
class AppointmentViewModelGenerator {
    initRenderingStrategy(options) {
        var RenderingStrategy = RENDERING_STRATEGIES[options.appointmentRenderingStrategyName];
        this.renderingStrategy = new RenderingStrategy(options)
    }
    generate(filteredItems, options) {
        var {
            isRenovatedAppointments: isRenovatedAppointments
        } = options;
        var appointments = filteredItems ? filteredItems.slice() : [];
        this.initRenderingStrategy(options);
        var renderingStrategy = this.getRenderingStrategy();
        var positionMap = renderingStrategy.createTaskPositionMap(appointments);
        var viewModel = this.postProcess(appointments, positionMap, isRenovatedAppointments);
        if (isRenovatedAppointments) {
            return this.makeRenovatedViewModels(viewModel, options.supportAllDayRow, options.isVerticalGroupOrientation)
        }
        return {
            positionMap: positionMap,
            viewModel: viewModel
        }
    }
    postProcess(filteredItems, positionMap, isRenovatedAppointments) {
        var renderingStrategy = this.getRenderingStrategy();
        return filteredItems.map((data, index) => {
            if (!renderingStrategy.keepAppointmentSettings()) {
                delete data.settings
            }
            var appointmentSettings = positionMap[index];
            appointmentSettings.forEach(item => {
                item.direction = "vertical" === renderingStrategy.getDirection() && !item.allDay ? "vertical" : "horizontal"
            });
            var item = {
                itemData: data,
                settings: appointmentSettings
            };
            if (!isRenovatedAppointments) {
                item.needRepaint = true;
                item.needRemove = false
            }
            return item
        })
    }
    makeRenovatedViewModels(viewModel, supportAllDayRow, isVerticalGrouping) {
        var strategy = this.getRenderingStrategy();
        var regularViewModels = [];
        var allDayViewModels = [];
        var compactOptions = [];
        var isAllDayPanel = supportAllDayRow && !isVerticalGrouping;
        viewModel.forEach(_ref => {
            var {
                itemData: itemData,
                settings: settings
            } = _ref;
            settings.forEach(options => {
                var item = this.prepareViewModel(options, strategy, itemData);
                if (options.isCompact) {
                    compactOptions.push({
                        compactViewModel: options.virtual,
                        appointmentViewModel: item
                    })
                } else if (options.allDay && isAllDayPanel) {
                    allDayViewModels.push(item)
                } else {
                    regularViewModels.push(item)
                }
            })
        });
        var compactViewModels = this.prepareCompactViewModels(compactOptions, supportAllDayRow);
        var result = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
            allDay: allDayViewModels,
            regular: regularViewModels
        }, compactViewModels);
        return result
    }
    prepareViewModel(options, strategy, itemData) {
        var geometry = strategy.getAppointmentGeometry(options);
        var viewModel = {
            key: (0,_renovation_ui_scheduler_appointment_utils__WEBPACK_IMPORTED_MODULE_1__.getAppointmentKey)(geometry),
            appointment: itemData,
            geometry: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, geometry), {
                leftVirtualWidth: options.leftVirtualWidth,
                topVirtualHeight: options.topVirtualHeight
            }),
            info: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options.info), {
                allDay: options.allDay,
                direction: options.direction,
                appointmentReduced: options.appointmentReduced,
                groupIndex: options.groupIndex
            })
        };
        return viewModel
    }
    getCompactViewModelFrame(compactViewModel) {
        return {
            isAllDay: !!compactViewModel.isAllDay,
            isCompact: compactViewModel.isCompact,
            groupIndex: compactViewModel.groupIndex,
            geometry: {
                left: compactViewModel.left,
                top: compactViewModel.top,
                width: compactViewModel.width,
                height: compactViewModel.height
            },
            items: {
                colors: [],
                data: [],
                settings: []
            }
        }
    }
    prepareCompactViewModels(compactOptions, supportAllDayRow) {
        var regularCompact = {};
        var allDayCompact = {};
        compactOptions.forEach(_ref2 => {
            var {
                compactViewModel: compactViewModel,
                appointmentViewModel: appointmentViewModel
            } = _ref2;
            var {
                index: index,
                isAllDay: isAllDay
            } = compactViewModel;
            var viewModel = isAllDay && supportAllDayRow ? allDayCompact : regularCompact;
            if (!viewModel[index]) {
                viewModel[index] = this.getCompactViewModelFrame(compactViewModel)
            }
            var {
                settings: settings,
                data: data,
                colors: colors
            } = viewModel[index].items;
            settings.push(appointmentViewModel);
            data.push(appointmentViewModel.appointment);
            colors.push(appointmentViewModel.info.resourceColor)
        });
        var toArray = items => Object.keys(items).map(key => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
            key: key
        }, items[key]));
        var allDayViewModels = toArray(allDayCompact);
        var regularViewModels = toArray(regularCompact);
        return {
            allDayCompact: allDayViewModels,
            regularCompact: regularViewModels
        }
    }
    getRenderingStrategy() {
        return this.renderingStrategy
    }
}


/***/ }),

/***/ 46498:
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_adaptive.js ***!
  \********************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _m_appointments_positioning_strategy_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./m_appointments_positioning_strategy_base */ 82114);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_adaptive.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var COLLECTOR_ADAPTIVE_SIZE = 28;
var COLLECTOR_ADAPTIVE_BOTTOM_OFFSET = 40;
var ADAPTIVE_APPOINTMENT_DEFAULT_OFFSET = 35;
var ADAPTIVE_APPOINTMENT_DEFAULT_WIDTH = 30;
class AdaptivePositioningStrategy extends _m_appointments_positioning_strategy_base__WEBPACK_IMPORTED_MODULE_0__.default {
    getDropDownAppointmentWidth(intervalCount, isAllDay) {
        return this.getDropDownButtonAdaptiveSize()
    }
    getDropDownButtonAdaptiveSize() {
        return COLLECTOR_ADAPTIVE_SIZE
    }
    getCollectorTopOffset(allDay) {
        var renderingStrategy = this._renderingStrategy;
        if (renderingStrategy.allDaySupported() && allDay) {
            return (renderingStrategy.allDayHeight - renderingStrategy.getDropDownButtonAdaptiveSize()) / 2
        }
        return this._renderingStrategy.cellHeight - COLLECTOR_ADAPTIVE_BOTTOM_OFFSET
    }
    getCollectorLeftOffset() {
        var collectorWidth = this._renderingStrategy.getDropDownAppointmentWidth();
        return (this._renderingStrategy.cellWidth - collectorWidth) / 2
    }
    getAppointmentDefaultOffset() {
        return ADAPTIVE_APPOINTMENT_DEFAULT_OFFSET
    }
    getDynamicAppointmentCountPerCell() {
        var renderingStrategy = this._renderingStrategy;
        if (renderingStrategy.allDaySupported()) {
            return {
                allDay: 0,
                simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()
            }
        }
        return 0
    }
    getDropDownAppointmentHeight() {
        return COLLECTOR_ADAPTIVE_SIZE
    }
    _getAppointmentMinCount() {
        return 0
    }
    _getAppointmentDefaultWidth() {
        var renderingStrategy = this._renderingStrategy;
        if (renderingStrategy.allDaySupported()) {
            return ADAPTIVE_APPOINTMENT_DEFAULT_WIDTH
        }
        return super._getAppointmentDefaultWidth()
    }
    _calculateDynamicAppointmentCountPerCell() {
        return Math.floor(this._renderingStrategy._getAppointmentMaxWidth() / this._renderingStrategy._getAppointmentDefaultWidth())
    }
}
/* harmony default export */ __webpack_exports__["default"] = (AdaptivePositioningStrategy);


/***/ }),

/***/ 82114:
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_base.js ***!
  \****************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/type */ 33275);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_base.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var COLLECTOR_DEFAULT_WIDTH = 24;
var COLLECTOR_DEFAULT_OFFSET = 3;
var COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET = 22;
var APPOINTMENT_MIN_COUNT = 1;
var APPOINTMENT_DEFAULT_WIDTH = 40;
var COLLECTOR_WIDTH_IN_PERCENTS = 75;
var APPOINTMENT_INCREASED_WIDTH = 50;
class AppointmentPositioningStrategy {
    constructor(renderingStrategy) {
        this._renderingStrategy = renderingStrategy
    }
    getDropDownAppointmentWidth(intervalCount, isAllDay) {
        if (isAllDay || !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(isAllDay)) {
            return COLLECTOR_WIDTH_IN_PERCENTS * this._renderingStrategy.cellWidth / 100
        }
        return COLLECTOR_DEFAULT_WIDTH
    }
    getCollectorTopOffset(allDay) {
        return COLLECTOR_DEFAULT_OFFSET
    }
    getCollectorLeftOffset() {
        return COLLECTOR_DEFAULT_OFFSET
    }
    getAppointmentDefaultOffset() {
        if (this._renderingStrategy._isCompactTheme()) {
            return COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET
        }
        return this._renderingStrategy.appointmentOffset
    }
    getDynamicAppointmentCountPerCell() {
        var renderingStrategy = this._renderingStrategy;
        var {
            cellHeight: cellHeight
        } = renderingStrategy;
        var allDayCount = Math.floor((cellHeight - renderingStrategy._getAppointmentDefaultOffset()) / renderingStrategy._getAppointmentDefaultHeight()) || this._getAppointmentMinCount();
        if (renderingStrategy.allDaySupported()) {
            return {
                allDay: "vertical" === renderingStrategy.groupOrientation ? allDayCount : this._renderingStrategy.appointmentCountPerCell,
                simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()
            }
        }
        return allDayCount
    }
    getDropDownAppointmentHeight() {
        return
    }
    _getAppointmentMinCount() {
        return APPOINTMENT_MIN_COUNT
    }
    _calculateDynamicAppointmentCountPerCell() {
        return Math.floor(this._renderingStrategy._getAppointmentMaxWidth() / APPOINTMENT_INCREASED_WIDTH)
    }
    _getAppointmentDefaultWidth() {
        return APPOINTMENT_DEFAULT_WIDTH
    }
}
/* harmony default export */ __webpack_exports__["default"] = (AppointmentPositioningStrategy);


/***/ }),

/***/ 92323:
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_agenda.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/utils/iterator */ 14975);
/* harmony import */ var _ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../ui/scheduler/appointmentAdapter */ 50760);
/* harmony import */ var _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../ui/scheduler/expressionUtils */ 91286);
/* harmony import */ var _resources_m_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../resources/m_utils */ 48025);
/* harmony import */ var _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data_provider/m_utils */ 57534);
/* harmony import */ var _m_strategy_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./m_strategy_base */ 5136);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_agenda.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */







class AgendaRenderingStrategy extends _m_strategy_base__WEBPACK_IMPORTED_MODULE_6__.default {
    get instance() {
        return this.options.instance
    }
    get agendaDuration() {
        return this.options.agendaDuration
    }
    getAppointmentMinSize() {}
    getDeltaTime() {}
    keepAppointmentSettings() {
        return true
    }
    getAppointmentGeometry(geometry) {
        return geometry
    }
    groupAppointmentByResources(appointments) {
        var groups = this.instance._getCurrentViewOption("groups");
        var config = {
            loadedResources: this.options.loadedResources,
            resources: this.options.resources,
            dataAccessors: this.dataAccessors.resources
        };
        return (0,_resources_m_utils__WEBPACK_IMPORTED_MODULE_4__.groupAppointmentsByResources)(config, appointments, groups)
    }
    createTaskPositionMap(appointments) {
        var height;
        var appointmentsByResources;
        this.calculateRows(appointments, this.agendaDuration, this.currentDate);
        if (appointments.length) {
            height = this.instance.fire("getAgendaVerticalStepHeight");
            appointmentsByResources = this.groupAppointmentByResources(appointments);
            var groupedAppts = [];
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(appointmentsByResources, (i, appts) => {
                var additionalAppointments = [];
                var recurrentIndexes = [];
                (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(appts, (index, appointment) => {
                    var recurrenceBatch = this.instance.getAppointmentsInstance()._processRecurrenceAppointment(appointment, index);
                    var appointmentBatch = null;
                    if (!recurrenceBatch.indexes.length) {
                        appointmentBatch = this.instance.getAppointmentsInstance()._processLongAppointment(appointment);
                        additionalAppointments = additionalAppointments.concat(appointmentBatch.parts)
                    }
                    additionalAppointments = additionalAppointments.concat(recurrenceBatch.parts);
                    recurrentIndexes = recurrentIndexes.concat(recurrenceBatch.indexes)
                });
                this.instance.getAppointmentsInstance()._reduceRecurrenceAppointments(recurrentIndexes, appts);
                this.instance.getAppointmentsInstance()._combineAppointments(appts, additionalAppointments);
                groupedAppts = groupedAppts.concat(appts)
            });
            Array.prototype.splice.apply(appointments, [0, appointments.length].concat(groupedAppts))
        }
        var result = [];
        var sortedIndex = 0;
        appointments.forEach((appt, index) => {
            result.push([{
                height: height,
                width: "100%",
                sortedIndex: sortedIndex++,
                groupIndex: this._calculateGroupIndex(index, appointmentsByResources),
                agendaSettings: appt.settings
            }]);
            delete appt.settings
        });
        return result
    }
    _calculateGroupIndex(apptIndex, appointmentsByResources) {
        var resultInd;
        var counter = 0;
        for (var i in appointmentsByResources) {
            var countApptInGroup = appointmentsByResources[i].length;
            if (apptIndex >= counter && apptIndex < counter + countApptInGroup) {
                resultInd = Number(i);
                break
            }
            counter += countApptInGroup
        }
        return resultInd
    }
    _getDeltaWidth(args, initialSize) {}
    _getAppointmentMaxWidth() {
        return this.cellWidth
    }
    _needVerifyItemSize() {
        return false
    }
    _getAppointmentParts(geometry, settings) {}
    _reduceMultiWeekAppointment() {}
    calculateAppointmentHeight() {
        return 0
    }
    calculateAppointmentWidth() {
        return 0
    }
    isAppointmentGreaterThan(etalon, comparisonParameters) {}
    isAllDay() {
        return false
    }
    _sortCondition() {}
    _rowCondition(a, b) {}
    _columnCondition(a, b) {}
    _findIndexByKey(arr, iKey, jKey, iValue, jValue) {}
    _markAppointmentAsVirtual() {}
    getDropDownAppointmentWidth() {}
    getCollectorLeftOffset() {}
    getCollectorTopOffset() {}
    replaceWrongAppointmentEndDate(rawAppointment, startDate, endDate) {
        var adapter = (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_2__.createAppointmentAdapter)(rawAppointment, this.dataAccessors, this.timeZoneCalculator);
        (0,_data_provider_m_utils__WEBPACK_IMPORTED_MODULE_5__.replaceWrongEndDate)(adapter, startDate, endDate, this.cellDuration, this.dataAccessors)
    }
    calculateRows(appointments, agendaDuration, currentDate, needClearSettings) {
        this._rows = [];
        currentDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(new Date(currentDate));
        var groupedAppointments = this.groupAppointmentByResources(appointments);
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(groupedAppointments, (_, currentAppointments) => {
            var groupResult = [];
            var appts = {
                indexes: [],
                parts: []
            };
            if (!currentAppointments.length) {
                this._rows.push([]);
                return true
            }
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(currentAppointments, (index, appointment) => {
                var startDate = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.getField(this.dataAccessors, "startDate", appointment);
                var endDate = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.getField(this.dataAccessors, "endDate", appointment);
                this.replaceWrongAppointmentEndDate(appointment, startDate, endDate);
                needClearSettings && delete appointment.settings;
                var result = this.instance.getAppointmentsInstance()._processRecurrenceAppointment(appointment, index, false);
                appts.parts = appts.parts.concat(result.parts);
                appts.indexes = appts.indexes.concat(result.indexes)
            });
            this.instance.getAppointmentsInstance()._reduceRecurrenceAppointments(appts.indexes, currentAppointments);
            currentAppointments.push(...appts.parts);
            var appointmentCount = currentAppointments.length;
            for (var i = 0; i < agendaDuration; i++) {
                var day = new Date(currentDate);
                day.setMilliseconds(day.getMilliseconds() + 864e5 * i);
                if (void 0 === groupResult[i]) {
                    groupResult[i] = 0
                }
                for (var j = 0; j < appointmentCount; j++) {
                    var appointmentData = currentAppointments[j].settings || currentAppointments[j];
                    var adapter = (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_2__.createAppointmentAdapter)(currentAppointments[j], this.dataAccessors, this.timeZoneCalculator);
                    var appointmentIsLong = (0,_data_provider_m_utils__WEBPACK_IMPORTED_MODULE_5__.getAppointmentTakesSeveralDays)(adapter);
                    var appointmentIsRecurrence = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.getField(this.dataAccessors, "recurrenceRule", currentAppointments[j]);
                    if (this.instance.fire("dayHasAppointment", day, appointmentData, true) || !appointmentIsRecurrence && appointmentIsLong && this.instance.fire("dayHasAppointment", day, currentAppointments[j], true)) {
                        groupResult[i] += 1
                    }
                }
            }
            this._rows.push(groupResult)
        });
        return this._rows
    }
    _iterateRow(row, obj, index) {
        for (var i = 0; i < row.length; i++) {
            obj.counter += row[i];
            if (obj.counter >= index) {
                obj.indexInRow = i;
                break
            }
        }
    }
    getDateByIndex(index, rows, startViewDate) {
        var obj = {
            counter: 0,
            indexInRow: 0
        };
        index++;
        for (var i = 0; i < rows.length; i++) {
            this._iterateRow(rows[i], obj, index);
            if (obj.indexInRow) {
                break
            }
        }
        return new Date(new Date(startViewDate).setDate(startViewDate.getDate() + obj.indexInRow))
    }
    getAppointmentDataCalculator() {
        return ($appointment, originalStartDate) => {
            var apptIndex = $appointment.index();
            var startViewDate = this.instance.getStartViewDate();
            var calculatedStartDate = this.getDateByIndex(apptIndex, this._rows, startViewDate);
            var wrappedOriginalStartDate = new Date(originalStartDate);
            return {
                startDate: new Date(calculatedStartDate.setHours(wrappedOriginalStartDate.getHours(), wrappedOriginalStartDate.getMinutes(), wrappedOriginalStartDate.getSeconds(), wrappedOriginalStartDate.getMilliseconds()))
            }
        }
    }
}
/* harmony default export */ __webpack_exports__["default"] = (AgendaRenderingStrategy);


/***/ }),

/***/ 5136:
/*!***************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_base.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/utils/type */ 33275);
/* harmony import */ var _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay */ 89448);
/* harmony import */ var _ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../ui/scheduler/appointmentAdapter */ 50760);
/* harmony import */ var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../ui/scheduler/utils.timeZone */ 53374);
/* harmony import */ var _ui_themes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../ui/themes */ 78279);
/* harmony import */ var _m_settings_generator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../m_settings_generator */ 66767);
/* harmony import */ var _m_appointments_positioning_strategy_adaptive__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./m_appointments_positioning_strategy_adaptive */ 46498);
/* harmony import */ var _m_appointments_positioning_strategy_base__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./m_appointments_positioning_strategy_base */ 82114);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_base.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */











var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds;
var APPOINTMENT_MIN_SIZE = 2;
var APPOINTMENT_DEFAULT_HEIGHT = 20;
var COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT = 18;
var DROP_DOWN_BUTTON_ADAPTIVE_SIZE = 28;
var WEEK_VIEW_COLLECTOR_OFFSET = 5;
var COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET = 1;
class BaseRenderingStrategy {
    constructor(options) {
        this.options = options;
        this._initPositioningStrategy()
    }
    get isAdaptive() {
        return this.options.adaptivityEnabled
    }
    get rtlEnabled() {
        return this.options.rtlEnabled
    }
    get startDayHour() {
        return this.options.startDayHour
    }
    get endDayHour() {
        return this.options.endDayHour
    }
    get maxAppointmentsPerCell() {
        return this.options.maxAppointmentsPerCell
    }
    get cellWidth() {
        return this.options.cellWidth
    }
    get cellHeight() {
        return this.options.cellHeight
    }
    get allDayHeight() {
        return this.options.allDayHeight
    }
    get resizableStep() {
        return this.options.resizableStep
    }
    get isGroupedByDate() {
        return this.options.isGroupedByDate
    }
    get visibleDayDuration() {
        return this.options.visibleDayDuration
    }
    get viewStartDayHour() {
        return this.options.viewStartDayHour
    }
    get viewEndDayHour() {
        return this.options.viewEndDayHour
    }
    get cellDuration() {
        return this.options.cellDuration
    }
    get cellDurationInMinutes() {
        return this.options.cellDurationInMinutes
    }
    get leftVirtualCellCount() {
        return this.options.leftVirtualCellCount
    }
    get topVirtualCellCount() {
        return this.options.topVirtualCellCount
    }
    get positionHelper() {
        return this.options.positionHelper
    }
    get showAllDayPanel() {
        return this.options.showAllDayPanel
    }
    get isGroupedAllDayPanel() {
        return this.options.isGroupedAllDayPanel
    }
    get groupOrientation() {
        return this.options.groupOrientation
    }
    get rowCount() {
        return this.options.rowCount
    }
    get groupCount() {
        return this.options.groupCount
    }
    get currentDate() {
        return this.options.currentDate
    }
    get appointmentCountPerCell() {
        return this.options.appointmentCountPerCell
    }
    get appointmentOffset() {
        return this.options.appointmentOffset
    }
    get allowResizing() {
        return this.options.allowResizing
    }
    get allowAllDayResizing() {
        return this.options.allowAllDayResizing
    }
    get viewDataProvider() {
        return this.options.viewDataProvider
    }
    get dataAccessors() {
        return this.options.dataAccessors
    }
    get timeZoneCalculator() {
        return this.options.timeZoneCalculator
    }
    get intervalCount() {
        return this.options.intervalCount
    }
    get allDayPanelMode() {
        return this.options.allDayPanelMode
    }
    get isVirtualScrolling() {
        return this.options.isVirtualScrolling
    }
    _correctCollectorCoordinatesInAdaptive(coordinates, isAllDay) {
        coordinates.top += this.getCollectorTopOffset(isAllDay);
        coordinates.left += this.getCollectorLeftOffset()
    }
    _initPositioningStrategy() {
        this._positioningStrategy = this.isAdaptive ? new _m_appointments_positioning_strategy_adaptive__WEBPACK_IMPORTED_MODULE_9__.default(this) : new _m_appointments_positioning_strategy_base__WEBPACK_IMPORTED_MODULE_10__.default(this)
    }
    getPositioningStrategy() {
        return this._positioningStrategy
    }
    getAppointmentMinSize() {
        return APPOINTMENT_MIN_SIZE
    }
    keepAppointmentSettings() {
        return false
    }
    getDeltaTime(args, initialSize, appointment) {}
    getAppointmentGeometry(coordinates) {
        return coordinates
    }
    needCorrectAppointmentDates() {
        return true
    }
    getDirection() {
        return "horizontal"
    }
    createTaskPositionMap(items, skipSorting) {
        delete this._maxAppointmentCountPerCell;
        var length = null === items || void 0 === items ? void 0 : items.length;
        if (!length) {
            return
        }
        var map = [];
        for (var i = 0; i < length; i++) {
            var coordinates = this._getItemPosition(items[i]);
            if (coordinates.length && this.rtlEnabled) {
                coordinates = this._correctRtlCoordinates(coordinates)
            }
            coordinates.forEach(item => {
                item.leftVirtualCellCount = this.leftVirtualCellCount;
                item.topVirtualCellCount = this.topVirtualCellCount;
                item.leftVirtualWidth = this.leftVirtualCellCount * this.cellWidth;
                item.topVirtualHeight = this.topVirtualCellCount * this.cellHeight
            });
            map.push(coordinates)
        }
        var positionArray = this._getSortedPositions(map);
        var resultPositions = this._getResultPositions(positionArray);
        return this._getExtendedPositionMap(map, resultPositions)
    }
    _getDeltaWidth(args, initialSize) {
        var intervalWidth = this.resizableStep || this.getAppointmentMinSize();
        var initialWidth = initialSize.width;
        return Math.round((args.width - initialWidth) / intervalWidth)
    }
    _correctRtlCoordinates(coordinates) {
        var width = coordinates[0].width || this._getAppointmentMaxWidth();
        coordinates.forEach(coordinate => {
            if (!coordinate.appointmentReduced) {
                coordinate.left -= width
            }
        });
        return coordinates
    }
    _getAppointmentMaxWidth() {
        return this.cellWidth
    }
    _getItemPosition(appointment) {
        var position = this.generateAppointmentSettings(appointment);
        var allDay = this.isAllDay(appointment);
        var result = [];
        for (var j = 0; j < position.length; j++) {
            var height = this.calculateAppointmentHeight(appointment, position[j]);
            var width = this.calculateAppointmentWidth(appointment, position[j]);
            var resultWidth = width;
            var appointmentReduced = null;
            var multiWeekAppointmentParts = [];
            var initialRowIndex = position[j].rowIndex;
            var initialColumnIndex = position[j].columnIndex;
            if (this._needVerifyItemSize() || allDay) {
                var currentMaxAllowedPosition = position[j].hMax;
                if (this.isAppointmentGreaterThan(currentMaxAllowedPosition, {
                        left: position[j].left,
                        width: width
                    })) {
                    appointmentReduced = "head";
                    initialRowIndex = position[j].rowIndex;
                    initialColumnIndex = position[j].columnIndex;
                    resultWidth = this._reduceMultiWeekAppointment(width, {
                        left: position[j].left,
                        right: currentMaxAllowedPosition
                    });
                    multiWeekAppointmentParts = this._getAppointmentParts({
                        sourceAppointmentWidth: width,
                        reducedWidth: resultWidth,
                        height: height
                    }, position[j]);
                    if (this.rtlEnabled) {
                        position[j].left = currentMaxAllowedPosition
                    }
                }
            }
            (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(position[j], {
                height: height,
                width: resultWidth,
                allDay: allDay,
                rowIndex: initialRowIndex,
                columnIndex: initialColumnIndex,
                appointmentReduced: appointmentReduced
            });
            result = this._getAppointmentPartsPosition(multiWeekAppointmentParts, position[j], result)
        }
        return result
    }
    _getAppointmentPartsPosition(appointmentParts, position, result) {
        if (appointmentParts.length) {
            appointmentParts.unshift(position);
            result = result.concat(appointmentParts)
        } else {
            result.push(position)
        }
        return result
    }
    getAppointmentSettingsGenerator(rawAppointment) {
        return new _m_settings_generator__WEBPACK_IMPORTED_MODULE_8__.AppointmentSettingsGenerator((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
            rawAppointment: rawAppointment,
            appointmentTakesAllDay: this.isAppointmentTakesAllDay(rawAppointment),
            getPositionShiftCallback: this.getPositionShift.bind(this)
        }, this.options))
    }
    generateAppointmentSettings(rawAppointment) {
        return this.getAppointmentSettingsGenerator(rawAppointment).create()
    }
    isAppointmentTakesAllDay(rawAppointment) {
        var adapter = (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_5__.createAppointmentAdapter)(rawAppointment, this.dataAccessors, this.timeZoneCalculator);
        return (0,_renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_4__.getAppointmentTakesAllDay)(adapter, this.viewStartDayHour, this.viewEndDayHour, this.allDayPanelMode)
    }
    _getAppointmentParts(geometry, settings) {
        return []
    }
    _getCompactAppointmentParts(appointmentWidth) {
        var cellWidth = this.cellWidth || this.getAppointmentMinSize();
        return Math.round(appointmentWidth / cellWidth)
    }
    _reduceMultiWeekAppointment(sourceAppointmentWidth, bound) {
        if (this.rtlEnabled) {
            sourceAppointmentWidth = Math.floor(bound.left - bound.right)
        } else {
            sourceAppointmentWidth = bound.right - Math.floor(bound.left)
        }
        return sourceAppointmentWidth
    }
    calculateAppointmentHeight(appointment, position) {
        return 0
    }
    calculateAppointmentWidth(appointment, position) {
        return 0
    }
    isAppointmentGreaterThan(etalon, comparisonParameters) {
        var result = comparisonParameters.left + comparisonParameters.width - etalon;
        if (this.rtlEnabled) {
            result = etalon + comparisonParameters.width - comparisonParameters.left
        }
        return result > this.cellWidth / 2
    }
    isAllDay(appointment) {
        return false
    }
    cropAppointmentWidth(width, cellWidth) {
        return this.isGroupedByDate ? cellWidth : width
    }
    _getSortedPositions(positionList, skipSorting) {
        var result = [];
        var round = value => Math.round(100 * value) / 100;
        var createItem = (rowIndex, columnIndex, top, left, bottom, right, position, allDay) => ({
            i: rowIndex,
            j: columnIndex,
            top: round(top),
            left: round(left),
            bottom: round(bottom),
            right: round(right),
            cellPosition: position,
            allDay: allDay
        });
        for (var rowIndex = 0, rowCount = positionList.length; rowIndex < rowCount; rowIndex++) {
            for (var columnIndex = 0, cellCount = positionList[rowIndex].length; columnIndex < cellCount; columnIndex++) {
                var {
                    top: top,
                    left: left,
                    height: height,
                    width: width,
                    cellPosition: cellPosition,
                    allDay: allDay
                } = positionList[rowIndex][columnIndex];
                result.push(createItem(rowIndex, columnIndex, top, left, top + height, left + width, cellPosition, allDay))
            }
        }
        return result.sort((a, b) => this._sortCondition(a, b))
    }
    _sortCondition(a, b) {}
    _getConditions(a, b) {
        var isSomeEdge = this._isSomeEdge(a, b);
        return {
            columnCondition: isSomeEdge || this._normalizeCondition(a.left, b.left),
            rowCondition: isSomeEdge || this._normalizeCondition(a.top, b.top),
            cellPositionCondition: isSomeEdge || this._normalizeCondition(a.cellPosition, b.cellPosition)
        }
    }
    _rowCondition(a, b) {
        var conditions = this._getConditions(a, b);
        return conditions.columnCondition || conditions.rowCondition
    }
    _columnCondition(a, b) {
        var conditions = this._getConditions(a, b);
        return conditions.rowCondition || conditions.columnCondition
    }
    _isSomeEdge(a, b) {
        return a.i === b.i && a.j === b.j
    }
    _normalizeCondition(first, second) {
        var result = first - second;
        return Math.abs(result) > 1 ? result : 0
    }
    _isItemsCross(firstItem, secondItem) {
        var areItemsInTheSameTable = !!firstItem.allDay === !!secondItem.allDay;
        var areItemsAllDay = firstItem.allDay && secondItem.allDay;
        if (areItemsInTheSameTable) {
            var orientation = this._getOrientation(areItemsAllDay);
            return this._checkItemsCrossing(firstItem, secondItem, orientation)
        }
        return false
    }
    _checkItemsCrossing(firstItem, secondItem, orientation) {
        var firstItemSide1 = Math.floor(firstItem[orientation[0]]);
        var firstItemSide2 = Math.floor(firstItem[orientation[1]]);
        var secondItemSide1 = Math.ceil(secondItem[orientation[0]]);
        var secondItemSide2 = Math.ceil(secondItem[orientation[1]]);
        var isItemCross = Math.abs(firstItem[orientation[2]] - secondItem[orientation[2]]) <= 1;
        return isItemCross && (firstItemSide1 <= secondItemSide1 && firstItemSide2 > secondItemSide1 || firstItemSide1 < secondItemSide2 && firstItemSide2 >= secondItemSide2 || firstItemSide1 === secondItemSide1 && firstItemSide2 === secondItemSide2)
    }
    _getOrientation(isAllDay) {
        return isAllDay ? ["left", "right", "top"] : ["top", "bottom", "left"]
    }
    _getResultPositions(sortedArray) {
        var result = [];
        var i;
        var sortedIndex = 0;
        var currentItem;
        var indexes;
        var itemIndex;
        var maxIndexInStack = 0;
        var stack = {};
        var findFreeIndex = (indexes, index) => {
            var isFind = indexes.some(item => item === index);
            if (isFind) {
                return findFreeIndex(indexes, ++index)
            }
            return index
        };
        var createItem = (currentItem, index) => {
            var currentIndex = index || 0;
            return {
                index: currentIndex,
                i: currentItem.i,
                j: currentItem.j,
                left: currentItem.left,
                right: currentItem.right,
                top: currentItem.top,
                bottom: currentItem.bottom,
                allDay: currentItem.allDay,
                sortedIndex: this._skipSortedIndex(currentIndex) ? null : sortedIndex++
            }
        };
        var startNewStack = currentItem => {
            stack.items = [createItem(currentItem)];
            stack.left = currentItem.left;
            stack.right = currentItem.right;
            stack.top = currentItem.top;
            stack.bottom = currentItem.bottom;
            stack.allDay = currentItem.allDay
        };
        var pushItemsInResult = items => {
            items.forEach(item => {
                result.push({
                    index: item.index,
                    count: maxIndexInStack + 1,
                    i: item.i,
                    j: item.j,
                    sortedIndex: item.sortedIndex
                })
            })
        };
        for (i = 0; i < sortedArray.length; i++) {
            currentItem = sortedArray[i];
            indexes = [];
            if (!stack.items) {
                startNewStack(currentItem)
            } else if (this._isItemsCross(stack, currentItem)) {
                stack.items.forEach(item => {
                    if (this._isItemsCross(item, currentItem)) {
                        indexes.push(item.index)
                    }
                });
                itemIndex = indexes.length ? findFreeIndex(indexes, 0) : 0;
                stack.items.push(createItem(currentItem, itemIndex));
                maxIndexInStack = Math.max(itemIndex, maxIndexInStack);
                stack.left = Math.min(stack.left, currentItem.left);
                stack.right = Math.max(stack.right, currentItem.right);
                stack.top = Math.min(stack.top, currentItem.top);
                stack.bottom = Math.max(stack.bottom, currentItem.bottom);
                stack.allDay = currentItem.allDay
            } else {
                pushItemsInResult(stack.items);
                stack = {};
                startNewStack(currentItem);
                maxIndexInStack = 0
            }
        }
        if (stack.items) {
            pushItemsInResult(stack.items)
        }
        return result.sort((a, b) => {
            var columnCondition = a.j - b.j;
            var rowCondition = a.i - b.i;
            return rowCondition || columnCondition
        })
    }
    _skipSortedIndex(index) {
        return index > this._getMaxAppointmentCountPerCell() - 1
    }
    _findIndexByKey(arr, iKey, jKey, iValue, jValue) {
        var result = 0;
        for (var i = 0, len = arr.length; i < len; i++) {
            if (arr[i][iKey] === iValue && arr[i][jKey] === jValue) {
                result = i;
                break
            }
        }
        return result
    }
    _getExtendedPositionMap(map, positions) {
        var positionCounter = 0;
        var result = [];
        for (var i = 0, mapLength = map.length; i < mapLength; i++) {
            var resultString = [];
            for (var j = 0, itemLength = map[i].length; j < itemLength; j++) {
                map[i][j].index = positions[positionCounter].index;
                map[i][j].sortedIndex = positions[positionCounter].sortedIndex;
                map[i][j].count = positions[positionCounter++].count;
                resultString.push(map[i][j]);
                this._checkLongCompactAppointment(map[i][j], resultString)
            }
            result.push(resultString)
        }
        return result
    }
    _checkLongCompactAppointment(item, result) {
        this._splitLongCompactAppointment(item, result);
        return result
    }
    _splitLongCompactAppointment(item, result) {
        var appointmentCountPerCell = this._getMaxAppointmentCountPerCellByType(item.allDay);
        var compactCount = 0;
        if (void 0 !== appointmentCountPerCell && item.index > appointmentCountPerCell - 1) {
            item.isCompact = true;
            compactCount = this._getCompactAppointmentParts(item.width);
            for (var k = 1; k < compactCount; k++) {
                var compactPart = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(true, {}, item);
                compactPart.left = this._getCompactLeftCoordinate(item.left, k);
                compactPart.columnIndex += k;
                compactPart.sortedIndex = null;
                result.push(compactPart)
            }
        }
        return result
    }
    _adjustDurationByDaylightDiff(duration, startDate, endDate) {
        var daylightDiff = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_6__.default.getDaylightOffset(startDate, endDate);
        return this._needAdjustDuration(daylightDiff) ? this._calculateDurationByDaylightDiff(duration, daylightDiff) : duration
    }
    _needAdjustDuration(diff) {
        return 0 !== diff
    }
    _calculateDurationByDaylightDiff(duration, diff) {
        return duration + diff * toMs("minute")
    }
    _getCollectorLeftOffset(isAllDay) {
        if (isAllDay || !this.isApplyCompactAppointmentOffset()) {
            return 0
        }
        var dropDownButtonWidth = this.getDropDownAppointmentWidth(this.intervalCount, isAllDay);
        var rightOffset = this._isCompactTheme() ? COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET : WEEK_VIEW_COLLECTOR_OFFSET;
        return this.cellWidth - dropDownButtonWidth - rightOffset
    }
    _markAppointmentAsVirtual(coordinates) {
        var isAllDay = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
        var countFullWidthAppointmentInCell = this._getMaxAppointmentCountPerCellByType(isAllDay);
        if (coordinates.count - countFullWidthAppointmentInCell > 0) {
            var {
                top: top,
                left: left
            } = coordinates;
            var compactRender = this.isAdaptive || !isAllDay && this.supportCompactDropDownAppointments();
            coordinates.virtual = {
                left: left + this._getCollectorLeftOffset(isAllDay),
                top: top,
                width: this.getDropDownAppointmentWidth(this.intervalCount, isAllDay),
                height: this.getDropDownAppointmentHeight(),
                index: this._generateAppointmentCollectorIndex(coordinates, isAllDay),
                isAllDay: isAllDay,
                groupIndex: coordinates.groupIndex,
                isCompact: compactRender
            }
        }
    }
    isApplyCompactAppointmentOffset() {
        return this.supportCompactDropDownAppointments()
    }
    supportCompactDropDownAppointments() {
        return true
    }
    _generateAppointmentCollectorIndex(_ref, isAllDay) {
        var {
            groupIndex: groupIndex,
            rowIndex: rowIndex,
            columnIndex: columnIndex
        } = _ref;
        return "".concat(groupIndex, "-").concat(rowIndex, "-").concat(columnIndex, "-").concat(isAllDay)
    }
    _getMaxAppointmentCountPerCellByType(isAllDay) {
        var appointmentCountPerCell = this._getMaxAppointmentCountPerCell();
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isObject)(appointmentCountPerCell)) {
            return isAllDay ? appointmentCountPerCell.allDay : appointmentCountPerCell.simple
        }
        return appointmentCountPerCell
    }
    getDropDownAppointmentWidth(intervalCount, isAllDay) {
        return this.getPositioningStrategy().getDropDownAppointmentWidth(intervalCount, isAllDay)
    }
    getDropDownAppointmentHeight() {
        return this.getPositioningStrategy().getDropDownAppointmentHeight()
    }
    getDropDownButtonAdaptiveSize() {
        return DROP_DOWN_BUTTON_ADAPTIVE_SIZE
    }
    getCollectorTopOffset(allDay) {
        return this.getPositioningStrategy().getCollectorTopOffset(allDay)
    }
    getCollectorLeftOffset() {
        return this.getPositioningStrategy().getCollectorLeftOffset()
    }
    getAppointmentDataCalculator() {}
    getVerticalAppointmentHeight(cellHeight, currentAppointmentCountInCell, maxAppointmentsPerCell) {
        var resultMaxAppointmentsPerCell = maxAppointmentsPerCell;
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isNumeric)(this.maxAppointmentsPerCell)) {
            var dynamicAppointmentCountPerCell = this._getDynamicAppointmentCountPerCell();
            var maxAppointmentCountDisplayedInCell = dynamicAppointmentCountPerCell.allDay || dynamicAppointmentCountPerCell;
            var maxAppointmentsCount = Math.max(currentAppointmentCountInCell, maxAppointmentCountDisplayedInCell);
            resultMaxAppointmentsPerCell = Math.min(maxAppointmentsCount, maxAppointmentsPerCell)
        }
        return cellHeight / resultMaxAppointmentsPerCell
    }
    _customizeCoordinates(coordinates, cellHeight, appointmentCountPerCell, topOffset, isAllDay) {
        var {
            index: index,
            count: count
        } = coordinates;
        var appointmentHeight = this.getVerticalAppointmentHeight(cellHeight, count, appointmentCountPerCell);
        var appointmentTop = coordinates.top + index * appointmentHeight;
        var top = appointmentTop + topOffset;
        var {
            width: width
        } = coordinates;
        var {
            left: left
        } = coordinates;
        if (coordinates.isCompact) {
            this.isAdaptive && this._correctCollectorCoordinatesInAdaptive(coordinates, isAllDay);
            this._markAppointmentAsVirtual(coordinates, isAllDay)
        }
        return {
            height: appointmentHeight,
            width: width,
            top: top,
            left: left,
            empty: this._isAppointmentEmpty(cellHeight, width)
        }
    }
    _isAppointmentEmpty(height, width) {
        return height < this._getAppointmentMinHeight() || width < this._getAppointmentMinWidth()
    }
    _calculateGeometryConfig(coordinates) {
        var overlappingMode = this.maxAppointmentsPerCell;
        var offsets = this._getOffsets();
        var appointmentDefaultOffset = this._getAppointmentDefaultOffset();
        var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);
        var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);
        var maxHeight = this._getMaxHeight();
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isNumeric)(appointmentCountPerCell)) {
            appointmentCountPerCell = coordinates.count;
            ratio = (maxHeight - offsets.unlimited) / maxHeight
        }
        var topOffset = (1 - ratio) * maxHeight;
        if ("auto" === overlappingMode || (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isNumeric)(overlappingMode)) {
            ratio = 1;
            maxHeight -= appointmentDefaultOffset;
            topOffset = appointmentDefaultOffset
        }
        return {
            height: ratio * maxHeight,
            appointmentCountPerCell: appointmentCountPerCell,
            offset: topOffset
        }
    }
    _getAppointmentCount(overlappingMode, coordinates) {}
    _getDefaultRatio(coordinates, appointmentCountPerCell) {}
    _getOffsets() {}
    _getMaxHeight() {}
    _needVerifyItemSize() {
        return false
    }
    _getMaxAppointmentCountPerCell() {
        if (!this._maxAppointmentCountPerCell) {
            var overlappingMode = this.maxAppointmentsPerCell;
            var appointmentCountPerCell;
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isNumeric)(overlappingMode)) {
                appointmentCountPerCell = overlappingMode
            }
            if ("auto" === overlappingMode) {
                appointmentCountPerCell = this._getDynamicAppointmentCountPerCell()
            }
            if ("unlimited" === overlappingMode) {
                appointmentCountPerCell = void 0
            }
            this._maxAppointmentCountPerCell = appointmentCountPerCell
        }
        return this._maxAppointmentCountPerCell
    }
    _getDynamicAppointmentCountPerCell() {
        return this.getPositioningStrategy().getDynamicAppointmentCountPerCell()
    }
    allDaySupported() {
        return false
    }
    _isCompactTheme() {
        return "compact" === ((0,_ui_themes__WEBPACK_IMPORTED_MODULE_7__.current)() || "").split(".").pop()
    }
    _getAppointmentDefaultOffset() {
        return this.getPositioningStrategy().getAppointmentDefaultOffset()
    }
    _getAppointmentDefaultHeight() {
        return this._getAppointmentHeightByTheme()
    }
    _getAppointmentMinHeight() {
        return this._getAppointmentDefaultHeight()
    }
    _getAppointmentHeightByTheme() {
        return this._isCompactTheme() ? COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT : APPOINTMENT_DEFAULT_HEIGHT
    }
    _getAppointmentDefaultWidth() {
        return this.getPositioningStrategy()._getAppointmentDefaultWidth()
    }
    _getAppointmentMinWidth() {
        return this._getAppointmentDefaultWidth()
    }
    _needVerticalGroupBounds(allDay) {
        return false
    }
    _needHorizontalGroupBounds() {
        return false
    }
    getAppointmentDurationInMs(apptStartDate, apptEndDate, allDay) {
        if (allDay) {
            var appointmentDuration = apptEndDate.getTime() - apptStartDate.getTime();
            var ceilQuantityOfDays = Math.ceil(appointmentDuration / toMs("day"));
            return ceilQuantityOfDays * this.visibleDayDuration
        }
        var msInHour = toMs("hour");
        var trimmedStartDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.trimTime(apptStartDate);
        var trimmedEndDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.trimTime(apptEndDate);
        var deltaDate = trimmedEndDate - trimmedStartDate;
        var quantityOfDays = deltaDate / toMs("day") + 1;
        var dayVisibleHours = this.endDayHour - this.startDayHour;
        var appointmentDayHours = dayVisibleHours * quantityOfDays;
        var startHours = (apptStartDate - trimmedStartDate) / msInHour;
        var apptStartDelta = Math.max(0, startHours - this.startDayHour);
        var endHours = Math.max(0, (apptEndDate - trimmedEndDate) / msInHour - this.startDayHour);
        var apptEndDelta = Math.max(0, dayVisibleHours - endHours);
        var result = (appointmentDayHours - (apptStartDelta + apptEndDelta)) * msInHour;
        return result
    }
    getPositionShift(timeShift, isAllDay) {
        return {
            top: timeShift * this.cellHeight,
            left: 0,
            cellPosition: 0
        }
    }
}
/* harmony default export */ __webpack_exports__["default"] = (BaseRenderingStrategy);


/***/ }),

/***/ 61061:
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _renovation_ui_scheduler_view_model_appointments_utils_getSkippedHoursInRange__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange */ 74418);
/* harmony import */ var _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../ui/scheduler/expressionUtils */ 91286);
/* harmony import */ var _m_strategy_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./m_strategy_base */ 5136);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var DEFAULT_APPOINTMENT_HEIGHT = 60;
var MIN_APPOINTMENT_HEIGHT = 35;
var DROP_DOWN_BUTTON_OFFSET = 2;
var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateToMilliseconds;
class HorizontalRenderingStrategy extends _m_strategy_base__WEBPACK_IMPORTED_MODULE_3__.default {
    _needVerifyItemSize() {
        return true
    }
    calculateAppointmentWidth(appointment, position) {
        var cellWidth = this.cellWidth || this.getAppointmentMinSize();
        var allDay = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_2__.ExpressionUtils.getField(this.dataAccessors, "allDay", appointment);
        var {
            startDate: startDate
        } = position.info.appointment;
        var {
            endDate: endDate
        } = position.info.appointment;
        var {
            normalizedEndDate: normalizedEndDate
        } = position.info.appointment;
        var duration = this.getAppointmentDurationInMs(startDate, normalizedEndDate, allDay);
        duration = this._adjustDurationByDaylightDiff(duration, startDate, normalizedEndDate);
        var cellDuration = this.cellDurationInMinutes * toMs("minute");
        var skippedHours = (0,_renovation_ui_scheduler_view_model_appointments_utils_getSkippedHoursInRange__WEBPACK_IMPORTED_MODULE_1__.default)(startDate, endDate, this.viewDataProvider);
        var durationInCells = (duration - skippedHours * toMs("hour")) / cellDuration;
        var width = this.cropAppointmentWidth(durationInCells * cellWidth, cellWidth);
        return width
    }
    _needAdjustDuration(diff) {
        return diff < 0
    }
    getAppointmentGeometry(coordinates) {
        var result = this._customizeAppointmentGeometry(coordinates);
        return super.getAppointmentGeometry(result)
    }
    _customizeAppointmentGeometry(coordinates) {
        var config = this._calculateGeometryConfig(coordinates);
        return this._customizeCoordinates(coordinates, config.height, config.appointmentCountPerCell, config.offset)
    }
    _getOffsets() {
        return {
            unlimited: 0,
            auto: 0
        }
    }
    _getCompactLeftCoordinate(itemLeft, index) {
        var cellWidth = this.cellWidth || this.getAppointmentMinSize();
        return itemLeft + cellWidth * index
    }
    _getMaxHeight() {
        return this.cellHeight || this.getAppointmentMinSize()
    }
    _getAppointmentCount(overlappingMode, coordinates) {
        return this._getMaxAppointmentCountPerCellByType(false)
    }
    _getAppointmentDefaultHeight() {
        return DEFAULT_APPOINTMENT_HEIGHT
    }
    _getAppointmentMinHeight() {
        return MIN_APPOINTMENT_HEIGHT
    }
    _sortCondition(a, b) {
        return this._columnCondition(a, b)
    }
    _getOrientation() {
        return ["left", "right", "top"]
    }
    getDropDownAppointmentWidth(intervalCount, isAllDay) {
        return this.cellWidth - 2 * DROP_DOWN_BUTTON_OFFSET
    }
    getDeltaTime(args, initialSize) {
        var deltaTime;
        var deltaWidth = args.width - initialSize.width;
        deltaTime = toMs("minute") * Math.round(deltaWidth / this.cellWidth * this.cellDurationInMinutes);
        return deltaTime
    }
    isAllDay(appointmentData) {
        return _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_2__.ExpressionUtils.getField(this.dataAccessors, "allDay", appointmentData)
    }
    _isItemsCross(firstItem, secondItem) {
        var orientation = this._getOrientation();
        return this._checkItemsCrossing(firstItem, secondItem, orientation)
    }
    getPositionShift(timeShift) {
        var positionShift = super.getPositionShift(timeShift);
        var left = this.cellWidth * timeShift;
        if (this.rtlEnabled) {
            left *= -1
        }
        left += positionShift.left;
        return {
            top: 0,
            left: left,
            cellPosition: left
        }
    }
    supportCompactDropDownAppointments() {
        return false
    }
}
/* harmony default export */ __webpack_exports__["default"] = (HorizontalRenderingStrategy);


/***/ }),

/***/ 74812:
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal_month.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _ui_scheduler_workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../ui/scheduler/workspaces/helpers/positionHelper */ 18690);
/* harmony import */ var _m_strategy_horizontal_month_line__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./m_strategy_horizontal_month_line */ 69254);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal_month.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var MONTH_APPOINTMENT_HEIGHT_RATIO = .6;
var MONTH_APPOINTMENT_MIN_OFFSET = 26;
var MONTH_APPOINTMENT_MAX_OFFSET = 30;
var MONTH_DROPDOWN_APPOINTMENT_MIN_RIGHT_OFFSET = 36;
var MONTH_DROPDOWN_APPOINTMENT_MAX_RIGHT_OFFSET = 60;
var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds;
class HorizontalMonthRenderingStrategy extends _m_strategy_horizontal_month_line__WEBPACK_IMPORTED_MODULE_3__.default {
    get endViewDate() {
        return this.options.endViewDate
    }
    get adaptivityEnabled() {
        return this.options.adaptivityEnabled
    }
    get DOMMetaData() {
        return this.options.DOMMetaData
    }
    _getLeftPosition(settings) {
        var fullWeekAppointmentWidth = this.getGroupWidth(settings.groupIndex);
        return this._calculateMultiWeekAppointmentLeftOffset(settings.hMax, fullWeekAppointmentWidth)
    }
    _getChunkCount(fullChunksWidth, firstChunkWidth, weekWidth, settings) {
        var {
            groupIndex: groupIndex,
            info: {
                appointment: {
                    startDate: startDate
                }
            }
        } = settings;
        var rawFullChunksWidth = fullChunksWidth - firstChunkWidth + weekWidth;
        var allChunksCount = Math.ceil(rawFullChunksWidth / weekWidth);
        var viewRowIndex = this._tryGetRowIndexInView(startDate);
        if (void 0 !== viewRowIndex) {
            var viewChunksCount = this.viewDataProvider.getRowCountInGroup(groupIndex);
            var allowedChunksCount = viewChunksCount - viewRowIndex;
            return allChunksCount <= allowedChunksCount ? allChunksCount : allowedChunksCount
        }
        return allChunksCount
    }
    _tryGetRowIndexInView(positionStartDate) {
        var _a;
        var columnsCount = this.viewDataProvider.getColumnsCount();
        if ((null === (_a = this.options.dataRange) || void 0 === _a ? void 0 : _a.length) < 1 || !columnsCount) {
            return
        }
        var [startViewDate] = this.options.dateRange;
        var dayDurationMs = toMs("day");
        var timeFromStart = positionStartDate.getTime() - startViewDate.getTime();
        return Math.floor(timeFromStart / dayDurationMs / columnsCount)
    }
    _getChunkWidths(geometry, settings, weekWidth) {
        var firstChunkWidth = geometry.reducedWidth;
        var fullChunksWidth = Math.floor(geometry.sourceAppointmentWidth);
        var widthWithoutFirstChunk = fullChunksWidth - firstChunkWidth;
        return [firstChunkWidth, fullChunksWidth, widthWithoutFirstChunk]
    }
    _getTailChunkSettings(withoutFirstChunkWidth, weekWidth, leftPosition) {
        var tailChunkWidth = withoutFirstChunkWidth % weekWidth || weekWidth;
        var rtlPosition = leftPosition + (weekWidth - tailChunkWidth);
        var tailChunkLeftPosition = this.rtlEnabled ? rtlPosition : leftPosition;
        return [tailChunkWidth, tailChunkLeftPosition]
    }
    _getAppointmentParts(geometry, settings) {
        var result = [];
        var weekWidth = Math.round(this.getGroupWidth(settings.groupIndex));
        var [firstChunkWidth, fullChunksWidth, withoutFirstChunkWidth] = this._getChunkWidths(geometry, settings, weekWidth);
        var leftPosition = this._getLeftPosition(settings);
        var hasTailChunk = this.endViewDate > settings.info.appointment.endDate;
        var chunkCount = this._getChunkCount(fullChunksWidth, firstChunkWidth, weekWidth, settings);
        var [tailChunkWidth, tailChunkLeftPosition] = this._getTailChunkSettings(withoutFirstChunkWidth, weekWidth, leftPosition);
        for (var chunkIndex = 1; chunkIndex < chunkCount; chunkIndex++) {
            var topPosition = settings.top + this.cellHeight * chunkIndex;
            var isTailChunk = hasTailChunk && chunkIndex === chunkCount - 1;
            result.push((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, settings), {
                top: topPosition,
                left: isTailChunk ? tailChunkLeftPosition : leftPosition,
                height: geometry.height,
                width: isTailChunk ? tailChunkWidth : weekWidth,
                appointmentReduced: isTailChunk ? "tail" : "body",
                rowIndex: ++settings.rowIndex,
                columnIndex: 0
            }))
        }
        return result
    }
    _calculateMultiWeekAppointmentLeftOffset(max, width) {
        return this.rtlEnabled ? max : max - width
    }
    getGroupWidth(groupIndex) {
        return (0,_ui_scheduler_workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_2__.getGroupWidth)(groupIndex, this.viewDataProvider, {
            intervalCount: this.options.intervalCount,
            currentDate: this.options.currentDate,
            viewType: this.options.viewType,
            hoursInterval: this.options.hoursInterval,
            startDayHour: this.options.startDayHour,
            endDayHour: this.options.endDayHour,
            isVirtualScrolling: this.isVirtualScrolling,
            rtlEnabled: this.rtlEnabled,
            DOMMetaData: this.DOMMetaData
        })
    }
    _getAppointmentDefaultHeight() {
        return this._getAppointmentHeightByTheme()
    }
    _getAppointmentMinHeight() {
        return this._getAppointmentDefaultHeight()
    }
    _columnCondition(a, b) {
        var conditions = this._getConditions(a, b);
        return conditions.rowCondition || conditions.columnCondition || conditions.cellPositionCondition
    }
    createTaskPositionMap(items) {
        return super.createTaskPositionMap(items, true)
    }
    _getSortedPositions(map) {
        return super._getSortedPositions(map, true)
    }
    _getDefaultRatio() {
        return MONTH_APPOINTMENT_HEIGHT_RATIO
    }
    _getOffsets() {
        return {
            unlimited: MONTH_APPOINTMENT_MIN_OFFSET,
            auto: MONTH_APPOINTMENT_MAX_OFFSET
        }
    }
    getDropDownAppointmentWidth(intervalCount, isAllDay) {
        if (this.adaptivityEnabled) {
            return this.getDropDownButtonAdaptiveSize()
        }
        var offset = intervalCount > 1 ? MONTH_DROPDOWN_APPOINTMENT_MAX_RIGHT_OFFSET : MONTH_DROPDOWN_APPOINTMENT_MIN_RIGHT_OFFSET;
        return this.cellWidth - offset
    }
    needCorrectAppointmentDates() {
        return false
    }
    _needVerticalGroupBounds() {
        return false
    }
    _needHorizontalGroupBounds() {
        return true
    }
    getPositionShift(timeShift) {
        return {
            cellPosition: timeShift * this.cellWidth,
            top: 0,
            left: 0
        }
    }
}
/* harmony default export */ __webpack_exports__["default"] = (HorizontalMonthRenderingStrategy);


/***/ }),

/***/ 69254:
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal_month_line.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _data_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../data/query */ 3398);
/* harmony import */ var _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data_provider/m_utils */ 57534);
/* harmony import */ var _m_strategy_horizontal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./m_strategy_horizontal */ 61061);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal_month_line.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var HOURS_IN_DAY = 24;
var MINUTES_IN_HOUR = 60;
var MILLISECONDS_IN_MINUTE = 6e4;
var ZERO_APPOINTMENT_DURATION_IN_DAYS = 1;
class HorizontalMonthLineRenderingStrategy extends _m_strategy_horizontal__WEBPACK_IMPORTED_MODULE_3__.default {
    calculateAppointmentWidth(appointment, position) {
        var startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(position.info.appointment.startDate);
        var {
            normalizedEndDate: normalizedEndDate
        } = position.info.appointment;
        var cellWidth = this.cellWidth || this.getAppointmentMinSize();
        var duration = Math.ceil(this._getDurationInDays(startDate, normalizedEndDate));
        var width = this.cropAppointmentWidth(duration * cellWidth, cellWidth);
        if (this.isVirtualScrolling) {
            var skippedDays = this.viewDataProvider.getSkippedDaysCount(position.groupIndex, startDate, normalizedEndDate, duration);
            width -= skippedDays * cellWidth
        }
        return width
    }
    _getDurationInDays(startDate, endDate) {
        var adjustedDuration = this._adjustDurationByDaylightDiff(endDate.getTime() - startDate.getTime(), startDate, endDate);
        return adjustedDuration / _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateToMilliseconds("day") || ZERO_APPOINTMENT_DURATION_IN_DAYS
    }
    getDeltaTime(args, initialSize) {
        return HOURS_IN_DAY * MINUTES_IN_HOUR * MILLISECONDS_IN_MINUTE * this._getDeltaWidth(args, initialSize)
    }
    isAllDay() {
        return false
    }
    createTaskPositionMap(items, skipSorting) {
        if (!skipSorting) {
            (0,_data_provider_m_utils__WEBPACK_IMPORTED_MODULE_2__.sortAppointmentsByStartDate)(items, this.dataAccessors)
        }
        return super.createTaskPositionMap(items)
    }
    _getSortedPositions(map, skipSorting) {
        var result = super._getSortedPositions(map);
        if (!skipSorting) {
            result = (0,_data_query__WEBPACK_IMPORTED_MODULE_1__.default)(result).sortBy("top").thenBy("left").thenBy("cellPosition").thenBy("i").toArray()
        }
        return result
    }
    needCorrectAppointmentDates() {
        return false
    }
    getPositionShift(timeShift) {
        return {
            top: 0,
            left: 0,
            cellPosition: 0
        }
    }
}
/* harmony default export */ __webpack_exports__["default"] = (HorizontalMonthLineRenderingStrategy);


/***/ }),

/***/ 21163:
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_vertical.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/utils/math */ 78148);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/utils/type */ 33275);
/* harmony import */ var _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay */ 89448);
/* harmony import */ var _renovation_ui_scheduler_view_model_appointments_utils_getSkippedHoursInRange__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange */ 74418);
/* harmony import */ var _ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../ui/scheduler/appointmentAdapter */ 50760);
/* harmony import */ var _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../ui/scheduler/expressionUtils */ 91286);
/* harmony import */ var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../ui/scheduler/utils.timeZone */ 53374);
/* harmony import */ var _m_strategy_base__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./m_strategy_base */ 5136);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_vertical.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */











var ALLDAY_APPOINTMENT_MIN_VERTICAL_OFFSET = 5;
var ALLDAY_APPOINTMENT_MAX_VERTICAL_OFFSET = 20;
var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds;
class VerticalRenderingStrategy extends _m_strategy_base__WEBPACK_IMPORTED_MODULE_10__.default {
    getDeltaTime(args, initialSize, appointment) {
        var deltaTime = 0;
        if (this.isAllDay(appointment)) {
            deltaTime = this._getDeltaWidth(args, initialSize) * toMs("day")
        } else {
            var deltaHeight = args.height - initialSize.height;
            deltaTime = toMs("minute") * Math.round(deltaHeight / this.cellHeight * this.cellDurationInMinutes)
        }
        return deltaTime
    }
    _correctCollectorCoordinatesInAdaptive(coordinates, isAllDay) {
        if (isAllDay) {
            super._correctCollectorCoordinatesInAdaptive(coordinates, isAllDay)
        } else if (0 === this._getMaxAppointmentCountPerCellByType()) {
            var {
                cellHeight: cellHeight
            } = this;
            var {
                cellWidth: cellWidth
            } = this;
            coordinates.top += (cellHeight - this.getDropDownButtonAdaptiveSize()) / 2;
            coordinates.left += (cellWidth - this.getDropDownButtonAdaptiveSize()) / 2
        }
    }
    getAppointmentGeometry(coordinates) {
        var geometry = null;
        if (coordinates.allDay) {
            geometry = this._getAllDayAppointmentGeometry(coordinates)
        } else {
            geometry = this.isAdaptive && coordinates.isCompact ? this._getAdaptiveGeometry(coordinates) : this._getVerticalAppointmentGeometry(coordinates)
        }
        return super.getAppointmentGeometry(geometry)
    }
    _getAdaptiveGeometry(coordinates) {
        var config = this._calculateGeometryConfig(coordinates);
        return this._customizeCoordinates(coordinates, config.height, config.appointmentCountPerCell, config.offset)
    }
    _getItemPosition(appointment) {
        var allDay = this.isAllDay(appointment);
        if (allDay) {
            return super._getItemPosition(appointment)
        }
        var adapter = (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_7__.createAppointmentAdapter)(appointment, this.dataAccessors, this.timeZoneCalculator);
        var isRecurring = !!adapter.recurrenceRule;
        var appointmentStartDate = adapter.calculateStartDate("toGrid");
        var appointmentEndDate = adapter.calculateEndDate("toGrid");
        var appointmentDuration = appointmentEndDate - appointmentStartDate;
        var appointmentBeginInCurrentView = this.options.startViewDate < appointmentStartDate;
        var isAppointmentTakesSeveralDays = !_ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_9__.default.isSameAppointmentDates(appointmentStartDate, appointmentEndDate);
        var settings = this.generateAppointmentSettings(appointment);
        var result = [];
        for (var j = 0; j < settings.length; j++) {
            var currentSetting = settings[j];
            var height = this.calculateAppointmentHeight(appointment, currentSetting);
            var width = this.calculateAppointmentWidth(appointment, currentSetting);
            var resultHeight = height;
            var appointmentReduced = null;
            var multiDaysAppointmentParts = [];
            var currentMaxAllowedPosition = currentSetting.vMax;
            if (this._isMultiViewAppointment(currentSetting, height) || isAppointmentTakesSeveralDays && !isRecurring) {
                var trimmedStartDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.trimTime(appointmentStartDate);
                var trimmedSettingStartDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.trimTime(currentSetting.info.appointment.startDate);
                var reduceHead = trimmedStartDate <= trimmedSettingStartDate || isRecurring;
                if (reduceHead) {
                    resultHeight = this._reduceMultiDayAppointment(height, {
                        top: currentSetting.top,
                        bottom: currentMaxAllowedPosition
                    });
                    multiDaysAppointmentParts = this._getAppointmentParts({
                        sourceAppointmentHeight: height,
                        reducedHeight: resultHeight,
                        width: width
                    }, currentSetting)
                }
                var {
                    startDate: currentSettingStartDate,
                    normalizedEndDate: currentSettingNormalizedEndDate
                } = currentSetting.info.appointment;
                var currentSettingDuration = currentSettingNormalizedEndDate - currentSettingStartDate;
                var hasNextParts = currentSettingDuration < appointmentDuration;
                appointmentReduced = hasNextParts ? appointmentBeginInCurrentView ? "head" : "body" : appointmentBeginInCurrentView ? "head" : "tail"
            }
            (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(currentSetting, {
                height: resultHeight,
                width: width,
                allDay: allDay,
                appointmentReduced: appointmentReduced
            });
            result = this._getAppointmentPartsPosition(multiDaysAppointmentParts, currentSetting, result)
        }
        return result
    }
    _isMultiViewAppointment(_ref, height) {
        var {
            vMax: vMax,
            top: top
        } = _ref;
        var fullAppointmentHeight = (0,_core_utils_math__WEBPACK_IMPORTED_MODULE_3__.roundFloatPart)(height, 2);
        var remainingHeight = (0,_core_utils_math__WEBPACK_IMPORTED_MODULE_3__.roundFloatPart)(vMax - top, 2);
        return fullAppointmentHeight > remainingHeight
    }
    _reduceMultiDayAppointment(sourceAppointmentHeight, bound) {
        return Math.min(sourceAppointmentHeight, bound.bottom - Math.floor(bound.top))
    }
    _getGroupHeight() {
        return this.cellHeight * this.rowCount
    }
    _getGroupTopOffset(appointmentSettings) {
        var {
            groupIndex: groupIndex
        } = appointmentSettings;
        var groupTop = Math.max(0, this.positionHelper.getGroupTop({
            groupIndex: groupIndex,
            showAllDayPanel: this.showAllDayPanel,
            isGroupedAllDayPanel: this.isGroupedAllDayPanel
        }));
        var allDayPanelOffset = this.positionHelper.getOffsetByAllDayPanel({
            groupIndex: groupIndex,
            supportAllDayRow: this.allDaySupported(),
            showAllDayPanel: this.showAllDayPanel
        });
        var appointmentGroupTopOffset = appointmentSettings.top - groupTop - allDayPanelOffset;
        return appointmentGroupTopOffset
    }
    _getTailHeight(appointmentGeometry, appointmentSettings) {
        if (!this.isVirtualScrolling) {
            return appointmentGeometry.sourceAppointmentHeight - appointmentGeometry.reducedHeight
        }
        var appointmentGroupTopOffset = this._getGroupTopOffset(appointmentSettings);
        var {
            sourceAppointmentHeight: sourceAppointmentHeight
        } = appointmentGeometry;
        var groupHeight = this._getGroupHeight();
        var tailHeight = appointmentGroupTopOffset + sourceAppointmentHeight - groupHeight;
        return tailHeight
    }
    _getAppointmentParts(appointmentGeometry, appointmentSettings) {
        var {
            width: width
        } = appointmentGeometry;
        var result = [];
        var currentPartTop = Math.max(0, this.positionHelper.getGroupTop({
            groupIndex: appointmentSettings.groupIndex,
            showAllDayPanel: this.showAllDayPanel,
            isGroupedAllDayPanel: this.isGroupedAllDayPanel
        }));
        var cellsDiff = this.isGroupedByDate ? this.groupCount : 1;
        var offset = this.cellWidth * cellsDiff;
        var allDayPanelOffset = this.positionHelper.getOffsetByAllDayPanel({
            groupIndex: appointmentSettings.groupIndex,
            supportAllDayRow: this.allDaySupported(),
            showAllDayPanel: this.showAllDayPanel
        });
        currentPartTop += allDayPanelOffset;
        var minHeight = this.getAppointmentMinSize();
        var {
            vMax: vMax,
            hMax: hMax
        } = appointmentSettings;
        var hasTailPart = this.options.endViewDate > appointmentSettings.info.appointment.endDate;
        var left = Math.round(appointmentSettings.left + offset);
        var tailHeight = this._getTailHeight(appointmentGeometry, appointmentSettings);
        while (tailHeight > 0 && left < hMax) {
            tailHeight = Math.max(minHeight, tailHeight);
            var columnIndex = appointmentSettings.columnIndex + cellsDiff;
            var height = Math.min(tailHeight, vMax);
            result.push((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, appointmentSettings), {
                top: currentPartTop,
                left: left,
                height: height,
                width: width,
                appointmentReduced: "body",
                rowIndex: 0,
                columnIndex: columnIndex
            }));
            left += offset;
            tailHeight -= vMax
        }
        if (hasTailPart && result.length > 0) {
            result[result.length - 1].appointmentReduced = "tail"
        }
        return result
    }
    _getMinuteHeight() {
        return this.cellHeight / this.cellDurationInMinutes
    }
    _getCompactLeftCoordinate(itemLeft, index) {
        var cellWidth = this.cellWidth || this.getAppointmentMinSize();
        return itemLeft + (1 + cellWidth) * index
    }
    _getVerticalAppointmentGeometry(coordinates) {
        var config = this._calculateVerticalGeometryConfig(coordinates);
        return this._customizeVerticalCoordinates(coordinates, config.width, config.appointmentCountPerCell, config.offset)
    }
    _customizeVerticalCoordinates(coordinates, width, appointmentCountPerCell, topOffset, isAllDay) {
        var appointmentWidth = Math.max(width / appointmentCountPerCell, width / coordinates.count);
        var {
            height: height
        } = coordinates;
        var appointmentLeft = coordinates.left + coordinates.index * appointmentWidth;
        var {
            top: top
        } = coordinates;
        if (coordinates.isCompact) {
            this._markAppointmentAsVirtual(coordinates, isAllDay)
        }
        return {
            height: height,
            width: appointmentWidth,
            top: top,
            left: appointmentLeft,
            empty: this._isAppointmentEmpty(height, width)
        }
    }
    _calculateVerticalGeometryConfig(coordinates) {
        var overlappingMode = this.maxAppointmentsPerCell;
        var offsets = this._getOffsets();
        var appointmentDefaultOffset = this._getAppointmentDefaultOffset();
        var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);
        var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);
        var maxWidth = this._getMaxWidth();
        if (!appointmentCountPerCell) {
            appointmentCountPerCell = coordinates.count;
            ratio = (maxWidth - offsets.unlimited) / maxWidth
        }
        var topOffset = (1 - ratio) * maxWidth;
        if ("auto" === overlappingMode || (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isNumeric)(overlappingMode)) {
            ratio = 1;
            maxWidth -= appointmentDefaultOffset;
            topOffset = 0
        }
        return {
            width: ratio * maxWidth,
            appointmentCountPerCell: appointmentCountPerCell,
            offset: topOffset
        }
    }
    _getMaxWidth() {
        return this.cellWidth
    }
    isAllDay(appointmentData) {
        return (0,_renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_5__.getAppointmentTakesAllDay)((0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_7__.createAppointmentAdapter)(appointmentData, this.dataAccessors, this.timeZoneCalculator), this.startDayHour, this.endDayHour, this.allDayPanelMode)
    }
    _getAppointmentMaxWidth() {
        return this.cellWidth - this._getAppointmentDefaultOffset()
    }
    calculateAppointmentWidth(appointment, position) {
        if (!this.isAllDay(appointment)) {
            return 0
        }
        var startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.trimTime(position.info.appointment.startDate);
        var {
            normalizedEndDate: normalizedEndDate
        } = position.info.appointment;
        var cellWidth = this.cellWidth || this.getAppointmentMinSize();
        var durationInHours = (normalizedEndDate.getTime() - startDate.getTime()) / toMs("hour");
        var skippedHours = (0,_renovation_ui_scheduler_view_model_appointments_utils_getSkippedHoursInRange__WEBPACK_IMPORTED_MODULE_6__.default)(position.info.appointment.startDate, position.info.appointment.endDate, this.viewDataProvider);
        var width = Math.ceil((durationInHours - skippedHours) / 24) * cellWidth;
        width = this.cropAppointmentWidth(width, cellWidth);
        return width
    }
    calculateAppointmentHeight(appointment, position) {
        if (this.isAllDay(appointment)) {
            return 0
        }
        var {
            startDate: startDate
        } = position.info.appointment;
        var {
            normalizedEndDate: normalizedEndDate
        } = position.info.appointment;
        var allDay = _ui_scheduler_expressionUtils__WEBPACK_IMPORTED_MODULE_8__.ExpressionUtils.getField(this.dataAccessors, "allDay", appointment);
        var duration = this.getAppointmentDurationInMs(startDate, normalizedEndDate, allDay);
        var durationInMinutes = this._adjustDurationByDaylightDiff(duration, startDate, normalizedEndDate) / toMs("minute");
        var height = durationInMinutes * this._getMinuteHeight();
        return height
    }
    getDirection() {
        return "vertical"
    }
    _sortCondition(a, b) {
        if (!!a.allDay !== !!b.allDay) {
            return a.allDay ? 1 : -1
        }
        var isAllDay = a.allDay && b.allDay;
        return "vertical" === this.groupOrientation && isAllDay ? this._columnCondition(a, b) : this._rowCondition(a, b)
    }
    allDaySupported() {
        return true
    }
    _getAllDayAppointmentGeometry(coordinates) {
        var config = this._calculateGeometryConfig(coordinates);
        return this._customizeCoordinates(coordinates, config.height, config.appointmentCountPerCell, config.offset, true)
    }
    _calculateGeometryConfig(coordinates) {
        if (!this.allowResizing || !this.allowAllDayResizing) {
            coordinates.skipResizing = true
        }
        var config = super._calculateGeometryConfig(coordinates);
        var minAppointmentCountPerCell = Math.min(config.appointmentCountPerCell, this._getDynamicAppointmentCountPerCell().allDay);
        if (coordinates.allDay && coordinates.count <= minAppointmentCountPerCell) {
            config.offset = 0
        }
        return config
    }
    _getAppointmentCount(overlappingMode, coordinates) {
        return "auto" !== overlappingMode && 1 === coordinates.count && !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isNumeric)(overlappingMode) ? coordinates.count : this._getMaxAppointmentCountPerCellByType(coordinates.allDay)
    }
    _getDefaultRatio(coordinates, appointmentCountPerCell) {
        return coordinates.count > this.appointmentCountPerCell ? .65 : 1
    }
    _getOffsets() {
        return {
            unlimited: ALLDAY_APPOINTMENT_MIN_VERTICAL_OFFSET,
            auto: ALLDAY_APPOINTMENT_MAX_VERTICAL_OFFSET
        }
    }
    _getMaxHeight() {
        return this.allDayHeight || this.getAppointmentMinSize()
    }
    _needVerticalGroupBounds(allDay) {
        return !allDay
    }
    _needHorizontalGroupBounds() {
        return false
    }
    getPositionShift(timeShift, isAllDay) {
        if (!isAllDay && this.isAdaptive && 0 === this._getMaxAppointmentCountPerCellByType(isAllDay)) {
            return {
                top: 0,
                left: 0,
                cellPosition: 0
            }
        }
        return super.getPositionShift(timeShift, isAllDay)
    }
}
/* harmony default export */ __webpack_exports__["default"] = (VerticalRenderingStrategy);


/***/ }),

/***/ 48926:
/*!***************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_week.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _m_strategy_vertical__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./m_strategy_vertical */ 21163);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_week.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

class WeekAppointmentRenderingStrategy extends _m_strategy_vertical__WEBPACK_IMPORTED_MODULE_0__.default {
    isApplyCompactAppointmentOffset() {
        if (this.isAdaptive && 0 === this._getMaxAppointmentCountPerCellByType()) {
            return false
        }
        return this.supportCompactDropDownAppointments()
    }
}
/* harmony default export */ __webpack_exports__["default"] = (WeekAppointmentRenderingStrategy);


/***/ }),

/***/ 4937:
/*!******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/resizing/m_core.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getAppointmentDateRange": function() { return /* binding */ getAppointmentDateRange; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _m_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./m_utils */ 86012);
/**
 * DevExtreme (esm/__internal/scheduler/appointments/resizing/m_core.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var getAppointmentLeftCell = options => {
    var {
        cellHeight: cellHeight,
        cellWidth: cellWidth,
        viewDataProvider: viewDataProvider,
        relativeAppointmentRect: relativeAppointmentRect,
        appointmentSettings: appointmentSettings,
        rtlEnabled: rtlEnabled
    } = options;
    var cellRowIndex = Math.floor(relativeAppointmentRect.top / cellHeight);
    var cellColumnIndex = Math.round(relativeAppointmentRect.left / cellWidth);
    var leftCell = viewDataProvider.getCellData(cellRowIndex, cellColumnIndex, appointmentSettings.allDay, rtlEnabled);
    return leftCell
};
var getDateRangeHorizontal = options => {
    var {
        cellWidth: cellWidth,
        cellCountInRow: cellCountInRow,
        relativeAppointmentRect: relativeAppointmentRect,
        viewDataProvider: viewDataProvider,
        appointmentSettings: appointmentSettings,
        handles: handles
    } = options;
    var appointmentFirstCell = getAppointmentLeftCell(options);
    var appointmentCellsAmount = Math.round(relativeAppointmentRect.width / cellWidth);
    var appointmentLastCellIndex = appointmentFirstCell.index + (appointmentCellsAmount - 1);
    var {
        allDay: allDay,
        sourceAppointment: sourceAppointment
    } = appointmentSettings.info;
    if (handles.left) {
        var startDate = (0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeStartDate)(options, appointmentFirstCell.startDate, sourceAppointment.startDate);
        return {
            startDate: startDate,
            endDate: sourceAppointment.endDate
        }
    }
    var appointmentRowIndex = Math.floor(appointmentLastCellIndex / cellCountInRow);
    var appointmentColumnIndex = appointmentLastCellIndex % cellCountInRow;
    var appointmentLastCell = viewDataProvider.getCellData(appointmentRowIndex, appointmentColumnIndex, allDay);
    var endDate = !options.considerTime ? appointmentLastCell.endDate : appointmentLastCell.startDate;
    endDate = (0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeEndDate)(options, endDate, sourceAppointment.endDate);
    return {
        startDate: sourceAppointment.startDate,
        endDate: endDate
    }
};
var getDateRangeHorizontalRTL = options => {
    var {
        viewDataProvider: viewDataProvider,
        cellCountInRow: cellCountInRow,
        appointmentSettings: appointmentSettings,
        handles: handles,
        cellWidth: cellWidth,
        relativeAppointmentRect: relativeAppointmentRect
    } = options;
    var appointmentLastCell = getAppointmentLeftCell(options);
    var {
        allDay: allDay,
        sourceAppointment: sourceAppointment
    } = appointmentSettings.info;
    if (handles.right) {
        var appointmentLastCellIndex = appointmentLastCell.index;
        var appointmentCellsAmount = Math.round(relativeAppointmentRect.width / cellWidth);
        var appointmentFirstCellIndex = appointmentLastCellIndex - appointmentCellsAmount + 1;
        var appointmentRowIndex = Math.floor(appointmentLastCellIndex / cellCountInRow);
        var appointmentFirstCell = viewDataProvider.getCellData(appointmentRowIndex, appointmentFirstCellIndex, allDay, true);
        var startDate = (0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeStartDate)(options, appointmentFirstCell.startDate, sourceAppointment.endDate);
        return {
            startDate: startDate,
            endDate: sourceAppointment.endDate
        }
    }
    var endDate = !options.considerTime ? appointmentLastCell.endDate : appointmentLastCell.startDate;
    endDate = (0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeEndDate)(options, endDate, sourceAppointment.endDate);
    return {
        startDate: sourceAppointment.startDate,
        endDate: endDate
    }
};
var getRelativeAppointmentRect = (appointmentRect, parentAppointmentRect) => {
    var left = appointmentRect.left - parentAppointmentRect.left;
    var top = appointmentRect.top - parentAppointmentRect.top;
    var width = left < 0 ? appointmentRect.width + left : appointmentRect.width;
    var height = top < 0 ? appointmentRect.height + top : appointmentRect.height;
    return {
        left: Math.max(0, left),
        top: Math.max(0, top),
        width: width,
        height: height
    }
};
var getAppointmentCellsInfo = options => {
    var {
        appointmentSettings: appointmentSettings,
        isVerticalGroupedWorkSpace: isVerticalGroupedWorkSpace,
        DOMMetaData: DOMMetaData
    } = options;
    var DOMMetaTable = appointmentSettings.allDay && !isVerticalGroupedWorkSpace ? [DOMMetaData.allDayPanelCellsMeta] : DOMMetaData.dateTableCellsMeta;
    var {
        positionByMap: positionByMap
    } = appointmentSettings;
    var {
        height: cellHeight,
        width: cellWidth
    } = DOMMetaTable[positionByMap.rowIndex][positionByMap.columnIndex];
    var cellCountInRow = DOMMetaTable[positionByMap.rowIndex].length;
    return {
        cellWidth: cellWidth,
        cellHeight: cellHeight,
        cellCountInRow: cellCountInRow
    }
};
var getAppointmentDateRange = options => {
    var {
        appointmentSettings: appointmentSettings
    } = options;
    var relativeAppointmentRect = getRelativeAppointmentRect(options.appointmentRect, options.parentAppointmentRect);
    var cellInfo = getAppointmentCellsInfo(options);
    var considerTime = !options.isDateAndTimeView || appointmentSettings.allDay;
    var extendedOptions = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options), cellInfo), {
        considerTime: considerTime,
        relativeAppointmentRect: relativeAppointmentRect
    });
    return !options.rtlEnabled ? getDateRangeHorizontal(extendedOptions) : getDateRangeHorizontalRTL(extendedOptions)
};


/***/ }),

/***/ 86012:
/*!*******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/resizing/m_utils.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "normalizeStartDate": function() { return /* binding */ normalizeStartDate; },
/* harmony export */   "normalizeEndDate": function() { return /* binding */ normalizeEndDate; }
/* harmony export */ });
/**
 * DevExtreme (esm/__internal/scheduler/appointments/resizing/m_utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var normalizeDate = (options, date, sourceDate, isStartDate) => {
    if (!options.considerTime) {
        return date
    }
    var result = new Date(date);
    result.setHours(sourceDate.getHours(), sourceDate.getMinutes(), sourceDate.getSeconds());
    var {
        startDayHour: startDayHour,
        endDayHour: endDayHour,
        appointmentSettings: {
            allDay: allDay
        }
    } = options;
    var minDate = new Date(date);
    var maxDate = new Date(date);
    minDate.setHours(startDayHour, 0, 0, 0);
    maxDate.setHours(endDayHour, 0, 0, 0);
    var resultTime = result.getTime();
    var isDateOutInterval = isStartDate ? resultTime < minDate.getTime() || resultTime >= maxDate.getTime() : resultTime <= minDate.getTime() || resultTime > maxDate.getTime();
    if (isDateOutInterval) {
        result = !allDay ? maxDate : minDate
    }
    return result
};
var normalizeStartDate = (options, startDate, sourceStartDate) => normalizeDate(options, startDate, sourceStartDate, true);
var normalizeEndDate = (options, endDate, sourceEndDate) => normalizeDate(options, endDate, sourceEndDate, false);


/***/ }),

/***/ 19297:
/*!************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/base/m_widget_observer.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../ui/widget/ui.widget */ 69703);
/**
 * DevExtreme (esm/__internal/scheduler/base/m_widget_observer.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

class WidgetObserver extends _ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_0__.default {
    notifyObserver(subject, args) {
        var observer = this.option("observer");
        if (observer) {
            observer.fire(subject, args)
        }
    }
    invoke() {
        var observer = this.option("observer");
        if (observer) {
            return observer.fire.apply(observer, arguments)
        }
    }
}
/* harmony default export */ __webpack_exports__["default"] = (WidgetObserver);


/***/ }),

/***/ 79361:
/*!*******************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/header/m_calendar.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ SchedulerCalendar; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/devices */ 41881);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _ui_calendar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../ui/calendar */ 26682);
/* harmony import */ var _ui_popover_ui_popover__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../ui/popover/ui.popover */ 23679);
/* harmony import */ var _ui_popup_ui_popup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../ui/popup/ui.popup */ 23772);
/* harmony import */ var _ui_scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../ui/scroll_view/ui.scrollable */ 79678);
/* harmony import */ var _ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../ui/widget/ui.widget */ 69703);
/**
 * DevExtreme (esm/__internal/scheduler/header/m_calendar.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */








var CALENDAR_CLASS = "dx-scheduler-navigator-calendar";
var CALENDAR_POPOVER_CLASS = "dx-scheduler-navigator-calendar-popover";
class SchedulerCalendar extends _ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_7__.default {
    show(target) {
        if (!this._isMobileLayout()) {
            this._overlay.option("target", target)
        }
        this._overlay.show()
    }
    hide() {
        this._overlay.hide()
    }
    _keyboardHandler(opts) {
        var _a;
        null === (_a = this._calendar) || void 0 === _a ? void 0 : _a._keyboardHandler(opts)
    }
    _init() {
        super._init();
        this.$element()
    }
    _render() {
        super._render();
        this._renderOverlay()
    }
    _renderOverlay() {
        this.$element().addClass(CALENDAR_POPOVER_CLASS);
        var isMobileLayout = this._isMobileLayout();
        var overlayType = isMobileLayout ? _ui_popup_ui_popup__WEBPACK_IMPORTED_MODULE_5__.default : _ui_popover_ui_popover__WEBPACK_IMPORTED_MODULE_4__.default;
        this._overlay = this._createComponent(this.$element(), overlayType, {
            contentTemplate: () => this._createOverlayContent(),
            onShown: () => this._calendar.focus(),
            defaultOptionsRules: [{
                device: () => isMobileLayout,
                options: {
                    fullScreen: true,
                    showCloseButton: false,
                    toolbarItems: [{
                        shortcut: "cancel"
                    }]
                }
            }]
        })
    }
    _createOverlayContent() {
        var result = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(CALENDAR_CLASS);
        this._calendar = this._createComponent(result, _ui_calendar__WEBPACK_IMPORTED_MODULE_3__.default, this._getCalendarOptions());
        if (this._isMobileLayout()) {
            var scrollable = this._createScrollable(result);
            return scrollable.$element()
        }
        return result
    }
    _createScrollable(content) {
        var result = this._createComponent("<div>", _ui_scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_6__.default, {
            direction: "vertical"
        });
        result.$content().append(content);
        return result
    }
    _optionChanged(_ref) {
        var {
            name: name,
            value: value
        } = _ref;
        var _a;
        switch (name) {
            case "value":
                null === (_a = this._calendar) || void 0 === _a ? void 0 : _a.option("value", value)
        }
    }
    _getCalendarOptions() {
        return {
            value: this.option("value"),
            min: this.option("min"),
            max: this.option("max"),
            firstDayOfWeek: this.option("firstDayOfWeek"),
            focusStateEnabled: this.option("focusStateEnabled"),
            onValueChanged: this.option("onValueChanged"),
            skipFocusCheck: true,
            tabIndex: this.option("tabIndex")
        }
    }
    _isMobileLayout() {
        return !_core_devices__WEBPACK_IMPORTED_MODULE_1__.default.current().generic
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxSchedulerCalendarPopup", SchedulerCalendar);


/***/ }),

/***/ 54014:
/*!*************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/header/m_date_navigator.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getDateNavigator": function() { return /* binding */ getDateNavigator; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _ui_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../ui/themes */ 78279);
/**
 * DevExtreme (esm/__internal/scheduler/header/m_date_navigator.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var {
    trimTime: trimTime
} = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default;
var DATE_NAVIGATOR_CLASS = "dx-scheduler-navigator";
var PREVIOUS_BUTTON_CLASS = "dx-scheduler-navigator-previous";
var CALENDAR_BUTTON_CLASS = "dx-scheduler-navigator-caption";
var NEXT_BUTTON_CLASS = "dx-scheduler-navigator-next";
var DIRECTION_LEFT = -1;
var DIRECTION_RIGHT = 1;
var getDateNavigator = (header, item) => {
    var items = [getPreviousButtonOptions(header), getCalendarButtonOptions(header), getNextButtonOptions(header)];
    var stylingMode = (0,_ui_themes__WEBPACK_IMPORTED_MODULE_2__.isMaterial)() ? "text" : "contained";
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
        widget: "dxButtonGroup",
        cssClass: DATE_NAVIGATOR_CLASS,
        options: {
            items: items,
            stylingMode: stylingMode,
            selectionMode: "none",
            onItemClick: e => {
                e.itemData.clickHandler(e)
            }
        }
    }, item)
};
var getPreviousButtonOptions = header => ({
    key: "previous",
    icon: "chevronprev",
    elementAttr: {
        class: PREVIOUS_BUTTON_CLASS
    },
    clickHandler: () => header._updateDateByDirection(DIRECTION_LEFT),
    onContentReady: e => {
        var previousButton = e.component;
        previousButton.option("disabled", isPreviousButtonDisabled(header));
        header._addEvent("min", () => {
            previousButton.option("disabled", isPreviousButtonDisabled(header))
        });
        header._addEvent("currentDate", () => {
            previousButton.option("disabled", isPreviousButtonDisabled(header))
        });
        header._addEvent("startViewDate", () => {
            previousButton.option("disabled", isPreviousButtonDisabled(header))
        })
    }
});
var getCalendarButtonOptions = header => ({
    key: "calendar",
    text: header.captionText,
    elementAttr: {
        class: CALENDAR_BUTTON_CLASS
    },
    clickHandler: e => header._showCalendar(e),
    onContentReady: e => {
        var calendarButton = e.component;
        header._addEvent("currentView", () => {
            calendarButton.option("text", header.captionText)
        });
        header._addEvent("currentDate", () => {
            calendarButton.option("text", header.captionText)
        });
        header._addEvent("startViewDate", () => {
            calendarButton.option("text", header.captionText)
        });
        header._addEvent("views", () => {
            calendarButton.option("text", header.captionText)
        });
        header._addEvent("firstDayOfWeek", () => {
            calendarButton.option("text", header.captionText)
        })
    }
});
var getNextButtonOptions = header => ({
    key: "next",
    icon: "chevronnext",
    elementAttr: {
        class: NEXT_BUTTON_CLASS
    },
    clickHandler: () => header._updateDateByDirection(DIRECTION_RIGHT),
    onContentReady: e => {
        var nextButton = e.component;
        nextButton.option("disabled", isNextButtonDisabled(header));
        header._addEvent("min", () => {
            nextButton.option("disabled", isNextButtonDisabled(header))
        });
        header._addEvent("currentDate", () => {
            nextButton.option("disabled", isNextButtonDisabled(header))
        });
        header._addEvent("startViewDate", () => {
            nextButton.option("disabled", isNextButtonDisabled(header))
        })
    }
});
var isPreviousButtonDisabled = header => {
    var min = header.option("min");
    if (!min) {
        return false
    }
    min = new Date(min);
    var caption = header._getCaption();
    min = trimTime(min);
    var previousDate = header._getNextDate(-1, caption.endDate);
    return previousDate < min
};
var isNextButtonDisabled = header => {
    var max = header.option("max");
    if (!max) {
        return false
    }
    max = new Date(max);
    var caption = header._getCaption();
    max = max.setHours(23, 59, 59);
    var nextDate = header._getNextDate(1, caption.startDate);
    return nextDate > max
};


/***/ }),

/***/ 67036:
/*!*****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/header/m_header.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SchedulerHeader": function() { return /* binding */ SchedulerHeader; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _ui_button_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../ui/button_group */ 52566);
/* harmony import */ var _ui_drop_down_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../ui/drop_down_button */ 98924);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/devices */ 41881);
/* harmony import */ var _core_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/errors */ 31150);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _renovation_ui_scheduler_model_untyped_getCurrentView__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/model/untyped_getCurrentView */ 80337);
/* harmony import */ var _ui_toolbar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../ui/toolbar */ 8866);
/* harmony import */ var _ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../ui/widget/ui.widget */ 69703);
/* harmony import */ var _m_calendar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./m_calendar */ 79361);
/* harmony import */ var _m_date_navigator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./m_date_navigator */ 54014);
/* harmony import */ var _m_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./m_utils */ 79431);
/* harmony import */ var _m_view_switcher__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./m_view_switcher */ 86721);
/**
 * DevExtreme (esm/__internal/scheduler/header/m_header.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
















var DEFAULT_ELEMENT = "defaultElement";
var VIEW_SWITCHER = "viewSwitcher";
var DATE_NAVIGATOR = "dateNavigator";
var COMPONENT_CLASS = "dx-scheduler-header";
class SchedulerHeader extends _ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_11__.default {
    get views() {
        return this.option("views")
    }
    get captionText() {
        return this._getCaption().text
    }
    get intervalOptions() {
        var step = (0,_m_utils__WEBPACK_IMPORTED_MODULE_14__.getStep)(this.currentView);
        var intervalCount = this.option("intervalCount");
        var firstDayOfWeek = this.option("firstDayOfWeek");
        var agendaDuration = this.option("agendaDuration");
        return {
            step: step,
            intervalCount: intervalCount,
            firstDayOfWeek: firstDayOfWeek,
            agendaDuration: agendaDuration
        }
    }
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(super._getDefaultOptions(), {
            _useShortDateFormat: !_core_devices__WEBPACK_IMPORTED_MODULE_4__.default.real().generic || _core_devices__WEBPACK_IMPORTED_MODULE_4__.default.isSimulator()
        })
    }
    _createEventMap() {
        this.eventMap = new Map([
            ["currentView", [view => {
                this.currentView = (0,_renovation_ui_scheduler_model_untyped_getCurrentView__WEBPACK_IMPORTED_MODULE_9__.renovationGetCurrentView)((0,_m_utils__WEBPACK_IMPORTED_MODULE_14__.getViewName)(view), this.option("views"))
            }]],
            ["items", [this.repaint.bind(this)]],
            ["views", [_m_utils__WEBPACK_IMPORTED_MODULE_14__.validateViews]],
            ["currentDate", [this._getCalendarOptionUpdater("date")]],
            ["min", [this._getCalendarOptionUpdater("min")]],
            ["max", [this._getCalendarOptionUpdater("max")]],
            ["tabIndex", [this.repaint.bind(this)]],
            ["focusStateEnabled", [this.repaint.bind(this)]],
            ["useDropDownViewSwitcher", [this.repaint.bind(this)]]
        ])
    }
    _addEvent(name, event) {
        if (!this.eventMap.has(name)) {
            this.eventMap.set(name, [])
        }
        var events = this.eventMap.get(name);
        this.eventMap.set(name, [...events, event])
    }
    _optionChanged(args) {
        var {
            name: name,
            value: value
        } = args;
        if (this.eventMap.has(name)) {
            var events = this.eventMap.get(name);
            events.forEach(event => {
                event(value)
            })
        }
    }
    _init() {
        super._init();
        this._createEventMap();
        this.$element().addClass(COMPONENT_CLASS);
        this.currentView = (0,_renovation_ui_scheduler_model_untyped_getCurrentView__WEBPACK_IMPORTED_MODULE_9__.renovationGetCurrentView)((0,_m_utils__WEBPACK_IMPORTED_MODULE_14__.getViewName)(this.option("currentView")), this.option("views"))
    }
    _render() {
        super._render();
        this._createEventMap();
        this._renderToolbar()
    }
    _renderToolbar() {
        var config = this._createToolbarConfig();
        var toolbarElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_6__.default)("<div>");
        toolbarElement.appendTo(this.$element());
        this._toolbar = this._createComponent(toolbarElement, _ui_toolbar__WEBPACK_IMPORTED_MODULE_10__.default, config)
    }
    _createToolbarConfig() {
        var items = this.option("items");
        var parsedItems = items.map(element => this._parseItem(element));
        return {
            items: parsedItems
        }
    }
    _parseItem(item) {
        var isDefaultElement = this._isDefaultItem(item);
        if (isDefaultElement) {
            var defaultElementType = item[DEFAULT_ELEMENT];
            switch (defaultElementType) {
                case VIEW_SWITCHER:
                    if (this.option("useDropDownViewSwitcher")) {
                        return (0,_m_view_switcher__WEBPACK_IMPORTED_MODULE_15__.getDropDownViewSwitcher)(this, item)
                    }
                    return (0,_m_view_switcher__WEBPACK_IMPORTED_MODULE_15__.getViewSwitcher)(this, item);
                case DATE_NAVIGATOR:
                    this._renderCalendar();
                    return (0,_m_date_navigator__WEBPACK_IMPORTED_MODULE_13__.getDateNavigator)(this, item);
                default:
                    _core_errors__WEBPACK_IMPORTED_MODULE_5__.default.log("Unknown default element type: ".concat(defaultElementType))
            }
        }
        return item
    }
    _callEvent(event, arg) {
        if (this.eventMap.has(event)) {
            var events = this.eventMap.get(event);
            events.forEach(event => event(arg))
        }
    }
    _updateCurrentView(view) {
        var onCurrentViewChange = this.option("onCurrentViewChange");
        onCurrentViewChange(view.name);
        this._callEvent("currentView", view)
    }
    _updateCalendarValueAndCurrentDate(date) {
        this._updateCurrentDate(date);
        this._calendar.option("value", date)
    }
    _updateCurrentDate(date) {
        var onCurrentDateChange = this.option("onCurrentDateChange");
        onCurrentDateChange(date);
        this._callEvent("currentDate", date)
    }
    _renderCalendar() {
        this._calendar = this._createComponent("<div>", _m_calendar__WEBPACK_IMPORTED_MODULE_12__.default, {
            value: this.option("currentDate"),
            min: this.option("min"),
            max: this.option("max"),
            firstDayOfWeek: this.option("firstDayOfWeek"),
            focusStateEnabled: this.option("focusStateEnabled"),
            tabIndex: this.option("tabIndex"),
            onValueChanged: e => {
                this._updateCurrentDate(e.value);
                this._calendar.hide()
            }
        });
        this._calendar.$element().appendTo(this.$element())
    }
    _getCalendarOptionUpdater(name) {
        return value => {
            if (this._calendar) {
                this._calendar.option(name, value)
            }
        }
    }
    _getNextDate(direction) {
        var initialDate = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
        var date = null !== initialDate && void 0 !== initialDate ? initialDate : this.option("currentDate");
        var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this.intervalOptions), {
            date: date
        });
        return (0,_m_utils__WEBPACK_IMPORTED_MODULE_14__.getNextIntervalDate)(options, direction)
    }
    _isMonth() {
        var {
            currentView: currentView
        } = this;
        return "month" === (0,_m_utils__WEBPACK_IMPORTED_MODULE_14__.getViewType)(currentView)
    }
    _getDisplayedDate() {
        var startViewDate = this.option("startViewDate");
        if (this._isMonth()) {
            return (0,_m_utils__WEBPACK_IMPORTED_MODULE_14__.nextWeek)(startViewDate)
        }
        return new Date(startViewDate)
    }
    _getCaption() {
        var date = this.option("currentDate");
        if (this.option("startViewDate")) {
            date = this._getDisplayedDate()
        }
        date = _core_utils_date__WEBPACK_IMPORTED_MODULE_7__.default.trimTime(date);
        var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this.intervalOptions), {
            date: date
        });
        var customizationFunction = this.option("customizeDateNavigatorText");
        var useShortDateFormat = this.option("_useShortDateFormat");
        return (0,_m_utils__WEBPACK_IMPORTED_MODULE_14__.getCaption)(options, useShortDateFormat, customizationFunction)
    }
    _updateDateByDirection(direction) {
        var date = this._getNextDate(direction);
        this._updateCalendarValueAndCurrentDate(date)
    }
    _showCalendar(e) {
        this._calendar.show(e.element)
    }
    _hideCalendar() {
        this._calendar.hide()
    }
    _isDefaultItem(item) {
        return Object.prototype.hasOwnProperty.call(item, DEFAULT_ELEMENT)
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_3__.default)("dxSchedulerHeader", SchedulerHeader);


/***/ }),

/***/ 79431:
/*!****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/header/m_utils.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "nextWeek": function() { return /* binding */ nextWeek; },
/* harmony export */   "getNextIntervalDate": function() { return /* binding */ getNextIntervalDate; },
/* harmony export */   "getCaption": function() { return /* binding */ getCaption; },
/* harmony export */   "getStep": function() { return /* binding */ getStep; },
/* harmony export */   "getViewType": function() { return /* binding */ getViewType; },
/* harmony export */   "getViewName": function() { return /* binding */ getViewName; },
/* harmony export */   "getViewText": function() { return /* binding */ getViewText; },
/* harmony export */   "validateViews": function() { return /* binding */ validateViews; },
/* harmony export */   "formatViews": function() { return /* binding */ formatViews; },
/* harmony export */   "isOneView": function() { return /* binding */ isOneView; }
/* harmony export */ });
/* harmony import */ var _core_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/errors */ 31150);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_inflector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/utils/inflector */ 75102);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../localization/date */ 83881);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../localization/message */ 19336);
/* harmony import */ var _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../ui/scheduler/constants */ 27895);
/**
 * DevExtreme (esm/__internal/scheduler/header/m_utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */







var DAY_FORMAT = "d";
var DAYS_IN_WORK_WEEK = 5;
var {
    correctDateWithUnitBeginning: getPeriodStart,
    getFirstWeekDate: getWeekStart,
    getLastMonthDay: getLastMonthDay,
    addDateInterval: addDateInterval
} = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default;
var {
    format: formatDate
} = _localization_date__WEBPACK_IMPORTED_MODULE_4__.default;
var MS_DURATION = {
    milliseconds: 1
};
var DAY_DURATION = {
    days: 1
};
var WEEK_DURATION = {
    days: 7
};
var SATURDAY_INDEX = 6;
var SUNDAY_INDEX = 0;
var subMS = date => addDateInterval(date, MS_DURATION, -1);
var addMS = date => addDateInterval(date, MS_DURATION, 1);
var nextDay = date => addDateInterval(date, DAY_DURATION, 1);
var nextWeek = date => addDateInterval(date, WEEK_DURATION, 1);
var nextMonth = date => {
    var days = getLastMonthDay(date);
    return addDateInterval(date, {
        days: days
    }, 1)
};
var isWeekend = date => date.getDay() === SATURDAY_INDEX || date.getDay() === SUNDAY_INDEX;
var getWorkWeekStart = firstDayOfWeek => {
    var date = new Date(firstDayOfWeek);
    while (isWeekend(date)) {
        date = nextDay(date)
    }
    return date
};
var getDateAfterWorkWeek = workWeekStart => {
    var date = new Date(workWeekStart);
    var workDaysCount = 0;
    while (workDaysCount < DAYS_IN_WORK_WEEK) {
        if (!isWeekend(date)) {
            workDaysCount++
        }
        date = nextDay(date)
    }
    return date
};
var nextAgendaStart = (date, agendaDuration) => addDateInterval(date, {
    days: agendaDuration
}, 1);
var getInterval = options => {
    var startDate = getIntervalStartDate(options);
    var endDate = getIntervalEndDate(startDate, options);
    return {
        startDate: startDate,
        endDate: endDate
    }
};
var getIntervalStartDate = options => {
    var {
        date: date,
        step: step,
        firstDayOfWeek: firstDayOfWeek
    } = options;
    switch (step) {
        case "day":
        case "week":
        case "month":
            return getPeriodStart(date, step, false, firstDayOfWeek);
        case "workWeek":
            var firstWeekDay = getWeekStart(date, firstDayOfWeek);
            return getWorkWeekStart(firstWeekDay);
        case "agenda":
            return new Date(date)
    }
};
var getIntervalEndDate = (startDate, options) => {
    var {
        intervalCount: intervalCount,
        step: step,
        agendaDuration: agendaDuration
    } = options;
    var periodStartDate;
    var periodEndDate;
    var nextPeriodStartDate = new Date(startDate);
    for (var i = 0; i < intervalCount; i++) {
        periodStartDate = nextPeriodStartDate;
        periodEndDate = getPeriodEndDate(periodStartDate, step, agendaDuration);
        nextPeriodStartDate = getNextPeriodStartDate(periodEndDate, step)
    }
    return periodEndDate
};
var getPeriodEndDate = (currentPeriodStartDate, step, agendaDuration) => {
    var date;
    switch (step) {
        case "day":
            date = nextDay(currentPeriodStartDate);
            break;
        case "week":
            date = nextWeek(currentPeriodStartDate);
            break;
        case "month":
            date = nextMonth(currentPeriodStartDate);
            break;
        case "workWeek":
            date = getDateAfterWorkWeek(currentPeriodStartDate);
            break;
        case "agenda":
            date = nextAgendaStart(currentPeriodStartDate, agendaDuration)
    }
    return subMS(date)
};
var getNextPeriodStartDate = (currentPeriodEndDate, step) => {
    var date = addMS(currentPeriodEndDate);
    if ("workWeek" === step) {
        while (isWeekend(date)) {
            date = nextDay(date)
        }
    }
    return date
};
var getNextIntervalDate = (options, direction) => {
    var {
        date: date,
        step: step,
        intervalCount: intervalCount,
        agendaDuration: agendaDuration
    } = options;
    var dayDuration;
    switch (step) {
        case "day":
            dayDuration = 1 * intervalCount;
            break;
        case "week":
        case "workWeek":
            dayDuration = 7 * intervalCount;
            break;
        case "agenda":
            dayDuration = agendaDuration;
            break;
        case "month":
            return getNextMonthDate(date, intervalCount, direction)
    }
    return addDateInterval(date, {
        days: dayDuration
    }, direction)
};
var getNextMonthDate = (date, intervalCount, direction) => {
    var currentDate = date.getDate();
    var currentMonthFirstDate = new Date(new Date(date.getTime()).setDate(1));
    var thatMonthFirstDate = new Date(currentMonthFirstDate.setMonth(currentMonthFirstDate.getMonth() + intervalCount * direction));
    var thatMonthDuration = getLastMonthDay(thatMonthFirstDate);
    var minDate = currentDate < thatMonthDuration ? currentDate : thatMonthDuration;
    var currentMonthMinDate = new Date(new Date(date.getTime()).setDate(minDate));
    var thatMonthMinDate = new Date(currentMonthMinDate.setMonth(currentMonthMinDate.getMonth() + intervalCount * direction));
    return thatMonthMinDate
};
var getDateMonthFormatter = isShort => {
    var monthType = isShort ? "abbreviated" : "wide";
    var months = _localization_date__WEBPACK_IMPORTED_MODULE_4__.default.getMonthNames(monthType);
    return date => {
        var day = formatDate(date, "day");
        var month = months[date.getMonth()];
        return "".concat(day, " ").concat(month)
    }
};
var formatMonthYear = date => {
    var months = _localization_date__WEBPACK_IMPORTED_MODULE_4__.default.getMonthNames("abbreviated");
    var month = months[date.getMonth()];
    var year = formatDate(date, "year");
    return "".concat(month, " ").concat(year)
};
var getDateMonthYearFormatter = isShort => date => {
    var dateMonthFormat = getDateMonthFormatter(isShort);
    var dateMonth = dateMonthFormat(date);
    var year = formatDate(date, "year");
    return "".concat(dateMonth, " ").concat(year)
};
var getDifferentYearCaption = (startDate, endDate) => {
    var firstDateText = formatDate(startDate, getDateMonthYearFormatter(true));
    var lastDateDateText = formatDate(endDate, getDateMonthYearFormatter(true));
    return "".concat(firstDateText, "-").concat(lastDateDateText)
};
var getSameYearCaption = (startDate, endDate, isShort) => {
    var isDifferentMonthDates = startDate.getMonth() !== endDate.getMonth();
    var useShortFormat = isDifferentMonthDates || isShort;
    var firstDateFormat = isDifferentMonthDates ? getDateMonthFormatter(useShortFormat) : DAY_FORMAT;
    var firstDateText = formatDate(startDate, firstDateFormat);
    var lastDateText = formatDate(endDate, getDateMonthYearFormatter(useShortFormat));
    return "".concat(firstDateText, "-").concat(lastDateText)
};
var getSameDateCaption = (date, step, isShort) => {
    var useShortFormat = "agenda" === step ? isShort : false;
    var dateMonthFormat = getDateMonthFormatter(useShortFormat);
    var dateMonth = dateMonthFormat(date);
    var year = formatDate(date, "year");
    return "".concat(dateMonth, " ").concat(year)
};
var formatCaptionByMonths = (startDate, endDate, isShort) => {
    var isDifferentYears = startDate.getFullYear() !== endDate.getFullYear();
    if (isDifferentYears) {
        return getDifferentYearCaption(startDate, endDate)
    }
    return getSameYearCaption(startDate, endDate, isShort)
};
var formatMonthViewCaption = (startDate, endDate) => {
    if (_core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.sameMonth(startDate, endDate)) {
        return formatDate(startDate, "monthandyear")
    }
    var isSameYear = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.sameYear(startDate, endDate);
    var firstDateText = isSameYear ? _localization_date__WEBPACK_IMPORTED_MODULE_4__.default.getMonthNames("abbreviated")[startDate.getMonth()] : formatMonthYear(startDate);
    var lastDateText = formatMonthYear(endDate);
    return "".concat(firstDateText, "-").concat(lastDateText)
};
var getCaptionText = (startDate, endDate, isShort, step) => {
    if (_core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.sameDate(startDate, endDate)) {
        return getSameDateCaption(startDate, step, isShort)
    }
    if ("month" === step) {
        return formatMonthViewCaption(startDate, endDate)
    }
    return formatCaptionByMonths(startDate, endDate, isShort)
};
var getCaption = (options, isShort, customizationFunction) => {
    var {
        startDate: startDate,
        endDate: endDate
    } = getInterval(options);
    var text = getCaptionText(startDate, endDate, isShort, options.step);
    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isFunction)(customizationFunction)) {
        text = customizationFunction({
            startDate: startDate,
            endDate: endDate,
            text: text
        })
    }
    return {
        startDate: startDate,
        endDate: endDate,
        text: text
    }
};
var STEP_MAP = {
    day: "day",
    week: "week",
    workWeek: "workWeek",
    month: "month",
    timelineDay: "day",
    timelineWeek: "week",
    timelineWorkWeek: "workWeek",
    timelineMonth: "month",
    agenda: "agenda"
};
var getStep = view => STEP_MAP[getViewType(view)];
var getViewType = view => {
    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isObject)(view) && view.type) {
        return view.type
    }
    return view
};
var getViewName = view => {
    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isObject)(view)) {
        return view.name ? view.name : view.type
    }
    return view
};
var getViewText = view => {
    if (view.name) {
        return view.name
    }
    var viewName = (0,_core_utils_inflector__WEBPACK_IMPORTED_MODULE_2__.camelize)(view.type || view, true);
    return _localization_message__WEBPACK_IMPORTED_MODULE_5__.default.format("dxScheduler-switcher".concat(viewName))
};
var isValidView = view => Object.values(_ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS).includes(view);
var validateViews = views => {
    views.forEach(view => {
        var viewType = getViewType(view);
        if (!isValidView(viewType)) {
            _core_errors__WEBPACK_IMPORTED_MODULE_0__.default.log("W0008", viewType)
        }
    })
};
var formatViews = views => {
    validateViews(views);
    return views.map(view => {
        var text = getViewText(view);
        var type = getViewType(view);
        var name = getViewName(view);
        return {
            text: text,
            name: name,
            view: {
                text: text,
                type: type,
                name: name
            }
        }
    })
};
var isOneView = (views, selectedView) => 1 === views.length && views[0].name === selectedView;


/***/ }),

/***/ 86721:
/*!************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/header/m_view_switcher.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getViewSwitcher": function() { return /* binding */ getViewSwitcher; },
/* harmony export */   "getDropDownViewSwitcher": function() { return /* binding */ getDropDownViewSwitcher; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _m_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./m_utils */ 79431);
/**
 * DevExtreme (esm/__internal/scheduler/header/m_view_switcher.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var VIEW_SWITCHER_CLASS = "dx-scheduler-view-switcher";
var VIEW_SWITCHER_DROP_DOWN_BUTTON_CLASS = "dx-scheduler-view-switcher-dropdown-button";
var VIEW_SWITCHER_DROP_DOWN_BUTTON_CONTENT_CLASS = "dx-scheduler-view-switcher-dropdown-button-content";
var getViewsAndSelectedView = header => {
    var views = (0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.formatViews)(header.views);
    var selectedView = (0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.getViewName)(header.currentView);
    var isSelectedViewInViews = views.some(view => view.name === selectedView);
    selectedView = isSelectedViewInViews ? selectedView : void 0;
    return {
        selectedView: selectedView,
        views: views
    }
};
var getViewSwitcher = (header, item) => {
    var {
        selectedView: selectedView,
        views: views
    } = getViewsAndSelectedView(header);
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
        widget: "dxButtonGroup",
        locateInMenu: "auto",
        cssClass: VIEW_SWITCHER_CLASS,
        options: {
            items: views,
            keyExpr: "name",
            selectedItemKeys: [selectedView],
            stylingMode: "contained",
            onItemClick: e => {
                var {
                    view: view
                } = e.itemData;
                header._updateCurrentView(view)
            },
            onContentReady: e => {
                var viewSwitcher = e.component;
                header._addEvent("currentView", view => {
                    viewSwitcher.option("selectedItemKeys", [(0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.getViewName)(view)])
                })
            }
        }
    }, item)
};
var getDropDownViewSwitcher = (header, item) => {
    var {
        selectedView: selectedView,
        views: views
    } = getViewsAndSelectedView(header);
    var oneView = (0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.isOneView)(views, selectedView);
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
        widget: "dxDropDownButton",
        locateInMenu: "never",
        cssClass: VIEW_SWITCHER_CLASS,
        options: {
            items: views,
            useSelectMode: true,
            keyExpr: "name",
            selectedItemKey: selectedView,
            displayExpr: "text",
            showArrowIcon: !oneView,
            elementAttr: {
                class: VIEW_SWITCHER_DROP_DOWN_BUTTON_CLASS
            },
            onItemClick: e => {
                var {
                    view: view
                } = e.itemData;
                header._updateCurrentView(view)
            },
            onContentReady: e => {
                var viewSwitcher = e.component;
                header._addEvent("currentView", view => {
                    var views = (0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.formatViews)(header.views);
                    if ((0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.isOneView)(views, view)) {
                        header.repaint()
                    }
                    viewSwitcher.option("selectedItemKey", (0,_m_utils__WEBPACK_IMPORTED_MODULE_1__.getViewName)(view))
                })
            },
            dropDownOptions: {
                onShowing: e => {
                    if (oneView) {
                        e.cancel = true
                    }
                },
                width: "max-content",
                _wrapperClassExternal: VIEW_SWITCHER_DROP_DOWN_BUTTON_CONTENT_CLASS
            }
        }
    }, item)
};


/***/ }),

/***/ 220:
/*!***************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/resources/m_agenda_resource_processor.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AgendaResourceProcessor": function() { return /* binding */ AgendaResourceProcessor; }
/* harmony export */ });
/* harmony import */ var _core_utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/array */ 36959);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/deferred */ 97233);
/* harmony import */ var _m_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./m_utils */ 48025);
/**
 * DevExtreme (esm/__internal/scheduler/resources/m_agenda_resource_processor.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class PromiseItem {
    constructor(rawAppointment, promise) {
        this.rawAppointment = rawAppointment;
        this.promise = promise
    }
}
class AgendaResourceProcessor {
    constructor() {
        var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
        this._resourceDeclarations = resourceDeclarations;
        this.isLoaded = false;
        this.isLoading = false;
        this.resourceMap = new Map;
        this.appointmentPromiseQueue = []
    }
    get resourceDeclarations() {
        return this._resourceDeclarations
    }
    set resourceDeclarations(value) {
        this._resourceDeclarations = value;
        this.isLoaded = false;
        this.isLoading = false;
        this.resourceMap.clear();
        this.appointmentPromiseQueue = []
    }
    _pushAllResources() {
        this.appointmentPromiseQueue.forEach(_ref => {
            var {
                promise: promise,
                rawAppointment: rawAppointment
            } = _ref;
            var result = [];
            this.resourceMap.forEach((resource, fieldName) => {
                var item = {
                    label: resource.label,
                    values: []
                };
                if (fieldName in rawAppointment) {
                    (0,_core_utils_array__WEBPACK_IMPORTED_MODULE_0__.wrapToArray)(rawAppointment[fieldName]).forEach(value => item.values.push(resource.map.get(value)))
                }
                if (item.values.length) {
                    result.push(item)
                }
            });
            promise.resolve(result)
        });
        this.appointmentPromiseQueue = []
    }
    _onPullResource(fieldName, valueName, displayName, label, items) {
        var map = new Map;
        items.forEach(item => map.set(item[valueName], item[displayName]));
        this.resourceMap.set(fieldName, {
            label: label,
            map: map
        })
    }
    _hasResourceDeclarations(resources) {
        if (0 === resources.length) {
            this.appointmentPromiseQueue.forEach(_ref2 => {
                var {
                    promise: promise
                } = _ref2;
                return promise.resolve([])
            });
            this.appointmentPromiseQueue = [];
            return false
        }
        return true
    }
    _tryPullResources(resources, resultAsync) {
        if (!this.isLoading) {
            this.isLoading = true;
            var promises = [];
            resources.forEach(resource => {
                var promise = (new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__.Deferred).done(items => this._onPullResource((0,_m_utils__WEBPACK_IMPORTED_MODULE_2__.getFieldExpr)(resource), (0,_m_utils__WEBPACK_IMPORTED_MODULE_2__.getValueExpr)(resource), (0,_m_utils__WEBPACK_IMPORTED_MODULE_2__.getDisplayExpr)(resource), resource.label, items));
                promises.push(promise);
                var dataSource = (0,_m_utils__WEBPACK_IMPORTED_MODULE_2__.getWrappedDataSource)(resource.dataSource);
                if (dataSource.isLoaded()) {
                    promise.resolve(dataSource.items())
                } else {
                    dataSource.load().done(list => promise.resolve(list)).fail(() => promise.reject())
                }
            });
            _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__.when.apply(null, promises).done(() => {
                this.isLoaded = true;
                this.isLoading = false;
                this._pushAllResources()
            }).fail(() => resultAsync.reject())
        }
    }
    initializeState() {
        var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
        this.resourceDeclarations = resourceDeclarations
    }
    createListAsync(rawAppointment) {
        var resultAsync = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__.Deferred;
        this.appointmentPromiseQueue.push(new PromiseItem(rawAppointment, resultAsync));
        if (this._hasResourceDeclarations(this.resourceDeclarations)) {
            if (this.isLoaded) {
                this._pushAllResources()
            } else {
                this._tryPullResources(this.resourceDeclarations, resultAsync)
            }
        }
        return resultAsync.promise()
    }
}


/***/ }),

/***/ 48025:
/*!*******************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/resources/m_utils.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getValueExpr": function() { return /* binding */ getValueExpr; },
/* harmony export */   "getDisplayExpr": function() { return /* binding */ getDisplayExpr; },
/* harmony export */   "getFieldExpr": function() { return /* binding */ getFieldExpr; },
/* harmony export */   "getWrappedDataSource": function() { return /* binding */ getWrappedDataSource; },
/* harmony export */   "createResourcesTree": function() { return /* binding */ createResourcesTree; },
/* harmony export */   "getPathToLeaf": function() { return /* binding */ getPathToLeaf; },
/* harmony export */   "getCellGroups": function() { return /* binding */ getCellGroups; },
/* harmony export */   "getGroupCount": function() { return /* binding */ getGroupCount; },
/* harmony export */   "getGroupsObjectFromGroupsArray": function() { return /* binding */ getGroupsObjectFromGroupsArray; },
/* harmony export */   "getAllGroups": function() { return /* binding */ getAllGroups; },
/* harmony export */   "getResourceByField": function() { return /* binding */ getResourceByField; },
/* harmony export */   "createResourceEditorModel": function() { return /* binding */ createResourceEditorModel; },
/* harmony export */   "isResourceMultiple": function() { return /* binding */ isResourceMultiple; },
/* harmony export */   "filterResources": function() { return /* binding */ filterResources; },
/* harmony export */   "getPaintedResources": function() { return /* binding */ getPaintedResources; },
/* harmony export */   "getOrLoadResourceItem": function() { return /* binding */ getOrLoadResourceItem; },
/* harmony export */   "getDataAccessors": function() { return /* binding */ getDataAccessors; },
/* harmony export */   "groupAppointmentsByResources": function() { return /* binding */ groupAppointmentsByResources; },
/* harmony export */   "groupAppointmentsByResourcesCore": function() { return /* binding */ groupAppointmentsByResourcesCore; },
/* harmony export */   "getResourceTreeLeaves": function() { return /* binding */ getResourceTreeLeaves; },
/* harmony export */   "createReducedResourcesTree": function() { return /* binding */ createReducedResourcesTree; },
/* harmony export */   "reduceResourcesTree": function() { return /* binding */ reduceResourcesTree; },
/* harmony export */   "getResourcesDataByGroups": function() { return /* binding */ getResourcesDataByGroups; },
/* harmony export */   "setResourceToAppointment": function() { return /* binding */ setResourceToAppointment; },
/* harmony export */   "getResourceColor": function() { return /* binding */ getResourceColor; },
/* harmony export */   "getAppointmentColor": function() { return /* binding */ getAppointmentColor; },
/* harmony export */   "createExpressions": function() { return /* binding */ createExpressions; },
/* harmony export */   "loadResources": function() { return /* binding */ loadResources; },
/* harmony export */   "getNormalizedResources": function() { return /* binding */ getNormalizedResources; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/array */ 36959);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/utils/common */ 37552);
/* harmony import */ var _core_utils_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/data */ 25670);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/utils/deferred */ 97233);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_object__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/utils/object */ 163);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/* harmony import */ var _data_data_source_data_source__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../data/data_source/data_source */ 56053);
/* harmony import */ var _data_data_source_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../data/data_source/utils */ 77382);
/* harmony import */ var _renovation_ui_scheduler_resources_hasResourceValue__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/resources/hasResourceValue */ 78993);
/**
 * DevExtreme (esm/__internal/scheduler/resources/m_utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */












var getValueExpr = resource => resource.valueExpr || "id";
var getDisplayExpr = resource => resource.displayExpr || "text";
var getFieldExpr = resource => resource.fieldExpr || resource.field;
var getWrappedDataSource = dataSource => {
    if (dataSource instanceof _data_data_source_data_source__WEBPACK_IMPORTED_MODULE_9__.DataSource) {
        return dataSource
    }
    var result = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, (0,_data_data_source_utils__WEBPACK_IMPORTED_MODULE_10__.normalizeDataSourceOptions)(dataSource)), {
        pageSize: 0
    });
    if (!Array.isArray(dataSource)) {
        result.filter = dataSource.filter
    }
    return new _data_data_source_data_source__WEBPACK_IMPORTED_MODULE_9__.DataSource(result)
};
var createResourcesTree = groups => {
    var leafIndex = 0;
    var make = (group, groupIndex, result, parent) => {
        var _a;
        result = result || [];
        for (var itemIndex = 0; itemIndex < group.items.length; itemIndex++) {
            var currentGroupItem = group.items[itemIndex];
            var resultItem = {
                name: group.name,
                value: currentGroupItem.id,
                title: currentGroupItem.text,
                data: null === (_a = group.data) || void 0 === _a ? void 0 : _a[itemIndex],
                children: [],
                parent: parent || null
            };
            var nextGroupIndex = groupIndex + 1;
            if (groups[nextGroupIndex]) {
                make(groups[nextGroupIndex], nextGroupIndex, resultItem.children, resultItem)
            }
            if (!resultItem.children.length) {
                resultItem.leafIndex = leafIndex;
                leafIndex++
            }
            result.push(resultItem)
        }
        return result
    };
    return make(groups[0], 0)
};
var getPathToLeaf = (leafIndex, groups) => {
    var tree = createResourcesTree(groups);
    var findLeafByIndex = (data, index) => {
        for (var i = 0; i < data.length; i++) {
            if (data[i].leafIndex === index) {
                return data[i]
            }
            var _leaf = findLeafByIndex(data[i].children, index);
            if (_leaf) {
                return _leaf
            }
        }
    };
    var makeBranch = (leaf, result) => {
        result = result || [];
        result.push(leaf.value);
        if (leaf.parent) {
            makeBranch(leaf.parent, result)
        }
        return result
    };
    var leaf = findLeafByIndex(tree, leafIndex);
    return makeBranch(leaf).reverse()
};
var getCellGroups = (groupIndex, groups) => {
    var result = [];
    if (getGroupCount(groups)) {
        if (groupIndex < 0) {
            return
        }
        var path = getPathToLeaf(groupIndex, groups);
        for (var i = 0; i < groups.length; i++) {
            result.push({
                name: groups[i].name,
                id: path[i]
            })
        }
    }
    return result
};
var getGroupCount = groups => {
    var result = 0;
    for (var i = 0, len = groups.length; i < len; i++) {
        if (!i) {
            result = groups[i].items.length
        } else {
            result *= groups[i].items.length
        }
    }
    return result
};
var getGroupsObjectFromGroupsArray = groupsArray => groupsArray.reduce((currentGroups, _ref) => {
    var {
        name: name,
        id: id
    } = _ref;
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, currentGroups), {
        [name]: id
    })
}, {});
var getAllGroups = groups => {
    var groupCount = getGroupCount(groups);
    return [...new Array(groupCount)].map((_, groupIndex) => {
        var groupsArray = getCellGroups(groupIndex, groups);
        return getGroupsObjectFromGroupsArray(groupsArray)
    })
};
var getResourceByField = (fieldName, loadedResources) => {
    for (var i = 0; i < loadedResources.length; i++) {
        var resource = loadedResources[i];
        if (resource.name === fieldName) {
            return resource.data
        }
    }
    return []
};
var createResourceEditorModel = (resources, loadedResources) => resources.map(resource => {
    var dataField = getFieldExpr(resource);
    var dataSource = getResourceByField(dataField, loadedResources);
    return {
        editorOptions: {
            dataSource: dataSource.length ? dataSource : getWrappedDataSource(resource.dataSource),
            displayExpr: getDisplayExpr(resource),
            valueExpr: getValueExpr(resource)
        },
        dataField: dataField,
        editorType: resource.allowMultiple ? "dxTagBox" : "dxSelectBox",
        label: {
            text: resource.label || dataField
        }
    }
});
var isResourceMultiple = (resources, resourceField) => {
    var resource = resources.find(resource => {
        var field = getFieldExpr(resource);
        return field === resourceField
    });
    return !!(null === resource || void 0 === resource ? void 0 : resource.allowMultiple)
};
var filterResources = (resources, fields) => resources.filter(resource => {
    var field = getFieldExpr(resource);
    return fields.indexOf(field) > -1
});
var getPaintedResources = (resources, groups) => {
    var newGroups = groups || [];
    var result = resources.find(resource => resource.useColorAsDefault);
    if (result) {
        return result
    }
    var newResources = newGroups.length ? filterResources(resources, newGroups) : resources;
    return newResources[newResources.length - 1]
};
var getOrLoadResourceItem = (resources, resourceLoaderMap, field, value) => {
    var result = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred;
    resources.filter(resource => getFieldExpr(resource) === field && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isDefined)(resource.dataSource)).forEach(resource => {
        var wrappedDataSource = getWrappedDataSource(resource.dataSource);
        var valueExpr = getValueExpr(resource);
        if (!resourceLoaderMap.has(field)) {
            resourceLoaderMap.set(field, wrappedDataSource.load())
        }
        resourceLoaderMap.get(field).done(data => {
            var getter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(valueExpr);
            var filteredData = data.filter(resource => (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_2__.equalByValue)(getter(resource), value));
            result.resolve(filteredData[0])
        }).fail(() => {
            resourceLoaderMap.delete(field);
            result.reject()
        })
    });
    return result.promise()
};
var getDataAccessors = (dataAccessors, fieldName, type) => {
    var actions = dataAccessors[type];
    return actions[fieldName]
};
var groupAppointmentsByResources = function(config, appointments) {
    var groups = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
    var result = {
        0: appointments
    };
    if (groups.length && config.loadedResources.length) {
        result = groupAppointmentsByResourcesCore(config, appointments, config.loadedResources)
    }
    var totalResourceCount = 0;
    config.loadedResources.forEach((resource, index) => {
        if (!index) {
            totalResourceCount = resource.items.length
        } else {
            totalResourceCount *= resource.items.length
        }
    });
    for (var index = 0; index < totalResourceCount; index++) {
        var key = index.toString();
        if (result[key]) {
            continue
        }
        result[key] = []
    }
    return result
};
var groupAppointmentsByResourcesCore = (config, appointments, resources) => {
    var tree = createResourcesTree(resources);
    var result = {};
    appointments.forEach(appointment => {
        var treeLeaves = getResourceTreeLeaves((field, action) => getDataAccessors(config.dataAccessors, field, action), tree, appointment);
        for (var i = 0; i < treeLeaves.length; i++) {
            if (!result[treeLeaves[i]]) {
                result[treeLeaves[i]] = []
            }
            result[treeLeaves[i]].push((0,_core_utils_object__WEBPACK_IMPORTED_MODULE_7__.deepExtendArraySafe)({}, appointment, true))
        }
    });
    return result
};
var getResourceTreeLeaves = (getDataAccessors, tree, rawAppointment, result) => {
    result = result || [];
    for (var i = 0; i < tree.length; i++) {
        if (!hasGroupItem(getDataAccessors, rawAppointment, tree[i].name, tree[i].value)) {
            continue
        }
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isDefined)(tree[i].leafIndex)) {
            result.push(tree[i].leafIndex)
        }
        if (tree[i].children) {
            getResourceTreeLeaves(getDataAccessors, tree[i].children, rawAppointment, result)
        }
    }
    return result
};
var hasGroupItem = (getDataAccessors, rawAppointment, groupName, itemValue) => {
    var resourceValue = getDataAccessors(groupName, "getter")(rawAppointment);
    return (0,_renovation_ui_scheduler_resources_hasResourceValue__WEBPACK_IMPORTED_MODULE_11__.hasResourceValue)((0,_core_utils_array__WEBPACK_IMPORTED_MODULE_1__.wrapToArray)(resourceValue), itemValue)
};
var createReducedResourcesTree = (loadedResources, getDataAccessors, appointments) => {
    var tree = createResourcesTree(loadedResources);
    return reduceResourcesTree(getDataAccessors, tree, appointments)
};
var reduceResourcesTree = (getDataAccessors, tree, existingAppointments, _result) => {
    _result = _result ? _result.children : [];
    tree.forEach((node, index) => {
        var ok = false;
        var resourceName = node.name;
        var resourceValue = node.value;
        var resourceTitle = node.title;
        var resourceData = node.data;
        var resourceGetter = getDataAccessors(resourceName, "getter");
        existingAppointments.forEach(appointment => {
            if (!ok) {
                var resourceFromAppointment = resourceGetter(appointment);
                if (Array.isArray(resourceFromAppointment)) {
                    if (resourceFromAppointment.includes(resourceValue)) {
                        _result.push({
                            name: resourceName,
                            value: resourceValue,
                            title: resourceTitle,
                            data: resourceData,
                            children: []
                        });
                        ok = true
                    }
                } else if (resourceFromAppointment === resourceValue) {
                    _result.push({
                        name: resourceName,
                        value: resourceValue,
                        title: resourceTitle,
                        data: resourceData,
                        children: []
                    });
                    ok = true
                }
            }
        });
        if (ok && node.children && node.children.length) {
            reduceResourcesTree(getDataAccessors, node.children, existingAppointments, _result[index])
        }
    });
    return _result
};
var getResourcesDataByGroups = (loadedResources, resources, groups) => {
    if (!groups || !groups.length) {
        return loadedResources
    }
    var fieldNames = {};
    var currentResourcesData = [];
    groups.forEach(group => {
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(group, (name, value) => {
            fieldNames[name] = value
        })
    });
    var resourceData = loadedResources.filter(_ref2 => {
        var {
            name: name
        } = _ref2;
        return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isDefined)(fieldNames[name])
    });
    resourceData.forEach(data => currentResourcesData.push((0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)({}, data)));
    currentResourcesData.forEach(currentResource => {
        var {
            items: items,
            data: data,
            name: resourceName
        } = currentResource;
        var resource = filterResources(resources, [resourceName])[0] || {};
        var valueExpr = getValueExpr(resource);
        var filteredItems = [];
        var filteredData = [];
        groups.filter(group => (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isDefined)(group[resourceName])).forEach(group => {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(group, (name, value) => {
                if (!filteredItems.filter(item => item.id === value && item[valueExpr] === name).length) {
                    var currentItems = items.filter(item => item.id === value);
                    var currentData = data.filter(item => item[valueExpr] === value);
                    filteredItems.push(...currentItems);
                    filteredData.push(...currentData)
                }
            })
        });
        currentResource.items = filteredItems;
        currentResource.data = filteredData
    });
    return currentResourcesData
};
var setResourceToAppointment = (resources, dataAccessors, appointment, groups) => {
    var resourcesSetter = dataAccessors.setter;
    for (var name in groups) {
        var resourceData = groups[name];
        var value = isResourceMultiple(resources, name) ? (0,_core_utils_array__WEBPACK_IMPORTED_MODULE_1__.wrapToArray)(resourceData) : resourceData;
        resourcesSetter[name](appointment, value)
    }
};
var getResourceColor = (resources, resourceLoaderMap, field, value) => {
    var result = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred;
    var resource = filterResources(resources, [field])[0] || {};
    var colorExpr = resource.colorExpr || "color";
    var colorGetter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(colorExpr);
    getOrLoadResourceItem(resources, resourceLoaderMap, field, value).done(resource => result.resolve(colorGetter(resource))).fail(() => result.reject());
    return result.promise()
};
var getAppointmentColor = (resourceConfig, appointmentConfig) => {
    var {
        resources: resources,
        dataAccessors: dataAccessors,
        loadedResources: loadedResources,
        resourceLoaderMap: resourceLoaderMap
    } = resourceConfig;
    var {
        groupIndex: groupIndex,
        groups: groups,
        itemData: itemData
    } = appointmentConfig;
    var paintedResources = getPaintedResources(resources || [], groups);
    if (paintedResources) {
        var field = getFieldExpr(paintedResources);
        var cellGroups = getCellGroups(groupIndex, loadedResources);
        var resourcesDataAccessors = getDataAccessors(dataAccessors, field, "getter");
        var resourceValues = (0,_core_utils_array__WEBPACK_IMPORTED_MODULE_1__.wrapToArray)(resourcesDataAccessors(itemData));
        var groupId = resourceValues[0];
        for (var i = 0; i < cellGroups.length; i++) {
            if (cellGroups[i].name === field) {
                groupId = cellGroups[i].id;
                break
            }
        }
        return getResourceColor(resources, resourceLoaderMap, field, groupId)
    }
    return (new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred).resolve().promise()
};
var createExpressions = function() {
    var resources = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
    var result = {
        getter: {},
        setter: {}
    };
    resources.forEach(resource => {
        var field = getFieldExpr(resource);
        result.getter[field] = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(field);
        result.setter[field] = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileSetter)(field)
    });
    return result
};
var getTransformedResourceData = (resource, data) => {
    var valueGetter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(getValueExpr(resource));
    var displayGetter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(getDisplayExpr(resource));
    return data.map(item => {
        var result = {
            id: valueGetter(item),
            text: displayGetter(item)
        };
        if (item.color) {
            result.color = item.color
        }
        return result
    })
};
var loadResources = (groups, resources, resourceLoaderMap) => {
    var result = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred;
    var deferreds = [];
    var newGroups = groups || [];
    var newResources = resources || [];
    var loadedResources = [];
    filterResources(newResources, newGroups).forEach(resource => {
        var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred;
        var name = getFieldExpr(resource);
        deferreds.push(deferred);
        var dataSourcePromise = getWrappedDataSource(resource.dataSource).load();
        resourceLoaderMap.set(name, dataSourcePromise);
        dataSourcePromise.done(data => {
            var items = getTransformedResourceData(resource, data);
            deferred.resolve({
                name: name,
                items: items,
                data: data
            })
        }).fail(() => deferred.reject())
    });
    if (!deferreds.length) {
        return result.resolve(loadedResources)
    }
    _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.when.apply(null, deferreds).done((function() {
        for (var _len = arguments.length, resources = new Array(_len), _key = 0; _key < _len; _key++) {
            resources[_key] = arguments[_key]
        }
        var hasEmpty = resources.some(r => 0 === r.items.length);
        loadedResources = hasEmpty ? [] : resources;
        result.resolve(loadedResources)
    })).fail(() => result.reject());
    return result.promise()
};
var getNormalizedResources = (rawAppointment, dataAccessors, resources) => {
    var result = {};
    (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(dataAccessors.resources.getter, fieldName => {
        var value = dataAccessors.resources.getter[fieldName](rawAppointment);
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isDefined)(value)) {
            var isMultiple = isResourceMultiple(resources, fieldName);
            var resourceValue = isMultiple ? (0,_core_utils_array__WEBPACK_IMPORTED_MODULE_1__.wrapToArray)(value) : value;
            result[fieldName] = resourceValue
        }
    });
    return result
};


/***/ }),

/***/ 78514:
/*!**********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/timezones/m_utils_timezones_data.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/errors */ 31150);
/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/math */ 78148);
/* harmony import */ var _data_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../data/query */ 3398);
/* harmony import */ var _timezones_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./timezones_data */ 98522);
/**
 * DevExtreme (esm/__internal/scheduler/timezones/m_utils_timezones_data.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var getConvertedUntils = value => value.split("|").map(until => {
    if ("Infinity" === until) {
        return null
    }
    return 1e3 * parseInt(until, 36)
});
var parseTimezone = timeZoneConfig => {
    var {
        offsets: offsets
    } = timeZoneConfig;
    var {
        offsetIndices: offsetIndices
    } = timeZoneConfig;
    var {
        untils: untils
    } = timeZoneConfig;
    var offsetList = offsets.split("|").map(value => parseInt(value));
    var offsetIndexList = offsetIndices.split("").map(value => parseInt(value));
    var dateList = getConvertedUntils(untils).map((accumulator = 0, value => accumulator += value));
    var accumulator;
    return {
        offsetList: offsetList,
        offsetIndexList: offsetIndexList,
        dateList: dateList
    }
};
class TimeZoneCache {
    constructor() {
        this.map = new Map
    }
    tryGet(id) {
        if (!this.map.get(id)) {
            var config = timeZoneDataUtils.getTimezoneById(id);
            if (!config) {
                return false
            }
            var timeZoneInfo = parseTimezone(config);
            this.map.set(id, timeZoneInfo)
        }
        return this.map.get(id)
    }
}
var tzCache = new TimeZoneCache;
var timeZoneDataUtils = {
    _tzCache: tzCache,
    _timeZones: _timezones_data__WEBPACK_IMPORTED_MODULE_3__.default.zones,
    getDisplayedTimeZones(timestamp) {
        var timeZones = this._timeZones.map(timezone => {
            var timeZoneInfo = parseTimezone(timezone);
            var offset = this.getUtcOffset(timeZoneInfo, timestamp);
            var title = "(GMT ".concat(this.formatOffset(offset), ") ").concat(this.formatId(timezone.id));
            return {
                offset: offset,
                title: title,
                id: timezone.id
            }
        });
        return (0,_data_query__WEBPACK_IMPORTED_MODULE_2__.default)(timeZones).sortBy("offset").toArray()
    },
    formatOffset(offset) {
        var hours = Math.floor(offset);
        var minutesInDecimal = offset - hours;
        var signString = (0,_core_utils_math__WEBPACK_IMPORTED_MODULE_1__.sign)(offset) >= 0 ? "+" : "-";
        var hoursString = "0".concat(Math.abs(hours)).slice(-2);
        var minutesString = minutesInDecimal > 0 ? ":".concat(60 * minutesInDecimal) : ":00";
        return signString + hoursString + minutesString
    },
    formatId: id => id.split("/").join(" - ").split("_").join(" "),
    getTimezoneById(id) {
        if (!id) {
            return
        }
        var tzList = this._timeZones;
        for (var i = 0; i < tzList.length; i++) {
            var currentId = tzList[i].id;
            if (currentId === id) {
                return tzList[i]
            }
        }
        _core_errors__WEBPACK_IMPORTED_MODULE_0__.default.log("W0009", id);
        return
    },
    getTimeZoneOffsetById(id, timestamp) {
        var timeZoneInfo = tzCache.tryGet(id);
        return timeZoneInfo ? this.getUtcOffset(timeZoneInfo, timestamp) : void 0
    },
    getTimeZoneDeclarationTuple(id, year) {
        var timeZoneInfo = tzCache.tryGet(id);
        return timeZoneInfo ? this.getTimeZoneDeclarationTupleCore(timeZoneInfo, year) : []
    },
    getTimeZoneDeclarationTupleCore(timeZoneInfo, year) {
        var {
            offsetList: offsetList
        } = timeZoneInfo;
        var {
            offsetIndexList: offsetIndexList
        } = timeZoneInfo;
        var {
            dateList: dateList
        } = timeZoneInfo;
        var tupleResult = [];
        for (var i = 0; i < dateList.length; i++) {
            var currentDate = dateList[i];
            var currentYear = new Date(currentDate).getFullYear();
            if (currentYear === year) {
                var offset = offsetList[offsetIndexList[i + 1]];
                tupleResult.push({
                    date: currentDate,
                    offset: -offset / 60
                })
            }
            if (currentYear > year) {
                break
            }
        }
        return tupleResult
    },
    getUtcOffset(timeZoneInfo, dateTimeStamp) {
        var {
            offsetList: offsetList
        } = timeZoneInfo;
        var {
            offsetIndexList: offsetIndexList
        } = timeZoneInfo;
        var {
            dateList: dateList
        } = timeZoneInfo;
        var lastIntervalStartIndex = dateList.length - 1 - 1;
        var index = lastIntervalStartIndex;
        while (index >= 0 && dateTimeStamp < dateList[index]) {
            index--
        }
        var offset = offsetList[offsetIndexList[index + 1]];
        return -offset / 60 || offset
    }
};
/* harmony default export */ __webpack_exports__["default"] = (timeZoneDataUtils);


/***/ }),

/***/ 98522:
/*!**************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/timezones/timezones_data.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/**
 * DevExtreme (esm/__internal/scheduler/timezones/timezones_data.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
/* harmony default export */ __webpack_exports__["default"] = ({
    zones: [{
        id: "Africa/Abidjan",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Africa/Accra",
        untils: "-r507yk|1e3pak|681qo|cjvlc|681qo|cjvlc|681qo|cjvlc|681qo|clq9c|681qo|cjvlc|681qo|cjvlc|681qo|cjvlc|681qo|clq9c|681qo|cjvlc|681qo|cjvlc|681qo|cjvlc|681qo|clq9c|681qo|cjvlc|681qo|cjvlc|681qo|cjvlc|681qo|clq9c|681qo|cjvlc|681qo|cjvlc|681qo|cjvlc|681qo|clq9c|681qo|cjvlc|681qo|cjvlc|681qo|Infinity",
        offsets: "0.8667|0|-20",
        offsetIndices: "012121212121212121212121212121212121212121212121"
    }, {
        id: "Africa/Addis_Ababa",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Africa/Algiers",
        untils: "-uozn3l|2qx1nl|5luo0|8y800|a4tc0|7vc00|auqo0|7idc0|b7pc0|6sg00|cyo00|7ayo0|53c00|9idxc0|3i040|51mw0|253uk0|9o2k0|92040|8l3s0|jutc0|4uy840|3rdzw0|46xc00|7x6o0|2xco40|8n180|7x9g0|9d440|kiqg0|9d440|9q2s0|9cyk0|Infinity",
        offsets: "-9.35|0|-60|-120",
        offsetIndices: "0121212121212121232321212122321212"
    }, {
        id: "Africa/Asmara",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Africa/Asmera",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Africa/Bamako",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Africa/Bangui",
        untils: "-q9qbao|Infinity",
        offsets: "-13.6|-60",
        offsetIndices: "01"
    }, {
        id: "Africa/Banjul",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Africa/Bissau",
        untils: "-u9rek0|wvoyo0|Infinity",
        offsets: "62.3333|60|0",
        offsetIndices: "012"
    }, {
        id: "Africa/Blantyre",
        untils: "-yvtfd8|Infinity",
        offsets: "-130.3333|-120",
        offsetIndices: "01"
    }, {
        id: "Africa/Brazzaville",
        untils: "-q9qbao|Infinity",
        offsets: "-13.6|-60",
        offsetIndices: "01"
    }, {
        id: "Africa/Bujumbura",
        untils: "-yvtfd8|Infinity",
        offsets: "-130.3333|-120",
        offsetIndices: "01"
    }, {
        id: "Africa/Cairo",
        untils: "-fdls80|40d80|a31g0|7x3w0|a4w40|aqyk0|80ys0|b07w0|7tk40|b07w0|8jhg0|a8fw0|60go40|7el80|awo40|7v980|awqw0|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7tk40|ayd80|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|f9x80|3i040|eluk0|462s0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|b5rw0|7m5g0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|aqvs0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7k580|b5xg0|6u7w0|bvus0|6h980|c8tg0|64ak0|cyqs0|5anw0|1jms0|12t80|1w22s0|25p80|1sw40|2vmk0|Infinity",
        offsets: "-120|-180",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Africa/Casablanca",
        untils: "-tblt9g|di7nxg|3huk0|51k40|2znuk0|2dp9g0|776k0|8nt2s0|657w0|3ifxg0|3jp80|va040|4qak0|e1ms0|7pp80|cnms0|3afw0|2xi840|xqqk0|bp56s0|4qak0|e1ms0|45x80|d2g40|51ek0|c8tg0|64ak0|e1sc0|47uo0|1leo0|23xc0|asw00|3lmo0|1qyo0|40g00|7x6o0|4mo00|1stc0|4deo0|7x6o0|3ylc0|1stc0|51hc0|7x6o0|3lmo0|1stc0|5reo0|7k800|2vpc0|25s00|64dc0|7k800|2iqo0|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|25s00|g7c00|1stc0|g7c00|25s00|Infinity",
        offsets: "30.3333|0|-60",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "Africa/Ceuta",
        untils: "-qyiys0|7x3w0|2vt440|8sqs0|ssyk0|8n6s0|9px80|905g0|a2yo0|902o0|k69dc0|657w0|3ifxg0|3jp80|va040|4qak0|e1ms0|7pp80|cnms0|3afw0|2xi840|129us0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "010101010101010101010121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Africa/Conakry",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Africa/Dakar",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Africa/Dar_es_Salaam",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Africa/Djibouti",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Africa/Douala",
        untils: "-q9qbao|Infinity",
        offsets: "-13.6|-60",
        offsetIndices: "01"
    }, {
        id: "Africa/El_Aaiun",
        untils: "-isdxk0|m2g0c0|vek0|4qak0|e1ms0|7pp80|cnms0|3afw0|fke5g0|4qak0|e1ms0|45x80|d2g40|51ek0|c8tg0|64ak0|e1sc0|47uo0|1leo0|23xc0|asw00|3lmo0|1qyo0|40g00|7x6o0|4mo00|1stc0|4deo0|7x6o0|3ylc0|1stc0|51hc0|7x6o0|3lmo0|1stc0|5reo0|7k800|2vpc0|25s00|64dc0|7k800|2iqo0|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|25s00|g7c00|1stc0|g7c00|25s00|Infinity",
        offsets: "52.8|60|0|-60",
        offsetIndices: "012323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "Africa/Freetown",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Africa/Gaborone",
        untils: "-yvtfd8|Infinity",
        offsets: "-130.3333|-120",
        offsetIndices: "01"
    }, {
        id: "Africa/Harare",
        untils: "-yvtfd8|Infinity",
        offsets: "-130.3333|-120",
        offsetIndices: "01"
    }, {
        id: "Africa/Johannesburg",
        untils: "-yvtdi0|kn7o60|9cyk0|9d440|9cyk0|Infinity",
        offsets: "-90|-120|-180",
        offsetIndices: "012121"
    }, {
        id: "Africa/Juba",
        untils: "-kcrsis|kixuys|8l6k0|a4w40|8n180|a6qs0|8n180|a31g0|8ovw0|a16s0|8qqk0|9zc40|8sl80|9xhg0|8wak0|9ts40|8y580|a4w40|8n180|a31g0|8ovw0|a16s0|8sl80|9xhg0|8ufw0|9vms0|8wak0|9ts40|8y580|a4w40|8ovw0|a16s0|8qqk0|7frw40|Infinity",
        offsets: "-126.4667|-120|-180",
        offsetIndices: "01212121212121212121212121212121212"
    }, {
        id: "Africa/Kampala",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Africa/Khartoum",
        untils: "-kcrsow|kixv4w|8l6k0|a4w40|8n180|a6qs0|8n180|a31g0|8ovw0|a16s0|8qqk0|9zc40|8sl80|9xhg0|8wak0|9ts40|8y580|a4w40|8n180|a31g0|8ovw0|a16s0|8sl80|9xhg0|8ufw0|9vms0|8wak0|9ts40|8y580|a4w40|8ovw0|a16s0|8qqk0|7frw40|9ac180|Infinity",
        offsets: "-130.1333|-120|-180",
        offsetIndices: "012121212121212121212121212121212121"
    }, {
        id: "Africa/Kigali",
        untils: "-yvtfd8|Infinity",
        offsets: "-130.3333|-120",
        offsetIndices: "01"
    }, {
        id: "Africa/Kinshasa",
        untils: "-q9qbao|Infinity",
        offsets: "-13.6|-60",
        offsetIndices: "01"
    }, {
        id: "Africa/Lagos",
        untils: "-q9qbao|Infinity",
        offsets: "-13.6|-60",
        offsetIndices: "01"
    }, {
        id: "Africa/Libreville",
        untils: "-q9qbao|Infinity",
        offsets: "-13.6|-60",
        offsetIndices: "01"
    }, {
        id: "Africa/Lome",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Africa/Luanda",
        untils: "-q9qbao|Infinity",
        offsets: "-13.6|-60",
        offsetIndices: "01"
    }, {
        id: "Africa/Lubumbashi",
        untils: "-yvtfd8|Infinity",
        offsets: "-130.3333|-120",
        offsetIndices: "01"
    }, {
        id: "Africa/Lusaka",
        untils: "-yvtfd8|Infinity",
        offsets: "-130.3333|-120",
        offsetIndices: "01"
    }, {
        id: "Africa/Malabo",
        untils: "-q9qbao|Infinity",
        offsets: "-13.6|-60",
        offsetIndices: "01"
    }, {
        id: "Africa/Maputo",
        untils: "-yvtfd8|Infinity",
        offsets: "-130.3333|-120",
        offsetIndices: "01"
    }, {
        id: "Africa/Maseru",
        untils: "-yvtdi0|kn7o60|9cyk0|9d440|9cyk0|Infinity",
        offsets: "-90|-120|-180",
        offsetIndices: "012121"
    }, {
        id: "Africa/Mbabane",
        untils: "-yvtdi0|kn7o60|9cyk0|9d440|9cyk0|Infinity",
        offsets: "-90|-120|-180",
        offsetIndices: "012121"
    }, {
        id: "Africa/Mogadishu",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Africa/Monrovia",
        untils: "-qj6zc4|rl202a|Infinity",
        offsets: "43.1333|44.5|0",
        offsetIndices: "012"
    }, {
        id: "Africa/Nairobi",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Africa/Ndjamena",
        untils: "-u9rk4c|zdk5cc|7iak0|Infinity",
        offsets: "-60.2|-60|-120",
        offsetIndices: "0121"
    }, {
        id: "Africa/Niamey",
        untils: "-q9qbao|Infinity",
        offsets: "-13.6|-60",
        offsetIndices: "01"
    }, {
        id: "Africa/Nouakchott",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Africa/Ouagadougou",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Africa/Porto-Novo",
        untils: "-q9qbao|Infinity",
        offsets: "-13.6|-60",
        offsetIndices: "01"
    }, {
        id: "Africa/Sao_Tome",
        untils: "-u9rhc0|1jbm840|irxc0|Infinity",
        offsets: "36.75|0|-60",
        offsetIndices: "0121"
    }, {
        id: "Africa/Timbuktu",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Africa/Tripoli",
        untils: "-q3gfrw|gl6ajw|422c0|xado0|4bbo0|wrpg0|4s580|1kdpg0|c05bw0|4mqs0|9et80|9d440|9et80|9eys0|9et80|9mdg0|95jw0|9io40|9cyk0|99es0|9et80|9eys0|9et80|9d440|9et80|b2840|3cf3w0|9kis0|9et80|7vqyw0|75eo0|asw00|Infinity",
        offsets: "-52.7333|-60|-120",
        offsetIndices: "012121212121212121212121212122122"
    }, {
        id: "Africa/Tunis",
        untils: "-uozn3l|enxevl|b5uo0|53c00|u8w00|7x9g0|c8w80|7k800|z3w0|ew40|8bx80|9d440|9nx00|925o0|8l100|gi3440|7k800|b9k00|7vc00|51mw00|5ytc0|9d1c0|9d1c0|b9k00|7thc0|7m0tc0|7tk40|93us0|b5uo0|7k800|b5uo0|7x6o0|asw00|Infinity",
        offsets: "-9.35|-60|-120",
        offsetIndices: "0121212121212121212121212121212121"
    }, {
        id: "Africa/Windhoek",
        untils: "-yvtdi0|kn7o60|9cyk0|oj2nw0|235k00|8lho0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|Infinity",
        offsets: "-90|-120|-180|-60",
        offsetIndices: "01211313131313131313131313131313131313131313131313131"
    }, {
        id: "America/Adak",
        untils: "-ek1nw0|1tyug0|2e6s0|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l940|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "660|600|540",
        offsetIndices: "011001010101010101010101010101010111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Anchorage",
        untils: "-ek1qo0|1tyx80|2e400|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l940|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "600|540|480",
        offsetIndices: "011001010101010101010101010101010111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Anguilla",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Antigua",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Araguaina",
        untils: "-t85j2o|99k8mo|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|2yl440|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|51udg0|64ak0|Infinity",
        offsets: "192.8|180|120",
        offsetIndices: "0121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Argentina/Buenos_Aires",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvus0|6u7w0|bvus0|776k0|7qcg40|3yik0|b5xg0|7k580|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232323232323232"
    }, {
        id: "America/Argentina/Catamarca",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|5v42s0|z9g0|1u93w0|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232323132321232"
    }, {
        id: "America/Argentina/ComodRivadavia",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|5v42s0|z9g0|1u93w0|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232323132321232"
    }, {
        id: "America/Argentina/Cordoba",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|7qcg40|3yik0|b5xg0|7k580|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232323132323232"
    }, {
        id: "America/Argentina/Jujuy",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|c8w80|776k0|ag040|7k2g0|bvus0|776k0|7qcg40|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "012121212121212121212121212121212121212121232323121323232"
    }, {
        id: "America/Argentina/La_Rioja",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6qik0|3g880|8jbw0|6u7w0|bvus0|776k0|5v42s0|z9g0|1u93w0|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "012121212121212121212121212121212121212121232323231232321232"
    }, {
        id: "America/Argentina/Mendoza",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bktk0|71mk0|bqas0|73h80|bvus0|773s0|5unes0|6hes0|1p7mk0|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232312121321232"
    }, {
        id: "America/Argentina/Rio_Gallegos",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvus0|6u7w0|bvus0|776k0|5v42s0|z9g0|1u93w0|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232323232321232"
    }, {
        id: "America/Argentina/Salta",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|7qcg40|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "012121212121212121212121212121212121212121232323231323232"
    }, {
        id: "America/Argentina/San_Juan",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6qik0|3g880|8jbw0|6u7w0|bvus0|776k0|5v2840|2txg0|1sgak0|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "012121212121212121212121212121212121212121232323231232321232"
    }, {
        id: "America/Argentina/San_Luis",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|7pp80|b2aw0|71mk0|4qg40|6s8ik0|2txg0|1sgak0|14nw0|2gys0|b5xg0|7k580|b5xg0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "012121212121212121212121212121212121212121232323121212321212"
    }, {
        id: "America/Argentina/Tucuman",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|5v42s0|mas0|1um2k0|3yik0|b5xg0|7k580|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "0121212121212121212121212121212121212121212323232313232123232"
    }, {
        id: "America/Argentina/Ushuaia",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvus0|6u7w0|bvus0|776k0|5v0dg0|12ys0|1u93w0|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232323232321232"
    }, {
        id: "America/Aruba",
        untils: "-u7lckd|rlo7qd|Infinity",
        offsets: "275.7833|270|240",
        offsetIndices: "012"
    }, {
        id: "America/Asuncion",
        untils: "-jy93zk|ldwofk|s4vw0|s6w40|7tek0|b0dg0|7rjw0|b0dg0|7rjw0|b0dg0|9cyk0|9eys0|9et80|9eys0|9cyk0|9eys0|9cyk0|9eys0|9cyk0|9eys0|9et80|9eys0|9cyk0|9eys0|9cyk0|9eys0|9cyk0|9eys0|9et80|9eys0|9cyk0|ahus0|8a2k0|9eys0|9cyk0|9o840|7k580|b7s40|93p80|9gtg0|7nuk0|b42s0|7lzw0|b5xg0|7tek0|b9ms0|776k0|biw40|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|9cyk0|7kas0|b5rw0|7x9g0|ast80|a31g0|7k580|b5xg0|7k580|b5xg0|7k580|biw40|776k0|biw40|776k0|biw40|8zzw0|905g0|9px80|905g0|9px80|9d440|8n180|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|a31g0|8n180|a31g0|8n180|a31g0|Infinity",
        offsets: "230.6667|240|180",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "America/Atikokan",
        untils: "-qzov40|a2vw0|bfxjw0|pmdk0|1tz8c0|2dsw0|Infinity",
        offsets: "360|300",
        offsetIndices: "0101111"
    }, {
        id: "America/Atka",
        untils: "-ek1nw0|1tyug0|2e6s0|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l940|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "660|600|540",
        offsetIndices: "011001010101010101010101010101010111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Bahia_Banderas",
        untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|591h80|3ie2s0|axvpg0|dpgw40|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|asqg0|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
        offsets: "421|420|360|480|300",
        offsetIndices: "0121212131212121212121212121212121212142424242424242424242424242424242424242424242424242424242"
    }, {
        id: "America/Bahia",
        untils: "-t85kv8|99kaf8|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|cyqs0|64ak0|cls40|5rbw0|dbpg0|51ek0|dbpg0|6h980|c8tg0|6h980|c8tg0|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|4irc40|6u7w0|Infinity",
        offsets: "154.0667|180|120",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Barbados",
        untils: "-o0aiaj|46b400|npv1mj|5rbw0|a31g0|8n180|a31g0|8n180|ag040|84ik0|Infinity",
        offsets: "238.4833|240|180",
        offsetIndices: "00121212121"
    }, {
        id: "America/Belem",
        untils: "-t85j0s|99k8ks|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|Infinity",
        offsets: "193.9333|180|120",
        offsetIndices: "012121212121212121212121212121"
    }, {
        id: "America/Belize",
        untils: "-u52ic0|3edkc0|6ham0|c8s20|6u9a0|bvte0|6u9a0|bvte0|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|bvte0|6u9a0|bvte0|6u9a0|bvte0|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|bvte0|6u9a0|bvte0|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|bvte0|6u9a0|bvte0|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|bvte0|6u9a0|g2t2q0|3e580|4mcys0|2vmk0|Infinity",
        offsets: "352.8|360|330|300",
        offsetIndices: "01212121212121212121212121212121212121212121212121213131"
    }, {
        id: "America/Blanc-Sablon",
        untils: "-qzp0o0|a2vw0|c5jxg0|1tzdw0|2dnc0|Infinity",
        offsets: "240|180",
        offsetIndices: "010110"
    }, {
        id: "America/Boa_Vista",
        untils: "-t85grk|99k93k|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|62xk40|7k580|biw40|cvw0|Infinity",
        offsets: "242.6667|240|180",
        offsetIndices: "0121212121212121212121212121212121"
    }, {
        id: "America/Bogota",
        untils: "-srdoy8|14f1hi8|ha580|Infinity",
        offsets: "296.2667|300|240",
        offsetIndices: "0121"
    }, {
        id: "America/Boise",
        untils: "-r0emw0|ast80|7x9g0|ast80|1um840|9s7jw0|1tz5k0|2dvo0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|51k40|doik0|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "480|420|360",
        offsetIndices: "0101012212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Buenos_Aires",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvus0|6u7w0|bvus0|776k0|7qcg40|3yik0|b5xg0|7k580|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232323232323232"
    }, {
        id: "America/Cambridge_Bay",
        untils: "-q3gdc0|bjeec0|1tz5k0|2dvo0|a7n3w0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x6o0|ast80|ct40|7kj40|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "0|420|360|300",
        offsetIndices: "0122131212121212121212121212121212121212121212233221212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Campo_Grande",
        untils: "-t85hvw|99ka7w|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|cyqs0|64ak0|cls40|5rbw0|dbpg0|51ek0|dbpg0|6h980|c8tg0|6h980|c8tg0|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|cls40|64ak0|dfes0|5nmk0|c8tg0|6h980|dbpg0|5rbw0|bvus0|6h980|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6u7w0|c8tg0|64ak0|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|dbpg0|5ed80|Infinity",
        offsets: "218.4667|240|180",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Cancun",
        untils: "-p1u7c0|vauo00|7ggw40|afuk0|8a840|afuk0|8a840|64ak0|4bms0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|51k40|Infinity",
        offsets: "347.0667|360|300|240",
        offsetIndices: "0123232321212121212121212121212121212121212"
    }, {
        id: "America/Caracas",
        untils: "-u7lcxw|rlo83w|meoxm0|4dps00|Infinity",
        offsets: "267.6667|270|240",
        offsetIndices: "01212"
    }, {
        id: "America/Catamarca",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|5v42s0|z9g0|1u93w0|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232323132321232"
    }, {
        id: "America/Cayenne",
        untils: "-uj7yb4|tcw6r4|Infinity",
        offsets: "209.3333|240|180",
        offsetIndices: "012"
    }, {
        id: "America/Cayman",
        untils: "-w757vc|Infinity",
        offsets: "319.6|300",
        offsetIndices: "01"
    }, {
        id: "America/Chicago",
        untils: "-r0esg0|ast80|7x9g0|ast80|bvus0|776k0|7kas0|b5rw0|9d440|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|7x9g0|dbjw0|8a840|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300",
        offsetIndices: "01010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Chihuahua",
        untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|xes2s0|afuk0|8a840|afuk0|8aaw0|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
        offsets: "424.3333|420|360|300",
        offsetIndices: "0121212323221212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Coral_Harbour",
        untils: "-qzov40|a2vw0|bfxjw0|pmdk0|1tz8c0|2dsw0|Infinity",
        offsets: "360|300",
        offsetIndices: "0101111"
    }, {
        id: "America/Cordoba",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|7qcg40|3yik0|b5xg0|7k580|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232323132323232"
    }, {
        id: "America/Costa_Rica",
        untils: "-pjw8fn|ubtl3n|51ek0|doo40|51ek0|5jso40|8drw0|acas0|2xh80|Infinity",
        offsets: "336.2167|360|300",
        offsetIndices: "0121212121"
    }, {
        id: "America/Creston",
        untils: "-rshz80|vbus0|Infinity",
        offsets: "420|480",
        offsetIndices: "010"
    }, {
        id: "America/Cuiaba",
        untils: "-t85hm4|99k9y4|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|cyqs0|64ak0|cls40|5rbw0|dbpg0|51ek0|dbpg0|6h980|c8tg0|6h980|c8tg0|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|w5hg0|5nmk0|c8tg0|6h980|dbpg0|5rbw0|bvus0|6h980|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6u7w0|c8tg0|64ak0|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|dbpg0|5ed80|Infinity",
        offsets: "224.3333|240|180",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Curacao",
        untils: "-u7lckd|rlo7qd|Infinity",
        offsets: "275.7833|270|240",
        offsetIndices: "012"
    }, {
        id: "America/Danmarkshavn",
        untils: "-rvusjk|x8nx3k|8zrk0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|53hk0|Infinity",
        offsets: "74.6667|180|120|0",
        offsetIndices: "01212121212121212121212121212121213"
    }, {
        id: "America/Dawson_Creek",
        untils: "-qzopk0|a2vw0|c5jxg0|1tz2s0|2dyg0|tj1g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|69uk0|Infinity",
        offsets: "480|420",
        offsetIndices: "0101101010101010101010101010101010101010101010101010101011"
    }, {
        id: "America/Dawson",
        untils: "-qzoms0|a2vw0|asys0|882c0|bmiwc0|1tz000|2e180|a7n3w0|9q000|465k00|3e2is0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|Infinity",
        offsets: "540|480|420",
        offsetIndices: "01010110201212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "America/Denver",
        untils: "-r0epo0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|2vmk0|ataw40|1tz5k0|2dvo0|a7n9g0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "420|360",
        offsetIndices: "01010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Detroit",
        untils: "-xx8dyd|5eraud|dyeyk0|1tzb40|2dq40|1c9440|7x3w0|9rlbxo|71s2c|9d440|9cyk0|2cmdg0|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "332.1833|360|300|240",
        offsetIndices: "0123323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "America/Dominica",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Edmonton",
        untils: "-x1yazk|629ink|a2vw0|8n6s0|29ek0|h6lg0|9px80|905g0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|9l0g40|1tz5k0|2dvo0|tj1g0|7x3w0|ctzk40|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "453.8667|420|360",
        offsetIndices: "0121212121212122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Eirunepe",
        untils: "-t85f28|99ka68|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|2yy2s0|6h980|7hg2s0|2t2t80|Infinity",
        offsets: "279.4667|300|240",
        offsetIndices: "0121212121212121212121212121212121"
    }, {
        id: "America/El_Salvador",
        untils: "-pkm4tc|ymao5c|7k580|b5xg0|7k580|Infinity",
        offsets: "356.8|360|300",
        offsetIndices: "012121"
    }, {
        id: "America/Ensenada",
        untils: "-p1u1s0|11jrw0|1sns00|1sgdc0|71s40|9cyk0|5iidg0|1q6700|4lfk0|190g40|eluk0|2r4o80|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|84qys0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "468.0667|420|480",
        offsetIndices: "012121211212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "America/Fort_Nelson",
        untils: "-qzopk0|a2vw0|c5jxg0|1tz2s0|2dyg0|tj1g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|Infinity",
        offsets: "480|420",
        offsetIndices: "01011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "America/Fort_Wayne",
        untils: "-r0esg0|ast80|7x9g0|ast80|baw840|51ek0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|19q7w0|asys0|5qonw0|9cyk0|9d440|9cyk0|ihslg0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "010101011010101010101010101010121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Fortaleza",
        untils: "-t85kvc|99kafc|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|514g40|7k580|biw40|puk0|id6s0|6h980|Infinity",
        offsets: "154|180|120",
        offsetIndices: "0121212121212121212121212121212121212121"
    }, {
        id: "America/Glace_Bay",
        untils: "-z94kwc|89fk8c|a2vw0|c5jxg0|1tzdw0|2dnc0|3y8g40|7x3w0|9pa5g0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "239.8|240|180",
        offsetIndices: "012122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Godthab",
        untils: "-rvumf4|x8nqz4|8zrk0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "206.9333|180|120",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Goose_Bay",
        untils: "-qzp20k|a2vw0|8kjbw0|kzjyk|7k580|b5xg0|7k580|b5xg0|7k580|biw40|776k0|biw40|7k580|b5xg0|7k580|b5xg0|1pb260|2dly0|biw40|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|biw40|7k580|ag040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|6y2s0|22420|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a2lo|afuk0|8a840|asqg0|7xc80|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8tec|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "210.8667|150.8667|210|150|240|180|120",
        offsetIndices: "010232323232323233232323232323232323232323232323232323232324545454545454545454545454545454545454545454546454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454"
    }, {
        id: "America/Grand_Turk",
        untils: "-u85og2|z3brw2|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|18ais0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "307.1667|300|240",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121222121212121212121212121212121212121212121"
    }, {
        id: "America/Grenada",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Guadeloupe",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Guatemala",
        untils: "-qqqskk|ss0akk|4ofw0|4tidg0|6djw0|3wwas0|8n180|7n5ms0|7x3w0|Infinity",
        offsets: "362.0667|360|300",
        offsetIndices: "0121212121"
    }, {
        id: "America/Guayaquil",
        untils: "-kcr84o|wb620o|3jp80|Infinity",
        offsets: "314|300|240",
        offsetIndices: "0121"
    }, {
        id: "America/Guyana",
        untils: "-smcak8|vj4sz8|81rf90|Infinity",
        offsets: "232.6667|225|180|240",
        offsetIndices: "0123"
    }, {
        id: "America/Halifax",
        untils: "-z94k80|777go0|9et80|st9o0|a2vw0|ssyk0|5rbw0|cv1g0|69uk0|c6ys0|6kyk0|ci2s0|67zw0|ci2s0|6w2k0|bu040|7lzw0|bu040|66580|bu040|7lzw0|bu040|64ak0|cls40|5v180|cv1g0|6j3w0|c6ys0|79180|b42s0|7lzw0|b42s0|7yyk0|bu040|64ak0|dbpg0|66580|cls40|5ed80|bu040|7lzw0|b42s0|7lzw0|cjxg0|66580|bh1g0|7lzw0|b42s0|7lzw0|6uj00|1tzdw0|2dnc0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|tw040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|tw040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|1cm2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "254.4|240|180",
        offsetIndices: "0121212121212121212121212121212121212121212121212122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Havana",
        untils: "-n7762o|1icfyo|69uk0|62s040|4ofw0|e1ms0|51ek0|e1ms0|4ofw0|1fhs40|4ofw0|e1ms0|4ofw0|9s9k40|67zw0|cedg0|6h980|9o840|7yyk0|b5xg0|7k580|bvus0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|8a2k0|ag040|8bx80|ae5g0|8drw0|acas0|9cyk0|9d440|9px80|905g0|9px80|9q2s0|7x3w0|8a840|ast80|7x9g0|ast80|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|8a2k0|ag040|8a2k0|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|905g0|a2vw0|905g0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|8n400|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|7x6o0|1cm000|6uao0|bvs00|779c0|bitc0|6uao0|bvs00|779c0|bvs00|779c0|c8qo0|779c0|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|Infinity",
        offsets: "329.6|300|240",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Hermosillo",
        untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|591h80|3ie2s0|axvpg0|dpgw40|afuk0|8a840|afuk0|8a840|afuk0|Infinity",
        offsets: "443.8667|420|360|480",
        offsetIndices: "0121212131212121"
    }, {
        id: "America/Indiana/Indianapolis",
        untils: "-r0esg0|ast80|7x9g0|ast80|baw840|51ek0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|19q7w0|asys0|5qonw0|9cyk0|9d440|9cyk0|ihslg0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "010101011010101010101010101010121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Indiana/Knox",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|tj1g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|7x3w0|asys0|7x3w0|asys0|9cyk0|9d440|9px80|9d440|9cyk0|9d440|s3180|1twas0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|7j5400|asw00|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300",
        offsetIndices: "0101011010101010101010101010101010101010101010101010101010101010101010101010101010101010111010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Indiana/Marengo",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|2wsas0|7x3w0|1c9440|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|465h80|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4g00|64dc0|clmk0|fvt9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "0101011010101010101010101212121212111212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Indiana/Petersburg",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|501ek0|7kas0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|sfzw0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|eu02o0|asw00|6udg0|c8nw0|6hc00|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "01010110101010101010101010101010101010101010101010111011212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Indiana/Tell_City",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|501ek0|7kas0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|1tw580|9d440|9cyk0|9d440|9cvs0|9d440|9cyk0|ihslg0|asw00|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "01010110101010101010101010101021211010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Indiana/Vevay",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|4gyis0|7txx80|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|hfzhg0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "010101101212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Indiana/Vincennes",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|asys0|7x3w0|3fidg0|7x3w0|asys0|7x3w0|b5rw0|7kas0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|7k580|b5xg0|9cyk0|9d440|9cyk0|9d440|2lz980|9cyk0|9d440|9cyk0|ihslg0|asw00|6udg0|c8nw0|6hc00|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "01010110101010101010101010101010121211011212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Indiana/Winamac",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|465h80|9cyk0|9d440|9cyk0|ihslg0|asw00|6udg0|c8l40|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "01010110101010101010101010101010101010121211021212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Indianapolis",
        untils: "-r0esg0|ast80|7x9g0|ast80|baw840|51ek0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|19q7w0|asys0|5qonw0|9cyk0|9d440|9cyk0|ihslg0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "010101011010101010101010101010121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Inuvik",
        untils: "-8ve5c0|6fce80|9q000|71i2w0|ipzw0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "0|480|360|420",
        offsetIndices: "0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "America/Iqaluit",
        untils: "-eb6ao0|1l3h80|2dq40|a7n3w0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7xc80|ast80|7x6o0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "0|240|300|180|360",
        offsetIndices: "01123212121212121212121212121212121212121212142212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "America/Jamaica",
        untils: "-u85og2|wbl182|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|Infinity",
        offsets: "307.1667|300|240",
        offsetIndices: "0121212121212121212121"
    }, {
        id: "America/Jujuy",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|c8w80|776k0|ag040|7k2g0|bvus0|776k0|7qcg40|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "012121212121212121212121212121212121212121232323121323232"
    }, {
        id: "America/Juneau",
        untils: "-ek1w80|1tz2s0|2dyg0|cawis0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9d1c0|9d1c0|9cyk0|9d440|9px80|905g0|9px80|1leo0|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "480|420|540",
        offsetIndices: "01101010101010101010101010001010122020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202"
    }, {
        id: "America/Kentucky/Louisville",
        untils: "-r0esg0|ast80|7x9g0|ast80|sg5g0|6bp80|a98o40|7x3w0|6w840|1tz8c0|2dsw0|ast9o|1sw2c|21gis0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|4bh80|3j3xc0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4g00|64dc0|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "0101010101101010101010101010101010101121212121212111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Kentucky/Monticello",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|bs6g40|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x6o0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "0101011010101010101010101010101010101010101010101010101010101010101010101121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Knox_IN",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|tj1g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|7x3w0|asys0|7x3w0|asys0|9cyk0|9d440|9px80|9d440|9cyk0|9d440|s3180|1twas0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|7j5400|asw00|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300",
        offsetIndices: "0101011010101010101010101010101010101010101010101010101010101010101010101010101010101010111010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Kralendijk",
        untils: "-u7lckd|rlo7qd|Infinity",
        offsets: "275.7833|270|240",
        offsetIndices: "012"
    }, {
        id: "America/La_Paz",
        untils: "-jxzspo|84ik0|Infinity",
        offsets: "272.6|212.6|240",
        offsetIndices: "012"
    }, {
        id: "America/Lima",
        untils: "-w25lpo|fcxjlo|4ml80|93us0|9cyk0|9d440|9cyk0|nw16s0|4ml80|e5c40|4ml80|1fr1g0|4ml80|1yiys0|4ml80|Infinity",
        offsets: "308.6|300|240",
        offsetIndices: "0121212121212121"
    }, {
        id: "America/Los_Angeles",
        untils: "-r0emw0|ast80|7x9g0|ast80|bmtus0|1tz2s0|2dyg0|1a3c5o|f2iic|owao0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "480|420",
        offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Louisville",
        untils: "-r0esg0|ast80|7x9g0|ast80|sg5g0|6bp80|a98o40|7x3w0|6w840|1tz8c0|2dsw0|ast9o|1sw2c|21gis0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|4bh80|3j3xc0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4g00|64dc0|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "0101010101101010101010101010101010101121212121212111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Lower_Princes",
        untils: "-u7lckd|rlo7qd|Infinity",
        offsets: "275.7833|270|240",
        offsetIndices: "012"
    }, {
        id: "America/Maceio",
        untils: "-t85ldw|99kaxw|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|2yl440|64ak0|1wf1g0|7k580|biw40|puk0|id6s0|6h980|Infinity",
        offsets: "142.8667|180|120",
        offsetIndices: "012121212121212121212121212121212121212121"
    }, {
        id: "America/Managua",
        untils: "-ijh6oo|ka1i0o|xqqk0|24p6s0|53980|dmtg0|53980|60itw0|dq240|53es0|235h80|4beis0|8zzw0|at4c0|7x140|Infinity",
        offsets: "345.2|360|300",
        offsetIndices: "0121212121212121"
    }, {
        id: "America/Manaus",
        untils: "-t85gvw|99k97w|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|2yy2s0|6h980|Infinity",
        offsets: "240.0667|240|180",
        offsetIndices: "01212121212121212121212121212121"
    }, {
        id: "America/Marigot",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Martinique",
        untils: "-umcvcs|zz5x4s|8zzw0|Infinity",
        offsets: "244.3333|240|180",
        offsetIndices: "0121"
    }, {
        id: "America/Matamoros",
        untils: "-p1u7c0|ykt480|ast80|3vppg0|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "400|360|300",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Mazatlan",
        untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|591h80|3ie2s0|axvpg0|dpgw40|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
        offsets: "425.6667|420|360|480",
        offsetIndices: "0121212131212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Mendoza",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bktk0|71mk0|bqas0|73h80|bvus0|773s0|5unes0|6hes0|1p7mk0|3yik0|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232312121321232"
    }, {
        id: "America/Menominee",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|asys0|7x3w0|a7n9g0|9px80|1at9g0|2396k0|9d1c0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300",
        offsetIndices: "01010110101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Merida",
        untils: "-p1u7c0|vauo00|hoyk0|6ys0c0|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
        offsets: "358.4667|360|300",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Metlakatla",
        untils: "-ek1w80|1tz2s0|2dyg0|cawis0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|gpc840|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|3ylc0|2itg0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "480|420|540",
        offsetIndices: "01101010101010101010101010101010102020200202020202020202020202020202020202020202"
    }, {
        id: "America/Mexico_City",
        untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|3knek0|776k0|rf440|5t6k0|1evk40|71mk0|30p1g0|8n180|nufxo0|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
        offsets: "396.6|420|360|300",
        offsetIndices: "012121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "America/Miquelon",
        untils: "-ulmyxk|zzqbdk|3m59g0|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "224.6667|240|180|120",
        offsetIndices: "012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "America/Moncton",
        untils: "-z94i40|89fhg0|a2vw0|7mqqo0|4ofw0|e1ms0|4ofw0|e1ms0|4ofw0|e1ms0|4ofw0|e1ms0|4ofw0|e1ms0|4ofw0|dmtg0|64ak0|cao40|6fek0|bkqs0|7iak0|6y5k0|1tzdw0|2dnc0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|s36s0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a2lo|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6uiyc|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "300|240|180",
        offsetIndices: "012121212121212121212122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Monterrey",
        untils: "-p1u7c0|ykt480|ast80|3vppg0|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
        offsets: "401.2667|360|300",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Montevideo",
        untils: "-w4mll9|67elc0|1s74p9|9et80|9exe0|9czy0|9exe0|9czy0|3ydyq0|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|7x5a0|b5w20|7k6m0|b5w20|7k6m0|9q1e0|9czy0|asxe0|7x5a0|6do20|ppvy0|4mmm0|8g9qq0|901a0|38pe0|2inw0|2nf9g0|8zzw0|1e3s40|9o3y0|q8he0|2kik0|yxhg0|4bh80|s36s0|2vl60|905g0|5rg20|51ek0|weqs0|3yik0|e1ms0|4ofw0|erk40|3yik0|2vs40|gk7w0|41iys0|3wnw0|erk40|4bh80|c8tg0|64ak0|c8tg0|6u7w0|c8tg0|6h980|bvus0|6u7w0|614qs0|9q2s0|a31g0|7x3w0|ag040|8a2k0|asys0|7x3w0|asys0|7x3w0|asys0|8a2k0|ag040|8a2k0|ag040|8a2k0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
        offsets: "224.85|240|180|210|150|120|90",
        offsetIndices: "001232323232323232323232324242525242525264252525252525252525252525252525252525252525252"
    }, {
        id: "America/Montreal",
        untils: "-qzoxw0|a2vw0|7yx60|aqzy0|9q8c0|7jzo0|bw0c0|6bp80|cedg0|6h980|c8tg0|6h980|bvus0|776k0|biw40|776k0|biw40|776k0|biw40|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|xjeo0|1tzb40|2dq40|asys0|7x3w0|ast80|7x3w0|asys0|7x3w0|asys0|b5rw0|7xf00|ast80|7x9g0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "300|240",
        offsetIndices: "01010101010101010101010101010101010101010101011101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Montserrat",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Nassau",
        untils: "-u6m4c6|r7u7s6|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "309.5|300|240",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/New_York",
        untils: "-r0ev80|ast80|7x9g0|ast80|7x9g0|b5rw0|905g0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|6w840|1tzb40|2dq40|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "300|240",
        offsetIndices: "01010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Nipigon",
        untils: "-qzoxw0|a2vw0|bfxjw0|pmdk0|1tzb40|2dq40|ewvus0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "300|240",
        offsetIndices: "010111010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Nome",
        untils: "-ek1nw0|1tyug0|2e6s0|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l6c0|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "660|600|540|480",
        offsetIndices: "011001010101010101010101010101010122323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "America/Noronha",
        untils: "-t85lzw|99k8rw|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|514g40|7k580|biw40|cvw0|iq5g0|6h980|Infinity",
        offsets: "129.6667|120|60",
        offsetIndices: "0121212121212121212121212121212121212121"
    }, {
        id: "America/North_Dakota/Beulah",
        untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|1tz5k0|2dvo0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hc00|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "420|360|300",
        offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101011212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/North_Dakota/Center",
        untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|1tz5k0|2dvo0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a5c0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "420|360|300",
        offsetIndices: "010101101010101010101010101010101010101010101010101010101011212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/North_Dakota/New_Salem",
        untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|1tz5k0|2dvo0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a5c0|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "420|360|300",
        offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Nuuk",
        untils: "-rvumf4|x8nqz4|8zrk0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "206.9333|180|120",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Ojinaga",
        untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|xes2s0|afuk0|8a840|afuk0|8aaw0|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "417.6667|420|360|300",
        offsetIndices: "0121212323221212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Panama",
        untils: "-w757vc|Infinity",
        offsets: "319.6|300",
        offsetIndices: "01"
    }, {
        id: "America/Pangnirtung",
        untils: "-pkmlc0|b0ke00|1tzdw0|2dnc0|a7n3w0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|asw00|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7xc80|ast80|7x6o0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "0|240|180|120|300|360",
        offsetIndices: "012213121212121212121212121212121212114141414154414141414141414141414141414141414141414141414141414141414141414141414141414"
    }, {
        id: "America/Paramaribo",
        untils: "-usj4g8|cixc0c|5lydbk|kcrm6c|Infinity",
        offsets: "220.6667|220.8667|220.6|210|180",
        offsetIndices: "01234"
    }, {
        id: "America/Phoenix",
        untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|zjedo|4olg0|9et80|bs6lmc|9cyk0|Infinity",
        offsets: "420|360",
        offsetIndices: "01010101010"
    }, {
        id: "America/Port_of_Spain",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Port-au-Prince",
        untils: "-rmk9ac|ylcf6c|8zzw0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8aaw0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|3vpjw0|ast80|7x9g0|ast80|2stv00|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|pkg40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "289|300|240",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Porto_Acre",
        untils: "-t85fg0|99kak0|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|amves0|2t2t80|Infinity",
        offsets: "271.2|300|240",
        offsetIndices: "01212121212121212121212121212121"
    }, {
        id: "America/Porto_Velho",
        untils: "-t85g60|99k8i0|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|Infinity",
        offsets: "255.6|240|180",
        offsetIndices: "012121212121212121212121212121"
    }, {
        id: "America/Puerto_Rico",
        untils: "-efsnk0|1ppu40|2dnc0|Infinity",
        offsets: "240|180",
        offsetIndices: "0110"
    }, {
        id: "America/Punta_Arenas",
        untils: "-vauawq|3dlssq|157b7a|f4e0q|49hzba|aye0q|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|534ik0|351g0|2fnh80|2mg00|b73400|7k580|c8tg0|6h980|a31g0|7x3w0|asys0|7x3w0|b5xg0|7k580|ag040|8a2k0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|Infinity",
        offsets: "282.7667|300|240|180",
        offsetIndices: "0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "America/Rainy_River",
        untils: "-qzov40|a2vw0|bfxjw0|pmdk0|1tz8c0|2dsw0|ewvus0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300",
        offsetIndices: "010111010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Rankin_Inlet",
        untils: "-6s8lc0|4c6oo0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "0|360|240|300",
        offsetIndices: "012131313131313131313131313131313131313131313331313131313131313131313131313131313131313131313131313131313131313131313131"
    }, {
        id: "America/Recife",
        untils: "-t85ljc|99kb3c|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|514g40|7k580|biw40|cvw0|iq5g0|6h980|Infinity",
        offsets: "139.6|180|120",
        offsetIndices: "0121212121212121212121212121212121212121"
    }, {
        id: "America/Regina",
        untils: "-xkq9yc|6l1hmc|a2vw0|60enw0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|1b6840|9cyk0|9d440|8zzw0|9q2s0|9cyk0|9q2s0|9cyk0|9d440|9cyk0|66gc0|1tz5k0|2dvo0|a31g0|9cyk0|a31g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|tj1g0|9cyk0|9d440|Infinity",
        offsets: "418.6|420|360",
        offsetIndices: "012121212121212121212121221212121212121212121212121212"
    }, {
        id: "America/Resolute",
        untils: "-bnp9c0|97nco0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "0|360|240|300",
        offsetIndices: "012131313131313131313131313131313131313131313331313131313331313131313131313131313131313131313131313131313131313131313131"
    }, {
        id: "America/Rio_Branco",
        untils: "-t85fg0|99kak0|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|amves0|2t2t80|Infinity",
        offsets: "271.2|300|240",
        offsetIndices: "01212121212121212121212121212121"
    }, {
        id: "America/Rosario",
        untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|7qcg40|3yik0|b5xg0|7k580|Infinity",
        offsets: "256.8|240|180|120",
        offsetIndices: "01212121212121212121212121212121212121212123232323132323232"
    }, {
        id: "America/Santa_Isabel",
        untils: "-p1u1s0|11jrw0|1sns00|1sgdc0|71s40|9cyk0|5iidg0|1q6700|4lfk0|190g40|eluk0|2r4o80|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|84qys0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "468.0667|420|480",
        offsetIndices: "012121211212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "America/Santarem",
        untils: "-t85hvc|99ka7c|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|amves0|Infinity",
        offsets: "218.8|240|180",
        offsetIndices: "0121212121212121212121212121212"
    }, {
        id: "America/Santiago",
        untils: "-vauawq|3dlssq|157b7a|f4e0q|49hzba|aye0q|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|534ik0|351g0|229zw0|2gt80|awo40|2mg00|b73400|7k580|c8tg0|6h980|a31g0|7x3w0|asys0|7x3w0|b5xg0|7k580|ag040|8a2k0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|e1h80|4olg0|e1h80|4olg0|c8nw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|Infinity",
        offsets: "282.7667|300|240|180",
        offsetIndices: "010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "America/Santo_Domingo",
        untils: "-j6hz1c|hiw29c|67zw0|1dy840|62ha0|cnle0|4h2m0|elyq0|47ta0|ei9e0|4bim0|eek20|4dda0|ecpe0|dkmtg0|1stc0|Infinity",
        offsets: "280|300|240|270",
        offsetIndices: "01213131313131212"
    }, {
        id: "America/Sao_Paulo",
        untils: "-t85jd8|99k8x8|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5k02s0|6onw0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|cyqs0|64ak0|cls40|5rbw0|dbpg0|51ek0|dbpg0|6h980|c8tg0|6h980|c8tg0|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|cls40|64ak0|dfes0|5nmk0|c8tg0|6h980|dbpg0|5rbw0|bvus0|6h980|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6u7w0|c8tg0|64ak0|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|dbpg0|5ed80|Infinity",
        offsets: "186.4667|180|120",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Scoresbysund",
        untils: "-rvurxk|x8ntpk|902o0|9cvs0|9cyk0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "87.8667|120|60|0",
        offsetIndices: "0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "America/Shiprock",
        untils: "-r0epo0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|2vmk0|ataw40|1tz5k0|2dvo0|a7n9g0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "420|360",
        offsetIndices: "01010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Sitka",
        untils: "-ek1w80|1tz2s0|2dyg0|cawis0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1leo0|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "480|420|540",
        offsetIndices: "01101010101010101010101010101010122020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202"
    }, {
        id: "America/St_Barthelemy",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/St_Johns",
        untils: "-ris3ck|8bx80|ar440|a2vw0|9tjs0|53980|dkys0|9cyk0|9d440|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|9cyk0|9d440|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|7tmw0|1wfuk|8zzw0|a3480|7k580|b5xg0|7k580|b5xg0|7k580|biw40|776k0|biw40|7k580|b5xg0|7k580|b5xg0|1pb260|2dly0|biw40|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|biw40|7k580|ag040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a2lo|afuk0|8a840|asqg0|7xc80|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8tec|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "210.8667|150.8667|210|150|90",
        offsetIndices: "01010101010101010101010101010101010102323232323232323323232323232323232323232323232323232323232323232323232323232323232323232323232323232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "America/St_Kitts",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/St_Lucia",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/St_Thomas",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/St_Vincent",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Swift_Current",
        untils: "-xkq9d4|6l1h14|a2vw0|c5jxg0|1tz5k0|2dvo0|asys0|8n180|a31g0|7x3w0|asys0|7x3w0|asys0|7x3w0|3yles0|9cyk0|s36s0|9cyk0|9d440|7x3w0|b5xg0|7k580|5j4lg0|Infinity",
        offsets: "431.3333|420|360",
        offsetIndices: "012122121212121212121212"
    }, {
        id: "America/Tegucigalpa",
        untils: "-pfzh6k|yho0ik|7k580|b5xg0|7k580|96x1g0|4qak0|Infinity",
        offsets: "348.8667|360|300",
        offsetIndices: "01212121"
    }, {
        id: "America/Thule",
        untils: "-rvuj9g|12yzilg|9cyk0|9d440|9cyk0|9q2s0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "275.1333|240|180",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Thunder_Bay",
        untils: "-vbavc0|gr8qs0|1tzb40|2dq40|ctmlg0|9cyk0|9d440|9px80|9d440|9cyk0|s36s0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "0122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "America/Tijuana",
        untils: "-p1u1s0|11jrw0|1sns00|1sgdc0|71s40|9cyk0|5iidg0|1q6700|4lfk0|190g40|eluk0|2r4o80|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|84qys0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "468.0667|420|480",
        offsetIndices: "012121211212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "America/Toronto",
        untils: "-qzoxw0|a2vw0|7yx60|aqzy0|9q8c0|7jzo0|bw0c0|6bp80|cedg0|6h980|c8tg0|6h980|bvus0|776k0|biw40|776k0|biw40|776k0|biw40|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|xjeo0|1tzb40|2dq40|asys0|7x3w0|ast80|7x3w0|asys0|7x3w0|asys0|b5rw0|7xf00|ast80|7x9g0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "300|240",
        offsetIndices: "01010101010101010101010101010101010101010101011101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Tortola",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Vancouver",
        untils: "-qzopk0|a2vw0|c5jxg0|1tz2s0|2dyg0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "480|420",
        offsetIndices: "0101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Virgin",
        untils: "-u6m79w|Infinity",
        offsets: "246.0667|240",
        offsetIndices: "01"
    }, {
        id: "America/Whitehorse",
        untils: "-qzoms0|a2vw0|asys0|882c0|bmiwc0|1tz000|2e180|a7n3w0|9q000|tiyo0|6qp440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|Infinity",
        offsets: "540|480|420",
        offsetIndices: "01010110201212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "America/Winnipeg",
        untils: "-s0s7c0|7k580|tj700|a2vw0|9ok840|6u7w0|2a5hg0|1tz8c0|2dsw0|biw40|7x3w0|a31g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b7s40|7tek0|autg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9cyk0|9d440|7x3w0|1cm2s0|7k580|1cm2s0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300",
        offsetIndices: "010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Yakutat",
        untils: "-ek1tg0|1tz000|2e180|cawis0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1lbw0|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "540|480",
        offsetIndices: "01101010101010101010101010101010100101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "America/Yellowknife",
        untils: "-i9m2o0|3pk3o0|1tz5k0|2dvo0|a7n3w0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "0|420|360|300",
        offsetIndices: "012213121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Antarctica/Casey",
        untils: "-irxc0|lag4o0|73bo0|uz1o0|60l80|2fnh80|pz9g0|Infinity",
        offsets: "0|-480|-660",
        offsetIndices: "01212121"
    }, {
        id: "Antarctica/Davis",
        untils: "-6rmdc0|42jdw0|27wgs0|l8uss0|7eqs0|unmk0|60qs0|Infinity",
        offsets: "0|-420|-300",
        offsetIndices: "01012121"
    }, {
        id: "Antarctica/DumontDUrville",
        untils: "-c05eo0|2mks80|2i72g0|Infinity",
        offsets: "0|-600",
        offsetIndices: "0101"
    }, {
        id: "Antarctica/Macquarie",
        untils: "-rsj4w0|8zzw0|11wqk0|f4kh40|a6p8g0|9d1c0|asw00|6uao0|bvs00|6uao0|bvs00|779c0|bvs00|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|b5uo0|7k800|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|bvs00|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x6o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|7x6o0|asw00|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-600|-660|0",
        offsetIndices: "0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101011"
    }, {
        id: "Antarctica/Mawson",
        untils: "-8aelc0|t22y80|Infinity",
        offsets: "0|-360|-300",
        offsetIndices: "012"
    }, {
        id: "Antarctica/McMurdo",
        untils: "-m01p20|64ak0|biw40|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|8a3y0|afyq0|8a3y0|afyq0|afvy0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|b5ta0|7k9e0|b5ta0|7x820|hsl2m0|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
        offsets: "-690|-750|-720|-780",
        offsetIndices: "01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "Antarctica/Palmer",
        untils: "-2lxhc0|31ho0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|46b6s0|8c2s0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|Infinity",
        offsets: "0|180|240|120",
        offsetIndices: "0121212121213121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Antarctica/Rothera",
        untils: "3lxs00|Infinity",
        offsets: "0|180",
        offsetIndices: "01"
    }, {
        id: "Antarctica/South_Pole",
        untils: "-m01p20|64ak0|biw40|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|8a3y0|afyq0|8a3y0|afyq0|afvy0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|b5ta0|7k9e0|b5ta0|7x820|hsl2m0|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
        offsets: "-690|-750|-720|-780",
        offsetIndices: "01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "Antarctica/Syowa",
        untils: "-6qsqo0|Infinity",
        offsets: "0|-180",
        offsetIndices: "01"
    }, {
        id: "Antarctica/Troll",
        untils: "ibruo0|27pg0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-120",
        offsetIndices: "00101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Antarctica/Vostok",
        untils: "-6aaao0|Infinity",
        offsets: "0|-360",
        offsetIndices: "01"
    }, {
        id: "Arctic/Longyearbyen",
        untils: "-rzayo0|6qfs0|cgcqo0|15tsc0|7k800|9q000|9d1c0|9d1c0|9d1c0|9d1c0|70q5c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|b5uo0|7k800|7law00|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Asia/Aden",
        untils: "-bwgbbg|Infinity",
        offsets: "-186.8667|-180",
        offsetIndices: "01"
    }, {
        id: "Asia/Almaty",
        untils: "-nu1a90|37a0d0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|Infinity",
        offsets: "-307.8|-300|-360|-420",
        offsetIndices: "012323232323232323232321232323232323232323232323232"
    }, {
        id: "Asia/Amman",
        untils: "-kcrtbk|m566fk|60l80|awo40|7v980|awo40|7v980|ayis0|9gnw0|9b9g0|7v980|autg0|7v980|3e6840|9et80|9io40|9cyk0|9d440|9cyk0|9d440|9px80|ayis0|7rjw0|ag040|8a2k0|9zc40|8drw0|a31g0|8zzw0|9d440|9cyk0|9d440|8n180|ag040|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|epmo0|4deo0|9o5c0|9ew00|9b6o0|9ew00|9d1c0|9d1c0|9d1c0|asw00|7x6o0|afxc0|8n400|9d1c0|9d1c0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|wel80|51k40|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|Infinity",
        offsets: "-143.7333|-120|-180",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Asia/Anadyr",
        untils: "-nu1sv8|379zj8|qi27w0|9et80|is040|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|j3440|7k800|Infinity",
        offsets: "-709.9333|-720|-780|-840|-660",
        offsetIndices: "01232121212121212121214121212121212121212121212121212121212141"
    }, {
        id: "Asia/Aqtau",
        untils: "-nu15b4|379y74|qrh3w0|iruk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|Infinity",
        offsets: "-201.0667|-240|-300|-360",
        offsetIndices: "012323232323232323232123232312121212121212121212"
    }, {
        id: "Asia/Aqtobe",
        untils: "-nu16l4|379zh4|qi27w0|s6qk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|Infinity",
        offsets: "-228.6667|-240|-300|-360",
        offsetIndices: "0123232323232323232321232323232323232323232323232"
    }, {
        id: "Asia/Ashgabat",
        untils: "-nu16t8|379zp8|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|Infinity",
        offsets: "-233.5333|-240|-300|-360",
        offsetIndices: "0123232323232323232323212"
    }, {
        id: "Asia/Ashkhabad",
        untils: "-nu16t8|379zp8|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|Infinity",
        offsets: "-233.5333|-240|-300|-360",
        offsetIndices: "0123232323232323232323212"
    }, {
        id: "Asia/Atyrau",
        untils: "-nu15m8|37a1a8|qrh140|iruk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|j3440|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|Infinity",
        offsets: "-207.7333|-180|-300|-360|-240",
        offsetIndices: "01232323232323232323242323232323232324242424242"
    }, {
        id: "Asia/Baghdad",
        untils: "-r50g80|xkn3w0|7v980|9b9g0|9gnw0|9eys0|9et80|9d440|9b9g0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9f1k0|9ew00|9ew00|9ew00|9d1c0|9ew00|9d1c0|9ew00|9d1c0|9ew00|9ew00|9ew00|9d1c0|9ew00|9d1c0|9ew00|9d1c0|9ew00|9ew00|9ew00|9d1c0|9ew00|9d1c0|9ew00|9d1c0|9ew00|9ew00|9ew00|9d1c0|9ew00|9d1c0|9ew00|9d1c0|9ew00|Infinity",
        offsets: "-177.6|-180|-240",
        offsetIndices: "012121212121212121212121212121212121212121212121212121"
    }, {
        id: "Asia/Bahrain",
        untils: "-q3gmvk|rctnrk|Infinity",
        offsets: "-206.1333|-240|-180",
        offsetIndices: "012"
    }, {
        id: "Asia/Baku",
        untils: "-nu158c|h4tkwc|ckinw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|9d1c0|239ew0|asw00|7x3w0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-199.4|-180|-240|-300",
        offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
    }, {
        id: "Asia/Bangkok",
        untils: "-pysda4|Infinity",
        offsets: "-402.0667|-420",
        offsetIndices: "01"
    }, {
        id: "Asia/Barnaul",
        untils: "-q4ljic|5hu6uc|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|38fo0|64og0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|qnc40|Infinity",
        offsets: "-335|-360|-420|-480",
        offsetIndices: "0123232323232323232323212323232321212121212121212121212121212121212"
    }, {
        id: "Asia/Beirut",
        untils: "-pyzew0|aunw0|88dg0|9et80|8yas0|a2vw0|a31g0|7k580|hjqo40|7v980|awo40|7v980|awo40|7v980|ayis0|7v980|awo40|7v980|5lhs40|56yk0|awo40|7v980|awo40|7v980|awo40|7v980|ayis0|7v980|awo40|7v980|autg0|7v980|2wxus0|8n180|a4w40|8n180|a4w40|8n180|a4w40|8n180|bs5g0|71mk0|alk40|86d80|a4w40|8n180|a4w40|8n180|a6qs0|80t80|905g0|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|Infinity",
        offsets: "-120|-180",
        offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Asia/Bishkek",
        untils: "-nu19tc|379zxc|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|h8dc0|bkl80|8n180|a31g0|8n180|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|9db20|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|Infinity",
        offsets: "-298.4|-300|-360|-420",
        offsetIndices: "012323232323232323232321212121212121212121212121212"
    }, {
        id: "Asia/Brunei",
        untils: "-mvofy4|3khxs4|Infinity",
        offsets: "-459.6667|-450|-480",
        offsetIndices: "012"
    }, {
        id: "Asia/Calcutta",
        untils: "-xehava|innm9a|bmfw0|5lxg0|1mn180|Infinity",
        offsets: "-321.1667|-330|-390",
        offsetIndices: "012121"
    }, {
        id: "Asia/Chita",
        untils: "-q4cfog|5hkxgg|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|qnew0|Infinity",
        offsets: "-453.8667|-480|-540|-600",
        offsetIndices: "012323232323232323232321232323232323232323232323232323232323232312"
    }, {
        id: "Asia/Choibalsan",
        untils: "-xmct7c|11sndrc|2qk2k0|9eqg0|9eys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|1ckdo0|7x3w0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|s6qk0|3nc0c0|9ct00|9d9o0|9ct00|Infinity",
        offsets: "-458|-420|-480|-600|-540",
        offsetIndices: "0123434343434343434343434343434343434343434343424242"
    }, {
        id: "Asia/Chongqing",
        untils: "-qh00w0|8sl80|asbpg0|6w2k0|7ves0|bxjw0|4mqs0|1vduk0|d4as0|75bw0|a31g0|aaak0|9d440|7v980|awo40|1dx80|j9xpo0|6u7w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
        offsets: "-480|-540",
        offsetIndices: "01010101010101010101010101010"
    }, {
        id: "Asia/Chungking",
        untils: "-qh00w0|8sl80|asbpg0|6w2k0|7ves0|bxjw0|4mqs0|1vduk0|d4as0|75bw0|a31g0|aaak0|9d440|7v980|awo40|1dx80|j9xpo0|6u7w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
        offsets: "-480|-540",
        offsetIndices: "01010101010101010101010101010"
    }, {
        id: "Asia/Colombo",
        untils: "-xehask|isle6k|cajy0|1mp2u0|qetjw0|7x5a0|4xvqq0|Infinity",
        offsets: "-319.5333|-330|-360|-390",
        offsetIndices: "01231321"
    }, {
        id: "Asia/Dacca",
        untils: "-eqtpow|bmgyw|5lxg0|4qknw0|u4ijy0|a1400|Infinity",
        offsets: "-353.3333|-390|-330|-360|-420",
        offsetIndices: "0121343"
    }, {
        id: "Asia/Damascus",
        untils: "-q3gk20|5k6q0|8n180|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|k4hk40|7yyk0|awo40|7tek0|b0dg0|7v980|awo40|7tek0|alk40|887w0|awo40|7v980|ayis0|7v980|awo40|7v980|awo40|7v980|awo40|7v980|ayis0|7v980|awo40|7v980|awo40|7v980|awo40|7v980|ayis0|7v980|awo40|6bp80|cg840|6bp80|2eh1g0|8zzw0|9ts40|8zzw0|pvk40|c33w0|7cw40|cjrw0|6zxg0|btuk0|7rpg0|9gnw0|9d440|9cyk0|9et80|9et80|9rxg0|91uk0|92040|9et80|9o840|9et80|9d440|9et80|9eys0|9et80|9b9g0|9gnw0|99es0|9iik0|9d440|9et80|9eys0|9et80|9d440|9et80|9d440|9et80|9d440|9et80|9eys0|9et80|9d440|9et80|9d440|8y580|9q2s0|b5rw0|7x9g0|aunw0|7ig40|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|Infinity",
        offsets: "-145.2|-120|-180",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Asia/Dhaka",
        untils: "-eqtpow|bmgyw|5lxg0|4qknw0|u4ijy0|a1400|Infinity",
        offsets: "-353.3333|-390|-330|-360|-420",
        offsetIndices: "0121343"
    }, {
        id: "Asia/Dili",
        untils: "-u9s4l8|fqcu98|hufs00|cpz440|Infinity",
        offsets: "-502.3333|-480|-540",
        offsetIndices: "01212"
    }, {
        id: "Asia/Dubai",
        untils: "-q3gnko|Infinity",
        offsets: "-221.2|-240",
        offsetIndices: "01"
    }, {
        id: "Asia/Dushanbe",
        untils: "-nu18qo|379yuo|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|hp440|Infinity",
        offsets: "-275.2|-300|-360|-420",
        offsetIndices: "012323232323232323232321"
    }, {
        id: "Asia/Famagusta",
        untils: "-p4bqac|rvhy2c|9cyk0|b42s0|7nuk0|8yas0|8zzw0|9q2s0|9et80|9b9g0|9cyk0|9q2s0|8zzw0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|at4c0|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|8h8w0|leog0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-135.8|-120|-180",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212212121212121212121212121212121212121212121"
    }, {
        id: "Asia/Gaza",
        untils: "-ffv9k0|19f3w0|7rv00|b02c0|7tk40|b07w0|8jhg0|a8lg0|8jhg0|a8ac0|5hoqs0|7el80|awo40|7v980|awqw0|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7tk40|ayd80|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7ves0|awik0|1sns0|3p6is0|51ek0|9q2s0|6u7w0|2khpg0|25s00|1weyo0|5reo0|bxmo0|7x3w0|cls40|5rbw0|bbhg0|7rjw0|asys0|7k580|c8tg0|6h980|ag040|7x3w0|asys0|8a2k0|asys0|8a2k0|ap9g0|80t80|ap9g0|7nuk0|b2840|80t80|66as0|4vxc0|8n400|a2yo0|8n400|a2yo0|8n400|asw00|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|8n400|a2yo0|8ulg0|97ek0|8y580|9ts40|8hms0|a4qk0|7x3w0|asys0|8a5c0|ahs1o|71mic|bzk5o|69uic|cg840|902o0|9q000|9cyk0|9d440|ast80|7z440|aqyk0|7z6w0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|Infinity",
        offsets: "-120|-180",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010100101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Asia/Harbin",
        untils: "-qh00w0|8sl80|asbpg0|6w2k0|7ves0|bxjw0|4mqs0|1vduk0|d4as0|75bw0|a31g0|aaak0|9d440|7v980|awo40|1dx80|j9xpo0|6u7w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
        offsets: "-480|-540",
        offsetIndices: "01010101010101010101010101010"
    }, {
        id: "Asia/Hebron",
        untils: "-ffv9k0|19f3w0|7rv00|b02c0|7tk40|b07w0|8jhg0|a8lg0|8jhg0|a8ac0|5hoqs0|7el80|awo40|7v980|awqw0|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7tk40|ayd80|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7ves0|awik0|1sns0|3p6is0|51ek0|9q2s0|6u7w0|2khpg0|25s00|1weyo0|5reo0|bxmo0|7x3w0|cls40|5rbw0|bbhg0|7rjw0|asys0|7k580|c8tg0|6h980|ag040|7x3w0|asys0|8a2k0|asys0|8a2k0|ap9g0|80t80|ap9g0|7nuk0|b2840|80t80|66as0|4vxc0|8n400|a2yo0|8n400|a2yo0|8n400|asw00|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|8n400|a2yo0|8ulg0|97ek0|8y580|9ts40|8hms0|a4qk0|82nw0|anes0|8a5c0|afxc0|73h80|bzk5o|69uic|1hs40|1lbw0|9d440|902o0|9q000|9cyk0|9d440|ast80|7z440|aqyk0|7z6w0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|Infinity",
        offsets: "-120|-180",
        offsetIndices: "010101010101010101010101010101010101010101010101010101010101010010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Asia/Ho_Chi_Minh",
        untils: "-x56934|2isioa|gj25iu|15ct80|8so00|tmtk0|4azjw0|2cmao0|8285c0|Infinity",
        offsets: "-426.6667|-426.5|-420|-480|-540",
        offsetIndices: "0123423232"
    }, {
        id: "Asia/Hong_Kong",
        untils: "-y0i0s0|j44dk0|5k000|4d4y0|2195i0|7x3w0|bj320|6uao0|bvs00|7x6o0|9d1c0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|ast80|77c40|biqk0|77c40|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|bvp80|6udg0|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|8n6s0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9cyk0|1c9440|8a2k0|Infinity",
        offsets: "-456.7|-480|-540|-510",
        offsetIndices: "0123212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Asia/Hovd",
        untils: "-xmcoz0|11sncb0|2qk2k0|9et80|9eys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|1ckdo0|7x3w0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|4fio40|9ct00|9d9o0|9ct00|Infinity",
        offsets: "-366.6|-360|-420|-480",
        offsetIndices: "012323232323232323232323232323232323232323232323232"
    }, {
        id: "Asia/Irkutsk",
        untils: "-q28gn5|5fh175|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-417.0833|-420|-480|-540",
        offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
    }, {
        id: "Asia/Istanbul",
        untils: "-ux9xew|2wvx6w|7v980|1tjc40|aunw0|88dg0|9et80|8yas0|a2vw0|tzpg0|79180|awo40|7v980|7p4040|4zjw0|2vs40|f4d80|9vms0|1u5ek0|c5440|69uk0|acas0|8n180|a31g0|8n180|9q2s0|8zzw0|a31g0|8zzw0|a31g0|8n180|5md9g0|o9zw0|a6qs0|75bw0|4iwyw0|7x6o0|7kas0|b5rw0|75hg0|bkl80|77c40|biqk0|7x9g0|a2vw0|8n6s0|4iqc0|2nkw80|38l80|kdes0|8qtc0|8a5c0|9ew00|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|902o0|9q000|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7kdk0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7m2o0|b4000|7k800|b5uo0|7x6o0|asw00|7z1c0|ar1c0|7x6o0|bitc0|779c0|8fe80|Infinity",
        offsets: "-116.9333|-120|-180|-240",
        offsetIndices: "0121212121212121212121212121212121212121212121223212121212121212121212121212121212121212121212121212121212121212122"
    }, {
        id: "Asia/Jakarta",
        untils: "-o0bdpc|4lzxc0|4wdzjc|1tu960|1cx860|11jta0|74uc20|Infinity",
        offsets: "-427.2|-440|-450|-540|-480|-420",
        offsetIndices: "01232425"
    }, {
        id: "Asia/Jayapura",
        untils: "-jebm20|66bqe0|a37vy0|Infinity",
        offsets: "-562.8|-540|-570",
        offsetIndices: "0121"
    }, {
        id: "Asia/Jerusalem",
        untils: "-r50eig|bp54yg|19f3w0|7rv00|b02c0|7tk40|b07w0|8jhg0|a8lg0|8jhg0|a8ac0|t9s40|56vs0|35700|9b3w0|9gtg0|8jbw0|7tmw0|a6ig0|biyw0|8a5c0|9d1c0|902o0|7x6o0|e1eg0|4ofw0|dzxo0|4q500|doo40|64iw0|auqo0|7i500|8rfms0|51ek0|9q2s0|6u7w0|2khpg0|25s00|1weyo0|5reo0|bxmo0|7x3w0|cls40|5rbw0|bbhg0|7rjw0|asys0|7k580|c8tg0|6h980|ag040|7x3w0|asys0|8a2k0|asys0|8a2k0|ap9g0|80t80|ap9g0|7nuk0|b2840|80t80|9zc40|9iik0|9kis0|93p80|9mdg0|8qqk0|apf00|7x3w0|biw40|8zx40|9io40|8n180|9kis0|9vh80|8ulg0|9px80|9mdg0|8n180|9tuw0|9tmk0|8wg40|9gnw0|99es0|8qqk0|9zc40|9tmk0|8wg40|9gnw0|99es0|8qqk0|acas0|9gnw0|99es0|93p80|9mdg0|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|Infinity",
        offsets: "-140.6667|-120|-180|-240",
        offsetIndices: "012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Asia/Kabul",
        untils: "-d1pkg0|Infinity",
        offsets: "-240|-270",
        offsetIndices: "01"
    }, {
        id: "Asia/Kamchatka",
        untils: "-olrupo|3z045o|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|j3440|7k800|Infinity",
        offsets: "-634.6|-660|-720|-780",
        offsetIndices: "012323232323232323232321232323232323232323232323232323232323212"
    }, {
        id: "Asia/Karachi",
        untils: "-wvpb30|im3zt0|1mn180|33xpg0|a63o20|g72qo0|9cyk0|2y85g0|7v980|8hms0|aaak0|Infinity",
        offsets: "-268.2|-330|-390|-300|-360",
        offsetIndices: "012133434343"
    }, {
        id: "Asia/Kashgar",
        untils: "-lx5pjw|Infinity",
        offsets: "-350.3333|-360",
        offsetIndices: "01"
    }, {
        id: "Asia/Kathmandu",
        untils: "-q3gt4s|yg2lus|Infinity",
        offsets: "-341.2667|-330|-345",
        offsetIndices: "012"
    }, {
        id: "Asia/Katmandu",
        untils: "-q3gt4s|yg2lus|Infinity",
        offsets: "-341.2667|-330|-345",
        offsetIndices: "012"
    }, {
        id: "Asia/Khandyga",
        untils: "-q4cjrp|5hl1jp|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|3fx40|4h6s0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|8ql00|1mlho0|Infinity",
        offsets: "-542.2167|-480|-540|-600|-660",
        offsetIndices: "0123232323232323232323212323232323232323232323232343434343434343432"
    }, {
        id: "Asia/Kolkata",
        untils: "-xehava|innm9a|bmfw0|5lxg0|1mn180|Infinity",
        offsets: "-321.1667|-330|-390",
        offsetIndices: "012121"
    }, {
        id: "Asia/Krasnoyarsk",
        untils: "-q37l72|5gg8j2|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-371.4333|-360|-420|-480",
        offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
    }, {
        id: "Asia/Kuala_Lumpur",
        untils: "-xphpwd|eeb94d|4it32o|8n3jc|1v2p60|iy3o60|Infinity",
        offsets: "-415.4167|-420|-440|-450|-540|-480",
        offsetIndices: "0123435"
    }, {
        id: "Asia/Kuching",
        untils: "-mvof3k|3khwxk|1epvy0|4ohqo|e5a9c|4ohqo|e3flc|4ohqo|e3flc|4ohqo|e3flc|4ohqo|e5a9c|4ohqo|e3flc|4ohqo|3ajlc|1v2qk0|Infinity",
        offsets: "-441.3333|-450|-480|-500|-540",
        offsetIndices: "0123232323232323242"
    }, {
        id: "Asia/Kuwait",
        untils: "-bwgbbg|Infinity",
        offsets: "-186.8667|-180",
        offsetIndices: "01"
    }, {
        id: "Asia/Macao",
        untils: "-y0i2cy|jdvyoy|6onw0|ac580|8fs40|7v980|11luw0|awlc0|7vc00|ac800|bko00|7x6o0|9d1c0|7vc00|asw00|7x6o0|asw00|7x6o0|auqo0|88ao0|asw00|7x6o0|asw00|779c0|bitc0|779c0|bvs00|6uao0|bw1q0|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|bvp80|6udg0|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|8n6s0|9cvs0|9d6w0|9cvs0|9d6w0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9cyk0|1c9440|8a2k0|Infinity",
        offsets: "-454.1667|-480|-540|-600",
        offsetIndices: "012323212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Asia/Macau",
        untils: "-y0i2cy|jdvyoy|6onw0|ac580|8fs40|7v980|11luw0|awlc0|7vc00|ac800|bko00|7x6o0|9d1c0|7vc00|asw00|7x6o0|asw00|7x6o0|auqo0|88ao0|asw00|7x6o0|asw00|779c0|bitc0|779c0|bvs00|6uao0|bw1q0|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|bvp80|6udg0|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|8n6s0|9cvs0|9d6w0|9cvs0|9d6w0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9cyk0|1c9440|8a2k0|Infinity",
        offsets: "-454.1667|-480|-540|-600",
        offsetIndices: "012323212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Asia/Magadan",
        untils: "-nu1nxc|37a05c|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|s39k0|Infinity",
        offsets: "-603.2|-600|-660|-720",
        offsetIndices: "012323232323232323232321232323232323232323232323232323232323232312"
    }, {
        id: "Asia/Makassar",
        untils: "-q3gzg0|6p5hc0|4u87w0|1w02k0|Infinity",
        offsets: "-477.6|-480|-540",
        offsetIndices: "00121"
    }, {
        id: "Asia/Manila",
        untils: "-hb5y80|4qak0|2qidg0|1b2d80|4xf440|442k0|cdqdg0|9et80|Infinity",
        offsets: "-480|-540",
        offsetIndices: "010101010"
    }, {
        id: "Asia/Muscat",
        untils: "-q3gnko|Infinity",
        offsets: "-221.2|-240",
        offsetIndices: "01"
    }, {
        id: "Asia/Nicosia",
        untils: "-p4bq6g|rvhxyg|9cyk0|b42s0|7nuk0|8yas0|8zzw0|9q2s0|9et80|9b9g0|9cyk0|9q2s0|8zzw0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|at4c0|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-133.4667|-120|-180",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Asia/Novokuznetsk",
        untils: "-nu36tc|37bu5c|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|j3440|7k800|Infinity",
        offsets: "-348.8|-360|-420|-480",
        offsetIndices: "012323232323232323232321232323232323232323232323232323232323212"
    }, {
        id: "Asia/Novosibirsk",
        untils: "-q4do0s|5hmbcs|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|2vh00|6hn40|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|wrpg0|Infinity",
        offsets: "-331.6667|-360|-420|-480",
        offsetIndices: "0123232323232323232323212323212121212121212121212121212121212121212"
    }, {
        id: "Asia/Omsk",
        untils: "-q5xmx6|5j6d16|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-293.5|-300|-360|-420",
        offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
    }, {
        id: "Asia/Oral",
        untils: "-nu15ic|37a16c|qi2540|s6qk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9q000|9d1c0|9d1c0|5reo0|cyo00|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|Infinity",
        offsets: "-205.4|-180|-300|-360|-240",
        offsetIndices: "01232323232323232424242424242424242424242424242"
    }, {
        id: "Asia/Phnom_Penh",
        untils: "-pysda4|Infinity",
        offsets: "-402.0667|-420",
        offsetIndices: "01"
    }, {
        id: "Asia/Pontianak",
        untils: "-w6piww|cse2o0|4tnu2w|1wkei0|1cx860|11jta0|74uc20|cixam0|Infinity",
        offsets: "-437.3333|-450|-540|-480|-420",
        offsetIndices: "001213134"
    }, {
        id: "Asia/Pyongyang",
        untils: "-w895yc|1yh10c|hk5da0|10ipmo0|1f4qo0|Infinity",
        offsets: "-503|-510|-540",
        offsetIndices: "012212"
    }, {
        id: "Asia/Qatar",
        untils: "-q3gmvk|rctnrk|Infinity",
        offsets: "-206.1333|-240|-180",
        offsetIndices: "012"
    }, {
        id: "Asia/Qostanay",
        untils: "-nu17s4|37a0o4|qi27w0|s6qk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|Infinity",
        offsets: "-254.4667|-240|-300|-360",
        offsetIndices: "012323232323232323232123232323232323232323232323"
    }, {
        id: "Asia/Qyzylorda",
        untils: "-nu184g|37a10g|qi27w0|s6qk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|ohhc0|cyo00|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|7osl00|Infinity",
        offsets: "-261.8667|-240|-300|-360",
        offsetIndices: "01232323232323232323232323232323232323232323232"
    }, {
        id: "Asia/Rangoon",
        untils: "-q3gv5b|bnjp3b|1kh520|Infinity",
        offsets: "-384.7833|-390|-540",
        offsetIndices: "0121"
    }, {
        id: "Asia/Riyadh",
        untils: "-bwgbbg|Infinity",
        offsets: "-186.8667|-180",
        offsetIndices: "01"
    }, {
        id: "Asia/Saigon",
        untils: "-x56934|2isioa|gj25iu|15ct80|8so00|tmtk0|4azjw0|2cmao0|8285c0|Infinity",
        offsets: "-426.6667|-426.5|-420|-480|-540",
        offsetIndices: "0123423232"
    }, {
        id: "Asia/Sakhalin",
        untils: "-xl87rc|kvnarc|ikvh40|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|iq5g0|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|qnc40|Infinity",
        offsets: "-570.8|-540|-660|-720|-600",
        offsetIndices: "01232323232323232323232423232323232424242424242424242424242424242"
    }, {
        id: "Asia/Samarkand",
        untils: "-nu18eh|37a1ah|qi27w0|s6qk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|Infinity",
        offsets: "-267.8833|-240|-300|-360",
        offsetIndices: "01232323232323232323232"
    }, {
        id: "Asia/Seoul",
        untils: "-w8966g|1yh18g|hkx5a0|1faao0|5cik0|ae5g0|8a2k0|ae5g0|8bx80|c8tg0|6h980|1bj6s0|l3aq0|6j3w0|d2g40|6u7w0|b5xg0|776k0|biw40|776k0|biw40|776k0|biw40|776k0|grs40|dfqxi0|7x6o0|asw00|7x6o0|Infinity",
        offsets: "-507.8667|-510|-540|-600|-570",
        offsetIndices: "012232323232141414141414123232"
    }, {
        id: "Asia/Shanghai",
        untils: "-qh00w0|8sl80|asbpg0|6w2k0|7ves0|bxjw0|4mqs0|1vduk0|d4as0|75bw0|a31g0|aaak0|9d440|7v980|awo40|1dx80|j9xpo0|6u7w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
        offsets: "-480|-540",
        offsetIndices: "01010101010101010101010101010"
    }, {
        id: "Asia/Singapore",
        untils: "-xphpwd|eeb94d|4it32o|8n3jc|1v2p60|iy3o60|Infinity",
        offsets: "-415.4167|-420|-440|-450|-540|-480",
        offsetIndices: "0123435"
    }, {
        id: "Asia/Srednekolymsk",
        untils: "-nu1ogs|37a0os|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-614.8667|-600|-660|-720",
        offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
    }, {
        id: "Asia/Taipei",
        untils: "-gtzfk0|45slc0|c51c0|75bw0|a31g0|aaak0|9d440|7v980|awo40|7v980|awo40|7v980|awo40|7v980|7tk40|clmk0|7rpg0|b07w0|7rpg0|b07w0|7rpg0|9et80|9eys0|9et80|9d440|9et80|9d440|9et80|9d440|9et80|cjxg0|69uk0|ci2s0|69uk0|6its40|9et80|9d440|9et80|1yf9g0|4qak0|Infinity",
        offsets: "-480|-540",
        offsetIndices: "01010101010101010101010101010101010101010"
    }, {
        id: "Asia/Tashkent",
        untils: "-nu18tz|379yxz|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|Infinity",
        offsets: "-277.1833|-300|-360|-420",
        offsetIndices: "012323232323232323232321"
    }, {
        id: "Asia/Tbilisi",
        untils: "-nu14an|h4tjyn|ckinw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|9cvs0|9cyk0|9d440|9cyk0|9d440|ipzw0|9cyk0|9q2s0|tivw0|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|4ofw0|6hn40|7k800|Infinity",
        offsets: "-179.1833|-180|-240|-300",
        offsetIndices: "0123232323232323232323212121232323232323232323212"
    }, {
        id: "Asia/Tehran",
        untils: "-s6m6uw|fnolc0|gm3h4w|777y0|b07w0|3pes0|42c20|9cyk0|9gtg0|9kd80|5ja5g0|7avw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|1av440|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|Infinity",
        offsets: "-205.7333|-210|-240|-300|-270",
        offsetIndices: "00123214141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141"
    }, {
        id: "Asia/Tel_Aviv",
        untils: "-r50eig|bp54yg|19f3w0|7rv00|b02c0|7tk40|b07w0|8jhg0|a8lg0|8jhg0|a8ac0|t9s40|56vs0|35700|9b3w0|9gtg0|8jbw0|7tmw0|a6ig0|biyw0|8a5c0|9d1c0|902o0|7x6o0|e1eg0|4ofw0|dzxo0|4q500|doo40|64iw0|auqo0|7i500|8rfms0|51ek0|9q2s0|6u7w0|2khpg0|25s00|1weyo0|5reo0|bxmo0|7x3w0|cls40|5rbw0|bbhg0|7rjw0|asys0|7k580|c8tg0|6h980|ag040|7x3w0|asys0|8a2k0|asys0|8a2k0|ap9g0|80t80|ap9g0|7nuk0|b2840|80t80|9zc40|9iik0|9kis0|93p80|9mdg0|8qqk0|apf00|7x3w0|biw40|8zx40|9io40|8n180|9kis0|9vh80|8ulg0|9px80|9mdg0|8n180|9tuw0|9tmk0|8wg40|9gnw0|99es0|8qqk0|9zc40|9tmk0|8wg40|9gnw0|99es0|8qqk0|acas0|9gnw0|99es0|93p80|9mdg0|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|Infinity",
        offsets: "-140.6667|-120|-180|-240",
        offsetIndices: "012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Asia/Thimbu",
        untils: "-bojclo|kxymno|Infinity",
        offsets: "-358.6|-330|-360",
        offsetIndices: "012"
    }, {
        id: "Asia/Thimphu",
        untils: "-bojclo|kxymno|Infinity",
        offsets: "-358.6|-330|-360",
        offsetIndices: "012"
    }, {
        id: "Asia/Tokyo",
        untils: "-bb4900|6uao0|afxc0|8a5c0|c8qo0|6hc00|c8qo0|6hc00|Infinity",
        offsets: "-540|-600",
        offsetIndices: "010101010"
    }, {
        id: "Asia/Tomsk",
        untils: "-q3zbqf|5h7z2f|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|1leo0|97k40|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|tw040|Infinity",
        offsets: "-339.85|-360|-420|-480",
        offsetIndices: "0123232323232323232323212323232323232323232323212121212121212121212"
    }, {
        id: "Asia/Ujung_Pandang",
        untils: "-q3gzg0|6p5hc0|4u87w0|1w02k0|Infinity",
        offsets: "-477.6|-480|-540",
        offsetIndices: "00121"
    }, {
        id: "Asia/Ulaanbaatar",
        untils: "-xmcrsk|11sncck|2qk2k0|9et80|9eys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|1ckdo0|7x3w0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|4fio40|9ct00|9d9o0|9ct00|Infinity",
        offsets: "-427.5333|-420|-480|-540",
        offsetIndices: "012323232323232323232323232323232323232323232323232"
    }, {
        id: "Asia/Ulan_Bator",
        untils: "-xmcrsk|11sncck|2qk2k0|9et80|9eys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|1ckdo0|7x3w0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|4fio40|9ct00|9d9o0|9ct00|Infinity",
        offsets: "-427.5333|-420|-480|-540",
        offsetIndices: "012323232323232323232323232323232323232323232323232"
    }, {
        id: "Asia/Urumqi",
        untils: "-lx5pjw|Infinity",
        offsets: "-350.3333|-360",
        offsetIndices: "01"
    }, {
        id: "Asia/Ust-Nera",
        untils: "-q4cl6u|5hl2yu|qi27w0|9eno0|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|8ql00|1mlho0|Infinity",
        offsets: "-572.9|-480|-540|-720|-660|-600",
        offsetIndices: "012343434343434343434345434343434343434343434343434343434343434345"
    }, {
        id: "Asia/Vientiane",
        untils: "-pysda4|Infinity",
        offsets: "-402.0667|-420",
        offsetIndices: "01"
    }, {
        id: "Asia/Vladivostok",
        untils: "-oligf7|3yqvf7|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-527.5167|-540|-600|-660",
        offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
    }, {
        id: "Asia/Yakutsk",
        untils: "-q4cioy|5hl0gy|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-518.9667|-480|-540|-600",
        offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
    }, {
        id: "Asia/Yangon",
        untils: "-q3gv5b|bnjp3b|1kh520|Infinity",
        offsets: "-384.7833|-390|-540",
        offsetIndices: "0121"
    }, {
        id: "Asia/Yekaterinburg",
        untils: "-rx5hw9|1kybx4|5pfyv5|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-242.55|-225.0833|-240|-300|-360",
        offsetIndices: "012343434343434343434343234343434343434343434343434343434343434343"
    }, {
        id: "Asia/Yerevan",
        untils: "-nu148o|h4tjwo|ckinw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|11t180|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|Infinity",
        offsets: "-178|-180|-240|-300",
        offsetIndices: "0123232323232323232323212121212323232323232323232323232323232"
    }, {
        id: "Atlantic/Azores",
        untils: "-u9rbs0|2bufw0|6zxg0|66580|bq800|73k00|bodc0|71pc0|bq800|73k00|bq800|71pc0|bq800|1b2g00|9b6o0|saio0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|st1c0|8n400|9d1c0|9d1c0|sg2o0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|bitc0|9d1c0|9ew00|88ao0|25p80|5reo0|3lpg0|779c0|1sqk0|6uao0|38qs0|6uao0|25p80|6hc00|38qs0|6uao0|25p80|6hc00|38qs0|8a5c0|9d1c0|9d9o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|s3400|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|5qbjo0|9d1c0|9q000|9d1c0|9d1c0|9d440|9cyk0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9cyk0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9cyk0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "114.5333|120|60|0",
        offsetIndices: "01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323233323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Atlantic/Bermuda",
        untils: "-kvj2fu|n4pr3u|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "259.3|240|180",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Atlantic/Canary",
        untils: "-oytbtc|ctvupc|hhq7s0|905g0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "61.6|60|0|-60",
        offsetIndices: "01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Atlantic/Cape_Verde",
        untils: "-u9rbs0|g06lc0|1mn180|fpqwc0|Infinity",
        offsets: "94.0667|120|60",
        offsetIndices: "01212"
    }, {
        id: "Atlantic/Faeroe",
        untils: "-wcehew|127keuw|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "27.0667|0|-60",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Atlantic/Faroe",
        untils: "-wcehew|127keuw|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "27.0667|0|-60",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Atlantic/Jan_Mayen",
        untils: "-rzayo0|6qfs0|cgcqo0|15tsc0|7k800|9q000|9d1c0|9d1c0|9d1c0|9d1c0|70q5c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|b5uo0|7k800|7law00|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Atlantic/Madeira",
        untils: "-u9rek0|2bufw0|6zxg0|66580|bq800|73k00|bodc0|71pc0|bq800|73k00|bq800|71pc0|bq800|1b2g00|9b6o0|saio0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|st1c0|8n400|9d1c0|9d1c0|sg2o0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|bitc0|9d1c0|9ew00|88ao0|25p80|5reo0|3lpg0|779c0|1sqk0|6uao0|38qs0|6uao0|25p80|6hc00|38qs0|6uao0|25p80|6hc00|38qs0|8a5c0|9d1c0|9d9o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|s3400|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|5qbjo0|9d1c0|9q000|9d1c0|9d1c0|9d440|9cyk0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9cyk0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "67.6|60|0|-60",
        offsetIndices: "01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Atlantic/Reykjavik",
        untils: "-wcwx9c|4rpd9c|ci2s0|69uk0|du840|4xp80|du840|p7bw0|4w040|9bdzw0|9d6w0|64g40|cyl80|64dc0|clpc0|6hc00|bvs00|6uao0|bvs00|6uao0|bvs00|6uao0|c8qo0|6hc00|c8qo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|Infinity",
        offsets: "88|60|0",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "Atlantic/South_Georgia",
        untils: "Infinity",
        offsets: "120",
        offsetIndices: "0"
    }, {
        id: "Atlantic/St_Helena",
        untils: "-u9rgl4|Infinity",
        offsets: "16.1333|0",
        offsetIndices: "01"
    }, {
        id: "Atlantic/Stanley",
        untils: "-u63pac|dbvxqc|8zzw0|9q2s0|8zzw0|a31g0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|4xp80|l1pus0|7k580|b5rw0|77c40|biqk0|id6s0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|biqk0|77c40|biqk0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|biqk0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5xg0|77c40|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|bvp80|77c40|biqk0|77c40|biqk0|77c40|Infinity",
        offsets: "231.4|240|180|120",
        offsetIndices: "012121212121212323212121212121212121212121212121212121212121212121212"
    }, {
        id: "Australia/ACT",
        untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-600|-660",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/Adelaide",
        untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|6hc00|c8qo0|7k800|b5uo0|6uao0|c8qo0|779c0|bitc0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-570|-630",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/Brisbane",
        untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|97zuo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|Infinity",
        offsets: "-600|-660",
        offsetIndices: "01010101010101010"
    }, {
        id: "Australia/Broken_Hill",
        untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-570|-630",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/Canberra",
        untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-600|-660",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/Currie",
        untils: "-rsj4w0|8zzw0|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|b5uo0|7k800|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|bvs00|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x6o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|7x6o0|asw00|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-600|-660",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/Darwin",
        untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|Infinity",
        offsets: "-570|-630",
        offsetIndices: "010101010"
    }, {
        id: "Australia/Eucla",
        untils: "-rnstlc|49s2c|cxfms0|4h180|9d440|9cyk0|ghf1g0|6hc00|4ir9c0|6hc00|40r400|5eg00|7p9hc0|5reo0|b5uo0|7x6o0|asw00|7x6o0|Infinity",
        offsets: "-525|-585",
        offsetIndices: "0101010101010101010"
    }, {
        id: "Australia/Hobart",
        untils: "-rsj4w0|8zzw0|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|c9tms0|9d1c0|asw00|6uao0|bvs00|6uao0|bvs00|779c0|bvs00|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|b5uo0|7k800|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|bvs00|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x6o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|7x6o0|asw00|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-600|-660",
        offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/LHI",
        untils: "5tp880|c8uu0|6u7w0|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|777y0|b5w20|7k6m0|biuq0|7k6m0|biuq0|777y0|biuq0|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|7x5a0|b5w20|7k6m0|7x820|asum0|b5w20|7x5a0|asxe0|7x5a0|asxe0|7x5a0|b5w20|7k6m0|b5w20|7x5a0|asxe0|7k6m0|b5w20|8a3y0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9pym0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|Infinity",
        offsets: "-600|-630|-690|-660",
        offsetIndices: "0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313"
    }, {
        id: "Australia/Lindeman",
        untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|97zuo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|Infinity",
        offsets: "-600|-660",
        offsetIndices: "010101010101010101010"
    }, {
        id: "Australia/Lord_Howe",
        untils: "5tp880|c8uu0|6u7w0|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|777y0|b5w20|7k6m0|biuq0|7k6m0|biuq0|777y0|biuq0|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|7x5a0|b5w20|7k6m0|7x820|asum0|b5w20|7x5a0|asxe0|7x5a0|asxe0|7x5a0|b5w20|7k6m0|b5w20|7x5a0|asxe0|7k6m0|b5w20|8a3y0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9pym0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|Infinity",
        offsets: "-600|-630|-690|-660",
        offsetIndices: "0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313"
    }, {
        id: "Australia/Melbourne",
        untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|b5uo0|7x6o0|bitc0|779c0|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-600|-660",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/North",
        untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|Infinity",
        offsets: "-570|-630",
        offsetIndices: "010101010"
    }, {
        id: "Australia/NSW",
        untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-600|-660",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/Perth",
        untils: "-rnsric|49s2c|cxfms0|4h180|9d440|9cyk0|ghf1g0|6hc00|4ir9c0|6hc00|40r400|5eg00|7p9hc0|5reo0|b5uo0|7x6o0|asw00|7x6o0|Infinity",
        offsets: "-480|-540",
        offsetIndices: "0101010101010101010"
    }, {
        id: "Australia/Queensland",
        untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|97zuo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|Infinity",
        offsets: "-600|-660",
        offsetIndices: "01010101010101010"
    }, {
        id: "Australia/South",
        untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|6hc00|c8qo0|7k800|b5uo0|6uao0|c8qo0|779c0|bitc0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-570|-630",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/Sydney",
        untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-600|-660",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/Tasmania",
        untils: "-rsj4w0|8zzw0|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|c9tms0|9d1c0|asw00|6uao0|bvs00|6uao0|bvs00|779c0|bvs00|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|b5uo0|7k800|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|bvs00|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x6o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|7x6o0|asw00|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-600|-660",
        offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/Victoria",
        untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|b5uo0|7x6o0|bitc0|779c0|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-600|-660",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Australia/West",
        untils: "-rnsric|49s2c|cxfms0|4h180|9d440|9cyk0|ghf1g0|6hc00|4ir9c0|6hc00|40r400|5eg00|7p9hc0|5reo0|b5uo0|7x6o0|asw00|7x6o0|Infinity",
        offsets: "-480|-540",
        offsetIndices: "0101010101010101010"
    }, {
        id: "Australia/Yancowinna",
        untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-570|-630",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    }, {
        id: "Brazil/Acre",
        untils: "-t85fg0|99kak0|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|amves0|2t2t80|Infinity",
        offsets: "271.2|300|240",
        offsetIndices: "01212121212121212121212121212121"
    }, {
        id: "Brazil/DeNoronha",
        untils: "-t85lzw|99k8rw|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|514g40|7k580|biw40|cvw0|iq5g0|6h980|Infinity",
        offsets: "129.6667|120|60",
        offsetIndices: "0121212121212121212121212121212121212121"
    }, {
        id: "Brazil/East",
        untils: "-t85jd8|99k8x8|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5k02s0|6onw0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|cyqs0|64ak0|cls40|5rbw0|dbpg0|51ek0|dbpg0|6h980|c8tg0|6h980|c8tg0|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|cls40|64ak0|dfes0|5nmk0|c8tg0|6h980|dbpg0|5rbw0|bvus0|6h980|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6u7w0|c8tg0|64ak0|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|dbpg0|5ed80|Infinity",
        offsets: "186.4667|180|120",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Brazil/West",
        untils: "-t85gvw|99k97w|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|2yy2s0|6h980|Infinity",
        offsets: "240.0667|240|180",
        offsetIndices: "01212121212121212121212121212121"
    }, {
        id: "Canada/Atlantic",
        untils: "-z94k80|777go0|9et80|st9o0|a2vw0|ssyk0|5rbw0|cv1g0|69uk0|c6ys0|6kyk0|ci2s0|67zw0|ci2s0|6w2k0|bu040|7lzw0|bu040|66580|bu040|7lzw0|bu040|64ak0|cls40|5v180|cv1g0|6j3w0|c6ys0|79180|b42s0|7lzw0|b42s0|7yyk0|bu040|64ak0|dbpg0|66580|cls40|5ed80|bu040|7lzw0|b42s0|7lzw0|cjxg0|66580|bh1g0|7lzw0|b42s0|7lzw0|6uj00|1tzdw0|2dnc0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|tw040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|tw040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|1cm2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "254.4|240|180",
        offsetIndices: "0121212121212121212121212121212121212121212121212122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Canada/Central",
        untils: "-s0s7c0|7k580|tj700|a2vw0|9ok840|6u7w0|2a5hg0|1tz8c0|2dsw0|biw40|7x3w0|a31g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b7s40|7tek0|autg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9cyk0|9d440|7x3w0|1cm2s0|7k580|1cm2s0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300",
        offsetIndices: "010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Canada/Eastern",
        untils: "-qzoxw0|a2vw0|7yx60|aqzy0|9q8c0|7jzo0|bw0c0|6bp80|cedg0|6h980|c8tg0|6h980|bvus0|776k0|biw40|776k0|biw40|776k0|biw40|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|xjeo0|1tzb40|2dq40|asys0|7x3w0|ast80|7x3w0|asys0|7x3w0|asys0|b5rw0|7xf00|ast80|7x9g0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "300|240",
        offsetIndices: "01010101010101010101010101010101010101010101011101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Canada/Mountain",
        untils: "-x1yazk|629ink|a2vw0|8n6s0|29ek0|h6lg0|9px80|905g0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|9l0g40|1tz5k0|2dvo0|tj1g0|7x3w0|ctzk40|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "453.8667|420|360",
        offsetIndices: "0121212121212122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Canada/Newfoundland",
        untils: "-ris3ck|8bx80|ar440|a2vw0|9tjs0|53980|dkys0|9cyk0|9d440|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|9cyk0|9d440|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|7tmw0|1wfuk|8zzw0|a3480|7k580|b5xg0|7k580|b5xg0|7k580|biw40|776k0|biw40|7k580|b5xg0|7k580|b5xg0|1pb260|2dly0|biw40|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|biw40|7k580|ag040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a2lo|afuk0|8a840|asqg0|7xc80|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8tec|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "210.8667|150.8667|210|150|90",
        offsetIndices: "01010101010101010101010101010101010102323232323232323323232323232323232323232323232323232323232323232323232323232323232323232323232323232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Canada/Pacific",
        untils: "-qzopk0|a2vw0|c5jxg0|1tz2s0|2dyg0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "480|420",
        offsetIndices: "0101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Canada/Saskatchewan",
        untils: "-xkq9yc|6l1hmc|a2vw0|60enw0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|1b6840|9cyk0|9d440|8zzw0|9q2s0|9cyk0|9q2s0|9cyk0|9d440|9cyk0|66gc0|1tz5k0|2dvo0|a31g0|9cyk0|a31g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|tj1g0|9cyk0|9d440|Infinity",
        offsets: "418.6|420|360",
        offsetIndices: "012121212121212121212121221212121212121212121212121212"
    }, {
        id: "Canada/Yukon",
        untils: "-qzoms0|a2vw0|asys0|882c0|bmiwc0|1tz000|2e180|a7n3w0|9q000|tiyo0|6qp440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|Infinity",
        offsets: "540|480|420",
        offsetIndices: "01010110201212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "CET",
        untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|8l9c0|ggp1c0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Chile/Continental",
        untils: "-vauawq|3dlssq|157b7a|f4e0q|49hzba|aye0q|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|534ik0|351g0|229zw0|2gt80|awo40|2mg00|b73400|7k580|c8tg0|6h980|a31g0|7x3w0|asys0|7x3w0|b5xg0|7k580|ag040|8a2k0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|e1h80|4olg0|e1h80|4olg0|c8nw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|Infinity",
        offsets: "282.7667|300|240|180",
        offsetIndices: "010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "Chile/EasterIsland",
        untils: "-jhfaew|ivmeuw|7k580|c8tg0|6h980|a31g0|7x3w0|asys0|7x3w0|b5xg0|7k580|ag040|8a2k0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|iq2o0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|e1h80|4olg0|e1h80|4olg0|c8nw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|Infinity",
        offsets: "437.4667|420|360|300",
        offsetIndices: "012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "CST6CDT",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300",
        offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Cuba",
        untils: "-n7762o|1icfyo|69uk0|62s040|4ofw0|e1ms0|51ek0|e1ms0|4ofw0|1fhs40|4ofw0|e1ms0|4ofw0|9s9k40|67zw0|cedg0|6h980|9o840|7yyk0|b5xg0|7k580|bvus0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|8a2k0|ag040|8bx80|ae5g0|8drw0|acas0|9cyk0|9d440|9px80|905g0|9px80|9q2s0|7x3w0|8a840|ast80|7x9g0|ast80|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|8a2k0|ag040|8a2k0|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|905g0|a2vw0|905g0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|8n400|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|7x6o0|1cm000|6uao0|bvs00|779c0|bitc0|6uao0|bvs00|779c0|bvs00|779c0|c8qo0|779c0|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|Infinity",
        offsets: "329.6|300|240",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "EET",
        untils: "3s9ms0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-120|-180",
        offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Egypt",
        untils: "-fdls80|40d80|a31g0|7x3w0|a4w40|aqyk0|80ys0|b07w0|7tk40|b07w0|8jhg0|a8fw0|60go40|7el80|awo40|7v980|awqw0|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7tk40|ayd80|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|f9x80|3i040|eluk0|462s0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|b5rw0|7m5g0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|aqvs0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7k580|b5xg0|6u7w0|bvus0|6h980|c8tg0|64ak0|cyqs0|5anw0|1jms0|12t80|1w22s0|25p80|1sw40|2vmk0|Infinity",
        offsets: "-120|-180",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Eire",
        untils: "-rzcmlr|6uao0|9pytr|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|3g8800|8a5c0|bvs00|8n400|a2yo0|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "25.35|-34.65|0|-60",
        offsetIndices: "01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "EST",
        untils: "Infinity",
        offsets: "300",
        offsetIndices: "0"
    }, {
        id: "EST5EDT",
        untils: "-r0ev80|ast80|7x9g0|ast80|bmtus0|1tzb40|2dq40|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "300|240",
        offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Etc/GMT-0",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-1",
        untils: "Infinity",
        offsets: "-60",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-10",
        untils: "Infinity",
        offsets: "-600",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-11",
        untils: "Infinity",
        offsets: "-660",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-12",
        untils: "Infinity",
        offsets: "-720",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-13",
        untils: "Infinity",
        offsets: "-780",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-14",
        untils: "Infinity",
        offsets: "-840",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-2",
        untils: "Infinity",
        offsets: "-120",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-3",
        untils: "Infinity",
        offsets: "-180",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-4",
        untils: "Infinity",
        offsets: "-240",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-5",
        untils: "Infinity",
        offsets: "-300",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-6",
        untils: "Infinity",
        offsets: "-360",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-7",
        untils: "Infinity",
        offsets: "-420",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-8",
        untils: "Infinity",
        offsets: "-480",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT-9",
        untils: "Infinity",
        offsets: "-540",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+0",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+1",
        untils: "Infinity",
        offsets: "60",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+10",
        untils: "Infinity",
        offsets: "600",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+11",
        untils: "Infinity",
        offsets: "660",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+12",
        untils: "Infinity",
        offsets: "720",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+2",
        untils: "Infinity",
        offsets: "120",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+3",
        untils: "Infinity",
        offsets: "180",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+4",
        untils: "Infinity",
        offsets: "240",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+5",
        untils: "Infinity",
        offsets: "300",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+6",
        untils: "Infinity",
        offsets: "360",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+7",
        untils: "Infinity",
        offsets: "420",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+8",
        untils: "Infinity",
        offsets: "480",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT+9",
        untils: "Infinity",
        offsets: "540",
        offsetIndices: "0"
    }, {
        id: "Etc/GMT0",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Etc/Greenwich",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Etc/UCT",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Etc/Universal",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Etc/UTC",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Etc/Zulu",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Europe/Amsterdam",
        untils: "-s0dvkk|7v980|a51o0|7x6o0|a2yo0|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9b6o0|a2yo0|c51c0|6l1c0|902o0|9q000|ci000|682o0|bgyo0|79400|bitc0|779c0|bmio0|7gio0|bbeo0|7eo00|bd9c0|7ctc0|bf400|7ayo0|bvs00|6uao0|bko00|7idc0|b9k00|7gio0|bbeo0|7eo00|bf400|7ayo0|btxc0|21uc0|4uaz8|bitc0|779c0|bko00|7idc0|bd3s0|1aarpc|7k800|9q000|9d1c0|9d1c0|9d1c0|8l9c0|ggp1c0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-19.5333|-79.5333|-80|-20|-120|-60",
        offsetIndices: "010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545"
    }, {
        id: "Europe/Andorra",
        untils: "-c4xmo0|k3ctg0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Astrakhan",
        untils: "-nu2zkc|37bv8c|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9q000|9d1c0|s3400|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|qnc40|Infinity",
        offsets: "-192.2|-180|-240|-300",
        offsetIndices: "012323232323232323212121212121212121212121212121212121212121212"
    }, {
        id: "Europe/Athens",
        untils: "-rvv0cg|8bjasg|2vmk0|4hiw40|16ik0|scog0|7lx40|9o2k0|9eys0|4atzw0|6djw0|bplus0|bq800|71uw0|9d1c0|902o0|91xc0|9o5c0|905g0|9qgo0|9akg0|9iik0|99980|9dcg0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-94.8667|-120|-180|-60",
        offsetIndices: "012121313121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Belfast",
        untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Belgrade",
        untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Berlin",
        untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|2o7w0|6bs00|2txg0|7k800|91xc0|9b9g0|1sqk0|2inw0|51k40|a2yo0|8n400|9q000|902o0|fx91c0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120|-180",
        offsetIndices: "01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Bratislava",
        untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|9d1c0|b5uo0|7vc00|2vs40|4bk00|2vmk0|8n400|a2yo0|8n400|9o5c0|91xc0|fe6000|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120|0",
        offsetIndices: "01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Brussels",
        untils: "-ss5uo0|rrx80|7vc00|a4yw0|7x6o0|asw00|7x6o0|2wh40|5omo0|b5uo0|6uao0|cyo00|7ayo0|bko00|7rmo0|a2yo0|a2yo0|8n400|902o0|9q000|9d1c0|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|90b00|a2yo0|8n400|9q000|902o0|a2yo0|8n400|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|4deo0|1a36k0|7k800|9q000|9d1c0|8l9c0|a4tc0|8l9c0|clpc0|79400|fwu800|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "0121212101010101010101010101010101010101010101010101212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Bucharest",
        untils: "-k29zi0|fj8m0|6w5c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|kp0dc0|6h980|9q000|905g0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9cvs0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9cyk0|9d440|9cyk0|9q2s0|ast80|7xhs0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-104.4|-120|-180",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Budapest",
        untils: "-s0e080|7ves0|a4yw0|7x6o0|a31g0|8n180|autg0|bgvw0|b5jeg0|th9k0|7k800|9q000|9d1c0|9d1c0|awd00|9ew00|7q0c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|a4tc0|9q000|1va2g0|6u7w0|bxpg0|6u7w0|cjxg0|64ak0|cluw0|64g40|br3ek0|905g0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Busingen",
        untils: "-eyh6o0|7x6o0|asw00|7x6o0|k2zus0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Chisinau",
        untils: "-r2p1bo|70f1to|fj8m0|6w5c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|geqo0|ha580|oc8g0|7k800|9q000|9d1c0|7cl00|j3pbw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|25p80|7kdk0|9d1c0|9d1c0|9cvs0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|ast80|7xf00|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-115|-104.4|-120|-180|-60|-240",
        offsetIndices: "012323232323232323232424235353535353535353535323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Europe/Copenhagen",
        untils: "-rzo2w0|75bw0|cbs2w0|1aco80|7k800|9q000|9d1c0|9d1c0|9d1c0|6y000|dbmo0|6bs00|clpc0|51hc0|e1k00|4oio0|giutc0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Dublin",
        untils: "-rzcmlr|6uao0|9pytr|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|3g8800|8a5c0|bvs00|8n400|a2yo0|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "25.35|-34.65|0|-60",
        offsetIndices: "01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Europe/Gibraltar",
        untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|d0tp80|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "010101010101010101010101010101010101010101010101012121212121010121010101010101010101012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Guernsey",
        untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Helsinki",
        untils: "-peghyd|ax3tqd|9gqo0|k31s80|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-99.8167|-120|-180",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Isle_of_Man",
        untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Istanbul",
        untils: "-ux9xew|2wvx6w|7v980|1tjc40|aunw0|88dg0|9et80|8yas0|a2vw0|tzpg0|79180|awo40|7v980|7p4040|4zjw0|2vs40|f4d80|9vms0|1u5ek0|c5440|69uk0|acas0|8n180|a31g0|8n180|9q2s0|8zzw0|a31g0|8zzw0|a31g0|8n180|5md9g0|o9zw0|a6qs0|75bw0|4iwyw0|7x6o0|7kas0|b5rw0|75hg0|bkl80|77c40|biqk0|7x9g0|a2vw0|8n6s0|4iqc0|2nkw80|38l80|kdes0|8qtc0|8a5c0|9ew00|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|902o0|9q000|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7kdk0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7m2o0|b4000|7k800|b5uo0|7x6o0|asw00|7z1c0|ar1c0|7x6o0|bitc0|779c0|8fe80|Infinity",
        offsets: "-116.9333|-120|-180|-240",
        offsetIndices: "0121212121212121212121212121212121212121212121223212121212121212121212121212121212121212121212121212121212121212122"
    }, {
        id: "Europe/Jersey",
        untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Kaliningrad",
        untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|el00|z6o0|9kd80|82tg0|i9avw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-60|-120|-180|-240",
        offsetIndices: "01010101010101121232323232323232322121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Kiev",
        untils: "-nu11ng|37a03g|5vd6k0|kzv40|7k800|9q000|1oyg0|jipzs0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|51ek0|neqw0|9cvs0|9cyk0|9d440|9cyk0|9d440|9cyk0|9dcg0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-122.0667|-120|-180|-60|-240",
        offsetIndices: "0121313242424242424242424242121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Kirov",
        untils: "-qcx400|5q5zo0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9q000|9d1c0|s3400|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-198.8|-180|-240|-300",
        offsetIndices: "01232323232323232321212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Lisbon",
        untils: "-u9rhc0|2bufw0|6zxg0|66580|bq800|73k00|bodc0|71pc0|bq800|73k00|bq800|71pc0|bq800|1b2g00|9b6o0|saio0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|st1c0|8n400|9d1c0|9d1c0|sg2o0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|bitc0|9d1c0|9ew00|88ao0|25p80|5reo0|3lpg0|779c0|1sqk0|6uao0|38qs0|6uao0|25p80|6hc00|38qs0|6uao0|25p80|6hc00|38qs0|8a5c0|9d1c0|9d9o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|s3400|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|5gyl40|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d440|9cyk0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9cyk0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "36.75|0|-60|-120",
        offsetIndices: "012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121212121212121212121212121212121212122323232212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Ljubljana",
        untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/London",
        untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Luxembourg",
        untils: "-y89550|68l290|75hg0|ast80|796s0|at1k0|7x6o0|3lh40|4zmo0|b6300|6u2c0|cytk0|7at40|bktk0|7rh40|a31g0|a2vw0|8n9k0|8zx40|9q2s0|9et80|9b9g0|a2vw0|8n6s0|9px80|905g0|a2vw0|905g0|a2vw0|8ncc0|9q000|902o0|a2yo0|8n400|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|42ao0|1aeak0|7k800|9q000|9d1c0|8n400|a2yo0|8l9c0|clpc0|79400|fwu800|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-24.6|-60|-120|0",
        offsetIndices: "0121212131313131313131313131313131313131313131313131212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Madrid",
        untils: "-qzlus0|8yas0|9cyk0|9eys0|2d2vw0|8sqs0|ssyk0|8n6s0|9px80|905g0|a2yo0|902o0|a2vw0|8n6s0|40lh80|5k2s0|9cyk0|1frw0|7z1c0|j1c80|8a2k0|13yt80|685g0|brzw0|8n6s0|a2vw0|8n6s0|a2vw0|8n6s0|a2vw0|8n6s0|1clx80|7x9g0|cswik0|905g0|9px80|905g0|8zzw0|9d440|9px80|905g0|9q5k0|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "010101010101010101210121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Malta",
        untils: "-rymys0|64ak0|9d440|9et80|88dg0|aunw0|7ig40|b5rw0|8n6s0|9cyk0|aau2s0|18r9k0|7k800|9q000|9b6o0|8n400|a4tc0|8j940|9f1k0|afxc0|89zs0|afxc0|7kdk0|b5uo0|979rs0|6h980|cls40|64dc0|clpc0|64dc0|cyo00|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|9b6o0|9d1c0|ahs00|7m2o0|b45k0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|a4w40|8y580|9q2s0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Mariehamn",
        untils: "-peghyd|ax3tqd|9gqo0|k31s80|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-99.8167|-120|-180",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Minsk",
        untils: "-nu113c|379zjc|5r1mk0|pbf40|7k800|9q000|9d1c0|4oac0|j6dmk0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|sg2o0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|Infinity",
        offsets: "-110|-120|-180|-60|-240",
        offsetIndices: "01213131242424242424242424221212121212121212121212121212121212121212"
    }, {
        id: "Europe/Monaco",
        untils: "-uozn3l|2qx1nl|5luo0|8y800|a4tc0|7vc00|auqo0|7idc0|b7pc0|6sg00|cyo00|7ayo0|bko00|7rmo0|a2yo0|bvs00|6uao0|902o0|9q000|9d1c0|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51po0|mdbo0|7x3w0|7x9g0|c8w80|7k800|9q000|9d1c0|9nzs0|922w0|8l9c0|fxlx80|9cyk0|9q5k0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-9.35|0|-60|-120",
        offsetIndices: "01212121212121212121212121212121212121212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Europe/Moscow",
        untils: "-rx5dmh|ipzua|97hc0|7yyk0|5i840|d9p80|1jwk7|2cvk0|s8o00|1qvw0|8fpc0|1jms0|is040|412as0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d440|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-150.2833|-151.3167|-211.3167|-271.3167|-240|-180|-300|-120",
        offsetIndices: "012132345464575454545454545454545455754545454545454545454545454545454545454545"
    }, {
        id: "Europe/Nicosia",
        untils: "-p4bq6g|rvhxyg|9cyk0|b42s0|7nuk0|8yas0|8zzw0|9q2s0|9et80|9b9g0|9cyk0|9q2s0|8zzw0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|at4c0|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-133.4667|-120|-180",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Oslo",
        untils: "-rzayo0|6qfs0|cgcqo0|15tsc0|7k800|9q000|9d1c0|9d1c0|9d1c0|9d1c0|70q5c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|b5uo0|7k800|7law00|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Paris",
        untils: "-uozn1x|2qx1lx|5luo0|8y800|a4tc0|7vc00|auqo0|7idc0|b7pc0|6sg00|cyo00|7ayo0|bko00|7rmo0|a2yo0|bvs00|6uao0|902o0|9q000|9d1c0|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51po0|5p8w0|18rcc0|7k800|9q000|9d1c0|7efo0|29k40|922w0|8l9c0|fxlx80|9cyk0|9q5k0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-9.35|0|-60|-120",
        offsetIndices: "0121212121212121212121212121212121212121212121212123232332323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Europe/Podgorica",
        untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Prague",
        untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|9d1c0|b5uo0|7vc00|2vs40|4bk00|2vmk0|8n400|a2yo0|8n400|9o5c0|91xc0|fe6000|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120|0",
        offsetIndices: "01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Riga",
        untils: "-qznlky|7x6o0|a4tc0|2mg00|3myns0|7fhlky|gz180|p5v40|7k800|9q000|9d1c0|9d1c0|k7s0|j14ns0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d440|asw00|7x6o0|asw00|7x6o0|b5uo0|qaao0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-96.5667|-156.5667|-120|-180|-60|-240",
        offsetIndices: "010102324242435353535353535353323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Europe/Rome",
        untils: "-rymys0|64ak0|9d440|9et80|88dg0|aunw0|7ig40|b5rw0|8n6s0|9cyk0|aau2s0|18r9k0|7k800|9q000|9d1c0|8l9c0|a4tc0|8j940|9f1k0|afxc0|89zs0|afxc0|7kdk0|b5uo0|979rs0|6h980|cls40|64dc0|clpc0|64dc0|cyo00|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|clpc0|64dc0|c8qo0|6hc00|clpc0|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|c8qo0|6hc00|9q5k0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Samara",
        untils: "-qcx400|5q5zo0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9q000|jt1g0|89zs0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|j3440|7k800|Infinity",
        offsets: "-200.3333|-180|-240|-300",
        offsetIndices: "0123232323232323232121232323232323232323232323232323232323212"
    }, {
        id: "Europe/San_Marino",
        untils: "-rymys0|64ak0|9d440|9et80|88dg0|aunw0|7ig40|b5rw0|8n6s0|9cyk0|aau2s0|18r9k0|7k800|9q000|9d1c0|8l9c0|a4tc0|8j940|9f1k0|afxc0|89zs0|afxc0|7kdk0|b5uo0|979rs0|6h980|cls40|64dc0|clpc0|64dc0|cyo00|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|clpc0|64dc0|c8qo0|6hc00|clpc0|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|c8qo0|6hc00|9q5k0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Sarajevo",
        untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Saratov",
        untils: "-qcx400|5q5zo0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|s3400|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|13m040|Infinity",
        offsets: "-184.3|-180|-240|-300",
        offsetIndices: "012323232323232321212121212121212121212121212121212121212121212"
    }, {
        id: "Europe/Simferopol",
        untils: "-nu12ao|37a0qo|5xiyk0|iu340|7k800|9q000|9d1c0|iac0|jajmk0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|eeio0|wrjw0|9cyk0|9d440|9cyk0|9d440|1sqk0|7k580|9d440|9cyk0|9q2s0|at4c0|7x9g0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x3w0|asqg0|Infinity",
        offsets: "-136|-120|-180|-60|-240",
        offsetIndices: "012131312424242424242424242121212424242212121212121212121212121212121212142"
    }, {
        id: "Europe/Skopje",
        untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Sofia",
        untils: "-e6dzw0|7k800|9q000|9d1c0|9d1c0|9d440|hqq240|9eys0|9o2k0|92040|9o2k0|90880|9pug0|90b00|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9cvs0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|ast80|7xhs0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-120|-60|-180",
        offsetIndices: "01010102020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020"
    }, {
        id: "Europe/Stockholm",
        untils: "-rzo2w0|75hg0|x5bew0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Tallinn",
        untils: "-r3exx0|3re10|7x6o0|et6g0|ygov0|a1zgd0|ktx80|l94g0|7k800|9q000|9d1c0|8uac0|j27mk0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asys0|7x6o0|b5uo0|19dc00|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-99|-60|-120|-180|-240",
        offsetIndices: "012102321212343434343434343433232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Europe/Tirane",
        untils: "-t85vo8|dt2gw8|18pew0|7k800|m800|g7ot40|7rjw0|autg0|7x3w0|ayis0|7x3w0|b5xg0|7k580|b42s0|7lzw0|b42s0|7lzw0|b42s0|7x3w0|ahus0|7x3w0|b5xg0|7x3w0|a4w40|8jbw0|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-79.3333|-60|-120",
        offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Tiraspol",
        untils: "-r2p1bo|70f1to|fj8m0|6w5c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|geqo0|ha580|oc8g0|7k800|9q000|9d1c0|7cl00|j3pbw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|25p80|7kdk0|9d1c0|9d1c0|9cvs0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|ast80|7xf00|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-115|-104.4|-120|-180|-60|-240",
        offsetIndices: "012323232323232323232424235353535353535353535323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "Europe/Ulyanovsk",
        untils: "-qcx400|5q5zo0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|qnc40|Infinity",
        offsets: "-193.6|-180|-240|-300|-120",
        offsetIndices: "01232323232323232321214121212121212121212121212121212121212121212"
    }, {
        id: "Europe/Uzhgorod",
        untils: "-fizzw0|1cm000|7k800|9q000|9d1c0|al900|cnms0|int140|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|eeio0|e1sc0|iprk0|9cyk0|9d440|9cyk0|9d440|9cyk0|9dcg0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120|-180|-240",
        offsetIndices: "010101023232323232323232320121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Vaduz",
        untils: "-eyh6o0|7x6o0|asw00|7x6o0|k2zus0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Vatican",
        untils: "-rymys0|64ak0|9d440|9et80|88dg0|aunw0|7ig40|b5rw0|8n6s0|9cyk0|aau2s0|18r9k0|7k800|9q000|9d1c0|8l9c0|a4tc0|8j940|9f1k0|afxc0|89zs0|afxc0|7kdk0|b5uo0|979rs0|6h980|cls40|64dc0|clpc0|64dc0|cyo00|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|clpc0|64dc0|c8qo0|6hc00|clpc0|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|c8qo0|6hc00|9q5k0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Vienna",
        untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|t6000|8a5c0|a7a800|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|iio0|ivmo0|91xc0|9b6o0|9d1c0|a2yo0|8n400|gfyyg0|8zzw0|9d9o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Vilnius",
        untils: "-rns980|1g224o|e75nc|4kqk0|acbs40|gpp40|pits0|7k800|9q000|9d1c0|65zo0|j4vx80|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x9g0|asw00|7x6o0|b5uo0|1s3eo0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-84|-95.6|-60|-120|-180|-240",
        offsetIndices: "012324323234545454545454545443434343434343434332334343434343434343434343434343434343434343434343434343434343434343434343"
    }, {
        id: "Europe/Volgograd",
        untils: "-q3cw84|5glrw4|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|s3400|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|239c40|Infinity",
        offsets: "-177.6667|-180|-240|-300",
        offsetIndices: "012323232323232321212121212121212121212121212121212121212121212"
    }, {
        id: "Europe/Warsaw",
        untils: "-se9yk0|dvyc0|7ves0|a4yw0|7x6o0|asw00|7x6o0|aunw0|7x6o0|1evbs0|9fcwc0|18cao0|7k800|9q000|9d1c0|9gnw0|an980|9kd80|8fs40|922w0|ar1c0|7x6o0|a2yo0|8n400|9q000|902o0|4013w0|64dc0|9d1c0|9d1c0|clpc0|6hc00|9d1c0|9d1c0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|clpc0|64dc0|6j4tc0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-84|-60|-120|-180",
        offsetIndices: "012121223212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Zagreb",
        untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Europe/Zaporozhye",
        untils: "-nu12hc|37a0xc|5u1180|mc0g0|7k800|9q000|12qg0|jjc7s0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9cvs0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9dcg0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-140|-120|-180|-60|-240",
        offsetIndices: "01213132424242424242424242422121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Europe/Zurich",
        untils: "-eyh6o0|7x6o0|asw00|7x6o0|k2zus0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "GB-Eire",
        untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "GB",
        untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60|-120",
        offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "GMT-0",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "GMT",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "GMT+0",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "GMT0",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Greenwich",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Hongkong",
        untils: "-y0i0s0|j44dk0|5k000|4d4y0|2195i0|7x3w0|bj320|6uao0|bvs00|7x6o0|9d1c0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|ast80|77c40|biqk0|77c40|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|bvp80|6udg0|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|8n6s0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9cyk0|1c9440|8a2k0|Infinity",
        offsets: "-456.7|-480|-540|-510",
        offsetIndices: "0123212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "HST",
        untils: "Infinity",
        offsets: "600",
        offsetIndices: "0"
    }, {
        id: "Iceland",
        untils: "-wcwx9c|4rpd9c|ci2s0|69uk0|du840|4xp80|du840|p7bw0|4w040|9bdzw0|9d6w0|64g40|cyl80|64dc0|clpc0|6hc00|bvs00|6uao0|bvs00|6uao0|bvs00|6uao0|c8qo0|6hc00|c8qo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|Infinity",
        offsets: "88|60|0",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "Indian/Antananarivo",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Indian/Chagos",
        untils: "-wvpc2s|1ag64us|Infinity",
        offsets: "-289.6667|-300|-360",
        offsetIndices: "012"
    }, {
        id: "Indian/Christmas",
        untils: "Infinity",
        offsets: "-420",
        offsetIndices: "0"
    }, {
        id: "Indian/Cocos",
        untils: "Infinity",
        offsets: "-390",
        offsetIndices: "0"
    }, {
        id: "Indian/Comoro",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Indian/Kerguelen",
        untils: "-afrs00|Infinity",
        offsets: "0|-300",
        offsetIndices: "01"
    }, {
        id: "Indian/Mahe",
        untils: "-x6pjlo|Infinity",
        offsets: "-221.8|-240",
        offsetIndices: "01"
    }, {
        id: "Indian/Maldives",
        untils: "-57x6y0|Infinity",
        offsets: "-294|-300",
        offsetIndices: "01"
    }, {
        id: "Indian/Mauritius",
        untils: "-wvp9bc|13jnu7c|8bx80|dd0wc0|7x3w0|Infinity",
        offsets: "-230|-240|-300",
        offsetIndices: "012121"
    }, {
        id: "Indian/Mayotte",
        untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
        offsets: "-147.2667|-180|-150|-165",
        offsetIndices: "01231"
    }, {
        id: "Indian/Reunion",
        untils: "-uks29s|Infinity",
        offsets: "-221.8667|-240",
        offsetIndices: "01"
    }, {
        id: "Iran",
        untils: "-s6m6uw|fnolc0|gm3h4w|777y0|b07w0|3pes0|42c20|9cyk0|9gtg0|9kd80|5ja5g0|7avw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|1av440|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|Infinity",
        offsets: "-205.7333|-210|-240|-300|-270",
        offsetIndices: "00123214141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141"
    }, {
        id: "Israel",
        untils: "-r50eig|bp54yg|19f3w0|7rv00|b02c0|7tk40|b07w0|8jhg0|a8lg0|8jhg0|a8ac0|t9s40|56vs0|35700|9b3w0|9gtg0|8jbw0|7tmw0|a6ig0|biyw0|8a5c0|9d1c0|902o0|7x6o0|e1eg0|4ofw0|dzxo0|4q500|doo40|64iw0|auqo0|7i500|8rfms0|51ek0|9q2s0|6u7w0|2khpg0|25s00|1weyo0|5reo0|bxmo0|7x3w0|cls40|5rbw0|bbhg0|7rjw0|asys0|7k580|c8tg0|6h980|ag040|7x3w0|asys0|8a2k0|asys0|8a2k0|ap9g0|80t80|ap9g0|7nuk0|b2840|80t80|9zc40|9iik0|9kis0|93p80|9mdg0|8qqk0|apf00|7x3w0|biw40|8zx40|9io40|8n180|9kis0|9vh80|8ulg0|9px80|9mdg0|8n180|9tuw0|9tmk0|8wg40|9gnw0|99es0|8qqk0|9zc40|9tmk0|8wg40|9gnw0|99es0|8qqk0|acas0|9gnw0|99es0|93p80|9mdg0|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|Infinity",
        offsets: "-140.6667|-120|-180|-240",
        offsetIndices: "012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Jamaica",
        untils: "-u85og2|wbl182|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|Infinity",
        offsets: "307.1667|300|240",
        offsetIndices: "0121212121212121212121"
    }, {
        id: "Japan",
        untils: "-bb4900|6uao0|afxc0|8a5c0|c8qo0|6hc00|c8qo0|6hc00|Infinity",
        offsets: "-540|-600",
        offsetIndices: "010101010"
    }, {
        id: "Kwajalein",
        untils: "-h817w0|27sas0|1hjus0|ddxug0|cgv6k0|Infinity",
        offsets: "-660|-600|-540|720|-720",
        offsetIndices: "012034"
    }, {
        id: "Libya",
        untils: "-q3gfrw|gl6ajw|422c0|xado0|4bbo0|wrpg0|4s580|1kdpg0|c05bw0|4mqs0|9et80|9d440|9et80|9eys0|9et80|9mdg0|95jw0|9io40|9cyk0|99es0|9et80|9eys0|9et80|9d440|9et80|b2840|3cf3w0|9kis0|9et80|7vqyw0|75eo0|asw00|Infinity",
        offsets: "-52.7333|-60|-120",
        offsetIndices: "012121212121212121212121212122122"
    }, {
        id: "MET",
        untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|8l9c0|ggp1c0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-60|-120",
        offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Mexico/BajaNorte",
        untils: "-p1u1s0|11jrw0|1sns00|1sgdc0|71s40|9cyk0|5iidg0|1q6700|4lfk0|190g40|eluk0|2r4o80|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|84qys0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "468.0667|420|480",
        offsetIndices: "012121211212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "Mexico/BajaSur",
        untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|591h80|3ie2s0|axvpg0|dpgw40|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
        offsets: "425.6667|420|360|480",
        offsetIndices: "0121212131212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Mexico/General",
        untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|3knek0|776k0|rf440|5t6k0|1evk40|71mk0|30p1g0|8n180|nufxo0|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
        offsets: "396.6|420|360|300",
        offsetIndices: "012121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "MST",
        untils: "Infinity",
        offsets: "420",
        offsetIndices: "0"
    }, {
        id: "MST7MDT",
        untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|1tz5k0|2dvo0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "420|360",
        offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Navajo",
        untils: "-r0epo0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|2vmk0|ataw40|1tz5k0|2dvo0|a7n9g0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "420|360",
        offsetIndices: "01010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "NZ-CHAT",
        untils: "-ciya10|f1tq90|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
        offsets: "-735|-765|-825",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "NZ",
        untils: "-m01p20|64ak0|biw40|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|8a3y0|afyq0|8a3y0|afyq0|afvy0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|b5ta0|7k9e0|b5ta0|7x820|hsl2m0|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
        offsets: "-690|-750|-720|-780",
        offsetIndices: "01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "Pacific/Apia",
        untils: "-usiiv4|kcrmt4|vp3la0|9odo0|902o0|4zbk0|4qog0|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
        offsets: "686.9333|690|660|600|-840|-780",
        offsetIndices: "01232345454545454545454545454545454545454545454545454545454"
    }, {
        id: "Pacific/Auckland",
        untils: "-m01p20|64ak0|biw40|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|8a3y0|afyq0|8a3y0|afyq0|afvy0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|b5ta0|7k9e0|b5ta0|7x820|hsl2m0|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
        offsets: "-690|-750|-720|-780",
        offsetIndices: "01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "Pacific/Bougainville",
        untils: "-ecsh40|1n05g0|1071c40|Infinity",
        offsets: "-600|-540|-660",
        offsetIndices: "0102"
    }, {
        id: "Pacific/Chatham",
        untils: "-ciya10|f1tq90|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
        offsets: "-735|-765|-825",
        offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
    }, {
        id: "Pacific/Chuuk",
        untils: "-su4zs0|29hes0|bkenw0|29fk40|Infinity",
        offsets: "-600|-540",
        offsetIndices: "01010"
    }, {
        id: "Pacific/Easter",
        untils: "-jhfaew|ivmeuw|7k580|c8tg0|6h980|a31g0|7x3w0|asys0|7x3w0|b5xg0|7k580|ag040|8a2k0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|iq2o0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|e1h80|4olg0|e1h80|4olg0|c8nw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|Infinity",
        offsets: "437.4667|420|360|300",
        offsetIndices: "012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
    }, {
        id: "Pacific/Efate",
        untils: "-u964i4|11f4ba4|9cyk0|awo40|7tek0|9q2s0|8zzw0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|64ak0|e1ms0|4ofw0|Infinity",
        offsets: "-673.2667|-660|-720",
        offsetIndices: "0121212121212121212121"
    }, {
        id: "Pacific/Enderbury",
        untils: "535io0|7yiqk0|Infinity",
        offsets: "720|660|-780",
        offsetIndices: "012"
    }, {
        id: "Pacific/Fakaofo",
        untils: "lx0jw0|Infinity",
        offsets: "660|-780",
        offsetIndices: "01"
    }, {
        id: "Pacific/Fiji",
        untils: "-sa2x4w|17bs00w|64dc0|cyo00|5reo0|53a5c0|64dc0|asw00|6uao0|bvs00|4oio0|e1k00|4oio0|eeio0|4bh80|erk40|3ylc0|erhc0|3ylc0|f4g00|3lmo0|f4g00|3lmo0|f4g00|3lmo0|fheo0|38o00|fheo0|3lmo0|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|3lmo0|f4g00|3lmo0|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|3lmo0|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|3lmo0|f4g00|3lmo0|Infinity",
        offsets: "-715.7333|-720|-780",
        offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Pacific/Funafuti",
        untils: "Infinity",
        offsets: "-720",
        offsetIndices: "0"
    }, {
        id: "Pacific/Galapagos",
        untils: "-kcr62o|spdryo|3lsas0|3jp80|Infinity",
        offsets: "358.4|300|360",
        offsetIndices: "01212"
    }, {
        id: "Pacific/Gambier",
        untils: "-tvndoc|Infinity",
        offsets: "539.8|540",
        offsetIndices: "01"
    }, {
        id: "Pacific/Guadalcanal",
        untils: "-tvowac|Infinity",
        offsets: "-639.8|-660",
        offsetIndices: "01"
    }, {
        id: "Pacific/Guam",
        untils: "-en8eg0|1dl9g0|7s1k40|txp80|3frms0|qdrpo|7kgac|3ljw0|c8tg0|6u7w0|bvus0|6u7w0|16uo40|3ljw0|16aas0|4ivxo|cls2c|6h980|c65zw0|Infinity",
        offsets: "-600|-540|-660",
        offsetIndices: "01020202020202020200"
    }, {
        id: "Pacific/Honolulu",
        untils: "-j50la0|13l00|4jvb00|1tyvu0|2e5e0|votg0|Infinity",
        offsets: "630|570|600",
        offsetIndices: "0101102"
    }, {
        id: "Pacific/Johnston",
        untils: "-j50la0|13l00|4jvb00|1tyvu0|2e5e0|votg0|Infinity",
        offsets: "630|570|600",
        offsetIndices: "0101102"
    }, {
        id: "Pacific/Kiritimati",
        untils: "535eyo|7yirhc|Infinity",
        offsets: "640|600|-840",
        offsetIndices: "012"
    }, {
        id: "Pacific/Kosrae",
        untils: "-su52k0|29hhk0|9cmd40|27sas0|29fk40|cm2540|f9l3w0|Infinity",
        offsets: "-660|-540|-600|-720",
        offsetIndices: "01021030"
    }, {
        id: "Pacific/Kwajalein",
        untils: "-h817w0|27sas0|1hjus0|ddxug0|cgv6k0|Infinity",
        offsets: "-660|-600|-540|720|-720",
        offsetIndices: "012034"
    }, {
        id: "Pacific/Majuro",
        untils: "-su52k0|29hhk0|9cmd40|27sas0|1h6w40|deat40|Infinity",
        offsets: "-660|-540|-600|-720",
        offsetIndices: "0102103"
    }, {
        id: "Pacific/Marquesas",
        untils: "-tvncu0|Infinity",
        offsets: "558|570",
        offsetIndices: "01"
    }, {
        id: "Pacific/Midway",
        untils: "-usij20|Infinity",
        offsets: "682.8|660",
        offsetIndices: "01"
    }, {
        id: "Pacific/Nauru",
        untils: "-pjxiws|ba66ys|1kwca0|hfzda0|Infinity",
        offsets: "-667.6667|-690|-540|-720",
        offsetIndices: "01213"
    }, {
        id: "Pacific/Niue",
        untils: "-9wyz6o|ehcj4o|Infinity",
        offsets: "680|690|660",
        offsetIndices: "012"
    }, {
        id: "Pacific/Norfolk",
        untils: "-9x0ps0|cfj8q0|6hc00|l6nk00|239aq0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
        offsets: "-672|-690|-750|-660|-720",
        offsetIndices: "012134343434343434343434343434343434343434"
    }, {
        id: "Pacific/Noumea",
        untils: "-u9645o|ye0ixo|4dbw0|ecqs0|4f6k0|99p700|4oio0|Infinity",
        offsets: "-665.8|-660|-720",
        offsetIndices: "01212121"
    }, {
        id: "Pacific/Pago_Pago",
        untils: "-usij20|Infinity",
        offsets: "682.8|660",
        offsetIndices: "01"
    }, {
        id: "Pacific/Palau",
        untils: "Infinity",
        offsets: "-540",
        offsetIndices: "0"
    }, {
        id: "Pacific/Pitcairn",
        untils: "es2cy0|Infinity",
        offsets: "510|480",
        offsetIndices: "01"
    }, {
        id: "Pacific/Pohnpei",
        untils: "-su52k0|29hhk0|9cmd40|27sas0|29fk40|Infinity",
        offsets: "-660|-540|-600",
        offsetIndices: "010210"
    }, {
        id: "Pacific/Ponape",
        untils: "-su52k0|29hhk0|9cmd40|27sas0|29fk40|Infinity",
        offsets: "-660|-540|-600",
        offsetIndices: "010210"
    }, {
        id: "Pacific/Port_Moresby",
        untils: "Infinity",
        offsets: "-600",
        offsetIndices: "0"
    }, {
        id: "Pacific/Rarotonga",
        untils: "4mj960|5rbw0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6ham0|Infinity",
        offsets: "630|570|600",
        offsetIndices: "012121212121212121212121212"
    }, {
        id: "Pacific/Saipan",
        untils: "-en8eg0|1dl9g0|7s1k40|txp80|3frms0|qdrpo|7kgac|3ljw0|c8tg0|6u7w0|bvus0|6u7w0|16uo40|3ljw0|16aas0|4ivxo|cls2c|6h980|c65zw0|Infinity",
        offsets: "-600|-540|-660",
        offsetIndices: "01020202020202020200"
    }, {
        id: "Pacific/Samoa",
        untils: "-usij20|Infinity",
        offsets: "682.8|660",
        offsetIndices: "01"
    }, {
        id: "Pacific/Tahiti",
        untils: "-tvnayw|Infinity",
        offsets: "598.2667|600",
        offsetIndices: "01"
    }, {
        id: "Pacific/Tarawa",
        untils: "Infinity",
        offsets: "-720",
        offsetIndices: "0"
    }, {
        id: "Pacific/Tongatapu",
        untils: "-f4vrlc|uo2edc|8fpc0|bvs00|4bh80|eelg0|4bh80|7pmis0|3lmo0|Infinity",
        offsets: "-740|-780|-840",
        offsetIndices: "0121212121"
    }, {
        id: "Pacific/Truk",
        untils: "-su4zs0|29hes0|bkenw0|29fk40|Infinity",
        offsets: "-600|-540",
        offsetIndices: "01010"
    }, {
        id: "Pacific/Wake",
        untils: "Infinity",
        offsets: "-720",
        offsetIndices: "0"
    }, {
        id: "Pacific/Wallis",
        untils: "Infinity",
        offsets: "-720",
        offsetIndices: "0"
    }, {
        id: "Pacific/Yap",
        untils: "-su4zs0|29hes0|bkenw0|29fk40|Infinity",
        offsets: "-600|-540",
        offsetIndices: "01010"
    }, {
        id: "Poland",
        untils: "-se9yk0|dvyc0|7ves0|a4yw0|7x6o0|asw00|7x6o0|aunw0|7x6o0|1evbs0|9fcwc0|18cao0|7k800|9q000|9d1c0|9gnw0|an980|9kd80|8fs40|922w0|ar1c0|7x6o0|a2yo0|8n400|9q000|902o0|4013w0|64dc0|9d1c0|9d1c0|clpc0|6hc00|9d1c0|9d1c0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|clpc0|64dc0|6j4tc0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "-84|-60|-120|-180",
        offsetIndices: "012121223212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "Portugal",
        untils: "-u9rhc0|2bufw0|6zxg0|66580|bq800|73k00|bodc0|71pc0|bq800|73k00|bq800|71pc0|bq800|1b2g00|9b6o0|saio0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|st1c0|8n400|9d1c0|9d1c0|sg2o0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|bitc0|9d1c0|9ew00|88ao0|25p80|5reo0|3lpg0|779c0|1sqk0|6uao0|38qs0|6uao0|25p80|6hc00|38qs0|6uao0|25p80|6hc00|38qs0|8a5c0|9d1c0|9d9o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|s3400|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|5gyl40|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d440|9cyk0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9cyk0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "36.75|0|-60|-120",
        offsetIndices: "012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121212121212121212121212121212121212122323232212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "PRC",
        untils: "-qh00w0|8sl80|asbpg0|6w2k0|7ves0|bxjw0|4mqs0|1vduk0|d4as0|75bw0|a31g0|aaak0|9d440|7v980|awo40|1dx80|j9xpo0|6u7w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
        offsets: "-480|-540",
        offsetIndices: "01010101010101010101010101010"
    }, {
        id: "PST8PDT",
        untils: "-r0emw0|ast80|7x9g0|ast80|bmtus0|1tz2s0|2dyg0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "480|420",
        offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "ROC",
        untils: "-gtzfk0|45slc0|c51c0|75bw0|a31g0|aaak0|9d440|7v980|awo40|7v980|awo40|7v980|awo40|7v980|7tk40|clmk0|7rpg0|b07w0|7rpg0|b07w0|7rpg0|9et80|9eys0|9et80|9d440|9et80|9d440|9et80|9d440|9et80|cjxg0|69uk0|ci2s0|69uk0|6its40|9et80|9d440|9et80|1yf9g0|4qak0|Infinity",
        offsets: "-480|-540",
        offsetIndices: "01010101010101010101010101010101010101010"
    }, {
        id: "ROK",
        untils: "-w8966g|1yh18g|hkx5a0|1faao0|5cik0|ae5g0|8a2k0|ae5g0|8bx80|c8tg0|6h980|1bj6s0|l3aq0|6j3w0|d2g40|6u7w0|b5xg0|776k0|biw40|776k0|biw40|776k0|biw40|776k0|grs40|dfqxi0|7x6o0|asw00|7x6o0|Infinity",
        offsets: "-507.8667|-510|-540|-600|-570",
        offsetIndices: "012232323232141414141414123232"
    }, {
        id: "Singapore",
        untils: "-xphpwd|eeb94d|4it32o|8n3jc|1v2p60|iy3o60|Infinity",
        offsets: "-415.4167|-420|-440|-450|-540|-480",
        offsetIndices: "0123435"
    }, {
        id: "Turkey",
        untils: "-ux9xew|2wvx6w|7v980|1tjc40|aunw0|88dg0|9et80|8yas0|a2vw0|tzpg0|79180|awo40|7v980|7p4040|4zjw0|2vs40|f4d80|9vms0|1u5ek0|c5440|69uk0|acas0|8n180|a31g0|8n180|9q2s0|8zzw0|a31g0|8zzw0|a31g0|8n180|5md9g0|o9zw0|a6qs0|75bw0|4iwyw0|7x6o0|7kas0|b5rw0|75hg0|bkl80|77c40|biqk0|7x9g0|a2vw0|8n6s0|4iqc0|2nkw80|38l80|kdes0|8qtc0|8a5c0|9ew00|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|902o0|9q000|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7kdk0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7m2o0|b4000|7k800|b5uo0|7x6o0|asw00|7z1c0|ar1c0|7x6o0|bitc0|779c0|8fe80|Infinity",
        offsets: "-116.9333|-120|-180|-240",
        offsetIndices: "0121212121212121212121212121212121212121212121223212121212121212121212121212121212121212121212121212121212121212122"
    }, {
        id: "UCT",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "Universal",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "US/Alaska",
        untils: "-ek1qo0|1tyx80|2e400|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l940|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "600|540|480",
        offsetIndices: "011001010101010101010101010101010111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "US/Aleutian",
        untils: "-ek1nw0|1tyug0|2e6s0|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l940|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "660|600|540",
        offsetIndices: "011001010101010101010101010101010111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "US/Arizona",
        untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|zjedo|4olg0|9et80|bs6lmc|9cyk0|Infinity",
        offsets: "420|360",
        offsetIndices: "01010101010"
    }, {
        id: "US/Central",
        untils: "-r0esg0|ast80|7x9g0|ast80|bvus0|776k0|7kas0|b5rw0|9d440|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|7x9g0|dbjw0|8a840|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300",
        offsetIndices: "01010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "US/East-Indiana",
        untils: "-r0esg0|ast80|7x9g0|ast80|baw840|51ek0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|19q7w0|asys0|5qonw0|9cyk0|9d440|9cyk0|ihslg0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300|240",
        offsetIndices: "010101011010101010101010101010121212121212121212121212121212121212121212121212121212121212121212121"
    }, {
        id: "US/Eastern",
        untils: "-r0ev80|ast80|7x9g0|ast80|7x9g0|b5rw0|905g0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|6w840|1tzb40|2dq40|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "300|240",
        offsetIndices: "01010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "US/Hawaii",
        untils: "-j50la0|13l00|4jvb00|1tyvu0|2e5e0|votg0|Infinity",
        offsets: "630|570|600",
        offsetIndices: "0101102"
    }, {
        id: "US/Indiana-Starke",
        untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|tj1g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|7x3w0|asys0|7x3w0|asys0|9cyk0|9d440|9px80|9d440|9cyk0|9d440|s3180|1twas0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|7j5400|asw00|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "360|300",
        offsetIndices: "0101011010101010101010101010101010101010101010101010101010101010101010101010101010101010111010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "US/Michigan",
        untils: "-xx8dyd|5eraud|dyeyk0|1tzb40|2dq40|1c9440|7x3w0|9rlbxo|71s2c|9d440|9cyk0|2cmdg0|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "332.1833|360|300|240",
        offsetIndices: "0123323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
    }, {
        id: "US/Mountain",
        untils: "-r0epo0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|2vmk0|ataw40|1tz5k0|2dvo0|a7n9g0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "420|360",
        offsetIndices: "01010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "US/Pacific-New",
        untils: "-r0emw0|ast80|7x9g0|ast80|bmtus0|1tz2s0|2dyg0|1a3c5o|f2iic|owao0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "480|420",
        offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "US/Pacific",
        untils: "-r0emw0|ast80|7x9g0|ast80|bmtus0|1tz2s0|2dyg0|1a3c5o|f2iic|owao0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
        offsets: "480|420",
        offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "US/Samoa",
        untils: "-usij20|Infinity",
        offsets: "682.8|660",
        offsetIndices: "01"
    }, {
        id: "UTC",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }, {
        id: "W-SU",
        untils: "-rx5dmh|ipzua|97hc0|7yyk0|5i840|d9p80|1jwk7|2cvk0|s8o00|1qvw0|8fpc0|1jms0|is040|412as0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d440|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
        offsets: "-150.2833|-151.3167|-211.3167|-271.3167|-240|-180|-300|-120",
        offsetIndices: "012132345464575454545454545454545455754545454545454545454545454545454545454545"
    }, {
        id: "WET",
        untils: "3s9ms0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
        offsets: "0|-60",
        offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
    }, {
        id: "Zulu",
        untils: "Infinity",
        offsets: "0",
        offsetIndices: "0"
    }]
});


/***/ }),

/***/ 59342:
/*!***********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/tooltip_strategies/m_desktop_tooltip_strategy.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DesktopTooltipStrategy": function() { return /* binding */ DesktopTooltipStrategy; }
/* harmony export */ });
/* harmony import */ var _core_utils_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/support */ 48491);
/* harmony import */ var _ui_tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../ui/tooltip */ 78553);
/* harmony import */ var _m_tooltip_strategy_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./m_tooltip_strategy_base */ 96961);
/**
 * DevExtreme (esm/__internal/scheduler/tooltip_strategies/m_desktop_tooltip_strategy.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var APPOINTMENT_TOOLTIP_WRAPPER_CLASS = "dx-scheduler-appointment-tooltip-wrapper";
var MAX_TOOLTIP_HEIGHT = 200;
class DesktopTooltipStrategy extends _m_tooltip_strategy_base__WEBPACK_IMPORTED_MODULE_2__.TooltipStrategyBase {
    _prepareBeforeVisibleChanged(dataList) {
        this._tooltip.option("position", {
            my: "bottom",
            at: "top",
            boundary: this._getBoundary(dataList),
            offset: this._extraOptions.offset,
            collision: "fit flipfit"
        })
    }
    _getBoundary(dataList) {
        return this._options.isAppointmentInAllDayPanel(dataList[0].appointment) ? this._options.container : this._options.getScrollableContainer()
    }
    _onShown() {
        super._onShown();
        if (this._extraOptions.isButtonClick) {
            this._list.focus();
            this._list.option("focusedElement", null)
        }
    }
    _createListOption(target, dataList) {
        var result = super._createListOption(target, dataList);
        result.showScrollbar = _core_utils_support__WEBPACK_IMPORTED_MODULE_0__.touch ? "always" : "onHover";
        return result
    }
    _createTooltip(target, dataList) {
        var tooltip = this._createTooltipElement(APPOINTMENT_TOOLTIP_WRAPPER_CLASS);
        return this._options.createComponent(tooltip, _ui_tooltip__WEBPACK_IMPORTED_MODULE_1__.default, {
            target: target,
            maxHeight: MAX_TOOLTIP_HEIGHT,
            rtlEnabled: this._extraOptions.rtlEnabled,
            onShown: this._onShown.bind(this),
            contentTemplate: this._getContentTemplate(dataList),
            wrapperAttr: {
                class: APPOINTMENT_TOOLTIP_WRAPPER_CLASS
            }
        })
    }
    _onListRender(e) {
        return this._extraOptions.dragBehavior && this._extraOptions.dragBehavior(e)
    }
}


/***/ }),

/***/ 20509:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/tooltip_strategies/m_mobile_tooltip_strategy.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MobileTooltipStrategy": function() { return /* binding */ MobileTooltipStrategy; }
/* harmony export */ });
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/window */ 88684);
/* harmony import */ var _ui_overlay_ui_overlay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../ui/overlay/ui.overlay */ 59508);
/* harmony import */ var _m_tooltip_strategy_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./m_tooltip_strategy_base */ 96961);
/**
 * DevExtreme (esm/__internal/scheduler/tooltip_strategies/m_mobile_tooltip_strategy.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var SLIDE_PANEL_CLASS_NAME = "dx-scheduler-overlay-panel";
var MAX_TABLET_OVERLAY_HEIGHT_FACTOR = .9;
var MAX_HEIGHT = {
    PHONE: 250,
    TABLET: "90%",
    DEFAULT: "auto"
};
var MAX_WIDTH = {
    PHONE: "100%",
    TABLET: "80%"
};
var animationConfig = {
    show: {
        type: "slide",
        duration: 300,
        from: {
            position: {
                my: "top",
                at: "bottom",
                of: (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
            }
        },
        to: {
            position: {
                my: "center",
                at: "center",
                of: (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
            }
        }
    },
    hide: {
        type: "slide",
        duration: 300,
        to: {
            position: {
                my: "top",
                at: "bottom",
                of: (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
            }
        },
        from: {
            position: {
                my: "center",
                at: "center",
                of: (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
            }
        }
    }
};
var createPhoneDeviceConfig = listHeight => ({
    shading: false,
    width: MAX_WIDTH.PHONE,
    height: listHeight > MAX_HEIGHT.PHONE ? MAX_HEIGHT.PHONE : MAX_HEIGHT.DEFAULT,
    position: {
        my: "bottom",
        at: "bottom",
        of: (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
    }
});
var createTabletDeviceConfig = listHeight => {
    var currentMaxHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)((0,_core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()) * MAX_TABLET_OVERLAY_HEIGHT_FACTOR;
    return {
        shading: true,
        width: MAX_WIDTH.TABLET,
        height: listHeight > currentMaxHeight ? MAX_HEIGHT.TABLET : MAX_HEIGHT.DEFAULT,
        position: {
            my: "center",
            at: "center",
            of: (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
        }
    }
};
class MobileTooltipStrategy extends _m_tooltip_strategy_base__WEBPACK_IMPORTED_MODULE_3__.TooltipStrategyBase {
    _shouldUseTarget() {
        return false
    }
    _onShowing() {
        var isTabletWidth = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)((0,_core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()) > 700;
        this._tooltip.option("height", MAX_HEIGHT.DEFAULT);
        var listHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterHeight)(this._list.$element());
        this._tooltip.option(isTabletWidth ? createTabletDeviceConfig(listHeight) : createPhoneDeviceConfig(listHeight))
    }
    _createTooltip(target, dataList) {
        var element = this._createTooltipElement(SLIDE_PANEL_CLASS_NAME);
        return this._options.createComponent(element, _ui_overlay_ui_overlay__WEBPACK_IMPORTED_MODULE_2__.default, {
            target: (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)(),
            hideOnOutsideClick: true,
            animation: animationConfig,
            onShowing: () => this._onShowing(),
            onShown: this._onShown.bind(this),
            contentTemplate: this._getContentTemplate(dataList),
            wrapperAttr: {
                class: SLIDE_PANEL_CLASS_NAME
            }
        })
    }
}


/***/ }),

/***/ 96961:
/*!********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/tooltip_strategies/m_tooltip_strategy_base.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TooltipStrategyBase": function() { return /* binding */ TooltipStrategyBase; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_templates_function_template__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/templates/function_template */ 51454);
/* harmony import */ var _ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../ui/button */ 66037);
/* harmony import */ var _ui_list_ui_list_edit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../ui/list/ui.list.edit */ 73636);
/**
 * DevExtreme (esm/__internal/scheduler/tooltip_strategies/m_tooltip_strategy_base.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var TOOLTIP_APPOINTMENT_ITEM = "dx-tooltip-appointment-item";
var TOOLTIP_APPOINTMENT_ITEM_CONTENT = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-content");
var TOOLTIP_APPOINTMENT_ITEM_CONTENT_SUBJECT = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-content-subject");
var TOOLTIP_APPOINTMENT_ITEM_CONTENT_DATE = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-content-date");
var TOOLTIP_APPOINTMENT_ITEM_MARKER = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-marker");
var TOOLTIP_APPOINTMENT_ITEM_MARKER_BODY = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-marker-body");
var TOOLTIP_APPOINTMENT_ITEM_DELETE_BUTTON_CONTAINER = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-delete-button-container");
var TOOLTIP_APPOINTMENT_ITEM_DELETE_BUTTON = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-delete-button");
class TooltipStrategyBase {
    constructor(options) {
        this._tooltip = null;
        this._options = options;
        this._extraOptions = null
    }
    show(target, dataList, extraOptions) {
        if (this._canShowTooltip(dataList)) {
            this.hide();
            this._extraOptions = extraOptions;
            this._showCore(target, dataList)
        }
    }
    _showCore(target, dataList) {
        if (!this._tooltip) {
            this._tooltip = this._createTooltip(target, dataList)
        } else {
            this._shouldUseTarget() && this._tooltip.option("target", target);
            this._list.option("dataSource", dataList)
        }
        this._prepareBeforeVisibleChanged(dataList);
        this._tooltip.option("visible", true)
    }
    _prepareBeforeVisibleChanged(dataList) {}
    _getContentTemplate(dataList) {
        return container => {
            var listElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>");
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(container).append(listElement);
            this._list = this._createList(listElement, dataList)
        }
    }
    isAlreadyShown(target) {
        if (this._tooltip && this._tooltip.option("visible")) {
            return this._tooltip.option("target")[0] === target[0]
        }
        return
    }
    _onShown() {
        this._list.option("focusStateEnabled", this._extraOptions.focusStateEnabled)
    }
    dispose() {}
    hide() {
        if (this._tooltip) {
            this._tooltip.option("visible", false)
        }
    }
    _shouldUseTarget() {
        return true
    }
    _createTooltip(target, dataList) {}
    _canShowTooltip(dataList) {
        if (!dataList.length) {
            return false
        }
        return true
    }
    _createListOption(dataList) {
        return {
            dataSource: dataList,
            onContentReady: this._onListRender.bind(this),
            onItemClick: e => this._onListItemClick(e),
            itemTemplate: (item, index) => this._renderTemplate(item.appointment, item.targetedAppointment, index, item.color),
            _swipeEnabled: false,
            pageLoadMode: "scrollBottom"
        }
    }
    _onListRender(e) {}
    _createTooltipElement(wrapperClass) {
        return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").appendTo(this._options.container).addClass(wrapperClass)
    }
    _createList(listElement, dataList) {
        return this._options.createComponent(listElement, _ui_list_ui_list_edit__WEBPACK_IMPORTED_MODULE_3__.default, this._createListOption(dataList))
    }
    _renderTemplate(appointment, targetedAppointment, index, color) {
        var itemListContent = this._createItemListContent(appointment, targetedAppointment, color);
        this._options.addDefaultTemplates({
            [this._getItemListTemplateName()]: new _core_templates_function_template__WEBPACK_IMPORTED_MODULE_1__.FunctionTemplate(options => {
                var $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(options.container);
                $container.append(itemListContent);
                return $container
            })
        });
        var template = this._options.getAppointmentTemplate("".concat(this._getItemListTemplateName(), "Template"));
        return this._createFunctionTemplate(template, appointment, targetedAppointment, index)
    }
    _createFunctionTemplate(template, appointmentData, targetedAppointmentData, index) {
        var isButtonClicked = !!this._extraOptions.isButtonClick;
        var isEmptyDropDownAppointmentTemplate = this._isEmptyDropDownAppointmentTemplate();
        return new _core_templates_function_template__WEBPACK_IMPORTED_MODULE_1__.FunctionTemplate(options => template.render({
            model: isEmptyDropDownAppointmentTemplate ? {
                appointmentData: appointmentData,
                targetedAppointmentData: targetedAppointmentData,
                isButtonClicked: isButtonClicked
            } : appointmentData,
            container: options.container,
            index: index
        }))
    }
    _getItemListTemplateName() {
        return this._isEmptyDropDownAppointmentTemplate() ? "appointmentTooltip" : "dropDownAppointment"
    }
    _isEmptyDropDownAppointmentTemplate() {
        return !this._extraOptions.dropDownAppointmentTemplate || "dropDownAppointment" === this._extraOptions.dropDownAppointmentTemplate
    }
    _onListItemClick(e) {
        this.hide();
        this._extraOptions.clickEvent && this._extraOptions.clickEvent(e);
        this._options.showAppointmentPopup(e.itemData.appointment, false, e.itemData.targetedAppointment)
    }
    _createItemListContent(appointment, targetedAppointment, color) {
        var {
            editing: editing
        } = this._extraOptions;
        var $itemElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM);
        $itemElement.append(this._createItemListMarker(color));
        $itemElement.append(this._createItemListInfo(this._options.createFormattedDateText(appointment, targetedAppointment)));
        var disabled = this._options.getAppointmentDisabled(appointment);
        if (!disabled && (editing && true === editing.allowDeleting || true === editing)) {
            $itemElement.append(this._createDeleteButton(appointment, targetedAppointment))
        }
        return $itemElement
    }
    _createItemListMarker(color) {
        var $marker = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_MARKER);
        var $markerBody = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_MARKER_BODY);
        $marker.append($markerBody);
        color && color.done(value => $markerBody.css("background", value));
        return $marker
    }
    _createItemListInfo(object) {
        var result = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_CONTENT);
        var $title = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_CONTENT_SUBJECT).text(object.text);
        var $date = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_CONTENT_DATE).text(object.formatDate);
        return result.append($title).append($date)
    }
    _createDeleteButton(appointment, targetedAppointment) {
        var $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_DELETE_BUTTON_CONTAINER);
        var $deleteButton = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_DELETE_BUTTON);
        $container.append($deleteButton);
        this._options.createComponent($deleteButton, _ui_button__WEBPACK_IMPORTED_MODULE_2__.default, {
            icon: "trash",
            stylingMode: "text",
            onClick: e => {
                this.hide();
                e.event.stopPropagation();
                this._options.checkAndDeleteAppointment(appointment, targetedAppointment)
            }
        });
        return $container
    }
}


/***/ }),

/***/ 47407:
/*!******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/__internal/scheduler/utils/is_scheduler_component.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isSchedulerComponent": function() { return /* binding */ isSchedulerComponent; }
/* harmony export */ });
/**
 * DevExtreme (esm/__internal/scheduler/utils/is_scheduler_component.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var schedulerComponentName = "dxScheduler";
function isSchedulerComponent(component) {
    return component.NAME === schedulerComponentName
}


/***/ }),

/***/ 69379:
/*!*********************************************************!*\
  !*** ./node_modules/devextreme/esm/data/data_source.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _data_source_data_source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data_source/data_source */ 56053);
/**
 * DevExtreme (esm/data/data_source.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

/* harmony default export */ __webpack_exports__["default"] = (_data_source_data_source__WEBPACK_IMPORTED_MODULE_0__.DataSource);


/***/ }),

/***/ 66368:
/*!************************************************************!*\
  !*** ./node_modules/devextreme/esm/events/double_click.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "name": function() { return /* binding */ DBLCLICK_EVENT_NAME; }
/* harmony export */ });
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/core/events_engine */ 99064);
/* harmony import */ var _core_utils_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/utils/dom */ 16520);
/* harmony import */ var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/dom_adapter */ 81113);
/* harmony import */ var _core_class__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/class */ 72627);
/* harmony import */ var _core_event_registrator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/event_registrator */ 58056);
/* harmony import */ var _click__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./click */ 38894);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/index */ 3151);
/**
 * DevExtreme (esm/events/double_click.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */







var DBLCLICK_EVENT_NAME = "dxdblclick";
var DBLCLICK_NAMESPACE = "dxDblClick";
var NAMESPACED_CLICK_EVENT = (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.addNamespace)(_click__WEBPACK_IMPORTED_MODULE_5__.name, DBLCLICK_NAMESPACE);
var DBLCLICK_TIMEOUT = 300;
var DblClick = _core_class__WEBPACK_IMPORTED_MODULE_3__.default.inherit({
    ctor: function() {
        this._handlerCount = 0;
        this._forgetLastClick()
    },
    _forgetLastClick: function() {
        this._firstClickTarget = null;
        this._lastClickTimeStamp = -DBLCLICK_TIMEOUT
    },
    add: function() {
        if (this._handlerCount <= 0) {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_0__.default.on(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.getDocument(), NAMESPACED_CLICK_EVENT, this._clickHandler.bind(this))
        }
        this._handlerCount++
    },
    _clickHandler: function(e) {
        var timeStamp = e.timeStamp || Date.now();
        var timeBetweenClicks = timeStamp - this._lastClickTimeStamp;
        var isSimulated = timeBetweenClicks < 0;
        var isDouble = !isSimulated && timeBetweenClicks < DBLCLICK_TIMEOUT;
        if (isDouble) {
            (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.fireEvent)({
                type: DBLCLICK_EVENT_NAME,
                target: (0,_core_utils_dom__WEBPACK_IMPORTED_MODULE_1__.closestCommonParent)(this._firstClickTarget, e.target),
                originalEvent: e
            });
            this._forgetLastClick()
        } else {
            this._firstClickTarget = e.target;
            this._lastClickTimeStamp = timeStamp
        }
    },
    remove: function() {
        this._handlerCount--;
        if (this._handlerCount <= 0) {
            this._forgetLastClick();
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_0__.default.off(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.getDocument(), NAMESPACED_CLICK_EVENT)
        }
    }
});
(0,_core_event_registrator__WEBPACK_IMPORTED_MODULE_4__.default)(DBLCLICK_EVENT_NAME, new DblClick);



/***/ }),

/***/ 5733:
/*!******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/component_wrapper/scheduler/date_table.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DateTable": function() { return /* binding */ DateTable; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/component */ 17405);
/**
 * DevExtreme (esm/renovation/component_wrapper/scheduler/date_table.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class DateTable extends _common_component__WEBPACK_IMPORTED_MODULE_1__.default {
    _setOptionsByReference() {
        super._setOptionsByReference();
        this._optionsByReference = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this._optionsByReference, {
            dataCellTemplate: true
        })
    }
}


/***/ }),

/***/ 8294:
/*!*******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/component_wrapper/scheduler/group_panel.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GroupPanelWrapper": function() { return /* binding */ GroupPanelWrapper; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/component */ 17405);
/**
 * DevExtreme (esm/renovation/component_wrapper/scheduler/group_panel.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class GroupPanelWrapper extends _common_component__WEBPACK_IMPORTED_MODULE_1__.default {
    _setOptionsByReference() {
        super._setOptionsByReference();
        this._optionsByReference = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this._optionsByReference, {
            resourceCellTemplate: true
        })
    }
}


/***/ }),

/***/ 72902:
/*!********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/component_wrapper/scheduler/header_panel.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeaderPanel": function() { return /* binding */ HeaderPanel; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/component */ 17405);
/**
 * DevExtreme (esm/renovation/component_wrapper/scheduler/header_panel.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class HeaderPanel extends _common_component__WEBPACK_IMPORTED_MODULE_1__.default {
    _setOptionsByReference() {
        super._setOptionsByReference();
        this._optionsByReference = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this._optionsByReference, {
            dateHeaderData: true,
            resourceCellTemplate: true,
            dateCellTemplate: true,
            timeCellTemplate: true
        })
    }
}


/***/ }),

/***/ 16547:
/*!******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/component_wrapper/scheduler/time_panel.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimePanel": function() { return /* binding */ TimePanel; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/component */ 17405);
/**
 * DevExtreme (esm/renovation/component_wrapper/scheduler/time_panel.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class TimePanel extends _common_component__WEBPACK_IMPORTED_MODULE_1__.default {
    _setOptionsByReference() {
        super._setOptionsByReference();
        this._optionsByReference = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this._optionsByReference, {
            timeCellTemplate: true
        })
    }
}


/***/ }),

/***/ 37999:
/*!*********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/common/utils/scroll/getMemoizeScrollTo.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getMemoizeScrollTo": function() { return /* binding */ getMemoizeScrollTo; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/common/utils/scroll/getMemoizeScrollTo.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
function getMemoizeScrollTo(getScrollableInstance) {
    var instance = getScrollableInstance();
    var lastParams = {};
    return function(params) {
        var force = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
        var normalizedParams = {
            top: void 0 !== params.top ? Math.ceil(params.top) : void 0,
            left: void 0 !== params.left ? Math.ceil(params.left) : void 0
        };
        var isSameParams = normalizedParams.top === lastParams.top && normalizedParams.left === lastParams.left;
        if (!force && isSameParams) {
            return
        }
        lastParams = normalizedParams;
        instance.scrollTo(params)
    }
}


/***/ }),

/***/ 61960:
/*!**********************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/resizable/utils.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "borderWidthStyles": function() { return /* binding */ borderWidthStyles; },
/* harmony export */   "getAreaFromElement": function() { return /* binding */ getAreaFromElement; },
/* harmony export */   "getAreaFromObject": function() { return /* binding */ getAreaFromObject; },
/* harmony export */   "getMovingSides": function() { return /* binding */ getMovingSides; },
/* harmony export */   "getDragOffsets": function() { return /* binding */ getDragOffsets; },
/* harmony export */   "filterOffsets": function() { return /* binding */ filterOffsets; }
/* harmony export */ });
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/**
 * DevExtreme (esm/renovation/ui/resizable/utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var borderWidthStyles = {
    left: "borderLeftWidth",
    top: "borderTopWidth",
    right: "borderRightWidth",
    bottom: "borderBottomWidth"
};

function getBorderWidth(el, direction) {
    if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isWindow)(el)) {
        var borderWidth = el.style[borderWidthStyles[direction]];
        return parseInt(borderWidth, 10) || 0
    }
    return 0
}
var correctGeometry = function(area, mainEl) {
    var el = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
    var {
        height: height,
        offset: offset,
        width: width
    } = area;
    var {
        left: left,
        top: top
    } = offset;
    var areaBorderLeft = el ? getBorderWidth(el, "left") : 0;
    var areaBorderTop = el ? getBorderWidth(el, "top") : 0;
    return {
        width: width - (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOuterWidth)(mainEl) - (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getInnerWidth)(mainEl),
        height: height - (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOuterHeight)(mainEl) - (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getInnerHeight)(mainEl),
        offset: {
            left: left + areaBorderLeft + getBorderWidth(mainEl, "left"),
            top: top + areaBorderTop + getBorderWidth(mainEl, "top")
        }
    }
};
var getAreaFromElement = (el, mainEl) => correctGeometry({
    width: (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getInnerWidth)(el),
    height: (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getInnerHeight)(el),
    offset: (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)({
        top: 0,
        left: 0
    }, (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isWindow)(el) ? {} : (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOffset)(el))
}, mainEl, el);
var getAreaFromObject = (_ref, mainEl) => {
    var {
        bottom: bottom,
        left: left,
        right: right,
        top: top
    } = _ref;
    return correctGeometry({
        width: right - left,
        height: bottom - top,
        offset: {
            left: left,
            top: top
        }
    }, mainEl)
};
var getMovingSides = el => {
    var {
        className: className
    } = el;
    var hasCornerTopLeftClass = className.includes("dx-resizable-handle-corner-top-left");
    var hasCornerTopRightClass = className.includes("dx-resizable-handle-corner-top-right");
    var hasCornerBottomLeftClass = className.includes("dx-resizable-handle-corner-bottom-left");
    var hasCornerBottomRightClass = className.includes("dx-resizable-handle-corner-bottom-right");
    return {
        top: className.includes("dx-resizable-handle-top") || hasCornerTopLeftClass || hasCornerTopRightClass,
        left: className.includes("dx-resizable-handle-left") || hasCornerTopLeftClass || hasCornerBottomLeftClass,
        bottom: className.includes("dx-resizable-handle-bottom") || hasCornerBottomLeftClass || hasCornerBottomRightClass,
        right: className.includes("dx-resizable-handle-right") || hasCornerTopRightClass || hasCornerBottomRightClass
    }
};
function getDragOffsets(area, handleEl, areaProp) {
    var hWidth = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOuterWidth)(handleEl);
    var hHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOuterHeight)(handleEl);
    var hOffset = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOffset)(handleEl);
    var areaOffset = area.offset;
    var isAreaWindow = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isWindow)(areaProp);
    var scrollOffset_scrollX = isAreaWindow ? areaProp.pageXOffset : 0,
        scrollOffset_scrollY = isAreaWindow ? areaProp.pageYOffset : 0;
    return {
        maxLeftOffset: hOffset.left - areaOffset.left - scrollOffset_scrollX,
        maxRightOffset: areaOffset.left + area.width - hOffset.left - hWidth + scrollOffset_scrollX,
        maxTopOffset: hOffset.top - areaOffset.top - scrollOffset_scrollY,
        maxBottomOffset: areaOffset.top + area.height - hOffset.top - hHeight + scrollOffset_scrollY
    }
}
var filterOffsets = (offset, handleEl) => {
    var sides = getMovingSides(handleEl);
    var offsetX = !sides.left && !sides.right ? 0 : offset.x;
    var offsetY = !sides.top && !sides.bottom ? 0 : offset.y;
    return {
        x: offsetX,
        y: offsetY
    }
};


/***/ }),

/***/ 5562:
/*!****************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/appointment.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "AppointmentProps": function() { return /* binding */ AppointmentProps; },
/* harmony export */   "Appointment": function() { return /* binding */ Appointment; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ 259);
/* harmony import */ var _content_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./content/layout */ 9579);
/* harmony import */ var _common_widget__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/widget */ 47880);
/* harmony import */ var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../utils/combine_classes */ 33582);
/* harmony import */ var _resources_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../resources/utils */ 56085);
/* harmony import */ var _appointments_context__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../appointments_context */ 29263);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment/appointment.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["appointmentTemplate", "groups", "hideReducedIconTooltip", "index", "onItemClick", "onItemDoubleClick", "showReducedIconTooltip", "viewModel"];









var viewFunction = _ref => {
    var {
        classes: classes,
        data: data,
        dateText: dateText,
        isReduced: isReduced,
        onItemClick: onItemClick,
        props: {
            appointmentTemplate: appointmentTemplate,
            hideReducedIconTooltip: hideReducedIconTooltip,
            index: index,
            showReducedIconTooltip: showReducedIconTooltip,
            viewModel: {
                info: {
                    isRecurrent: isRecurrent
                }
            }
        },
        ref: ref,
        styles: styles,
        text: text
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _common_widget__WEBPACK_IMPORTED_MODULE_6__.Widget, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({
        focusStateEnabled: true,
        onClick: onItemClick,
        rootElementRef: ref,
        style: (0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(styles),
        classes: classes,
        hint: text
    }, {
        role: "button",
        "data-index": index
    }, {
        children: (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _content_layout__WEBPACK_IMPORTED_MODULE_5__.AppointmentContent, {
            text: text,
            isReduced: isReduced,
            dateText: dateText,
            isRecurrent: isRecurrent,
            index: index,
            data: data,
            showReducedIconTooltip: showReducedIconTooltip,
            hideReducedIconTooltip: hideReducedIconTooltip,
            appointmentTemplate: appointmentTemplate
        })
    })))
};
var AppointmentProps = {
    index: 0
};

var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class Appointment extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoComponent {
    constructor(props) {
        super(props);
        this.ref = (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createRef)();
        this.state = {
            color: void 0
        };
        this.updateStylesEffect = this.updateStylesEffect.bind(this);
        this.bindDoubleClickEffect = this.bindDoubleClickEffect.bind(this);
        this.onItemClick = this.onItemClick.bind(this);
        this.onItemDoubleClick = this.onItemDoubleClick.bind(this)
    }
    get appointmentsContextValue() {
        if (this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_9__.AppointmentsContext.id]) {
            return this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_9__.AppointmentsContext.id]
        }
        return _appointments_context__WEBPACK_IMPORTED_MODULE_9__.AppointmentsContext.defaultValue
    }
    createEffects() {
        return [new _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoEffect(this.updateStylesEffect, [this.props.viewModel, this.appointmentsContextValue, this.props.groups]), new _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoEffect(this.bindDoubleClickEffect, [])]
    }
    updateEffects() {
        var _this$_effects$;
        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.viewModel, this.appointmentsContextValue, this.props.groups])
    }
    updateStylesEffect() {
        var _viewModel$info$group;
        var {
            viewModel: viewModel
        } = this.props;
        var groupIndex = null !== (_viewModel$info$group = viewModel.info.groupIndex) && void 0 !== _viewModel$info$group ? _viewModel$info$group : 0;
        var {
            appointment: appointment
        } = viewModel;
        (0,_resources_utils__WEBPACK_IMPORTED_MODULE_8__.getAppointmentColor)({
            resources: this.appointmentsContextValue.resources,
            resourceLoaderMap: this.appointmentsContextValue.resourceLoaderMap,
            resourcesDataAccessors: this.appointmentsContextValue.dataAccessors.resources,
            loadedResources: this.appointmentsContextValue.loadedResources
        }, {
            itemData: appointment,
            groupIndex: groupIndex,
            groups: this.props.groups
        }).then(color => {
            this.setState(__state_argument => ({
                color: color
            }))
        }).catch(() => "")
    }
    bindDoubleClickEffect() {
        var _this$ref$current;
        var onDoubleClick = () => this.onItemDoubleClick();
        null === (_this$ref$current = this.ref.current) || void 0 === _this$ref$current ? void 0 : _this$ref$current.addEventListener("dblclick", onDoubleClick);
        return () => {
            var _this$ref$current2;
            null === (_this$ref$current2 = this.ref.current) || void 0 === _this$ref$current2 ? void 0 : _this$ref$current2.removeEventListener("dblclick", onDoubleClick)
        }
    }
    get appointmentStyles() {
        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getAppointmentStyles)(this.props.viewModel)
    }
    get styles() {
        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.mergeStylesWithColor)(this.state.color, this.appointmentStyles)
    }
    get text() {
        return this.props.viewModel.appointment.text
    }
    get isReduced() {
        var {
            appointmentReduced: appointmentReduced
        } = this.props.viewModel.info;
        return !!appointmentReduced
    }
    get classes() {
        var {
            focused: focused,
            info: {
                allDay: allDay,
                appointmentReduced: appointmentReduced,
                direction: direction,
                isRecurrent: isRecurrent
            }
        } = this.props.viewModel;
        var isVerticalDirection = "vertical" === direction;
        return (0,_utils_combine_classes__WEBPACK_IMPORTED_MODULE_7__.combineClasses)({
            "dx-state-focused": !!focused,
            "dx-scheduler-appointment": true,
            "dx-scheduler-appointment-horizontal": !isVerticalDirection,
            "dx-scheduler-appointment-vertical": isVerticalDirection,
            "dx-scheduler-appointment-recurrence": isRecurrent,
            "dx-scheduler-all-day-appointment": allDay,
            "dx-scheduler-appointment-reduced": this.isReduced,
            "dx-scheduler-appointment-head": "head" === appointmentReduced,
            "dx-scheduler-appointment-body": "body" === appointmentReduced,
            "dx-scheduler-appointment-tail": "tail" === appointmentReduced
        })
    }
    get dateText() {
        return this.props.viewModel.info.dateText
    }
    get data() {
        return {
            appointmentData: this.props.viewModel.info.appointment,
            targetedAppointmentData: this.props.viewModel.appointment
        }
    }
    onItemClick() {
        var e = {
            data: [this.props.viewModel],
            target: this.ref.current,
            index: this.props.index
        };
        this.props.onItemClick(e)
    }
    onItemDoubleClick() {
        var e = {
            data: [this.props.viewModel],
            target: this.ref.current,
            index: this.props.index
        };
        this.props.onItemDoubleClick(e)
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                appointmentTemplate: getTemplate(props.appointmentTemplate)
            }),
            color: this.state.color,
            ref: this.ref,
            appointmentsContextValue: this.appointmentsContextValue,
            appointmentStyles: this.appointmentStyles,
            styles: this.styles,
            text: this.text,
            isReduced: this.isReduced,
            classes: this.classes,
            dateText: this.dateText,
            data: this.data,
            onItemClick: this.onItemClick,
            onItemDoubleClick: this.onItemDoubleClick,
            restAttributes: this.restAttributes
        })
    }
}
Appointment.defaultProps = AppointmentProps;


/***/ }),

/***/ 29886:
/*!***************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/content/details/layout.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "AppointmentDetailsProps": function() { return /* binding */ AppointmentDetailsProps; },
/* harmony export */   "AppointmentDetails": function() { return /* binding */ AppointmentDetails; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment/content/details/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["dateText"];


var viewFunction = _ref => {
    var {
        props: {
            dateText: dateText
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-content-details", (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-content-date", dateText, 0), 2)
};
var AppointmentDetailsProps = {
    dateText: ""
};
class AppointmentDetails extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props),
            restAttributes: this.restAttributes
        })
    }
}
AppointmentDetails.defaultProps = AppointmentDetailsProps;


/***/ }),

/***/ 9579:
/*!*******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/content/layout.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "AppointmentContentProps": function() { return /* binding */ AppointmentContentProps; },
/* harmony export */   "AppointmentContent": function() { return /* binding */ AppointmentContent; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _details_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./details/layout */ 29886);
/* harmony import */ var _title_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./title/layout */ 54861);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment/content/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["appointmentTemplate", "data", "dateText", "hideReducedIconTooltip", "index", "isRecurrent", "isReduced", "showReducedIconTooltip", "text"];





var viewFunction = _ref => {
    var {
        props: {
            appointmentTemplate: appointmentTemplate,
            data: data,
            dateText: dateText,
            index: index,
            isRecurrent: isRecurrent,
            isReduced: isReduced,
            text: text
        },
        refReducedIcon: refReducedIcon
    } = _ref;
    var AppointmentTemplate = appointmentTemplate;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-content", appointmentTemplate ? AppointmentTemplate({
        data: data,
        index: index
    }) : (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)([(0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _title_layout__WEBPACK_IMPORTED_MODULE_5__.AppointmentTitle, {
        text: text
    }), (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _details_layout__WEBPACK_IMPORTED_MODULE_4__.AppointmentDetails, {
        dateText: dateText
    }), isRecurrent && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-recurrence-icon dx-icon-repeat"), isReduced && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-reduced-icon", null, 1, null, null, refReducedIcon)], 0), 0)
};
var AppointmentContentProps = {
    text: "",
    dateText: "",
    isRecurrent: false,
    isReduced: false,
    index: 0
};

var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class AppointmentContent extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoComponent {
    constructor(props) {
        super(props);
        this.state = {};
        this.refReducedIcon = (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createRef)();
        this.bindHoverEffect = this.bindHoverEffect.bind(this);
        this.onReducedIconMouseEnter = this.onReducedIconMouseEnter.bind(this);
        this.onReducedIconMouseLeave = this.onReducedIconMouseLeave.bind(this)
    }
    createEffects() {
        return [new _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoEffect(this.bindHoverEffect, [this.props.showReducedIconTooltip, this.props.data, this.props.hideReducedIconTooltip])]
    }
    updateEffects() {
        var _this$_effects$;
        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.showReducedIconTooltip, this.props.data, this.props.hideReducedIconTooltip])
    }
    bindHoverEffect() {
        var _this$refReducedIcon$, _this$refReducedIcon$2;
        var onMouseEnter = () => this.onReducedIconMouseEnter();
        var onMouseLeave = () => this.onReducedIconMouseLeave();
        null === (_this$refReducedIcon$ = this.refReducedIcon.current) || void 0 === _this$refReducedIcon$ ? void 0 : _this$refReducedIcon$.addEventListener("mouseenter", onMouseEnter);
        null === (_this$refReducedIcon$2 = this.refReducedIcon.current) || void 0 === _this$refReducedIcon$2 ? void 0 : _this$refReducedIcon$2.addEventListener("mouseleave", onMouseLeave);
        return () => {
            var _this$refReducedIcon$3, _this$refReducedIcon$4;
            null === (_this$refReducedIcon$3 = this.refReducedIcon.current) || void 0 === _this$refReducedIcon$3 ? void 0 : _this$refReducedIcon$3.removeEventListener("mouseenter", onMouseEnter);
            null === (_this$refReducedIcon$4 = this.refReducedIcon.current) || void 0 === _this$refReducedIcon$4 ? void 0 : _this$refReducedIcon$4.removeEventListener("mouseleave", onMouseLeave)
        }
    }
    onReducedIconMouseEnter() {
        this.props.showReducedIconTooltip({
            target: this.refReducedIcon.current,
            endDate: this.props.data.appointmentData.endDate
        })
    }
    onReducedIconMouseLeave() {
        this.props.hideReducedIconTooltip()
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                appointmentTemplate: getTemplate(props.appointmentTemplate)
            }),
            refReducedIcon: this.refReducedIcon,
            onReducedIconMouseEnter: this.onReducedIconMouseEnter,
            onReducedIconMouseLeave: this.onReducedIconMouseLeave,
            restAttributes: this.restAttributes
        })
    }
}
AppointmentContent.defaultProps = AppointmentContentProps;


/***/ }),

/***/ 54861:
/*!*************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/content/title/layout.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "AppointmentTitleProps": function() { return /* binding */ AppointmentTitleProps; },
/* harmony export */   "AppointmentTitle": function() { return /* binding */ AppointmentTitle; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment/content/title/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["text"];


var viewFunction = _ref => {
    var {
        props: {
            text: text
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-title", text, 0)
};
var AppointmentTitleProps = {
    text: ""
};
class AppointmentTitle extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props),
            restAttributes: this.restAttributes
        })
    }
}
AppointmentTitle.defaultProps = AppointmentTitleProps;


/***/ }),

/***/ 13812:
/*!*************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/layout.j.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ AppointmentLayout; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/component_registrator */ 2382);
/* harmony import */ var _component_wrapper_common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../component_wrapper/common/component */ 17405);
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ 68972);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment/layout.j.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class AppointmentLayout extends _component_wrapper_common_component__WEBPACK_IMPORTED_MODULE_1__.default {
    get _propsInfo() {
        return {
            twoWay: [],
            allowNull: [],
            elements: [],
            templates: [],
            props: ["isAllDay"]
        }
    }
    get _viewComponent() {
        return _layout__WEBPACK_IMPORTED_MODULE_2__.AppointmentLayout
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxAppointmentLayout", AppointmentLayout);


/***/ }),

/***/ 68972:
/*!***********************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/layout.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "AppointmentLayoutProps": function() { return /* binding */ AppointmentLayoutProps; },
/* harmony export */   "AppointmentLayout": function() { return /* binding */ AppointmentLayout; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _appointment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./appointment */ 5562);
/* harmony import */ var _overflow_indicator_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./overflow_indicator/layout */ 13296);
/* harmony import */ var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../utils/combine_classes */ 33582);
/* harmony import */ var _appointments_context__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../appointments_context */ 29263);
/* harmony import */ var _utils_subscribe_to_event__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../utils/subscribe_to_event */ 959);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["isAllDay"];







var SELECTOR = {
    appointment: ".dx-scheduler-appointment",
    allDay: "dx-scheduler-all-day-appointment",
    collector: "dx-scheduler-appointment-collector"
};
var viewFunction = _ref => {
    var {
        appointments: appointments,
        appointmentsContextValue: {
            appointmentTemplate: appointmentTemplate,
            groups: groups,
            hideReducedIconTooltip: hideReducedIconTooltip,
            onAppointmentClick: onAppointmentClick,
            onAppointmentDoubleClick: onAppointmentDoubleClick,
            overflowIndicatorTemplate: overflowIndicatorTemplate,
            showReducedIconTooltip: showReducedIconTooltip
        },
        classes: classes,
        layoutRef: layoutRef,
        overflowIndicators: overflowIndicators
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", classes, [appointments.map((item, index) => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _appointment__WEBPACK_IMPORTED_MODULE_4__.Appointment, {
        viewModel: item,
        appointmentTemplate: appointmentTemplate,
        index: index,
        groups: groups,
        onItemClick: onAppointmentClick,
        onItemDoubleClick: onAppointmentDoubleClick,
        showReducedIconTooltip: showReducedIconTooltip,
        hideReducedIconTooltip: hideReducedIconTooltip
    }, item.key)), overflowIndicators.map((item, index) => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _overflow_indicator_layout__WEBPACK_IMPORTED_MODULE_5__.OverflowIndicator, {
        viewModel: item,
        groups: groups,
        overflowIndicatorTemplate: overflowIndicatorTemplate,
        "data-index": index
    }, item.key))], 0, null, null, layoutRef)
};
var AppointmentLayoutProps = {
    isAllDay: false
};


class AppointmentLayout extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent {
    constructor(props) {
        super(props);
        this.state = {};
        this.layoutRef = (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createRef)();
        this.__getterCache = {};
        this.pointerEventsEffect = this.pointerEventsEffect.bind(this);
        this.onAppointmentPointerDown = this.onAppointmentPointerDown.bind(this)
    }
    get appointmentsContextValue() {
        if (this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id]) {
            return this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id]
        }
        return _appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.defaultValue
    }
    createEffects() {
        return [new _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoEffect(this.pointerEventsEffect, [this.appointmentsContextValue]), (0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()]
    }
    updateEffects() {
        var _this$_effects$;
        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.appointmentsContextValue])
    }
    pointerEventsEffect() {
        var disposePointerDown = (0,_utils_subscribe_to_event__WEBPACK_IMPORTED_MODULE_8__.subscribeToDXPointerDownEvent)(this.layoutRef.current, e => this.onAppointmentPointerDown(e));
        return () => {
            disposePointerDown()
        }
    }
    get classes() {
        var {
            isAllDay: isAllDay
        } = this.props;
        return (0,_utils_combine_classes__WEBPACK_IMPORTED_MODULE_6__.combineClasses)({
            "dx-scheduler-scrollable-appointments": !isAllDay,
            "dx-scheduler-all-day-appointments": isAllDay
        })
    }
    get appointments() {
        if (void 0 !== this.__getterCache.appointments) {
            return this.__getterCache.appointments
        }
        return this.__getterCache.appointments = (() => {
            if (this.props.isAllDay) {
                return this.appointmentsContextValue.viewModel.allDay
            }
            return this.appointmentsContextValue.viewModel.regular
        })()
    }
    get overflowIndicators() {
        if (void 0 !== this.__getterCache.overflowIndicators) {
            return this.__getterCache.overflowIndicators
        }
        return this.__getterCache.overflowIndicators = (() => {
            if (this.props.isAllDay) {
                return this.appointmentsContextValue.viewModel.allDayCompact
            }
            return this.appointmentsContextValue.viewModel.regularCompact
        })()
    }
    onAppointmentPointerDown(e) {
        var appointmentElement = e.target.closest(SELECTOR.appointment);
        if (appointmentElement) {
            var {
                index: index
            } = appointmentElement.dataset;
            var focusedAppointmentIndex = index ? parseInt(index, 10) : -1;
            var isAllDay = appointmentElement.classList.contains(SELECTOR.allDay);
            var isCompact = appointmentElement.classList.contains(SELECTOR.collector);
            var typeMap = {
                allDayCompact: isAllDay && isCompact,
                allDay: isAllDay && !isCompact,
                regularCompact: !isAllDay && isCompact,
                regular: !isAllDay && !isCompact
            };
            var appointmentType = Object.entries(typeMap).filter(item => item[1])[0][0];
            this.appointmentsContextValue.updateFocusedAppointment(appointmentType, focusedAppointmentIndex)
        }
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, _excluded);
        return restProps
    }
    componentWillUpdate(nextProps, nextState, context) {
        super.componentWillUpdate();
        if (this.props.isAllDay !== nextProps.isAllDay || this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id] !== context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id]) {
            this.__getterCache.appointments = void 0
        }
        if (this.props.isAllDay !== nextProps.isAllDay || this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id] !== context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id]) {
            this.__getterCache.overflowIndicators = void 0
        }
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props),
            layoutRef: this.layoutRef,
            appointmentsContextValue: this.appointmentsContextValue,
            classes: this.classes,
            appointments: this.appointments,
            overflowIndicators: this.overflowIndicators,
            onAppointmentPointerDown: this.onAppointmentPointerDown,
            restAttributes: this.restAttributes
        })
    }
}
AppointmentLayout.defaultProps = AppointmentLayoutProps;


/***/ }),

/***/ 13296:
/*!******************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/overflow_indicator/layout.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "OverflowIndicatorProps": function() { return /* binding */ OverflowIndicatorProps; },
/* harmony export */   "OverflowIndicator": function() { return /* binding */ OverflowIndicator; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/combine_classes */ 33582);
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../button */ 6941);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils */ 34534);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../localization/message */ 19336);
/* harmony import */ var _appointments_context__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../appointments_context */ 29263);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils */ 259);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["groups", "overflowIndicatorTemplate", "viewModel"];









var viewFunction = _ref => {
    var {
        classes: classes,
        data: data,
        props: {
            overflowIndicatorTemplate: OverflowIndicatorTemplate
        },
        styles: styles,
        text: text
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _button__WEBPACK_IMPORTED_MODULE_5__.Button, {
        style: (0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(styles),
        className: classes,
        type: "default",
        stylingMode: "contained",
        children: OverflowIndicatorTemplate ? OverflowIndicatorTemplate({
            data: data
        }) : (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "span", null, text, 0)
    })
};
var OverflowIndicatorProps = {};
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class OverflowIndicator extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoComponent {
    constructor(props) {
        super(props);
        this.state = {
            color: void 0
        };
        this.updateStylesEffect = this.updateStylesEffect.bind(this)
    }
    get appointmentsContextValue() {
        if (this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_8__.AppointmentsContext.id]) {
            return this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_8__.AppointmentsContext.id]
        }
        return _appointments_context__WEBPACK_IMPORTED_MODULE_8__.AppointmentsContext.defaultValue
    }
    createEffects() {
        return [new _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoEffect(this.updateStylesEffect, [this.props.groups, this.props.viewModel, this.appointmentsContextValue])]
    }
    updateEffects() {
        var _this$_effects$;
        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.groups, this.props.viewModel, this.appointmentsContextValue])
    }
    updateStylesEffect() {
        var {
            groups: groups,
            viewModel: viewModel
        } = this.props;
        (0,_utils__WEBPACK_IMPORTED_MODULE_6__.getIndicatorColor)(this.appointmentsContextValue, viewModel, groups).then(color => {
            this.setState(__state_argument => ({
                color: color
            }))
        })
    }
    get data() {
        return {
            appointmentCount: this.props.viewModel.items.settings.length,
            isCompact: this.props.viewModel.isCompact
        }
    }
    get text() {
        var {
            isCompact: isCompact
        } = this.props.viewModel;
        var {
            appointmentCount: appointmentCount
        } = this.data;
        if (isCompact) {
            return "".concat(appointmentCount)
        }
        var formatter = _localization_message__WEBPACK_IMPORTED_MODULE_7__.default.getFormatter("dxScheduler-moreAppointments");
        return formatter(appointmentCount)
    }
    get appointmentStyles() {
        return (0,_utils__WEBPACK_IMPORTED_MODULE_6__.getOverflowIndicatorStyles)(this.props.viewModel)
    }
    get styles() {
        return (0,_utils__WEBPACK_IMPORTED_MODULE_9__.mergeStylesWithColor)(this.state.color, this.appointmentStyles)
    }
    get classes() {
        return (0,_utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__.combineClasses)({
            "dx-scheduler-appointment-collector": true,
            "dx-scheduler-appointment-collector-compact": this.data.isCompact
        })
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                overflowIndicatorTemplate: getTemplate(props.overflowIndicatorTemplate)
            }),
            color: this.state.color,
            appointmentsContextValue: this.appointmentsContextValue,
            data: this.data,
            text: this.text,
            appointmentStyles: this.appointmentStyles,
            styles: this.styles,
            classes: this.classes,
            restAttributes: this.restAttributes
        })
    }
}
OverflowIndicator.defaultProps = OverflowIndicatorProps;


/***/ }),

/***/ 34534:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getOverflowIndicatorStyles": function() { return /* binding */ getOverflowIndicatorStyles; },
/* harmony export */   "getOverflowIndicatorColor": function() { return /* binding */ getOverflowIndicatorColor; },
/* harmony export */   "getIndicatorColor": function() { return /* binding */ getIndicatorColor; }
/* harmony export */ });
/* harmony import */ var _workspaces_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../workspaces/utils */ 59016);
/* harmony import */ var _resources_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../resources/utils */ 56085);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var getOverflowIndicatorStyles = viewModel => {
    var {
        geometry: {
            height: height,
            left: left,
            top: top,
            width: width
        }
    } = viewModel;
    var result = (0,_workspaces_utils__WEBPACK_IMPORTED_MODULE_0__.addToStyles)([{
        attr: "left",
        value: "".concat(left, "px")
    }, {
        attr: "top",
        value: "".concat(top, "px")
    }, {
        attr: "width",
        value: "".concat(width, "px")
    }, {
        attr: "height",
        value: "".concat(height, "px")
    }, {
        attr: "boxShadow",
        value: "inset ".concat(width, "px 0 0 0 rgba(0, 0, 0, 0.3)")
    }]);
    return result
};
var getOverflowIndicatorColor = (color, colors) => !colors.length || 0 === colors.filter(item => item !== color).length ? color : void 0;
var getIndicatorColor = (appointmentContext, viewModel, groups) => {
    var _viewModel$groupIndex;
    var groupIndex = null !== (_viewModel$groupIndex = viewModel.groupIndex) && void 0 !== _viewModel$groupIndex ? _viewModel$groupIndex : 0;
    var {
        appointment: appointment
    } = viewModel.items.settings[0];
    return (0,_resources_utils__WEBPACK_IMPORTED_MODULE_1__.getAppointmentColor)({
        resources: appointmentContext.resources,
        resourceLoaderMap: appointmentContext.resourceLoaderMap,
        resourcesDataAccessors: appointmentContext.dataAccessors.resources,
        loadedResources: appointmentContext.loadedResources
    }, {
        itemData: appointment,
        groupIndex: groupIndex,
        groups: groups
    })
};


/***/ }),

/***/ 259:
/*!**********************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/utils.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getAppointmentStyles": function() { return /* binding */ getAppointmentStyles; },
/* harmony export */   "getAppointmentKey": function() { return /* binding */ getAppointmentKey; },
/* harmony export */   "getReducedIconTooltipText": function() { return /* binding */ getReducedIconTooltipText; },
/* harmony export */   "mergeStylesWithColor": function() { return /* binding */ mergeStylesWithColor; }
/* harmony export */ });
/* harmony import */ var _workspaces_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../workspaces/utils */ 59016);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../localization/message */ 19336);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../localization/date */ 83881);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment/utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var EditorLabelLocalizationConst = "dxScheduler-editorLabelEndDate";
var getAppointmentStyles = viewModel => {
    var {
        geometry: {
            height: height,
            left: left,
            top: top,
            width: width
        }
    } = viewModel;
    return (0,_workspaces_utils__WEBPACK_IMPORTED_MODULE_0__.addToStyles)([{
        attr: "height",
        value: "".concat(height || 50, "px")
    }, {
        attr: "width",
        value: "".concat(width || 50, "px")
    }, {
        attr: "top",
        value: "".concat(top, "px")
    }, {
        attr: "left",
        value: "".concat(left, "px")
    }])
};
var getAppointmentKey = geometry => {
    var {
        height: height,
        left: left,
        top: top,
        width: width
    } = geometry;
    return "".concat(left, "-").concat(top, "-").concat(width, "-").concat(height)
};
var getReducedIconTooltipText = endDate => {
    var tooltipLabel = _localization_message__WEBPACK_IMPORTED_MODULE_1__.default.format(EditorLabelLocalizationConst);
    if (!endDate) {
        return tooltipLabel
    }
    var date = new Date(endDate);
    var monthAndDay = _localization_date__WEBPACK_IMPORTED_MODULE_2__.default.format(date, "monthAndDay");
    var year = _localization_date__WEBPACK_IMPORTED_MODULE_2__.default.format(date, "year");
    return "".concat(tooltipLabel, ": ").concat(monthAndDay, ", ").concat(year)
};
var mergeStylesWithColor = (color, styles) => !color ? styles : (0,_workspaces_utils__WEBPACK_IMPORTED_MODULE_0__.addToStyles)([{
    attr: "backgroundColor",
    value: color
}], styles);


/***/ }),

/***/ 89448:
/*!************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getAppointmentTakesAllDay": function() { return /* binding */ getAppointmentTakesAllDay; }
/* harmony export */ });
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/utils/date */ 35341);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var getAppointmentDurationInHours = (startDate, endDate) => (endDate.getTime() - startDate.getTime()) / _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds("hour");
var appointmentHasShortDayDuration = (startDate, endDate, viewStartDayHour, viewEndDayHour) => {
    var appointmentDurationInHours = getAppointmentDurationInHours(startDate, endDate);
    var viewDurationInHours = viewEndDayHour - viewStartDayHour;
    var startDateHours = startDate.getHours();
    var endDateHours = endDate.getHours();
    return appointmentDurationInHours >= viewDurationInHours && startDateHours === viewStartDayHour && endDateHours === viewEndDayHour
};
var getAppointmentTakesAllDay = (appointmentAdapter, viewStartDayHour, viewEndDayHour, allDayPanelMode) => {
    var hasAllDay = () => appointmentAdapter.allDay;
    switch (allDayPanelMode) {
        case "hidden":
            return false;
        case "allDay":
            return hasAllDay();
        case "all":
        default:
            if (hasAllDay()) {
                return true
            }
            var {
                endDate: endDate, startDate: startDate
            } = appointmentAdapter;
            if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(endDate)) {
                return false
            }
            var appointmentDurationInHours = getAppointmentDurationInHours(startDate, endDate);
            return appointmentDurationInHours >= 24 || appointmentHasShortDayDuration(startDate, endDate, viewStartDayHour, viewEndDayHour)
    }
};


/***/ }),

/***/ 72930:
/*!***************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment_edit_form/popup_config.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "POPUP_WIDTH": function() { return /* binding */ POPUP_WIDTH; },
/* harmony export */   "defaultAnimation": function() { return /* binding */ defaultAnimation; },
/* harmony export */   "getPopupToolbarItems": function() { return /* binding */ getPopupToolbarItems; },
/* harmony export */   "isPopupFullScreenNeeded": function() { return /* binding */ isPopupFullScreenNeeded; },
/* harmony export */   "getMaxWidth": function() { return /* binding */ getMaxWidth; },
/* harmony export */   "getPopupSize": function() { return /* binding */ getPopupSize; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../localization/message */ 19336);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/devices */ 41881);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/utils/size */ 84167);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/utils/window */ 88684);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointment_edit_form/popup_config.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */





var POPUP_WIDTH = {
    DEFAULT: 485,
    RECURRENCE: 970,
    FULLSCREEN: 1e3,
    MOBILE: {
        DEFAULT: 350,
        FULLSCREEN: 500
    }
};
var defaultAnimation = {
    show: {
        type: "pop",
        duration: 300,
        from: {
            scale: .55
        }
    },
    hide: {
        type: "pop",
        duration: 300,
        to: {
            opacity: 0,
            scale: .55
        },
        from: {
            opacity: 1,
            scale: 1
        }
    }
};
var isMobile = () => "desktop" !== _core_devices__WEBPACK_IMPORTED_MODULE_2__.default.current().deviceType;
var isIOSPlatform = () => "ios" === _core_devices__WEBPACK_IMPORTED_MODULE_2__.default.current().platform;
var TOOLBAR_LOCATION = {
    AFTER: "after",
    BEFORE: "before"
};
var getButtonsConfig = () => ({
    doneButton: {
        shortcut: "done",
        options: {
            text: _localization_message__WEBPACK_IMPORTED_MODULE_1__.default.format("Done")
        },
        location: TOOLBAR_LOCATION.AFTER
    },
    cancelButton: {
        shortcut: "cancel",
        location: isIOSPlatform() ? TOOLBAR_LOCATION.BEFORE : TOOLBAR_LOCATION.AFTER
    }
});
var getPopupToolbarItems = (allowUpdating, doneClick) => {
    var result = [];
    var buttonsConfig = getButtonsConfig();
    if (allowUpdating) {
        result.push((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, buttonsConfig.doneButton, {
            onClick: doneClick
        }))
    }
    result.push(buttonsConfig.cancelButton);
    return result
};
var isPopupFullScreenNeeded = () => {
    var window = (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_4__.getWindow)();
    var width = window && (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_3__.getWidth)(window);
    if (width) {
        return isMobile() ? width < POPUP_WIDTH.MOBILE.FULLSCREEN : width < POPUP_WIDTH.FULLSCREEN
    }
    return false
};
var getMaxWidth = isRecurrence => {
    if (isMobile()) {
        return POPUP_WIDTH.MOBILE.DEFAULT
    }
    return isRecurrence ? POPUP_WIDTH.RECURRENCE : POPUP_WIDTH.DEFAULT
};
var getPopupSize = isRecurrence => ({
    fullScreen: isPopupFullScreenNeeded(),
    maxWidth: getMaxWidth(isRecurrence)
});


/***/ }),

/***/ 29263:
/*!*************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointments_context.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppointmentsContext": function() { return /* binding */ AppointmentsContext; }
/* harmony export */ });
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/**
 * DevExtreme (esm/renovation/ui/scheduler/appointments_context.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var AppointmentsContext = (0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0);


/***/ }),

/***/ 29239:
/*!***********************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/consts.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VERTICAL_GROUP_ORIENTATION": function() { return /* binding */ VERTICAL_GROUP_ORIENTATION; },
/* harmony export */   "HORIZONTAL_GROUP_ORIENTATION": function() { return /* binding */ HORIZONTAL_GROUP_ORIENTATION; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scheduler/consts.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var VERTICAL_GROUP_ORIENTATION = "vertical";
var HORIZONTAL_GROUP_ORIENTATION = "horizontal";


/***/ }),

/***/ 33867:
/*!***********************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/model/appointments.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getAppointmentRenderingStrategyName": function() { return /* binding */ getAppointmentRenderingStrategyName; },
/* harmony export */   "getAppointmentsConfig": function() { return /* binding */ getAppointmentsConfig; },
/* harmony export */   "getAppointmentsModel": function() { return /* binding */ getAppointmentsModel; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _ui_scheduler_workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../ui/scheduler/workspaces/helpers/positionHelper */ 18690);
/* harmony import */ var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../__internal/scheduler/resources/m_utils */ 48025);
/* harmony import */ var _workspaces_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../workspaces/utils */ 59016);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../view_model/to_test/views/utils/base */ 28123);
/**
 * DevExtreme (esm/renovation/ui/scheduler/model/appointments.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */






var toMs = name => _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.dateToMilliseconds(name);
var getAppointmentRenderingStrategyName = viewType => {
    var {
        renderingStrategy: renderingStrategy
    } = {
        day: {
            renderingStrategy: "vertical"
        },
        week: {
            renderingStrategy: "week"
        },
        workWeek: {
            renderingStrategy: "week"
        },
        month: {
            renderingStrategy: "horizontalMonth"
        },
        timelineDay: {
            renderingStrategy: "horizontal"
        },
        timelineWeek: {
            renderingStrategy: "horizontal"
        },
        timelineWorkWeek: {
            renderingStrategy: "horizontal"
        },
        timelineMonth: {
            renderingStrategy: "horizontalMonthLine"
        },
        agenda: {
            renderingStrategy: "agenda"
        }
    } [viewType];
    return renderingStrategy
};
var getAppointmentsConfig = (schedulerConfig, viewConfig, loadedResources, viewDataProvider, isAllDayPanelSupported) => {
    var groupCount = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_2__.getGroupCount)(loadedResources);
    var startViewDate = viewDataProvider.getStartViewDate();
    var dateRange = [startViewDate, viewDataProvider.getLastViewDateByEndDayHour(viewConfig.endDayHour)];
    return {
        adaptivityEnabled: schedulerConfig.adaptivityEnabled,
        rtlEnabled: schedulerConfig.rtlEnabled,
        resources: schedulerConfig.resources,
        timeZone: schedulerConfig.timeZone,
        groups: schedulerConfig.groups,
        startDayHour: viewConfig.startDayHour,
        viewStartDayHour: viewConfig.startDayHour,
        endDayHour: viewConfig.endDayHour,
        viewEndDayHour: viewConfig.endDayHour,
        currentDate: viewConfig.currentDate,
        isVirtualScrolling: "virtual" === viewConfig.scrolling.mode,
        intervalCount: viewConfig.intervalCount,
        hoursInterval: viewConfig.hoursInterval,
        showAllDayPanel: viewConfig.showAllDayPanel,
        allDayPanelMode: viewConfig.allDayPanelMode,
        supportAllDayRow: isAllDayPanelSupported,
        groupOrientation: viewDataProvider.getViewOptions().groupOrientation,
        firstDayOfWeek: viewConfig.firstDayOfWeek,
        viewType: viewConfig.type,
        cellDurationInMinutes: viewConfig.cellDuration,
        maxAppointmentsPerCell: viewConfig.maxAppointmentsPerCell,
        isVerticalGroupOrientation: viewDataProvider.getViewOptions().isVerticalGrouping,
        groupByDate: viewDataProvider.getViewOptions().isGroupedByDate,
        startViewDate: startViewDate,
        loadedResources: loadedResources,
        appointmentCountPerCell: 2,
        appointmentOffset: 26,
        allowResizing: false,
        allowAllDayResizing: false,
        dateTableOffset: 0,
        groupCount: groupCount,
        dateRange: dateRange
    }
};
var getAppointmentsModel = (appointmentsConfig, viewDataProvider, timeZoneCalculator, dataAccessors, cellsMetaData) => {
    var groupedByDate = (0,_workspaces_utils__WEBPACK_IMPORTED_MODULE_3__.isGroupingByDate)(appointmentsConfig.groups, appointmentsConfig.groupOrientation, appointmentsConfig.groupByDate);
    var {
        groupCount: groupCount,
        isVerticalGroupOrientation: isVerticalGroupOrientation
    } = appointmentsConfig;
    var positionHelper = new _ui_scheduler_workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_1__.PositionHelper({
        viewDataProvider: viewDataProvider,
        groupedByDate: groupedByDate,
        rtlEnabled: appointmentsConfig.rtlEnabled,
        groupCount: groupCount,
        isVerticalGrouping: groupCount && isVerticalGroupOrientation,
        getDOMMetaDataCallback: () => cellsMetaData
    });
    var isGroupedAllDayPanel = (0,_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_5__.calculateIsGroupedAllDayPanel)(appointmentsConfig.loadedResources, appointmentsConfig.groupOrientation, appointmentsConfig.showAllDayPanel);
    var rowCount = viewDataProvider.getRowCount({
        intervalCount: appointmentsConfig.intervalCount,
        currentDate: appointmentsConfig.currentDate,
        viewType: appointmentsConfig.viewType,
        hoursInterval: appointmentsConfig.hoursInterval,
        startDayHour: appointmentsConfig.startDayHour,
        endDayHour: appointmentsConfig.endDayHour
    });
    var allDayHeight = (0,_ui_scheduler_workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_1__.getAllDayHeight)(appointmentsConfig.showAllDayPanel, appointmentsConfig.isVerticalGroupOrientation, cellsMetaData);
    var endViewDate = viewDataProvider.getLastCellEndDate();
    var visibleDayDuration = viewDataProvider.getVisibleDayDuration(appointmentsConfig.startDayHour, appointmentsConfig.endDayHour, appointmentsConfig.hoursInterval);
    var {
        startCellIndex: leftVirtualCellCount,
        startRowIndex: topVirtualRowCount
    } = viewDataProvider.getViewOptions();
    var cellDuration = (0,_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_5__.getCellDuration)(appointmentsConfig.viewType, appointmentsConfig.startDayHour, appointmentsConfig.endDayHour, appointmentsConfig.hoursInterval);
    var appointmentRenderingStrategyName = getAppointmentRenderingStrategyName(appointmentsConfig.viewType);
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, appointmentsConfig, {
        appointmentRenderingStrategyName: appointmentRenderingStrategyName,
        loadedResources: appointmentsConfig.loadedResources,
        dataAccessors: dataAccessors,
        timeZoneCalculator: timeZoneCalculator,
        viewDataProvider: viewDataProvider,
        positionHelper: positionHelper,
        isGroupedAllDayPanel: isGroupedAllDayPanel,
        rowCount: rowCount,
        cellWidth: (0,_ui_scheduler_workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_1__.getCellWidth)(cellsMetaData),
        cellHeight: (0,_ui_scheduler_workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_1__.getCellHeight)(cellsMetaData),
        allDayHeight: allDayHeight,
        isGroupedByDate: groupedByDate,
        endViewDate: endViewDate,
        visibleDayDuration: visibleDayDuration,
        intervalDuration: cellDuration,
        allDayIntervalDuration: toMs("day"),
        leftVirtualCellCount: leftVirtualCellCount,
        topVirtualCellCount: topVirtualRowCount,
        cellDuration: cellDuration,
        resizableStep: positionHelper.getResizableStep(),
        DOMMetaData: cellsMetaData
    })
};


/***/ }),

/***/ 80337:
/*!*********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/model/untyped_getCurrentView.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "renovationGetCurrentView": function() { return /* binding */ renovationGetCurrentView; }
/* harmony export */ });
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/type */ 33275);
/**
 * DevExtreme (esm/renovation/ui/scheduler/model/untyped_getCurrentView.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var VIEW_TYPES = ["day", "week", "workWeek", "month", "timelineDay", "timelineWeek", "timelineWorkWeek", "timelineMonth", "agenda"];
var renovationGetCurrentView = (currentView, views) => {
    var currentViewProps = views.find(view => {
        var names = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isObject)(view) ? [view.name, view.type] : [view];
        if (names.includes(currentView)) {
            return true
        }
        return false
    });
    if (void 0 === currentViewProps) {
        if (VIEW_TYPES.includes(currentView)) {
            currentViewProps = currentView
        } else {
            [currentViewProps] = views
        }
    }
    return currentViewProps
};


/***/ }),

/***/ 13108:
/*!****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/model/views.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getCurrentView": function() { return /* binding */ getCurrentView; },
/* harmony export */   "getCurrentViewProps": function() { return /* binding */ getCurrentViewProps; },
/* harmony export */   "getViewConfigProp": function() { return /* binding */ getViewConfigProp; },
/* harmony export */   "getCurrentViewConfig": function() { return /* binding */ getCurrentViewConfig; },
/* harmony export */   "getValidGroups": function() { return /* binding */ getValidGroups; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _untyped_getCurrentView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./untyped_getCurrentView */ 80337);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/utils/type */ 33275);
/**
 * DevExtreme (esm/renovation/ui/scheduler/model/views.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["height", "scrolling", "width"];


var getCurrentView = _untyped_getCurrentView__WEBPACK_IMPORTED_MODULE_2__.renovationGetCurrentView;
var getCurrentViewProps = (currentView, views) => {
    var currentViewProps = getCurrentView(currentView, views);
    return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isString)(currentViewProps) ? {
        type: currentViewProps
    } : currentViewProps
};
function getViewConfigProp(schedulerProp, viewProp) {
    return void 0 !== viewProp ? viewProp : schedulerProp
}
var getCurrentViewConfig = (currentViewProps, schedulerProps, currentDate) => {
    var {
        scrolling: schedulerScrolling
    } = schedulerProps, restSchedulerProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(schedulerProps, _excluded);
    var {
        scrolling: scrolling
    } = currentViewProps;
    var isVirtualScrolling = "virtual" === schedulerScrolling.mode || "virtual" === (null === scrolling || void 0 === scrolling ? void 0 : scrolling.mode);
    var crossScrollingEnabled = schedulerProps.crossScrollingEnabled || isVirtualScrolling;
    var result = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
        scrolling: schedulerScrolling
    }, restSchedulerProps, currentViewProps, {
        schedulerHeight: schedulerProps.height,
        schedulerWidth: schedulerProps.width,
        crossScrollingEnabled: crossScrollingEnabled,
        appointmentTemplate: currentViewProps.appointmentTemplate || restSchedulerProps.appointmentTemplate,
        dataCellTemplate: currentViewProps.dataCellTemplate || restSchedulerProps.dataCellTemplate,
        dateCellTemplate: currentViewProps.dateCellTemplate || restSchedulerProps.dateCellTemplate,
        timeCellTemplate: currentViewProps.timeCellTemplate || restSchedulerProps.timeCellTemplate,
        resourceCellTemplate: currentViewProps.resourceCellTemplate || restSchedulerProps.resourceCellTemplate,
        appointmentCollectorTemplate: currentViewProps.appointmentCollectorTemplate || restSchedulerProps.appointmentCollectorTemplate,
        appointmentTooltipTemplate: currentViewProps.appointmentTooltipTemplate || restSchedulerProps.appointmentTooltipTemplate,
        allDayPanelMode: currentViewProps.allDayPanelMode || restSchedulerProps.allDayPanelMode
    });
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, result, {
        hoursInterval: result.cellDuration / 60,
        allDayPanelExpanded: true,
        allowMultipleCellSelection: true,
        currentDate: currentDate
    })
};
var getValidGroups = (schedulerGroups, viewGroups) => getViewConfigProp(schedulerGroups, viewGroups);


/***/ }),

/***/ 78993:
/*!*******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/resources/hasResourceValue.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasResourceValue": function() { return /* binding */ hasResourceValue; }
/* harmony export */ });
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/utils/common */ 37552);
/**
 * DevExtreme (esm/renovation/ui/scheduler/resources/hasResourceValue.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var hasResourceValue = (resourceValues, itemValue) => (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(resourceValues.find(value => (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_1__.equalByValue)(value, itemValue)));


/***/ }),

/***/ 56085:
/*!********************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/resources/utils.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getAppointmentColor": function() { return /* binding */ getAppointmentColor; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../__internal/scheduler/resources/m_utils */ 48025);
/**
 * DevExtreme (esm/renovation/ui/scheduler/resources/utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var getAppointmentColor = (resourceConfig, appointmentConfig) => (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__.getAppointmentColor)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, resourceConfig, {
    dataAccessors: resourceConfig.resourcesDataAccessors
}), appointmentConfig);


/***/ }),

/***/ 41059:
/*!************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTimeZoneCalculator": function() { return /* binding */ createTimeZoneCalculator; }
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ 77374);
/* harmony import */ var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../ui/scheduler/utils.timeZone */ 53374);
/**
 * DevExtreme (esm/renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var createTimeZoneCalculator = currentTimeZone => new _utils__WEBPACK_IMPORTED_MODULE_0__.TimeZoneCalculator({
    getClientOffset: date => _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_1__.default.getClientTimezoneOffset(date),
    tryGetCommonOffset: date => _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_1__.default.calculateTimezoneByValue(currentTimeZone, date),
    tryGetAppointmentOffset: (date, appointmentTimezone) => _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_1__.default.calculateTimezoneByValue(appointmentTimezone, date)
});


/***/ }),

/***/ 91757:
/*!*****************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/timeZoneCalculator/types.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PathTimeZoneConversion": function() { return /* binding */ PathTimeZoneConversion; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scheduler/timeZoneCalculator/types.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var PathTimeZoneConversion;
! function(PathTimeZoneConversion) {
    PathTimeZoneConversion.fromSourceToAppointment = "toAppointment";
    PathTimeZoneConversion.fromAppointmentToSource = "fromAppointment";
    PathTimeZoneConversion.fromSourceToGrid = "toGrid";
    PathTimeZoneConversion.fromGridToSource = "fromGrid"
}(PathTimeZoneConversion || (PathTimeZoneConversion = {}));


/***/ }),

/***/ 77374:
/*!*****************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/timeZoneCalculator/utils.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimeZoneCalculator": function() { return /* binding */ TimeZoneCalculator; }
/* harmony export */ });
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ 91757);
/**
 * DevExtreme (esm/renovation/ui/scheduler/timeZoneCalculator/utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var MS_IN_MINUTE = 6e4;
var MS_IN_HOUR = 60 * MS_IN_MINUTE;
class TimeZoneCalculator {
    constructor(options) {
        this.options = options
    }
    createDate(sourceDate, info) {
        var date = new Date(sourceDate);
        switch (info.path) {
            case _types__WEBPACK_IMPORTED_MODULE_2__.PathTimeZoneConversion.fromSourceToAppointment:
                return this.getConvertedDate(date, info.appointmentTimeZone, true, false);
            case _types__WEBPACK_IMPORTED_MODULE_2__.PathTimeZoneConversion.fromAppointmentToSource:
                return this.getConvertedDate(date, info.appointmentTimeZone, true, true);
            case _types__WEBPACK_IMPORTED_MODULE_2__.PathTimeZoneConversion.fromSourceToGrid:
                return this.getConvertedDate(date, info.appointmentTimeZone, false, false);
            case _types__WEBPACK_IMPORTED_MODULE_2__.PathTimeZoneConversion.fromGridToSource:
                return this.getConvertedDate(date, info.appointmentTimeZone, false, true);
            default:
                throw new Error("not specified pathTimeZoneConversion")
        }
    }
    getOffsets(date, appointmentTimezone) {
        var clientOffset = -this.getClientOffset(date) / _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds("hour");
        var commonOffset = this.getCommonOffset(date);
        var appointmentOffset = this.getAppointmentOffset(date, appointmentTimezone);
        return {
            client: clientOffset,
            common: !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(commonOffset) ? clientOffset : commonOffset,
            appointment: "number" !== typeof appointmentOffset ? clientOffset : appointmentOffset
        }
    }
    getConvertedDateByOffsets(date, clientOffset, targetOffset, isBack) {
        var direction = isBack ? -1 : 1;
        var resultDate = new Date(date);
        resultDate.setMinutes(resultDate.getMinutes() - direction * (60 * clientOffset));
        resultDate.setMinutes(resultDate.getMinutes() + direction * (60 * targetOffset));
        return new Date(resultDate)
    }
    getOriginStartDateOffsetInMs(date, timezone, isUTCDate) {
        var offsetInHours = this.getOffsetInHours(date, timezone, isUTCDate);
        return offsetInHours * MS_IN_HOUR
    }
    getOffsetInHours(date, timezone, isUTCDate) {
        var {
            appointment: appointment,
            client: client,
            common: common
        } = this.getOffsets(date, timezone);
        if (!!timezone && isUTCDate) {
            return appointment - client
        }
        if (!!timezone && !isUTCDate) {
            return appointment - common
        }
        if (!timezone && isUTCDate) {
            return common - client
        }
        return 0
    }
    getClientOffset(date) {
        return this.options.getClientOffset(date)
    }
    getCommonOffset(date) {
        return this.options.tryGetCommonOffset(date)
    }
    getAppointmentOffset(date, appointmentTimezone) {
        return this.options.tryGetAppointmentOffset(date, appointmentTimezone)
    }
    getConvertedDate(date, appointmentTimezone, useAppointmentTimeZone, isBack) {
        var newDate = new Date(date.getTime());
        var offsets = this.getOffsets(newDate, appointmentTimezone);
        if (useAppointmentTimeZone && !!appointmentTimezone) {
            return this.getConvertedDateByOffsets(date, offsets.client, offsets.appointment, isBack)
        }
        return this.getConvertedDateByOffsets(date, offsets.client, offsets.common, isBack)
    }
}


/***/ }),

/***/ 48543:
/*!***************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/utils/data.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getPreparedDataItems": function() { return /* binding */ getPreparedDataItems; },
/* harmony export */   "resolveDataItems": function() { return /* binding */ resolveDataItems; }
/* harmony export */ });
/* harmony import */ var _internal_scheduler_appointments_data_provider_m_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../__internal/scheduler/appointments/data_provider/m_utils */ 57534);
/* harmony import */ var _ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../ui/scheduler/appointmentAdapter */ 50760);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/utils/type */ 33275);
/**
 * DevExtreme (esm/renovation/ui/scheduler/utils/data.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var RECURRENCE_FREQ = "freq";
var getPreparedDataItems = (dataItems, dataAccessors, cellDurationInMinutes, timeZoneCalculator) => {
    var result = [];
    null === dataItems || void 0 === dataItems ? void 0 : dataItems.forEach(rawAppointment => {
        var _recurrenceRule$match;
        var startDate = new Date(dataAccessors.getter.startDate(rawAppointment));
        var endDate = new Date(dataAccessors.getter.endDate(rawAppointment));
        (0,_internal_scheduler_appointments_data_provider_m_utils__WEBPACK_IMPORTED_MODULE_0__.replaceWrongEndDate)(rawAppointment, startDate, endDate, cellDurationInMinutes, dataAccessors);
        var adapter = (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_1__.createAppointmentAdapter)(rawAppointment, dataAccessors, timeZoneCalculator);
        var comparableStartDate = adapter.startDate && adapter.calculateStartDate("toGrid");
        var comparableEndDate = adapter.endDate && adapter.calculateEndDate("toGrid");
        var regex = new RegExp(RECURRENCE_FREQ, "gi");
        var recurrenceRule = adapter.recurrenceRule;
        var hasRecurrenceRule = !!(null !== recurrenceRule && void 0 !== recurrenceRule && null !== (_recurrenceRule$match = recurrenceRule.match(regex)) && void 0 !== _recurrenceRule$match && _recurrenceRule$match.length);
        var visible = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(rawAppointment.visible) ? !!rawAppointment.visible : true;
        if (comparableStartDate && comparableEndDate) {
            result.push({
                allDay: !!adapter.allDay,
                startDate: comparableStartDate,
                startDateTimeZone: rawAppointment.startDateTimeZone,
                endDate: comparableEndDate,
                endDateTimeZone: rawAppointment.endDateTimeZone,
                recurrenceRule: adapter.recurrenceRule,
                recurrenceException: adapter.recurrenceException,
                hasRecurrenceRule: hasRecurrenceRule,
                visible: visible,
                rawAppointment: rawAppointment
            })
        }
    });
    return result
};
var resolveDataItems = options => Array.isArray(options) ? options : options.data;


/***/ }),

/***/ 31424:
/*!****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/utils/filtering/getDatesWithoutTime.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/utils/date */ 35341);
/**
 * DevExtreme (esm/renovation/ui/scheduler/utils/filtering/getDatesWithoutTime.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var getDatesWithoutTime = (min, max) => {
    var newMin = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(min);
    var newMax = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(max);
    newMax.setDate(newMax.getDate() + 1);
    return [newMin, newMax]
};
/* harmony default export */ __webpack_exports__["default"] = (getDatesWithoutTime);


/***/ }),

/***/ 57285:
/*!***************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/utils/filtering/remote.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/utils/common */ 37552);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/utils/date_serialization */ 37043);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/utils/type */ 33275);
/* harmony import */ var _getDatesWithoutTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getDatesWithoutTime */ 31424);
/**
 * DevExtreme (esm/renovation/ui/scheduler/utils/filtering/remote.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */





var FilterPosition = {
    dateFilter: 0,
    userFilter: 1
};
class RemoteFilterCombiner {
    constructor(options) {
        this.options = options
    }
    get dataAccessors() {
        return this.options.dataAccessors
    }
    get dataSourceFilter() {
        return this.options.dataSourceFilter
    }
    get dateSerializationFormat() {
        return this.options.dateSerializationFormat
    }
    get forceIsoDateParsing() {
        return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isDefined)(this.options.forceIsoDateParsing) ? this.options.forceIsoDateParsing : true
    }
    makeDateFilter(min, max) {
        var {
            endDateExpr: endDateExpr,
            recurrenceRuleExpr: recurrenceRuleExpr,
            startDateExpr: startDateExpr
        } = this.dataAccessors.expr;
        var dateFilter = [
            [
                [endDateExpr, ">=", min],
                [startDateExpr, "<", max]
            ], "or", [recurrenceRuleExpr, "startswith", "freq"], "or", [
                [endDateExpr, min],
                [startDateExpr, min]
            ]
        ];
        if (!recurrenceRuleExpr) {
            dateFilter.splice(1, 2)
        }
        return dateFilter
    }
    combineFilters(dateFilter, userFilter) {
        var combinedFilter = [];
        dateFilter && combinedFilter.push(dateFilter);
        userFilter && combinedFilter.push(userFilter);
        return this.serializeRemoteFilter(combinedFilter)
    }
    serializeRemoteFilter(combinedFilter) {
        if (!Array.isArray(combinedFilter)) {
            return combinedFilter
        }
        var {
            endDateExpr: endDateExpr,
            startDateExpr: startDateExpr
        } = this.dataAccessors.expr;
        var filter = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)([], combinedFilter);
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isString)(filter[0])) {
            if (this.forceIsoDateParsing && filter.length > 1) {
                if (filter[0] === startDateExpr || filter[0] === endDateExpr) {
                    var lastFilterValue = filter[filter.length - 1];
                    filter[filter.length - 1] = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_2__.default.serializeDate(new Date(lastFilterValue), this.dateSerializationFormat)
                }
            }
        }
        for (var i = 0; i < filter.length; i += 1) {
            filter[i] = this.serializeRemoteFilter(filter[i])
        }
        return filter
    }
    getUserFilter(dateFilter) {
        if (!this.dataSourceFilter || (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_0__.equalByValue)(this.dataSourceFilter, dateFilter)) {
            return
        }
        var containsDateFilter = this.dataSourceFilter.length > 0 && (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_0__.equalByValue)(this.dataSourceFilter[FilterPosition.dateFilter], dateFilter);
        var userFilter = containsDateFilter ? this.dataSourceFilter[FilterPosition.userFilter] : this.dataSourceFilter;
        return userFilter
    }
    combine(min, max) {
        var [trimMin, trimMax] = (0,_getDatesWithoutTime__WEBPACK_IMPORTED_MODULE_4__.default)(min, max);
        var dateFilter = this.makeDateFilter(trimMin, trimMax);
        var userFilter = this.getUserFilter(dateFilter);
        var combinedFilter = this.combineFilters(dateFilter, userFilter);
        return combinedFilter
    }
}
var combineRemoteFilter = options => new RemoteFilterCombiner(options).combine(options.min, options.max);
/* harmony default export */ __webpack_exports__["default"] = (combineRemoteFilter);


/***/ }),

/***/ 68913:
/*!*******************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "excludeFromRecurrence": function() { return /* binding */ excludeFromRecurrence; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../ui/scheduler/appointmentAdapter */ 50760);
/* harmony import */ var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/utils/date_serialization */ 37043);
/**
 * DevExtreme (esm/renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var FULL_DATE_FORMAT = "yyyyMMddTHHmmss";
var UTC_FULL_DATE_FORMAT = "".concat(FULL_DATE_FORMAT, "Z");
var getSerializedDate = (date, startDate, isAllDay) => {
    if (isAllDay) {
        date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds())
    }
    return _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_2__.default.serializeDate(date, UTC_FULL_DATE_FORMAT)
};
var createRecurrenceException = (appointmentAdapter, exceptionDate) => {
    var result = [];
    if (appointmentAdapter.recurrenceException) {
        result.push(appointmentAdapter.recurrenceException)
    }
    result.push(getSerializedDate(exceptionDate, appointmentAdapter.startDate, appointmentAdapter.allDay));
    return result.join()
};
var excludeFromRecurrence = (appointment, exceptionDate, dataAccessors, timeZoneCalculator) => {
    var appointmentAdapter = (0,_ui_scheduler_appointmentAdapter__WEBPACK_IMPORTED_MODULE_1__.createAppointmentAdapter)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, appointment), dataAccessors, timeZoneCalculator);
    appointmentAdapter.recurrenceException = createRecurrenceException(appointmentAdapter, exceptionDate);
    return appointmentAdapter
};


/***/ }),

/***/ 26571:
/*!******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/utils/semaphore/semaphore.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Semaphore": function() { return /* binding */ Semaphore; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scheduler/utils/semaphore/semaphore.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
class Semaphore {
    constructor() {
        this.counter = 0
    }
    isFree() {
        return 0 === this.counter
    }
    take() {
        this.counter += 1
    }
    release() {
        this.counter -= 1;
        if (this.counter < 0) {
            this.counter = 0
        }
    }
}


/***/ }),

/***/ 74418:
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/utils/date */ 35341);
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var getSkippedHoursInRange = (startDate, endDate, viewDataProvider) => {
    var msInHour = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateToMilliseconds("hour");
    var startTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(startDate).getTime();
    var endTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.setToDayEnd(new Date(endDate.getTime() - 1)).getTime();
    var allDayIntervalDuration = 24 * msInHour;
    var excludedHours = 0;
    for (var time = startTime; time < endTime; time += allDayIntervalDuration) {
        var checkDate = new Date(time);
        if (viewDataProvider.isSkippedDate(checkDate)) {
            excludedHours += 24
        }
    }
    return excludedHours
};
/* harmony default export */ __webpack_exports__["default"] = (getSkippedHoursInRange);


/***/ }),

/***/ 42626:
/*!*********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/group_panel/utils.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getGroupPanelData": function() { return /* binding */ getGroupPanelData; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/group_panel/utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var extendGroupItemsForGroupingByDate = (groupRenderItems, columnCountPerGroup) => [...new Array(columnCountPerGroup)].reduce((currentGroupItems, _, index) => groupRenderItems.map((groupsRow, rowIndex) => {
    var currentRow = currentGroupItems[rowIndex] || [];
    return [...currentRow, ...groupsRow.map((item, columnIndex) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, item, {
        key: "".concat(item.key, "_group_by_date_").concat(index),
        isFirstGroupCell: 0 === columnIndex,
        isLastGroupCell: columnIndex === groupsRow.length - 1
    }))]
}), []);
var getGroupPanelData = (groups, columnCountPerGroup, groupByDate, baseColSpan) => {
    var repeatCount = 1;
    var groupPanelItems = groups.map(group => {
        var result = [];
        var {
            data: data,
            items: items,
            name: resourceName
        } = group;
        var _loop = function(iterator) {
            result.push(...items.map((_ref, index) => {
                var {
                    color: color,
                    id: id,
                    text: text
                } = _ref;
                return {
                    id: id,
                    text: text,
                    color: color,
                    key: "".concat(iterator, "_").concat(resourceName, "_").concat(id),
                    resourceName: resourceName,
                    data: null === data || void 0 === data ? void 0 : data[index]
                }
            }))
        };
        for (var iterator = 0; iterator < repeatCount; iterator += 1) {
            _loop(iterator)
        }
        repeatCount *= items.length;
        return result
    });
    if (groupByDate) {
        groupPanelItems = extendGroupItemsForGroupingByDate(groupPanelItems, columnCountPerGroup)
    }
    return {
        groupPanelItems: groupPanelItems,
        baseColSpan: baseColSpan
    }
};


/***/ }),

/***/ 7967:
/*!******************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/agenda.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "calculateStartViewDate": function() { return /* binding */ calculateStartViewDate; }
/* harmony export */ });
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ 28123);
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/agenda.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var calculateStartViewDate = (currentDate, startDayHour) => {
    var validCurrentDate = new Date(currentDate);
    return (0,_base__WEBPACK_IMPORTED_MODULE_0__.setOptionHour)(validCurrentDate, startDayHour)
};


/***/ }),

/***/ 28123:
/*!****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/base.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isDateInRange": function() { return /* binding */ isDateInRange; },
/* harmony export */   "setOptionHour": function() { return /* binding */ setOptionHour; },
/* harmony export */   "getViewStartByOptions": function() { return /* binding */ getViewStartByOptions; },
/* harmony export */   "getCalculatedFirstDayOfWeek": function() { return /* binding */ getCalculatedFirstDayOfWeek; },
/* harmony export */   "calculateViewStartDate": function() { return /* binding */ calculateViewStartDate; },
/* harmony export */   "calculateCellIndex": function() { return /* binding */ calculateCellIndex; },
/* harmony export */   "getStartViewDateWithoutDST": function() { return /* binding */ getStartViewDateWithoutDST; },
/* harmony export */   "getHeaderCellText": function() { return /* binding */ getHeaderCellText; },
/* harmony export */   "validateDayHours": function() { return /* binding */ validateDayHours; },
/* harmony export */   "getStartViewDateTimeOffset": function() { return /* binding */ getStartViewDateTimeOffset; },
/* harmony export */   "formatWeekday": function() { return /* binding */ formatWeekday; },
/* harmony export */   "formatWeekdayAndDay": function() { return /* binding */ formatWeekdayAndDay; },
/* harmony export */   "getToday": function() { return /* binding */ getToday; },
/* harmony export */   "getVerticalGroupCountClass": function() { return /* binding */ getVerticalGroupCountClass; },
/* harmony export */   "isDateAndTimeView": function() { return /* binding */ isDateAndTimeView; },
/* harmony export */   "isTimelineView": function() { return /* binding */ isTimelineView; },
/* harmony export */   "getHorizontalGroupCount": function() { return /* binding */ getHorizontalGroupCount; },
/* harmony export */   "calculateIsGroupedAllDayPanel": function() { return /* binding */ calculateIsGroupedAllDayPanel; },
/* harmony export */   "calculateDayDuration": function() { return /* binding */ calculateDayDuration; },
/* harmony export */   "isHorizontalView": function() { return /* binding */ isHorizontalView; },
/* harmony export */   "getTotalCellCountByCompleteData": function() { return /* binding */ getTotalCellCountByCompleteData; },
/* harmony export */   "getTotalRowCountByCompleteData": function() { return /* binding */ getTotalRowCountByCompleteData; },
/* harmony export */   "getDisplayedCellCount": function() { return /* binding */ getDisplayedCellCount; },
/* harmony export */   "getDisplayedRowCount": function() { return /* binding */ getDisplayedRowCount; },
/* harmony export */   "getCellDuration": function() { return /* binding */ getCellDuration; }
/* harmony export */ });
/* harmony import */ var _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../ui/widget/ui.errors */ 42491);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../core/utils/type */ 33275);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../localization/date */ 83881);
/* harmony import */ var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../ui/scheduler/utils.timeZone */ 53374);
/* harmony import */ var _ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../ui/scheduler/classes */ 19156);
/* harmony import */ var _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../ui/scheduler/constants */ 27895);
/* harmony import */ var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../__internal/scheduler/resources/m_utils */ 48025);
/* harmony import */ var _workspaces_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../workspaces/utils */ 59016);
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./const */ 5896);
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/base.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */










var isDateInRange = (date, startDate, endDate, diff) => diff > 0 ? _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateInRange(date, startDate, new Date(endDate.getTime() - 1)) : _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateInRange(date, endDate, startDate, "date");
var setOptionHour = (date, optionHour) => {
    var nextDate = new Date(date);
    if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(optionHour)) {
        return nextDate
    }
    nextDate.setHours(optionHour, optionHour % 1 * 60, 0, 0);
    return nextDate
};
var getViewStartByOptions = (startDate, currentDate, intervalDuration, startViewDate) => {
    if (!startDate) {
        return new Date(currentDate)
    }
    var currentStartDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.trimTime(startViewDate);
    var diff = currentStartDate.getTime() <= currentDate.getTime() ? 1 : -1;
    var endDate = new Date(currentStartDate.getTime() + intervalDuration * diff);
    while (!isDateInRange(currentDate, currentStartDate, endDate, diff)) {
        currentStartDate = endDate;
        endDate = new Date(currentStartDate.getTime() + intervalDuration * diff)
    }
    return diff > 0 ? currentStartDate : endDate
};
var getCalculatedFirstDayOfWeek = firstDayOfWeekOption => (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(firstDayOfWeekOption) ? firstDayOfWeekOption : _localization_date__WEBPACK_IMPORTED_MODULE_3__.default.firstDayOfWeekIndex();
var calculateViewStartDate = startDateOption => startDateOption;
var calculateCellIndex = (rowIndex, columnIndex, rowCount) => columnIndex * rowCount + rowIndex;
var getStartViewDateWithoutDST = (startViewDate, startDayHour) => {
    var newStartViewDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.getDateWithoutTimezoneChange(startViewDate);
    newStartViewDate.setHours(startDayHour);
    return newStartViewDate
};
var getHeaderCellText = (headerIndex, date, headerCellTextFormat, getDateForHeaderText, additionalOptions) => {
    var validDate = getDateForHeaderText(headerIndex, date, additionalOptions);
    return _localization_date__WEBPACK_IMPORTED_MODULE_3__.default.format(validDate, headerCellTextFormat)
};
var validateDayHours = (startDayHour, endDayHour) => {
    if (startDayHour >= endDayHour) {
        throw _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_0__.default.Error("E1058")
    }
};
var getStartViewDateTimeOffset = (startViewDate, startDayHour) => {
    var validStartDayHour = Math.floor(startDayHour);
    var isDSTChange = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.isTimezoneChangeInDate(startViewDate);
    if (isDSTChange && validStartDayHour !== startViewDate.getHours()) {
        return _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds("hour")
    }
    return 0
};
var formatWeekday = date => _localization_date__WEBPACK_IMPORTED_MODULE_3__.default.getDayNames("abbreviated")[date.getDay()];
var formatWeekdayAndDay = date => "".concat(formatWeekday(date), " ").concat(_localization_date__WEBPACK_IMPORTED_MODULE_3__.default.format(date, "day"));
var getToday = (indicatorTime, timeZoneCalculator) => {
    var todayDate = null !== indicatorTime && void 0 !== indicatorTime ? indicatorTime : new Date;
    return (null === timeZoneCalculator || void 0 === timeZoneCalculator ? void 0 : timeZoneCalculator.createDate(todayDate, {
        path: "toGrid"
    })) || todayDate
};
var getVerticalGroupCountClass = groups => {
    switch (null === groups || void 0 === groups ? void 0 : groups.length) {
        case 1:
            return _ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_5__.VERTICAL_GROUP_COUNT_CLASSES[0];
        case 2:
            return _ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_5__.VERTICAL_GROUP_COUNT_CLASSES[1];
        case 3:
            return _ui_scheduler_classes__WEBPACK_IMPORTED_MODULE_5__.VERTICAL_GROUP_COUNT_CLASSES[2];
        default:
            return
    }
};
var isDateAndTimeView = viewType => viewType !== _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_MONTH && viewType !== _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.MONTH;
var isTimelineView = viewType => !!_const__WEBPACK_IMPORTED_MODULE_9__.TIMELINE_VIEWS[viewType];
var getHorizontalGroupCount = (groups, groupOrientation) => {
    var groupCount = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_7__.getGroupCount)(groups) || 1;
    var isVerticalGrouping = (0,_workspaces_utils__WEBPACK_IMPORTED_MODULE_8__.isVerticalGroupingApplied)(groups, groupOrientation);
    return isVerticalGrouping ? 1 : groupCount
};
var calculateIsGroupedAllDayPanel = (groups, groupOrientation, isAllDayPanelVisible) => (0,_workspaces_utils__WEBPACK_IMPORTED_MODULE_8__.isVerticalGroupingApplied)(groups, groupOrientation) && isAllDayPanelVisible;
var calculateDayDuration = (startDayHour, endDayHour) => endDayHour - startDayHour;
var isHorizontalView = viewType => {
    switch (viewType) {
        case _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_DAY:
        case _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_WEEK:
        case _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_WORK_WEEK:
        case _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_MONTH:
        case _ui_scheduler_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.MONTH:
            return true;
        default:
            return false
    }
};
var getTotalCellCountByCompleteData = completeData => completeData[completeData.length - 1].length;
var getTotalRowCountByCompleteData = completeData => completeData.length;
var getDisplayedCellCount = (displayedCellCount, completeData) => null !== displayedCellCount && void 0 !== displayedCellCount ? displayedCellCount : getTotalCellCountByCompleteData(completeData);
var getDisplayedRowCount = (displayedRowCount, completeData) => null !== displayedRowCount && void 0 !== displayedRowCount ? displayedRowCount : getTotalRowCountByCompleteData(completeData);
var getCellDuration = (viewType, startDayHour, endDayHour, hoursInterval) => {
    switch (viewType) {
        case "month":
            return 36e5 * calculateDayDuration(startDayHour, endDayHour);
        case "timelineMonth":
            return _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds("day");
        default:
            return 36e5 * hoursInterval
    }
};


/***/ }),

/***/ 5896:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/const.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VIEWS": function() { return /* binding */ VIEWS; },
/* harmony export */   "TIMELINE_VIEWS": function() { return /* binding */ TIMELINE_VIEWS; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/const.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var VIEWS = {
    DAY: "day",
    WEEK: "week",
    WORK_WEEK: "workWeek",
    MONTH: "month",
    TIMELINE_DAY: "timelineDay",
    TIMELINE_WEEK: "timelineWeek",
    TIMELINE_WORK_WEEK: "timelineWorkWeek",
    TIMELINE_MONTH: "timelineMonth",
    AGENDA: "agenda"
};
var TIMELINE_VIEWS = {
    timelineDay: true,
    timelineWeek: true,
    timelineWorkWeek: true,
    timelineMonth: true
};


/***/ }),

/***/ 62902:
/*!***************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/day.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "calculateStartViewDate": function() { return /* binding */ calculateStartViewDate; }
/* harmony export */ });
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ 28123);
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/day.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var calculateStartViewDate = (currentDate, startDayHour, startDate, intervalDuration) => {
    var firstViewDate = (0,_base__WEBPACK_IMPORTED_MODULE_0__.getViewStartByOptions)(startDate, currentDate, intervalDuration, startDate);
    return (0,_base__WEBPACK_IMPORTED_MODULE_0__.setOptionHour)(firstViewDate, startDayHour)
};


/***/ }),

/***/ 35189:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/month.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getViewStartByOptions": function() { return /* binding */ getViewStartByOptions; },
/* harmony export */   "calculateStartViewDate": function() { return /* binding */ calculateStartViewDate; },
/* harmony export */   "calculateCellIndex": function() { return /* binding */ calculateCellIndex; },
/* harmony export */   "isFirstCellInMonthWithIntervalCount": function() { return /* binding */ isFirstCellInMonthWithIntervalCount; },
/* harmony export */   "getCellText": function() { return /* binding */ getCellText; }
/* harmony export */ });
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../core/utils/date */ 35341);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../localization/date */ 83881);
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base */ 28123);
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/month.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var getViewStartByOptions = (startDate, currentDate, intervalCount, startViewDate) => {
    if (!startDate) {
        return new Date(currentDate)
    }
    var currentStartDate = new Date(startViewDate);
    var validStartViewDate = new Date(startViewDate);
    var diff = currentStartDate.getTime() <= currentDate.getTime() ? 1 : -1;
    var endDate = new Date(new Date(validStartViewDate.setMonth(validStartViewDate.getMonth() + diff * intervalCount)));
    while (!(0,_base__WEBPACK_IMPORTED_MODULE_2__.isDateInRange)(currentDate, currentStartDate, endDate, diff)) {
        currentStartDate = new Date(endDate);
        if (diff > 0) {
            currentStartDate.setDate(1)
        }
        endDate = new Date(new Date(endDate.setMonth(endDate.getMonth() + diff * intervalCount)))
    }
    return diff > 0 ? currentStartDate : endDate
};
var calculateStartViewDate = (currentDate, startDayHour, startDate, intervalCount, firstDayOfWeekOption) => {
    var viewStart = getViewStartByOptions(startDate, currentDate, intervalCount, _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.getFirstMonthDate(startDate));
    var firstMonthDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.getFirstMonthDate(viewStart);
    var firstDayOfWeek = (0,_base__WEBPACK_IMPORTED_MODULE_2__.getCalculatedFirstDayOfWeek)(firstDayOfWeekOption);
    var firstViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.getFirstWeekDate(firstMonthDate, firstDayOfWeek);
    return (0,_base__WEBPACK_IMPORTED_MODULE_2__.setOptionHour)(firstViewDate, startDayHour)
};
var calculateCellIndex = (rowIndex, columnIndex, _, columnCount) => rowIndex * columnCount + columnIndex;
var isFirstCellInMonthWithIntervalCount = (cellDate, intervalCount) => 1 === cellDate.getDate() && intervalCount > 1;
var getCellText = (date, intervalCount) => {
    if (isFirstCellInMonthWithIntervalCount(date, intervalCount)) {
        var monthName = _localization_date__WEBPACK_IMPORTED_MODULE_1__.default.getMonthNames("abbreviated")[date.getMonth()];
        return [monthName, _localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(date, "day")].join(" ")
    }
    return _localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(date, "dd")
};


/***/ }),

/***/ 11377:
/*!**************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "calculateStartViewDate": function() { return /* binding */ calculateStartViewDate; }
/* harmony export */ });
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../core/utils/date */ 35341);
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ 28123);
/* harmony import */ var _month__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./month */ 35189);
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var calculateStartViewDate = (currentDate, startDayHour, startDate, intervalCount) => {
    var firstViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.getFirstMonthDate((0,_month__WEBPACK_IMPORTED_MODULE_2__.getViewStartByOptions)(startDate, currentDate, intervalCount, _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.getFirstMonthDate(startDate)));
    return (0,_base__WEBPACK_IMPORTED_MODULE_1__.setOptionHour)(firstViewDate, startDayHour)
};


/***/ }),

/***/ 55639:
/*!*************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/timeline_week.js ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getDateForHeaderText": function() { return /* binding */ getDateForHeaderText; }
/* harmony export */ });
/* harmony import */ var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../ui/scheduler/utils.timeZone */ 53374);
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ 28123);
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/timeline_week.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var getDateForHeaderText = (index, date, options) => {
    if (!_ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_0__.default.isTimezoneChangeInDate(date)) {
        return date
    }
    var {
        cellCountInDay: cellCountInDay,
        interval: interval,
        startDayHour: startDayHour,
        startViewDate: startViewDate
    } = options;
    var result = (0,_base__WEBPACK_IMPORTED_MODULE_1__.getStartViewDateWithoutDST)(startViewDate, startDayHour);
    var validIndex = index % cellCountInDay;
    result.setTime(result.getTime() + validIndex * interval);
    return result
};


/***/ }),

/***/ 12871:
/*!****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/week.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getIntervalDuration": function() { return /* binding */ getIntervalDuration; },
/* harmony export */   "getValidStartDate": function() { return /* binding */ getValidStartDate; },
/* harmony export */   "calculateStartViewDate": function() { return /* binding */ calculateStartViewDate; },
/* harmony export */   "calculateViewStartDate": function() { return /* binding */ calculateViewStartDate; },
/* harmony export */   "getTimePanelCellText": function() { return /* binding */ getTimePanelCellText; }
/* harmony export */ });
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../core/utils/date */ 35341);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../localization/date */ 83881);
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base */ 28123);
/* harmony import */ var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../ui/scheduler/utils.timeZone */ 53374);
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/week.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var getIntervalDuration = intervalCount => 7 * _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateToMilliseconds("day") * intervalCount;
var getValidStartDate = (startDate, firstDayOfWeek) => startDate ? _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.getFirstWeekDate(startDate, firstDayOfWeek) : void 0;
var calculateStartViewDate = (currentDate, startDayHour, startDate, intervalDuration, firstDayOfWeekOption) => {
    var firstDayOfWeek = (0,_base__WEBPACK_IMPORTED_MODULE_2__.getCalculatedFirstDayOfWeek)(firstDayOfWeekOption);
    var viewStart = (0,_base__WEBPACK_IMPORTED_MODULE_2__.getViewStartByOptions)(startDate, currentDate, intervalDuration, getValidStartDate(startDate, firstDayOfWeek));
    var firstViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.getFirstWeekDate(viewStart, firstDayOfWeek);
    return (0,_base__WEBPACK_IMPORTED_MODULE_2__.setOptionHour)(firstViewDate, startDayHour)
};
var calculateViewStartDate = (startDateOption, firstDayOfWeek) => {
    var validFirstDayOfWeek = null !== firstDayOfWeek && void 0 !== firstDayOfWeek ? firstDayOfWeek : _localization_date__WEBPACK_IMPORTED_MODULE_1__.default.firstDayOfWeekIndex();
    return _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.getFirstWeekDate(startDateOption, validFirstDayOfWeek)
};
var getTimeCellDate = (rowIndex, date, startViewDate, cellDuration, startDayHour) => {
    if (!_ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_3__.default.isTimezoneChangeInDate(date)) {
        return date
    }
    var startViewDateWithoutDST = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_3__.default.getDateWithoutTimezoneChange(startViewDate);
    var result = new Date(startViewDateWithoutDST);
    var timeCellDuration = Math.round(cellDuration);
    var startViewDateOffset = (0,_base__WEBPACK_IMPORTED_MODULE_2__.getStartViewDateTimeOffset)(startViewDate, startDayHour);
    result.setMilliseconds(result.getMilliseconds() + timeCellDuration * rowIndex - startViewDateOffset);
    return result
};
var getTimePanelCellText = (rowIndex, date, startViewDate, cellDuration, startDayHour) => {
    if (rowIndex % 2 === 0) {
        var validDate = getTimeCellDate(rowIndex, date, startViewDate, cellDuration, startDayHour);
        return _localization_date__WEBPACK_IMPORTED_MODULE_1__.default.format(validDate, "shorttime")
    }
    return ""
};


/***/ }),

/***/ 95984:
/*!*********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/work_week.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isDataOnWeekend": function() { return /* binding */ isDataOnWeekend; },
/* harmony export */   "getWeekendsCount": function() { return /* binding */ getWeekendsCount; },
/* harmony export */   "calculateStartViewDate": function() { return /* binding */ calculateStartViewDate; }
/* harmony export */ });
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../core/utils/date */ 35341);
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ 28123);
/* harmony import */ var _week__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./week */ 12871);
/**
 * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/work_week.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var SATURDAY_INDEX = 6;
var SUNDAY_INDEX = 0;
var MONDAY_INDEX = 1;
var DAYS_IN_WEEK = 7;
var isDataOnWeekend = date => {
    var day = date.getDay();
    return day === SATURDAY_INDEX || day === SUNDAY_INDEX
};
var getWeekendsCount = days => 2 * Math.floor(days / 7);
var calculateStartViewDate = (currentDate, startDayHour, startDate, intervalDuration, firstDayOfWeek) => {
    var viewStart = (0,_base__WEBPACK_IMPORTED_MODULE_1__.getViewStartByOptions)(startDate, currentDate, intervalDuration, (0,_week__WEBPACK_IMPORTED_MODULE_2__.getValidStartDate)(startDate, firstDayOfWeek));
    var firstViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.getFirstWeekDate(viewStart, firstDayOfWeek);
    if (isDataOnWeekend(firstViewDate)) {
        var currentDay = firstViewDate.getDay();
        var distance = (MONDAY_INDEX + DAYS_IN_WEEK - currentDay) % 7;
        firstViewDate.setDate(firstViewDate.getDate() + distance)
    }
    return (0,_base__WEBPACK_IMPORTED_MODULE_1__.setOptionHour)(firstViewDate, startDayHour)
};


/***/ }),

/***/ 61074:
/*!*************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/cell.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "CellBaseProps": function() { return /* binding */ CellBaseProps; },
/* harmony export */   "CellBase": function() { return /* binding */ CellBase; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ 59016);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["allDay", "ariaLabel", "children", "className", "contentTemplateProps", "endDate", "groupIndex", "groups", "index", "isFirstGroupCell", "isLastGroupCell", "startDate", "text"];



var viewFunction = viewModel => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "td", viewModel.classes, viewModel.props.children, 0, {
    "aria-label": viewModel.props.ariaLabel
});
var CellBaseProps = {
    className: "",
    isFirstGroupCell: false,
    isLastGroupCell: false,
    startDate: Object.freeze(new Date),
    endDate: Object.freeze(new Date),
    allDay: false,
    text: "",
    index: 0,
    contentTemplateProps: Object.freeze({
        data: {},
        index: 0
    })
};
class CellBase extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get classes() {
        var {
            className: className,
            isFirstGroupCell: isFirstGroupCell,
            isLastGroupCell: isLastGroupCell
        } = this.props;
        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getGroupCellClasses)(isFirstGroupCell, isLastGroupCell, className)
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props),
            classes: this.classes,
            restAttributes: this.restAttributes
        })
    }
}
CellBase.defaultProps = CellBaseProps;


/***/ }),

/***/ 27264:
/*!**************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/cell.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "AllDayPanelCell": function() { return /* binding */ AllDayPanelCell; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../const */ 25222);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cell */ 50995);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["allDay", "ariaLabel", "children", "className", "contentTemplateProps", "dataCellTemplate", "endDate", "firstDayOfMonth", "groupIndex", "groups", "index", "isFirstGroupCell", "isFocused", "isLastGroupCell", "isSelected", "otherMonth", "startDate", "text", "today"];




var viewFunction = _ref => {
    var {
        props: {
            className: className,
            dataCellTemplate: dataCellTemplate,
            endDate: endDate,
            groupIndex: groupIndex,
            groups: groups,
            index: index,
            isFirstGroupCell: isFirstGroupCell,
            isFocused: isFocused,
            isLastGroupCell: isLastGroupCell,
            isSelected: isSelected,
            startDate: startDate
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_5__.DateTableCellBase, {
        className: "".concat(_const__WEBPACK_IMPORTED_MODULE_4__.ALL_DAY_PANEL_CELL_CLASS, " ").concat(className),
        startDate: startDate,
        endDate: endDate,
        groups: groups,
        groupIndex: groupIndex,
        allDay: true,
        isFirstGroupCell: isFirstGroupCell,
        isLastGroupCell: isLastGroupCell,
        index: index,
        dataCellTemplate: dataCellTemplate,
        isSelected: isSelected,
        isFocused: isFocused
    })
};
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class AllDayPanelCell extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                dataCellTemplate: getTemplate(props.dataCellTemplate)
            }),
            restAttributes: this.restAttributes
        })
    }
}
AllDayPanelCell.defaultProps = _cell__WEBPACK_IMPORTED_MODULE_5__.DateTableCellBaseProps;


/***/ }),

/***/ 16551:
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.j.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ AllDayTable; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../core/component_registrator */ 2382);
/* harmony import */ var _component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../component_wrapper/scheduler/date_table */ 5733);
/* harmony import */ var _table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./table */ 72135);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.j.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class AllDayTable extends _component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__.DateTable {
    get _propsInfo() {
        return {
            twoWay: [],
            allowNull: [],
            elements: [],
            templates: ["dataCellTemplate"],
            props: ["viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width", "dataCellTemplate"]
        }
    }
    get _viewComponent() {
        return _table__WEBPACK_IMPORTED_MODULE_2__.AllDayTable
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxAllDayTable", AllDayTable);


/***/ }),

/***/ 72135:
/*!***************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "AllDayTableProps": function() { return /* binding */ AllDayTableProps; },
/* harmony export */   "AllDayTable": function() { return /* binding */ AllDayTable; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../table */ 35686);
/* harmony import */ var _table_body__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./table_body */ 50845);
/* harmony import */ var _layout_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../layout_props */ 21250);
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../const */ 25222);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["addDateTableClass", "addVerticalSizesClassToRows", "bottomVirtualRowHeight", "dataCellTemplate", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "tableRef", "topVirtualRowHeight", "viewData", "width"];






var viewFunction = _ref => {
    var {
        allDayPanelData: allDayPanelData,
        emptyTableHeight: emptyTableHeight,
        props: {
            dataCellTemplate: dataCellTemplate,
            tableRef: tableRef,
            viewData: viewData,
            width: width
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _table__WEBPACK_IMPORTED_MODULE_4__.Table, {
        className: "dx-scheduler-all-day-table",
        height: emptyTableHeight,
        width: width,
        tableRef: tableRef,
        children: (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _table_body__WEBPACK_IMPORTED_MODULE_5__.AllDayPanelTableBody, {
            viewData: allDayPanelData,
            leftVirtualCellWidth: viewData.leftVirtualCellWidth,
            rightVirtualCellWidth: viewData.rightVirtualCellWidth,
            leftVirtualCellCount: viewData.leftVirtualCellCount,
            rightVirtualCellCount: viewData.rightVirtualCellCount,
            dataCellTemplate: dataCellTemplate
        })
    })
};
var AllDayTableProps = _layout_props__WEBPACK_IMPORTED_MODULE_6__.LayoutProps;

var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class AllDayTable extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent {
    constructor(props) {
        super(props);
        this.state = {};
        this.__getterCache = {}
    }
    createEffects() {
        return [(0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()]
    }
    get allDayPanelData() {
        if (void 0 !== this.__getterCache.allDayPanelData) {
            return this.__getterCache.allDayPanelData
        }
        return this.__getterCache.allDayPanelData = (() => this.props.viewData.groupedData[0].allDayPanel)()
    }
    get emptyTableHeight() {
        return this.allDayPanelData ? void 0 : _const__WEBPACK_IMPORTED_MODULE_7__.DefaultSizes.allDayPanelHeight
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    componentWillUpdate(nextProps, nextState, context) {
        super.componentWillUpdate();
        if (this.props.viewData !== nextProps.viewData) {
            this.__getterCache.allDayPanelData = void 0
        }
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                dataCellTemplate: getTemplate(props.dataCellTemplate)
            }),
            allDayPanelData: this.allDayPanelData,
            emptyTableHeight: this.emptyTableHeight,
            restAttributes: this.restAttributes
        })
    }
}
AllDayTable.defaultProps = AllDayTableProps;


/***/ }),

/***/ 50845:
/*!********************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table_body.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "AllDayPanelTableBodyProps": function() { return /* binding */ AllDayPanelTableBodyProps; },
/* harmony export */   "AllDayPanelTableBody": function() { return /* binding */ AllDayPanelTableBody; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../row */ 50642);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cell */ 27264);
/* harmony import */ var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../utils/combine_classes */ 33582);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table_body.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["className", "dataCellTemplate", "isVerticalGroupOrientation", "leftVirtualCellCount", "leftVirtualCellWidth", "rightVirtualCellCount", "rightVirtualCellWidth", "viewData"];





var viewFunction = viewModel => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
    leftVirtualCellWidth: viewModel.props.leftVirtualCellWidth,
    rightVirtualCellWidth: viewModel.props.rightVirtualCellWidth,
    leftVirtualCellCount: viewModel.props.leftVirtualCellCount,
    rightVirtualCellCount: viewModel.props.rightVirtualCellCount,
    className: viewModel.classes,
    children: viewModel.props.viewData.map(_ref => {
        var {
            endDate: endDate,
            groupIndex: cellGroupIndex,
            groups: groups,
            index: cellIndex,
            isFirstGroupCell: isFirstGroupCell,
            isFocused: isFocused,
            isLastGroupCell: isLastGroupCell,
            isSelected: isSelected,
            key: key,
            startDate: startDate
        } = _ref;
        return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_5__.AllDayPanelCell, {
            isFirstGroupCell: !viewModel.props.isVerticalGroupOrientation && isFirstGroupCell,
            isLastGroupCell: !viewModel.props.isVerticalGroupOrientation && isLastGroupCell,
            startDate: startDate,
            endDate: endDate,
            groups: groups,
            groupIndex: cellGroupIndex,
            index: cellIndex,
            dataCellTemplate: viewModel.props.dataCellTemplate,
            isSelected: isSelected,
            isFocused: isFocused
        }, key)
    })
});
var AllDayPanelTableBodyProps = {
    viewData: Object.freeze([]),
    isVerticalGroupOrientation: false,
    className: "",
    leftVirtualCellWidth: 0,
    rightVirtualCellWidth: 0
};
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class AllDayPanelTableBody extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get classes() {
        var {
            className: className
        } = this.props;
        return (0,_utils_combine_classes__WEBPACK_IMPORTED_MODULE_6__.combineClasses)({
            "dx-scheduler-all-day-table-row": true,
            [className]: !!className
        })
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                dataCellTemplate: getTemplate(props.dataCellTemplate)
            }),
            classes: this.classes,
            restAttributes: this.restAttributes
        })
    }
}
AllDayPanelTableBody.defaultProps = AllDayPanelTableBodyProps;


/***/ }),

/***/ 69883:
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.j.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ AllDayPanelTitle; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../core/component_registrator */ 2382);
/* harmony import */ var _component_wrapper_common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../component_wrapper/common/component */ 17405);
/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./title */ 15905);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.j.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class AllDayPanelTitle extends _component_wrapper_common_component__WEBPACK_IMPORTED_MODULE_1__.default {
    get _propsInfo() {
        return {
            twoWay: [],
            allowNull: [],
            elements: [],
            templates: [],
            props: []
        }
    }
    get _viewComponent() {
        return _title__WEBPACK_IMPORTED_MODULE_2__.AllDayPanelTitle
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxAllDayPanelTitle", AllDayPanelTitle);


/***/ }),

/***/ 15905:
/*!***************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "AllDayPanelTitleProps": function() { return /* binding */ AllDayPanelTitleProps; },
/* harmony export */   "AllDayPanelTitle": function() { return /* binding */ AllDayPanelTitle; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectDestructuringEmpty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectDestructuringEmpty */ 20823);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../localization/message */ 19336);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */





var viewFunction = viewModel => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-all-day-title", viewModel.text, 0);
var AllDayPanelTitleProps = {};

class AllDayPanelTitle extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    createEffects() {
        return [(0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()]
    }
    get text() {
        return _localization_message__WEBPACK_IMPORTED_MODULE_4__.default.format("dxScheduler-allDay")
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, ((0,_babel_runtime_helpers_esm_objectDestructuringEmpty__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props), _this$props));
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props),
            text: this.text,
            restAttributes: this.restAttributes
        })
    }
}
AllDayPanelTitle.defaultProps = AllDayPanelTitleProps;


/***/ }),

/***/ 50995:
/*!************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/cell.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "DateTableCellBaseProps": function() { return /* binding */ DateTableCellBaseProps; },
/* harmony export */   "DateTableCellBase": function() { return /* binding */ DateTableCellBase; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cell */ 61074);
/* harmony import */ var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../utils/combine_classes */ 33582);
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../const */ 25222);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["allDay", "ariaLabel", "children", "className", "contentTemplateProps", "dataCellTemplate", "endDate", "firstDayOfMonth", "groupIndex", "groups", "index", "isFirstGroupCell", "isFocused", "isLastGroupCell", "isSelected", "otherMonth", "startDate", "text", "today"];





var ADD_APPOINTMENT_LABEL = "Add appointment";
var viewFunction = _ref => {
    var {
        ariaLabel: ariaLabel,
        classes: classes,
        dataCellTemplateProps: dataCellTemplateProps,
        props: {
            children: children,
            dataCellTemplate: DataCellTemplate,
            isFirstGroupCell: isFirstGroupCell,
            isLastGroupCell: isLastGroupCell
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_4__.CellBase, {
        isFirstGroupCell: isFirstGroupCell,
        isLastGroupCell: isLastGroupCell,
        className: classes,
        ariaLabel: ariaLabel,
        children: [!DataCellTemplate && children, !!DataCellTemplate && DataCellTemplate({
            index: dataCellTemplateProps.index,
            data: dataCellTemplateProps.data
        })]
    })
};
var DateTableCellBaseProps = Object.create(Object.prototype, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)(Object.getOwnPropertyDescriptors(_cell__WEBPACK_IMPORTED_MODULE_4__.CellBaseProps), Object.getOwnPropertyDescriptors({
    otherMonth: false,
    today: false,
    firstDayOfMonth: false,
    isSelected: false,
    isFocused: false
})));
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class DateTableCellBase extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {};
        this.__getterCache = {}
    }
    get classes() {
        var {
            allDay: allDay,
            className: className,
            isFocused: isFocused,
            isSelected: isSelected
        } = this.props;
        return (0,_utils_combine_classes__WEBPACK_IMPORTED_MODULE_5__.combineClasses)({
            "dx-scheduler-cell-sizes-horizontal": true,
            "dx-scheduler-cell-sizes-vertical": !allDay,
            [_const__WEBPACK_IMPORTED_MODULE_6__.DATE_TABLE_CELL_CLASS]: !allDay,
            "dx-state-focused": isSelected,
            "dx-scheduler-focused-cell": isFocused,
            [className]: true
        })
    }
    get dataCellTemplateProps() {
        if (void 0 !== this.__getterCache.dataCellTemplateProps) {
            return this.__getterCache.dataCellTemplateProps
        }
        return this.__getterCache.dataCellTemplateProps = (() => {
            var {
                allDay: allDay,
                contentTemplateProps: contentTemplateProps,
                endDate: endDate,
                groupIndex: groupIndex,
                groups: groups,
                index: index,
                startDate: startDate
            } = this.props;
            return {
                data: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({
                    startDate: startDate,
                    endDate: endDate,
                    groups: groups,
                    groupIndex: groups ? groupIndex : void 0,
                    text: "",
                    allDay: !!allDay || void 0
                }, contentTemplateProps.data),
                index: index
            }
        })()
    }
    get ariaLabel() {
        return this.props.isSelected ? ADD_APPOINTMENT_LABEL : void 0
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    componentWillUpdate(nextProps, nextState, context) {
        if (this.props.allDay !== nextProps.allDay || this.props.contentTemplateProps !== nextProps.contentTemplateProps || this.props.endDate !== nextProps.endDate || this.props.groupIndex !== nextProps.groupIndex || this.props.groups !== nextProps.groups || this.props.index !== nextProps.index || this.props.startDate !== nextProps.startDate) {
            this.__getterCache.dataCellTemplateProps = void 0
        }
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                dataCellTemplate: getTemplate(props.dataCellTemplate)
            }),
            classes: this.classes,
            dataCellTemplateProps: this.dataCellTemplateProps,
            ariaLabel: this.ariaLabel,
            restAttributes: this.restAttributes
        })
    }
}
DateTableCellBase.defaultProps = DateTableCellBaseProps;


/***/ }),

/***/ 85953:
/*!****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/layout.j.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ DateTableLayoutBase; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/component_registrator */ 2382);
/* harmony import */ var _component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../component_wrapper/scheduler/date_table */ 5733);
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ 96471);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/layout.j.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class DateTableLayoutBase extends _component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__.DateTable {
    get _propsInfo() {
        return {
            twoWay: [],
            allowNull: [],
            elements: [],
            templates: ["cellTemplate", "dataCellTemplate"],
            props: ["cellTemplate", "viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width", "dataCellTemplate"]
        }
    }
    get _viewComponent() {
        return _layout__WEBPACK_IMPORTED_MODULE_2__.DateTableLayoutBase
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxDateTableLayoutBase", DateTableLayoutBase);


/***/ }),

/***/ 96471:
/*!**************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/layout.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "DateTableLayoutProps": function() { return /* binding */ DateTableLayoutProps; },
/* harmony export */   "DateTableLayoutBase": function() { return /* binding */ DateTableLayoutBase; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../table */ 35686);
/* harmony import */ var _table_body__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./table_body */ 86255);
/* harmony import */ var _layout_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../layout_props */ 21250);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cell */ 50995);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["addDateTableClass", "addVerticalSizesClassToRows", "bottomVirtualRowHeight", "cellTemplate", "dataCellTemplate", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "tableRef", "topVirtualRowHeight", "viewData", "width"];






var viewFunction = _ref => {
    var {
        bottomVirtualRowHeight: bottomVirtualRowHeight,
        classes: classes,
        leftVirtualCellWidth: leftVirtualCellWidth,
        props: {
            addVerticalSizesClassToRows: addVerticalSizesClassToRows,
            cellTemplate: cellTemplate,
            dataCellTemplate: dataCellTemplate,
            groupOrientation: groupOrientation,
            tableRef: tableRef,
            viewData: viewData,
            width: width
        },
        restAttributes: restAttributes,
        rightVirtualCellWidth: rightVirtualCellWidth,
        topVirtualRowHeight: topVirtualRowHeight,
        virtualCellsCount: virtualCellsCount
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _table__WEBPACK_IMPORTED_MODULE_4__.Table, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, restAttributes, {
        tableRef: tableRef,
        topVirtualRowHeight: topVirtualRowHeight,
        bottomVirtualRowHeight: bottomVirtualRowHeight,
        leftVirtualCellWidth: leftVirtualCellWidth,
        rightVirtualCellWidth: rightVirtualCellWidth,
        leftVirtualCellCount: viewData.leftVirtualCellCount,
        rightVirtualCellCount: viewData.rightVirtualCellCount,
        virtualCellsCount: virtualCellsCount,
        className: classes,
        width: width,
        children: (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _table_body__WEBPACK_IMPORTED_MODULE_5__.DateTableBody, {
            cellTemplate: cellTemplate,
            viewData: viewData,
            dataCellTemplate: dataCellTemplate,
            leftVirtualCellWidth: leftVirtualCellWidth,
            rightVirtualCellWidth: rightVirtualCellWidth,
            groupOrientation: groupOrientation,
            addVerticalSizesClassToRows: addVerticalSizesClassToRows
        })
    })))
};
var DateTableLayoutProps = Object.create(Object.prototype, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)(Object.getOwnPropertyDescriptors(_layout_props__WEBPACK_IMPORTED_MODULE_6__.LayoutProps), Object.getOwnPropertyDescriptors({
    cellTemplate: _cell__WEBPACK_IMPORTED_MODULE_7__.DateTableCellBase
})));

var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class DateTableLayoutBase extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    createEffects() {
        return [(0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()]
    }
    get classes() {
        var {
            addDateTableClass: addDateTableClass
        } = this.props;
        return addDateTableClass ? "dx-scheduler-date-table" : void 0
    }
    get topVirtualRowHeight() {
        var _this$props$viewData$;
        return null !== (_this$props$viewData$ = this.props.viewData.topVirtualRowHeight) && void 0 !== _this$props$viewData$ ? _this$props$viewData$ : 0
    }
    get bottomVirtualRowHeight() {
        var _this$props$viewData$2;
        return null !== (_this$props$viewData$2 = this.props.viewData.bottomVirtualRowHeight) && void 0 !== _this$props$viewData$2 ? _this$props$viewData$2 : 0
    }
    get leftVirtualCellWidth() {
        var _this$props$viewData$3;
        return null !== (_this$props$viewData$3 = this.props.viewData.leftVirtualCellWidth) && void 0 !== _this$props$viewData$3 ? _this$props$viewData$3 : 0
    }
    get rightVirtualCellWidth() {
        var _this$props$viewData$4;
        return null !== (_this$props$viewData$4 = this.props.viewData.rightVirtualCellWidth) && void 0 !== _this$props$viewData$4 ? _this$props$viewData$4 : 0
    }
    get virtualCellsCount() {
        return this.props.viewData.groupedData[0].dateTable[0].cells.length
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                cellTemplate: getTemplate(props.cellTemplate),
                dataCellTemplate: getTemplate(props.dataCellTemplate)
            }),
            classes: this.classes,
            topVirtualRowHeight: this.topVirtualRowHeight,
            bottomVirtualRowHeight: this.bottomVirtualRowHeight,
            leftVirtualCellWidth: this.leftVirtualCellWidth,
            rightVirtualCellWidth: this.rightVirtualCellWidth,
            virtualCellsCount: this.virtualCellsCount,
            restAttributes: this.restAttributes
        })
    }
}
DateTableLayoutBase.defaultProps = DateTableLayoutProps;


/***/ }),

/***/ 86255:
/*!******************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "DateTableBodyProps": function() { return /* binding */ DateTableBodyProps; },
/* harmony export */   "DateTableBody": function() { return /* binding */ DateTableBody; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../row */ 50642);
/* harmony import */ var _all_day_panel_table_body__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./all_day_panel/table_body */ 50845);
/* harmony import */ var _layout_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../layout_props */ 21250);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cell */ 50995);
/* harmony import */ var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../utils/combine_classes */ 33582);
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../const */ 25222);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["addDateTableClass", "addVerticalSizesClassToRows", "bottomVirtualRowHeight", "cellTemplate", "dataCellTemplate", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "viewData", "width"];









var viewFunction = _ref => {
    var {
        props: {
            cellTemplate: Cell,
            dataCellTemplate: dataCellTemplate,
            viewData: viewData
        },
        rowClasses: rowClasses
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)(viewData.groupedData.map(_ref2 => {
        var {
            allDayPanel: allDayPanel,
            dateTable: dateTable,
            isGroupedAllDayPanel: isGroupedAllDayPanel,
            key: fragmentKey
        } = _ref2;
        return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)([isGroupedAllDayPanel && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _all_day_panel_table_body__WEBPACK_IMPORTED_MODULE_5__.AllDayPanelTableBody, {
            viewData: allDayPanel,
            dataCellTemplate: dataCellTemplate,
            isVerticalGroupOrientation: true,
            leftVirtualCellWidth: viewData.leftVirtualCellWidth,
            rightVirtualCellWidth: viewData.rightVirtualCellWidth,
            leftVirtualCellCount: viewData.leftVirtualCellCount,
            rightVirtualCellCount: viewData.rightVirtualCellCount
        }), dateTable.map(_ref3 => {
            var {
                cells: cells,
                key: rowKey
            } = _ref3;
            return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
                className: rowClasses,
                leftVirtualCellWidth: viewData.leftVirtualCellWidth,
                rightVirtualCellWidth: viewData.rightVirtualCellWidth,
                leftVirtualCellCount: viewData.leftVirtualCellCount,
                rightVirtualCellCount: viewData.rightVirtualCellCount,
                children: cells.map(_ref4 => {
                    var {
                        endDate: endDate,
                        firstDayOfMonth: firstDayOfMonth,
                        groupIndex: cellGroupIndex,
                        groups: groups,
                        index: cellIndex,
                        isFirstGroupCell: isFirstGroupCell,
                        isFocused: isFocused,
                        isLastGroupCell: isLastGroupCell,
                        isSelected: isSelected,
                        key: key,
                        otherMonth: otherMonth,
                        startDate: startDate,
                        text: text,
                        today: today
                    } = _ref4;
                    return Cell({
                        isFirstGroupCell: isFirstGroupCell,
                        isLastGroupCell: isLastGroupCell,
                        startDate: startDate,
                        endDate: endDate,
                        groups: groups,
                        groupIndex: cellGroupIndex,
                        index: cellIndex,
                        dataCellTemplate: dataCellTemplate,
                        key: key,
                        text: text,
                        today: today,
                        otherMonth: otherMonth,
                        firstDayOfMonth: firstDayOfMonth,
                        isSelected: isSelected,
                        isFocused: isFocused
                    })
                })
            }, rowKey)
        })], 0, fragmentKey)
    }), 0)
};
var DateTableBodyProps = Object.create(Object.prototype, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)(Object.getOwnPropertyDescriptors(_layout_props__WEBPACK_IMPORTED_MODULE_6__.LayoutProps), Object.getOwnPropertyDescriptors({
    cellTemplate: _cell__WEBPACK_IMPORTED_MODULE_7__.DateTableCellBase
})));
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class DateTableBody extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get rowClasses() {
        var {
            addVerticalSizesClassToRows: addVerticalSizesClassToRows
        } = this.props;
        return (0,_utils_combine_classes__WEBPACK_IMPORTED_MODULE_8__.combineClasses)({
            [_const__WEBPACK_IMPORTED_MODULE_9__.DATE_TABLE_ROW_CLASS]: true,
            "dx-scheduler-cell-sizes-vertical": addVerticalSizesClassToRows
        })
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                cellTemplate: getTemplate(props.cellTemplate),
                dataCellTemplate: getTemplate(props.dataCellTemplate)
            }),
            rowClasses: this.rowClasses,
            restAttributes: this.restAttributes
        })
    }
}
DateTableBody.defaultProps = DateTableBodyProps;


/***/ }),

/***/ 78966:
/*!*******************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/cell_props.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GroupPanelCellProps": function() { return /* binding */ GroupPanelCellProps; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/cell_props.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var GroupPanelCellProps = {
    id: 0,
    text: "",
    data: Object.freeze({
        id: 0
    }),
    className: ""
};


/***/ }),

/***/ 16783:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel.j.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ GroupPanel; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/component_registrator */ 2382);
/* harmony import */ var _component_wrapper_scheduler_group_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../component_wrapper/scheduler/group_panel */ 8294);
/* harmony import */ var _group_panel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./group_panel */ 46149);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel.j.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class GroupPanel extends _component_wrapper_scheduler_group_panel__WEBPACK_IMPORTED_MODULE_1__.GroupPanelWrapper {
    get _propsInfo() {
        return {
            twoWay: [],
            allowNull: [],
            elements: [],
            templates: ["resourceCellTemplate"],
            props: ["groups", "groupOrientation", "groupPanelData", "groupByDate", "height", "className", "resourceCellTemplate"]
        }
    }
    get _viewComponent() {
        return _group_panel__WEBPACK_IMPORTED_MODULE_2__.GroupPanel
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxGroupPanel", GroupPanel);


/***/ }),

/***/ 46149:
/*!********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "GroupPanelProps": function() { return /* binding */ GroupPanelProps; },
/* harmony export */   "GroupPanel": function() { return /* binding */ GroupPanel; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils */ 59016);
/* harmony import */ var _group_panel_props__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./group_panel_props */ 34171);
/* harmony import */ var _vertical_layout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./vertical/layout */ 8212);
/* harmony import */ var _horizontal_layout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./horizontal/layout */ 89320);
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../consts */ 29239);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["className", "elementRef", "groupByDate", "groupOrientation", "groupPanelData", "groups", "height", "resourceCellTemplate"];







var viewFunction = _ref => {
    var {
        isVerticalLayout: isVerticalLayout,
        props: {
            className: className,
            elementRef: elementRef,
            groupPanelData: groupPanelData,
            height: height,
            resourceCellTemplate: resourceCellTemplate
        },
        restAttributes: restAttributes
    } = _ref;
    return isVerticalLayout ? (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _vertical_layout__WEBPACK_IMPORTED_MODULE_6__.GroupPanelVerticalLayout, {
        height: height,
        resourceCellTemplate: resourceCellTemplate,
        className: className,
        groupPanelData: groupPanelData,
        elementRef: elementRef,
        styles: restAttributes.style
    }) : (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _horizontal_layout__WEBPACK_IMPORTED_MODULE_7__.GroupPanelHorizontalLayout, {
        height: height,
        resourceCellTemplate: resourceCellTemplate,
        className: className,
        groupPanelData: groupPanelData,
        elementRef: elementRef,
        styles: restAttributes.style
    })
};
var GroupPanelProps = Object.create(Object.prototype, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)(Object.getOwnPropertyDescriptors(_group_panel_props__WEBPACK_IMPORTED_MODULE_5__.GroupPanelBaseProps), Object.getOwnPropertyDescriptors({
    groups: Object.freeze([]),
    groupOrientation: _consts__WEBPACK_IMPORTED_MODULE_8__.VERTICAL_GROUP_ORIENTATION
})));

var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class GroupPanel extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    createEffects() {
        return [(0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()]
    }
    get isVerticalLayout() {
        var {
            groupOrientation: groupOrientation,
            groups: groups
        } = this.props;
        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.isVerticalGroupingApplied)(groups, groupOrientation)
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                resourceCellTemplate: getTemplate(props.resourceCellTemplate)
            }),
            isVerticalLayout: this.isVerticalLayout,
            restAttributes: this.restAttributes
        })
    }
}
GroupPanel.defaultProps = GroupPanelProps;


/***/ }),

/***/ 94014:
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel_layout_props.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GroupPanelLayoutProps": function() { return /* binding */ GroupPanelLayoutProps; }
/* harmony export */ });
/* harmony import */ var _group_panel_props__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./group_panel_props */ 34171);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel_layout_props.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var GroupPanelLayoutProps = _group_panel_props__WEBPACK_IMPORTED_MODULE_0__.GroupPanelBaseProps;


/***/ }),

/***/ 34171:
/*!**************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel_props.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GroupPanelBaseProps": function() { return /* binding */ GroupPanelBaseProps; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel_props.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var GroupPanelBaseProps = {
    groupPanelData: Object.freeze({
        groupPanelItems: [],
        baseColSpan: 1
    }),
    groupByDate: false
};


/***/ }),

/***/ 77187:
/*!************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/cell.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "GroupPanelHorizontalCellProps": function() { return /* binding */ GroupPanelHorizontalCellProps; },
/* harmony export */   "GroupPanelHorizontalCell": function() { return /* binding */ GroupPanelHorizontalCell; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../utils/combine_classes */ 33582);
/* harmony import */ var _cell_props__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cell_props */ 78966);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["cellTemplate", "className", "colSpan", "color", "data", "id", "index", "isFirstGroupCell", "isLastGroupCell", "text"];




var viewFunction = _ref => {
    var {
        classes: classes,
        props: {
            cellTemplate: CellTemplate,
            colSpan: colSpan,
            color: color,
            data: data,
            id: id,
            index: index,
            text: text
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "th", classes, (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-group-header-content", [!!CellTemplate && CellTemplate({
        data: {
            data: data,
            id: id,
            color: color,
            text: text
        },
        index: index
    }), !CellTemplate && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", null, text, 0)], 0), 2, {
        colSpan: colSpan
    })
};
var GroupPanelHorizontalCellProps = Object.create(Object.prototype, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)(Object.getOwnPropertyDescriptors(_cell_props__WEBPACK_IMPORTED_MODULE_5__.GroupPanelCellProps), Object.getOwnPropertyDescriptors({
    isFirstGroupCell: false,
    isLastGroupCell: false,
    colSpan: 1
})));
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class GroupPanelHorizontalCell extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get classes() {
        var {
            className: className,
            isFirstGroupCell: isFirstGroupCell,
            isLastGroupCell: isLastGroupCell
        } = this.props;
        return (0,_utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__.combineClasses)({
            "dx-scheduler-group-header": true,
            "dx-scheduler-first-group-cell": isFirstGroupCell,
            "dx-scheduler-last-group-cell": isLastGroupCell,
            [className]: !!className
        })
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                cellTemplate: getTemplate(props.cellTemplate)
            }),
            classes: this.classes,
            restAttributes: this.restAttributes
        })
    }
}
GroupPanelHorizontalCell.defaultProps = GroupPanelHorizontalCellProps;


/***/ }),

/***/ 89320:
/*!**************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/layout.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "HorizontalGroupPanelLayoutProps": function() { return /* binding */ HorizontalGroupPanelLayoutProps; },
/* harmony export */   "GroupPanelHorizontalLayout": function() { return /* binding */ GroupPanelHorizontalLayout; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./row */ 45390);
/* harmony import */ var _group_panel_layout_props__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../group_panel_layout_props */ 94014);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["className", "elementRef", "groupByDate", "groupPanelData", "height", "resourceCellTemplate", "styles"];





var viewFunction = _ref => {
    var {
        groupPanelItems: groupPanelItems,
        props: {
            resourceCellTemplate: resourceCellTemplate
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)(groupPanelItems.map(group => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
        groupItems: group,
        cellTemplate: resourceCellTemplate
    }, group[0].key)), 0)
};
var HorizontalGroupPanelLayoutProps = _group_panel_layout_props__WEBPACK_IMPORTED_MODULE_5__.GroupPanelLayoutProps;
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class GroupPanelHorizontalLayout extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {};
        this.__getterCache = {}
    }
    get groupPanelItems() {
        if (void 0 !== this.__getterCache.groupPanelItems) {
            return this.__getterCache.groupPanelItems
        }
        return this.__getterCache.groupPanelItems = (() => {
            var {
                groupPanelData: groupPanelData
            } = this.props;
            var {
                baseColSpan: baseColSpan,
                groupPanelItems: groupPanelItems
            } = groupPanelData;
            var colSpans = groupPanelItems.reduceRight((currentColSpans, groupsRow, index) => {
                var nextColSpans = currentColSpans;
                var currentLevelGroupCount = groupsRow.length;
                var previousColSpan = index === groupPanelItems.length - 1 ? baseColSpan : currentColSpans[index + 1];
                var previousLevelGroupCount = index === groupPanelItems.length - 1 ? currentLevelGroupCount : groupPanelItems[index + 1].length;
                var groupCountDiff = previousLevelGroupCount / currentLevelGroupCount;
                nextColSpans[index] = groupCountDiff * previousColSpan;
                return nextColSpans
            }, [...new Array(groupPanelItems.length)]);
            return groupPanelItems.map((groupsRenderRow, index) => {
                var colSpan = colSpans[index];
                return groupsRenderRow.map(groupItem => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, groupItem, {
                    colSpan: colSpan
                }))
            })
        })()
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    componentWillUpdate(nextProps, nextState, context) {
        if (this.props.groupPanelData !== nextProps.groupPanelData) {
            this.__getterCache.groupPanelItems = void 0
        }
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                resourceCellTemplate: getTemplate(props.resourceCellTemplate)
            }),
            groupPanelItems: this.groupPanelItems,
            restAttributes: this.restAttributes
        })
    }
}
GroupPanelHorizontalLayout.defaultProps = HorizontalGroupPanelLayoutProps;


/***/ }),

/***/ 45390:
/*!***********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/row.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "Row": function() { return /* binding */ Row; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cell */ 77187);
/* harmony import */ var _row_props__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../row_props */ 64623);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/row.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["cellTemplate", "className", "groupItems"];




var viewFunction = _ref => {
    var {
        props: {
            cellTemplate: cellTemplate,
            className: className,
            groupItems: groupItems
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "tr", "dx-scheduler-group-row ".concat(className), groupItems.map((_ref2, index) => {
        var {
            colSpan: colSpan,
            color: color,
            data: data,
            id: id,
            isFirstGroupCell: isFirstGroupCell,
            isLastGroupCell: isLastGroupCell,
            key: key,
            text: text
        } = _ref2;
        return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_4__.GroupPanelHorizontalCell, {
            text: text,
            id: id,
            data: data,
            index: index,
            color: color,
            colSpan: colSpan,
            isFirstGroupCell: !!isFirstGroupCell,
            isLastGroupCell: !!isLastGroupCell,
            cellTemplate: cellTemplate
        }, key)
    }), 0)
};
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class Row extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                cellTemplate: getTemplate(props.cellTemplate)
            }),
            restAttributes: this.restAttributes
        })
    }
}
Row.defaultProps = _row_props__WEBPACK_IMPORTED_MODULE_5__.GroupPanelRowProps;


/***/ }),

/***/ 64623:
/*!******************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/row_props.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GroupPanelRowProps": function() { return /* binding */ GroupPanelRowProps; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/row_props.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var GroupPanelRowProps = {
    groupItems: Object.freeze([]),
    className: ""
};


/***/ }),

/***/ 83582:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/cell.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "GroupPanelVerticalCell": function() { return /* binding */ GroupPanelVerticalCell; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _cell_props__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cell_props */ 78966);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["cellTemplate", "className", "color", "data", "id", "index", "text"];



var viewFunction = viewModel => {
    var CellTemplate = viewModel.props.cellTemplate;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-group-header ".concat(viewModel.props.className), [!!viewModel.props.cellTemplate && CellTemplate({
        data: {
            data: viewModel.props.data,
            id: viewModel.props.id,
            color: viewModel.props.color,
            text: viewModel.props.text
        },
        index: viewModel.props.index
    }), !viewModel.props.cellTemplate && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-group-header-content", viewModel.props.text, 0)], 0)
};
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class GroupPanelVerticalCell extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                cellTemplate: getTemplate(props.cellTemplate)
            }),
            restAttributes: this.restAttributes
        })
    }
}
GroupPanelVerticalCell.defaultProps = _cell_props__WEBPACK_IMPORTED_MODULE_4__.GroupPanelCellProps;


/***/ }),

/***/ 8212:
/*!************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/layout.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "VerticalGroupPanelLayoutProps": function() { return /* binding */ VerticalGroupPanelLayoutProps; },
/* harmony export */   "GroupPanelVerticalLayout": function() { return /* binding */ GroupPanelVerticalLayout; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./row */ 50395);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../utils */ 59016);
/* harmony import */ var _group_panel_layout_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../group_panel_layout_props */ 94014);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["className", "elementRef", "groupByDate", "groupPanelData", "height", "resourceCellTemplate", "styles"];






var viewFunction = _ref => {
    var {
        props: {
            className: className,
            elementRef: elementRef,
            groupPanelData: groupPanelData,
            resourceCellTemplate: resourceCellTemplate
        },
        style: style
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", className, (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-group-flex-container", groupPanelData.groupPanelItems.map(group => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
        groupItems: group,
        cellTemplate: resourceCellTemplate
    }, group[0].key)), 0), 2, {
        style: (0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(style)
    }, null, elementRef)
};
var VerticalGroupPanelLayoutProps = _group_panel_layout_props__WEBPACK_IMPORTED_MODULE_6__.GroupPanelLayoutProps;
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class GroupPanelVerticalLayout extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get style() {
        var {
            height: height,
            styles: styles
        } = this.props;
        return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.addHeightToStyle)(height, styles)
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                resourceCellTemplate: getTemplate(props.resourceCellTemplate)
            }),
            style: this.style,
            restAttributes: this.restAttributes
        })
    }
}
GroupPanelVerticalLayout.defaultProps = VerticalGroupPanelLayoutProps;


/***/ }),

/***/ 50395:
/*!*********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/row.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "Row": function() { return /* binding */ Row; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cell */ 83582);
/* harmony import */ var _row_props__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../row_props */ 64623);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/row.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["cellTemplate", "className", "groupItems"];




var viewFunction = viewModel => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-group-row ".concat(viewModel.props.className), viewModel.props.groupItems.map((_ref, index) => {
    var {
        color: color,
        data: data,
        id: id,
        key: key,
        text: text
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_4__.GroupPanelVerticalCell, {
        text: text,
        id: id,
        data: data,
        index: index,
        color: color,
        cellTemplate: viewModel.props.cellTemplate
    }, key)
}), 0);
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class Row extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                cellTemplate: getTemplate(props.cellTemplate)
            }),
            restAttributes: this.restAttributes
        })
    }
}
Row.defaultProps = _row_props__WEBPACK_IMPORTED_MODULE_5__.GroupPanelRowProps;


/***/ }),

/***/ 92007:
/*!********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_cell.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "HeaderCell": function() { return /* binding */ HeaderCell; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _ordinary_cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ordinary_cell */ 35545);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["children", "className", "colSpan", "styles"];




var viewFunction = _ref => {
    var {
        props: {
            children: children,
            className: className,
            colSpan: colSpan,
            styles: styles
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "th", className, children, 0, {
        style: (0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(styles),
        colSpan: colSpan
    })
};
class HeaderCell extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props),
            restAttributes: this.restAttributes
        })
    }
}
HeaderCell.defaultProps = _ordinary_cell__WEBPACK_IMPORTED_MODULE_4__.CellProps;


/***/ }),

/***/ 4905:
/*!**************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/cell.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "DateHeaderCellProps": function() { return /* binding */ DateHeaderCellProps; },
/* harmony export */   "DateHeaderCell": function() { return /* binding */ DateHeaderCell; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../cell */ 61074);
/* harmony import */ var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../utils/combine_classes */ 33582);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../utils */ 59016);
/* harmony import */ var _dateHeaderText__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dateHeaderText */ 69262);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["allDay", "ariaLabel", "children", "className", "colSpan", "contentTemplateProps", "dateCellTemplate", "endDate", "groupIndex", "groups", "index", "isFirstGroupCell", "isLastGroupCell", "isTimeCellTemplate", "isWeekDayCell", "splitText", "startDate", "text", "timeCellTemplate", "today"];







var viewFunction = _ref => {
    var {
        classes: classes,
        props: {
            colSpan: colSpan,
            dateCellTemplate: DateCellTemplate,
            groupIndex: groupIndex,
            groups: groups,
            index: index,
            isTimeCellTemplate: isTimeCellTemplate,
            splitText: splitText,
            startDate: startDate,
            text: text,
            timeCellTemplate: TimeCellTemplate
        },
        useTemplate: useTemplate
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "th", classes, useTemplate ? (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)([isTimeCellTemplate && TimeCellTemplate && TimeCellTemplate({
        data: {
            date: startDate,
            text: text,
            groups: groups,
            groupIndex: groupIndex
        },
        index: index
    }), !isTimeCellTemplate && DateCellTemplate && DateCellTemplate({
        data: {
            date: startDate,
            text: text,
            groups: groups,
            groupIndex: groupIndex
        },
        index: index
    })], 0) : (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _dateHeaderText__WEBPACK_IMPORTED_MODULE_7__.DateHeaderText, {
        splitText: splitText,
        text: text
    }), 0, {
        colSpan: colSpan,
        title: text
    })
};
var DateHeaderCellProps = Object.create(Object.prototype, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)(Object.getOwnPropertyDescriptors(_cell__WEBPACK_IMPORTED_MODULE_4__.CellBaseProps), Object.getOwnPropertyDescriptors({
    today: false,
    colSpan: 1,
    isWeekDayCell: false,
    splitText: false,
    isTimeCellTemplate: false
})));
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class DateHeaderCell extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get classes() {
        var {
            className: className,
            isFirstGroupCell: isFirstGroupCell,
            isLastGroupCell: isLastGroupCell,
            isWeekDayCell: isWeekDayCell,
            today: today
        } = this.props;
        var cellClasses = (0,_utils_combine_classes__WEBPACK_IMPORTED_MODULE_5__.combineClasses)({
            "dx-scheduler-header-panel-cell": true,
            "dx-scheduler-cell-sizes-horizontal": true,
            "dx-scheduler-header-panel-current-time-cell": today,
            "dx-scheduler-header-panel-week-cell": isWeekDayCell,
            [className]: !!className
        });
        return (0,_utils__WEBPACK_IMPORTED_MODULE_6__.getGroupCellClasses)(isFirstGroupCell, isLastGroupCell, cellClasses)
    }
    get useTemplate() {
        var {
            dateCellTemplate: dateCellTemplate,
            isTimeCellTemplate: isTimeCellTemplate,
            timeCellTemplate: timeCellTemplate
        } = this.props;
        return !isTimeCellTemplate && !!dateCellTemplate || isTimeCellTemplate && !!timeCellTemplate
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                timeCellTemplate: getTemplate(props.timeCellTemplate),
                dateCellTemplate: getTemplate(props.dateCellTemplate)
            }),
            classes: this.classes,
            useTemplate: this.useTemplate,
            restAttributes: this.restAttributes
        })
    }
}
DateHeaderCell.defaultProps = DateHeaderCellProps;


/***/ }),

/***/ 69262:
/*!************************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/dateHeaderText.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "DateHeaderTextProps": function() { return /* binding */ DateHeaderTextProps; },
/* harmony export */   "DateHeaderText": function() { return /* binding */ DateHeaderText; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/dateHeaderText.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["splitText", "text"];



var viewFunction = _ref => {
    var {
        props: {
            splitText: splitText,
            text: text
        },
        textParts: textParts
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)(splitText ? textParts.map(part => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "span", "dx-scheduler-header-panel-cell-date", part, 0)) : text, 0)
};
var DateHeaderTextProps = {
    text: "",
    splitText: false
};
class DateHeaderText extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {};
        this.__getterCache = {}
    }
    get textParts() {
        if (void 0 !== this.__getterCache.textParts) {
            return this.__getterCache.textParts
        }
        return this.__getterCache.textParts = (() => {
            var {
                text: text
            } = this.props;
            return text ? text.split(" ") : [""]
        })()
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, _excluded);
        return restProps
    }
    componentWillUpdate(nextProps, nextState, context) {
        if (this.props.text !== nextProps.text) {
            this.__getterCache.textParts = void 0
        }
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props),
            textParts: this.textParts,
            restAttributes: this.restAttributes
        })
    }
}
DateHeaderText.defaultProps = DateHeaderTextProps;


/***/ }),

/***/ 20046:
/*!****************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/layout.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "DateHeaderLayoutProps": function() { return /* binding */ DateHeaderLayoutProps; },
/* harmony export */   "DateHeaderLayout": function() { return /* binding */ DateHeaderLayout; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../row */ 50642);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../utils */ 59016);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cell */ 4905);
/* harmony import */ var _utils_getThemeType__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../utils/getThemeType */ 42394);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["dateCellTemplate", "dateHeaderData", "groupByDate", "groupOrientation", "groups", "timeCellTemplate"];







var {
    isMaterial: isMaterial
} = (0,_utils_getThemeType__WEBPACK_IMPORTED_MODULE_7__.default)();
var viewFunction = _ref => {
    var {
        isHorizontalGrouping: isHorizontalGrouping,
        props: {
            dateCellTemplate: dateCellTemplate,
            dateHeaderData: dateHeaderData
        }
    } = _ref;
    var {
        dataMap: dataMap,
        leftVirtualCellCount: leftVirtualCellCount,
        leftVirtualCellWidth: leftVirtualCellWidth,
        rightVirtualCellCount: rightVirtualCellCount,
        rightVirtualCellWidth: rightVirtualCellWidth
    } = dateHeaderData;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)(dataMap.map((dateHeaderRow, rowIndex) => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
        className: "dx-scheduler-header-row",
        leftVirtualCellWidth: leftVirtualCellWidth,
        leftVirtualCellCount: leftVirtualCellCount,
        rightVirtualCellWidth: rightVirtualCellWidth,
        rightVirtualCellCount: rightVirtualCellCount,
        isHeaderRow: true,
        children: dateHeaderRow.map(_ref2 => {
            var {
                colSpan: colSpan,
                endDate: endDate,
                groupIndex: groupIndex,
                groups: cellGroups,
                index: index,
                isFirstGroupCell: isFirstGroupCell,
                isLastGroupCell: isLastGroupCell,
                key: key,
                startDate: startDate,
                text: text,
                today: today
            } = _ref2;
            return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_6__.DateHeaderCell, {
                startDate: startDate,
                endDate: endDate,
                groups: isHorizontalGrouping ? cellGroups : void 0,
                groupIndex: isHorizontalGrouping ? groupIndex : void 0,
                today: today,
                index: index,
                text: text,
                isFirstGroupCell: isFirstGroupCell,
                isLastGroupCell: isLastGroupCell,
                dateCellTemplate: dateCellTemplate,
                colSpan: colSpan,
                splitText: isMaterial
            }, key)
        })
    }, rowIndex.toString())), 0)
};
var DateHeaderLayoutProps = {
    groupOrientation: "horizontal",
    groupByDate: false,
    groups: Object.freeze([])
};
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class DateHeaderLayout extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get isHorizontalGrouping() {
        var {
            groupByDate: groupByDate,
            groupOrientation: groupOrientation,
            groups: groups
        } = this.props;
        return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.isHorizontalGroupingApplied)(groups, groupOrientation) && !groupByDate
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                dateCellTemplate: getTemplate(props.dateCellTemplate),
                timeCellTemplate: getTemplate(props.timeCellTemplate)
            }),
            isHorizontalGrouping: this.isHorizontalGrouping,
            restAttributes: this.restAttributes
        })
    }
}
DateHeaderLayout.defaultProps = DateHeaderLayoutProps;


/***/ }),

/***/ 27865:
/*!******************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.j.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ HeaderPanelLayout; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/component_registrator */ 2382);
/* harmony import */ var _component_wrapper_scheduler_header_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../component_wrapper/scheduler/header_panel */ 72902);
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ 61140);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.j.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class HeaderPanelLayout extends _component_wrapper_scheduler_header_panel__WEBPACK_IMPORTED_MODULE_1__.HeaderPanel {
    get _propsInfo() {
        return {
            twoWay: [],
            allowNull: [],
            elements: [],
            templates: ["dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "resourceCellTemplate"],
            props: ["dateHeaderData", "isRenderDateHeader", "dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "groups", "groupOrientation", "groupPanelData", "groupByDate", "height", "className", "resourceCellTemplate"]
        }
    }
    get _viewComponent() {
        return _layout__WEBPACK_IMPORTED_MODULE_2__.HeaderPanelLayout
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxHeaderPanelLayout", HeaderPanelLayout);


/***/ }),

/***/ 61140:
/*!****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "HeaderPanelLayoutProps": function() { return /* binding */ HeaderPanelLayoutProps; },
/* harmony export */   "HeaderPanelLayout": function() { return /* binding */ HeaderPanelLayout; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils */ 59016);
/* harmony import */ var _group_panel_group_panel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../group_panel/group_panel */ 46149);
/* harmony import */ var _date_header_layout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./date_header/layout */ 20046);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["className", "dateCellTemplate", "dateHeaderData", "dateHeaderTemplate", "elementRef", "groupByDate", "groupOrientation", "groupPanelData", "groups", "height", "isRenderDateHeader", "resourceCellTemplate", "timeCellTemplate"];





var viewFunction = _ref => {
    var {
        isHorizontalGrouping: isHorizontalGrouping,
        props: {
            dateCellTemplate: dateCellTemplate,
            dateHeaderData: dateHeaderData,
            dateHeaderTemplate: DateHeader,
            groupByDate: groupByDate,
            groupOrientation: groupOrientation,
            groupPanelData: groupPanelData,
            groups: groups,
            isRenderDateHeader: isRenderDateHeader,
            resourceCellTemplate: resourceCellTemplate,
            timeCellTemplate: timeCellTemplate
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "thead", null, [isHorizontalGrouping && !groupByDate && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _group_panel_group_panel__WEBPACK_IMPORTED_MODULE_5__.GroupPanel, {
        groupPanelData: groupPanelData,
        groups: groups,
        groupByDate: groupByDate,
        groupOrientation: groupOrientation,
        resourceCellTemplate: resourceCellTemplate
    }), isRenderDateHeader && DateHeader({
        groupByDate: groupByDate,
        dateHeaderData: dateHeaderData,
        groupOrientation: groupOrientation,
        groups: groups,
        dateCellTemplate: dateCellTemplate,
        timeCellTemplate: timeCellTemplate
    }), groupByDate && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _group_panel_group_panel__WEBPACK_IMPORTED_MODULE_5__.GroupPanel, {
        groupPanelData: groupPanelData,
        groups: groups,
        groupByDate: groupByDate,
        groupOrientation: groupOrientation,
        resourceCellTemplate: resourceCellTemplate
    })], 0)
};
var HeaderPanelLayoutProps = Object.create(Object.prototype, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)(Object.getOwnPropertyDescriptors(_group_panel_group_panel__WEBPACK_IMPORTED_MODULE_5__.GroupPanelProps), Object.getOwnPropertyDescriptors({
    isRenderDateHeader: true,
    dateHeaderTemplate: _date_header_layout__WEBPACK_IMPORTED_MODULE_6__.DateHeaderLayout
})));

var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class HeaderPanelLayout extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    createEffects() {
        return [(0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()]
    }
    get isHorizontalGrouping() {
        var {
            groupOrientation: groupOrientation,
            groups: groups
        } = this.props;
        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.isHorizontalGroupingApplied)(groups, groupOrientation)
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                dateCellTemplate: getTemplate(props.dateCellTemplate),
                timeCellTemplate: getTemplate(props.timeCellTemplate),
                dateHeaderTemplate: getTemplate(props.dateHeaderTemplate),
                resourceCellTemplate: getTemplate(props.resourceCellTemplate)
            }),
            isHorizontalGrouping: this.isHorizontalGrouping,
            restAttributes: this.restAttributes
        })
    }
}
HeaderPanelLayout.defaultProps = HeaderPanelLayoutProps;


/***/ }),

/***/ 21250:
/*!*********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/layout_props.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LayoutProps": function() { return /* binding */ LayoutProps; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/layout_props.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var LayoutProps = {
    viewData: Object.freeze({
        groupedData: [],
        leftVirtualCellCount: 0,
        rightVirtualCellCount: 0,
        topVirtualRowCount: 0,
        bottomVirtualRowCount: 0
    }),
    leftVirtualCellWidth: 0,
    rightVirtualCellWidth: 0,
    topVirtualRowHeight: 0,
    bottomVirtualRowHeight: 0,
    addDateTableClass: true,
    addVerticalSizesClassToRows: true
};


/***/ }),

/***/ 35545:
/*!**********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/ordinary_cell.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "CellProps": function() { return /* binding */ CellProps; },
/* harmony export */   "OrdinaryCell": function() { return /* binding */ OrdinaryCell; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/ordinary_cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["children", "className", "colSpan", "styles"];



var viewFunction = _ref => {
    var {
        props: {
            children: children,
            className: className,
            colSpan: colSpan,
            styles: styles
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "td", className, children, 0, {
        style: (0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(styles),
        colSpan: colSpan
    })
};
var CellProps = {};
class OrdinaryCell extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props),
            restAttributes: this.restAttributes
        })
    }
}
OrdinaryCell.defaultProps = CellProps;


/***/ }),

/***/ 50642:
/*!************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/row.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "RowProps": function() { return /* binding */ RowProps; },
/* harmony export */   "Row": function() { return /* binding */ Row; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _virtual_cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./virtual_cell */ 69850);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/row.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["children", "className", "isHeaderRow", "leftVirtualCellCount", "leftVirtualCellWidth", "rightVirtualCellCount", "rightVirtualCellWidth", "styles"];




var viewFunction = _ref => {
    var {
        hasLeftVirtualCell: hasLeftVirtualCell,
        hasRightVirtualCell: hasRightVirtualCell,
        props: {
            children: children,
            className: className,
            isHeaderRow: isHeaderRow,
            leftVirtualCellCount: leftVirtualCellCount,
            leftVirtualCellWidth: leftVirtualCellWidth,
            rightVirtualCellCount: rightVirtualCellCount,
            rightVirtualCellWidth: rightVirtualCellWidth,
            styles: styles
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "tr", className, [hasLeftVirtualCell && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _virtual_cell__WEBPACK_IMPORTED_MODULE_4__.VirtualCell, {
        width: leftVirtualCellWidth,
        colSpan: leftVirtualCellCount,
        isHeaderCell: isHeaderRow
    }), children, hasRightVirtualCell && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _virtual_cell__WEBPACK_IMPORTED_MODULE_4__.VirtualCell, {
        width: rightVirtualCellWidth,
        colSpan: rightVirtualCellCount,
        isHeaderCell: isHeaderRow
    })], 0, {
        style: (0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(styles)
    })
};
var RowProps = {
    className: "",
    leftVirtualCellWidth: 0,
    rightVirtualCellWidth: 0,
    isHeaderRow: false
};
class Row extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get hasLeftVirtualCell() {
        var {
            leftVirtualCellCount: leftVirtualCellCount
        } = this.props;
        return !!leftVirtualCellCount
    }
    get hasRightVirtualCell() {
        var {
            rightVirtualCellCount: rightVirtualCellCount
        } = this.props;
        return !!rightVirtualCellCount
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props),
            hasLeftVirtualCell: this.hasLeftVirtualCell,
            hasRightVirtualCell: this.hasRightVirtualCell,
            restAttributes: this.restAttributes
        })
    }
}
Row.defaultProps = RowProps;


/***/ }),

/***/ 35686:
/*!**************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/table.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "TableProps": function() { return /* binding */ TableProps; },
/* harmony export */   "Table": function() { return /* binding */ Table; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ 59016);
/* harmony import */ var _virtual_row__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./virtual_row */ 3211);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/table.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["bottomVirtualRowHeight", "children", "className", "height", "leftVirtualCellCount", "leftVirtualCellWidth", "rightVirtualCellCount", "rightVirtualCellWidth", "tableRef", "topVirtualRowHeight", "virtualCellsCount", "width"];





var viewFunction = _ref => {
    var {
        hasBottomVirtualRow: hasBottomVirtualRow,
        hasTopVirtualRow: hasTopVirtualRow,
        props: {
            bottomVirtualRowHeight: bottomVirtualRowHeight,
            children: children,
            className: className,
            leftVirtualCellCount: leftVirtualCellCount,
            leftVirtualCellWidth: leftVirtualCellWidth,
            rightVirtualCellCount: rightVirtualCellCount,
            rightVirtualCellWidth: rightVirtualCellWidth,
            tableRef: tableRef,
            topVirtualRowHeight: topVirtualRowHeight,
            virtualCellsCount: virtualCellsCount
        },
        style: style
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "table", className, (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "tbody", null, [hasTopVirtualRow && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _virtual_row__WEBPACK_IMPORTED_MODULE_5__.VirtualRow, {
        height: topVirtualRowHeight,
        cellsCount: virtualCellsCount,
        leftVirtualCellWidth: leftVirtualCellWidth,
        rightVirtualCellWidth: rightVirtualCellWidth,
        leftVirtualCellCount: leftVirtualCellCount,
        rightVirtualCellCount: rightVirtualCellCount
    }), children, hasBottomVirtualRow && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _virtual_row__WEBPACK_IMPORTED_MODULE_5__.VirtualRow, {
        height: bottomVirtualRowHeight,
        cellsCount: virtualCellsCount,
        leftVirtualCellWidth: leftVirtualCellWidth,
        rightVirtualCellWidth: rightVirtualCellWidth,
        leftVirtualCellCount: leftVirtualCellCount,
        rightVirtualCellCount: rightVirtualCellCount
    })], 0), 2, {
        style: (0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(style)
    }, null, tableRef)
};
var TableProps = {
    className: "",
    topVirtualRowHeight: 0,
    bottomVirtualRowHeight: 0,
    leftVirtualCellWidth: 0,
    rightVirtualCellWidth: 0,
    virtualCellsCount: 0
};

class Table extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {};
        this.elementRef = (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createRef)()
    }
    get style() {
        var {
            height: height,
            width: width
        } = this.props;
        var {
            style: style
        } = this.restAttributes;
        var heightAdded = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.addHeightToStyle)(height, style);
        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.addWidthToStyle)(width, heightAdded)
    }
    get hasTopVirtualRow() {
        var {
            topVirtualRowHeight: topVirtualRowHeight
        } = this.props;
        return !!topVirtualRowHeight
    }
    get hasBottomVirtualRow() {
        var {
            bottomVirtualRowHeight: bottomVirtualRowHeight
        } = this.props;
        return !!bottomVirtualRowHeight
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props),
            elementRef: this.elementRef,
            style: this.style,
            hasTopVirtualRow: this.hasTopVirtualRow,
            hasBottomVirtualRow: this.hasBottomVirtualRow,
            restAttributes: this.restAttributes
        })
    }
}
Table.defaultProps = TableProps;


/***/ }),

/***/ 33399:
/*!************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/time_panel/cell.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "TimePanelCellProps": function() { return /* binding */ TimePanelCellProps; },
/* harmony export */   "TimePanelCell": function() { return /* binding */ TimePanelCell; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cell */ 61074);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["allDay", "ariaLabel", "children", "className", "contentTemplateProps", "endDate", "groupIndex", "groups", "index", "isFirstGroupCell", "isLastGroupCell", "startDate", "text", "timeCellTemplate"];



var viewFunction = _ref => {
    var {
        props: {
            className: className,
            isFirstGroupCell: isFirstGroupCell,
            isLastGroupCell: isLastGroupCell,
            text: text,
            timeCellTemplate: TimeCellTemplate
        },
        timeCellTemplateProps: timeCellTemplateProps
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_4__.CellBase, {
        isFirstGroupCell: isFirstGroupCell,
        isLastGroupCell: isLastGroupCell,
        className: "dx-scheduler-time-panel-cell dx-scheduler-cell-sizes-vertical ".concat(className),
        children: [!TimeCellTemplate && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", null, text, 0), !!TimeCellTemplate && TimeCellTemplate({
            index: timeCellTemplateProps.index,
            data: timeCellTemplateProps.data
        })]
    })
};
var TimePanelCellProps = _cell__WEBPACK_IMPORTED_MODULE_4__.CellBaseProps;
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class TimePanelCell extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {};
        this.__getterCache = {}
    }
    get timeCellTemplateProps() {
        if (void 0 !== this.__getterCache.timeCellTemplateProps) {
            return this.__getterCache.timeCellTemplateProps
        }
        return this.__getterCache.timeCellTemplateProps = (() => {
            var {
                groupIndex: groupIndex,
                groups: groups,
                index: index,
                startDate: startDate,
                text: text
            } = this.props;
            return {
                data: {
                    date: startDate,
                    groups: groups,
                    groupIndex: groupIndex,
                    text: text
                },
                index: index
            }
        })()
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    componentWillUpdate(nextProps, nextState, context) {
        if (this.props.groupIndex !== nextProps.groupIndex || this.props.groups !== nextProps.groups || this.props.index !== nextProps.index || this.props.startDate !== nextProps.startDate || this.props.text !== nextProps.text) {
            this.__getterCache.timeCellTemplateProps = void 0
        }
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                timeCellTemplate: getTemplate(props.timeCellTemplate)
            }),
            timeCellTemplateProps: this.timeCellTemplateProps,
            restAttributes: this.restAttributes
        })
    }
}
TimePanelCell.defaultProps = TimePanelCellProps;


/***/ }),

/***/ 47756:
/*!****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.j.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ TimePanelTableLayout; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/component_registrator */ 2382);
/* harmony import */ var _component_wrapper_scheduler_time_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../component_wrapper/scheduler/time_panel */ 16547);
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ 22004);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.j.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class TimePanelTableLayout extends _component_wrapper_scheduler_time_panel__WEBPACK_IMPORTED_MODULE_1__.TimePanel {
    get _propsInfo() {
        return {
            twoWay: [],
            allowNull: [],
            elements: [],
            templates: ["timeCellTemplate"],
            props: ["groupOrientation", "timePanelData", "timeCellTemplate"]
        }
    }
    get _viewComponent() {
        return _layout__WEBPACK_IMPORTED_MODULE_2__.TimePanelTableLayout
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxTimePanelTableLayout", TimePanelTableLayout);


/***/ }),

/***/ 22004:
/*!**************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "TimePanelLayoutProps": function() { return /* binding */ TimePanelLayoutProps; },
/* harmony export */   "TimePanelTableLayout": function() { return /* binding */ TimePanelTableLayout; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../row */ 50642);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cell */ 33399);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../cell */ 61074);
/* harmony import */ var _table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../table */ 35686);
/* harmony import */ var _date_table_all_day_panel_title__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../date_table/all_day_panel/title */ 15905);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["groupOrientation", "tableRef", "timeCellTemplate", "timePanelData"];








var viewFunction = _ref => {
    var {
        bottomVirtualRowHeight: bottomVirtualRowHeight,
        props: {
            tableRef: tableRef,
            timeCellTemplate: timeCellTemplate,
            timePanelData: timePanelData
        },
        restAttributes: restAttributes,
        topVirtualRowHeight: topVirtualRowHeight
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _table__WEBPACK_IMPORTED_MODULE_7__.Table, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, restAttributes, {
        topVirtualRowHeight: topVirtualRowHeight,
        bottomVirtualRowHeight: bottomVirtualRowHeight,
        virtualCellsCount: 1,
        className: "dx-scheduler-time-panel",
        tableRef: tableRef,
        children: timePanelData.groupedData.map(_ref2 => {
            var {
                dateTable: dateTable,
                groupIndex: groupIndex,
                isGroupedAllDayPanel: isGroupedAllDayPanel,
                key: fragmentKey
            } = _ref2;
            return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)([isGroupedAllDayPanel && (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
                children: (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_6__.CellBase, {
                    className: "dx-scheduler-time-panel-title-cell",
                    children: (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _date_table_all_day_panel_title__WEBPACK_IMPORTED_MODULE_8__.AllDayPanelTitle)
                })
            }), dateTable.map(cell => {
                var {
                    groups: groups,
                    index: cellIndex,
                    isFirstGroupCell: isFirstGroupCell,
                    isLastGroupCell: isLastGroupCell,
                    key: key,
                    startDate: startDate,
                    text: text
                } = cell;
                return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
                    className: "dx-scheduler-time-panel-row",
                    children: (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_5__.TimePanelCell, {
                        startDate: startDate,
                        text: text,
                        groups: groups,
                        groupIndex: groupIndex,
                        isFirstGroupCell: isFirstGroupCell,
                        isLastGroupCell: isLastGroupCell,
                        index: cellIndex,
                        timeCellTemplate: timeCellTemplate
                    })
                }, key)
            })], 0, fragmentKey)
        })
    })))
};
var TimePanelLayoutProps = {
    timePanelData: Object.freeze({
        groupedData: [],
        leftVirtualCellCount: 0,
        rightVirtualCellCount: 0,
        topVirtualRowCount: 0,
        bottomVirtualRowCount: 0
    })
};

var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class TimePanelTableLayout extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    createEffects() {
        return [(0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()]
    }
    get topVirtualRowHeight() {
        var _this$props$timePanel;
        return null !== (_this$props$timePanel = this.props.timePanelData.topVirtualRowHeight) && void 0 !== _this$props$timePanel ? _this$props$timePanel : 0
    }
    get bottomVirtualRowHeight() {
        var _this$props$timePanel2;
        return null !== (_this$props$timePanel2 = this.props.timePanelData.bottomVirtualRowHeight) && void 0 !== _this$props$timePanel2 ? _this$props$timePanel2 : 0
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                timeCellTemplate: getTemplate(props.timeCellTemplate)
            }),
            topVirtualRowHeight: this.topVirtualRowHeight,
            bottomVirtualRowHeight: this.bottomVirtualRowHeight,
            restAttributes: this.restAttributes
        })
    }
}
TimePanelTableLayout.defaultProps = TimePanelLayoutProps;


/***/ }),

/***/ 65866:
/*!**************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/utils.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DATE_TABLE_MIN_CELL_WIDTH": function() { return /* binding */ DATE_TABLE_MIN_CELL_WIDTH; },
/* harmony export */   "getTotalRowCount": function() { return /* binding */ getTotalRowCount; },
/* harmony export */   "getTotalCellCount": function() { return /* binding */ getTotalCellCount; },
/* harmony export */   "getRowCountWithAllDayRow": function() { return /* binding */ getRowCountWithAllDayRow; },
/* harmony export */   "getHiddenInterval": function() { return /* binding */ getHiddenInterval; },
/* harmony export */   "createCellElementMetaData": function() { return /* binding */ createCellElementMetaData; },
/* harmony export */   "getDateForHeaderText": function() { return /* binding */ getDateForHeaderText; },
/* harmony export */   "getDateTableWidth": function() { return /* binding */ getDateTableWidth; },
/* harmony export */   "createVirtualScrollingOptions": function() { return /* binding */ createVirtualScrollingOptions; },
/* harmony export */   "getCellIndices": function() { return /* binding */ getCellIndices; },
/* harmony export */   "compareCellsByDateAndIndex": function() { return /* binding */ compareCellsByDateAndIndex; },
/* harmony export */   "getSelectedCells": function() { return /* binding */ getSelectedCells; },
/* harmony export */   "isCellAllDay": function() { return /* binding */ isCellAllDay; }
/* harmony export */ });
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/utils/date */ 35341);
/* harmony import */ var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../__internal/scheduler/resources/m_utils */ 48025);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ 59016);
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../const */ 25222);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var DAY_MS = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateToMilliseconds("day");
var HOUR_MS = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateToMilliseconds("hour");
var DATE_TABLE_MIN_CELL_WIDTH = 75;
var getTotalRowCount = (rowCount, groupOrientation, groups, isAllDayPanelVisible) => {
    var isVerticalGrouping = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.isVerticalGroupingApplied)(groups, groupOrientation);
    var groupCount = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__.getGroupCount)(groups);
    var totalRowCount = isVerticalGrouping ? rowCount * groupCount : rowCount;
    return isAllDayPanelVisible ? totalRowCount + groupCount : totalRowCount
};
var getTotalCellCount = (cellCount, groupOrientation, groups) => {
    var isHorizontalGrouping = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.isHorizontalGroupingApplied)(groups, groupOrientation);
    var groupCount = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__.getGroupCount)(groups);
    return isHorizontalGrouping ? cellCount * groupCount : cellCount
};
var getRowCountWithAllDayRow = (rowCount, isAllDayPanelVisible) => isAllDayPanelVisible ? rowCount + 1 : rowCount;
var getHiddenInterval = (hoursInterval, cellCountInDay) => {
    var visibleInterval = hoursInterval * cellCountInDay * HOUR_MS;
    return DAY_MS - visibleInterval
};
var createCellElementMetaData = (tableRect, cellRect) => {
    var {
        bottom: bottom,
        height: height,
        left: left,
        right: right,
        top: top,
        width: width,
        x: x,
        y: y
    } = cellRect;
    return {
        right: right,
        bottom: bottom,
        left: left - tableRect.left,
        top: top - tableRect.top,
        width: width,
        height: height,
        x: x,
        y: y
    }
};
var getDateForHeaderText = (_, date) => date;
var getDateTableWidth = (scrollableWidth, dateTable, viewDataProvider, workSpaceConfig) => {
    var dateTableCell = dateTable.querySelector("td:not(.dx-scheduler-virtual-cell)");
    var cellWidth = dateTableCell.getBoundingClientRect().width;
    if (cellWidth < DATE_TABLE_MIN_CELL_WIDTH) {
        cellWidth = DATE_TABLE_MIN_CELL_WIDTH
    }
    var cellCount = viewDataProvider.getCellCount(workSpaceConfig);
    var totalCellCount = getTotalCellCount(cellCount, workSpaceConfig.groupOrientation, workSpaceConfig.groups);
    var minTablesWidth = totalCellCount * cellWidth;
    return scrollableWidth < minTablesWidth ? minTablesWidth : scrollableWidth
};
var createVirtualScrollingOptions = options => ({
    getCellHeight: () => options.cellHeight,
    getCellWidth: () => options.cellWidth,
    getCellMinWidth: () => DATE_TABLE_MIN_CELL_WIDTH,
    isRTL: () => options.rtlEnabled,
    getSchedulerHeight: () => options.schedulerHeight,
    getSchedulerWidth: () => options.schedulerWidth,
    getViewHeight: () => options.viewHeight,
    getViewWidth: () => options.viewWidth,
    getScrolling: () => options.scrolling,
    getScrollableOuterWidth: () => options.scrollableWidth,
    getGroupCount: () => (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__.getGroupCount)(options.groups),
    isVerticalGrouping: () => options.isVerticalGrouping,
    getTotalRowCount: () => options.completeRowCount,
    getTotalCellCount: () => options.completeColumnCount,
    getWindowHeight: () => options.windowHeight,
    getWindowWidth: () => options.windowWidth
});
var getCellIndices = cell => {
    var row = cell.closest(".".concat(_const__WEBPACK_IMPORTED_MODULE_3__.DATE_TABLE_ROW_CLASS, ", .").concat(_const__WEBPACK_IMPORTED_MODULE_3__.ALL_DAY_ROW_CLASS));
    var rowParent = row.parentNode;
    var cellParent = cell.parentNode;
    var columnIndex = [...Array.from(cellParent.children)].filter(child => child.className.includes(_const__WEBPACK_IMPORTED_MODULE_3__.DATE_TABLE_CELL_CLASS) || child.className.includes(_const__WEBPACK_IMPORTED_MODULE_3__.ALL_DAY_PANEL_CELL_CLASS)).indexOf(cell);
    var rowIndex = [...Array.from(rowParent.children)].filter(child => child.className.includes(_const__WEBPACK_IMPORTED_MODULE_3__.DATE_TABLE_ROW_CLASS)).indexOf(row);
    return {
        columnIndex: columnIndex,
        rowIndex: rowIndex
    }
};
var compareCellsByDateAndIndex = daysAndIndexes => {
    var {
        date: date,
        firstDate: firstDate,
        firstIndex: firstIndex,
        index: index,
        lastDate: lastDate,
        lastIndex: lastIndex
    } = daysAndIndexes;
    if (firstDate === lastDate) {
        var validFirstIndex = firstIndex;
        var validLastIndex = lastIndex;
        if (validFirstIndex > validLastIndex) {
            [validFirstIndex, validLastIndex] = [validLastIndex, validFirstIndex]
        }
        return firstDate === date && index >= validFirstIndex && index <= validLastIndex
    }
    return date === firstDate && index >= firstIndex || date === lastDate && index <= lastIndex || firstDate < date && date < lastDate
};
var filterCellsByDateAndIndex = (cellsRow, filterData) => {
    var {
        firstDate: firstDate,
        firstIndex: firstIndex,
        lastDate: lastDate,
        lastIndex: lastIndex
    } = filterData;
    var firstDay = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(firstDate).getTime();
    var lastDay = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(lastDate).getTime();
    return cellsRow.filter(cell => {
        var {
            index: index,
            startDate: startDate
        } = cell;
        var day = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(startDate).getTime();
        var daysAndIndexes = {
            date: day,
            index: index,
            firstDate: firstDay,
            firstIndex: firstIndex,
            lastDate: lastDay,
            lastIndex: lastIndex
        };
        return compareCellsByDateAndIndex(daysAndIndexes)
    })
};
var getSelectedCells = (viewDataProvider, firstSelectedCell, lastSelectedCell, isLastSelectedCellAllDay) => {
    var firstCell = firstSelectedCell;
    var lastCell = lastSelectedCell;
    if (firstCell.startDate.getTime() > lastCell.startDate.getTime()) {
        [firstCell, lastCell] = [lastCell, firstCell]
    }
    var {
        groupIndex: firstGroupIndex,
        index: firstCellIndex,
        startDate: firstStartDate
    } = firstCell;
    var {
        index: lastCellIndex,
        startDate: lastStartDate
    } = lastCell;
    var cells = viewDataProvider.getCellsByGroupIndexAndAllDay(null !== firstGroupIndex && void 0 !== firstGroupIndex ? firstGroupIndex : 0, isLastSelectedCellAllDay);
    var filteredCells = cells.reduce((selectedCells, cellsRow) => {
        var filterData = {
            firstDate: firstStartDate,
            lastDate: lastStartDate,
            firstIndex: firstCellIndex,
            lastIndex: lastCellIndex
        };
        var filteredRow = filterCellsByDateAndIndex(cellsRow, filterData);
        selectedCells.push(...filteredRow);
        return selectedCells
    }, []);
    var selectedCells = filteredCells.sort((firstArg, secondArg) => firstArg.startDate.getTime() - secondArg.startDate.getTime());
    return selectedCells
};
var isCellAllDay = cell => cell.className.includes(_const__WEBPACK_IMPORTED_MODULE_3__.ALL_DAY_PANEL_CELL_CLASS);


/***/ }),

/***/ 69850:
/*!*********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/virtual_cell.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "VirtualCellProps": function() { return /* binding */ VirtualCellProps; },
/* harmony export */   "VirtualCell": function() { return /* binding */ VirtualCell; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ 59016);
/* harmony import */ var _header_cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./header_cell */ 92007);
/* harmony import */ var _ordinary_cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ordinary_cell */ 35545);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/virtual_cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["colSpan", "isHeaderCell", "width"];





var viewFunction = _ref => {
    var {
        props: {
            colSpan: colSpan,
            isHeaderCell: isHeaderCell
        },
        style: style
    } = _ref;
    var Cell = isHeaderCell ? _header_cell__WEBPACK_IMPORTED_MODULE_5__.HeaderCell : _ordinary_cell__WEBPACK_IMPORTED_MODULE_6__.OrdinaryCell;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, Cell, {
        className: "dx-scheduler-virtual-cell",
        styles: style,
        colSpan: colSpan
    })
};
var VirtualCellProps = {
    width: 0,
    isHeaderCell: false
};
class VirtualCell extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get style() {
        var {
            width: width
        } = this.props;
        var {
            style: style
        } = this.restAttributes;
        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.addWidthToStyle)(width, style)
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props),
            style: this.style,
            restAttributes: this.restAttributes
        })
    }
}
VirtualCell.defaultProps = VirtualCellProps;


/***/ }),

/***/ 3211:
/*!********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/virtual_row.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "VirtualRowProps": function() { return /* binding */ VirtualRowProps; },
/* harmony export */   "VirtualRow": function() { return /* binding */ VirtualRow; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ 59016);
/* harmony import */ var _row__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./row */ 50642);
/* harmony import */ var _virtual_cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./virtual_cell */ 69850);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/virtual_row.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["cellsCount", "children", "className", "height", "isHeaderRow", "leftVirtualCellCount", "leftVirtualCellWidth", "rightVirtualCellCount", "rightVirtualCellWidth", "styles"];





var viewFunction = _ref => {
    var {
        classes: classes,
        props: {
            leftVirtualCellCount: leftVirtualCellCount,
            leftVirtualCellWidth: leftVirtualCellWidth,
            rightVirtualCellCount: rightVirtualCellCount,
            rightVirtualCellWidth: rightVirtualCellWidth
        },
        style: style,
        virtualCells: virtualCells
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_5__.Row, {
        styles: style,
        className: classes,
        leftVirtualCellWidth: leftVirtualCellWidth,
        rightVirtualCellWidth: rightVirtualCellWidth,
        leftVirtualCellCount: leftVirtualCellCount,
        rightVirtualCellCount: rightVirtualCellCount,
        children: virtualCells.map((_, index) => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _virtual_cell__WEBPACK_IMPORTED_MODULE_6__.VirtualCell, null, index.toString()))
    })
};
var VirtualRowProps = Object.create(Object.prototype, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)(Object.getOwnPropertyDescriptors(_row__WEBPACK_IMPORTED_MODULE_5__.RowProps), Object.getOwnPropertyDescriptors({
    leftVirtualCellWidth: 0,
    rightVirtualCellWidth: 0,
    cellsCount: 1
})));
class VirtualRow extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {};
        this.__getterCache = {}
    }
    get style() {
        var {
            height: height
        } = this.props;
        var {
            style: style
        } = this.restAttributes;
        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.addHeightToStyle)(height, style)
    }
    get classes() {
        var {
            className: className
        } = this.props;
        return "dx-scheduler-virtual-row ".concat(className)
    }
    get virtualCells() {
        if (void 0 !== this.__getterCache.virtualCells) {
            return this.__getterCache.virtualCells
        }
        return this.__getterCache.virtualCells = (() => {
            var {
                cellsCount: cellsCount
            } = this.props;
            return [...Array(cellsCount)]
        })()
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    componentWillUpdate(nextProps, nextState, context) {
        if (this.props.cellsCount !== nextProps.cellsCount) {
            this.__getterCache.virtualCells = void 0
        }
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props),
            style: this.style,
            classes: this.classes,
            virtualCells: this.virtualCells,
            restAttributes: this.restAttributes
        })
    }
}
VirtualRow.defaultProps = VirtualRowProps;


/***/ }),

/***/ 25222:
/*!*********************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/const.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DefaultSizes": function() { return /* binding */ DefaultSizes; },
/* harmony export */   "DATE_TABLE_CELL_CLASS": function() { return /* binding */ DATE_TABLE_CELL_CLASS; },
/* harmony export */   "ALL_DAY_PANEL_CELL_CLASS": function() { return /* binding */ ALL_DAY_PANEL_CELL_CLASS; },
/* harmony export */   "DATE_TABLE_ROW_CLASS": function() { return /* binding */ DATE_TABLE_ROW_CLASS; },
/* harmony export */   "ALL_DAY_ROW_CLASS": function() { return /* binding */ ALL_DAY_ROW_CLASS; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/const.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var DefaultSizes = {
    allDayPanelHeight: 25
};
var DATE_TABLE_CELL_CLASS = "dx-scheduler-date-table-cell";
var ALL_DAY_PANEL_CELL_CLASS = "dx-scheduler-all-day-table-cell";
var DATE_TABLE_ROW_CLASS = "dx-scheduler-date-table-row";
var ALL_DAY_ROW_CLASS = "dx-scheduler-all-day-table-row";


/***/ }),

/***/ 69077:
/*!*************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/month/date_table/cell.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "MonthDateTableCell": function() { return /* binding */ MonthDateTableCell; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../utils/combine_classes */ 33582);
/* harmony import */ var _base_date_table_cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../base/date_table/cell */ 50995);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/month/date_table/cell.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["allDay", "ariaLabel", "children", "className", "contentTemplateProps", "dataCellTemplate", "endDate", "firstDayOfMonth", "groupIndex", "groups", "index", "isFirstGroupCell", "isFocused", "isLastGroupCell", "isSelected", "otherMonth", "startDate", "text", "today"];




var viewFunction = _ref => {
    var {
        classes: classes,
        contentTemplateProps: contentTemplateProps,
        props: {
            dataCellTemplate: dataCellTemplate,
            endDate: endDate,
            groupIndex: groupIndex,
            groups: groups,
            index: index,
            isFirstGroupCell: isFirstGroupCell,
            isFocused: isFocused,
            isLastGroupCell: isLastGroupCell,
            isSelected: isSelected,
            startDate: startDate,
            text: text
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _base_date_table_cell__WEBPACK_IMPORTED_MODULE_5__.DateTableCellBase, {
        className: classes,
        dataCellTemplate: dataCellTemplate,
        startDate: startDate,
        endDate: endDate,
        text: text,
        groups: groups,
        groupIndex: groupIndex,
        index: index,
        isFirstGroupCell: isFirstGroupCell,
        isLastGroupCell: isLastGroupCell,
        isSelected: isSelected,
        isFocused: isFocused,
        contentTemplateProps: contentTemplateProps,
        children: (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-date-table-cell-text", text, 0)
    })
};
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class MonthDateTableCell extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {};
        this.__getterCache = {}
    }
    get classes() {
        var {
            className: className,
            firstDayOfMonth: firstDayOfMonth,
            otherMonth: otherMonth,
            today: today
        } = this.props;
        return (0,_utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__.combineClasses)({
            "dx-scheduler-date-table-other-month": !!otherMonth,
            "dx-scheduler-date-table-current-date": !!today,
            "dx-scheduler-date-table-first-of-month": !!firstDayOfMonth,
            [className]: !!className
        })
    }
    get contentTemplateProps() {
        if (void 0 !== this.__getterCache.contentTemplateProps) {
            return this.__getterCache.contentTemplateProps
        }
        return this.__getterCache.contentTemplateProps = (() => {
            var {
                index: index,
                text: text
            } = this.props;
            return {
                data: {
                    text: text
                },
                index: index
            }
        })()
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    componentWillUpdate(nextProps, nextState, context) {
        if (this.props.index !== nextProps.index || this.props.text !== nextProps.text) {
            this.__getterCache.contentTemplateProps = void 0
        }
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                dataCellTemplate: getTemplate(props.dataCellTemplate)
            }),
            classes: this.classes,
            contentTemplateProps: this.contentTemplateProps,
            restAttributes: this.restAttributes
        })
    }
}
MonthDateTableCell.defaultProps = _base_date_table_cell__WEBPACK_IMPORTED_MODULE_5__.DateTableCellBaseProps;


/***/ }),

/***/ 93335:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/month/date_table/layout.j.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ MonthDateTableLayout; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/component_registrator */ 2382);
/* harmony import */ var _component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../component_wrapper/scheduler/date_table */ 5733);
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ 94701);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/month/date_table/layout.j.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class MonthDateTableLayout extends _component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__.DateTable {
    get _propsInfo() {
        return {
            twoWay: [],
            allowNull: [],
            elements: [],
            templates: ["cellTemplate", "dataCellTemplate"],
            props: ["cellTemplate", "viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width", "dataCellTemplate"]
        }
    }
    get _viewComponent() {
        return _layout__WEBPACK_IMPORTED_MODULE_2__.MonthDateTableLayout
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxMonthDateTableLayout", MonthDateTableLayout);


/***/ }),

/***/ 94701:
/*!***************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/month/date_table/layout.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "MonthDateTableLayout": function() { return /* binding */ MonthDateTableLayout; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _base_date_table_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../base/date_table/layout */ 96471);
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cell */ 69077);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/month/date_table/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["addDateTableClass", "addVerticalSizesClassToRows", "bottomVirtualRowHeight", "cellTemplate", "dataCellTemplate", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "tableRef", "topVirtualRowHeight", "viewData", "width"];




var viewFunction = _ref => {
    var {
        props: {
            addDateTableClass: addDateTableClass,
            addVerticalSizesClassToRows: addVerticalSizesClassToRows,
            dataCellTemplate: dataCellTemplate,
            groupOrientation: groupOrientation,
            tableRef: tableRef,
            viewData: viewData,
            width: width
        },
        restAttributes: restAttributes
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _base_date_table_layout__WEBPACK_IMPORTED_MODULE_4__.DateTableLayoutBase, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({
        viewData: viewData,
        groupOrientation: groupOrientation,
        addDateTableClass: addDateTableClass,
        dataCellTemplate: dataCellTemplate,
        cellTemplate: _cell__WEBPACK_IMPORTED_MODULE_5__.MonthDateTableCell,
        tableRef: tableRef,
        addVerticalSizesClassToRows: addVerticalSizesClassToRows,
        width: width
    }, restAttributes)))
};

var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class MonthDateTableLayout extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    createEffects() {
        return [(0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()]
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                cellTemplate: getTemplate(props.cellTemplate),
                dataCellTemplate: getTemplate(props.dataCellTemplate)
            }),
            restAttributes: this.restAttributes
        })
    }
}
MonthDateTableLayout.defaultProps = _base_date_table_layout__WEBPACK_IMPORTED_MODULE_4__.DateTableLayoutProps;


/***/ }),

/***/ 94576:
/*!********************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/timeline/header_panel/date_header/layout.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "TimelineDateHeaderLayout": function() { return /* binding */ TimelineDateHeaderLayout; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _base_row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../base/row */ 50642);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../utils */ 59016);
/* harmony import */ var _base_header_panel_date_header_cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../base/header_panel/date_header/cell */ 4905);
/* harmony import */ var _base_header_panel_date_header_layout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../base/header_panel/date_header/layout */ 20046);
/* harmony import */ var _utils_getThemeType__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../utils/getThemeType */ 42394);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/timeline/header_panel/date_header/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["dateCellTemplate", "dateHeaderData", "groupByDate", "groupOrientation", "groups", "timeCellTemplate"];








var {
    isMaterial: isMaterial
} = (0,_utils_getThemeType__WEBPACK_IMPORTED_MODULE_8__.default)();
var viewFunction = _ref => {
    var {
        isHorizontalGrouping: isHorizontalGrouping,
        props: {
            dateCellTemplate: dateCellTemplate,
            dateHeaderData: dateHeaderData,
            timeCellTemplate: timeCellTemplate
        }
    } = _ref;
    var {
        dataMap: dataMap,
        isMonthDateHeader: isMonthDateHeader,
        leftVirtualCellCount: leftVirtualCellCount,
        leftVirtualCellWidth: leftVirtualCellWidth,
        rightVirtualCellCount: rightVirtualCellCount,
        rightVirtualCellWidth: rightVirtualCellWidth,
        weekDayLeftVirtualCellCount: weekDayLeftVirtualCellCount,
        weekDayLeftVirtualCellWidth: weekDayLeftVirtualCellWidth,
        weekDayRightVirtualCellCount: weekDayRightVirtualCellCount,
        weekDayRightVirtualCellWidth: weekDayRightVirtualCellWidth
    } = dateHeaderData;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)(dataMap.map((dateHeaderRow, rowIndex) => {
        var rowsCount = dataMap.length;
        var isTimeCellTemplate = rowsCount - 1 === rowIndex;
        var isWeekDayRow = rowsCount > 1 && 0 === rowIndex;
        var splitText = isMaterial && (isMonthDateHeader || isWeekDayRow);
        var validLeftVirtualCellCount = leftVirtualCellCount;
        var validRightVirtualCellCount = rightVirtualCellCount;
        var validRightVirtualCellWidth = rightVirtualCellWidth;
        var validLeftVirtualCellWidth = leftVirtualCellWidth;
        if (isWeekDayRow) {
            validLeftVirtualCellCount = weekDayLeftVirtualCellCount;
            validRightVirtualCellCount = weekDayRightVirtualCellCount;
            validRightVirtualCellWidth = weekDayRightVirtualCellWidth;
            validLeftVirtualCellWidth = weekDayLeftVirtualCellWidth
        }
        return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _base_row__WEBPACK_IMPORTED_MODULE_4__.Row, {
            className: "dx-scheduler-header-row",
            leftVirtualCellWidth: validLeftVirtualCellWidth,
            leftVirtualCellCount: validLeftVirtualCellCount,
            rightVirtualCellWidth: validRightVirtualCellWidth,
            rightVirtualCellCount: validRightVirtualCellCount,
            children: dateHeaderRow.map(_ref2 => {
                var {
                    colSpan: colSpan,
                    endDate: endDate,
                    groupIndex: groupIndex,
                    groups: cellGroups,
                    index: index,
                    isFirstGroupCell: isFirstGroupCell,
                    isLastGroupCell: isLastGroupCell,
                    key: key,
                    startDate: startDate,
                    text: text,
                    today: today
                } = _ref2;
                return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _base_header_panel_date_header_cell__WEBPACK_IMPORTED_MODULE_6__.DateHeaderCell, {
                    startDate: startDate,
                    endDate: endDate,
                    groups: isHorizontalGrouping ? cellGroups : void 0,
                    groupIndex: isHorizontalGrouping ? groupIndex : void 0,
                    today: today,
                    index: index,
                    text: text,
                    isFirstGroupCell: isFirstGroupCell,
                    isLastGroupCell: isLastGroupCell,
                    isWeekDayCell: isWeekDayRow,
                    colSpan: colSpan,
                    splitText: splitText,
                    dateCellTemplate: dateCellTemplate,
                    timeCellTemplate: timeCellTemplate,
                    isTimeCellTemplate: isTimeCellTemplate
                }, key)
            })
        }, rowIndex.toString())
    }), 0)
};
var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class TimelineDateHeaderLayout extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    get isHorizontalGrouping() {
        var {
            groupByDate: groupByDate,
            groupOrientation: groupOrientation,
            groups: groups
        } = this.props;
        return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.isHorizontalGroupingApplied)(groups, groupOrientation) && !groupByDate
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                dateCellTemplate: getTemplate(props.dateCellTemplate),
                timeCellTemplate: getTemplate(props.timeCellTemplate)
            }),
            isHorizontalGrouping: this.isHorizontalGrouping,
            restAttributes: this.restAttributes
        })
    }
}
TimelineDateHeaderLayout.defaultProps = _base_header_panel_date_header_layout__WEBPACK_IMPORTED_MODULE_7__.DateHeaderLayoutProps;


/***/ }),

/***/ 10889:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/timeline/header_panel/layout.j.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ TimelineHeaderPanelLayout; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/component_registrator */ 2382);
/* harmony import */ var _component_wrapper_scheduler_header_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../component_wrapper/scheduler/header_panel */ 72902);
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ 32154);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/timeline/header_panel/layout.j.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class TimelineHeaderPanelLayout extends _component_wrapper_scheduler_header_panel__WEBPACK_IMPORTED_MODULE_1__.HeaderPanel {
    get _propsInfo() {
        return {
            twoWay: [],
            allowNull: [],
            elements: [],
            templates: ["dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "resourceCellTemplate"],
            props: ["dateHeaderData", "isRenderDateHeader", "dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "groups", "groupOrientation", "groupPanelData", "groupByDate", "height", "className", "resourceCellTemplate"]
        }
    }
    get _viewComponent() {
        return _layout__WEBPACK_IMPORTED_MODULE_2__.TimelineHeaderPanelLayout
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxTimelineHeaderPanelLayout", TimelineHeaderPanelLayout);


/***/ }),

/***/ 32154:
/*!********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/timeline/header_panel/layout.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "viewFunction": function() { return /* binding */ viewFunction; },
/* harmony export */   "TimelineHeaderPanelLayout": function() { return /* binding */ TimelineHeaderPanelLayout; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! inferno */ 82702);
/* harmony import */ var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devextreme/runtime/inferno */ 78322);
/* harmony import */ var _base_header_panel_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../base/header_panel/layout */ 61140);
/* harmony import */ var _date_header_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./date_header/layout */ 94576);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/timeline/header_panel/layout.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["className", "dateCellTemplate", "dateHeaderData", "dateHeaderTemplate", "elementRef", "groupByDate", "groupOrientation", "groupPanelData", "groups", "height", "isRenderDateHeader", "resourceCellTemplate", "timeCellTemplate"];




var viewFunction = _ref => {
    var {
        props: {
            dateCellTemplate: dateCellTemplate,
            dateHeaderData: dateHeaderData,
            groupByDate: groupByDate,
            groupOrientation: groupOrientation,
            groupPanelData: groupPanelData,
            groups: groups,
            isRenderDateHeader: isRenderDateHeader,
            resourceCellTemplate: resourceCellTemplate,
            timeCellTemplate: timeCellTemplate
        }
    } = _ref;
    return (0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _base_header_panel_layout__WEBPACK_IMPORTED_MODULE_4__.HeaderPanelLayout, {
        dateHeaderTemplate: _date_header_layout__WEBPACK_IMPORTED_MODULE_5__.TimelineDateHeaderLayout,
        dateHeaderData: dateHeaderData,
        groupPanelData: groupPanelData,
        groupByDate: groupByDate,
        groups: groups,
        groupOrientation: groupOrientation,
        isRenderDateHeader: isRenderDateHeader,
        resourceCellTemplate: resourceCellTemplate,
        dateCellTemplate: dateCellTemplate,
        timeCellTemplate: timeCellTemplate
    })
};

var getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => (0,inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0,inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props))) : TemplateProp);
class TimelineHeaderPanelLayout extends _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent {
    constructor(props) {
        super(props);
        this.state = {}
    }
    createEffects() {
        return [(0,_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()]
    }
    get restAttributes() {
        var _this$props = this.props,
            restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_this$props, _excluded);
        return restProps
    }
    render() {
        var props = this.props;
        return viewFunction({
            props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, props, {
                dateCellTemplate: getTemplate(props.dateCellTemplate),
                timeCellTemplate: getTemplate(props.timeCellTemplate),
                dateHeaderTemplate: getTemplate(props.dateHeaderTemplate),
                resourceCellTemplate: getTemplate(props.resourceCellTemplate)
            }),
            restAttributes: this.restAttributes
        })
    }
}
TimelineHeaderPanelLayout.defaultProps = _base_header_panel_layout__WEBPACK_IMPORTED_MODULE_4__.HeaderPanelLayoutProps;


/***/ }),

/***/ 59016:
/*!*********************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/utils.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getKeyByDateAndGroup": function() { return /* binding */ getKeyByDateAndGroup; },
/* harmony export */   "getKeyByGroup": function() { return /* binding */ getKeyByGroup; },
/* harmony export */   "addToStyles": function() { return /* binding */ addToStyles; },
/* harmony export */   "addHeightToStyle": function() { return /* binding */ addHeightToStyle; },
/* harmony export */   "addWidthToStyle": function() { return /* binding */ addWidthToStyle; },
/* harmony export */   "getGroupCellClasses": function() { return /* binding */ getGroupCellClasses; },
/* harmony export */   "getIsGroupedAllDayPanel": function() { return /* binding */ getIsGroupedAllDayPanel; },
/* harmony export */   "isVerticalGroupingApplied": function() { return /* binding */ isVerticalGroupingApplied; },
/* harmony export */   "isHorizontalGroupingApplied": function() { return /* binding */ isHorizontalGroupingApplied; },
/* harmony export */   "isGroupingByDate": function() { return /* binding */ isGroupingByDate; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/combine_classes */ 33582);
/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../consts */ 29239);
/**
 * DevExtreme (esm/renovation/ui/scheduler/workspaces/utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var getKeyByDateAndGroup = (date, groupIndex) => {
    var key = date.getTime();
    if (!groupIndex) {
        return key.toString()
    }
    return (key + groupIndex).toString()
};
var getKeyByGroup = (groupIndex, isVerticalGrouping) => {
    if (isVerticalGrouping && !!groupIndex) {
        return groupIndex.toString()
    }
    return "0"
};
var addToStyles = (options, style) => {
    var nextStyle = null !== style && void 0 !== style ? style : {};
    var result = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, nextStyle);
    options.forEach(_ref => {
        var {
            attr: attr,
            value: value
        } = _ref;
        result[attr] = value || nextStyle[attr]
    });
    return result
};
var addHeightToStyle = (value, style) => {
    var height = value ? "".concat(value, "px") : "";
    return addToStyles([{
        attr: "height",
        value: height
    }], style)
};
var addWidthToStyle = (value, style) => {
    var width = value ? "".concat(value, "px") : "";
    return addToStyles([{
        attr: "width",
        value: width
    }], style)
};
var getGroupCellClasses = function() {
    var isFirstGroupCell = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;
    var isLastGroupCell = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
    var className = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
    return (0,_utils_combine_classes__WEBPACK_IMPORTED_MODULE_1__.combineClasses)({
        "dx-scheduler-first-group-cell": isFirstGroupCell,
        "dx-scheduler-last-group-cell": isLastGroupCell,
        [className]: true
    })
};
var getIsGroupedAllDayPanel = (hasAllDayRow, isVerticalGrouping) => hasAllDayRow && isVerticalGrouping;
var isVerticalGroupingApplied = (groups, groupOrientation) => groupOrientation === _consts__WEBPACK_IMPORTED_MODULE_2__.VERTICAL_GROUP_ORIENTATION && !!groups.length;
var isHorizontalGroupingApplied = (groups, groupOrientation) => groupOrientation === _consts__WEBPACK_IMPORTED_MODULE_2__.HORIZONTAL_GROUP_ORIENTATION && !!groups.length;
var isGroupingByDate = (groups, groupOrientation, groupByDate) => {
    var isHorizontalGrouping = isHorizontalGroupingApplied(groups, groupOrientation);
    return groupByDate && isHorizontalGrouping
};


/***/ }),

/***/ 3749:
/*!*******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scroll_view/utils/get_boundary_props.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isReachedLeft": function() { return /* binding */ isReachedLeft; },
/* harmony export */   "isReachedRight": function() { return /* binding */ isReachedRight; },
/* harmony export */   "isReachedTop": function() { return /* binding */ isReachedTop; },
/* harmony export */   "isReachedBottom": function() { return /* binding */ isReachedBottom; },
/* harmony export */   "getBoundaryProps": function() { return /* binding */ getBoundaryProps; }
/* harmony export */ });
/* harmony import */ var _get_scroll_left_max__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get_scroll_left_max */ 15256);
/* harmony import */ var _get_scroll_top_max__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get_scroll_top_max */ 68073);
/* harmony import */ var _scroll_direction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scroll_direction */ 27090);
/**
 * DevExtreme (esm/renovation/ui/scroll_view/utils/get_boundary_props.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



function isReachedLeft(scrollOffsetLeft, epsilon) {
    return Math.round(scrollOffsetLeft) <= epsilon
}
function isReachedRight(element, scrollOffsetLeft, epsilon) {
    return Math.round((0,_get_scroll_left_max__WEBPACK_IMPORTED_MODULE_0__.getScrollLeftMax)(element) - scrollOffsetLeft) <= epsilon
}
function isReachedTop(scrollOffsetTop, epsilon) {
    return Math.round(scrollOffsetTop) <= epsilon
}
function isReachedBottom(element, scrollOffsetTop, pocketHeight, epsilon) {
    return Math.round((0,_get_scroll_top_max__WEBPACK_IMPORTED_MODULE_1__.getScrollTopMax)(element) - scrollOffsetTop - pocketHeight) <= epsilon
}
function getBoundaryProps(direction, scrollOffset, element) {
    var pocketHeight = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
    var {
        left: left,
        top: top
    } = scrollOffset;
    var boundaryProps = {};
    var {
        isHorizontal: isHorizontal,
        isVertical: isVertical
    } = new _scroll_direction__WEBPACK_IMPORTED_MODULE_2__.ScrollDirection(direction);
    if (isHorizontal) {
        boundaryProps.reachedLeft = isReachedLeft(left, 0);
        boundaryProps.reachedRight = isReachedRight(element, left, 0)
    }
    if (isVertical) {
        boundaryProps.reachedTop = isReachedTop(top, 0);
        boundaryProps.reachedBottom = isReachedBottom(element, top, pocketHeight, 0)
    }
    return boundaryProps
}


/***/ }),

/***/ 15256:
/*!********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scroll_view/utils/get_scroll_left_max.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getScrollLeftMax": function() { return /* binding */ getScrollLeftMax; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scroll_view/utils/get_scroll_left_max.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
function getScrollLeftMax(element) {
    return element.scrollWidth - element.clientWidth
}


/***/ }),

/***/ 68073:
/*!*******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/ui/scroll_view/utils/get_scroll_top_max.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getScrollTopMax": function() { return /* binding */ getScrollTopMax; }
/* harmony export */ });
/**
 * DevExtreme (esm/renovation/ui/scroll_view/utils/get_scroll_top_max.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
function getScrollTopMax(element) {
    return element.scrollHeight - element.clientHeight
}


/***/ }),

/***/ 42394:
/*!**********************************************************************!*\
  !*** ./node_modules/devextreme/esm/renovation/utils/getThemeType.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ui_themes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../ui/themes */ 78279);
/**
 * DevExtreme (esm/renovation/utils/getThemeType.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var getThemeType = () => {
    var theme = (0,_ui_themes__WEBPACK_IMPORTED_MODULE_0__.current)();
    return {
        isCompact: (0,_ui_themes__WEBPACK_IMPORTED_MODULE_0__.isCompact)(theme),
        isMaterial: (0,_ui_themes__WEBPACK_IMPORTED_MODULE_0__.isMaterial)(theme)
    }
};
/* harmony default export */ __webpack_exports__["default"] = (getThemeType);


/***/ }),

/***/ 52566:
/*!********************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/button_group.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./widget/ui.widget */ 69703);
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./button */ 66037);
/* harmony import */ var _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./collection/ui.collection_widget.edit */ 2076);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/utils/type */ 33275);
/* harmony import */ var _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/templates/bindable_template */ 32503);
/**
 * DevExtreme (esm/ui/button_group.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */








var BUTTON_GROUP_CLASS = "dx-buttongroup";
var BUTTON_GROUP_WRAPPER_CLASS = BUTTON_GROUP_CLASS + "-wrapper";
var BUTTON_GROUP_ITEM_CLASS = BUTTON_GROUP_CLASS + "-item";
var BUTTON_GROUP_FIRST_ITEM_CLASS = BUTTON_GROUP_CLASS + "-first-item";
var BUTTON_GROUP_LAST_ITEM_CLASS = BUTTON_GROUP_CLASS + "-last-item";
var BUTTON_GROUP_ITEM_HAS_WIDTH = BUTTON_GROUP_ITEM_CLASS + "-has-width";
var SHAPE_STANDARD_CLASS = "dx-shape-standard";
var ButtonCollection = _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_3__.default.inherit({
    _initTemplates() {
        this.callBase();
        this._templateManager.addDefaultTemplates({
            item: new _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_7__.BindableTemplate(($container, data, model) => {
                this._prepareItemStyles($container);
                var template = this.option("buttonTemplate");
                this._createComponent($container, _button__WEBPACK_IMPORTED_MODULE_2__.default, (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)({}, model, data, this._getBasicButtonOptions(), {
                    _templateData: this._hasCustomTemplate(template) ? model : {},
                    template: model.template || template
                }))
            }, ["text", "type", "icon", "disabled", "visible", "hint"], this.option("integrationOptions.watchMethod"))
        })
    },
    _getBasicButtonOptions() {
        return {
            focusStateEnabled: false,
            onClick: null,
            hoverStateEnabled: this.option("hoverStateEnabled"),
            activeStateEnabled: this.option("activeStateEnabled"),
            stylingMode: this.option("stylingMode")
        }
    },
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this.callBase(), {
            itemTemplateProperty: null
        })
    },
    _hasCustomTemplate(template) {
        return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isFunction)(template) || this.option("integrationOptions.templates")[template]
    },
    _prepareItemStyles($item) {
        var itemIndex = $item.data("dxItemIndex");
        0 === itemIndex && $item.addClass(BUTTON_GROUP_FIRST_ITEM_CLASS);
        var items = this.option("items");
        items && itemIndex === items.length - 1 && $item.addClass(BUTTON_GROUP_LAST_ITEM_CLASS);
        $item.addClass(SHAPE_STANDARD_CLASS)
    },
    _renderItemContent(args) {
        args.container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(args.container).parent();
        return this.callBase(args)
    },
    _renderItemContentByNode: function(args, $node) {
        args.container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(args.container.children().first());
        return this.callBase(args, $node)
    },
    _focusTarget() {
        return this.$element().parent()
    },
    _keyboardEventBindingTarget() {
        return this._focusTarget()
    },
    _refreshContent() {
        this._prepareContent();
        this._renderContent()
    },
    _itemClass: () => BUTTON_GROUP_ITEM_CLASS,
    _itemSelectHandler: function(e) {
        if ("single" === this.option("selectionMode") && this.isItemSelected(e.currentTarget)) {
            return
        }
        this.callBase(e)
    }
});
var ButtonGroup = _widget_ui_widget__WEBPACK_IMPORTED_MODULE_1__.default.inherit({
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this.callBase(), {
            hoverStateEnabled: true,
            focusStateEnabled: true,
            selectionMode: "single",
            selectedItems: [],
            selectedItemKeys: [],
            stylingMode: "contained",
            keyExpr: "text",
            items: [],
            buttonTemplate: "content",
            onSelectionChanged: null,
            onItemClick: null
        })
    },
    _init() {
        this.callBase();
        this._createItemClickAction()
    },
    _createItemClickAction() {
        this._itemClickAction = this._createActionByOption("onItemClick")
    },
    _initMarkup() {
        this.setAria("role", "group");
        this.$element().addClass(BUTTON_GROUP_CLASS);
        this._renderButtons();
        this._syncSelectionOptions();
        this.callBase()
    },
    _fireSelectionChangeEvent: function(addedItems, removedItems) {
        this._createActionByOption("onSelectionChanged", {
            excludeValidators: ["disabled", "readOnly"]
        })({
            addedItems: addedItems,
            removedItems: removedItems
        })
    },
    _renderButtons() {
        var $buttons = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(BUTTON_GROUP_WRAPPER_CLASS).appendTo(this.$element());
        var selectedItems = this.option("selectedItems");
        var options = {
            selectionMode: this.option("selectionMode"),
            items: this.option("items"),
            keyExpr: this.option("keyExpr"),
            buttonTemplate: this.option("buttonTemplate"),
            scrollingEnabled: false,
            selectedItemKeys: this.option("selectedItemKeys"),
            focusStateEnabled: this.option("focusStateEnabled"),
            hoverStateEnabled: this.option("hoverStateEnabled"),
            activeStateEnabled: this.option("activeStateEnabled"),
            stylingMode: this.option("stylingMode"),
            accessKey: this.option("accessKey"),
            tabIndex: this.option("tabIndex"),
            noDataText: "",
            selectionRequired: false,
            onItemRendered: e => {
                var width = this.option("width");
                (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(width) && (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(e.itemElement).addClass(BUTTON_GROUP_ITEM_HAS_WIDTH)
            },
            onSelectionChanged: e => {
                this._syncSelectionOptions();
                this._fireSelectionChangeEvent(e.addedItems, e.removedItems)
            },
            onItemClick: e => {
                this._itemClickAction(e)
            }
        };
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(selectedItems) && selectedItems.length) {
            options.selectedItems = selectedItems
        }
        this._buttonsCollection = this._createComponent($buttons, ButtonCollection, options)
    },
    _syncSelectionOptions() {
        this._setOptionWithoutOptionChange("selectedItems", this._buttonsCollection.option("selectedItems"));
        this._setOptionWithoutOptionChange("selectedItemKeys", this._buttonsCollection.option("selectedItemKeys"))
    },
    _optionChanged(args) {
        switch (args.name) {
            case "stylingMode":
            case "selectionMode":
            case "keyExpr":
            case "buttonTemplate":
            case "items":
            case "activeStateEnabled":
            case "focusStateEnabled":
            case "hoverStateEnabled":
            case "tabIndex":
                this._invalidate();
                break;
            case "selectedItemKeys":
            case "selectedItems":
                this._buttonsCollection.option(args.name, args.value);
                break;
            case "onItemClick":
                this._createItemClickAction();
                break;
            case "onSelectionChanged":
                break;
            case "width":
                this.callBase(args);
                this._buttonsCollection.itemElements().toggleClass(BUTTON_GROUP_ITEM_HAS_WIDTH, !!args.value);
                break;
            default:
                this.callBase(args)
        }
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_4__.default)("dxButtonGroup", ButtonGroup);
/* harmony default export */ __webpack_exports__["default"] = (ButtonGroup);


/***/ }),

/***/ 95752:
/*!**************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/dialog.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FakeDialogComponent": function() { return /* binding */ FakeDialogComponent; },
/* harmony export */   "custom": function() { return /* binding */ custom; },
/* harmony export */   "alert": function() { return /* binding */ alert; },
/* harmony export */   "confirm": function() { return /* binding */ confirm; }
/* harmony export */ });
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _core_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/component */ 55469);
/* harmony import */ var _core_action__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/action */ 83221);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/devices */ 41881);
/* harmony import */ var _core_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/config */ 99284);
/* harmony import */ var _core_utils_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/utils/dom */ 16520);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/utils/deferred */ 97233);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/utils/type */ 33275);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/utils/window */ 88684);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../events/core/events_engine */ 99064);
/* harmony import */ var _core_utils_view_port__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/utils/view_port */ 30228);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../localization/message */ 19336);
/* harmony import */ var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./widget/ui.errors */ 42491);
/* harmony import */ var _popup_ui_popup__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./popup/ui.popup */ 23772);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../core/utils/common */ 37552);
/**
 * DevExtreme (esm/ui/dialog.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


















var window = (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_11__.getWindow)();
var DEFAULT_BUTTON = {
    text: "OK",
    onClick: function() {
        return true
    }
};
var DX_DIALOG_CLASSNAME = "dx-dialog";
var DX_DIALOG_WRAPPER_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-wrapper");
var DX_DIALOG_ROOT_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-root");
var DX_DIALOG_CONTENT_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-content");
var DX_DIALOG_MESSAGE_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-message");
var DX_DIALOG_BUTTONS_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-buttons");
var DX_DIALOG_BUTTON_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-button");
var DX_BUTTON_CLASSNAME = "dx-button";
var FakeDialogComponent = _core_component__WEBPACK_IMPORTED_MODULE_2__.Component.inherit({
    ctor: function(element, options) {
        this.callBase(options)
    },
    _defaultOptionsRules: function() {
        return this.callBase().concat([{
            device: {
                platform: "ios"
            },
            options: {
                width: 276
            }
        }])
    }
});
var custom = function(options) {
    var _options$title;
    var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_7__.Deferred;
    var defaultOptions = (new FakeDialogComponent).option();
    options = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(defaultOptions, options);
    var $element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(DX_DIALOG_CLASSNAME).appendTo((0,_core_utils_view_port__WEBPACK_IMPORTED_MODULE_13__.value)());
    var isMessageDefined = "message" in options;
    var isMessageHtmlDefined = "messageHtml" in options;
    if (isMessageDefined) {
        _widget_ui_errors__WEBPACK_IMPORTED_MODULE_15__.default.log("W1013")
    }
    var messageHtml = String(isMessageHtmlDefined ? options.messageHtml : options.message);
    var $message = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(DX_DIALOG_MESSAGE_CLASSNAME).html(messageHtml);
    var popupToolbarItems = [];
    (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__.each)(options.buttons || [DEFAULT_BUTTON], (function() {
        var action = new _core_action__WEBPACK_IMPORTED_MODULE_3__.default(this.onClick, {
            context: popupInstance
        });
        popupToolbarItems.push({
            toolbar: "bottom",
            location: _core_devices__WEBPACK_IMPORTED_MODULE_4__.default.current().android ? "after" : "center",
            widget: "dxButton",
            options: (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)({}, this, {
                onClick: function() {
                    var result = action.execute(...arguments);
                    hide(result)
                }
            })
        })
    }));
    var popupInstance = new _popup_ui_popup__WEBPACK_IMPORTED_MODULE_16__.default($element, (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)({
        title: null !== (_options$title = options.title) && void 0 !== _options$title ? _options$title : "",
        showTitle: (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_17__.ensureDefined)(options.showTitle, true),
        dragEnabled: (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_17__.ensureDefined)(options.dragEnabled, true),
        height: "auto",
        width: options.width,
        showCloseButton: options.showCloseButton || false,
        ignoreChildEvents: false,
        container: $element,
        visualContainer: window,
        dragAndResizeArea: window,
        onContentReady: function(args) {
            args.component.$content().addClass(DX_DIALOG_CONTENT_CLASSNAME).append($message)
        },
        onShowing: function(e) {
            e.component.bottomToolbar().addClass(DX_DIALOG_BUTTONS_CLASSNAME).find(".".concat(DX_BUTTON_CLASSNAME)).addClass(DX_DIALOG_BUTTON_CLASSNAME);
            (0,_core_utils_dom__WEBPACK_IMPORTED_MODULE_6__.resetActiveElement)()
        },
        onShown: function(e) {
            var $firstButton = e.component.bottomToolbar().find(".".concat(DX_BUTTON_CLASSNAME)).first();
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_12__.default.trigger($firstButton, "focus")
        },
        onHiding: function() {
            deferred.reject()
        },
        onHidden: function(_ref) {
            var {
                element: element
            } = _ref;
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(element).remove()
        },
        toolbarItems: popupToolbarItems,
        animation: {
            show: {
                type: "pop",
                duration: 400
            },
            hide: {
                type: "pop",
                duration: 400,
                to: {
                    opacity: 0,
                    scale: 0
                },
                from: {
                    opacity: 1,
                    scale: 1
                }
            }
        },
        rtlEnabled: (0,_core_config__WEBPACK_IMPORTED_MODULE_5__.default)().rtlEnabled,
        position: {
            boundaryOffset: {
                h: 10,
                v: 0
            }
        }
    }, options.popupOptions));
    popupInstance.$wrapper().addClass(DX_DIALOG_WRAPPER_CLASSNAME);
    if (options.position) {
        popupInstance.option("position", options.position)
    }
    popupInstance.$wrapper().addClass(DX_DIALOG_ROOT_CLASSNAME);

    function hide(value) {
        deferred.resolve(value);
        popupInstance.hide()
    }
    return {
        show: function() {
            if ("android" === _core_devices__WEBPACK_IMPORTED_MODULE_4__.default.real().platform) {
                var isPortrait = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)(window) > (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(window);
                var width = isPortrait ? "80%" : "60%";
                popupInstance.option({
                    width: width
                })
            }
            popupInstance.show();
            return deferred.promise()
        },
        hide: hide
    }
};
var alert = function(messageHtml) {
    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
    var showTitle = arguments.length > 2 ? arguments[2] : void 0;
    var options = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isPlainObject)(messageHtml) ? messageHtml : {
        title: title,
        messageHtml: messageHtml,
        showTitle: showTitle,
        dragEnabled: showTitle
    };
    return custom(options).show()
};
var confirm = function(messageHtml) {
    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
    var showTitle = arguments.length > 2 ? arguments[2] : void 0;
    var options = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isPlainObject)(messageHtml) ? messageHtml : {
        title: title,
        messageHtml: messageHtml,
        showTitle: showTitle,
        buttons: [{
            text: _localization_message__WEBPACK_IMPORTED_MODULE_14__.default.format("Yes"),
            onClick: function() {
                return true
            }
        }, {
            text: _localization_message__WEBPACK_IMPORTED_MODULE_14__.default.format("No"),
            onClick: function() {
                return false
            }
        }],
        dragEnabled: showTitle
    };
    return custom(options).show()
};


/***/ }),

/***/ 63685:
/*!*****************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/draggable.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_m_draggable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../__internal/m_draggable */ 39348);
/**
 * DevExtreme (esm/ui/draggable.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

/* harmony default export */ __webpack_exports__["default"] = (_internal_m_draggable__WEBPACK_IMPORTED_MODULE_0__.default);


/***/ }),

/***/ 98924:
/*!************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/drop_down_button.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./widget/ui.widget */ 69703);
/* harmony import */ var _core_templates_function_template__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/templates/function_template */ 51454);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _button_group__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./button_group */ 52566);
/* harmony import */ var _popup_ui_popup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./popup/ui.popup */ 23772);
/* harmony import */ var _list_light__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./list_light */ 22701);
/* harmony import */ var _core_utils_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/utils/data */ 25670);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/element */ 60213);
/* harmony import */ var _core_utils_icon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/icon */ 60181);
/* harmony import */ var _data_helper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../data_helper */ 53454);
/* harmony import */ var _data_data_source_data_source__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../data/data_source/data_source */ 56053);
/* harmony import */ var _data_array_store__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../data/array_store */ 55996);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/utils/deferred */ 97233);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../core/utils/type */ 33275);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../core/utils/common */ 37552);
/* harmony import */ var _core_guid__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../core/guid */ 22203);
/* harmony import */ var _drop_down_editor_utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./drop_down_editor/utils */ 59494);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../localization/message */ 19336);
/**
 * DevExtreme (esm/ui/drop_down_button.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




















var DROP_DOWN_BUTTON_CLASS = "dx-dropdownbutton";
var DROP_DOWN_BUTTON_CONTENT = "dx-dropdownbutton-content";
var DROP_DOWN_BUTTON_ACTION_CLASS = "dx-dropdownbutton-action";
var DROP_DOWN_BUTTON_TOGGLE_CLASS = "dx-dropdownbutton-toggle";
var DROP_DOWN_BUTTON_HAS_ARROW_CLASS = "dx-dropdownbutton-has-arrow";
var DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = "dx-dropdownbutton-popup-wrapper";
var DROP_DOWN_EDITOR_OVERLAY_CLASS = "dx-dropdowneditor-overlay";
var DX_BUTTON_TEXT_CLASS = "dx-button-text";
var DX_ICON_RIGHT_CLASS = "dx-icon-right";
var DropDownButton = _widget_ui_widget__WEBPACK_IMPORTED_MODULE_1__.default.inherit({
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)(this.callBase(), {
            itemTemplate: "item",
            keyExpr: "this",
            displayExpr: void 0,
            selectedItem: null,
            selectedItemKey: null,
            stylingMode: "outlined",
            deferRendering: true,
            noDataText: _localization_message__WEBPACK_IMPORTED_MODULE_19__.default.format("dxCollectionWidget-noDataText"),
            useSelectMode: false,
            splitButton: false,
            showArrowIcon: true,
            text: "",
            icon: void 0,
            onButtonClick: null,
            onSelectionChanged: null,
            onItemClick: null,
            opened: false,
            items: null,
            dataSource: null,
            focusStateEnabled: true,
            hoverStateEnabled: true,
            dropDownOptions: {},
            dropDownContentTemplate: "content",
            wrapItemText: false,
            useItemTextAsTitle: true,
            grouped: false,
            groupTemplate: "group",
            buttonGroupOptions: {}
        })
    },
    _setOptionsByReference() {
        this.callBase();
        (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)(this._optionsByReference, {
            selectedItem: true
        })
    },
    _init() {
        this.callBase();
        this._createItemClickAction();
        this._createActionClickAction();
        this._createSelectionChangedAction();
        this._initDataSource();
        this._compileKeyGetter();
        this._compileDisplayGetter();
        this._itemsToDataSource(this.option("items"));
        this._options.cache("buttonGroupOptions", this.option("buttonGroupOptions"));
        this._options.cache("dropDownOptions", this.option("dropDownOptions"))
    },
    _initTemplates() {
        this._templateManager.addDefaultTemplates({
            content: new _core_templates_function_template__WEBPACK_IMPORTED_MODULE_2__.FunctionTemplate(options => {
                var $popupContent = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(options.container);
                var $listContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").appendTo($popupContent);
                this._list = this._createComponent($listContainer, _list_light__WEBPACK_IMPORTED_MODULE_6__.default, this._listOptions());
                this._list.registerKeyHandler("escape", this._escHandler.bind(this));
                this._list.registerKeyHandler("tab", this._escHandler.bind(this));
                this._list.registerKeyHandler("leftArrow", this._escHandler.bind(this));
                this._list.registerKeyHandler("rightArrow", this._escHandler.bind(this))
            })
        });
        this.callBase()
    },
    _itemsToDataSource: function(value) {
        if (!this._dataSource) {
            this._dataSource = new _data_data_source_data_source__WEBPACK_IMPORTED_MODULE_11__.DataSource({
                store: new _data_array_store__WEBPACK_IMPORTED_MODULE_12__.default({
                    key: this._getKey(),
                    data: value
                }),
                pageSize: 0
            })
        }
    },
    _getKey: function() {
        var _this$_dataSource;
        var keyExpr = this.option("keyExpr");
        var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();
        return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(storeKey) && (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(keyExpr) || "this" === keyExpr) ? storeKey : keyExpr
    },
    _compileKeyGetter() {
        this._keyGetter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_7__.compileGetter)(this._getKey())
    },
    _compileDisplayGetter() {
        this._displayGetter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_7__.compileGetter)(this.option("displayExpr"))
    },
    _initMarkup() {
        this.callBase();
        this.$element().addClass(DROP_DOWN_BUTTON_CLASS);
        this._renderButtonGroup();
        this._updateArrowClass();
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(this.option("selectedItemKey"))) {
            this._loadSelectedItem().done(this._updateActionButton.bind(this))
        }
    },
    _renderFocusTarget: _core_utils_common__WEBPACK_IMPORTED_MODULE_16__.noop,
    _render() {
        if (!this.option("deferRendering") || this.option("opened")) {
            this._renderPopup()
        }
        this.callBase()
    },
    _renderContentImpl() {
        if (this._popup) {
            this._renderPopupContent()
        }
        return this.callBase()
    },
    _loadSelectedItem() {
        var _this$_loadSingleDefe;
        null === (_this$_loadSingleDefe = this._loadSingleDeferred) || void 0 === _this$_loadSingleDefe ? void 0 : _this$_loadSingleDefe.reject();
        var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.Deferred;
        if (this._list && void 0 !== this._lastSelectedItemData) {
            var cachedResult = this.option("useSelectMode") ? this._list.option("selectedItem") : this._lastSelectedItemData;
            return d.resolve(cachedResult)
        }
        this._lastSelectedItemData = void 0;
        var selectedItemKey = this.option("selectedItemKey");
        this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(() => {
            d.resolve(null)
        });
        this._loadSingleDeferred = d;
        return d.promise()
    },
    _createActionClickAction() {
        this._actionClickAction = this._createActionByOption("onButtonClick")
    },
    _createSelectionChangedAction() {
        this._selectionChangedAction = this._createActionByOption("onSelectionChanged")
    },
    _createItemClickAction() {
        this._itemClickAction = this._createActionByOption("onItemClick")
    },
    _fireSelectionChangedAction(_ref) {
        var {
            previousValue: previousValue,
            value: value
        } = _ref;
        this._selectionChangedAction({
            item: value,
            previousItem: previousValue
        })
    },
    _fireItemClickAction(_ref2) {
        var {
            event: event,
            itemElement: itemElement,
            itemData: itemData
        } = _ref2;
        return this._itemClickAction({
            event: event,
            itemElement: itemElement,
            itemData: this._actionItem || itemData
        })
    },
    _actionButtonConfig() {
        return {
            text: this.option("text"),
            icon: this.option("icon"),
            elementAttr: {
                class: DROP_DOWN_BUTTON_ACTION_CLASS
            }
        }
    },
    _getButtonGroupItems() {
        var items = [];
        items.push(this._actionButtonConfig());
        if (this.option("splitButton")) {
            items.push({
                icon: "spindown",
                elementAttr: {
                    class: DROP_DOWN_BUTTON_TOGGLE_CLASS
                }
            })
        }
        return items
    },
    _buttonGroupItemClick(_ref3) {
        var {
            event: event,
            itemData: itemData
        } = _ref3;
        var isActionButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_ACTION_CLASS;
        var isToggleButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_TOGGLE_CLASS;
        if (isToggleButton) {
            this.toggle()
        } else if (isActionButton) {
            this._actionClickAction({
                event: event,
                selectedItem: this.option("selectedItem")
            });
            if (!this.option("splitButton")) {
                this.toggle()
            }
        }
    },
    _buttonGroupOptions() {
        var {
            splitButton: splitButton,
            showArrowIcon: showArrowIcon,
            focusStateEnabled: focusStateEnabled,
            hoverStateEnabled: hoverStateEnabled,
            stylingMode: stylingMode,
            accessKey: accessKey,
            tabIndex: tabIndex
        } = this.option();
        var buttonTemplate = splitButton || !showArrowIcon ? "content" : (_ref4, buttonContent) => {
            var {
                text: text,
                icon: icon
            } = _ref4;
            var $firstIcon = (0,_core_utils_icon__WEBPACK_IMPORTED_MODULE_9__.getImageContainer)(icon);
            var $textContainer = text ? (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<span>").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;
            var $secondIcon = (0,_core_utils_icon__WEBPACK_IMPORTED_MODULE_9__.getImageContainer)("spindown").addClass(DX_ICON_RIGHT_CLASS);
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(buttonContent).append($firstIcon, $textContainer, $secondIcon)
        };
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)({
            items: this._getButtonGroupItems(),
            onItemClick: this._buttonGroupItemClick.bind(this),
            width: "100%",
            height: "100%",
            selectionMode: "none",
            onKeyboardHandled: e => this._keyboardHandler(e),
            buttonTemplate: buttonTemplate,
            focusStateEnabled: focusStateEnabled,
            hoverStateEnabled: hoverStateEnabled,
            stylingMode: stylingMode,
            accessKey: accessKey,
            tabIndex: tabIndex
        }, this._options.cache("buttonGroupOptions"))
    },
    _renderPopupContent() {
        var $content = this._popup.$content();
        var template = this._getTemplateByOption("dropDownContentTemplate");
        $content.empty();
        this._popupContentId = "dx-" + new _core_guid__WEBPACK_IMPORTED_MODULE_17__.default;
        this.setAria("id", this._popupContentId, $content);
        return template.render({
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_8__.getPublicElement)($content),
            model: this.option("items") || this._dataSource
        })
    },
    _popupOptions() {
        var horizontalAlignment = this.option("rtlEnabled") ? "right" : "left";
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)({
            dragEnabled: false,
            focusStateEnabled: false,
            deferRendering: this.option("deferRendering"),
            hideOnOutsideClick: e => {
                var $element = this.$element();
                var $buttonClicked = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(e.target).closest(".".concat(DROP_DOWN_BUTTON_CLASS));
                return !$buttonClicked.is($element)
            },
            showTitle: false,
            animation: {
                show: {
                    type: "fade",
                    duration: 0,
                    from: 0,
                    to: 1
                },
                hide: {
                    type: "fade",
                    duration: 400,
                    from: 1,
                    to: 0
                }
            },
            _ignoreFunctionValueDeprecation: true,
            width: () => (0,_drop_down_editor_utils__WEBPACK_IMPORTED_MODULE_18__.getElementWidth)(this.$element()),
            height: "auto",
            shading: false,
            position: {
                of: this.$element(),
                collision: "flipfit",
                my: horizontalAlignment + " top",
                at: horizontalAlignment + " bottom"
            },
            _wrapperClassExternal: DROP_DOWN_EDITOR_OVERLAY_CLASS
        }, this._options.cache("dropDownOptions"), {
            visible: this.option("opened")
        })
    },
    _listOptions() {
        var selectedItemKey = this.option("selectedItemKey");
        var useSelectMode = this.option("useSelectMode");
        return {
            selectionMode: useSelectMode ? "single" : "none",
            wrapItemText: this.option("wrapItemText"),
            focusStateEnabled: this.option("focusStateEnabled"),
            hoverStateEnabled: this.option("hoverStateEnabled"),
            useItemTextAsTitle: this.option("useItemTextAsTitle"),
            onContentReady: () => this._fireContentReadyAction(),
            selectedItemKeys: (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],
            grouped: this.option("grouped"),
            groupTemplate: this.option("groupTemplate"),
            keyExpr: this._getKey(),
            noDataText: this.option("noDataText"),
            displayExpr: this.option("displayExpr"),
            itemTemplate: this.option("itemTemplate"),
            items: this.option("items"),
            dataSource: this._dataSource,
            onItemClick: e => {
                if (!this.option("useSelectMode")) {
                    this._lastSelectedItemData = e.itemData
                }
                this.option("selectedItemKey", this._keyGetter(e.itemData));
                var actionResult = this._fireItemClickAction(e);
                if (false !== actionResult) {
                    this.toggle(false);
                    this._buttonGroup.focus()
                }
            }
        }
    },
    _upDownKeyHandler() {
        if (this._popup && this._popup.option("visible") && this._list) {
            this._list.focus()
        } else {
            this.open()
        }
        return true
    },
    _escHandler() {
        this.close();
        this._buttonGroup.focus();
        return true
    },
    _tabHandler() {
        this.close();
        return true
    },
    _renderPopup() {
        var $popup = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>");
        this.$element().append($popup);
        this._popup = this._createComponent($popup, _popup_ui_popup__WEBPACK_IMPORTED_MODULE_5__.default, this._popupOptions());
        this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);
        this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);
        this._popup.on("hiding", this._popupHidingHandler.bind(this));
        this._popup.on("showing", this._popupShowingHandler.bind(this));
        this._bindInnerWidgetOptions(this._popup, "dropDownOptions")
    },
    _popupHidingHandler() {
        this.option("opened", false);
        this._setAriaExpanded(false)
    },
    _popupOptionChanged: function(args) {
        var options = _widget_ui_widget__WEBPACK_IMPORTED_MODULE_1__.default.getOptionsFromContainer(args);
        this._setPopupOption(options);
        var optionsKeys = Object.keys(options);
        if (-1 !== optionsKeys.indexOf("width") || -1 !== optionsKeys.indexOf("height")) {
            this._dimensionChanged()
        }
    },
    _dimensionChanged: function() {
        var popupWidth = (0,_drop_down_editor_utils__WEBPACK_IMPORTED_MODULE_18__.getSizeValue)(this.option("dropDownOptions.width"));
        if (void 0 === popupWidth) {
            this._setPopupOption("width", () => (0,_drop_down_editor_utils__WEBPACK_IMPORTED_MODULE_18__.getElementWidth)(this.$element()))
        }
    },
    _setPopupOption: function(optionName, value) {
        this._setWidgetOption("_popup", arguments)
    },
    _popupShowingHandler() {
        this.option("opened", true);
        this._setAriaExpanded(true)
    },
    _setAriaExpanded(value) {
        this._ariaExpandedElements.forEach(ariaElement => {
            this.setAria({
                expanded: value,
                owns: value ? this._popupContentId : void 0
            }, (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(ariaElement))
        })
    },
    _renderButtonGroup() {
        var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>");
        if (!this._buttonGroup) {
            this.$element().append($buttonGroup)
        }
        this._buttonGroup = this._createComponent($buttonGroup, _button_group__WEBPACK_IMPORTED_MODULE_4__.default, this._buttonGroupOptions());
        var buttonElements = this._buttonGroup.$element().find(".dx-button").toArray();
        this._ariaExpandedElements = [...buttonElements, this.$element()];
        this._buttonGroup.registerKeyHandler("downArrow", this._upDownKeyHandler.bind(this));
        this._buttonGroup.registerKeyHandler("tab", this._tabHandler.bind(this));
        this._buttonGroup.registerKeyHandler("upArrow", this._upDownKeyHandler.bind(this));
        this._buttonGroup.registerKeyHandler("escape", this._escHandler.bind(this));
        this._bindInnerWidgetOptions(this._buttonGroup, "buttonGroupOptions");
        this._setAriaExpanded(this.option("opened"))
    },
    _updateArrowClass() {
        var hasArrow = this.option("splitButton") || this.option("showArrowIcon");
        this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow)
    },
    toggle(visible) {
        if (!this._popup) {
            this._renderPopup();
            this._renderContent()
        }
        return this._popup.toggle(visible)
    },
    open() {
        return this.toggle(true)
    },
    close() {
        return this.toggle(false)
    },
    _setListOption(name, value) {
        this._list && this._list.option(name, value)
    },
    _getDisplayValue(item) {
        var isPrimitiveItem = !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isPlainObject)(item);
        var displayValue = isPrimitiveItem ? item : this._displayGetter(item);
        return !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isPlainObject)(displayValue) ? String((0,_core_utils_common__WEBPACK_IMPORTED_MODULE_16__.ensureDefined)(displayValue, "")) : ""
    },
    _updateActionButton(selectedItem) {
        if (this.option("useSelectMode")) {
            this.option({
                text: this._getDisplayValue(selectedItem),
                icon: (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isPlainObject)(selectedItem) ? selectedItem.icon : void 0
            })
        }
        this._setOptionWithoutOptionChange("selectedItem", selectedItem);
        this._setOptionWithoutOptionChange("selectedItemKey", this._keyGetter(selectedItem))
    },
    _clean() {
        this._list && this._list.$element().remove();
        this._popup && this._popup.$element().remove()
    },
    _selectedItemKeyChanged(value) {
        this._setListOption("selectedItemKeys", this.option("useSelectMode") && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(value) ? [value] : []);
        var previousItem = this.option("selectedItem");
        this._loadSelectedItem().done(selectedItem => {
            this._updateActionButton(selectedItem);
            if (this._displayGetter(previousItem) !== this._displayGetter(selectedItem)) {
                this._fireSelectionChangedAction({
                    previousValue: previousItem,
                    value: selectedItem
                })
            }
        })
    },
    _actionButtonOptionChanged(_ref5) {
        var {
            name: name,
            value: value
        } = _ref5;
        var newConfig = {};
        newConfig[name] = value;
        this._buttonGroup.option("items[0]", (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)({}, this._actionButtonConfig(), newConfig));
        this._popup && this._popup.repaint()
    },
    _selectModeChanged(value) {
        if (value) {
            this._setListOption("selectionMode", "single");
            var selectedItemKey = this.option("selectedItemKey");
            this._setListOption("selectedItemKeys", (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(selectedItemKey) ? [selectedItemKey] : []);
            this._selectedItemKeyChanged(this.option("selectedItemKey"))
        } else {
            this._setListOption("selectionMode", "none");
            this.option({
                selectedItemKey: void 0,
                selectedItem: void 0
            });
            this._actionButtonOptionChanged({
                text: this.option("text")
            })
        }
    },
    _updateItemCollection(optionName) {
        var selectedItemKey = this.option("selectedItemKey");
        this._setListOption("selectedItem", null);
        this._setWidgetOption("_list", [optionName]);
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(selectedItemKey)) {
            this._loadSelectedItem().done(selectedItem => {
                this._setListOption("selectedItemKeys", [selectedItemKey]);
                this._setListOption("selectedItem", selectedItem)
            }).fail(error => {
                this._setListOption("selectedItemKeys", [])
            }).always(this._updateActionButton.bind(this))
        }
    },
    _updateDataSource: function() {
        var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();
        this._dataSource = void 0;
        this._itemsToDataSource(items);
        this._updateKeyExpr()
    },
    _updateKeyExpr: function() {
        this._compileKeyGetter();
        this._setListOption("keyExpr", this._getKey())
    },
    focus: function() {
        this._buttonGroup.focus()
    },
    _optionChanged(args) {
        var _this$_popup;
        var {
            name: name,
            value: value
        } = args;
        switch (name) {
            case "useSelectMode":
                this._selectModeChanged(value);
                break;
            case "splitButton":
                this._updateArrowClass();
                this._renderButtonGroup();
                break;
            case "displayExpr":
                this._compileDisplayGetter();
                this._setListOption(name, value);
                this._updateActionButton(this.option("selectedItem"));
                break;
            case "keyExpr":
                this._updateDataSource();
                break;
            case "buttonGroupOptions":
                this._innerWidgetOptionChanged(this._buttonGroup, args);
                break;
            case "dropDownOptions":
                if ("dropDownOptions.visible" === args.fullName) {
                    break
                }
                if (void 0 !== args.value.visible) {
                    delete args.value.visible
                }
                this._popupOptionChanged(args);
                this._innerWidgetOptionChanged(this._popup, args);
                break;
            case "opened":
                this.toggle(value);
                break;
            case "focusStateEnabled":
            case "hoverStateEnabled":
                this._setListOption(name, value);
                this._buttonGroup.option(name, value);
                this.callBase(args);
                break;
            case "items":
                this._updateDataSource(this.option("items"));
                this._updateItemCollection(name);
                break;
            case "dataSource":
                if (Array.isArray(value)) {
                    this._updateDataSource(this.option("dataSource"))
                } else {
                    this._initDataSource();
                    this._updateKeyExpr()
                }
                this._updateItemCollection(name);
                break;
            case "icon":
            case "text":
                this._actionButtonOptionChanged(args);
                break;
            case "showArrowIcon":
                this._updateArrowClass();
                this._renderButtonGroup();
                this._popup && this._popup.repaint();
                break;
            case "width":
            case "height":
                this.callBase(args);
                null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();
                break;
            case "stylingMode":
                this._buttonGroup.option(name, value);
                break;
            case "itemTemplate":
            case "grouped":
            case "noDataText":
            case "groupTemplate":
            case "wrapItemText":
            case "useItemTextAsTitle":
                this._setListOption(name, value);
                break;
            case "dropDownContentTemplate":
                this._renderContent();
                break;
            case "selectedItemKey":
                this._selectedItemKeyChanged(value);
                break;
            case "selectedItem":
                break;
            case "onItemClick":
                this._createItemClickAction();
                break;
            case "onButtonClick":
                this._createActionClickAction();
                break;
            case "onSelectionChanged":
                this._createSelectionChangedAction();
                break;
            case "deferRendering":
                this.toggle(this.option("opened"));
                break;
            case "tabIndex":
                this._buttonGroup.option(name, value);
                break;
            default:
                this.callBase(args)
        }
    }
}).include(_data_helper__WEBPACK_IMPORTED_MODULE_10__.default);
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_3__.default)("dxDropDownButton", DropDownButton);
/* harmony default export */ __webpack_exports__["default"] = (DropDownButton);


/***/ }),

/***/ 19128:
/*!************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _form_ui_form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form/ui.form */ 11534);
/**
 * DevExtreme (esm/ui/form.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

/* harmony default export */ __webpack_exports__["default"] = (_form_ui_form__WEBPACK_IMPORTED_MODULE_0__.default);


/***/ }),

/***/ 12801:
/*!***********************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/components/button_item.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "renderButtonItem": function() { return /* binding */ renderButtonItem; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/**
 * DevExtreme (esm/ui/form/components/button_item.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var FIELD_BUTTON_ITEM_CLASS = "dx-field-button-item";
function renderButtonItem(_ref) {
    var {
        item: item,
        $parent: $parent,
        rootElementCssClassList: rootElementCssClassList,
        validationGroup: validationGroup,
        createComponentCallback: createComponentCallback
    } = _ref;
    var $rootElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").appendTo($parent).addClass(rootElementCssClassList.join(" ")).addClass(FIELD_BUTTON_ITEM_CLASS).css("textAlign", convertAlignmentToTextAlign(item.horizontalAlignment));
    $parent.css("justifyContent", convertAlignmentToJustifyContent(item.verticalAlignment));
    var $button = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").appendTo($rootElement);
    return {
        $rootElement: $rootElement,
        buttonInstance: createComponentCallback($button, "dxButton", (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({
            validationGroup: validationGroup
        }, item.buttonOptions))
    }
}

function convertAlignmentToTextAlign(horizontalAlignment) {
    return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(horizontalAlignment) ? horizontalAlignment : "right"
}

function convertAlignmentToJustifyContent(verticalAlignment) {
    switch (verticalAlignment) {
        case "center":
            return "center";
        case "bottom":
            return "flex-end";
        default:
            return "flex-start"
    }
}


/***/ }),

/***/ 28269:
/*!**********************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/components/empty_item.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FIELD_EMPTY_ITEM_CLASS": function() { return /* binding */ FIELD_EMPTY_ITEM_CLASS; },
/* harmony export */   "renderEmptyItem": function() { return /* binding */ renderEmptyItem; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/**
 * DevExtreme (esm/ui/form/components/empty_item.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var FIELD_EMPTY_ITEM_CLASS = "dx-field-empty-item";
function renderEmptyItem(_ref) {
    var {
        $parent: $parent,
        rootElementCssClassList: rootElementCssClassList
    } = _ref;
    return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(FIELD_EMPTY_ITEM_CLASS).html("&nbsp;").addClass(rootElementCssClassList.join(" ")).appendTo($parent)
}


/***/ }),

/***/ 22608:
/*!**********************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/components/field_item.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FLEX_LAYOUT_CLASS": function() { return /* binding */ FLEX_LAYOUT_CLASS; },
/* harmony export */   "FIELD_ITEM_OPTIONAL_CLASS": function() { return /* binding */ FIELD_ITEM_OPTIONAL_CLASS; },
/* harmony export */   "FIELD_ITEM_REQUIRED_CLASS": function() { return /* binding */ FIELD_ITEM_REQUIRED_CLASS; },
/* harmony export */   "FIELD_ITEM_CONTENT_WRAPPER_CLASS": function() { return /* binding */ FIELD_ITEM_CONTENT_WRAPPER_CLASS; },
/* harmony export */   "FIELD_ITEM_CONTENT_LOCATION_CLASS": function() { return /* binding */ FIELD_ITEM_CONTENT_LOCATION_CLASS; },
/* harmony export */   "FIELD_ITEM_LABEL_ALIGN_CLASS": function() { return /* binding */ FIELD_ITEM_LABEL_ALIGN_CLASS; },
/* harmony export */   "FIELD_ITEM_HELP_TEXT_CLASS": function() { return /* binding */ FIELD_ITEM_HELP_TEXT_CLASS; },
/* harmony export */   "LABEL_VERTICAL_ALIGNMENT_CLASS": function() { return /* binding */ LABEL_VERTICAL_ALIGNMENT_CLASS; },
/* harmony export */   "LABEL_HORIZONTAL_ALIGNMENT_CLASS": function() { return /* binding */ LABEL_HORIZONTAL_ALIGNMENT_CLASS; },
/* harmony export */   "TOGGLE_CONTROLS_PADDING_CLASS": function() { return /* binding */ TOGGLE_CONTROLS_PADDING_CLASS; },
/* harmony export */   "renderFieldItem": function() { return /* binding */ renderFieldItem; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../events/core/events_engine */ 99064);
/* harmony import */ var _events_click__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../events/click */ 38894);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/element */ 60213);
/* harmony import */ var _core_utils_inflector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/utils/inflector */ 75102);
/* harmony import */ var _core_utils_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/utils/string */ 13089);
/* harmony import */ var _themes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../themes */ 78279);
/* harmony import */ var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../widget/ui.errors */ 42491);
/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../validator */ 90015);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../constants */ 73833);
/* harmony import */ var _label__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./label */ 61028);
/**
 * DevExtreme (esm/ui/form/components/field_item.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */










var FLEX_LAYOUT_CLASS = "dx-flex-layout";
var FIELD_ITEM_OPTIONAL_CLASS = "dx-field-item-optional";
var FIELD_ITEM_REQUIRED_CLASS = "dx-field-item-required";
var FIELD_ITEM_CONTENT_WRAPPER_CLASS = "dx-field-item-content-wrapper";
var FIELD_ITEM_CONTENT_LOCATION_CLASS = "dx-field-item-content-location-";
var FIELD_ITEM_LABEL_ALIGN_CLASS = "dx-field-item-label-align";
var FIELD_ITEM_HELP_TEXT_CLASS = "dx-field-item-help-text";
var LABEL_VERTICAL_ALIGNMENT_CLASS = "dx-label-v-align";
var LABEL_HORIZONTAL_ALIGNMENT_CLASS = "dx-label-h-align";
var TOGGLE_CONTROLS_PADDING_CLASS = "dx-toggle-controls-paddings";

var TEMPLATE_WRAPPER_CLASS = "dx-template-wrapper";
var VALIDATION_TARGET_CLASS = "dx-validation-target";
var INVALID_CLASS = "dx-invalid";
function renderFieldItem(_ref) {
    var {
        $parent: $parent,
        rootElementCssClassList: rootElementCssClassList,
        formOrLayoutManager: formOrLayoutManager,
        createComponentCallback: createComponentCallback,
        labelOptions: labelOptions,
        labelNeedBaselineAlign: labelNeedBaselineAlign,
        labelLocation: labelLocation,
        needRenderLabel: needRenderLabel,
        formLabelLocation: formLabelLocation,
        item: item,
        editorOptions: editorOptions,
        isSimpleItem: isSimpleItem,
        isRequired: isRequired,
        template: template,
        helpID: helpID,
        labelID: labelID,
        name: name,
        helpText: helpText,
        requiredMessageTemplate: requiredMessageTemplate,
        validationGroup: validationGroup
    } = _ref;
    var $rootElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(rootElementCssClassList.join(" ")).appendTo($parent);
    $rootElement.addClass(isRequired ? FIELD_ITEM_REQUIRED_CLASS : FIELD_ITEM_OPTIONAL_CLASS);
    if (isSimpleItem) {
        $rootElement.addClass(FLEX_LAYOUT_CLASS)
    }
    if (isSimpleItem && labelNeedBaselineAlign) {
        $rootElement.addClass(FIELD_ITEM_LABEL_ALIGN_CLASS)
    }
    var $fieldEditorContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>");
    $fieldEditorContainer.data("dx-form-item", item);
    $fieldEditorContainer.addClass(_constants__WEBPACK_IMPORTED_MODULE_9__.FIELD_ITEM_CONTENT_CLASS).addClass(FIELD_ITEM_CONTENT_LOCATION_CLASS + {
        right: "left",
        left: "right",
        top: "bottom"
    } [formLabelLocation]);
    var $label = null;
    if (needRenderLabel) {
        if (labelOptions.labelTemplate) {
            labelOptions.labelTemplateData = getTemplateData(item, editorOptions, formOrLayoutManager)
        }
        $label = (0,_label__WEBPACK_IMPORTED_MODULE_10__.renderLabel)(labelOptions)
    }
    if ($label) {
        var {
            editorType: editorType
        } = item;
        $rootElement.append($label);
        if ("top" === labelLocation || "left" === labelLocation) {
            $rootElement.append($fieldEditorContainer)
        }
        if ("right" === labelLocation) {
            $rootElement.prepend($fieldEditorContainer)
        }
        if ("top" === labelLocation) {
            $rootElement.addClass(LABEL_VERTICAL_ALIGNMENT_CLASS)
        } else {
            $rootElement.addClass(LABEL_HORIZONTAL_ALIGNMENT_CLASS)
        }
        if ("dxCheckBox" === editorType || "dxSwitch" === editorType) {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__.default.on($label, _events_click__WEBPACK_IMPORTED_MODULE_2__.name, (function() {
                _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__.default.trigger($fieldEditorContainer.children(), _events_click__WEBPACK_IMPORTED_MODULE_2__.name)
            }))
        }
        var isToggleControls = ["dxCheckBox", "dxSwitch", "dxRadioGroup"].includes(editorType);
        var labelAlignment = labelOptions.alignment;
        var isLabelAlignmentLeft = "left" === labelAlignment || !labelAlignment;
        var hasNotTemplate = !template;
        var isLabelOnTop = "top" === labelLocation;
        if (hasNotTemplate && isToggleControls && isLabelOnTop && isLabelAlignmentLeft) {
            $fieldEditorContainer.addClass(TOGGLE_CONTROLS_PADDING_CLASS)
        }
    } else {
        $rootElement.append($fieldEditorContainer)
    }
    var widgetInstance;
    if (template) {
        template.render({
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)($fieldEditorContainer),
            model: getTemplateData(item, editorOptions, formOrLayoutManager),
            onRendered() {
                var $validationTarget = getValidationTarget($fieldEditorContainer);
                var validationTargetInstance = tryGetValidationTargetInstance($validationTarget);
                subscribeWrapperInvalidClassToggle(validationTargetInstance)
            }
        })
    } else {
        var $div = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").appendTo($fieldEditorContainer);
        try {
            widgetInstance = createComponentCallback($div, item.editorType, editorOptions);
            widgetInstance.setAria("describedby", helpID);
            if (labelID) {
                widgetInstance.setAria("labelledby", labelID)
            }
            widgetInstance.setAria("required", isRequired)
        } catch (e) {
            _widget_ui_errors__WEBPACK_IMPORTED_MODULE_7__.default.log("E1035", e.message)
        }
    }
    var $validationTarget = getValidationTarget($fieldEditorContainer);
    var validationTargetInstance = $validationTarget && $validationTarget.data(VALIDATION_TARGET_CLASS);
    if (validationTargetInstance) {
        var isItemHaveCustomLabel = item.label && item.label.text;
        var itemName = isItemHaveCustomLabel ? null : name;
        var fieldName = isItemHaveCustomLabel ? item.label.text : itemName && (0,_core_utils_inflector__WEBPACK_IMPORTED_MODULE_4__.captionize)(itemName);
        var validationRules;
        if (isSimpleItem) {
            if (item.validationRules) {
                validationRules = item.validationRules
            } else {
                var requiredMessage = (0,_core_utils_string__WEBPACK_IMPORTED_MODULE_5__.format)(requiredMessageTemplate, fieldName || "");
                validationRules = item.isRequired ? [{
                    type: "required",
                    message: requiredMessage
                }] : null
            }
        }
        if (Array.isArray(validationRules) && validationRules.length) {
            createComponentCallback($validationTarget, _validator__WEBPACK_IMPORTED_MODULE_8__.default, {
                validationRules: validationRules,
                validationGroup: validationGroup,
                dataGetter: function() {
                    return {
                        formItem: item
                    }
                }
            })
        }
        subscribeWrapperInvalidClassToggle(validationTargetInstance)
    }
    if (helpText && isSimpleItem) {
        var $editorParent = $fieldEditorContainer.parent();
        $editorParent.append((0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(FIELD_ITEM_CONTENT_WRAPPER_CLASS).append($fieldEditorContainer).append((0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(FIELD_ITEM_HELP_TEXT_CLASS).attr("id", helpID).text(helpText)))
    }
    return {
        $fieldEditorContainer: $fieldEditorContainer,
        $rootElement: $rootElement,
        widgetInstance: widgetInstance
    }
}

function getValidationTarget($fieldEditorContainer) {
    var $editor = $fieldEditorContainer.children().first();
    return $editor.hasClass(TEMPLATE_WRAPPER_CLASS) ? $editor.children().first() : $editor
}

function tryGetValidationTargetInstance($validationTarget) {
    var _$validationTarget$pa, _$validationTarget$pa2;
    return (null === $validationTarget || void 0 === $validationTarget ? void 0 : $validationTarget.data(VALIDATION_TARGET_CLASS)) || (null === $validationTarget || void 0 === $validationTarget ? void 0 : null === (_$validationTarget$pa = $validationTarget.parent) || void 0 === _$validationTarget$pa ? void 0 : null === (_$validationTarget$pa2 = _$validationTarget$pa.call($validationTarget)) || void 0 === _$validationTarget$pa2 ? void 0 : _$validationTarget$pa2.data(VALIDATION_TARGET_CLASS))
}

function subscribeWrapperInvalidClassToggle(validationTargetInstance) {
    if (validationTargetInstance && (0,_themes__WEBPACK_IMPORTED_MODULE_6__.isMaterial)()) {
        var wrapperClass = ".".concat(FIELD_ITEM_CONTENT_WRAPPER_CLASS);
        var toggleInvalidClass = _ref2 => {
            var {
                element: element,
                component: component
            } = _ref2;
            var {
                isValid: isValid,
                validationMessageMode: validationMessageMode
            } = component.option();
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(element).parents(wrapperClass).toggleClass(INVALID_CLASS, false === isValid && (component._isFocused() || "always" === validationMessageMode))
        };
        validationTargetInstance.on("optionChanged", e => {
            if ("isValid" !== e.name) {
                return
            }
            toggleInvalidClass(e)
        });
        validationTargetInstance.on("focusIn", toggleInvalidClass).on("focusOut", toggleInvalidClass).on("enterKey", toggleInvalidClass)
    }
}

function getTemplateData(item, editorOptions, formOrLayoutManager) {
    return {
        dataField: item.dataField,
        editorType: item.editorType,
        editorOptions: editorOptions,
        component: formOrLayoutManager,
        name: item.name
    }
}


/***/ }),

/***/ 61028:
/*!*****************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/components/label.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GET_LABEL_WIDTH_BY_TEXT_CLASS": function() { return /* binding */ GET_LABEL_WIDTH_BY_TEXT_CLASS; },
/* harmony export */   "FIELD_ITEM_REQUIRED_MARK_CLASS": function() { return /* binding */ FIELD_ITEM_REQUIRED_MARK_CLASS; },
/* harmony export */   "FIELD_ITEM_LABEL_LOCATION_CLASS": function() { return /* binding */ FIELD_ITEM_LABEL_LOCATION_CLASS; },
/* harmony export */   "FIELD_ITEM_OPTIONAL_MARK_CLASS": function() { return /* binding */ FIELD_ITEM_OPTIONAL_MARK_CLASS; },
/* harmony export */   "FIELD_ITEM_LABEL_TEXT_CLASS": function() { return /* binding */ FIELD_ITEM_LABEL_TEXT_CLASS; },
/* harmony export */   "renderLabel": function() { return /* binding */ renderLabel; },
/* harmony export */   "setLabelWidthByMaxLabelWidth": function() { return /* binding */ setLabelWidthByMaxLabelWidth; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/element */ 60213);
/* harmony import */ var _ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui.form.layout_manager.utils */ 8838);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants */ 73833);
/**
 * DevExtreme (esm/ui/form/components/label.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */





var GET_LABEL_WIDTH_BY_TEXT_CLASS = "dx-layout-manager-hidden-label";
var FIELD_ITEM_REQUIRED_MARK_CLASS = "dx-field-item-required-mark";
var FIELD_ITEM_LABEL_LOCATION_CLASS = "dx-field-item-label-location-";
var FIELD_ITEM_OPTIONAL_MARK_CLASS = "dx-field-item-optional-mark";
var FIELD_ITEM_LABEL_TEXT_CLASS = "dx-field-item-label-text";
function renderLabel(_ref) {
    var {
        text: text,
        id: id,
        location: location,
        alignment: alignment,
        labelID: labelID = null,
        markOptions: markOptions = {},
        labelTemplate: labelTemplate,
        labelTemplateData: labelTemplateData,
        onLabelTemplateRendered: onLabelTemplateRendered
    } = _ref;
    if ((!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(text) || text.length <= 0) && !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(labelTemplate)) {
        return null
    }
    var $label = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<label>").addClass(_constants__WEBPACK_IMPORTED_MODULE_4__.FIELD_ITEM_LABEL_CLASS + " " + FIELD_ITEM_LABEL_LOCATION_CLASS + location).attr("for", id).attr("id", labelID).css("textAlign", alignment);
    var $labelContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<span>").addClass(_constants__WEBPACK_IMPORTED_MODULE_4__.FIELD_ITEM_LABEL_CONTENT_CLASS);
    var $labelContent = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<span>").addClass(FIELD_ITEM_LABEL_TEXT_CLASS).text(text);
    if (labelTemplate) {
        $labelContent = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass("dx-field-item-custom-label-content");
        labelTemplateData.text = text;
        labelTemplate.render({
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_2__.getPublicElement)($labelContent),
            model: labelTemplateData,
            onRendered() {
                null === onLabelTemplateRendered || void 0 === onLabelTemplateRendered ? void 0 : onLabelTemplateRendered()
            }
        })
    }
    return $label.append($labelContainer.append($labelContent, _renderLabelMark(markOptions)))
}

function _renderLabelMark(markOptions) {
    var markText = (0,_ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_3__.getLabelMarkText)(markOptions);
    if ("" === markText) {
        return null
    }
    return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<span>").addClass(markOptions.showRequiredMark ? FIELD_ITEM_REQUIRED_MARK_CLASS : FIELD_ITEM_OPTIONAL_MARK_CLASS).text(markText)
}
function setLabelWidthByMaxLabelWidth($targetContainer, labelsSelector, labelMarkOptions) {
    var FIELD_ITEM_LABEL_CONTENT_CLASS_Selector = "".concat(labelsSelector, " > .").concat(_constants__WEBPACK_IMPORTED_MODULE_4__.FIELD_ITEM_LABEL_CLASS, ":not(.").concat(FIELD_ITEM_LABEL_LOCATION_CLASS, "top) > .").concat(_constants__WEBPACK_IMPORTED_MODULE_4__.FIELD_ITEM_LABEL_CONTENT_CLASS);
    var $FIELD_ITEM_LABEL_CONTENT_CLASS_Items = $targetContainer.find(FIELD_ITEM_LABEL_CONTENT_CLASS_Selector);
    var FIELD_ITEM_LABEL_CONTENT_CLASS_Length = $FIELD_ITEM_LABEL_CONTENT_CLASS_Items.length;
    var labelWidth;
    var i;
    var maxWidth = 0;
    for (i = 0; i < FIELD_ITEM_LABEL_CONTENT_CLASS_Length; i++) {
        labelWidth = getLabelWidthByHTML($FIELD_ITEM_LABEL_CONTENT_CLASS_Items[i]);
        if (labelWidth > maxWidth) {
            maxWidth = labelWidth
        }
    }
    for (i = 0; i < FIELD_ITEM_LABEL_CONTENT_CLASS_Length; i++) {
        $FIELD_ITEM_LABEL_CONTENT_CLASS_Items[i].style.width = maxWidth + "px"
    }
}

function getLabelWidthByHTML(labelContent) {
    var result = 0;
    var itemsCount = labelContent.children.length;
    for (var i = 0; i < itemsCount; i++) {
        var child = labelContent.children[i];
        result += child.offsetWidth
    }
    return result
}


/***/ }),

/***/ 73833:
/*!**********************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/constants.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WIDGET_CLASS": function() { return /* binding */ WIDGET_CLASS; },
/* harmony export */   "FORM_CLASS": function() { return /* binding */ FORM_CLASS; },
/* harmony export */   "FORM_GROUP_CLASS": function() { return /* binding */ FORM_GROUP_CLASS; },
/* harmony export */   "FORM_GROUP_CAPTION_CLASS": function() { return /* binding */ FORM_GROUP_CAPTION_CLASS; },
/* harmony export */   "FORM_FIELD_ITEM_COL_CLASS": function() { return /* binding */ FORM_FIELD_ITEM_COL_CLASS; },
/* harmony export */   "FIELD_ITEM_CLASS": function() { return /* binding */ FIELD_ITEM_CLASS; },
/* harmony export */   "LAYOUT_MANAGER_ONE_COLUMN": function() { return /* binding */ LAYOUT_MANAGER_ONE_COLUMN; },
/* harmony export */   "FIELD_ITEM_LABEL_CONTENT_CLASS": function() { return /* binding */ FIELD_ITEM_LABEL_CONTENT_CLASS; },
/* harmony export */   "FORM_LAYOUT_MANAGER_CLASS": function() { return /* binding */ FORM_LAYOUT_MANAGER_CLASS; },
/* harmony export */   "FIELD_ITEM_LABEL_CLASS": function() { return /* binding */ FIELD_ITEM_LABEL_CLASS; },
/* harmony export */   "FIELD_ITEM_CONTENT_CLASS": function() { return /* binding */ FIELD_ITEM_CONTENT_CLASS; },
/* harmony export */   "SINGLE_COLUMN_ITEM_CONTENT": function() { return /* binding */ SINGLE_COLUMN_ITEM_CONTENT; },
/* harmony export */   "ROOT_SIMPLE_ITEM_CLASS": function() { return /* binding */ ROOT_SIMPLE_ITEM_CLASS; },
/* harmony export */   "FORM_GROUP_CONTENT_CLASS": function() { return /* binding */ FORM_GROUP_CONTENT_CLASS; },
/* harmony export */   "FIELD_ITEM_CONTENT_HAS_GROUP_CLASS": function() { return /* binding */ FIELD_ITEM_CONTENT_HAS_GROUP_CLASS; },
/* harmony export */   "FIELD_ITEM_CONTENT_HAS_TABS_CLASS": function() { return /* binding */ FIELD_ITEM_CONTENT_HAS_TABS_CLASS; },
/* harmony export */   "FORM_GROUP_WITH_CAPTION_CLASS": function() { return /* binding */ FORM_GROUP_WITH_CAPTION_CLASS; },
/* harmony export */   "FIELD_ITEM_TAB_CLASS": function() { return /* binding */ FIELD_ITEM_TAB_CLASS; },
/* harmony export */   "GROUP_COL_COUNT_CLASS": function() { return /* binding */ GROUP_COL_COUNT_CLASS; },
/* harmony export */   "GROUP_COL_COUNT_ATTR": function() { return /* binding */ GROUP_COL_COUNT_ATTR; },
/* harmony export */   "FORM_VALIDATION_SUMMARY": function() { return /* binding */ FORM_VALIDATION_SUMMARY; },
/* harmony export */   "FORM_UNDERLINED_CLASS": function() { return /* binding */ FORM_UNDERLINED_CLASS; },
/* harmony export */   "SIMPLE_ITEM_TYPE": function() { return /* binding */ SIMPLE_ITEM_TYPE; }
/* harmony export */ });
/**
 * DevExtreme (esm/ui/form/constants.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var WIDGET_CLASS = "dx-widget";
var FORM_CLASS = "dx-form";
var FORM_GROUP_CLASS = "dx-form-group";
var FORM_GROUP_CAPTION_CLASS = "dx-form-group-caption";
var FORM_FIELD_ITEM_COL_CLASS = "dx-col-";
var FIELD_ITEM_CLASS = "dx-field-item";
var LAYOUT_MANAGER_ONE_COLUMN = "dx-layout-manager-one-col";
var FIELD_ITEM_LABEL_CONTENT_CLASS = "dx-field-item-label-content";
var FORM_LAYOUT_MANAGER_CLASS = "dx-layout-manager";
var FIELD_ITEM_LABEL_CLASS = "dx-field-item-label";
var FIELD_ITEM_CONTENT_CLASS = "dx-field-item-content";
var SINGLE_COLUMN_ITEM_CONTENT = "dx-single-column-item-content";
var ROOT_SIMPLE_ITEM_CLASS = "dx-root-simple-item";
var FORM_GROUP_CONTENT_CLASS = "dx-form-group-content";
var FIELD_ITEM_CONTENT_HAS_GROUP_CLASS = "dx-field-item-has-group";
var FIELD_ITEM_CONTENT_HAS_TABS_CLASS = "dx-field-item-has-tabs";
var FORM_GROUP_WITH_CAPTION_CLASS = "dx-form-group-with-caption";
var FIELD_ITEM_TAB_CLASS = "dx-field-item-tab";
var GROUP_COL_COUNT_CLASS = "dx-group-colcount-";
var GROUP_COL_COUNT_ATTR = "group-col-count";
var FORM_VALIDATION_SUMMARY = "dx-form-validation-summary";
var FORM_UNDERLINED_CLASS = "dx-form-styling-mode-underlined";
var SIMPLE_ITEM_TYPE = "simple";


/***/ }),

/***/ 27425:
/*!***************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/ui.form.item_option_action.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ ItemOptionAction; }
/* harmony export */ });
/* harmony import */ var _core_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/class */ 72627);
/**
 * DevExtreme (esm/ui/form/ui.form.item_option_action.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

class ItemOptionAction {
    constructor(options) {
        this._options = options;
        this._itemsRunTimeInfo = this._options.itemsRunTimeInfo
    }
    findInstance() {
        return this._itemsRunTimeInfo.findWidgetInstanceByItem(this._options.item)
    }
    findItemContainer() {
        return this._itemsRunTimeInfo.findItemContainerByItem(this._options.item)
    }
    findPreparedItem() {
        return this._itemsRunTimeInfo.findPreparedItemByItem(this._options.item)
    }
    tryExecute() {
        _core_class__WEBPACK_IMPORTED_MODULE_0__.default.abstract()
    }
}


/***/ }),

/***/ 22540:
/*!*****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/ui.form.item_options_actions.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ui.form.item_option_action */ 27425);
/* harmony import */ var _core_element_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/element_data */ 25694);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _ui_form_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui.form.utils */ 2034);
/**
 * DevExtreme (esm/ui/form/ui.form.item_options_actions.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




class WidgetOptionItemOptionAction extends _ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__.default {
    tryExecute() {
        var {
            value: value
        } = this._options;
        var instance = this.findInstance();
        if (instance) {
            instance.option(value);
            return true
        }
        return false
    }
}
class TabOptionItemOptionAction extends _ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__.default {
    tryExecute() {
        var tabPanel = this.findInstance();
        if (tabPanel) {
            var {
                optionName: optionName,
                item: item,
                value: value
            } = this._options;
            var itemIndex = this._itemsRunTimeInfo.findItemIndexByItem(item);
            if (itemIndex >= 0) {
                tabPanel.option((0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_3__.getFullOptionName)("items[".concat(itemIndex, "]"), optionName), value);
                return true
            }
        }
        return false
    }
}
class SimpleItemTemplateChangedAction extends _ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__.default {
    tryExecute() {
        return false
    }
}
class GroupItemTemplateChangedAction extends _ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__.default {
    tryExecute() {
        var preparedItem = this.findPreparedItem();
        if (null != preparedItem && preparedItem._prepareGroupItemTemplate && preparedItem._renderGroupContentTemplate) {
            preparedItem._prepareGroupItemTemplate(this._options.item.template);
            preparedItem._renderGroupContentTemplate();
            return true
        }
        return false
    }
}
class TabsOptionItemOptionAction extends _ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__.default {
    tryExecute() {
        var tabPanel = this.findInstance();
        if (tabPanel) {
            var {
                value: value
            } = this._options;
            tabPanel.option("dataSource", value);
            return true
        }
        return false
    }
}
class ValidationRulesItemOptionAction extends _ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__.default {
    tryExecute() {
        var {
            item: item
        } = this._options;
        var instance = this.findInstance();
        var validator = instance && (0,_core_element_data__WEBPACK_IMPORTED_MODULE_1__.data)(instance.$element()[0], "dxValidator");
        if (validator && item) {
            var filterRequired = item => "required" === item.type;
            var oldContainsRequired = (validator.option("validationRules") || []).some(filterRequired);
            var newContainsRequired = (item.validationRules || []).some(filterRequired);
            if (!oldContainsRequired && !newContainsRequired || oldContainsRequired && newContainsRequired) {
                validator.option("validationRules", item.validationRules);
                return true
            }
        }
        return false
    }
}
class CssClassItemOptionAction extends _ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__.default {
    tryExecute() {
        var $itemContainer = this.findItemContainer();
        var {
            previousValue: previousValue,
            value: value
        } = this._options;
        if ($itemContainer) {
            $itemContainer.removeClass(previousValue).addClass(value);
            return true
        }
        return false
    }
}
var tryCreateItemOptionAction = (optionName, itemActionOptions) => {
    switch (optionName) {
        case "editorOptions":
        case "buttonOptions":
            return new WidgetOptionItemOptionAction(itemActionOptions);
        case "validationRules":
            return new ValidationRulesItemOptionAction(itemActionOptions);
        case "cssClass":
            return new CssClassItemOptionAction(itemActionOptions);
        case "badge":
        case "disabled":
        case "icon":
        case "tabTemplate":
        case "title":
            return new TabOptionItemOptionAction((0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(itemActionOptions, {
                optionName: optionName
            }));
        case "tabs":
            return new TabsOptionItemOptionAction(itemActionOptions);
        case "template":
            var _itemActionOptions$it, _itemActionOptions$it2, _itemActionOptions$it3;
            var itemType = null !== (_itemActionOptions$it = null === itemActionOptions || void 0 === itemActionOptions ? void 0 : null === (_itemActionOptions$it2 = itemActionOptions.item) || void 0 === _itemActionOptions$it2 ? void 0 : _itemActionOptions$it2.itemType) && void 0 !== _itemActionOptions$it ? _itemActionOptions$it : null === (_itemActionOptions$it3 = itemActionOptions.itemsRunTimeInfo.findPreparedItemByItem(null === itemActionOptions || void 0 === itemActionOptions ? void 0 : itemActionOptions.item)) || void 0 === _itemActionOptions$it3 ? void 0 : _itemActionOptions$it3.itemType;
            if ("simple" === itemType) {
                return new SimpleItemTemplateChangedAction(itemActionOptions)
            } else if ("group" === itemType) {
                return new GroupItemTemplateChangedAction(itemActionOptions)
            }
            return new TabOptionItemOptionAction((0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(itemActionOptions, {
                optionName: optionName
            }));
        default:
            return null
    }
};
/* harmony default export */ __webpack_exports__["default"] = (tryCreateItemOptionAction);


/***/ }),

/***/ 75646:
/*!***************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/ui.form.items_runtime_info.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ FormItemsRunTimeInfo; }
/* harmony export */ });
/* harmony import */ var _core_guid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/guid */ 22203);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/**
 * DevExtreme (esm/ui/form/ui.form.items_runtime_info.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




class FormItemsRunTimeInfo {
    constructor() {
        this._map = {}
    }
    _findWidgetInstance(condition) {
        var result;
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(this._map, (function(guid, _ref) {
            var {
                widgetInstance: widgetInstance,
                item: item
            } = _ref;
            if (condition(item)) {
                result = widgetInstance;
                return false
            }
        }));
        return result
    }
    _findFieldByCondition(callback, valueExpr) {
        var result;
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(this._map, (function(key, value) {
            if (callback(value)) {
                result = "guid" === valueExpr ? key : value[valueExpr];
                return false
            }
        }));
        return result
    }
    clear() {
        this._map = {}
    }
    removeItemsByItems(itemsRunTimeInfo) {
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(itemsRunTimeInfo.getItems(), guid => this.removeItemByKey(guid))
    }
    removeItemByKey(key) {
        delete this._map[key]
    }
    add(options) {
        var key = options.guid || new _core_guid__WEBPACK_IMPORTED_MODULE_0__.default;
        this._map[key] = options;
        return key
    }
    addItemsOrExtendFrom(itemsRunTimeInfo) {
        itemsRunTimeInfo.each((key, itemRunTimeInfo) => {
            if (this._map[key]) {
                if (itemRunTimeInfo.widgetInstance) {
                    this._map[key].widgetInstance = itemRunTimeInfo.widgetInstance
                }
                this._map[key].$itemContainer = itemRunTimeInfo.$itemContainer
            } else {
                this.add({
                    item: itemRunTimeInfo.item,
                    widgetInstance: itemRunTimeInfo.widgetInstance,
                    guid: key,
                    $itemContainer: itemRunTimeInfo.$itemContainer
                })
            }
        })
    }
    extendRunTimeItemInfoByKey(key, options) {
        if (this._map[key]) {
            this._map[key] = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(this._map[key], options)
        }
    }
    findWidgetInstanceByItem(item) {
        return this._findWidgetInstance(storedItem => storedItem === item)
    }
    findGroupOrTabLayoutManagerByPath(targetPath) {
        return this._findFieldByCondition(_ref2 => {
            var {
                path: path
            } = _ref2;
            return path === targetPath
        }, "layoutManager")
    }
    findKeyByPath(targetPath) {
        return this._findFieldByCondition(_ref3 => {
            var {
                path: path
            } = _ref3;
            return path === targetPath
        }, "guid")
    }
    findWidgetInstanceByName(name) {
        return this._findWidgetInstance(item => name === item.name)
    }
    findWidgetInstanceByDataField(dataField) {
        return this._findWidgetInstance(item => dataField === ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isString)(item) ? item : item.dataField))
    }
    findItemContainerByItem(item) {
        for (var key in this._map) {
            if (this._map[key].item === item) {
                return this._map[key].$itemContainer
            }
        }
        return null
    }
    findItemIndexByItem(targetItem) {
        return this._findFieldByCondition(_ref4 => {
            var {
                item: item
            } = _ref4;
            return item === targetItem
        }, "itemIndex")
    }
    findPreparedItemByItem(item) {
        return this._findFieldByCondition(_ref5 => {
            var {
                item: currentItem
            } = _ref5;
            return currentItem === item
        }, "preparedItem")
    }
    getItems() {
        return this._map
    }
    each(handler) {
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(this._map, (function(key, itemRunTimeInfo) {
            handler(key, itemRunTimeInfo)
        }))
    }
    removeItemsByPathStartWith(path) {
        var keys = Object.keys(this._map);
        var filteredKeys = keys.filter(key => {
            if (this._map[key].path) {
                return this._map[key].path.indexOf(path, 0) > -1
            }
            return false
        });
        filteredKeys.forEach(key => this.removeItemByKey(key))
    }
}


/***/ }),

/***/ 11534:
/*!********************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/ui.form.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../events/core/events_engine */ 99064);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/component_registrator */ 2382);
/* harmony import */ var _core_guid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/guid */ 22203);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/common */ 37552);
/* harmony import */ var _core_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/config */ 99284);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _events_visibility_change__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../events/visibility_change */ 23495);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/element */ 60213);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../localization/message */ 19336);
/* harmony import */ var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../widget/ui.widget */ 69703);
/* harmony import */ var _editor_editor__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../editor/editor */ 68016);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/window */ 88684);
/* harmony import */ var _validation_engine__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../validation_engine */ 83092);
/* harmony import */ var _ui_form_items_runtime_info__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./ui.form.items_runtime_info */ 75646);
/* harmony import */ var _tab_panel__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../tab_panel */ 16515);
/* harmony import */ var _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../scroll_view/ui.scrollable */ 79678);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../core/utils/deferred */ 97233);
/* harmony import */ var _themes__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../themes */ 78279);
/* harmony import */ var _ui_form_item_options_actions__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./ui.form.item_options_actions */ 22540);
/* harmony import */ var _core_resize_observer__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../core/resize_observer */ 15581);
/* harmony import */ var _ui_form_layout_manager__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./ui.form.layout_manager */ 69648);
/* harmony import */ var _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./ui.form.utils */ 2034);
/* harmony import */ var _ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./ui.form.layout_manager.utils */ 8838);
/* harmony import */ var _components_label__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/label */ 61028);
/* harmony import */ var _validation_summary__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../validation_summary */ 85575);
/* harmony import */ var _validation_group__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../validation_group */ 40058);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./constants */ 73833);
/* harmony import */ var _toolbar_constants__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../toolbar/constants */ 23054);
/**
 * DevExtreme (esm/ui/form/ui.form.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
































var FOCUSED_STATE_CLASS = "dx-state-focused";
var ITEM_OPTIONS_FOR_VALIDATION_UPDATING = ["items", "isRequired", "validationRules", "visible"];
var Form = _widget_ui_widget__WEBPACK_IMPORTED_MODULE_13__.default.inherit({
    _init: function() {
        this.callBase();
        this._cachedColCountOptions = [];
        this._itemsRunTimeInfo = new _ui_form_items_runtime_info__WEBPACK_IMPORTED_MODULE_17__.default;
        this._groupsColCount = [];
        this._attachSyncSubscriptions()
    },
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_9__.extend)(this.callBase(), {
            formID: "dx-" + new _core_guid__WEBPACK_IMPORTED_MODULE_4__.default,
            formData: {},
            colCount: 1,
            screenByWidth: _core_utils_window__WEBPACK_IMPORTED_MODULE_15__.defaultScreenFactorFunc,
            colCountByScreen: void 0,
            labelLocation: "left",
            readOnly: false,
            onFieldDataChanged: null,
            customizeItem: null,
            onEditorEnterKey: null,
            minColWidth: 200,
            alignItemLabels: true,
            alignItemLabelsInAllGroups: true,
            alignRootItemLabels: true,
            showColonAfterLabel: true,
            showRequiredMark: true,
            showOptionalMark: false,
            requiredMark: "*",
            optionalMark: _localization_message__WEBPACK_IMPORTED_MODULE_12__.default.format("dxForm-optionalMark"),
            requiredMessage: _localization_message__WEBPACK_IMPORTED_MODULE_12__.default.getFormatter("dxForm-requiredMessage"),
            showValidationSummary: false,
            items: void 0,
            scrollingEnabled: false,
            validationGroup: void 0,
            stylingMode: (0,_core_config__WEBPACK_IMPORTED_MODULE_6__.default)().editorStylingMode,
            labelMode: "outside"
        })
    },
    _defaultOptionsRules: function() {
        return this.callBase().concat([{
            device: function() {
                return (0,_themes__WEBPACK_IMPORTED_MODULE_21__.isMaterial)()
            },
            options: {
                showColonAfterLabel: false,
                labelLocation: "top"
            }
        }])
    },
    _setOptionsByReference: function() {
        this.callBase();
        (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_9__.extend)(this._optionsByReference, {
            formData: true,
            validationGroup: true
        })
    },
    _getGroupColCount: function($element) {
        return parseInt($element.attr(_constants__WEBPACK_IMPORTED_MODULE_30__.GROUP_COL_COUNT_ATTR))
    },
    _applyLabelsWidthByCol: function($container, index) {
        var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        var labelMarkOptions = arguments.length > 3 ? arguments[3] : void 0;
        var fieldItemClass = options.inOneColumn ? _constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_CLASS : _constants__WEBPACK_IMPORTED_MODULE_30__.FORM_FIELD_ITEM_COL_CLASS + index;
        var cssExcludeTabbedSelector = options.excludeTabbed ? ":not(.".concat(_constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_TAB_CLASS, ")") : "";
        (0,_components_label__WEBPACK_IMPORTED_MODULE_27__.setLabelWidthByMaxLabelWidth)($container, ".".concat(fieldItemClass).concat(cssExcludeTabbedSelector), labelMarkOptions);
        return
    },
    _applyLabelsWidth: function($container, excludeTabbed, inOneColumn, colCount, labelMarkOptions) {
        colCount = inOneColumn ? 1 : colCount || this._getGroupColCount($container);
        var applyLabelsOptions = {
            excludeTabbed: excludeTabbed,
            inOneColumn: inOneColumn
        };
        var i;
        for (i = 0; i < colCount; i++) {
            this._applyLabelsWidthByCol($container, i, applyLabelsOptions, labelMarkOptions)
        }
    },
    _getGroupElementsInColumn: function($container, columnIndex, colCount) {
        var cssColCountSelector = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(colCount) ? "." + _constants__WEBPACK_IMPORTED_MODULE_30__.GROUP_COL_COUNT_CLASS + colCount : "";
        var groupSelector = "." + _constants__WEBPACK_IMPORTED_MODULE_30__.FORM_FIELD_ITEM_COL_CLASS + columnIndex + " > ." + _constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_CONTENT_CLASS + " > ." + _constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_CLASS + cssColCountSelector;
        return $container.find(groupSelector)
    },
    _applyLabelsWidthWithGroups: function($container, colCount, excludeTabbed, labelMarkOptions) {
        if (true === this.option("alignRootItemLabels")) {
            var $rootSimpleItems = $container.find(".".concat(_constants__WEBPACK_IMPORTED_MODULE_30__.ROOT_SIMPLE_ITEM_CLASS));
            for (var colIndex = 0; colIndex < colCount; colIndex++) {
                this._applyLabelsWidthByCol($rootSimpleItems, colIndex, excludeTabbed, labelMarkOptions)
            }
        }
        var alignItemLabelsInAllGroups = this.option("alignItemLabelsInAllGroups");
        if (alignItemLabelsInAllGroups) {
            this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed, labelMarkOptions)
        } else {
            var $groups = this.$element().find("." + _constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_CLASS);
            var i;
            for (i = 0; i < $groups.length; i++) {
                this._applyLabelsWidth($groups.eq(i), excludeTabbed, void 0, void 0, labelMarkOptions)
            }
        }
    },
    _applyLabelsWidthWithNestedGroups: function($container, colCount, excludeTabbed, labelMarkOptions) {
        var applyLabelsOptions = {
            excludeTabbed: excludeTabbed
        };
        var colIndex;
        var groupsColIndex;
        var groupColIndex;
        var $groupsByCol;
        for (colIndex = 0; colIndex < colCount; colIndex++) {
            $groupsByCol = this._getGroupElementsInColumn($container, colIndex);
            this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions, labelMarkOptions);
            for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {
                $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);
                var groupColCount = this._getGroupColCount($groupsByCol);
                for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {
                    this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions, labelMarkOptions)
                }
            }
        }
    },
    _labelLocation: function() {
        return this.option("labelLocation")
    },
    _alignLabelsInColumn: function(_ref) {
        var {
            layoutManager: layoutManager,
            inOneColumn: inOneColumn,
            $container: $container,
            excludeTabbed: excludeTabbed,
            items: items
        } = _ref;
        if (!(0,_core_utils_window__WEBPACK_IMPORTED_MODULE_15__.hasWindow)() || "top" === this._labelLocation()) {
            return
        }
        var labelMarkOptions = (0,_ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_26__.convertToLabelMarkOptions)(layoutManager._getMarkOptions());
        if (inOneColumn) {
            this._applyLabelsWidth($container, excludeTabbed, true, void 0, labelMarkOptions)
        } else if (this._checkGrouping(items)) {
            this._applyLabelsWidthWithGroups($container, layoutManager._getColCount(), excludeTabbed, labelMarkOptions)
        } else {
            this._applyLabelsWidth($container, excludeTabbed, false, layoutManager._getColCount(), labelMarkOptions)
        }
    },
    _prepareFormData: function() {
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(this.option("formData"))) {
            this.option("formData", {})
        }
    },
    _setStylingModeClass: function() {
        if ("underlined" === this.option("stylingMode")) {
            this.$element().addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_UNDERLINED_CLASS)
        }
    },
    _initMarkup: function() {
        _validation_engine__WEBPACK_IMPORTED_MODULE_16__.default.addGroup(this._getValidationGroup());
        this._clearCachedInstances();
        this._prepareFormData();
        this.$element().addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_CLASS);
        this._setStylingModeClass();
        this.callBase();
        this.setAria("role", "form", this.$element());
        if (this.option("scrollingEnabled")) {
            this._renderScrollable()
        }
        this._renderLayout();
        this._renderValidationSummary();
        this._lastMarkupScreenFactor = this._targetScreenFactor || this._getCurrentScreenFactor();
        this._attachResizeObserverSubscription()
    },
    _attachResizeObserverSubscription: function() {
        if ((0,_core_utils_window__WEBPACK_IMPORTED_MODULE_15__.hasWindow)()) {
            var formRootElement = this.$element().get(0);
            _core_resize_observer__WEBPACK_IMPORTED_MODULE_23__.default.unobserve(formRootElement);
            _core_resize_observer__WEBPACK_IMPORTED_MODULE_23__.default.observe(formRootElement, () => {
                this._resizeHandler()
            })
        }
    },
    _resizeHandler: function() {
        if (this._cachedLayoutManagers.length) {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(this._cachedLayoutManagers, (_, layoutManager) => {
                var _layoutManager$option;
                null === (_layoutManager$option = layoutManager.option("onLayoutChanged")) || void 0 === _layoutManager$option ? void 0 : _layoutManager$option(layoutManager.isSingleColumnMode())
            })
        }
    },
    _getCurrentScreenFactor: function() {
        return (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_15__.hasWindow)() ? (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_15__.getCurrentScreenFactor)(this.option("screenByWidth")) : "lg"
    },
    _clearCachedInstances: function() {
        this._itemsRunTimeInfo.clear();
        this._cachedLayoutManagers = []
    },
    _alignLabels: function(layoutManager, inOneColumn) {
        this._alignLabelsInColumn({
            $container: this.$element(),
            layoutManager: layoutManager,
            excludeTabbed: true,
            items: this.option("items"),
            inOneColumn: inOneColumn
        });
        (0,_events_visibility_change__WEBPACK_IMPORTED_MODULE_10__.triggerResizeEvent)(this.$element().find(".".concat(_toolbar_constants__WEBPACK_IMPORTED_MODULE_31__.TOOLBAR_CLASS)))
    },
    _clean: function() {
        this._clearValidationSummary();
        this.callBase();
        this._groupsColCount = [];
        this._cachedColCountOptions = [];
        this._lastMarkupScreenFactor = void 0;
        _core_resize_observer__WEBPACK_IMPORTED_MODULE_23__.default.unobserve(this.$element().get(0))
    },
    _renderScrollable: function() {
        var useNativeScrolling = this.option("useNativeScrolling");
        this._scrollable = new _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_19__.default(this.$element(), {
            useNative: !!useNativeScrolling,
            useSimulatedScrollbar: !useNativeScrolling,
            useKeyboard: false,
            direction: "both",
            bounceEnabled: false
        })
    },
    _getContent: function() {
        return this.option("scrollingEnabled") ? (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(this._scrollable.content()) : this.$element()
    },
    _clearValidationSummary: function() {
        var _this$_$validationSum;
        null === (_this$_$validationSum = this._$validationSummary) || void 0 === _this$_$validationSum ? void 0 : _this$_$validationSum.remove();
        this._$validationSummary = void 0;
        this._validationSummary = void 0
    },
    _renderValidationSummary: function() {
        this._clearValidationSummary();
        if (this.option("showValidationSummary")) {
            this._$validationSummary = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_VALIDATION_SUMMARY).appendTo(this._getContent());
            this._validationSummary = this._$validationSummary.dxValidationSummary({
                validationGroup: this._getValidationGroup()
            }).dxValidationSummary("instance")
        }
    },
    _prepareItems(items, parentIsTabbedItem, currentPath, isTabs) {
        if (items) {
            var result = [];
            for (var i = 0; i < items.length; i++) {
                var item = items[i];
                var path = (0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.concatPaths)(currentPath, (0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.createItemPathByIndex)(i, isTabs));
                var itemRunTimeInfo = {
                    item: item,
                    itemIndex: i,
                    path: path
                };
                var guid = this._itemsRunTimeInfo.add(itemRunTimeInfo);
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isString)(item)) {
                    item = {
                        dataField: item
                    }
                }
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(item)) {
                    var preparedItem = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, item);
                    itemRunTimeInfo.preparedItem = preparedItem;
                    preparedItem.guid = guid;
                    this._tryPrepareGroupItem(preparedItem);
                    this._tryPrepareTabbedItem(preparedItem, path);
                    this._tryPrepareItemTemplate(preparedItem);
                    if (parentIsTabbedItem) {
                        preparedItem.cssItemClass = _constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_TAB_CLASS
                    }
                    if (preparedItem.items) {
                        preparedItem.items = this._prepareItems(preparedItem.items, parentIsTabbedItem, path)
                    }
                    result.push(preparedItem)
                } else {
                    result.push(item)
                }
            }
            return result
        }
    },
    _tryPrepareGroupItem: function(item) {
        if ("group" === item.itemType) {
            item.alignItemLabels = (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_5__.ensureDefined)(item.alignItemLabels, true);
            item._prepareGroupItemTemplate = itemTemplate => {
                if (item.template) {
                    item.groupContentTemplate = this._getTemplate(itemTemplate)
                }
                item.template = this._itemGroupTemplate.bind(this, item)
            };
            item._prepareGroupItemTemplate(item.template)
        }
    },
    _tryPrepareTabbedItem: function(item, path) {
        if ("tabbed" === item.itemType) {
            item.template = this._itemTabbedTemplate.bind(this, item);
            item.tabs = this._prepareItems(item.tabs, true, path, true)
        }
    },
    _tryPrepareItemTemplate: function(item) {
        if (item.template) {
            item.template = this._getTemplate(item.template)
        }
    },
    _checkGrouping: function(items) {
        if (items) {
            for (var i = 0; i < items.length; i++) {
                var item = items[i];
                if ("group" === item.itemType) {
                    return true
                }
            }
        }
    },
    _renderLayout: function() {
        var that = this;
        var items = that.option("items");
        var $content = that._getContent();
        items = that._prepareItems(items);
        that._rootLayoutManager = that._renderLayoutManager($content, this._createLayoutManagerOptions(items, {
            isRoot: true,
            colCount: that.option("colCount"),
            alignItemLabels: that.option("alignItemLabels"),
            screenByWidth: this.option("screenByWidth"),
            colCountByScreen: this.option("colCountByScreen"),
            onLayoutChanged: function(inOneColumn) {
                that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn)
            },
            onContentReady: function(e) {
                that._alignLabels(e.component, e.component.isSingleColumnMode())
            }
        }))
    },
    _tryGetItemsForTemplate: function(item) {
        return item.items || []
    },
    _itemTabbedTemplate: function(item, e, $container) {
        var _item$tabs;
        var $tabPanel = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").appendTo($container);
        var tabPanelOptions = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_9__.extend)({}, item.tabPanelOptions, {
            dataSource: item.tabs,
            onItemRendered: args => {
                var _item$tabPanelOptions, _item$tabPanelOptions2;
                null === (_item$tabPanelOptions = item.tabPanelOptions) || void 0 === _item$tabPanelOptions ? void 0 : null === (_item$tabPanelOptions2 = _item$tabPanelOptions.onItemRendered) || void 0 === _item$tabPanelOptions2 ? void 0 : _item$tabPanelOptions2.call(_item$tabPanelOptions, args);
                (0,_events_visibility_change__WEBPACK_IMPORTED_MODULE_10__.triggerShownEvent)(args.itemElement)
            },
            itemTemplate: (itemData, e, container) => {
                var $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(container);
                var alignItemLabels = (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_5__.ensureDefined)(itemData.alignItemLabels, true);
                var layoutManager = this._renderLayoutManager($container, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(itemData), {
                    colCount: itemData.colCount,
                    alignItemLabels: alignItemLabels,
                    screenByWidth: this.option("screenByWidth"),
                    colCountByScreen: itemData.colCountByScreen,
                    cssItemClass: itemData.cssItemClass,
                    onLayoutChanged: inOneColumn => {
                        this._alignLabelsInColumn({
                            $container: $container,
                            layoutManager: layoutManager,
                            items: itemData.items,
                            inOneColumn: inOneColumn
                        })
                    }
                }));
                if (this._itemsRunTimeInfo) {
                    this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(itemData.guid, {
                        layoutManager: layoutManager
                    })
                }
                if (alignItemLabels) {
                    this._alignLabelsInColumn({
                        $container: $container,
                        layoutManager: layoutManager,
                        items: itemData.items,
                        inOneColumn: layoutManager.isSingleColumnMode()
                    })
                }
            }
        });
        var tryUpdateTabPanelInstance = (items, instance) => {
            if (Array.isArray(items)) {
                items.forEach(item => this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {
                    widgetInstance: instance
                }))
            }
        };
        var tabPanel = this._createComponent($tabPanel, _tab_panel__WEBPACK_IMPORTED_MODULE_18__.default, tabPanelOptions);
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)($container).parent().addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_CONTENT_HAS_TABS_CLASS);
        tabPanel.on("optionChanged", e => {
            if ("dataSource" === e.fullName) {
                tryUpdateTabPanelInstance(e.value, e.component)
            }
        });
        tryUpdateTabPanelInstance([{
            guid: item.guid
        }, ...null !== (_item$tabs = item.tabs) && void 0 !== _item$tabs ? _item$tabs : []], tabPanel)
    },
    _itemGroupTemplate: function(item, e, $container) {
        var $group = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").toggleClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_WITH_CAPTION_CLASS, (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(item.caption) && item.caption.length).addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_CLASS).appendTo($container);
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)($container).parent().addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_CONTENT_HAS_GROUP_CLASS);
        var colCount;
        var layoutManager;
        if (item.caption) {
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<span>").addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group)
        }
        var $groupContent = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_CONTENT_CLASS).appendTo($group);
        if (item.groupContentTemplate) {
            item._renderGroupContentTemplate = () => {
                $groupContent.empty();
                var data = {
                    formData: this.option("formData"),
                    component: this
                };
                item.groupContentTemplate.render({
                    model: data,
                    container: (0,_core_element__WEBPACK_IMPORTED_MODULE_11__.getPublicElement)($groupContent)
                })
            };
            item._renderGroupContentTemplate()
        } else {
            layoutManager = this._renderLayoutManager($groupContent, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(item), {
                colCount: item.colCount,
                colCountByScreen: item.colCountByScreen,
                alignItemLabels: item.alignItemLabels,
                cssItemClass: item.cssItemClass
            }));
            this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {
                layoutManager: layoutManager
            });
            colCount = layoutManager._getColCount();
            if (!this._groupsColCount.includes(colCount)) {
                this._groupsColCount.push(colCount)
            }
            $group.addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.GROUP_COL_COUNT_CLASS + colCount);
            $group.attr(_constants__WEBPACK_IMPORTED_MODULE_30__.GROUP_COL_COUNT_ATTR, colCount)
        }
    },
    _createLayoutManagerOptions: function(items, extendedLayoutManagerOptions) {
        return (0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.convertToLayoutManagerOptions)({
            form: this,
            formOptions: this.option(),
            $formElement: this.$element(),
            items: items,
            validationGroup: this._getValidationGroup(),
            extendedLayoutManagerOptions: extendedLayoutManagerOptions,
            onFieldDataChanged: args => {
                if (!this._isDataUpdating) {
                    this._triggerOnFieldDataChanged(args)
                }
            },
            onContentReady: args => {
                this._itemsRunTimeInfo.addItemsOrExtendFrom(args.component._itemsRunTimeInfo);
                extendedLayoutManagerOptions.onContentReady && extendedLayoutManagerOptions.onContentReady(args)
            },
            onDisposing: _ref2 => {
                var {
                    component: component
                } = _ref2;
                var nestedItemsRunTimeInfo = component.getItemsRunTimeInfo();
                this._itemsRunTimeInfo.removeItemsByItems(nestedItemsRunTimeInfo)
            },
            onFieldItemRendered: () => {
                var _this$_validationSumm;
                null === (_this$_validationSumm = this._validationSummary) || void 0 === _this$_validationSumm ? void 0 : _this$_validationSumm.refreshValidationGroup()
            }
        })
    },
    _renderLayoutManager: function($parent, layoutManagerOptions) {
        var baseColCountByScreen = {
            lg: layoutManagerOptions.colCount,
            md: layoutManagerOptions.colCount,
            sm: layoutManagerOptions.colCount,
            xs: 1
        };
        this._cachedColCountOptions.push({
            colCountByScreen: (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_9__.extend)(baseColCountByScreen, layoutManagerOptions.colCountByScreen)
        });
        var $element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>");
        $element.appendTo($parent);
        var instance = this._createComponent($element, "dxLayoutManager", layoutManagerOptions);
        instance.on("autoColCountChanged", () => {
            this._clearAutoColCountChangedTimeout();
            this.autoColCountChangedTimeoutId = setTimeout(() => !this._disposed && this._refresh(), 0)
        });
        this._cachedLayoutManagers.push(instance);
        return instance
    },
    _getValidationGroup: function() {
        return this.option("validationGroup") || this
    },
    _createComponent: function($element, type, config) {
        config = config || {};
        this._extendConfig(config, {
            readOnly: this.option("readOnly")
        });
        return this.callBase($element, type, config)
    },
    _attachSyncSubscriptions: function() {
        var that = this;
        that.on("optionChanged", (function(args) {
            var optionFullName = args.fullName;
            if ("formData" === optionFullName) {
                if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(args.value)) {
                    that._options.silent("formData", args.value = {})
                }
                that._triggerOnFieldDataChangedByDataSet(args.value)
            }
            if (that._cachedLayoutManagers.length) {
                (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(that._cachedLayoutManagers, (function(index, layoutManager) {
                    if ("formData" === optionFullName) {
                        that._isDataUpdating = true;
                        layoutManager.option("layoutData", args.value);
                        that._isDataUpdating = false
                    }
                    if ("readOnly" === args.name || "disabled" === args.name) {
                        layoutManager.option(optionFullName, args.value)
                    }
                }))
            }
        }))
    },
    _optionChanged: function(args) {
        var splitFullName = args.fullName.split(".");
        if (splitFullName.length > 1 && -1 !== splitFullName[0].search("items") && this._itemsOptionChangedHandler(args)) {
            return
        }
        if (splitFullName.length > 1 && -1 !== splitFullName[0].search("formData") && this._formDataOptionChangedHandler(args)) {
            return
        }
        this._defaultOptionChangedHandler(args)
    },
    _defaultOptionChangedHandler: function(args) {
        switch (args.name) {
            case "formData":
                if (!this.option("items")) {
                    this._invalidate()
                } else if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isEmptyObject)(args.value)) {
                    this._resetValues()
                }
                break;
            case "onFieldDataChanged":
                break;
            case "items":
            case "colCount":
            case "onEditorEnterKey":
            case "labelLocation":
            case "labelMode":
            case "alignItemLabels":
            case "showColonAfterLabel":
            case "customizeItem":
            case "alignItemLabelsInAllGroups":
            case "showRequiredMark":
            case "showOptionalMark":
            case "requiredMark":
            case "optionalMark":
            case "requiredMessage":
            case "scrollingEnabled":
            case "formID":
            case "colCountByScreen":
            case "screenByWidth":
            case "stylingMode":
                this._invalidate();
                break;
            case "showValidationSummary":
                this._renderValidationSummary();
                break;
            case "minColWidth":
                if ("auto" === this.option("colCount")) {
                    this._invalidate()
                }
                break;
            case "alignRootItemLabels":
            case "readOnly":
                break;
            case "width":
                this.callBase(args);
                this._rootLayoutManager.option(args.name, args.value);
                this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());
                break;
            case "validationGroup":
                _validation_engine__WEBPACK_IMPORTED_MODULE_16__.default.removeGroup(args.previousValue || this);
                this._invalidate();
                break;
            default:
                this.callBase(args)
        }
    },
    _itemsOptionChangedHandler: function(args) {
        var nameParts = args.fullName.split(".");
        var value = args.value;
        var itemPath = this._getItemPath(nameParts);
        var item = this.option(itemPath);
        var optionNameWithoutPath = args.fullName.replace(itemPath + ".", "");
        var simpleOptionName = optionNameWithoutPath.split(".")[0].replace(/\[\d+]/, "");
        var itemAction = this._tryCreateItemOptionAction(simpleOptionName, item, item[simpleOptionName], args.previousValue, itemPath);
        var result = this._tryExecuteItemOptionAction(itemAction) || this._tryChangeLayoutManagerItemOption(args.fullName, value);
        if (!result && item) {
            this._changeItemOption(item, optionNameWithoutPath, value);
            var items = this._generateItemsFromData(this.option("items"));
            this.option("items", items);
            result = true
        }
        return result
    },
    _formDataOptionChangedHandler: function(args) {
        var nameParts = args.fullName.split(".");
        var value = args.value;
        var dataField = nameParts.slice(1).join(".");
        var editor = this.getEditor(dataField);
        if (editor) {
            editor.option("value", value)
        } else {
            this._triggerOnFieldDataChanged({
                dataField: dataField,
                value: value
            })
        }
        return true
    },
    _tryCreateItemOptionAction: function(optionName, item, value, previousValue, itemPath) {
        if ("tabs" === optionName) {
            this._itemsRunTimeInfo.removeItemsByPathStartWith("".concat(itemPath, ".tabs"));
            value = this._prepareItems(value, true, itemPath, true)
        }
        return (0,_ui_form_item_options_actions__WEBPACK_IMPORTED_MODULE_22__.default)(optionName, {
            item: item,
            value: value,
            previousValue: previousValue,
            itemsRunTimeInfo: this._itemsRunTimeInfo
        })
    },
    _tryExecuteItemOptionAction: function(action) {
        return action && action.tryExecute()
    },
    _updateValidationGroupAndSummaryIfNeeded: function(fullName) {
        var optionName = (0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getOptionNameFromFullName)(fullName);
        if (ITEM_OPTIONS_FOR_VALIDATION_UPDATING.indexOf(optionName) > -1) {
            _validation_engine__WEBPACK_IMPORTED_MODULE_16__.default.addGroup(this._getValidationGroup());
            if (this.option("showValidationSummary")) {
                var _this$_validationSumm2;
                null === (_this$_validationSumm2 = this._validationSummary) || void 0 === _this$_validationSumm2 ? void 0 : _this$_validationSumm2.refreshValidationGroup()
            }
        }
    },
    _setLayoutManagerItemOption(layoutManager, optionName, value, path) {
        if (this._updateLockCount > 0) {
            !layoutManager._updateLockCount && layoutManager.beginUpdate();
            var key = this._itemsRunTimeInfo.findKeyByPath(path);
            this.postponedOperations.add(key, () => {
                !layoutManager._disposed && layoutManager.endUpdate();
                return (new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__.Deferred).resolve()
            })
        }
        var contentReadyHandler = e => {
            e.component.off("contentReady", contentReadyHandler);
            if ((0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.isFullPathContainsTabs)(path)) {
                var tabPath = (0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.tryGetTabPath)(path);
                var tabLayoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(tabPath);
                if (tabLayoutManager) {
                    this._alignLabelsInColumn({
                        items: tabLayoutManager.option("items"),
                        layoutManager: tabLayoutManager,
                        $container: tabLayoutManager.$element(),
                        inOneColumn: tabLayoutManager.isSingleColumnMode()
                    })
                }
            } else {
                this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode())
            }
        };
        layoutManager.on("contentReady", contentReadyHandler);
        layoutManager.option(optionName, value);
        this._updateValidationGroupAndSummaryIfNeeded(optionName)
    },
    _tryChangeLayoutManagerItemOption(fullName, value) {
        var nameParts = fullName.split(".");
        var optionName = (0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getOptionNameFromFullName)(fullName);
        if ("items" === optionName && nameParts.length > 1) {
            var itemPath = this._getItemPath(nameParts);
            var layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(itemPath);
            if (layoutManager) {
                this._itemsRunTimeInfo.removeItemsByItems(layoutManager.getItemsRunTimeInfo());
                var items = this._prepareItems(value, false, itemPath);
                this._setLayoutManagerItemOption(layoutManager, optionName, items, itemPath);
                return true
            }
        } else if (nameParts.length > 2) {
            var endPartIndex = nameParts.length - 2;
            var _itemPath = this._getItemPath(nameParts.slice(0, endPartIndex));
            var _layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(_itemPath);
            if (_layoutManager) {
                var fullOptionName = (0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getFullOptionName)(nameParts[endPartIndex], optionName);
                if ("editorType" === optionName) {
                    if (_layoutManager.option(fullOptionName) !== value) {
                        return false
                    }
                }
                if ("visible" === optionName) {
                    var formItems = this.option((0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getFullOptionName)(_itemPath, "items"));
                    if (formItems && formItems.length) {
                        var layoutManagerItems = _layoutManager.option("items");
                        formItems.forEach((item, index) => {
                            var layoutItem = layoutManagerItems[index];
                            layoutItem.visibleIndex = item.visibleIndex
                        })
                    }
                }
                this._setLayoutManagerItemOption(_layoutManager, fullOptionName, value, _itemPath);
                return true
            }
        }
        return false
    },
    _tryChangeLayoutManagerItemOptions(itemPath, options) {
        var result;
        this.beginUpdate();
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(options, (optionName, optionValue) => {
            result = this._tryChangeLayoutManagerItemOption((0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getFullOptionName)(itemPath, optionName), optionValue);
            if (!result) {
                return false
            }
        });
        this.endUpdate();
        return result
    },
    _getItemPath: function(nameParts) {
        var itemPath = nameParts[0];
        var i;
        for (i = 1; i < nameParts.length; i++) {
            if (-1 !== nameParts[i].search(/items\[\d+]|tabs\[\d+]/)) {
                itemPath += "." + nameParts[i]
            } else {
                break
            }
        }
        return itemPath
    },
    _triggerOnFieldDataChanged: function(args) {
        this._createActionByOption("onFieldDataChanged")(args)
    },
    _triggerOnFieldDataChangedByDataSet: function(data) {
        var that = this;
        if (data && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(data)) {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(data, (function(dataField, value) {
                that._triggerOnFieldDataChanged({
                    dataField: dataField,
                    value: value
                })
            }))
        }
    },
    _updateFieldValue: function(dataField, value) {
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(this.option("formData"))) {
            var editor = this.getEditor(dataField);
            this.option("formData." + dataField, value);
            if (editor) {
                var editorValue = editor.option("value");
                if (editorValue !== value) {
                    editor.option("value", value)
                }
            }
        }
    },
    _generateItemsFromData: function(items) {
        var formData = this.option("formData");
        var result = [];
        if (!items && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(formData)) {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(formData, (function(dataField) {
                result.push({
                    dataField: dataField
                })
            }))
        }
        if (items) {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(items, (function(index, item) {
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(item)) {
                    result.push(item)
                } else {
                    result.push({
                        dataField: item
                    })
                }
            }))
        }
        return result
    },
    _getItemByField: function(field, items) {
        var that = this;
        var fieldParts = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(field) ? field : that._getFieldParts(field);
        var fieldName = fieldParts.fieldName;
        var fieldPath = fieldParts.fieldPath;
        var resultItem;
        if (items.length) {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(items, (function(index, item) {
                var itemType = item.itemType;
                if (fieldPath.length) {
                    var path = fieldPath.slice();
                    item = that._getItemByFieldPath(path, fieldName, item)
                } else if ("group" === itemType && !(item.caption || item.name) || "tabbed" === itemType && !item.name) {
                    var subItemsField = that._getSubItemField(itemType);
                    item.items = that._generateItemsFromData(item.items);
                    item = that._getItemByField({
                        fieldName: fieldName,
                        fieldPath: fieldPath
                    }, item[subItemsField])
                }
                if ((0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.isEqualToDataFieldOrNameOrTitleOrCaption)(item, fieldName)) {
                    resultItem = item;
                    return false
                }
            }))
        }
        return resultItem
    },
    _getFieldParts: function(field) {
        var fieldName = field;
        var separatorIndex = fieldName.indexOf(".");
        var resultPath = [];
        while (-1 !== separatorIndex) {
            resultPath.push(fieldName.substr(0, separatorIndex));
            fieldName = fieldName.substr(separatorIndex + 1);
            separatorIndex = fieldName.indexOf(".")
        }
        return {
            fieldName: fieldName,
            fieldPath: resultPath.reverse()
        }
    },
    _getItemByFieldPath: function(path, fieldName, item) {
        var itemType = item.itemType;
        var subItemsField = this._getSubItemField(itemType);
        var isItemWithSubItems = "group" === itemType || "tabbed" === itemType || item.title;
        var result;
        do {
            if (isItemWithSubItems) {
                var name = item.name || item.caption || item.title;
                var isGroupWithName = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(name);
                var nameWithoutSpaces = (0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getTextWithoutSpaces)(name);
                var pathNode = void 0;
                item[subItemsField] = this._generateItemsFromData(item[subItemsField]);
                if (isGroupWithName) {
                    pathNode = path.pop()
                }
                if (!path.length) {
                    result = this._getItemByField(fieldName, item[subItemsField]);
                    if (result) {
                        break
                    }
                }
                if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {
                    if (path.length) {
                        result = this._searchItemInEverySubItem(path, fieldName, item[subItemsField])
                    }
                }
            } else {
                break
            }
        } while (path.length && !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(result));
        return result
    },
    _getSubItemField: function(itemType) {
        return "tabbed" === itemType ? "tabs" : "items"
    },
    _searchItemInEverySubItem: function(path, fieldName, items) {
        var that = this;
        var result;
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(items, (function(index, groupItem) {
            result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);
            if (result) {
                return false
            }
        }));
        if (!result) {
            result = false
        }
        return result
    },
    _changeItemOption: function(item, option, value) {
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(item)) {
            item[option] = value
        }
    },
    _dimensionChanged: function() {
        var currentScreenFactor = this._getCurrentScreenFactor();
        if (this._lastMarkupScreenFactor !== currentScreenFactor) {
            if (this._isColCountChanged(this._lastMarkupScreenFactor, currentScreenFactor)) {
                this._targetScreenFactor = currentScreenFactor;
                this._refresh();
                this._targetScreenFactor = void 0
            }
            this._lastMarkupScreenFactor = currentScreenFactor
        }
    },
    _isColCountChanged: function(oldScreenSize, newScreenSize) {
        var isChanged = false;
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(this._cachedColCountOptions, (function(index, item) {
            if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {
                isChanged = true;
                return false
            }
        }));
        return isChanged
    },
    _refresh: function() {
        var editorSelector = "." + FOCUSED_STATE_CLASS + " input, ." + FOCUSED_STATE_CLASS + " textarea";
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__.default.trigger(this.$element().find(editorSelector), "change");
        this.callBase()
    },
    _resetValues: function() {
        this._itemsRunTimeInfo.each((function(_, itemRunTimeInfo) {
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(itemRunTimeInfo.widgetInstance) && _editor_editor__WEBPACK_IMPORTED_MODULE_14__.default.isEditor(itemRunTimeInfo.widgetInstance)) {
                itemRunTimeInfo.widgetInstance.reset();
                itemRunTimeInfo.widgetInstance.option("isValid", true)
            }
        }));
        _validation_engine__WEBPACK_IMPORTED_MODULE_16__.default.resetGroup(this._getValidationGroup())
    },
    _updateData: function(data, value, isComplexData) {
        var that = this;
        var _data = isComplexData ? value : data;
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(_data)) {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(_data, (function(dataField, fieldValue) {
                that._updateData(isComplexData ? data + "." + dataField : dataField, fieldValue, (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(fieldValue))
            }))
        } else if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isString)(data)) {
            that._updateFieldValue(data, value)
        }
    },
    registerKeyHandler: function(key, handler) {
        this.callBase(key, handler);
        this._itemsRunTimeInfo.each((function(_, itemRunTimeInfo) {
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(itemRunTimeInfo.widgetInstance)) {
                itemRunTimeInfo.widgetInstance.registerKeyHandler(key, handler)
            }
        }))
    },
    _focusTarget: function() {
        return this.$element().find("." + _constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_CONTENT_CLASS + " [tabindex]").first()
    },
    _visibilityChanged: function() {
        this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode())
    },
    _clearAutoColCountChangedTimeout: function() {
        if (this.autoColCountChangedTimeoutId) {
            clearTimeout(this.autoColCountChangedTimeoutId);
            this.autoColCountChangedTimeoutId = void 0
        }
    },
    _dispose: function() {
        this._clearAutoColCountChangedTimeout();
        _validation_engine__WEBPACK_IMPORTED_MODULE_16__.default.removeGroup(this._getValidationGroup());
        this.callBase()
    },
    resetValues: function() {
        this._resetValues()
    },
    updateData: function(data, value) {
        this._updateData(data, value)
    },
    getEditor: function(dataField) {
        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(dataField) || this._itemsRunTimeInfo.findWidgetInstanceByName(dataField)
    },
    getButton: function(name) {
        return this._itemsRunTimeInfo.findWidgetInstanceByName(name)
    },
    updateDimensions: function() {
        var that = this;
        var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__.Deferred;
        if (that._scrollable) {
            that._scrollable.update().done((function() {
                deferred.resolveWith(that)
            }))
        } else {
            deferred.resolveWith(that)
        }
        return deferred.promise()
    },
    itemOption: function(id, option, value) {
        var items = this._generateItemsFromData(this.option("items"));
        var item = this._getItemByField(id, items);
        var path = (0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getItemPath)(items, item);
        if (!item) {
            return
        }
        switch (arguments.length) {
            case 1:
                return item;
            case 3:
                var itemAction = this._tryCreateItemOptionAction(option, item, value, item[option], path);
                this._changeItemOption(item, option, value);
                var fullName = (0,_ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getFullOptionName)(path, option);
                if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(fullName, value)) {
                    this.option("items", items)
                }
                break;
            default:
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(option)) {
                    if (!this._tryChangeLayoutManagerItemOptions(path, option)) {
                        var allowUpdateItems;
                        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(option, (optionName, optionValue) => {
                            var itemAction = this._tryCreateItemOptionAction(optionName, item, optionValue, item[optionName], path);
                            this._changeItemOption(item, optionName, optionValue);
                            if (!allowUpdateItems && !this._tryExecuteItemOptionAction(itemAction)) {
                                allowUpdateItems = true
                            }
                        });
                        allowUpdateItems && this.option("items", items)
                    }
                }
        }
    },
    validate: function() {
        return _validation_engine__WEBPACK_IMPORTED_MODULE_16__.default.validateGroup(this._getValidationGroup())
    },
    getItemID: function(name) {
        return "dx_" + this.option("formID") + "_" + (name || new _core_guid__WEBPACK_IMPORTED_MODULE_4__.default)
    },
    getTargetScreenFactor: function() {
        return this._targetScreenFactor
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_3__.default)("dxForm", Form);
/* harmony default export */ __webpack_exports__["default"] = (Form);


/***/ }),

/***/ 69648:
/*!***********************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/ui.form.layout_manager.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../events/core/events_engine */ 99064);
/* harmony import */ var _ui_form_items_runtime_info__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui.form.items_runtime_info */ 75646);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/component_registrator */ 2382);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/variable_wrapper */ 17871);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/window */ 88684);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_array__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/array */ 36959);
/* harmony import */ var _core_utils_data__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/data */ 25670);
/* harmony import */ var _events_remove__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../events/remove */ 65543);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../localization/message */ 19336);
/* harmony import */ var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../widget/ui.widget */ 69703);
/* harmony import */ var _responsive_box__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../responsive_box */ 3907);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./constants */ 73833);
/* harmony import */ var _text_box__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../text_box */ 70426);
/* harmony import */ var _number_box__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../number_box */ 28692);
/* harmony import */ var _check_box__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../check_box */ 54337);
/* harmony import */ var _date_box__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../date_box */ 88496);
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../button */ 66037);
/* harmony import */ var _components_field_item__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/field_item */ 22608);
/* harmony import */ var _components_button_item__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/button_item */ 12801);
/* harmony import */ var _components_empty_item__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/empty_item */ 28269);
/* harmony import */ var _ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./ui.form.layout_manager.utils */ 8838);
/**
 * DevExtreme (esm/ui/form/ui.form.layout_manager.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



























var FORM_EDITOR_BY_DEFAULT = "dxTextBox";
var LAYOUT_MANAGER_FIRST_ROW_CLASS = "dx-first-row";
var LAYOUT_MANAGER_LAST_ROW_CLASS = "dx-last-row";
var LAYOUT_MANAGER_FIRST_COL_CLASS = "dx-first-col";
var LAYOUT_MANAGER_LAST_COL_CLASS = "dx-last-col";
var LayoutManager = _widget_ui_widget__WEBPACK_IMPORTED_MODULE_15__.default.inherit({
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(this.callBase(), {
            layoutData: {},
            readOnly: false,
            colCount: 1,
            colCountByScreen: void 0,
            labelLocation: "left",
            onFieldDataChanged: null,
            onEditorEnterKey: null,
            customizeItem: null,
            alignItemLabels: true,
            minColWidth: 200,
            showRequiredMark: true,
            screenByWidth: null,
            showOptionalMark: false,
            requiredMark: "*",
            labelMode: "outside",
            optionalMark: _localization_message__WEBPACK_IMPORTED_MODULE_14__.default.format("dxForm-optionalMark"),
            requiredMessage: _localization_message__WEBPACK_IMPORTED_MODULE_14__.default.getFormatter("dxForm-requiredMessage")
        })
    },
    _setOptionsByReference: function() {
        this.callBase();
        (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(this._optionsByReference, {
            layoutData: true,
            validationGroup: true
        })
    },
    _init: function() {
        var layoutData = this.option("layoutData");
        this.callBase();
        this._itemWatchers = [];
        this._itemsRunTimeInfo = new _ui_form_items_runtime_info__WEBPACK_IMPORTED_MODULE_4__.default;
        this._updateReferencedOptions(layoutData);
        this._initDataAndItems(layoutData)
    },
    _dispose: function() {
        this.callBase();
        this._cleanItemWatchers()
    },
    _initDataAndItems: function(initialData) {
        this._syncDataWithItems();
        this._updateItems(initialData)
    },
    _syncDataWithItems: function() {
        var layoutData = this.option("layoutData");
        var userItems = this.option("items");
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(userItems)) {
            userItems.forEach(item => {
                if (item.dataField && void 0 === this._getDataByField(item.dataField)) {
                    var value;
                    if (item.editorOptions) {
                        value = item.editorOptions.value
                    }
                    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(value) || item.dataField in layoutData) {
                        this._updateFieldValue(item.dataField, value)
                    }
                }
            })
        }
    },
    _getDataByField: function(dataField) {
        return dataField ? this.option("layoutData." + dataField) : null
    },
    _isCheckboxUndefinedStateEnabled: function(_ref) {
        var {
            allowIndeterminateState: allowIndeterminateState,
            editorType: editorType,
            dataField: dataField
        } = _ref;
        if (true === allowIndeterminateState && "dxCheckBox" === editorType) {
            var nameParts = ["layoutData", ...dataField.split(".")];
            var propertyName = nameParts.pop();
            var layoutData = this.option(nameParts.join("."));
            return layoutData && propertyName in layoutData
        }
        return false
    },
    _updateFieldValue: function(dataField, value) {
        var layoutData = this.option("layoutData");
        var newValue = value;
        if (!_core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__.default.isWrapped(layoutData[dataField]) && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(dataField)) {
            this.option("layoutData." + dataField, newValue)
        } else if (_core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__.default.isWritableWrapped(layoutData[dataField])) {
            newValue = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isFunction)(newValue) ? newValue() : newValue;
            layoutData[dataField](newValue)
        }
        this._triggerOnFieldDataChanged({
            dataField: dataField,
            value: newValue
        })
    },
    _triggerOnFieldDataChanged: function(args) {
        this._createActionByOption("onFieldDataChanged")(args)
    },
    _updateItems: function(layoutData) {
        var that = this;
        var userItems = this.option("items");
        var isUserItemsExist = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(userItems);
        var customizeItem = that.option("customizeItem");
        var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(items)) {
            var processedItems = [];
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__.each)(items, (function(index, item) {
                if (that._isAcceptableItem(item)) {
                    item = that._processItem(item);
                    customizeItem && customizeItem(item);
                    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(item) && false !== _core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__.default.unwrap(item.visible)) {
                        processedItems.push(item)
                    }
                }
            }));
            if (!that._itemWatchers.length || !isUserItemsExist) {
                that._updateItemWatchers(items)
            }
            this._setItems(processedItems);
            this._sortItems()
        }
    },
    _cleanItemWatchers: function() {
        this._itemWatchers.forEach((function(dispose) {
            dispose()
        }));
        this._itemWatchers = []
    },
    _updateItemWatchers: function(items) {
        var that = this;
        var watch = that._getWatch();
        items.forEach((function(item) {
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(item) && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.visible) && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isFunction)(watch)) {
                that._itemWatchers.push(watch((function() {
                    return _core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__.default.unwrap(item.visible)
                }), (function() {
                    that._updateItems(that.option("layoutData"));
                    that.repaint()
                }), {
                    skipImmediate: true
                }))
            }
        }))
    },
    _generateItemsByData: function(layoutData) {
        var result = [];
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(layoutData)) {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__.each)(layoutData, (function(dataField) {
                result.push({
                    dataField: dataField
                })
            }))
        }
        return result
    },
    _isAcceptableItem: function(item) {
        var itemField = item.dataField || item;
        var itemData = this._getDataByField(itemField);
        return !((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isFunction)(itemData) && !_core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__.default.isWrapped(itemData))
    },
    _processItem: function(item) {
        if ("string" === typeof item) {
            item = {
                dataField: item
            }
        }
        if ("object" === typeof item && !item.itemType) {
            item.itemType = _constants__WEBPACK_IMPORTED_MODULE_17__.SIMPLE_ITEM_TYPE
        }
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.editorType) && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.dataField)) {
            var value = this._getDataByField(item.dataField);
            item.editorType = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(value) ? this._getEditorTypeByDataType((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.type)(value)) : FORM_EDITOR_BY_DEFAULT
        }
        if ("dxCheckBox" === item.editorType) {
            var _item$allowIndetermin;
            item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true
        }
        return item
    },
    _getEditorTypeByDataType: function(dataType) {
        switch (dataType) {
            case "number":
                return "dxNumberBox";
            case "date":
                return "dxDateBox";
            case "boolean":
                return "dxCheckBox";
            default:
                return "dxTextBox"
        }
    },
    _sortItems: function() {
        (0,_core_utils_array__WEBPACK_IMPORTED_MODULE_11__.normalizeIndexes)(this._items, "visibleIndex");
        this._sortIndexes()
    },
    _sortIndexes: function() {
        this._items.sort((function(itemA, itemB) {
            var indexA = itemA.visibleIndex;
            var indexB = itemB.visibleIndex;
            var result;
            if (indexA > indexB) {
                result = 1
            } else if (indexA < indexB) {
                result = -1
            } else {
                result = 0
            }
            return result
        }))
    },
    _initMarkup: function() {
        this._itemsRunTimeInfo.clear();
        this.$element().addClass(_constants__WEBPACK_IMPORTED_MODULE_17__.FORM_LAYOUT_MANAGER_CLASS);
        this.callBase();
        this._renderResponsiveBox()
    },
    _renderResponsiveBox: function() {
        var templatesInfo = [];
        if (this._items && this._items.length) {
            var colCount = this._getColCount();
            var $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").appendTo(this.$element());
            this._prepareItemsWithMerging(colCount);
            var layoutItems = this._generateLayoutItems();
            this._responsiveBox = this._createComponent($container, _responsive_box__WEBPACK_IMPORTED_MODULE_16__.default, this._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));
            if (!(0,_core_utils_window__WEBPACK_IMPORTED_MODULE_8__.hasWindow)()) {
                this._renderTemplates(templatesInfo)
            }
        }
    },
    _itemStateChangedHandler: function(e) {
        this._refresh()
    },
    _renderTemplates: function(templatesInfo) {
        var that = this;
        var itemsWithLabelTemplateCount = 0;
        templatesInfo.forEach(_ref2 => {
            var _item$label;
            var {
                item: item
            } = _ref2;
            if (null !== item && void 0 !== item && null !== (_item$label = item.label) && void 0 !== _item$label && _item$label.template) {
                itemsWithLabelTemplateCount++
            }
        });
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__.each)(templatesInfo, (function(index, info) {
            switch (info.itemType) {
                case "empty":
                    (0,_components_empty_item__WEBPACK_IMPORTED_MODULE_25__.renderEmptyItem)(info);
                    break;
                case "button":
                    that._renderButtonItem(info);
                    break;
                default:
                    that._renderFieldItem(info, itemsWithLabelTemplateCount)
            }
        }))
    },
    _getResponsiveBoxConfig: function(layoutItems, colCount, templatesInfo) {
        var that = this;
        var colCountByScreen = that.option("colCountByScreen");
        var xsColCount = colCountByScreen && colCountByScreen.xs;
        return {
            onItemStateChanged: this._itemStateChangedHandler.bind(this),
            onLayoutChanged: function() {
                var onLayoutChanged = that.option("onLayoutChanged");
                var isSingleColumnMode = that.isSingleColumnMode();
                if (onLayoutChanged) {
                    that.$element().toggleClass(_constants__WEBPACK_IMPORTED_MODULE_17__.LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);
                    onLayoutChanged(isSingleColumnMode)
                }
            },
            onContentReady: function(e) {
                if ((0,_core_utils_window__WEBPACK_IMPORTED_MODULE_8__.hasWindow)()) {
                    that._renderTemplates(templatesInfo)
                }
                if (that.option("onLayoutChanged")) {
                    that.$element().toggleClass(_constants__WEBPACK_IMPORTED_MODULE_17__.LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component))
                }
            },
            itemTemplate: function(e, itemData, itemElement) {
                if (!e.location) {
                    return
                }
                var $itemElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(itemElement);
                var itemRenderedCountInPreviousRows = e.location.row * colCount;
                var item = that._items[e.location.col + itemRenderedCountInPreviousRows];
                if (!item) {
                    return
                }
                var itemCssClassList = [item.cssClass];
                $itemElement.toggleClass(_constants__WEBPACK_IMPORTED_MODULE_17__.SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));
                if (0 === e.location.row) {
                    itemCssClassList.push(LAYOUT_MANAGER_FIRST_ROW_CLASS)
                }
                if (0 === e.location.col) {
                    itemCssClassList.push(LAYOUT_MANAGER_FIRST_COL_CLASS)
                }
                if (item.itemType === _constants__WEBPACK_IMPORTED_MODULE_17__.SIMPLE_ITEM_TYPE && that.option("isRoot")) {
                    $itemElement.addClass(_constants__WEBPACK_IMPORTED_MODULE_17__.ROOT_SIMPLE_ITEM_CLASS)
                }
                var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;
                var rowsCount = that._getRowsCount();
                var isLastRow = e.location.row === rowsCount - 1;
                if (isLastColumn) {
                    itemCssClassList.push(LAYOUT_MANAGER_LAST_COL_CLASS)
                }
                if (isLastRow) {
                    itemCssClassList.push(LAYOUT_MANAGER_LAST_ROW_CLASS)
                }
                if ("empty" !== item.itemType) {
                    itemCssClassList.push(_constants__WEBPACK_IMPORTED_MODULE_17__.FIELD_ITEM_CLASS);
                    itemCssClassList.push(that.option("cssItemClass"));
                    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.col)) {
                        itemCssClassList.push("dx-col-" + item.col)
                    }
                }
                templatesInfo.push({
                    itemType: item.itemType,
                    item: item,
                    $parent: $itemElement,
                    rootElementCssClassList: itemCssClassList
                })
            },
            cols: that._generateRatio(colCount),
            rows: that._generateRatio(that._getRowsCount(), true),
            dataSource: layoutItems,
            screenByWidth: that.option("screenByWidth"),
            singleColumnScreen: xsColCount ? false : "xs"
        }
    },
    _getColCount: function() {
        var colCount = this.option("colCount");
        var colCountByScreen = this.option("colCountByScreen");
        if (colCountByScreen) {
            var screenFactor = this.option("form").getTargetScreenFactor();
            if (!screenFactor) {
                screenFactor = (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_8__.hasWindow)() ? (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_8__.getCurrentScreenFactor)(this.option("screenByWidth")) : "lg"
            }
            colCount = colCountByScreen[screenFactor] || colCount
        }
        if ("auto" === colCount) {
            if (this._cashedColCount) {
                return this._cashedColCount
            }
            this._cashedColCount = colCount = this._getMaxColCount()
        }
        return colCount < 1 ? 1 : colCount
    },
    _getMaxColCount: function() {
        if (!(0,_core_utils_window__WEBPACK_IMPORTED_MODULE_8__.hasWindow)()) {
            return 1
        }
        var minColWidth = this.option("minColWidth");
        var width = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getWidth)(this.$element());
        var itemsCount = this._items.length;
        var maxColCount = Math.floor(width / minColWidth) || 1;
        return itemsCount < maxColCount ? itemsCount : maxColCount
    },
    isCachedColCountObsolete: function() {
        return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount
    },
    _prepareItemsWithMerging: function(colCount) {
        var items = this._items.slice(0);
        var item;
        var itemsMergedByCol;
        var result = [];
        var j;
        var i;
        for (i = 0; i < items.length; i++) {
            item = items[i];
            result.push(item);
            if (this.option("alignItemLabels") || item.alignItemLabels || item.colSpan) {
                item.col = this._getColByIndex(result.length - 1, colCount)
            }
            if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {
                itemsMergedByCol = [];
                for (j = 0; j < item.colSpan - 1; j++) {
                    itemsMergedByCol.push({
                        merged: true
                    })
                }
                result = result.concat(itemsMergedByCol)
            } else {
                delete item.colSpan
            }
        }
        this._setItems(result)
    },
    _getColByIndex: function(index, colCount) {
        return index % colCount
    },
    _setItems: function(items) {
        this._items = items;
        this._cashedColCount = null
    },
    _generateLayoutItems: function() {
        var items = this._items;
        var colCount = this._getColCount();
        var result = [];
        var item;
        var i;
        for (i = 0; i < items.length; i++) {
            item = items[i];
            if (!item.merged) {
                var generatedItem = {
                    location: {
                        row: parseInt(i / colCount),
                        col: this._getColByIndex(i, colCount)
                    }
                };
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.disabled)) {
                    generatedItem.disabled = item.disabled
                }
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.visible)) {
                    generatedItem.visible = item.visible
                }
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.colSpan)) {
                    generatedItem.location.colspan = item.colSpan
                }
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.rowSpan)) {
                    generatedItem.location.rowspan = item.rowSpan
                }
                result.push(generatedItem)
            }
        }
        return result
    },
    _renderEmptyItem: function($container) {
        (0,_components_empty_item__WEBPACK_IMPORTED_MODULE_25__.renderEmptyItem)({
            $container: $container
        })
    },
    _renderButtonItem: function(_ref3) {
        var {
            item: item,
            $parent: $parent,
            rootElementCssClassList: rootElementCssClassList
        } = _ref3;
        var {
            $rootElement: $rootElement,
            buttonInstance: buttonInstance
        } = (0,_components_button_item__WEBPACK_IMPORTED_MODULE_24__.renderButtonItem)({
            item: item,
            $parent: $parent,
            rootElementCssClassList: rootElementCssClassList,
            validationGroup: this.option("validationGroup"),
            createComponentCallback: this._createComponent.bind(this)
        });
        this._itemsRunTimeInfo.add({
            item: item,
            widgetInstance: buttonInstance,
            guid: item.guid,
            $itemContainer: $rootElement
        })
    },
    _renderFieldItem: function(_ref4, itemsWithLabelTemplateCount) {
        var _item$label2, _this$option;
        var {
            item: item,
            $parent: $parent,
            rootElementCssClassList: rootElementCssClassList
        } = _ref4;
        var editorValue = this._getDataByField(item.dataField);
        var canAssignUndefinedValueToEditor = false;
        if (void 0 === editorValue) {
            var {
                allowIndeterminateState: allowIndeterminateState,
                editorType: editorType,
                dataField: dataField
            } = item;
            canAssignUndefinedValueToEditor = this._isCheckboxUndefinedStateEnabled({
                allowIndeterminateState: allowIndeterminateState,
                editorType: editorType,
                dataField: dataField
            })
        }
        var name = item.dataField || item.name;
        var formOrLayoutManager = this._getFormOrThis();
        var {
            $fieldEditorContainer: $fieldEditorContainer,
            widgetInstance: widgetInstance,
            $rootElement: $rootElement
        } = (0,_components_field_item__WEBPACK_IMPORTED_MODULE_23__.renderFieldItem)((0,_ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_26__.convertToRenderFieldItemOptions)({
            $parent: $parent,
            rootElementCssClassList: rootElementCssClassList,
            item: item,
            name: name,
            editorValue: editorValue,
            canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,
            formOrLayoutManager: this._getFormOrThis(),
            createComponentCallback: this._createComponent.bind(this),
            formLabelLocation: this.option("labelLocation"),
            requiredMessageTemplate: this.option("requiredMessage"),
            validationGroup: this.option("validationGroup"),
            editorValidationBoundary: this.option("validationBoundary"),
            editorStylingMode: this.option("form") && this.option("form").option("stylingMode"),
            showColonAfterLabel: this.option("showColonAfterLabel"),
            managerLabelLocation: this.option("labelLocation"),
            template: item.template ? this._getTemplate(item.template) : null,
            labelTemplate: null !== (_item$label2 = item.label) && void 0 !== _item$label2 && _item$label2.template ? this._getTemplate(item.label.template) : null,
            itemId: this.option("form") && this.option("form").getItemID(name),
            managerMarkOptions: this._getMarkOptions(),
            labelMode: this.option("labelMode"),
            onLabelTemplateRendered: () => {
                this._incTemplateRenderedCallCount();
                if (this._shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, itemsWithLabelTemplateCount)) {
                    formOrLayoutManager._alignLabels(this, this.isSingleColumnMode(formOrLayoutManager))
                }
            }
        }));
        null === (_this$option = this.option("onFieldItemRendered")) || void 0 === _this$option ? void 0 : _this$option();
        if (widgetInstance && item.dataField) {
            this._bindDataField(widgetInstance, item.dataField, item.editorType, $fieldEditorContainer)
        }
        this._itemsRunTimeInfo.add({
            item: item,
            widgetInstance: widgetInstance,
            guid: item.guid,
            $itemContainer: $rootElement
        })
    },
    _incTemplateRenderedCallCount() {
        var _this$_labelTemplateR;
        this._labelTemplateRenderedCallCount = (null !== (_this$_labelTemplateR = this._labelTemplateRenderedCallCount) && void 0 !== _this$_labelTemplateR ? _this$_labelTemplateR : 0) + 1
    },
    _shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, totalItemsWithLabelTemplate) {
        return formOrLayoutManager.option("templatesRenderAsynchronously") && this._labelTemplateRenderedCallCount === totalItemsWithLabelTemplate
    },
    _getMarkOptions: function() {
        return {
            showRequiredMark: this.option("showRequiredMark"),
            requiredMark: this.option("requiredMark"),
            showOptionalMark: this.option("showOptionalMark"),
            optionalMark: this.option("optionalMark")
        }
    },
    _getFormOrThis: function() {
        return this.option("form") || this
    },
    _bindDataField: function(editorInstance, dataField, editorType, $container) {
        var formOrThis = this._getFormOrThis();
        editorInstance.on("enterKey", (function(args) {
            formOrThis._createActionByOption("onEditorEnterKey")((0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(args, {
                dataField: dataField
            }))
        }));
        this._createWatcher(editorInstance, $container, dataField);
        this.linkEditorToDataField(editorInstance, dataField, editorType)
    },
    _createWatcher: function(editorInstance, $container, dataField) {
        var that = this;
        var watch = that._getWatch();
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isFunction)(watch)) {
            return
        }
        var dispose = watch((function() {
            return that._getDataByField(dataField)
        }), (function() {
            var fieldValue = that._getDataByField(dataField);
            if ("dxTagBox" === editorInstance.NAME) {
                var editorValue = editorInstance.option("value");
                if (fieldValue !== editorValue && function(array1, array2) {
                        if (!Array.isArray(array1) || !Array.isArray(array2) || array1.length !== array2.length) {
                            return false
                        }
                        for (var i = 0; i < array1.length; i++) {
                            if (array1[i] !== array2[i]) {
                                return false
                            }
                        }
                        return true
                    }(fieldValue, editorValue)) {
                    return
                }
            }
            editorInstance.option("value", fieldValue)
        }), {
            deep: true,
            skipImmediate: true
        });
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_3__.default.on($container, _events_remove__WEBPACK_IMPORTED_MODULE_13__.removeEvent, dispose)
    },
    _getWatch: function() {
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(this._watch)) {
            var formInstance = this.option("form");
            this._watch = formInstance && formInstance.option("integrationOptions.watchMethod")
        }
        return this._watch
    },
    _createComponent: function($editor, type, editorOptions) {
        var readOnlyState = this.option("readOnly");
        var hasEditorReadOnly = Object.hasOwn(editorOptions, "readOnly");
        var instance = this.callBase($editor, type, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, editorOptions, {
            readOnly: !hasEditorReadOnly ? readOnlyState : editorOptions.readOnly
        }));
        var isChangeByForm = false;
        instance.on("optionChanged", args => {
            if ("readOnly" === args.name && !isChangeByForm) {
                hasEditorReadOnly = true
            }
        });
        this.on("optionChanged", (function(args) {
            if ("readOnly" === args.name && !hasEditorReadOnly) {
                isChangeByForm = true;
                instance.option(args.name, args.value);
                isChangeByForm = false
            }
        }));
        return instance
    },
    _generateRatio: function(count, isAutoSize) {
        var result = [];
        var ratio;
        var i;
        for (i = 0; i < count; i++) {
            ratio = {
                ratio: 1
            };
            if (isAutoSize) {
                ratio.baseSize = "auto"
            }
            result.push(ratio)
        }
        return result
    },
    _getRowsCount: function() {
        return Math.ceil(this._items.length / this._getColCount())
    },
    _updateReferencedOptions: function(newLayoutData) {
        var layoutData = this.option("layoutData");
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(layoutData)) {
            Object.getOwnPropertyNames(layoutData).forEach(property => delete this._optionsByReference["layoutData." + property])
        }
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(newLayoutData)) {
            Object.getOwnPropertyNames(newLayoutData).forEach(property => this._optionsByReference["layoutData." + property] = true)
        }
    },
    _resetWidget(instance) {
        this._disableEditorValueChangedHandler = true;
        instance.reset();
        this._disableEditorValueChangedHandler = false;
        instance.option("isValid", true)
    },
    _optionChanged(args) {
        if (0 === args.fullName.search("layoutData.")) {
            return
        }
        switch (args.name) {
            case "showRequiredMark":
            case "showOptionalMark":
            case "requiredMark":
            case "optionalMark":
                this._cashedRequiredConfig = null;
                this._invalidate();
                break;
            case "layoutData":
                this._updateReferencedOptions(args.value);
                if (this.option("items")) {
                    if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isEmptyObject)(args.value)) {
                        this._itemsRunTimeInfo.each((_, itemRunTimeInfo) => {
                            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(itemRunTimeInfo.item)) {
                                var dataField = itemRunTimeInfo.item.dataField;
                                if (dataField && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(itemRunTimeInfo.widgetInstance)) {
                                    var valueGetter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_12__.compileGetter)(dataField);
                                    var dataValue = valueGetter(args.value);
                                    var {
                                        allowIndeterminateState: allowIndeterminateState,
                                        editorType: editorType
                                    } = itemRunTimeInfo.item;
                                    if (void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled({
                                            allowIndeterminateState: allowIndeterminateState,
                                            editorType: editorType,
                                            dataField: dataField
                                        })) {
                                        itemRunTimeInfo.widgetInstance.option("value", dataValue)
                                    } else {
                                        this._resetWidget(itemRunTimeInfo.widgetInstance)
                                    }
                                }
                            }
                        })
                    }
                } else {
                    this._initDataAndItems(args.value);
                    this._invalidate()
                }
                break;
            case "items":
                this._cleanItemWatchers();
                this._initDataAndItems(args.value);
                this._invalidate();
                break;
            case "alignItemLabels":
            case "labelLocation":
            case "labelMode":
            case "requiredMessage":
                this._invalidate();
                break;
            case "customizeItem":
                this._updateItems(this.option("layoutData"));
                this._invalidate();
                break;
            case "colCount":
            case "colCountByScreen":
                this._resetColCount();
                break;
            case "minColWidth":
                if ("auto" === this.option("colCount")) {
                    this._resetColCount()
                }
                break;
            case "readOnly":
                break;
            case "width":
                this.callBase(args);
                if ("auto" === this.option("colCount")) {
                    this._resetColCount()
                }
                break;
            case "onFieldDataChanged":
                break;
            default:
                this.callBase(args)
        }
    },
    _resetColCount: function() {
        this._cashedColCount = null;
        this._invalidate()
    },
    linkEditorToDataField(editorInstance, dataField) {
        this.on("optionChanged", args => {
            if (args.fullName === "layoutData.".concat(dataField)) {
                editorInstance._setOptionWithoutOptionChange("value", args.value)
            }
        });
        editorInstance.on("valueChanged", args => {
            var isValueReferenceType = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(args.value) || Array.isArray(args.value);
            if (!this._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {
                this._updateFieldValue(dataField, args.value)
            }
        })
    },
    _dimensionChanged: function() {
        if ("auto" === this.option("colCount") && this.isCachedColCountObsolete()) {
            this._eventsStrategy.fireEvent("autoColCountChanged")
        }
    },
    updateData: function(data, value) {
        var that = this;
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(data)) {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__.each)(data, (function(dataField, fieldValue) {
                that._updateFieldValue(dataField, fieldValue)
            }))
        } else if ("string" === typeof data) {
            that._updateFieldValue(data, value)
        }
    },
    getEditor: function(field) {
        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field)
    },
    isSingleColumnMode: function(component) {
        var responsiveBox = this._responsiveBox || component;
        if (responsiveBox) {
            return responsiveBox.option("currentScreenFactor") === responsiveBox.option("singleColumnScreen")
        }
    },
    getItemsRunTimeInfo: function() {
        return this._itemsRunTimeInfo
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_5__.default)("dxLayoutManager", LayoutManager);
/* harmony default export */ __webpack_exports__["default"] = (LayoutManager);


/***/ }),

/***/ 8838:
/*!*****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/ui.form.layout_manager.utils.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EDITORS_WITHOUT_LABELS": function() { return /* binding */ EDITORS_WITHOUT_LABELS; },
/* harmony export */   "convertToRenderFieldItemOptions": function() { return /* binding */ convertToRenderFieldItemOptions; },
/* harmony export */   "getLabelMarkText": function() { return /* binding */ getLabelMarkText; },
/* harmony export */   "convertToLabelMarkOptions": function() { return /* binding */ convertToLabelMarkOptions; }
/* harmony export */ });
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_inflector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/inflector */ 75102);
/* harmony import */ var _core_guid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/guid */ 22203);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ 73833);
/**
 * DevExtreme (esm/ui/form/ui.form.layout_manager.utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */






var EDITORS_WITH_ARRAY_VALUE = ["dxTagBox", "dxRangeSlider"];
var EDITORS_WITHOUT_LABELS = ["dxCalendar", "dxCheckBox", "dxHtmlEditor", "dxRadioGroup", "dxRangeSlider", "dxSlider", "dxSwitch"];
function convertToRenderFieldItemOptions(_ref) {
    var {
        $parent: $parent,
        rootElementCssClassList: rootElementCssClassList,
        formOrLayoutManager: formOrLayoutManager,
        createComponentCallback: createComponentCallback,
        item: item,
        template: template,
        labelTemplate: labelTemplate,
        name: name,
        formLabelLocation: formLabelLocation,
        requiredMessageTemplate: requiredMessageTemplate,
        validationGroup: validationGroup,
        editorValue: editorValue,
        canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,
        editorValidationBoundary: editorValidationBoundary,
        editorStylingMode: editorStylingMode,
        showColonAfterLabel: showColonAfterLabel,
        managerLabelLocation: managerLabelLocation,
        itemId: itemId,
        managerMarkOptions: managerMarkOptions,
        labelMode: labelMode,
        onLabelTemplateRendered: onLabelTemplateRendered
    } = _ref;
    var isRequired = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(item.isRequired) ? item.isRequired : !!_hasRequiredRuleInSet(item.validationRules);
    var isSimpleItem = item.itemType === _constants__WEBPACK_IMPORTED_MODULE_5__.SIMPLE_ITEM_TYPE;
    var helpID = item.helpText ? "dx-" + new _core_guid__WEBPACK_IMPORTED_MODULE_4__.default : null;
    var labelOptions = _convertToLabelOptions({
        item: item,
        id: itemId,
        isRequired: isRequired,
        managerMarkOptions: managerMarkOptions,
        showColonAfterLabel: showColonAfterLabel,
        labelLocation: managerLabelLocation,
        formLabelMode: labelMode,
        labelTemplate: labelTemplate,
        onLabelTemplateRendered: onLabelTemplateRendered
    });
    var needRenderLabel = labelOptions.visible && (labelOptions.text || labelOptions.labelTemplate && isSimpleItem);
    var {
        location: labelLocation,
        labelID: labelID
    } = labelOptions;
    var labelNeedBaselineAlign = "top" !== labelLocation && ["dxTextArea", "dxRadioGroup", "dxCalendar", "dxHtmlEditor"].includes(item.editorType);
    var editorOptions = _convertToEditorOptions({
        editorType: item.editorType,
        editorValue: editorValue,
        defaultEditorName: item.dataField,
        canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,
        externalEditorOptions: item.editorOptions,
        editorInputId: itemId,
        editorValidationBoundary: editorValidationBoundary,
        editorStylingMode: editorStylingMode,
        formLabelMode: labelMode,
        labelText: labelOptions.textWithoutColon,
        labelMark: labelOptions.markOptions.showRequiredMark ? String.fromCharCode(160) + labelOptions.markOptions.requiredMark : ""
    });
    var needRenderOptionalMarkAsHelpText = labelOptions.markOptions.showOptionalMark && !labelOptions.visible && "hidden" !== editorOptions.labelMode && !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(item.helpText);
    var helpText = needRenderOptionalMarkAsHelpText ? labelOptions.markOptions.optionalMark : item.helpText;
    return {
        $parent: $parent,
        rootElementCssClassList: rootElementCssClassList,
        formOrLayoutManager: formOrLayoutManager,
        createComponentCallback: createComponentCallback,
        labelOptions: labelOptions,
        labelNeedBaselineAlign: labelNeedBaselineAlign,
        labelLocation: labelLocation,
        needRenderLabel: needRenderLabel,
        item: item,
        isSimpleItem: isSimpleItem,
        isRequired: isRequired,
        template: template,
        helpID: helpID,
        labelID: labelID,
        name: name,
        helpText: helpText,
        formLabelLocation: formLabelLocation,
        requiredMessageTemplate: requiredMessageTemplate,
        validationGroup: validationGroup,
        editorOptions: editorOptions
    }
}
function getLabelMarkText(_ref2) {
    var {
        showRequiredMark: showRequiredMark,
        requiredMark: requiredMark,
        showOptionalMark: showOptionalMark,
        optionalMark: optionalMark
    } = _ref2;
    if (!showRequiredMark && !showOptionalMark) {
        return ""
    }
    return String.fromCharCode(160) + (showRequiredMark ? requiredMark : optionalMark)
}
function convertToLabelMarkOptions(_ref3, isRequired) {
    var {
        showRequiredMark: showRequiredMark,
        requiredMark: requiredMark,
        showOptionalMark: showOptionalMark,
        optionalMark: optionalMark
    } = _ref3;
    return {
        showRequiredMark: showRequiredMark && isRequired,
        requiredMark: requiredMark,
        showOptionalMark: showOptionalMark && !isRequired,
        optionalMark: optionalMark
    }
}

function _convertToEditorOptions(_ref4) {
    var {
        editorType: editorType,
        defaultEditorName: defaultEditorName,
        editorValue: editorValue,
        canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,
        externalEditorOptions: externalEditorOptions,
        editorInputId: editorInputId,
        editorValidationBoundary: editorValidationBoundary,
        editorStylingMode: editorStylingMode,
        formLabelMode: formLabelMode,
        labelText: labelText,
        labelMark: labelMark
    } = _ref4;
    var editorOptionsWithValue = {};
    if (void 0 !== editorValue || canAssignUndefinedValueToEditor) {
        editorOptionsWithValue.value = editorValue
    }
    if (-1 !== EDITORS_WITH_ARRAY_VALUE.indexOf(editorType)) {
        editorOptionsWithValue.value = editorOptionsWithValue.value || []
    }
    var labelMode = null === externalEditorOptions || void 0 === externalEditorOptions ? void 0 : externalEditorOptions.labelMode;
    if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(labelMode)) {
        labelMode = "outside" === formLabelMode ? "hidden" : formLabelMode
    }
    var stylingMode = (null === externalEditorOptions || void 0 === externalEditorOptions ? void 0 : externalEditorOptions.stylingMode) || editorStylingMode;
    var result = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_0__.extend)(true, editorOptionsWithValue, externalEditorOptions, {
        inputAttr: {
            id: editorInputId
        },
        validationBoundary: editorValidationBoundary,
        stylingMode: stylingMode,
        label: labelText,
        labelMode: labelMode,
        labelMark: labelMark
    });
    if (externalEditorOptions) {
        if (result.dataSource) {
            result.dataSource = externalEditorOptions.dataSource
        }
        if (result.items) {
            result.items = externalEditorOptions.items
        }
    }
    if (defaultEditorName && !result.name) {
        result.name = defaultEditorName
    }
    return result
}

function _hasRequiredRuleInSet(rules) {
    var hasRequiredRule;
    if (rules && rules.length) {
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__.each)(rules, (function(index, rule) {
            if ("required" === rule.type) {
                hasRequiredRule = true;
                return false
            }
        }))
    }
    return hasRequiredRule
}

function _convertToLabelOptions(_ref5) {
    var {
        item: item,
        id: id,
        isRequired: isRequired,
        managerMarkOptions: managerMarkOptions,
        showColonAfterLabel: showColonAfterLabel,
        labelLocation: labelLocation,
        labelTemplate: labelTemplate,
        formLabelMode: formLabelMode,
        onLabelTemplateRendered: onLabelTemplateRendered
    } = _ref5;
    var isEditorWithoutLabels = EDITORS_WITHOUT_LABELS.includes(item.editorType);
    var labelOptions = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_0__.extend)({
        showColon: showColonAfterLabel,
        location: labelLocation,
        id: id,
        visible: "outside" === formLabelMode || isEditorWithoutLabels && "hidden" !== formLabelMode,
        isRequired: isRequired
    }, item ? item.label : {}, {
        markOptions: convertToLabelMarkOptions(managerMarkOptions, isRequired),
        labelTemplate: labelTemplate,
        onLabelTemplateRendered: onLabelTemplateRendered
    });
    if (["dxRadioGroup", "dxCheckBox", "dxLookup", "dxSlider", "dxRangeSlider", "dxSwitch", "dxHtmlEditor"].includes(item.editorType)) {
        labelOptions.labelID = "dx-label-".concat(new _core_guid__WEBPACK_IMPORTED_MODULE_4__.default)
    }
    if (!labelOptions.text && item.dataField) {
        labelOptions.text = (0,_core_utils_inflector__WEBPACK_IMPORTED_MODULE_3__.captionize)(item.dataField)
    }
    if (labelOptions.text) {
        labelOptions.textWithoutColon = labelOptions.text;
        labelOptions.text += labelOptions.showColon ? ":" : ""
    }
    return labelOptions
}


/***/ }),

/***/ 2034:
/*!**************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/form/ui.form.utils.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createItemPathByIndex": function() { return /* binding */ createItemPathByIndex; },
/* harmony export */   "concatPaths": function() { return /* binding */ concatPaths; },
/* harmony export */   "getTextWithoutSpaces": function() { return /* binding */ getTextWithoutSpaces; },
/* harmony export */   "isEqualToDataFieldOrNameOrTitleOrCaption": function() { return /* binding */ isEqualToDataFieldOrNameOrTitleOrCaption; },
/* harmony export */   "getFullOptionName": function() { return /* binding */ getFullOptionName; },
/* harmony export */   "getOptionNameFromFullName": function() { return /* binding */ getOptionNameFromFullName; },
/* harmony export */   "tryGetTabPath": function() { return /* binding */ tryGetTabPath; },
/* harmony export */   "isFullPathContainsTabs": function() { return /* binding */ isFullPathContainsTabs; },
/* harmony export */   "getItemPath": function() { return /* binding */ getItemPath; },
/* harmony export */   "convertToLayoutManagerOptions": function() { return /* binding */ convertToLayoutManagerOptions; }
/* harmony export */ });
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/**
 * DevExtreme (esm/ui/form/ui.form.utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var createItemPathByIndex = (index, isTabs) => "".concat(isTabs ? "tabs" : "items", "[").concat(index, "]");
var concatPaths = (path1, path2) => {
    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(path1) && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(path2)) {
        return "".concat(path1, ".").concat(path2)
    }
    return path1 || path2
};
var getTextWithoutSpaces = text => text ? text.replace(/\s/g, "") : void 0;
var isEqualToDataFieldOrNameOrTitleOrCaption = (item, fieldName) => {
    if (item) {
        return item.dataField === fieldName || item.name === fieldName || getTextWithoutSpaces(item.title) === fieldName || "group" === item.itemType && getTextWithoutSpaces(item.caption) === fieldName
    }
    return false
};
var getFullOptionName = (path, optionName) => "".concat(path, ".").concat(optionName);
var getOptionNameFromFullName = fullName => {
    var parts = fullName.split(".");
    return parts[parts.length - 1].replace(/\[\d+]/, "")
};
var tryGetTabPath = fullPath => {
    var pathParts = fullPath.split(".");
    var resultPathParts = [...pathParts];
    for (var i = pathParts.length - 1; i >= 0; i--) {
        if (isFullPathContainsTabs(pathParts[i])) {
            return resultPathParts.join(".")
        }
        resultPathParts.splice(i, 1)
    }
    return ""
};
var isFullPathContainsTabs = fullPath => fullPath.indexOf("tabs") > -1;
var getItemPath = (items, item, isTabs) => {
    var index = items.indexOf(item);
    if (index > -1) {
        return createItemPathByIndex(index, isTabs)
    }
    for (var i = 0; i < items.length; i++) {
        var targetItem = items[i];
        var tabOrGroupItems = targetItem.tabs || targetItem.items;
        if (tabOrGroupItems) {
            var itemPath = getItemPath(tabOrGroupItems, item, targetItem.tabs);
            if (itemPath) {
                return concatPaths(createItemPathByIndex(i, isTabs), itemPath)
            }
        }
    }
};
function convertToLayoutManagerOptions(_ref) {
    var {
        form: form,
        $formElement: $formElement,
        formOptions: formOptions,
        items: items,
        validationGroup: validationGroup,
        extendedLayoutManagerOptions: extendedLayoutManagerOptions,
        onFieldDataChanged: onFieldDataChanged,
        onContentReady: onContentReady,
        onDisposing: onDisposing,
        onFieldItemRendered: onFieldItemRendered
    } = _ref;
    var baseOptions = {
        form: form,
        items: items,
        $formElement: $formElement,
        validationGroup: validationGroup,
        onFieldDataChanged: onFieldDataChanged,
        onContentReady: onContentReady,
        onDisposing: onDisposing,
        onFieldItemRendered: onFieldItemRendered,
        validationBoundary: formOptions.scrollingEnabled ? $formElement : void 0,
        scrollingEnabled: formOptions.scrollingEnabled,
        showRequiredMark: formOptions.showRequiredMark,
        showOptionalMark: formOptions.showOptionalMark,
        requiredMark: formOptions.requiredMark,
        optionalMark: formOptions.optionalMark,
        requiredMessage: formOptions.requiredMessage,
        screenByWidth: formOptions.screenByWidth,
        layoutData: formOptions.formData,
        labelLocation: formOptions.labelLocation,
        customizeItem: formOptions.customizeItem,
        minColWidth: formOptions.minColWidth,
        showColonAfterLabel: formOptions.showColonAfterLabel,
        onEditorEnterKey: formOptions.onEditorEnterKey,
        labelMode: formOptions.labelMode
    };
    var result = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(baseOptions, {
        isRoot: extendedLayoutManagerOptions.isRoot,
        colCount: extendedLayoutManagerOptions.colCount,
        alignItemLabels: extendedLayoutManagerOptions.alignItemLabels,
        cssItemClass: extendedLayoutManagerOptions.cssItemClass,
        colCountByScreen: extendedLayoutManagerOptions.colCountByScreen,
        onLayoutChanged: extendedLayoutManagerOptions.onLayoutChanged,
        width: extendedLayoutManagerOptions.width
    });
    return result
}


/***/ }),

/***/ 19073:
/*!******************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/multi_view.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _animation_translator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../animation/translator */ 10829);
/* harmony import */ var _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./multi_view/ui.multi_view.animation */ 35646);
/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/utils/math */ 78148);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/utils/common */ 37552);
/* harmony import */ var _events_visibility_change__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../events/visibility_change */ 23495);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/element */ 60213);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/type */ 33275);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/devices */ 41881);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _collection_ui_collection_widget_live_update__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./collection/ui.collection_widget.live_update */ 61608);
/* harmony import */ var _events_gesture_swipeable__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../events/gesture/swipeable */ 50161);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../core/utils/deferred */ 97233);
/**
 * DevExtreme (esm/ui/multi_view.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */















var MULTIVIEW_CLASS = "dx-multiview";
var MULTIVIEW_WRAPPER_CLASS = "dx-multiview-wrapper";
var MULTIVIEW_ITEM_CONTAINER_CLASS = "dx-multiview-item-container";
var MULTIVIEW_ITEM_CLASS = "dx-multiview-item";
var MULTIVIEW_ITEM_HIDDEN_CLASS = "dx-multiview-item-hidden";
var MULTIVIEW_ITEM_DATA_KEY = "dxMultiViewItemData";
var MULTIVIEW_ANIMATION_DURATION = 200;
var toNumber = value => +value;
var position = $element => (0,_animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($element).left;
var MultiView = _collection_ui_collection_widget_live_update__WEBPACK_IMPORTED_MODULE_12__.default.inherit({
    _activeStateUnit: "." + MULTIVIEW_ITEM_CLASS,
    _supportedKeys: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this.callBase(), {
            pageUp: _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop,
            pageDown: _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop
        })
    },
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this.callBase(), {
            selectedIndex: 0,
            swipeEnabled: true,
            animationEnabled: true,
            loop: false,
            deferRendering: true,
            _itemAttributes: {
                role: "tabpanel"
            },
            loopItemFocus: false,
            selectOnFocus: true,
            selectionMode: "single",
            selectionRequired: true,
            selectionByClick: false
        })
    },
    _defaultOptionsRules: function() {
        return this.callBase().concat([{
            device: function() {
                return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_10__.default.real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_10__.default.isSimulator()
            },
            options: {
                focusStateEnabled: true
            }
        }])
    },
    _itemClass: function() {
        return MULTIVIEW_ITEM_CLASS
    },
    _itemDataKey: function() {
        return MULTIVIEW_ITEM_DATA_KEY
    },
    _itemContainer: function() {
        return this._$itemContainer
    },
    _itemElements: function() {
        return this._itemContainer().children(this._itemSelector())
    },
    _itemWidth: function() {
        if (!this._itemWidthValue) {
            this._itemWidthValue = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this._$wrapper)
        }
        return this._itemWidthValue
    },
    _clearItemWidthCache: function() {
        delete this._itemWidthValue
    },
    _itemsCount: function() {
        return this.option("items").length
    },
    _normalizeIndex: function(index) {
        var count = this._itemsCount();
        if (index < 0) {
            index += count
        }
        if (index >= count) {
            index -= count
        }
        return index
    },
    _getRTLSignCorrection: function() {
        return this.option("rtlEnabled") ? -1 : 1
    },
    _init: function() {
        this.callBase.apply(this, arguments);
        var $element = this.$element();
        $element.addClass(MULTIVIEW_CLASS);
        this._$wrapper = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(MULTIVIEW_WRAPPER_CLASS);
        this._$wrapper.appendTo($element);
        this._$itemContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(MULTIVIEW_ITEM_CONTAINER_CLASS);
        this._$itemContainer.appendTo(this._$wrapper);
        this.option("loopItemFocus", this.option("loop"));
        this._initSwipeable()
    },
    _initMarkup: function() {
        this._deferredItems = [];
        this.callBase();
        var selectedItemIndices = this._getSelectedItemIndices();
        this._updateItemsVisibility(selectedItemIndices[0])
    },
    _afterItemElementDeleted: function($item, deletedActionArgs) {
        this.callBase($item, deletedActionArgs);
        if (this._deferredItems) {
            this._deferredItems.splice(deletedActionArgs.itemIndex, 1)
        }
    },
    _beforeItemElementInserted: function(change) {
        this.callBase.apply(this, arguments);
        if (this._deferredItems) {
            this._deferredItems.splice(change.index, 0, null)
        }
    },
    _executeItemRenderAction: function(index, itemData, itemElement) {
        index = (this.option("items") || []).indexOf(itemData);
        this.callBase(index, itemData, itemElement)
    },
    _renderItemContent: function(args) {
        var renderContentDeferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_14__.Deferred;
        var that = this;
        var callBase = this.callBase;
        var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_14__.Deferred;
        deferred.done((function() {
            var $itemContent = callBase.call(that, args);
            renderContentDeferred.resolve($itemContent)
        }));
        this._deferredItems[args.index] = deferred;
        this.option("deferRendering") || deferred.resolve();
        return renderContentDeferred.promise()
    },
    _render: function() {
        this.callBase();
        (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_6__.deferRender)(() => {
            var selectedItemIndices = this._getSelectedItemIndices();
            this._updateItems(selectedItemIndices[0])
        })
    },
    _updateItems: function(selectedIndex, newIndex) {
        this._updateItemsPosition(selectedIndex, newIndex);
        this._updateItemsVisibility(selectedIndex, newIndex)
    },
    _modifyByChanges: function() {
        this.callBase.apply(this, arguments);
        var selectedItemIndices = this._getSelectedItemIndices();
        this._updateItemsVisibility(selectedItemIndices[0])
    },
    _updateItemsPosition: function(selectedIndex, newIndex) {
        var $itemElements = this._itemElements();
        var positionSign = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_9__.isDefined)(newIndex) ? -this._animationDirection(newIndex, selectedIndex) : void 0;
        var $selectedItem = $itemElements.eq(selectedIndex);
        _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__._translator.move($selectedItem, 0);
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_9__.isDefined)(newIndex)) {
            _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__._translator.move($itemElements.eq(newIndex), 100 * positionSign + "%")
        }
    },
    _updateItemsVisibility: function(selectedIndex, newIndex) {
        var $itemElements = this._itemElements();
        $itemElements.each(function(itemIndex, item) {
            var $item = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(item);
            var isHidden = itemIndex !== selectedIndex && itemIndex !== newIndex;
            if (!isHidden) {
                this._renderSpecificItem(itemIndex)
            }
            $item.toggleClass(MULTIVIEW_ITEM_HIDDEN_CLASS, isHidden);
            this.setAria("hidden", isHidden || void 0, $item)
        }.bind(this))
    },
    _renderSpecificItem: function(index) {
        var $item = this._itemElements().eq(index);
        var hasItemContent = $item.find(this._itemContentClass()).length > 0;
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_9__.isDefined)(index) && !hasItemContent) {
            this._deferredItems[index].resolve();
            (0,_events_visibility_change__WEBPACK_IMPORTED_MODULE_7__.triggerResizeEvent)($item)
        }
    },
    _refreshItem: function($item, item) {
        this.callBase($item, item);
        this._updateItemsVisibility(this.option("selectedIndex"))
    },
    _setAriaSelected: _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop,
    _updateSelection: function(addedSelection, removedSelection) {
        var newIndex = addedSelection[0];
        var prevIndex = removedSelection[0];
        _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__.animation.complete(this._$itemContainer);
        this._updateItems(prevIndex, newIndex);
        var animationDirection = this._animationDirection(newIndex, prevIndex);
        this._animateItemContainer(animationDirection * this._itemWidth(), function() {
            _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__._translator.move(this._$itemContainer, 0);
            this._updateItems(newIndex);
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this._$itemContainer)
        }.bind(this))
    },
    _animateItemContainer: function(position, completeCallback) {
        var duration = this.option("animationEnabled") ? MULTIVIEW_ANIMATION_DURATION : 0;
        _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__.animation.moveTo(this._$itemContainer, position, duration, completeCallback)
    },
    _animationDirection: function(newIndex, prevIndex) {
        var containerPosition = position(this._$itemContainer);
        var indexDifference = (prevIndex - newIndex) * this._getRTLSignCorrection() * this._getItemFocusLoopSignCorrection();
        var isSwipePresent = 0 !== containerPosition;
        var directionSignVariable = isSwipePresent ? containerPosition : indexDifference;
        return (0,_core_utils_math__WEBPACK_IMPORTED_MODULE_4__.sign)(directionSignVariable)
    },
    _getSwipeDisabledState() {
        return !this.option("swipeEnabled") || this._itemsCount() <= 1
    },
    _initSwipeable() {
        this._createComponent(this.$element(), _events_gesture_swipeable__WEBPACK_IMPORTED_MODULE_13__.default, {
            disabled: this._getSwipeDisabledState(),
            elastic: false,
            itemSizeFunc: this._itemWidth.bind(this),
            onStart: args => this._swipeStartHandler(args.event),
            onUpdated: args => this._swipeUpdateHandler(args.event),
            onEnd: args => this._swipeEndHandler(args.event)
        })
    },
    _swipeStartHandler: function(e) {
        _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__.animation.complete(this._$itemContainer);
        var selectedIndex = this.option("selectedIndex");
        var loop = this.option("loop");
        var lastIndex = this._itemsCount() - 1;
        var rtl = this.option("rtlEnabled");
        e.maxLeftOffset = toNumber(loop || (rtl ? selectedIndex > 0 : selectedIndex < lastIndex));
        e.maxRightOffset = toNumber(loop || (rtl ? selectedIndex < lastIndex : selectedIndex > 0));
        this._swipeDirection = null
    },
    _swipeUpdateHandler: function(e) {
        var offset = e.offset;
        var swipeDirection = (0,_core_utils_math__WEBPACK_IMPORTED_MODULE_4__.sign)(offset) * this._getRTLSignCorrection();
        _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__._translator.move(this._$itemContainer, offset * this._itemWidth());
        if (swipeDirection !== this._swipeDirection) {
            this._swipeDirection = swipeDirection;
            var selectedIndex = this.option("selectedIndex");
            var newIndex = this._normalizeIndex(selectedIndex - swipeDirection);
            this._updateItems(selectedIndex, newIndex)
        }
    },
    _swipeEndHandler: function(e) {
        var targetOffset = e.targetOffset * this._getRTLSignCorrection();
        if (targetOffset) {
            this.option("selectedIndex", this._normalizeIndex(this.option("selectedIndex") - targetOffset));
            var $selectedElement = this.itemElements().filter(".dx-item-selected");
            this.option("focusStateEnabled") && this.option("focusedElement", (0,_core_element__WEBPACK_IMPORTED_MODULE_8__.getPublicElement)($selectedElement))
        } else {
            this._animateItemContainer(0, _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop)
        }
    },
    _getItemFocusLoopSignCorrection: function() {
        return this._itemFocusLooped ? -1 : 1
    },
    _moveFocus: function() {
        this.callBase.apply(this, arguments);
        this._itemFocusLooped = false
    },
    _prevItem: function($items) {
        var $result = this.callBase.apply(this, arguments);
        this._itemFocusLooped = $result.is($items.last());
        return $result
    },
    _nextItem: function($items) {
        var $result = this.callBase.apply(this, arguments);
        this._itemFocusLooped = $result.is($items.first());
        return $result
    },
    _dimensionChanged: function() {
        this._clearItemWidthCache()
    },
    _visibilityChanged: function(visible) {
        if (visible) {
            this._dimensionChanged()
        }
    },
    _updateSwipeDisabledState() {
        var disabled = this._getSwipeDisabledState();
        _events_gesture_swipeable__WEBPACK_IMPORTED_MODULE_13__.default.getInstance(this.$element()).option("disabled", disabled)
    },
    _optionChanged: function(args) {
        var value = args.value;
        switch (args.name) {
            case "loop":
                this.option("loopItemFocus", value);
                break;
            case "animationEnabled":
                break;
            case "swipeEnabled":
                this._updateSwipeDisabledState();
                break;
            case "deferRendering":
                this._invalidate();
                break;
            case "items":
                this._updateSwipeDisabledState();
                this.callBase(args);
                break;
            default:
                this.callBase(args)
        }
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_11__.default)("dxMultiView", MultiView);
/* harmony default export */ __webpack_exports__["default"] = (MultiView);


/***/ }),

/***/ 35646:
/*!******************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/multi_view/ui.multi_view.animation.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_translator": function() { return /* binding */ _translator; },
/* harmony export */   "animation": function() { return /* binding */ animation; }
/* harmony export */ });
/* harmony import */ var _animation_fx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../animation/fx */ 65736);
/* harmony import */ var _animation_translator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../animation/translator */ 10829);
/**
 * DevExtreme (esm/ui/multi_view/ui.multi_view.animation.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _translator = {
    move($element, position) {
        (0,_animation_translator__WEBPACK_IMPORTED_MODULE_1__.move)($element, {
            left: position
        })
    }
};
var animation = {
    moveTo($element, position, duration, completeAction) {
        _animation_fx__WEBPACK_IMPORTED_MODULE_0__.default.animate($element, {
            type: "slide",
            to: {
                left: position
            },
            duration: duration,
            complete: completeAction
        })
    },
    complete($element) {
        _animation_fx__WEBPACK_IMPORTED_MODULE_0__.default.stop($element, true)
    }
};


/***/ }),

/***/ 77621:
/*!*******************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/popover/popover_position_controller.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PopoverPositionController": function() { return /* binding */ PopoverPositionController; },
/* harmony export */   "POPOVER_POSITION_ALIASES": function() { return /* binding */ POPOVER_POSITION_ALIASES; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _animation_position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../animation/position */ 85094);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/common */ 37552);
/* harmony import */ var _renovation_ui_resizable_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../renovation/ui/resizable/utils */ 61960);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/size */ 84167);
/* harmony import */ var _overlay_overlay_position_controller__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../overlay/overlay_position_controller */ 64916);
/**
 * DevExtreme (esm/ui/popover/popover_position_controller.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["shading", "target", "$arrow"];







var WEIGHT_OF_SIDES = {
    left: -1,
    top: -1,
    center: 0,
    right: 1,
    bottom: 1
};
var POPOVER_POSITION_ALIASES = {
    top: {
        my: "bottom center",
        at: "top center",
        collision: "fit flip"
    },
    bottom: {
        my: "top center",
        at: "bottom center",
        collision: "fit flip"
    },
    right: {
        my: "left center",
        at: "right center",
        collision: "flip fit"
    },
    left: {
        my: "right center",
        at: "left center",
        collision: "flip fit"
    }
};
var POPOVER_DEFAULT_BOUNDARY_OFFSET = {
    h: 10,
    v: 10
};
class PopoverPositionController extends _overlay_overlay_position_controller__WEBPACK_IMPORTED_MODULE_8__.OverlayPositionController {
    constructor(_ref) {
        var {
            shading: shading,
            target: target,
            $arrow: $arrow
        } = _ref, args = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_ref, _excluded);
        super(args);
        this._props = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this._props, {
            shading: shading,
            target: target
        });
        this._$arrow = $arrow;
        this._positionSide = void 0;
        this.updatePosition(this._props.position)
    }
    positionWrapper() {
        if (this._props.shading) {
            this._$wrapper.css({
                top: 0,
                left: 0
            })
        }
    }
    updateTarget(target) {
        this._props.target = target;
        this.updatePosition(this._props.position)
    }
    _renderBoundaryOffset() {}
    _getContainerPosition() {
        var offset = (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_5__.pairToObject)(this._position.offset || "");
        var {
            h: hOffset,
            v: vOffset
        } = offset;
        var isVerticalSide = this._isVerticalSide();
        var isHorizontalSide = this._isHorizontalSide();
        if (isVerticalSide || isHorizontalSide) {
            var isPopoverInside = this._isPopoverInside();
            var sign = (isPopoverInside ? -1 : 1) * WEIGHT_OF_SIDES[this._positionSide];
            var arrowSize = isVerticalSide ? (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_7__.getHeight)(this._$arrow) : (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_7__.getWidth)(this._$arrow);
            var arrowSizeCorrection = this._getContentBorderWidth(this._positionSide);
            var arrowOffset = sign * (arrowSize - arrowSizeCorrection);
            isVerticalSide ? vOffset += arrowOffset : hOffset += arrowOffset
        }
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)({}, this._position, {
            offset: hOffset + " " + vOffset
        })
    }
    _getContentBorderWidth(side) {
        var borderWidth = this._$content.css(_renovation_ui_resizable_utils__WEBPACK_IMPORTED_MODULE_6__.borderWidthStyles[side]);
        return parseInt(borderWidth) || 0
    }
    _isPopoverInside() {
        var my = _animation_position__WEBPACK_IMPORTED_MODULE_4__.default.setup.normalizeAlign(this._position.my);
        var at = _animation_position__WEBPACK_IMPORTED_MODULE_4__.default.setup.normalizeAlign(this._position.at);
        return my.h === at.h && my.v === at.v
    }
    _isVerticalSide() {
        var side = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._positionSide;
        return "top" === side || "bottom" === side
    }
    _isHorizontalSide() {
        var side = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._positionSide;
        return "left" === side || "right" === side
    }
    _getDisplaySide(position) {
        var my = _animation_position__WEBPACK_IMPORTED_MODULE_4__.default.setup.normalizeAlign(position.my);
        var at = _animation_position__WEBPACK_IMPORTED_MODULE_4__.default.setup.normalizeAlign(position.at);
        var weightSign = WEIGHT_OF_SIDES[my.h] === WEIGHT_OF_SIDES[at.h] && WEIGHT_OF_SIDES[my.v] === WEIGHT_OF_SIDES[at.v] ? -1 : 1;
        var horizontalWeight = Math.abs(WEIGHT_OF_SIDES[my.h] - weightSign * WEIGHT_OF_SIDES[at.h]);
        var verticalWeight = Math.abs(WEIGHT_OF_SIDES[my.v] - weightSign * WEIGHT_OF_SIDES[at.v]);
        return horizontalWeight > verticalWeight ? at.h : at.v
    }
    _normalizePosition(positionProp) {
        var defaultPositionConfig = {
            of: this._props.target,
            boundaryOffset: POPOVER_DEFAULT_BOUNDARY_OFFSET
        };
        var resultPosition;
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(positionProp)) {
            resultPosition = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(true, {}, defaultPositionConfig, this._positionToObject(positionProp))
        } else {
            resultPosition = defaultPositionConfig
        }
        this._positionSide = this._getDisplaySide(resultPosition);
        return resultPosition
    }
    _positionToObject(positionProp) {
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isString)(positionProp)) {
            return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)({}, POPOVER_POSITION_ALIASES[positionProp])
        }
        return positionProp
    }
}



/***/ }),

/***/ 23679:
/*!**************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/popover/ui.popover.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/window */ 88684);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/element */ 60213);
/* harmony import */ var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/dom_adapter */ 81113);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../events/core/events_engine */ 99064);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/component_registrator */ 2382);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _animation_translator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../animation/translator */ 10829);
/* harmony import */ var _animation_position__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../animation/position */ 85094);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/math */ 78148);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../events/utils/index */ 3151);
/* harmony import */ var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../widget/ui.errors */ 42491);
/* harmony import */ var _popup_ui_popup__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../popup/ui.popup */ 23772);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/position */ 9622);
/* harmony import */ var _popover_position_controller__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./popover_position_controller */ 77621);
/**
 * DevExtreme (esm/ui/popover/ui.popover.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

















var POPOVER_CLASS = "dx-popover";
var POPOVER_WRAPPER_CLASS = "dx-popover-wrapper";
var POPOVER_ARROW_CLASS = "dx-popover-arrow";
var POPOVER_WITHOUT_TITLE_CLASS = "dx-popover-without-title";
var POSITION_FLIP_MAP = {
    left: "right",
    top: "bottom",
    right: "left",
    bottom: "top",
    center: "center"
};
var getEventNameByOption = function(optionValue) {
    return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_10__.isObject)(optionValue) ? optionValue.name : optionValue
};
var getEventName = function(that, optionName) {
    var optionValue = that.option(optionName);
    return getEventNameByOption(optionValue)
};
var getEventDelay = function(that, optionName) {
    var optionValue = that.option(optionName);
    return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_10__.isObject)(optionValue) && optionValue.delay
};
var attachEvent = function(that, name) {
    var {
        target: target,
        shading: shading,
        disabled: disabled,
        hideEvent: hideEvent
    } = that.option();
    var isSelector = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_10__.isString)(target);
    var shouldIgnoreHideEvent = shading && "hide" === name;
    var event = shouldIgnoreHideEvent ? null : getEventName(that, "".concat(name, "Event"));
    if (shouldIgnoreHideEvent && hideEvent) {
        _widget_ui_errors__WEBPACK_IMPORTED_MODULE_13__.default.log("W1020")
    }
    if (!event || disabled) {
        return
    }
    var eventName = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_12__.addNamespace)(event, that.NAME);
    var action = that._createAction(function() {
        var delay = getEventDelay(that, name + "Event");
        this._clearEventsTimeouts();
        if (delay) {
            this._timeouts[name] = setTimeout((function() {
                that[name]()
            }), delay)
        } else {
            that[name]()
        }
    }.bind(that), {
        validatingTargetName: "target"
    });
    var handler = function(e) {
        action({
            event: e,
            target: (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(e.currentTarget)
        })
    };
    var EVENT_HANDLER_NAME = "_" + name + "EventHandler";
    if (isSelector) {
        that[EVENT_HANDLER_NAME] = handler;
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_5__.default.on(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__.default.getDocument(), eventName, target, handler)
    } else {
        var targetElement = (0,_core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(target));
        that[EVENT_HANDLER_NAME] = void 0;
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_5__.default.on(targetElement, eventName, handler)
    }
};
var detachEvent = function(that, target, name, event) {
    var eventName = event || getEventName(that, name + "Event");
    if (!eventName) {
        return
    }
    eventName = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_12__.addNamespace)(eventName, that.NAME);
    var EVENT_HANDLER_NAME = "_" + name + "EventHandler";
    if (that[EVENT_HANDLER_NAME]) {
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_5__.default.off(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__.default.getDocument(), eventName, target, that[EVENT_HANDLER_NAME])
    } else {
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_5__.default.off((0,_core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(target)), eventName)
    }
};
var Popover = _popup_ui_popup__WEBPACK_IMPORTED_MODULE_14__.default.inherit({
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(this.callBase(), {
            target: void 0,
            shading: false,
            position: (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)({}, _popover_position_controller__WEBPACK_IMPORTED_MODULE_16__.POPOVER_POSITION_ALIASES.bottom),
            hideOnOutsideClick: true,
            animation: {
                show: {
                    type: "fade",
                    from: 0,
                    to: 1
                },
                hide: {
                    type: "fade",
                    from: 1,
                    to: 0
                }
            },
            showTitle: false,
            width: "auto",
            height: "auto",
            dragEnabled: false,
            resizeEnabled: false,
            fullScreen: false,
            hideOnParentScroll: true,
            arrowPosition: "",
            arrowOffset: 0,
            _fixWrapperPosition: true
        })
    },
    _defaultOptionsRules: function() {
        return [{
            device: {
                platform: "ios"
            },
            options: {
                arrowPosition: {
                    boundaryOffset: {
                        h: 20,
                        v: -10
                    },
                    collision: "fit"
                }
            }
        }, {
            device: function() {
                return !(0,_core_utils_window__WEBPACK_IMPORTED_MODULE_2__.hasWindow)()
            },
            options: {
                animation: null
            }
        }]
    },
    _init: function() {
        this.callBase();
        this._renderArrow();
        this._timeouts = {};
        this.$element().addClass(POPOVER_CLASS);
        this.$wrapper().addClass(POPOVER_WRAPPER_CLASS)
    },
    _render: function() {
        this.callBase.apply(this, arguments);
        this._detachEvents(this.option("target"));
        this._attachEvents()
    },
    _detachEvents: function(target) {
        detachEvent(this, target, "show");
        detachEvent(this, target, "hide")
    },
    _attachEvents: function() {
        attachEvent(this, "show");
        attachEvent(this, "hide")
    },
    _renderArrow: function() {
        this._$arrow = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(POPOVER_ARROW_CLASS).prependTo(this.$overlayContent())
    },
    _documentDownHandler: function(e) {
        if (this._isOutsideClick(e)) {
            return this.callBase(e)
        }
        return true
    },
    _isOutsideClick: function(e) {
        return !(0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(e.target).closest(this.option("target")).length
    },
    _animate: function(animation) {
        if (animation && animation.to && "object" === typeof animation.to) {
            (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(animation.to, {
                position: this._getContainerPosition()
            })
        }
        this.callBase.apply(this, arguments)
    },
    _stopAnimation: function() {
        this.callBase.apply(this, arguments)
    },
    _renderTitle: function() {
        this.$wrapper().toggleClass(POPOVER_WITHOUT_TITLE_CLASS, !this.option("showTitle"));
        this.callBase()
    },
    _renderPosition: function() {
        var shouldUpdateDimensions = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;
        this.callBase();
        this._renderOverlayPosition(shouldUpdateDimensions);
        this._actions.onPositioned()
    },
    _renderOverlayPosition: function(shouldUpdateDimensions) {
        this._resetOverlayPosition(shouldUpdateDimensions);
        this._updateContentSize(shouldUpdateDimensions);
        var contentPosition = this._getContainerPosition();
        var resultLocation = _animation_position__WEBPACK_IMPORTED_MODULE_9__.default.setup(this.$overlayContent(), contentPosition);
        var positionSide = this._getSideByLocation(resultLocation);
        this._togglePositionClass("dx-position-" + positionSide);
        this._toggleFlippedClass(resultLocation.h.flip, resultLocation.v.flip);
        var isArrowVisible = this._isHorizontalSide() || this._isVerticalSide();
        if (isArrowVisible) {
            this._renderArrowPosition(positionSide)
        }
    },
    _resetOverlayPosition: function(shouldUpdateDimensions) {
        this._setContentHeight(shouldUpdateDimensions);
        this._togglePositionClass("dx-position-" + this._positionController._positionSide);
        (0,_animation_translator__WEBPACK_IMPORTED_MODULE_8__.move)(this.$overlayContent(), {
            left: 0,
            top: 0
        });
        this._$arrow.css({
            top: "auto",
            right: "auto",
            bottom: "auto",
            left: "auto"
        })
    },
    _updateContentSize: function(shouldUpdateDimensions) {
        if (!this.$content() || !shouldUpdateDimensions) {
            return
        }
        var containerLocation = _animation_position__WEBPACK_IMPORTED_MODULE_9__.default.calculate(this.$overlayContent(), this._getContainerPosition());
        if (containerLocation.h.oversize > 0 && this._isHorizontalSide() && !containerLocation.h.fit) {
            var newContainerWidth = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this.$overlayContent()) - containerLocation.h.oversize;
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setWidth)(this.$overlayContent(), newContainerWidth)
        }
        if (containerLocation.v.oversize > 0 && this._isVerticalSide() && !containerLocation.v.fit) {
            var newOverlayContentHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)(this.$overlayContent()) - containerLocation.v.oversize;
            var newPopupContentHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)(this.$content()) - containerLocation.v.oversize;
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setHeight)(this.$overlayContent(), newOverlayContentHeight);
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setHeight)(this.$content(), newPopupContentHeight)
        }
    },
    _getContainerPosition: function() {
        return this._positionController._getContainerPosition()
    },
    _hideOnParentScrollTarget: function() {
        return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(this._positionController._position.of || this.callBase())
    },
    _getSideByLocation: function(location) {
        var isFlippedByVertical = location.v.flip;
        var isFlippedByHorizontal = location.h.flip;
        return this._isVerticalSide() && isFlippedByVertical || this._isHorizontalSide() && isFlippedByHorizontal || this._isPopoverInside() ? POSITION_FLIP_MAP[this._positionController._positionSide] : this._positionController._positionSide
    },
    _togglePositionClass: function(positionClass) {
        this.$wrapper().removeClass("dx-position-left dx-position-right dx-position-top dx-position-bottom").addClass(positionClass)
    },
    _toggleFlippedClass: function(isFlippedHorizontal, isFlippedVertical) {
        this.$wrapper().toggleClass("dx-popover-flipped-horizontal", isFlippedHorizontal).toggleClass("dx-popover-flipped-vertical", isFlippedVertical)
    },
    _renderArrowPosition: function(side) {
        var arrowRect = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_15__.getBoundingRect)(this._$arrow.get(0));
        var arrowFlip = -(this._isVerticalSide(side) ? arrowRect.height : arrowRect.width);
        this._$arrow.css(POSITION_FLIP_MAP[side], arrowFlip);
        var axis = this._isVerticalSide(side) ? "left" : "top";
        var sizeProperty = this._isVerticalSide(side) ? "width" : "height";
        var $target = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(this._positionController._position.of);
        var targetOffset = _animation_position__WEBPACK_IMPORTED_MODULE_9__.default.offset($target) || {
            top: 0,
            left: 0
        };
        var contentOffset = _animation_position__WEBPACK_IMPORTED_MODULE_9__.default.offset(this.$overlayContent());
        var arrowSize = arrowRect[sizeProperty];
        var contentLocation = contentOffset[axis];
        var contentSize = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_15__.getBoundingRect)(this.$overlayContent().get(0))[sizeProperty];
        var targetLocation = targetOffset[axis];
        var targetElement = $target.get(0);
        var targetSize = targetElement && !targetElement.preventDefault ? (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_15__.getBoundingRect)(targetElement)[sizeProperty] : 0;
        var min = Math.max(contentLocation, targetLocation);
        var max = Math.min(contentLocation + contentSize, targetLocation + targetSize);
        var arrowLocation;
        if ("start" === this.option("arrowPosition")) {
            arrowLocation = min - contentLocation
        } else if ("end" === this.option("arrowPosition")) {
            arrowLocation = max - contentLocation - arrowSize
        } else {
            arrowLocation = (min + max) / 2 - contentLocation - arrowSize / 2
        }
        var borderWidth = this._positionController._getContentBorderWidth(side);
        var finalArrowLocation = (0,_core_utils_math__WEBPACK_IMPORTED_MODULE_11__.fitIntoRange)(arrowLocation - borderWidth + this.option("arrowOffset"), borderWidth, contentSize - arrowSize - 2 * borderWidth);
        this._$arrow.css(axis, finalArrowLocation)
    },
    _isPopoverInside: function() {
        return this._positionController._isPopoverInside()
    },
    _setContentHeight: function(fullUpdate) {
        if (fullUpdate) {
            this.callBase()
        }
    },
    _getPositionControllerConfig() {
        var {
            shading: shading,
            target: target
        } = this.option();
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)({}, this.callBase(), {
            target: target,
            shading: shading,
            $arrow: this._$arrow
        })
    },
    _initPositionController() {
        this._positionController = new _popover_position_controller__WEBPACK_IMPORTED_MODULE_16__.PopoverPositionController(this._getPositionControllerConfig())
    },
    _renderWrapperDimensions: function() {
        if (this.option("shading")) {
            this.$wrapper().css({
                width: "100%",
                height: "100%"
            })
        }
    },
    _isVerticalSide: function(side) {
        return this._positionController._isVerticalSide(side)
    },
    _isHorizontalSide: function(side) {
        return this._positionController._isHorizontalSide(side)
    },
    _clearEventTimeout: function(name) {
        clearTimeout(this._timeouts[name])
    },
    _clearEventsTimeouts: function() {
        this._clearEventTimeout("show");
        this._clearEventTimeout("hide")
    },
    _clean: function() {
        this._detachEvents(this.option("target"));
        this.callBase.apply(this, arguments)
    },
    _optionChanged: function(args) {
        switch (args.name) {
            case "arrowPosition":
            case "arrowOffset":
                this._renderGeometry();
                break;
            case "fullScreen":
                if (args.value) {
                    this.option("fullScreen", false)
                }
                break;
            case "target":
                args.previousValue && this._detachEvents(args.previousValue);
                this._positionController.updateTarget(args.value);
                this._invalidate();
                break;
            case "showEvent":
            case "hideEvent":
                var name = args.name.substring(0, 4);
                var event = getEventNameByOption(args.previousValue);
                this.hide();
                detachEvent(this, this.option("target"), name, event);
                attachEvent(this, name);
                break;
            case "visible":
                this._clearEventTimeout(args.value ? "show" : "hide");
                this.callBase(args);
                break;
            default:
                this.callBase(args)
        }
    },
    show: function(target) {
        if (target) {
            this.option("target", target)
        }
        return this.callBase()
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_6__.default)("dxPopover", Popover);
/* harmony default export */ __webpack_exports__["default"] = (Popover);


/***/ }),

/***/ 24113:
/*!*************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/popup.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _popup_ui_popup_full__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./popup/ui.popup.full */ 34410);
/**
 * DevExtreme (esm/ui/popup.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

/* harmony default export */ __webpack_exports__["default"] = (_popup_ui_popup_full__WEBPACK_IMPORTED_MODULE_0__.default);


/***/ }),

/***/ 34410:
/*!***************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/popup/ui.popup.full.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ PopupFull; }
/* harmony export */ });
/* harmony import */ var _toolbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../toolbar */ 8866);
/* harmony import */ var _popup_ui_popup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../popup/ui.popup */ 23772);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/component_registrator */ 2382);
/**
 * DevExtreme (esm/ui/popup/ui.popup.full.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class PopupFull extends _popup_ui_popup__WEBPACK_IMPORTED_MODULE_1__.default {
    _getToolbarName() {
        return "dxToolbar"
    }
}
PopupFull.defaultOptions = function(rule) {
    _popup_ui_popup__WEBPACK_IMPORTED_MODULE_1__.default.defaultOptions(rule)
};
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_2__.default)("dxPopup", PopupFull);


/***/ }),

/***/ 97044:
/*!*******************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/radio_group.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _radio_group_radio_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./radio_group/radio_group */ 52522);
/**
 * DevExtreme (esm/ui/radio_group.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

/* harmony default export */ __webpack_exports__["default"] = (_radio_group_radio_group__WEBPACK_IMPORTED_MODULE_0__.default);


/***/ }),

/***/ 52522:
/*!*******************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/radio_group/radio_group.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/devices */ 41881);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/common */ 37552);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/component_registrator */ 2382);
/* harmony import */ var _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../collection/ui.collection_widget.edit */ 2076);
/* harmony import */ var _editor_ui_data_expression__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../editor/ui.data_expression */ 28084);
/* harmony import */ var _editor_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../editor/editor */ 68016);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/deferred */ 97233);
/**
 * DevExtreme (esm/ui/radio_group/radio_group.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */










var RADIO_BUTTON_CHECKED_CLASS = "dx-radiobutton-checked";
var RADIO_BUTTON_CLASS = "dx-radiobutton";
var RADIO_BUTTON_ICON_CHECKED_CLASS = "dx-radiobutton-icon-checked";
var RADIO_BUTTON_ICON_CLASS = "dx-radiobutton-icon";
var RADIO_BUTTON_ICON_DOT_CLASS = "dx-radiobutton-icon-dot";
var RADIO_GROUP_HORIZONTAL_CLASS = "dx-radiogroup-horizontal";
var RADIO_GROUP_VERTICAL_CLASS = "dx-radiogroup-vertical";
var RADIO_VALUE_CONTAINER_CLASS = "dx-radio-value-container";
var RADIO_GROUP_CLASS = "dx-radiogroup";
var RADIO_FEEDBACK_HIDE_TIMEOUT = 100;
class RadioCollection extends _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_6__.default {
    _focusTarget() {
        return this.$element().parent()
    }
    _nullValueSelectionSupported() {
        return true
    }
    _getDefaultOptions() {
        var defaultOptions = super._getDefaultOptions();
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(defaultOptions, _editor_ui_data_expression__WEBPACK_IMPORTED_MODULE_7__.default._dataExpressionDefaultOptions(), {
            _itemAttributes: {
                role: "radio"
            }
        })
    }
    _initMarkup() {
        super._initMarkup();
        (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.deferRender)(() => {
            this.itemElements().addClass(RADIO_BUTTON_CLASS)
        })
    }
    _keyboardEventBindingTarget() {
        return this._focusTarget()
    }
    _postprocessRenderItem(args) {
        var {
            itemData: {
                html: html
            },
            itemElement: itemElement
        } = args;
        if (!html) {
            var $radio = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(RADIO_BUTTON_ICON_CLASS);
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(RADIO_BUTTON_ICON_DOT_CLASS).appendTo($radio);
            var $radioContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").append($radio).addClass(RADIO_VALUE_CONTAINER_CLASS);
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(itemElement).prepend($radioContainer)
        }
        super._postprocessRenderItem(args)
    }
    _processSelectableItem($itemElement, isSelected) {
        super._processSelectableItem($itemElement, isSelected);
        $itemElement.toggleClass(RADIO_BUTTON_CHECKED_CLASS, isSelected).find(".".concat(RADIO_BUTTON_ICON_CLASS)).first().toggleClass(RADIO_BUTTON_ICON_CHECKED_CLASS, isSelected);
        this.setAria("checked", isSelected, $itemElement)
    }
    _refreshContent() {
        this._prepareContent();
        this._renderContent()
    }
    _supportedKeys() {
        var parent = super._supportedKeys();
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)({}, parent, {
            enter: function(e) {
                e.preventDefault();
                return parent.enter.apply(this, arguments)
            },
            space: function(e) {
                e.preventDefault();
                return parent.space.apply(this, arguments)
            }
        })
    }
    _itemElements() {
        return this._itemContainer().children(this._itemSelector())
    }
    _setAriaSelected() {}
}
class RadioGroup extends _editor_editor__WEBPACK_IMPORTED_MODULE_8__.default {
    _dataSourceOptions() {
        return {
            paginate: false
        }
    }
    _defaultOptionsRules() {
        var defaultOptionsRules = super._defaultOptionsRules();
        return defaultOptionsRules.concat([{
            device: {
                tablet: true
            },
            options: {
                layout: "horizontal"
            }
        }, {
            device: () => "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_2__.default.real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_2__.default.isSimulator(),
            options: {
                focusStateEnabled: true
            }
        }])
    }
    _fireContentReadyAction(force) {
        force && super._fireContentReadyAction()
    }
    _focusTarget() {
        return this.$element()
    }
    _getAriaTarget() {
        return this.$element()
    }
    _getDefaultOptions() {
        var defaultOptions = super._getDefaultOptions();
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(defaultOptions, (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(_editor_ui_data_expression__WEBPACK_IMPORTED_MODULE_7__.default._dataExpressionDefaultOptions(), {
            hoverStateEnabled: true,
            activeStateEnabled: true,
            layout: "vertical"
        }))
    }
    _getItemValue(item) {
        return this._valueGetter ? this._valueGetter(item) : item.text
    }
    _getSubmitElement() {
        return this._$submitElement
    }
    _init() {
        super._init();
        this._activeStateUnit = ".".concat(RADIO_BUTTON_CLASS);
        this._feedbackHideTimeout = RADIO_FEEDBACK_HIDE_TIMEOUT;
        this._initDataExpressions()
    }
    _initMarkup() {
        this.$element().addClass(RADIO_GROUP_CLASS);
        this._renderSubmitElement();
        this.setAria("role", "radiogroup");
        this._renderRadios();
        this._renderLayout();
        super._initMarkup()
    }
    _itemClickHandler(_ref) {
        var {
            itemElement: itemElement,
            event: event,
            itemData: itemData
        } = _ref;
        if (this.itemElements().is(itemElement)) {
            var newValue = this._getItemValue(itemData);
            if (newValue !== this.option("value")) {
                this._saveValueChangeEvent(event);
                this.option("value", newValue)
            }
        }
    }
    _getSelectedItemKeys() {
        var value = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.option("value");
        var isNullSelectable = "this" !== this.option("valueExpr");
        var shouldSelectValue = isNullSelectable && null === value || (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isDefined)(value);
        return shouldSelectValue ? [value] : []
    }
    _setSelection(currentValue) {
        var value = this._unwrappedValue(currentValue);
        this._setCollectionWidgetOption("selectedItemKeys", this._getSelectedItemKeys(value))
    }
    _optionChanged(args) {
        var {
            name: name,
            value: value
        } = args;
        this._dataExpressionOptionChanged(args);
        switch (name) {
            case "dataSource":
                this._invalidate();
                break;
            case "focusStateEnabled":
            case "accessKey":
            case "tabIndex":
                this._setCollectionWidgetOption(name, value);
                break;
            case "disabled":
                super._optionChanged(args);
                this._setCollectionWidgetOption(name, value);
                break;
            case "valueExpr":
                this._setCollectionWidgetOption("keyExpr", this._getCollectionKeyExpr());
                break;
            case "value":
                this._setSelection(value);
                this._setSubmitValue(value);
                super._optionChanged(args);
                break;
            case "items":
                this._setSelection(this.option("value"));
                break;
            case "itemTemplate":
            case "displayExpr":
                break;
            case "layout":
                this._renderLayout();
                this._updateItemsSize();
                break;
            default:
                super._optionChanged(args)
        }
    }
    _render() {
        super._render();
        this._updateItemsSize()
    }
    _renderLayout() {
        var layout = this.option("layout");
        var $element = this.$element();
        $element.toggleClass(RADIO_GROUP_VERTICAL_CLASS, "vertical" === layout);
        $element.toggleClass(RADIO_GROUP_HORIZONTAL_CLASS, "horizontal" === layout)
    }
    _renderRadios() {
        this._areRadiosCreated = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_9__.Deferred;
        var $radios = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").appendTo(this.$element());
        var {
            displayExpr: displayExpr,
            accessKey: accessKey,
            focusStateEnabled: focusStateEnabled,
            itemTemplate: itemTemplate,
            tabIndex: tabIndex
        } = this.option();
        this._createComponent($radios, RadioCollection, {
            onInitialized: _ref2 => {
                var {
                    component: component
                } = _ref2;
                this._radios = component
            },
            onContentReady: e => {
                this._fireContentReadyAction(true)
            },
            onItemClick: this._itemClickHandler.bind(this),
            displayExpr: displayExpr,
            accessKey: accessKey,
            dataSource: this._dataSource,
            focusStateEnabled: focusStateEnabled,
            itemTemplate: itemTemplate,
            keyExpr: this._getCollectionKeyExpr(),
            noDataText: "",
            scrollingEnabled: false,
            selectionByClick: false,
            selectionMode: "single",
            selectedItemKeys: this._getSelectedItemKeys(),
            tabIndex: tabIndex
        });
        this._areRadiosCreated.resolve()
    }
    _renderSubmitElement() {
        this._$submitElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<input>").attr("type", "hidden").appendTo(this.$element());
        this._setSubmitValue()
    }
    _setOptionsByReference() {
        super._setOptionsByReference();
        (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(this._optionsByReference, {
            value: true
        })
    }
    _setSubmitValue(value) {
        var _value;
        value = null !== (_value = value) && void 0 !== _value ? _value : this.option("value");
        var submitValue = "this" === this.option("valueExpr") ? this._displayGetter(value) : value;
        this._$submitElement.val(submitValue)
    }
    _setCollectionWidgetOption() {
        this._areRadiosCreated.done(this._setWidgetOption.bind(this, "_radios", arguments))
    }
    _updateItemsSize() {
        if ("horizontal" === this.option("layout")) {
            this.itemElements().css("height", "auto")
        } else {
            var itemsCount = this.option("items").length;
            this.itemElements().css("height", 100 / itemsCount + "%")
        }
    }
    focus() {
        var _this$_radios;
        null === (_this$_radios = this._radios) || void 0 === _this$_radios ? void 0 : _this$_radios.focus()
    }
    itemElements() {
        var _this$_radios2;
        return null === (_this$_radios2 = this._radios) || void 0 === _this$_radios2 ? void 0 : _this$_radios2.itemElements()
    }
}
RadioGroup.include(_editor_ui_data_expression__WEBPACK_IMPORTED_MODULE_7__.default);
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_5__.default)("dxRadioGroup", RadioGroup);
/* harmony default export */ __webpack_exports__["default"] = (RadioGroup);


/***/ }),

/***/ 3907:
/*!**********************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/responsive_box.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils/common */ 37552);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/type */ 33275);
/* harmony import */ var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./widget/ui.errors */ 42491);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/utils/window */ 88684);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _box__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./box */ 67914);
/* harmony import */ var _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./collection/ui.collection_widget.edit */ 2076);
/**
 * DevExtreme (esm/ui/responsive_box.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */











var RESPONSIVE_BOX_CLASS = "dx-responsivebox";
var SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + "-screen-";
var BOX_ITEM_CLASS = "dx-box-item";
var BOX_ITEM_DATA_KEY = "dxBoxItemData";
var HD_SCREEN_WIDTH = 1920;
var ResponsiveBox = _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_10__.default.inherit({
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(this.callBase(), {
            rows: [],
            cols: [],
            screenByWidth: null,
            singleColumnScreen: "",
            height: "100%",
            width: "100%",
            activeStateEnabled: false,
            focusStateEnabled: false,
            onItemStateChanged: void 0,
            onLayoutChanged: null,
            currentScreenFactor: void 0
        })
    },
    _init: function() {
        if (!this.option("screenByWidth")) {
            this._options.silent("screenByWidth", _core_utils_window__WEBPACK_IMPORTED_MODULE_5__.defaultScreenFactorFunc)
        }
        this.callBase();
        this._initLayoutChangedAction()
    },
    _initLayoutChangedAction: function() {
        this._layoutChangedAction = this._createActionByOption("onLayoutChanged", {
            excludeValidators: ["disabled", "readonly"]
        })
    },
    _itemClass: function() {
        return BOX_ITEM_CLASS
    },
    _itemDataKey: function() {
        return BOX_ITEM_DATA_KEY
    },
    _initMarkup: function() {
        this.callBase();
        this.$element().addClass(RESPONSIVE_BOX_CLASS)
    },
    _renderItems: function() {
        this._setScreenSize();
        this._screenItems = this._itemsByScreen();
        this._prepareGrid();
        this._spreadItems();
        this._layoutItems();
        this._linkNodeToItem()
    },
    _itemOptionChanged: function(item) {
        var $item = this._findItemElementByItem(item);
        if (!$item.length) {
            return
        }
        this._refreshItem($item, item);
        this._clearItemNodeTemplates();
        this._update(true)
    },
    _setScreenSize: function() {
        var currentScreen = this._getCurrentScreen();
        this._removeScreenSizeClass();
        this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);
        this.option("currentScreenFactor", currentScreen)
    },
    _removeScreenSizeClass: function() {
        var currentScreenFactor = this.option("currentScreenFactor");
        currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor)
    },
    _prepareGrid: function() {
        var grid = this._grid = [];
        this._prepareRowsAndCols();
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._rows, function() {
            var row = [];
            grid.push(row);
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._cols, function() {
                row.push(this._createEmptyCell())
            }.bind(this))
        }.bind(this))
    },
    getSingleColumnRows: function() {
        var rows = this.option("rows");
        var screenItemsLength = this._screenItems.length;
        if (rows.length) {
            var filteredRows = this._filterByScreen(rows);
            var result = [];
            for (var i = 0; i < screenItemsLength; i++) {
                var sizeConfig = this._defaultSizeConfig();
                if (i < filteredRows.length && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isDefined)(filteredRows[i].shrink)) {
                    sizeConfig.shrink = filteredRows[i].shrink
                }
                result.push(sizeConfig)
            }
            return result
        } else {
            return this._defaultSizeConfig(screenItemsLength)
        }
    },
    _prepareRowsAndCols: function() {
        if (this._isSingleColumnScreen()) {
            this._prepareSingleColumnScreenItems();
            this._rows = this.getSingleColumnRows();
            this._cols = this._defaultSizeConfig(1)
        } else {
            this._rows = this._sizesByScreen(this.option("rows"));
            this._cols = this._sizesByScreen(this.option("cols"))
        }
    },
    _isSingleColumnScreen: function() {
        return this._screenRegExp().test(this.option("singleColumnScreen")) || !this.option("rows").length || !this.option("cols").length
    },
    _prepareSingleColumnScreenItems: function() {
        this._screenItems.sort((function(item1, item2) {
            return item1.location.row - item2.location.row || item1.location.col - item2.location.col
        }));
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._screenItems, (function(index, item) {
            (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(item.location, {
                row: index,
                col: 0,
                rowspan: 1,
                colspan: 1
            })
        }))
    },
    _sizesByScreen: function(sizeConfigs) {
        return (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.map)(this._filterByScreen(sizeConfigs), function(sizeConfig) {
            return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(this._defaultSizeConfig(), sizeConfig)
        }.bind(this))
    },
    _createDefaultSizeConfig: function() {
        return {
            ratio: 1,
            baseSize: 0,
            minSize: 0,
            maxSize: 0
        }
    },
    _defaultSizeConfig: function(size) {
        var defaultSizeConfig = this._createDefaultSizeConfig();
        if (!arguments.length) {
            return defaultSizeConfig
        }
        var result = [];
        for (var i = 0; i < size; i++) {
            result.push(defaultSizeConfig)
        }
        return result
    },
    _filterByScreen: function(items) {
        var screenRegExp = this._screenRegExp();
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_2__.grep)(items, (function(item) {
            return !item.screen || screenRegExp.test(item.screen)
        }))
    },
    _screenRegExp: function() {
        var screen = this._getCurrentScreen();
        return new RegExp("(^|\\s)" + screen + "($|\\s)", "i")
    },
    _getCurrentScreen: function() {
        var width = this._screenWidth();
        return this.option("screenByWidth")(width)
    },
    _screenWidth: function() {
        return (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_5__.hasWindow)() ? (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)((0,_core_utils_window__WEBPACK_IMPORTED_MODULE_5__.getWindow)()) : HD_SCREEN_WIDTH
    },
    _createEmptyCell: function() {
        return {
            item: {},
            location: {
                colspan: 1,
                rowspan: 1
            }
        }
    },
    _spreadItems: function() {
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._screenItems, function(_, itemInfo) {
            var location = itemInfo.location || {};
            var itemCol = location.col;
            var itemRow = location.row;
            var row = this._grid[itemRow];
            var itemCell = row && row[itemCol];
            this._occupyCells(itemCell, itemInfo)
        }.bind(this))
    },
    _itemsByScreen: function() {
        return this.option("items").reduce((result, item) => {
            var locations = item.location || {};
            locations = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isPlainObject)(locations) ? [locations] : locations;
            this._filterByScreen(locations).forEach(location => {
                result.push({
                    item: item,
                    location: (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)({
                        rowspan: 1,
                        colspan: 1
                    }, location)
                })
            });
            return result
        }, [])
    },
    _occupyCells: function(itemCell, itemInfo) {
        if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {
            return
        }
        (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(itemCell, itemInfo);
        this._markSpanningCell(itemCell)
    },
    _isItemCellOccupied: function(itemCell, itemInfo) {
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(itemCell.item)) {
            return true
        }
        var result = false;
        this._loopOverSpanning(itemInfo.location, (function(cell) {
            result = result || !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(cell.item)
        }));
        return result
    },
    _loopOverSpanning: function(location, callback) {
        var rowEnd = location.row + location.rowspan - 1;
        var colEnd = location.col + location.colspan - 1;
        var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);
        var boundColEnd = Math.min(colEnd, this._cols.length - 1);
        location.rowspan -= rowEnd - boundRowEnd;
        location.colspan -= colEnd - boundColEnd;
        for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {
            for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {
                if (rowIndex !== location.row || colIndex !== location.col) {
                    callback(this._grid[rowIndex][colIndex])
                }
            }
        }
    },
    _markSpanningCell: function(itemCell) {
        this._loopOverSpanning(itemCell.location, (function(cell) {
            (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(cell, {
                item: itemCell.item,
                spanningCell: itemCell
            })
        }))
    },
    _linkNodeToItem: function() {
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._itemElements(), (function(_, itemNode) {
            var $item = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(itemNode);
            var item = $item.data(BOX_ITEM_DATA_KEY);
            if (!item.box) {
                item.node = $item.children()
            }
        }))
    },
    _layoutItems: function() {
        var rowsCount = this._grid.length;
        var colsCount = rowsCount && this._grid[0].length;
        if (!rowsCount && !colsCount) {
            return
        }
        var result = this._layoutBlock({
            direction: "col",
            row: {
                start: 0,
                end: rowsCount - 1
            },
            col: {
                start: 0,
                end: colsCount - 1
            }
        });
        var rootBox = this._prepareBoxConfig(result.box || {
            direction: "row",
            items: [(0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(result, {
                ratio: 1
            })]
        });
        (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(rootBox, this._rootBoxConfig(rootBox.items));
        this._$root = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").appendTo(this._itemContainer());
        this._createComponent(this._$root, _box__WEBPACK_IMPORTED_MODULE_9__.default, rootBox)
    },
    _rootBoxConfig: function(items) {
        var rootItems = (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(items, function(index, item) {
            this._needApplyAutoBaseSize(item) && (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(item, {
                baseSize: "auto"
            })
        }.bind(this));
        return {
            width: "100%",
            height: "100%",
            items: rootItems,
            itemTemplate: this._getTemplateByOption("itemTemplate"),
            itemHoldTimeout: this.option("itemHoldTimeout"),
            onItemHold: this._createActionByOption("onItemHold"),
            onItemClick: this._createActionByOption("onItemClick"),
            onItemContextMenu: this._createActionByOption("onItemContextMenu"),
            onItemRendered: this._createActionByOption("onItemRendered")
        }
    },
    _needApplyAutoBaseSize: function(item) {
        return !item.baseSize && (!item.minSize || "auto" === item.minSize) && (!item.maxSize || "auto" === item.maxSize)
    },
    _prepareBoxConfig: function(config) {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(config || {}, {
            crossAlign: "stretch",
            onItemStateChanged: this.option("onItemStateChanged")
        })
    },
    _layoutBlock: function(options) {
        if (this._isSingleItem(options)) {
            return this._itemByCell(options.row.start, options.col.start)
        }
        return this._layoutDirection(options)
    },
    _isSingleItem: function(options) {
        var firstCellLocation = this._grid[options.row.start][options.col.start].location;
        var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;
        var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;
        return isItemRowSpanned && isItemColSpanned
    },
    _itemByCell: function(rowIndex, colIndex) {
        var itemCell = this._grid[rowIndex][colIndex];
        return itemCell.spanningCell ? null : itemCell.item
    },
    _layoutDirection: function(options) {
        var items = [];
        var direction = options.direction;
        var crossDirection = this._crossDirection(direction);
        var block;
        while (block = this._nextBlock(options)) {
            if (this._isBlockIndivisible(options.prevBlockOptions, block)) {
                throw _widget_ui_errors__WEBPACK_IMPORTED_MODULE_4__.default.Error("E1025")
            }
            var item = this._layoutBlock({
                direction: crossDirection,
                row: block.row,
                col: block.col,
                prevBlockOptions: options
            });
            if (item) {
                (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(item, this._blockSize(block, crossDirection));
                items.push(item)
            }
            options[crossDirection].start = block[crossDirection].end + 1
        }
        return {
            box: this._prepareBoxConfig({
                direction: direction,
                items: items
            })
        }
    },
    _isBlockIndivisible: function(options, block) {
        return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end
    },
    _crossDirection: function(direction) {
        return "col" === direction ? "row" : "col"
    },
    _nextBlock: function(options) {
        var direction = options.direction;
        var crossDirection = this._crossDirection(direction);
        var startIndex = options[direction].start;
        var endIndex = options[direction].end;
        var crossStartIndex = options[crossDirection].start;
        if (crossStartIndex > options[crossDirection].end) {
            return null
        }
        var crossSpan = 1;
        for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {
            var lineCrossSpan = 1;
            for (var index = startIndex; index <= endIndex; index++) {
                var cell = this._cellByDirection(direction, index, crossIndex);
                lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + "span"])
            }
            var lineCrossEndIndex = crossIndex + lineCrossSpan;
            var crossEndIndex = crossStartIndex + crossSpan;
            if (lineCrossEndIndex > crossEndIndex) {
                crossSpan += lineCrossEndIndex - crossEndIndex
            }
        }
        var result = {};
        result[direction] = {
            start: startIndex,
            end: endIndex
        };
        result[crossDirection] = {
            start: crossStartIndex,
            end: crossStartIndex + crossSpan - 1
        };
        return result
    },
    _cellByDirection: function(direction, index, crossIndex) {
        return "col" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex]
    },
    _blockSize: function(block, direction) {
        var defaultMinSize = "row" === direction ? "auto" : 0;
        var sizeConfigs = "row" === direction ? this._rows : this._cols;
        var result = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(this._createDefaultSizeConfig(), {
            ratio: 0
        });
        for (var index = block[direction].start; index <= block[direction].end; index++) {
            var sizeConfig = sizeConfigs[index];
            result.ratio += sizeConfig.ratio;
            result.baseSize += sizeConfig.baseSize;
            result.minSize += sizeConfig.minSize;
            result.maxSize += sizeConfig.maxSize;
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isDefined)(sizeConfig.shrink)) {
                result.shrink = sizeConfig.shrink
            }
        }
        result.minSize = result.minSize ? result.minSize : defaultMinSize;
        result.maxSize = result.maxSize ? result.maxSize : "auto";
        this._isSingleColumnScreen() && (result.baseSize = "auto");
        return result
    },
    _update: function(forceRemoveRoot) {
        var $existingRoot = this._$root;
        this._renderItems();
        if ($existingRoot) {
            if (forceRemoveRoot) {
                $existingRoot.remove()
            } else {
                $existingRoot.detach();
                this._saveAssistantRoot($existingRoot)
            }
        }
        this._layoutChangedAction()
    },
    _saveAssistantRoot: function($root) {
        this._assistantRoots = this._assistantRoots || [];
        this._assistantRoots.push($root)
    },
    _dispose: function() {
        this._clearItemNodeTemplates();
        this._cleanUnusedRoots();
        this.callBase.apply(this, arguments)
    },
    _cleanUnusedRoots: function() {
        if (!this._assistantRoots) {
            return
        }
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._assistantRoots, (function(_, item) {
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(item).remove()
        }))
    },
    _clearItemNodeTemplates: function() {
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this.option("items"), (function() {
            delete this.node
        }))
    },
    _attachClickEvent: _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop,
    _optionChanged: function(args) {
        switch (args.name) {
            case "rows":
            case "cols":
            case "screenByWidth":
            case "singleColumnScreen":
                this._clearItemNodeTemplates();
                this._invalidate();
                break;
            case "width":
            case "height":
                this.callBase(args);
                this._update();
                break;
            case "onLayoutChanged":
                this._initLayoutChangedAction();
                break;
            case "itemTemplate":
                this._clearItemNodeTemplates();
                this.callBase(args);
                break;
            case "currentScreenFactor":
                break;
            default:
                this.callBase(args)
        }
    },
    _dimensionChanged: function() {
        if (this._getCurrentScreen() !== this.option("currentScreenFactor")) {
            this._update()
        }
    },
    repaint: function() {
        this._update()
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_8__.default)("dxResponsiveBox", ResponsiveBox);
/* harmony default export */ __webpack_exports__["default"] = (ResponsiveBox);


/***/ }),

/***/ 70610:
/*!*****************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _scheduler_ui_scheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheduler/ui.scheduler */ 18817);
/**
 * DevExtreme (esm/ui/scheduler.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

/* harmony default export */ __webpack_exports__["default"] = (_scheduler_ui_scheduler__WEBPACK_IMPORTED_MODULE_0__.default);


/***/ }),

/***/ 50760:
/*!************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/appointmentAdapter.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAppointmentAdapter": function() { return /* binding */ createAppointmentAdapter; }
/* harmony export */ });
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../widget/ui.errors */ 42491);
/* harmony import */ var _core_utils_object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/object */ 163);
/* harmony import */ var _recurrence__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./recurrence */ 68155);
/* harmony import */ var _expressionUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./expressionUtils */ 91286);
/**
 * DevExtreme (esm/ui/scheduler/appointmentAdapter.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */





var PROPERTY_NAMES = {
    startDate: "startDate",
    endDate: "endDate",
    allDay: "allDay",
    text: "text",
    description: "description",
    startDateTimeZone: "startDateTimeZone",
    endDateTimeZone: "endDateTimeZone",
    recurrenceRule: "recurrenceRule",
    recurrenceException: "recurrenceException",
    disabled: "disabled"
};
class AppointmentAdapter {
    constructor(rawAppointment, dataAccessors, timeZoneCalculator, options) {
        this.rawAppointment = rawAppointment;
        this.dataAccessors = dataAccessors;
        this.timeZoneCalculator = timeZoneCalculator;
        this.options = options
    }
    get duration() {
        return this.endDate ? this.endDate - this.startDate : 0
    }
    get startDate() {
        var result = this.getField(PROPERTY_NAMES.startDate);
        return void 0 === result ? result : new Date(result)
    }
    set startDate(value) {
        this.setField(PROPERTY_NAMES.startDate, value)
    }
    get endDate() {
        var result = this.getField(PROPERTY_NAMES.endDate);
        return void 0 === result ? result : new Date(result)
    }
    set endDate(value) {
        this.setField(PROPERTY_NAMES.endDate, value)
    }
    get allDay() {
        return this.getField(PROPERTY_NAMES.allDay)
    }
    set allDay(value) {
        this.setField(PROPERTY_NAMES.allDay, value)
    }
    get text() {
        return this.getField(PROPERTY_NAMES.text)
    }
    set text(value) {
        this.setField(PROPERTY_NAMES.text, value)
    }
    get description() {
        return this.getField(PROPERTY_NAMES.description)
    }
    set description(value) {
        this.setField(PROPERTY_NAMES.description, value)
    }
    get startDateTimeZone() {
        return this.getField(PROPERTY_NAMES.startDateTimeZone)
    }
    get endDateTimeZone() {
        return this.getField(PROPERTY_NAMES.endDateTimeZone)
    }
    get recurrenceRule() {
        return this.getField(PROPERTY_NAMES.recurrenceRule)
    }
    set recurrenceRule(value) {
        this.setField(PROPERTY_NAMES.recurrenceRule, value)
    }
    get recurrenceException() {
        return this.getField(PROPERTY_NAMES.recurrenceException)
    }
    set recurrenceException(value) {
        this.setField(PROPERTY_NAMES.recurrenceException, value)
    }
    get disabled() {
        return !!this.getField(PROPERTY_NAMES.disabled)
    }
    get isRecurrent() {
        return (0,_recurrence__WEBPACK_IMPORTED_MODULE_3__.getRecurrenceProcessor)().isValidRecurrenceRule(this.recurrenceRule)
    }
    getField(property) {
        return _expressionUtils__WEBPACK_IMPORTED_MODULE_4__.ExpressionUtils.getField(this.dataAccessors, property, this.rawAppointment)
    }
    setField(property, value) {
        return _expressionUtils__WEBPACK_IMPORTED_MODULE_4__.ExpressionUtils.setField(this.dataAccessors, property, this.rawAppointment, value)
    }
    calculateStartDate(pathTimeZoneConversion) {
        if (!this.startDate || isNaN(this.startDate.getTime())) {
            throw _widget_ui_errors__WEBPACK_IMPORTED_MODULE_1__.default.Error("E1032", this.text)
        }
        return this.calculateDate(this.startDate, this.startDateTimeZone, pathTimeZoneConversion)
    }
    calculateEndDate(pathTimeZoneConversion) {
        return this.calculateDate(this.endDate, this.endDateTimeZone, pathTimeZoneConversion)
    }
    calculateDate(date, appointmentTimeZone, pathTimeZoneConversion) {
        if (!date) {
            return
        }
        return this.timeZoneCalculator.createDate(date, {
            appointmentTimeZone: appointmentTimeZone,
            path: pathTimeZoneConversion
        })
    }
    clone() {
        var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;
        var result = new AppointmentAdapter((0,_core_utils_object__WEBPACK_IMPORTED_MODULE_2__.deepExtendArraySafe)({}, this.rawAppointment), this.dataAccessors, this.timeZoneCalculator, options);
        if (null !== options && void 0 !== options && options.pathTimeZone) {
            result.startDate = result.calculateStartDate(options.pathTimeZone);
            result.endDate = result.calculateEndDate(options.pathTimeZone)
        }
        return result
    }
    source() {
        var serializeDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;
        if (serializeDate) {
            var clonedAdapter = this.clone();
            clonedAdapter.startDate = this.startDate;
            clonedAdapter.endDate = this.endDate;
            return clonedAdapter.source()
        }
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.rawAppointment)
    }
}
/* harmony default export */ __webpack_exports__["default"] = (AppointmentAdapter);
var createAppointmentAdapter = (rawAppointment, dataAccessors, timeZoneCalculator, options) => new AppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator, options);


/***/ }),

/***/ 13383:
/*!*****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/appointmentDragBehavior.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ AppointmentDragBehavior; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _draggable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../draggable */ 63685);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ 27895);
/* harmony import */ var _internal_scheduler_utils_is_scheduler_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../__internal/scheduler/utils/is_scheduler_component */ 47407);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/deferred */ 97233);
/**
 * DevExtreme (esm/ui/scheduler/appointmentDragBehavior.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */






var APPOINTMENT_ITEM_CLASS = "dx-scheduler-appointment";
class AppointmentDragBehavior {
    constructor(scheduler) {
        this.scheduler = scheduler;
        this.workspace = scheduler._workSpace;
        this.appointments = scheduler._appointments;
        this.initialPosition = {
            left: 0,
            top: 0
        };
        this.appointmentInfo = null;
        this.dragBetweenComponentsPromise = null
    }
    isAllDay(appointment) {
        return appointment.data("dxAppointmentSettings").allDay
    }
    onDragStart(e) {
        var {
            itemSettings: itemSettings,
            itemData: itemData,
            initialPosition: initialPosition
        } = e;
        this.initialPosition = initialPosition;
        this.appointmentInfo = {
            appointment: itemData,
            settings: itemSettings
        };
        this.appointments.notifyObserver("hideAppointmentTooltip")
    }
    onDragMove(e) {
        if (e.fromComponent !== e.toComponent) {
            this.appointments.notifyObserver("removeDroppableCellClass")
        }
    }
    getAppointmentElement(e) {
        var itemElement = e.event.data && e.event.data.itemElement || e.itemElement;
        return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(itemElement)
    }
    onDragEnd(event) {
        var element = this.getAppointmentElement(event);
        var rawAppointment = this.appointments._getItemData(element);
        var container = this.appointments._getAppointmentContainer(this.isAllDay(element));
        container.append(element);
        var newCellIndex = this.workspace.getDroppableCellIndex();
        var oldCellIndex = this.workspace.getCellIndexByCoordinates(this.initialPosition);
        this.appointments.notifyObserver("updateAppointmentAfterDrag", {
            event: event,
            element: element,
            rawAppointment: rawAppointment,
            newCellIndex: newCellIndex,
            oldCellIndex: oldCellIndex
        })
    }
    onDragCancel() {
        this.removeDroppableClasses()
    }
    getItemData(appointmentElement) {
        var dataFromTooltip = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(appointmentElement).data(_constants__WEBPACK_IMPORTED_MODULE_3__.LIST_ITEM_DATA_KEY);
        var itemDataFromTooltip = null === dataFromTooltip || void 0 === dataFromTooltip ? void 0 : dataFromTooltip.appointment;
        var itemDataFromGrid = this.appointments._getItemData(appointmentElement);
        return itemDataFromTooltip || itemDataFromGrid
    }
    getItemSettings(appointment) {
        var itemData = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(appointment).data(_constants__WEBPACK_IMPORTED_MODULE_3__.LIST_ITEM_DATA_KEY);
        return itemData && itemData.settings || []
    }
    createDragStartHandler(options, appointmentDragging) {
        return e => {
            e.itemData = this.getItemData(e.itemElement);
            e.itemSettings = this.getItemSettings(e.itemElement);
            appointmentDragging.onDragStart && appointmentDragging.onDragStart(e);
            if (!e.cancel) {
                options.onDragStart(e)
            }
        }
    }
    createDragMoveHandler(options, appointmentDragging) {
        return e => {
            appointmentDragging.onDragMove && appointmentDragging.onDragMove(e);
            if (!e.cancel) {
                options.onDragMove(e)
            }
        }
    }
    createDragEndHandler(options, appointmentDragging) {
        return e => {
            var updatedData = this.appointments.invoke("getUpdatedData", e.itemData);
            this.appointmentInfo = null;
            e.toItemData = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({}, e.itemData, updatedData);
            appointmentDragging.onDragEnd && appointmentDragging.onDragEnd(e);
            if (!e.cancel) {
                options.onDragEnd(e);
                if (e.fromComponent !== e.toComponent) {
                    appointmentDragging.onRemove && appointmentDragging.onRemove(e)
                }
            }
            if (true === e.cancel) {
                this.removeDroppableClasses()
            }
            if (true !== e.cancel && (0,_internal_scheduler_utils_is_scheduler_component__WEBPACK_IMPORTED_MODULE_4__.isSchedulerComponent)(e.toComponent)) {
                var targetDragBehavior = e.toComponent._getDragBehavior();
                targetDragBehavior.dragBetweenComponentsPromise = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_5__.Deferred
            }
        }
    }
    createDropHandler(appointmentDragging) {
        return e => {
            var updatedData = this.appointments.invoke("getUpdatedData", e.itemData);
            e.itemData = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({}, e.itemData, updatedData);
            if (e.fromComponent !== e.toComponent) {
                appointmentDragging.onAdd && appointmentDragging.onAdd(e)
            }
            if (this.dragBetweenComponentsPromise) {
                this.dragBetweenComponentsPromise.resolve()
            }
        }
    }
    addTo(container, config) {
        var appointmentDragging = this.scheduler.option("appointmentDragging") || {};
        var options = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({
            component: this.scheduler,
            contentTemplate: null,
            filter: ".".concat(APPOINTMENT_ITEM_CLASS),
            immediate: false,
            onDragStart: this.onDragStart.bind(this),
            onDragMove: this.onDragMove.bind(this),
            onDragEnd: this.onDragEnd.bind(this),
            onDragCancel: this.onDragCancel.bind(this)
        }, config);
        this.appointments._createComponent(container, _draggable__WEBPACK_IMPORTED_MODULE_1__.default, (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({}, options, appointmentDragging, {
            onDragStart: this.createDragStartHandler(options, appointmentDragging),
            onDragMove: this.createDragMoveHandler(options, appointmentDragging),
            onDragEnd: this.createDragEndHandler(options, appointmentDragging),
            onDrop: this.createDropHandler(appointmentDragging),
            onCancelByEsc: true
        }))
    }
    updateDragSource(appointment, settings) {
        var {
            appointmentInfo: appointmentInfo
        } = this;
        if (appointmentInfo || appointment) {
            var currentAppointment = appointment || appointmentInfo.appointment;
            var currentSettings = settings || appointmentInfo.settings;
            this.appointments._setDragSourceAppointment(currentAppointment, currentSettings)
        }
    }
    removeDroppableClasses() {
        this.appointments._removeDragSourceClassFromDraggedAppointment();
        this.workspace.removeDroppableCellClass()
    }
}


/***/ }),

/***/ 38104:
/*!*********************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/appointments.layout_manager.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/common */ 37552);
/* harmony import */ var _internal_scheduler_appointments_m_view_model_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../__internal/scheduler/appointments/m_view_model_generator */ 69929);
/* harmony import */ var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../__internal/scheduler/resources/m_utils */ 48025);
/* harmony import */ var _workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./workspaces/helpers/positionHelper */ 18690);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _renovation_ui_scheduler_model_appointments__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../renovation/ui/scheduler/model/appointments */ 33867);
/**
 * DevExtreme (esm/ui/scheduler/appointments.layout_manager.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */







class AppointmentLayoutManager {
    constructor(instance) {
        this.instance = instance;
        this.appointmentViewModel = new _internal_scheduler_appointments_m_view_model_generator__WEBPACK_IMPORTED_MODULE_2__.AppointmentViewModelGenerator
    }
    get appointmentRenderingStrategyName() {
        return (0,_renovation_ui_scheduler_model_appointments__WEBPACK_IMPORTED_MODULE_6__.getAppointmentRenderingStrategyName)(this.instance.currentViewType)
    }
    getCellDimensions(options) {
        if (this.instance._workSpace) {
            return {
                width: this.instance._workSpace.getCellWidth(),
                height: this.instance._workSpace.getCellHeight(),
                allDayHeight: this.instance._workSpace.getAllDayHeight()
            }
        }
    }
    _getRenderingStrategyOptions() {
        var workspace = this.instance.getWorkSpace();
        var {
            virtualScrollingDispatcher: virtualScrollingDispatcher
        } = this.instance.getWorkSpace();
        var {
            cellCountInsideLeftVirtualCell: cellCountInsideLeftVirtualCell,
            cellCountInsideTopVirtualRow: cellCountInsideTopVirtualRow
        } = virtualScrollingDispatcher;
        var groupCount = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_3__.getGroupCount)(this.instance.option("loadedResources"));
        var DOMMetaData = workspace.getDOMElementsMetaData();
        var allDayHeight = (0,_workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_4__.getAllDayHeight)(workspace.option("showAllDayPanel"), workspace._isVerticalGroupedWorkSpace(), DOMMetaData);
        var rowCount = workspace._getRowCount();
        var {
            positionHelper: positionHelper,
            viewDataProvider: viewDataProvider
        } = workspace;
        var visibleDayDuration = viewDataProvider.getVisibleDayDuration(workspace.option("startDayHour"), workspace.option("endDayHour"), workspace.option("hoursInterval"));
        var cellDuration = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_5__.getCellDuration)(workspace.type, workspace.option("startDayHour"), workspace.option("endDayHour"), workspace.option("hoursInterval"));
        return {
            resources: this.instance.option("resources"),
            loadedResources: this.instance.option("loadedResources"),
            getAppointmentColor: this.instance.createGetAppointmentColor(),
            dataAccessors: this.instance._dataAccessors,
            isRenovatedAppointments: this.instance.option("isRenovatedAppointments"),
            appointmentRenderingStrategyName: this.appointmentRenderingStrategyName,
            adaptivityEnabled: this.instance.option("adaptivityEnabled"),
            rtlEnabled: this.instance.option("rtlEnabled"),
            startDayHour: this.instance._getCurrentViewOption("startDayHour"),
            endDayHour: this.instance._getCurrentViewOption("endDayHour"),
            maxAppointmentsPerCell: this.instance._getCurrentViewOption("maxAppointmentsPerCell"),
            currentDate: this.instance.option("currentDate"),
            isVirtualScrolling: this.instance.isVirtualScrolling(),
            leftVirtualCellCount: cellCountInsideLeftVirtualCell,
            topVirtualCellCount: cellCountInsideTopVirtualRow,
            intervalCount: workspace.option("intervalCount"),
            hoursInterval: workspace.option("hoursInterval"),
            showAllDayPanel: workspace.option("showAllDayPanel"),
            isGroupedAllDayPanel: workspace.isGroupedAllDayPanel(),
            groups: this.instance._getCurrentViewOption("groups"),
            groupCount: groupCount,
            rowCount: rowCount,
            appointmentCountPerCell: this.instance.option("_appointmentCountPerCell"),
            appointmentOffset: this.instance.option("_appointmentOffset"),
            allowResizing: this.instance._allowResizing(),
            allowAllDayResizing: this.instance._allowAllDayResizing(),
            startViewDate: workspace.getStartViewDate(),
            groupOrientation: workspace._getRealGroupOrientation(),
            cellWidth: (0,_workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_4__.getCellWidth)(DOMMetaData),
            cellHeight: (0,_workspaces_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_4__.getCellHeight)(DOMMetaData),
            allDayHeight: allDayHeight,
            resizableStep: positionHelper.getResizableStep(),
            visibleDayDuration: visibleDayDuration,
            allDayPanelMode: this.instance._getCurrentViewOption("allDayPanelMode"),
            timeZoneCalculator: this.instance.timeZoneCalculator,
            timeZone: this.instance.option("timeZone"),
            firstDayOfWeek: this.instance.getFirstDayOfWeek(),
            viewStartDayHour: this.instance._getCurrentViewOption("startDayHour"),
            viewEndDayHour: this.instance._getCurrentViewOption("endDayHour"),
            viewType: workspace.type,
            endViewDate: workspace.getEndViewDate(),
            positionHelper: positionHelper,
            isGroupedByDate: workspace.isGroupedByDate(),
            cellDuration: cellDuration,
            cellDurationInMinutes: workspace.option("cellDuration"),
            viewDataProvider: workspace.viewDataProvider,
            supportAllDayRow: workspace.supportAllDayRow(),
            dateRange: workspace.getDateRange(),
            intervalDuration: workspace.getIntervalDuration(),
            allDayIntervalDuration: workspace.getIntervalDuration(true),
            isVerticalGroupOrientation: workspace.isVerticalOrientation(),
            DOMMetaData: DOMMetaData,
            instance: this.instance,
            agendaDuration: workspace.option("agendaDuration")
        }
    }
    createAppointmentsMap(items) {
        var renderingStrategyOptions = this._getRenderingStrategyOptions();
        var {
            viewModel: viewModel,
            positionMap: positionMap
        } = this.appointmentViewModel.generate(items, renderingStrategyOptions);
        this._positionMap = positionMap;
        return viewModel
    }
    _isDataChanged(data) {
        var appointmentDataProvider = this.instance.appointmentDataProvider;
        var updatedData = appointmentDataProvider.getUpdatedAppointment();
        return updatedData === data || appointmentDataProvider.getUpdatedAppointmentKeys().some(item => data[item.key] === item.value)
    }
    _isAppointmentShouldAppear(currentAppointment, sourceAppointment) {
        return currentAppointment.needRepaint && sourceAppointment.needRemove
    }
    _isSettingChanged(settings, sourceSetting) {
        if (settings.length !== sourceSetting.length) {
            return true
        }
        var createSettingsToCompare = (settings, index) => {
            var currentSetting = settings[index];
            var leftVirtualCellCount = currentSetting.leftVirtualCellCount || 0;
            var topVirtualCellCount = currentSetting.topVirtualCellCount || 0;
            var columnIndex = currentSetting.columnIndex + leftVirtualCellCount;
            var rowIndex = currentSetting.rowIndex + topVirtualCellCount;
            var hMax = currentSetting.reduced ? currentSetting.hMax : void 0;
            var vMax = currentSetting.reduced ? currentSetting.vMax : void 0;
            return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, currentSetting, {
                columnIndex: columnIndex,
                rowIndex: rowIndex,
                positionByMap: void 0,
                topVirtualCellCount: void 0,
                leftVirtualCellCount: void 0,
                leftVirtualWidth: void 0,
                topVirtualHeight: void 0,
                hMax: hMax,
                vMax: vMax,
                info: {}
            })
        };
        for (var i = 0; i < settings.length; i++) {
            var newSettings = createSettingsToCompare(settings, i);
            var oldSettings = createSettingsToCompare(sourceSetting, i);
            if (oldSettings) {
                oldSettings.sortedIndex = newSettings.sortedIndex
            }
            if (!(0,_core_utils_common__WEBPACK_IMPORTED_MODULE_1__.equalByValue)(newSettings, oldSettings)) {
                return true
            }
        }
        return false
    }
    _getAssociatedSourceAppointment(currentAppointment, sourceAppointments) {
        for (var i = 0; i < sourceAppointments.length; i++) {
            var item = sourceAppointments[i];
            if (item.itemData === currentAppointment.itemData) {
                return item
            }
        }
        return null
    }
    _getDeletedAppointments(currentAppointments, sourceAppointments) {
        var result = [];
        for (var i = 0; i < sourceAppointments.length; i++) {
            var sourceAppointment = sourceAppointments[i];
            var currentAppointment = this._getAssociatedSourceAppointment(sourceAppointment, currentAppointments);
            if (!currentAppointment) {
                sourceAppointment.needRemove = true;
                result.push(sourceAppointment)
            }
        }
        return result
    }
    getRepaintedAppointments(currentAppointments, sourceAppointments) {
        if (0 === sourceAppointments.length || "agenda" === this.appointmentRenderingStrategyName) {
            return currentAppointments
        }
        currentAppointments.forEach(appointment => {
            var sourceAppointment = this._getAssociatedSourceAppointment(appointment, sourceAppointments);
            if (sourceAppointment) {
                var isDataChanged = this._isDataChanged(appointment.itemData);
                var isSettingChanged = this._isSettingChanged(appointment.settings, sourceAppointment.settings);
                var isAppointmentShouldAppear = this._isAppointmentShouldAppear(appointment, sourceAppointment);
                appointment.needRepaint = isDataChanged || isSettingChanged || isAppointmentShouldAppear
            }
        });
        return currentAppointments.concat(this._getDeletedAppointments(currentAppointments, sourceAppointments))
    }
    getRenderingStrategyInstance() {
        var renderingStrategy = this.appointmentViewModel.getRenderingStrategy();
        if (!renderingStrategy) {
            var options = this._getRenderingStrategyOptions();
            this.appointmentViewModel.initRenderingStrategy(options)
        }
        return this.appointmentViewModel.getRenderingStrategy()
    }
}
/* harmony default export */ __webpack_exports__["default"] = (AppointmentLayoutManager);


/***/ }),

/***/ 19156:
/*!*************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/classes.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FIXED_CONTAINER_CLASS": function() { return /* binding */ FIXED_CONTAINER_CLASS; },
/* harmony export */   "REDUCED_APPOINTMENT_CLASS": function() { return /* binding */ REDUCED_APPOINTMENT_CLASS; },
/* harmony export */   "REDUCED_APPOINTMENT_ICON": function() { return /* binding */ REDUCED_APPOINTMENT_ICON; },
/* harmony export */   "RECURRENCE_APPOINTMENT_CLASS": function() { return /* binding */ RECURRENCE_APPOINTMENT_CLASS; },
/* harmony export */   "EMPTY_APPOINTMENT_CLASS": function() { return /* binding */ EMPTY_APPOINTMENT_CLASS; },
/* harmony export */   "ALL_DAY_APPOINTMENT_CLASS": function() { return /* binding */ ALL_DAY_APPOINTMENT_CLASS; },
/* harmony export */   "REDUCED_APPOINTMENT_PARTS_CLASSES": function() { return /* binding */ REDUCED_APPOINTMENT_PARTS_CLASSES; },
/* harmony export */   "DIRECTION_APPOINTMENT_CLASSES": function() { return /* binding */ DIRECTION_APPOINTMENT_CLASSES; },
/* harmony export */   "APPOINTMENT_DRAG_SOURCE_CLASS": function() { return /* binding */ APPOINTMENT_DRAG_SOURCE_CLASS; },
/* harmony export */   "APPOINTMENT_ITEM_CLASS": function() { return /* binding */ APPOINTMENT_ITEM_CLASS; },
/* harmony export */   "APPOINTMENT_CONTENT_CLASSES": function() { return /* binding */ APPOINTMENT_CONTENT_CLASSES; },
/* harmony export */   "AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS": function() { return /* binding */ AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS; },
/* harmony export */   "HEADER_CURRENT_TIME_CELL_CLASS": function() { return /* binding */ HEADER_CURRENT_TIME_CELL_CLASS; },
/* harmony export */   "VIRTUAL_CELL_CLASS": function() { return /* binding */ VIRTUAL_CELL_CLASS; },
/* harmony export */   "TIME_PANEL_CLASS": function() { return /* binding */ TIME_PANEL_CLASS; },
/* harmony export */   "DATE_TABLE_CLASS": function() { return /* binding */ DATE_TABLE_CLASS; },
/* harmony export */   "DATE_TABLE_ROW_CLASS": function() { return /* binding */ DATE_TABLE_ROW_CLASS; },
/* harmony export */   "GROUP_ROW_CLASS": function() { return /* binding */ GROUP_ROW_CLASS; },
/* harmony export */   "GROUP_HEADER_CONTENT_CLASS": function() { return /* binding */ GROUP_HEADER_CONTENT_CLASS; },
/* harmony export */   "LAST_GROUP_CELL_CLASS": function() { return /* binding */ LAST_GROUP_CELL_CLASS; },
/* harmony export */   "FIRST_GROUP_CELL_CLASS": function() { return /* binding */ FIRST_GROUP_CELL_CLASS; },
/* harmony export */   "VERTICAL_GROUP_COUNT_CLASSES": function() { return /* binding */ VERTICAL_GROUP_COUNT_CLASSES; }
/* harmony export */ });
/**
 * DevExtreme (esm/ui/scheduler/classes.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var FIXED_CONTAINER_CLASS = "dx-scheduler-fixed-appointments";
var REDUCED_APPOINTMENT_CLASS = "dx-scheduler-appointment-reduced";
var REDUCED_APPOINTMENT_ICON = "dx-scheduler-appointment-reduced-icon";
var RECURRENCE_APPOINTMENT_CLASS = "dx-scheduler-appointment-recurrence";
var EMPTY_APPOINTMENT_CLASS = "dx-scheduler-appointment-empty";
var ALL_DAY_APPOINTMENT_CLASS = "dx-scheduler-all-day-appointment";
var REDUCED_APPOINTMENT_PARTS_CLASSES = {
    head: "dx-scheduler-appointment-head",
    body: "dx-scheduler-appointment-body",
    tail: "dx-scheduler-appointment-tail"
};
var DIRECTION_APPOINTMENT_CLASSES = {
    horizontal: "dx-scheduler-appointment-horizontal",
    vertical: "dx-scheduler-appointment-vertical"
};
var APPOINTMENT_DRAG_SOURCE_CLASS = "dx-scheduler-appointment-drag-source";
var APPOINTMENT_ITEM_CLASS = "dx-scheduler-appointment";
var APPOINTMENT_CONTENT_CLASSES = {
    APPOINTMENT_CONTENT_DETAILS: "dx-scheduler-appointment-content-details",
    RECURRING_ICON: "dx-scheduler-appointment-recurrence-icon",
    APPOINTMENT_TITLE: "dx-scheduler-appointment-title",
    APPOINTMENT_DATE: "dx-scheduler-appointment-content-date",
    ALL_DAY_CONTENT: "dx-scheduler-appointment-content-allday",
    ITEM: "dx-scheduler-appointment",
    AGENDA_MARKER: "dx-scheduler-agenda-appointment-marker",
    AGENDA_RESOURCE_LIST: "dx-scheduler-appointment-resource-list",
    AGENDA_RESOURCE_LIST_ITEM: "dx-scheduler-appointment-resource-item",
    AGENDA_RESOURCE_LIST_ITEM_VALUE: "dx-scheduler-appointment-resource-item-value"
};
var AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS = "dx-scheduler-last-in-date-agenda-appointment";
var HEADER_CURRENT_TIME_CELL_CLASS = "dx-scheduler-header-panel-current-time-cell";
var VIRTUAL_CELL_CLASS = "dx-scheduler-virtual-cell";
var TIME_PANEL_CLASS = "dx-scheduler-time-panel";
var DATE_TABLE_CLASS = "dx-scheduler-date-table";
var DATE_TABLE_ROW_CLASS = "dx-scheduler-date-table-row";
var GROUP_ROW_CLASS = "dx-scheduler-group-row";
var GROUP_HEADER_CONTENT_CLASS = "dx-scheduler-group-header-content";
var LAST_GROUP_CELL_CLASS = "dx-scheduler-last-group-cell";
var FIRST_GROUP_CELL_CLASS = "dx-scheduler-first-group-cell";
var VERTICAL_GROUP_COUNT_CLASSES = ["dx-scheduler-group-column-count-one", "dx-scheduler-group-column-count-two", "dx-scheduler-group-column-count-three"];


/***/ }),

/***/ 30935:
/*!*******************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/compactAppointmentsHelper.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompactAppointmentsHelper": function() { return /* binding */ CompactAppointmentsHelper; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../button */ 66037);
/* harmony import */ var _animation_translator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../animation/translator */ 10829);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../localization/message */ 19336);
/* harmony import */ var _core_templates_function_template__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/templates/function_template */ 51454);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/deferred */ 97233);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/position */ 9622);
/* harmony import */ var _dataStructures__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dataStructures */ 58595);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./constants */ 27895);
/* harmony import */ var _appointmentAdapter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./appointmentAdapter */ 50760);
/* harmony import */ var _renovation_ui_scheduler_appointment_overflow_indicator_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../renovation/ui/scheduler/appointment/overflow_indicator/utils */ 34534);
/**
 * DevExtreme (esm/ui/scheduler/compactAppointmentsHelper.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */












var APPOINTMENT_COLLECTOR_CLASS = "dx-scheduler-appointment-collector";
var COMPACT_APPOINTMENT_COLLECTOR_CLASS = APPOINTMENT_COLLECTOR_CLASS + "-compact";
var APPOINTMENT_COLLECTOR_CONTENT_CLASS = APPOINTMENT_COLLECTOR_CLASS + "-content";
var WEEK_VIEW_COLLECTOR_OFFSET = 5;
var COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET = 1;
class CompactAppointmentsHelper {
    constructor(instance) {
        this.instance = instance;
        this.elements = []
    }
    render(options) {
        var {
            isCompact: isCompact,
            items: items,
            buttonColor: buttonColor
        } = options;
        var template = this._createTemplate(items.data.length, isCompact);
        var button = this._createCompactButton(template, options);
        var $button = button.$element();
        this._makeBackgroundColor($button, items.colors, buttonColor);
        this._makeBackgroundDarker($button);
        this.elements.push($button);
        $button.data("items", this._createTooltipInfos(items));
        return $button
    }
    clear() {
        this.elements.forEach(button => {
            button.detach();
            button.remove()
        });
        this.elements = []
    }
    _createTooltipInfos(items) {
        return items.data.map((appointment, index) => {
            var _items$settings;
            var targetedAdapter = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_10__.createAppointmentAdapter)(appointment, this.instance._dataAccessors, this.instance.timeZoneCalculator).clone();
            if ((null === (_items$settings = items.settings) || void 0 === _items$settings ? void 0 : _items$settings.length) > 0) {
                var {
                    info: info
                } = items.settings[index];
                targetedAdapter.startDate = info.sourceAppointment.startDate;
                targetedAdapter.endDate = info.sourceAppointment.endDate
            }
            return new _dataStructures__WEBPACK_IMPORTED_MODULE_8__.AppointmentTooltipInfo(appointment, targetedAdapter.source(), items.colors[index], items.settings[index])
        })
    }
    _onButtonClick(e, options) {
        var $button = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(e.element);
        this.instance.showAppointmentTooltipCore($button, $button.data("items"), this._getExtraOptionsForTooltip(options, $button))
    }
    _getExtraOptionsForTooltip(options, $appointmentCollector) {
        return {
            clickEvent: this._clickEvent(options.onAppointmentClick).bind(this),
            dragBehavior: options.allowDrag && this._createTooltipDragBehavior($appointmentCollector).bind(this),
            dropDownAppointmentTemplate: this.instance.option().dropDownAppointmentTemplate,
            isButtonClick: true
        }
    }
    _clickEvent(onAppointmentClick) {
        return e => {
            var config = {
                itemData: e.itemData.appointment,
                itemElement: e.itemElement,
                targetedAppointment: e.itemData.targetedAppointment
            };
            var createClickEvent = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_6__.extendFromObject)(this.instance.fire("mapAppointmentFields", config), e, false);
            delete createClickEvent.itemData;
            delete createClickEvent.itemIndex;
            delete createClickEvent.itemElement;
            onAppointmentClick(createClickEvent)
        }
    }
    _createTooltipDragBehavior($appointmentCollector) {
        return e => {
            var $element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(e.element);
            var $schedulerElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(this.instance.element());
            var workSpace = this.instance.getWorkSpace();
            var initialPosition = (0,_animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($appointmentCollector);
            var options = {
                filter: ".".concat(_constants__WEBPACK_IMPORTED_MODULE_9__.LIST_ITEM_CLASS),
                isSetCursorOffset: true,
                initialPosition: initialPosition,
                getItemData: itemElement => {
                    var _$$data;
                    return null === (_$$data = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(itemElement).data(_constants__WEBPACK_IMPORTED_MODULE_9__.LIST_ITEM_DATA_KEY)) || void 0 === _$$data ? void 0 : _$$data.appointment
                },
                getItemSettings: (_, event) => event.itemSettings
            };
            workSpace._createDragBehaviorBase($element, $schedulerElement, options)
        }
    }
    _getCollectorOffset(width, cellWidth) {
        return cellWidth - width - this._getCollectorRightOffset()
    }
    _getCollectorRightOffset() {
        return this.instance.getRenderingStrategyInstance()._isCompactTheme() ? COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET : WEEK_VIEW_COLLECTOR_OFFSET
    }
    _makeBackgroundDarker(button) {
        button.css("boxShadow", "inset ".concat((0,_core_utils_position__WEBPACK_IMPORTED_MODULE_7__.getBoundingRect)(button.get(0)).width, "px 0 0 0 rgba(0, 0, 0, 0.3)"))
    }
    _makeBackgroundColor($button, colors, color) {
        _core_utils_deferred__WEBPACK_IMPORTED_MODULE_5__.when.apply(null, colors).done(function() {
            this._makeBackgroundColorCore($button, color, [...arguments])
        }.bind(this))
    }
    _makeBackgroundColorCore($button, color, itemColors) {
        color && color.done(color => {
            var backgroundColor = (0,_renovation_ui_scheduler_appointment_overflow_indicator_utils__WEBPACK_IMPORTED_MODULE_11__.getOverflowIndicatorColor)(color, itemColors);
            if (backgroundColor) {
                $button.css("backgroundColor", backgroundColor)
            }
        })
    }
    _setPosition(element, position) {
        (0,_animation_translator__WEBPACK_IMPORTED_MODULE_2__.move)(element, {
            top: position.top,
            left: position.left
        })
    }
    _createCompactButton(template, options) {
        var $button = this._createCompactButtonElement(options);
        return this.instance._createComponent($button, _button__WEBPACK_IMPORTED_MODULE_1__.default, {
            type: "default",
            width: options.width,
            height: options.height,
            onClick: e => this._onButtonClick(e, options),
            template: this._renderTemplate(template, options.items, options.isCompact)
        })
    }
    _createCompactButtonElement(_ref) {
        var {
            isCompact: isCompact,
            $container: $container,
            coordinates: coordinates
        } = _ref;
        var result = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(APPOINTMENT_COLLECTOR_CLASS).toggleClass(COMPACT_APPOINTMENT_COLLECTOR_CLASS, isCompact).appendTo($container);
        this._setPosition(result, coordinates);
        return result
    }
    _renderTemplate(template, items, isCompact) {
        return new _core_templates_function_template__WEBPACK_IMPORTED_MODULE_4__.FunctionTemplate(options => template.render({
            model: {
                appointmentCount: items.data.length,
                isCompact: isCompact
            },
            container: options.container
        }))
    }
    _createTemplate(count, isCompact) {
        this._initButtonTemplate(count, isCompact);
        return this.instance._getAppointmentTemplate("appointmentCollectorTemplate")
    }
    _initButtonTemplate(count, isCompact) {
        this.instance._templateManager.addDefaultTemplates({
            appointmentCollector: new _core_templates_function_template__WEBPACK_IMPORTED_MODULE_4__.FunctionTemplate(options => this._createButtonTemplate(count, (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(options.container), isCompact))
        })
    }
    _createButtonTemplate(appointmentCount, element, isCompact) {
        var text = isCompact ? appointmentCount : _localization_message__WEBPACK_IMPORTED_MODULE_3__.default.getFormatter("dxScheduler-moreAppointments")(appointmentCount);
        return element.append((0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<span>").text(text)).addClass(APPOINTMENT_COLLECTOR_CONTENT_CLASS)
    }
}


/***/ }),

/***/ 27895:
/*!***************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/constants.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LIST_ITEM_DATA_KEY": function() { return /* binding */ LIST_ITEM_DATA_KEY; },
/* harmony export */   "LIST_ITEM_CLASS": function() { return /* binding */ LIST_ITEM_CLASS; },
/* harmony export */   "APPOINTMENT_SETTINGS_KEY": function() { return /* binding */ APPOINTMENT_SETTINGS_KEY; },
/* harmony export */   "HORIZONTAL_GROUP_ORIENTATION": function() { return /* binding */ HORIZONTAL_GROUP_ORIENTATION; },
/* harmony export */   "VIEWS": function() { return /* binding */ VIEWS; }
/* harmony export */ });
/**
 * DevExtreme (esm/ui/scheduler/constants.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var LIST_ITEM_DATA_KEY = "dxListItemData";
var LIST_ITEM_CLASS = "dx-list-item";
var APPOINTMENT_SETTINGS_KEY = "dxAppointmentSettings";
var HORIZONTAL_GROUP_ORIENTATION = "horizontal";
var VIEWS = {
    DAY: "day",
    WEEK: "week",
    WORK_WEEK: "workWeek",
    MONTH: "month",
    TIMELINE_DAY: "timelineDay",
    TIMELINE_WEEK: "timelineWeek",
    TIMELINE_WORK_WEEK: "timelineWorkWeek",
    TIMELINE_MONTH: "timelineMonth",
    AGENDA: "agenda"
};


/***/ }),

/***/ 58595:
/*!********************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/dataStructures.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppointmentTooltipInfo": function() { return /* binding */ AppointmentTooltipInfo; }
/* harmony export */ });
/**
 * DevExtreme (esm/ui/scheduler/dataStructures.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
class AppointmentTooltipInfo {
    constructor(appointment) {
        var targetedAppointment = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;
        var color = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
        var settings = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [];
        this.appointment = appointment;
        this.targetedAppointment = targetedAppointment;
        this.color = color;
        this.settings = settings
    }
}


/***/ }),

/***/ 72494:
/*!*****************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/dateAdapter.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/date */ 35341);
/**
 * DevExtreme (esm/ui/scheduler/dateAdapter.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateToMilliseconds;
class DateAdapterCore {
    constructor(source) {
        this._source = new Date(source.getTime ? source.getTime() : source)
    }
    get source() {
        return this._source
    }
    result() {
        return this._source
    }
    getTimezoneOffset() {
        var format = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;
        var value = this._source.getTimezoneOffset();
        if ("minute" === format) {
            return value * toMs("minute")
        }
        return value
    }
    getTime() {
        return this._source.getTime()
    }
    setTime(value) {
        this._source.setTime(value);
        return this
    }
    addTime(value) {
        this._source.setTime(this._source.getTime() + value);
        return this
    }
    setMinutes(value) {
        this._source.setMinutes(value);
        return this
    }
    addMinutes(value) {
        this._source.setMinutes(this._source.getMinutes() + value);
        return this
    }
    subtractMinutes(value) {
        this._source.setMinutes(this._source.getMinutes() - value);
        return this
    }
}
var DateAdapter = date => new DateAdapterCore(date);
/* harmony default export */ __webpack_exports__["default"] = (DateAdapter);


/***/ }),

/***/ 91286:
/*!*********************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/expressionUtils.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExpressionUtils": function() { return /* binding */ ExpressionUtils; }
/* harmony export */ });
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/**
 * DevExtreme (esm/ui/scheduler/expressionUtils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var ExpressionUtils = {
    getField: (dataAccessors, field, obj) => {
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(dataAccessors.getter[field])) {
            return
        }
        return dataAccessors.getter[field](obj)
    },
    setField: (dataAccessors, field, obj, value) => {
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(dataAccessors.setter[field])) {
            return
        }
        dataAccessors.setter[field](obj, value);
        return obj
    }
};


/***/ }),

/***/ 68225:
/*!*************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/loading.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "show": function() { return /* binding */ show; },
/* harmony export */   "hide": function() { return /* binding */ hide; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _core_utils_view_port__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/view_port */ 30228);
/* harmony import */ var _load_panel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../load_panel */ 91819);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/deferred */ 97233);
/**
 * DevExtreme (esm/ui/scheduler/loading.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var loading = null;
var createLoadPanel = function(options) {
    return new _load_panel__WEBPACK_IMPORTED_MODULE_2__.default((0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").appendTo(options && options.container || (0,_core_utils_view_port__WEBPACK_IMPORTED_MODULE_1__.value)()), options)
};
var removeLoadPanel = function() {
    if (!loading) {
        return
    }
    loading.$element().remove();
    loading = null
};
function show(options) {
    removeLoadPanel();
    loading = createLoadPanel(options);
    return loading.show()
}
function hide() {
    if (!loading) {
        return (new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_3__.Deferred).resolve()
    }
    return loading.hide().done(removeLoadPanel).promise()
}


/***/ }),

/***/ 68155:
/*!****************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/recurrence.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getRecurrenceProcessor": function() { return /* binding */ getRecurrenceProcessor; }
/* harmony export */ });
/* harmony import */ var _core_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/errors */ 31150);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/iterator */ 14975);
/* harmony import */ var rrule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rrule */ 68382);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/date */ 35341);
/* harmony import */ var _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.timeZone */ 53374);
/**
 * DevExtreme (esm/ui/scheduler/recurrence.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */





var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_3__.default.dateToMilliseconds;
var ruleNames = ["freq", "interval", "byday", "byweekno", "byyearday", "bymonth", "bymonthday", "count", "until", "byhour", "byminute", "bysecond", "bysetpos", "wkst"];
var freqNames = ["DAILY", "WEEKLY", "MONTHLY", "YEARLY", "SECONDLY", "MINUTELY", "HOURLY"];
var days = {
    SU: 0,
    MO: 1,
    TU: 2,
    WE: 3,
    TH: 4,
    FR: 5,
    SA: 6
};
var loggedWarnings = [];
var MS_IN_HOUR = 36e5;
var MS_IN_DAY = 24 * MS_IN_HOUR;
var recurrence = null;
function getRecurrenceProcessor() {
    if (!recurrence) {
        recurrence = new RecurrenceProcessor
    }
    return recurrence
}
class RecurrenceProcessor {
    constructor() {
        this.rRule = null;
        this.rRuleSet = null;
        this.validator = new RecurrenceValidator
    }
    generateDates(options) {
        var recurrenceRule = this.evalRecurrenceRule(options.rule);
        var rule = recurrenceRule.rule;
        if (!recurrenceRule.isValid || !rule.freq) {
            return []
        }
        var rruleIntervalParams = this._createRruleIntervalParams(options);
        this._initializeRRule(options, rruleIntervalParams.startIntervalDate, rule.until);
        return this.rRuleSet.between(rruleIntervalParams.minViewDate, rruleIntervalParams.maxViewDate, true).filter(date => date.getTime() + rruleIntervalParams.appointmentDuration >= rruleIntervalParams.minViewTime).map(date => this._convertRruleResult(rruleIntervalParams, options, date))
    }
    _createRruleIntervalParams(options) {
        var {
            start: start,
            min: min,
            max: max,
            appointmentTimezoneOffset: appointmentTimezoneOffset
        } = options;
        var clientOffsets_startDate = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.getClientTimezoneOffset(start),
            clientOffsets_minViewDate = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.getClientTimezoneOffset(min),
            clientOffsets_maxViewDate = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.getClientTimezoneOffset(max);
        var duration = options.end ? options.end.getTime() - options.start.getTime() : 0;
        var startIntervalDate = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.setOffsetsToDate(options.start, [-clientOffsets_startDate, appointmentTimezoneOffset]);
        var minViewTime = options.min.getTime() - clientOffsets_minViewDate + appointmentTimezoneOffset;
        var minViewDate = new Date(minViewTime - duration);
        var maxViewDate = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.setOffsetsToDate(options.max, [-clientOffsets_maxViewDate, appointmentTimezoneOffset]);
        var startDateDSTDifferenceMs = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.getDiffBetweenClientTimezoneOffsets(options.start, startIntervalDate);
        var switchToSummerTime = startDateDSTDifferenceMs < 0;
        return {
            startIntervalDate: startIntervalDate,
            minViewTime: minViewTime,
            minViewDate: minViewDate,
            maxViewDate: maxViewDate,
            startIntervalDateDSTShift: switchToSummerTime ? 0 : startDateDSTDifferenceMs,
            appointmentDuration: duration
        }
    }
    _convertRruleResult(rruleIntervalParams, options, rruleDate) {
        var localTimezoneOffset = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.getClientTimezoneOffset(rruleDate);
        var additionalWorkaroundOffsetForRrule = localTimezoneOffset / MS_IN_HOUR <= -13 ? -MS_IN_DAY : 0;
        var convertedBackDate = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.setOffsetsToDate(rruleDate, [localTimezoneOffset, additionalWorkaroundOffsetForRrule, -options.appointmentTimezoneOffset, rruleIntervalParams.startIntervalDateDSTShift]);
        var convertedDateDSTShift = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.getDiffBetweenClientTimezoneOffsets(convertedBackDate, rruleDate);
        var switchToSummerTime = convertedDateDSTShift < 0;
        var resultDate = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.setOffsetsToDate(convertedBackDate, [convertedDateDSTShift]);
        var resultDateDSTShift = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.getDiffBetweenClientTimezoneOffsets(resultDate, convertedBackDate);
        if (resultDateDSTShift && switchToSummerTime) {
            return new Date(resultDate.getTime() + resultDateDSTShift)
        }
        return resultDate
    }
    hasRecurrence(options) {
        return !!this.generateDates(options).length
    }
    evalRecurrenceRule(rule) {
        var result = {
            rule: {},
            isValid: false
        };
        if (rule) {
            result.rule = this._parseRecurrenceRule(rule);
            result.isValid = this.validator.validateRRule(result.rule, rule)
        }
        return result
    }
    isValidRecurrenceRule(rule) {
        return this.evalRecurrenceRule(rule).isValid
    }
    daysFromByDayRule(rule) {
        var result = [];
        if (rule.byday) {
            if (Array.isArray(rule.byday)) {
                result = rule.byday
            } else {
                result = rule.byday.split(",")
            }
        }
        return result.map(item => {
            var match = item.match(/[A-Za-z]+/);
            return !!match && match[0]
        }).filter(item => !!item)
    }
    getAsciiStringByDate(date) {
        var currentOffset = date.getTimezoneOffset() * toMs("minute");
        var offsetDate = new Date(date.getTime() + currentOffset);
        return offsetDate.getFullYear() + ("0" + (offsetDate.getMonth() + 1)).slice(-2) + ("0" + offsetDate.getDate()).slice(-2) + "T" + ("0" + offsetDate.getHours()).slice(-2) + ("0" + offsetDate.getMinutes()).slice(-2) + ("0" + offsetDate.getSeconds()).slice(-2) + "Z"
    }
    getRecurrenceString(object) {
        if (!object || !object.freq) {
            return
        }
        var result = "";
        for (var field in object) {
            var value = object[field];
            if ("interval" === field && value < 2) {
                continue
            }
            if ("until" === field) {
                value = this.getAsciiStringByDate(value)
            }
            result += field + "=" + value + ";"
        }
        result = result.substring(0, result.length - 1);
        return result.toUpperCase()
    }
    _parseExceptionToRawArray(value) {
        return value.match(/(\d{4})(\d{2})(\d{2})(T(\d{2})(\d{2})(\d{2}))?(Z)?/)
    }
    getDateByAsciiString(exceptionText) {
        if ("string" !== typeof exceptionText) {
            return exceptionText
        }
        var result = this._parseExceptionToRawArray(exceptionText);
        if (!result) {
            return null
        }
        var [year, month, date, hours, minutes, seconds, isUtc] = this._createDateTuple(result);
        if (isUtc) {
            return new Date(Date.UTC(year, month, date, hours, minutes, seconds))
        }
        return new Date(year, month, date, hours, minutes, seconds)
    }
    _dispose() {
        if (this.rRuleSet) {
            delete this.rRuleSet;
            this.rRuleSet = null
        }
        if (this.rRule) {
            delete this.rRule;
            this.rRule = null
        }
    }
    _getTimeZoneOffset() {
        return (new Date).getTimezoneOffset()
    }
    _initializeRRule(options, startDateUtc, until) {
        var ruleOptions = rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.parseString(options.rule);
        var firstDayOfWeek = options.firstDayOfWeek;
        ruleOptions.dtstart = startDateUtc;
        if (!ruleOptions.wkst && firstDayOfWeek) {
            ruleOptions.wkst = [6, 0, 1, 2, 3, 4, 5][firstDayOfWeek]
        }
        if (until) {
            ruleOptions.until = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.setOffsetsToDate(until, [-_utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.getClientTimezoneOffset(until), options.appointmentTimezoneOffset])
        }
        this._createRRule(ruleOptions);
        if (options.exception) {
            var exceptionStrings = options.exception;
            var exceptionDates = exceptionStrings.split(",").map(rule => this.getDateByAsciiString(rule));
            exceptionDates.forEach(date => {
                if (options.getPostProcessedException) {
                    date = options.getPostProcessedException(date)
                }
                var utcDate = _utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.setOffsetsToDate(date, [-_utils_timeZone__WEBPACK_IMPORTED_MODULE_4__.default.getClientTimezoneOffset(date), options.appointmentTimezoneOffset]);
                this.rRuleSet.exdate(utcDate)
            })
        }
    }
    _createRRule(ruleOptions) {
        this._dispose();
        this.rRuleSet = new rrule__WEBPACK_IMPORTED_MODULE_2__.RRuleSet;
        this.rRule = new rrule__WEBPACK_IMPORTED_MODULE_2__.RRule(ruleOptions);
        this.rRuleSet.rrule(this.rRule)
    }
    _parseRecurrenceRule(recurrence) {
        var ruleObject = {};
        var ruleParts = recurrence.split(";");
        for (var i = 0, len = ruleParts.length; i < len; i++) {
            var rule = ruleParts[i].split("=");
            var ruleName = rule[0].toLowerCase();
            var ruleValue = rule[1];
            ruleObject[ruleName] = ruleValue
        }
        var count = parseInt(ruleObject.count);
        if (!isNaN(count)) {
            ruleObject.count = count
        }
        if (ruleObject.interval) {
            var interval = parseInt(ruleObject.interval);
            if (!isNaN(interval)) {
                ruleObject.interval = interval
            }
        } else {
            ruleObject.interval = 1
        }
        if (ruleObject.freq && ruleObject.until) {
            ruleObject.until = this.getDateByAsciiString(ruleObject.until)
        }
        return ruleObject
    }
    _createDateTuple(parseResult) {
        var isUtc = void 0 !== parseResult[8];
        parseResult.shift();
        if (void 0 === parseResult[3]) {
            parseResult.splice(3)
        } else {
            parseResult.splice(3, 1);
            parseResult.splice(6)
        }
        parseResult[1]--;
        parseResult.unshift(null);
        return [parseInt(parseResult[1]), parseInt(parseResult[2]), parseInt(parseResult[3]), parseInt(parseResult[4]) || 0, parseInt(parseResult[5]) || 0, parseInt(parseResult[6]) || 0, isUtc]
    }
}
class RecurrenceValidator {
    validateRRule(rule, recurrence) {
        if (this._brokenRuleNameExists(rule) || !freqNames.includes(rule.freq) || this._wrongCountRule(rule) || this._wrongIntervalRule(rule) || this._wrongDayOfWeek(rule) || this._wrongByMonthDayRule(rule) || this._wrongByMonth(rule) || this._wrongUntilRule(rule)) {
            this._logBrokenRule(recurrence);
            return false
        }
        return true
    }
    _wrongUntilRule(rule) {
        var wrongUntil = false;
        var until = rule.until;
        if (void 0 !== until && !(until instanceof Date)) {
            wrongUntil = true
        }
        return wrongUntil
    }
    _wrongCountRule(rule) {
        var wrongCount = false;
        var count = rule.count;
        if (count && "string" === typeof count) {
            wrongCount = true
        }
        return wrongCount
    }
    _wrongByMonthDayRule(rule) {
        var wrongByMonthDay = false;
        var byMonthDay = rule.bymonthday;
        if (byMonthDay && isNaN(parseInt(byMonthDay))) {
            wrongByMonthDay = true
        }
        return wrongByMonthDay
    }
    _wrongByMonth(rule) {
        var wrongByMonth = false;
        var byMonth = rule.bymonth;
        if (byMonth && isNaN(parseInt(byMonth))) {
            wrongByMonth = true
        }
        return wrongByMonth
    }
    _wrongIntervalRule(rule) {
        var wrongInterval = false;
        var interval = rule.interval;
        if (interval && "string" === typeof interval) {
            wrongInterval = true
        }
        return wrongInterval
    }
    _wrongDayOfWeek(rule) {
        var byDay = rule.byday;
        var daysByRule = getRecurrenceProcessor().daysFromByDayRule(rule);
        var brokenDaysExist = false;
        if ("" === byDay) {
            brokenDaysExist = true
        }
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(daysByRule, (function(_, day) {
            if (!Object.prototype.hasOwnProperty.call(days, day)) {
                brokenDaysExist = true;
                return false
            }
        }));
        return brokenDaysExist
    }
    _brokenRuleNameExists(rule) {
        var brokenRuleExists = false;
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(rule, (function(ruleName) {
            if (!ruleNames.includes(ruleName)) {
                brokenRuleExists = true;
                return false
            }
        }));
        return brokenRuleExists
    }
    _logBrokenRule(recurrence) {
        if (!loggedWarnings.includes(recurrence)) {
            _core_errors__WEBPACK_IMPORTED_MODULE_0__.default.log("W0006", recurrence);
            loggedWarnings.push(recurrence)
        }
    }
}


/***/ }),

/***/ 68632:
/*!***********************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/recurrence_editor.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/component_registrator */ 2382);
/* harmony import */ var _core_guid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/guid */ 22203);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../localization/date */ 83881);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../localization/message */ 19336);
/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../form */ 19128);
/* harmony import */ var _button_group__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../button_group */ 52566);
/* harmony import */ var _date_box__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../date_box */ 88496);
/* harmony import */ var _editor_editor__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../editor/editor */ 68016);
/* harmony import */ var _number_box__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../number_box */ 28692);
/* harmony import */ var _recurrence__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./recurrence */ 68155);
/* harmony import */ var _radio_group__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../radio_group */ 97044);
/* harmony import */ var _renovation_ui_scheduler_timeZoneCalculator_types__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../renovation/ui/scheduler/timeZoneCalculator/types */ 91757);
/**
 * DevExtreme (esm/ui/scheduler/recurrence_editor.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
















var RECURRENCE_EDITOR = "dx-recurrence-editor";
var LABEL_POSTFIX = "-label";
var WRAPPER_POSTFIX = "-wrapper";
var RECURRENCE_EDITOR_CONTAINER = "dx-recurrence-editor-container";
var REPEAT_END_EDITOR = "dx-recurrence-repeat-end";
var REPEAT_END_TYPE_EDITOR = "dx-recurrence-radiogroup-repeat-type";
var REPEAT_COUNT_EDITOR = "dx-recurrence-numberbox-repeat-count";
var REPEAT_UNTIL_DATE_EDITOR = "dx-recurrence-datebox-until-date";
var RECURRENCE_BUTTON_GROUP = "dx-recurrence-button-group";
var FREQUENCY_EDITOR = "dx-recurrence-selectbox-freq";
var INTERVAL_EDITOR = "dx-recurrence-numberbox-interval";
var REPEAT_ON_EDITOR = "dx-recurrence-repeat-on";
var DAY_OF_MONTH = "dx-recurrence-numberbox-day-of-month";
var MONTH_OF_YEAR = "dx-recurrence-selectbox-month-of-year";
var recurrentEditorNumberBoxWidth = 70;
var recurrentEditorSelectBoxWidth = 120;
var defaultRecurrenceTypeIndex = 1;
var frequenciesMessages = [{
    recurrence: "dxScheduler-recurrenceHourly",
    value: "hourly"
}, {
    recurrence: "dxScheduler-recurrenceDaily",
    value: "daily"
}, {
    recurrence: "dxScheduler-recurrenceWeekly",
    value: "weekly"
}, {
    recurrence: "dxScheduler-recurrenceMonthly",
    value: "monthly"
}, {
    recurrence: "dxScheduler-recurrenceYearly",
    value: "yearly"
}];
var frequencies = frequenciesMessages.map(item => ({
    text: () => _localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format(item.recurrence),
    value: item.value
}));
var repeatEndTypes = [{
    type: "never"
}, {
    type: "until"
}, {
    type: "count"
}];
var days = ["SU", "MO", "TU", "WE", "TH", "FR", "SA"];
class RecurrenceRule {
    constructor(rule) {
        this._recurrenceProcessor = (0,_recurrence__WEBPACK_IMPORTED_MODULE_13__.getRecurrenceProcessor)();
        this._recurrenceRule = this._recurrenceProcessor.evalRecurrenceRule(rule).rule
    }
    makeRules(string) {
        this._recurrenceRule = this._recurrenceProcessor.evalRecurrenceRule(string).rule
    }
    makeRule(field, value) {
        if (!value || Array.isArray(value) && !value.length) {
            delete this._recurrenceRule[field];
            return
        }
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isDefined)(field)) {
            if ("until" === field) {
                delete this._recurrenceRule.count
            }
            if ("count" === field) {
                delete this._recurrenceRule.until
            }
            this._recurrenceRule[field] = value
        }
    }
    getRepeatEndRule() {
        var rules = this._recurrenceRule;
        if ("count" in rules) {
            return "count"
        }
        if ("until" in rules) {
            return "until"
        }
        return "never"
    }
    getRecurrenceString() {
        return this._recurrenceProcessor.getRecurrenceString(this._recurrenceRule)
    }
    getRules() {
        return this._recurrenceRule
    }
    getDaysFromByDayRule() {
        return this._recurrenceProcessor.daysFromByDayRule(this._recurrenceRule)
    }
}
class RecurrenceEditor extends _editor_editor__WEBPACK_IMPORTED_MODULE_11__.default {
    _getDefaultOptions() {
        var defaultOptions = super._getDefaultOptions();
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)(defaultOptions, {
            value: null,
            startDate: new Date,
            firstDayOfWeek: void 0
        })
    }
    _getFirstDayOfWeek() {
        var firstDayOfWeek = this.option("firstDayOfWeek");
        return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isDefined)(firstDayOfWeek) ? firstDayOfWeek : _localization_date__WEBPACK_IMPORTED_MODULE_6__.default.firstDayOfWeekIndex()
    }
    _createComponent(element, name) {
        var config = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        this._extendConfig(config, {
            readOnly: this.option("readOnly")
        });
        return super._createComponent(element, name, config)
    }
    _init() {
        super._init();
        this._recurrenceRule = new RecurrenceRule(this.option("value"))
    }
    _render() {
        super._render();
        this.$element().addClass(RECURRENCE_EDITOR);
        this._$container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(RECURRENCE_EDITOR_CONTAINER).appendTo(this.$element());
        this._prepareEditors();
        this._renderEditors(this._$container)
    }
    getEditorByField(fieldName) {
        var editor = this.getRecurrenceForm().getEditor(fieldName);
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isDefined)(editor)) {
            switch (fieldName) {
                case "byday":
                    editor = this._weekEditor;
                    break;
                case "count":
                    editor = this._repeatCountEditor;
                    break;
                case "until":
                    editor = this._repeatUntilDate
            }
        }
        return editor
    }
    _prepareEditors() {
        var freq = (this._recurrenceRule.getRules().freq || frequenciesMessages[defaultRecurrenceTypeIndex].value).toLowerCase();
        this._editors = [this._createFreqEditor(freq), this._createIntervalEditor(freq), this._createRepeatOnLabel(freq), {
            itemType: "group",
            cssClass: REPEAT_ON_EDITOR,
            colCount: 2,
            colCountByScreen: {
                xs: 2
            },
            items: this._createRepeatOnEditor(freq)
        }, {
            itemType: "group",
            items: this._createRepeatEndEditor()
        }];
        return this._editors
    }
    _createFreqEditor(freq) {
        return {
            dataField: "freq",
            name: "FREQ",
            editorType: "dxSelectBox",
            cssClass: FREQUENCY_EDITOR,
            editorOptions: {
                items: frequencies,
                value: freq,
                field: "freq",
                valueExpr: "value",
                displayExpr: "text",
                layout: "horizontal",
                elementAttr: {
                    class: FREQUENCY_EDITOR
                },
                onValueChanged: args => this._valueChangedHandler(args)
            },
            label: {
                text: _localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format("dxScheduler-editorLabelRecurrence")
            }
        }
    }
    _createIntervalEditor(freq) {
        var interval = this._recurrenceRule.getRules().interval || 1;
        return {
            itemType: "group",
            colCount: 2,
            cssClass: "".concat(INTERVAL_EDITOR).concat(WRAPPER_POSTFIX),
            colCountByScreen: {
                xs: 2
            },
            items: [{
                dataField: "interval",
                editorType: "dxNumberBox",
                editorOptions: {
                    format: "#",
                    width: recurrentEditorNumberBoxWidth,
                    min: 1,
                    field: "interval",
                    value: interval,
                    showSpinButtons: true,
                    useLargeSpinButtons: false,
                    elementAttr: {
                        class: INTERVAL_EDITOR
                    },
                    onValueChanged: args => this._valueChangedHandler(args)
                },
                label: {
                    text: _localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format("dxScheduler-recurrenceRepeatEvery")
                }
            }, {
                name: "intervalLabel",
                cssClass: "".concat(INTERVAL_EDITOR).concat(LABEL_POSTFIX),
                template: () => _localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format("dxScheduler-recurrenceRepeat".concat(freq.charAt(0).toUpperCase()).concat(freq.substr(1).toLowerCase()))
            }]
        }
    }
    _createRepeatOnLabel(freq) {
        return {
            itemType: "group",
            cssClass: "".concat(REPEAT_ON_EDITOR).concat(LABEL_POSTFIX),
            items: [{
                name: "repeatOnLabel",
                colSpan: 2,
                template: () => _localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format("dxScheduler-recurrenceRepeatOn"),
                visible: freq && "daily" !== freq && "hourly" !== freq
            }]
        }
    }
    _createRepeatOnEditor(freq) {
        return [this._createByDayEditor(freq), this._createByMonthEditor(freq), this._createByMonthDayEditor(freq)]
    }
    _createByDayEditor(freq) {
        return {
            dataField: "byday",
            colSpan: 2,
            template: (_, itemElement) => {
                var firstDayOfWeek = this._getFirstDayOfWeek();
                var byDay = this._daysOfWeekByRules();
                var localDaysNames = _localization_date__WEBPACK_IMPORTED_MODULE_6__.default.getDayNames("abbreviated");
                var dayNames = days.slice(firstDayOfWeek).concat(days.slice(0, firstDayOfWeek));
                var itemsButtonGroup = localDaysNames.slice(firstDayOfWeek).concat(localDaysNames.slice(0, firstDayOfWeek)).map((item, index) => ({
                    text: item,
                    key: dayNames[index]
                }));
                this._$repeatOnWeek = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(RECURRENCE_BUTTON_GROUP).appendTo(itemElement);
                this._weekEditor = this._createComponent(this._$repeatOnWeek, _button_group__WEBPACK_IMPORTED_MODULE_9__.default, {
                    items: itemsButtonGroup,
                    field: "byday",
                    selectionMode: "multiple",
                    selectedItemKeys: byDay,
                    keyExpr: "key",
                    onSelectionChanged: e => {
                        var selectedItemKeys = e.component.option("selectedItemKeys");
                        var selectedKeys = null !== selectedItemKeys && void 0 !== selectedItemKeys && selectedItemKeys.length ? selectedItemKeys : this._getDefaultByDayValue();
                        this._recurrenceRule.makeRule("byday", selectedKeys);
                        this._changeEditorValue()
                    }
                })
            },
            visible: "weekly" === freq,
            label: {
                visible: false
            }
        }
    }
    _createByMonthEditor(freq) {
        var monthsName = _localization_date__WEBPACK_IMPORTED_MODULE_6__.default.getMonthNames("wide");
        var months = [...Array(12)].map((_, i) => ({
            value: "".concat(i + 1),
            text: monthsName[i]
        }));
        return {
            dataField: "bymonth",
            editorType: "dxSelectBox",
            editorOptions: {
                field: "bymonth",
                items: months,
                value: this._monthOfYearByRules(),
                width: recurrentEditorSelectBoxWidth,
                displayExpr: "text",
                valueExpr: "value",
                elementAttr: {
                    class: MONTH_OF_YEAR
                },
                onValueChanged: args => this._valueChangedHandler(args)
            },
            visible: "yearly" === freq,
            label: {
                visible: false
            }
        }
    }
    _createByMonthDayEditor(freq) {
        return {
            dataField: "bymonthday",
            editorType: "dxNumberBox",
            editorOptions: {
                min: 1,
                max: 31,
                format: "#",
                width: recurrentEditorNumberBoxWidth,
                field: "bymonthday",
                showSpinButtons: true,
                useLargeSpinButtons: false,
                value: this._dayOfMonthByRules(),
                elementAttr: {
                    class: DAY_OF_MONTH
                },
                onValueChanged: args => this._valueChangedHandler(args)
            },
            visible: "monthly" === freq || "yearly" === freq,
            label: {
                visible: false
            }
        }
    }
    _createRepeatEndEditor() {
        var repeatType = this._recurrenceRule.getRepeatEndRule();
        return [{
            dataField: "repeatEnd",
            editorType: "dxRadioGroup",
            editorOptions: {
                items: repeatEndTypes,
                value: repeatType,
                valueExpr: "type",
                field: "repeatEnd",
                itemTemplate: itemData => {
                    if ("count" === itemData.type) {
                        return this._renderRepeatCountEditor()
                    }
                    if ("until" === itemData.type) {
                        return this._renderRepeatUntilEditor()
                    }
                    return this._renderDefaultRepeatEnd()
                },
                layout: "vertical",
                elementAttr: {
                    class: REPEAT_END_TYPE_EDITOR
                },
                onValueChanged: args => this._repeatEndValueChangedHandler(args)
            },
            label: {
                text: _localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format("dxScheduler-recurrenceEnd")
            }
        }]
    }
    _renderEditors($container) {
        this._recurrenceForm = this._createComponent($container, _form__WEBPACK_IMPORTED_MODULE_8__.default, {
            items: this._editors,
            showValidationSummary: false,
            scrollingEnabled: true,
            showColonAfterLabel: false,
            labelLocation: "top"
        });
        this._disableRepeatEndParts()
    }
    _setAriaDescribedBy(editor, $label) {
        var labelId = "label-".concat(new _core_guid__WEBPACK_IMPORTED_MODULE_1__.default);
        editor.setAria("describedby", labelId);
        editor.setAria("id", labelId, $label)
    }
    getRecurrenceForm() {
        return this._recurrenceForm
    }
    changeValueByVisibility(value) {
        if (value) {
            if (!this.option("value")) {
                this._handleDefaults()
            }
        } else {
            this._recurrenceRule.makeRules("");
            this.option("value", "")
        }
    }
    _handleDefaults() {
        this._recurrenceRule.makeRule("freq", frequenciesMessages[defaultRecurrenceTypeIndex].value);
        this._changeEditorValue()
    }
    _changeEditorValue() {
        this.option("value", this._recurrenceRule.getRecurrenceString() || "")
    }
    _daysOfWeekByRules() {
        var daysByRule = this._recurrenceRule.getDaysFromByDayRule();
        if (!daysByRule.length) {
            daysByRule = this._getDefaultByDayValue()
        }
        return daysByRule
    }
    _getDefaultByDayValue() {
        var startDate = this.option("startDate");
        var startDay = startDate.getDay();
        return [days[startDay]]
    }
    _dayOfMonthByRules() {
        var dayByRule = this._recurrenceRule.getRules().bymonthday;
        if (!dayByRule) {
            dayByRule = this.option("startDate").getDate()
        }
        return dayByRule
    }
    _monthOfYearByRules() {
        var monthByRule = this._recurrenceRule.getRules().bymonth;
        if (!monthByRule) {
            monthByRule = this.option("startDate").getMonth() + 1
        }
        return String(monthByRule)
    }
    _renderDefaultRepeatEnd() {
        var $editorTemplate = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").text(_localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format("dxScheduler-recurrenceNever")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorTemplate);
        return $editorTemplate
    }
    _repeatEndValueChangedHandler(args) {
        var value = args.value;
        this._disableRepeatEndParts(value);
        if ("until" === value) {
            this._recurrenceRule.makeRule(value, this._getUntilValue())
        }
        if ("count" === value) {
            this._recurrenceRule.makeRule(value, this._repeatCountEditor.option("value"))
        }
        if ("never" === value) {
            this._recurrenceRule.makeRule("count", "");
            this._recurrenceRule.makeRule("until", "")
        }
        this._changeEditorValue()
    }
    _disableRepeatEndParts() {
        var value = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._recurrenceRule.getRepeatEndRule();
        if ("until" === value) {
            this._repeatCountEditor.option("disabled", true);
            this._repeatUntilDate.option("disabled", false)
        }
        if ("count" === value) {
            this._repeatCountEditor.option("disabled", false);
            this._repeatUntilDate.option("disabled", true)
        }
        if ("never" === value) {
            this._repeatCountEditor.option("disabled", true);
            this._repeatUntilDate.option("disabled", true)
        }
    }
    _renderRepeatCountEditor() {
        var repeatCount = this._recurrenceRule.getRules().count || 1;
        var $editorWrapper = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").text(_localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format("dxScheduler-recurrenceAfter")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);
        this._$repeatCountEditor = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(REPEAT_COUNT_EDITOR).appendTo($editorWrapper);
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").text(_localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format("dxScheduler-recurrenceRepeatCount")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);
        this._repeatCountEditor = this._createComponent(this._$repeatCountEditor, _number_box__WEBPACK_IMPORTED_MODULE_12__.default, {
            field: "count",
            format: "#",
            width: recurrentEditorNumberBoxWidth,
            min: 1,
            showSpinButtons: true,
            useLargeSpinButtons: false,
            value: repeatCount,
            onValueChanged: this._repeatCountValueChangeHandler.bind(this)
        });
        return $editorWrapper
    }
    _repeatCountValueChangeHandler(args) {
        if ("count" === this._recurrenceRule.getRepeatEndRule()) {
            var value = args.value;
            this._recurrenceRule.makeRule("count", value);
            this._changeEditorValue()
        }
    }
    _formatUntilDate(date) {
        if (this._recurrenceRule.getRules().until && _core_utils_date__WEBPACK_IMPORTED_MODULE_3__.default.sameDate(this._recurrenceRule.getRules().until, date)) {
            return date
        }
        return _core_utils_date__WEBPACK_IMPORTED_MODULE_3__.default.setToDayEnd(date)
    }
    _renderRepeatUntilEditor() {
        var repeatUntil = this._getUntilValue();
        var $editorWrapper = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").text(_localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format("dxScheduler-recurrenceOn")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);
        this._$repeatDateEditor = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(REPEAT_UNTIL_DATE_EDITOR).appendTo($editorWrapper);
        this._repeatUntilDate = this._createComponent(this._$repeatDateEditor, _date_box__WEBPACK_IMPORTED_MODULE_10__.default, {
            field: "until",
            value: repeatUntil,
            type: "date",
            onValueChanged: this._repeatUntilValueChangeHandler.bind(this),
            calendarOptions: {
                firstDayOfWeek: this._getFirstDayOfWeek()
            },
            useMaskBehavior: true
        });
        return $editorWrapper
    }
    _repeatUntilValueChangeHandler(args) {
        if ("until" === this._recurrenceRule.getRepeatEndRule()) {
            var dateInTimeZone = this._formatUntilDate(new Date(args.value));
            var getStartDateTimeZone = this.option("getStartDateTimeZone");
            var appointmentTimeZone = getStartDateTimeZone();
            var path = appointmentTimeZone ? _renovation_ui_scheduler_timeZoneCalculator_types__WEBPACK_IMPORTED_MODULE_15__.PathTimeZoneConversion.fromAppointmentToSource : _renovation_ui_scheduler_timeZoneCalculator_types__WEBPACK_IMPORTED_MODULE_15__.PathTimeZoneConversion.fromGridToSource;
            var dateInLocaleTimeZone = this.option("timeZoneCalculator").createDate(dateInTimeZone, {
                path: path,
                appointmentTimeZone: appointmentTimeZone
            });
            this._recurrenceRule.makeRule("until", dateInLocaleTimeZone);
            this._changeEditorValue()
        }
    }
    _valueChangedHandler(args) {
        var {
            value: value,
            previousValue: previousValue
        } = args;
        var field = args.component.option("field");
        if (!this.option("visible")) {
            this.option("value", "")
        } else {
            this._recurrenceRule.makeRule(field, value);
            if ("freq" === field) {
                this._makeRepeatOnRule(value);
                this._changeRepeatOnVisibility(value, previousValue)
            }
            this._changeEditorValue()
        }
    }
    _makeRepeatOnRule(value) {
        if ("daily" === value || "hourly" === value) {
            this._recurrenceRule.makeRule("byday", "");
            this._recurrenceRule.makeRule("bymonth", "");
            this._recurrenceRule.makeRule("bymonthday", "")
        }
        if ("weekly" === value) {
            this._recurrenceRule.makeRule("byday", this._daysOfWeekByRules());
            this._recurrenceRule.makeRule("bymonth", "");
            this._recurrenceRule.makeRule("bymonthday", "")
        }
        if ("monthly" === value) {
            this._recurrenceRule.makeRule("bymonthday", this._dayOfMonthByRules());
            this._recurrenceRule.makeRule("bymonth", "");
            this._recurrenceRule.makeRule("byday", "")
        }
        if ("yearly" === value) {
            this._recurrenceRule.makeRule("bymonthday", this._dayOfMonthByRules());
            this._recurrenceRule.makeRule("bymonth", this._monthOfYearByRules());
            this._recurrenceRule.makeRule("byday", "")
        }
    }
    _optionChanged(args) {
        var _this$_recurrenceForm, _this$_repeatCountEdi, _this$_weekEditor, _this$_repeatUntilDat;
        switch (args.name) {
            case "readOnly":
                null === (_this$_recurrenceForm = this._recurrenceForm) || void 0 === _this$_recurrenceForm ? void 0 : _this$_recurrenceForm.option("readOnly", args.value);
                null === (_this$_repeatCountEdi = this._repeatCountEditor) || void 0 === _this$_repeatCountEdi ? void 0 : _this$_repeatCountEdi.option("readOnly", args.value);
                null === (_this$_weekEditor = this._weekEditor) || void 0 === _this$_weekEditor ? void 0 : _this$_weekEditor.option("readOnly", args.value);
                null === (_this$_repeatUntilDat = this._repeatUntilDate) || void 0 === _this$_repeatUntilDat ? void 0 : _this$_repeatUntilDat.option("readOnly", args.value);
                super._optionChanged(args);
                break;
            case "value":
                this._recurrenceRule.makeRules(args.value);
                this._changeRepeatIntervalLabel();
                this._disableRepeatEndParts();
                this._changeEditorsValue(this._recurrenceRule.getRules());
                super._optionChanged(args);
                break;
            case "startDate":
                this._makeRepeatOnRule(this._recurrenceRule.getRules().freq);
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isDefined)(this._recurrenceRule.getRecurrenceString())) {
                    this._changeEditorValue()
                }
                break;
            case "firstDayOfWeek":
                if (this._weekEditor) {
                    var localDaysNames = _localization_date__WEBPACK_IMPORTED_MODULE_6__.default.getDayNames("abbreviated");
                    var dayNames = days.slice(args.value).concat(days.slice(0, args.value));
                    var itemsButtonGroup = localDaysNames.slice(args.value).concat(localDaysNames.slice(0, args.value)).map((item, index) => ({
                        text: item,
                        key: dayNames[index]
                    }));
                    this._weekEditor.option("items", itemsButtonGroup)
                }
                if (this._$repeatDateEditor) {
                    this._repeatUntilDate.option("calendarOptions.firstDayOfWeek", this._getFirstDayOfWeek())
                }
                break;
            default:
                super._optionChanged(args)
        }
    }
    _changeRepeatOnVisibility(freq, previousFreq) {
        if (freq !== previousFreq) {
            this._recurrenceForm.itemOption("byday", "visible", false);
            this._recurrenceForm.itemOption("bymonthday", "visible", false);
            this._recurrenceForm.itemOption("bymonth", "visible", false);
            this._recurrenceForm.itemOption("repeatOnLabel", "visible", freq && "daily" !== freq && "hourly" !== freq);
            if ("weekly" === freq) {
                this._recurrenceForm.itemOption("byday", "visible", true)
            }
            if ("monthly" === freq) {
                this._recurrenceForm.itemOption("bymonthday", "visible", true)
            }
            if ("yearly" === freq) {
                this._recurrenceForm.itemOption("bymonthday", "visible", true);
                this._recurrenceForm.itemOption("bymonth", "visible", true)
            }
        }
    }
    _changeRepeatIntervalLabel() {
        var freq = this._recurrenceRule.getRules().freq;
        freq && this._recurrenceForm.itemOption("intervalLabel", "template", _localization_message__WEBPACK_IMPORTED_MODULE_7__.default.format("dxScheduler-recurrenceRepeat".concat(freq.charAt(0).toUpperCase()).concat(freq.substr(1).toLowerCase())))
    }
    _changeEditorsValue(rules) {
        this._recurrenceForm.getEditor("freq").option("value", (rules.freq || frequenciesMessages[defaultRecurrenceTypeIndex].value).toLowerCase());
        this._changeDayOfWeekValue();
        this._changeDayOfMonthValue();
        this._changeMonthOfYearValue();
        this._changeIntervalValue(rules.interval);
        this._changeRepeatCountValue();
        this._changeRepeatEndValue();
        this._changeRepeatUntilValue()
    }
    _changeIntervalValue(value) {
        this._recurrenceForm.getEditor("interval").option("value", value || 1)
    }
    _changeRepeatEndValue() {
        var repeatType = this._recurrenceRule.getRepeatEndRule();
        this._recurrenceForm.getEditor("repeatEnd").option("value", repeatType)
    }
    _changeDayOfWeekValue() {
        var isEditorVisible = this._recurrenceForm.itemOption("byday").visible;
        if (isEditorVisible) {
            var _days = this._daysOfWeekByRules();
            this.getEditorByField("byday").option("selectedItemKeys", _days)
        }
    }
    _changeDayOfMonthValue() {
        var isEditorVisible = this._recurrenceForm.itemOption("bymonthday").visible;
        if (isEditorVisible) {
            var day = this._dayOfMonthByRules();
            this._recurrenceForm.getEditor("bymonthday").option("value", day)
        }
    }
    _changeMonthOfYearValue() {
        var isEditorVisible = this._recurrenceForm.itemOption("bymonth").visible;
        if (isEditorVisible) {
            var month = this._monthOfYearByRules();
            this._recurrenceForm.getEditor("bymonth").option("value", month)
        }
    }
    _changeRepeatCountValue() {
        var count = this._recurrenceRule.getRules().count || 1;
        this._repeatCountEditor.option("value", count)
    }
    _changeRepeatUntilValue() {
        this._repeatUntilDate.option("value", this._getUntilValue())
    }
    _getUntilValue() {
        var untilDate = this._recurrenceRule.getRules().until;
        if (!untilDate) {
            return this._formatUntilDate(new Date)
        }
        var getStartDateTimeZone = this.option("getStartDateTimeZone");
        var appointmentTimeZone = getStartDateTimeZone();
        var path = appointmentTimeZone ? _renovation_ui_scheduler_timeZoneCalculator_types__WEBPACK_IMPORTED_MODULE_15__.PathTimeZoneConversion.fromSourceToAppointment : _renovation_ui_scheduler_timeZoneCalculator_types__WEBPACK_IMPORTED_MODULE_15__.PathTimeZoneConversion.fromSourceToGrid;
        return this.option("timeZoneCalculator").createDate(untilDate, {
            path: path,
            appointmentTimeZone: appointmentTimeZone
        })
    }
    toggle() {
        this._freqEditor.focus()
    }
    setAria() {
        if (this._switchEditor) {
            this._switchEditor.setAria(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1])
        }
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxRecurrenceEditor", RecurrenceEditor);
/* harmony default export */ __webpack_exports__["default"] = (RecurrenceEditor);


/***/ }),

/***/ 98105:
/*!*********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.horizontal.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/position */ 9622);
/* harmony import */ var _shaders_ui_scheduler_current_time_shader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shaders/ui.scheduler.current_time_shader */ 27159);
/**
 * DevExtreme (esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.horizontal.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class HorizontalCurrentTimeShader extends _shaders_ui_scheduler_current_time_shader__WEBPACK_IMPORTED_MODULE_2__.default {
    renderShader() {
        var groupCount = this._workSpace._isHorizontalGroupedWorkSpace() ? this._workSpace._getGroupCount() : 1;
        for (var i = 0; i < groupCount; i++) {
            var isFirstShader = 0 === i;
            var $shader = isFirstShader ? this._$shader : this.createShader();
            if (this._workSpace.isGroupedByDate()) {
                this._customizeGroupedByDateShader($shader, i)
            } else {
                this._customizeShader($shader, i)
            }!isFirstShader && this._shader.push($shader)
        }
    }
    _customizeShader($shader, groupIndex) {
        var shaderWidth = this._workSpace.getIndicationWidth();
        this._applyShaderWidth($shader, shaderWidth);
        if (groupIndex >= 1) {
            var workSpace = this._workSpace;
            var indicationWidth = workSpace._getCellCount() * workSpace.getCellWidth();
            $shader.css("left", indicationWidth)
        } else {
            $shader.css("left", 0)
        }
    }
    _applyShaderWidth($shader, width) {
        var maxWidth = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_1__.getBoundingRect)(this._$container.get(0)).width;
        if (width > maxWidth) {
            width = maxWidth
        }
        if (width > 0) {
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setWidth)($shader, width)
        }
    }
    _customizeGroupedByDateShader($shader, groupIndex) {
        var cellCount = this._workSpace.getIndicationCellCount();
        var integerPart = Math.floor(cellCount);
        var fractionPart = cellCount - integerPart;
        var isFirstShaderPart = 0 === groupIndex;
        var workSpace = this._workSpace;
        var shaderWidth = isFirstShaderPart ? workSpace.getIndicationWidth() : fractionPart * workSpace.getCellWidth();
        var shaderLeft;
        this._applyShaderWidth($shader, shaderWidth);
        if (isFirstShaderPart) {
            shaderLeft = workSpace._getCellCount() * workSpace.getCellWidth() * groupIndex
        } else {
            shaderLeft = workSpace.getCellWidth() * integerPart * workSpace._getGroupCount() + groupIndex * workSpace.getCellWidth()
        }
        $shader.css("left", shaderLeft)
    }
}
/* harmony default export */ __webpack_exports__["default"] = (HorizontalCurrentTimeShader);


/***/ }),

/***/ 27159:
/*!**********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/**
 * DevExtreme (esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var DATE_TIME_SHADER_CLASS = "dx-scheduler-date-time-shader";
class CurrentTimeShader {
    constructor(workSpace) {
        this._workSpace = workSpace;
        this._$container = this._workSpace._dateTableScrollable.$content()
    }
    render() {
        this.initShaderElements();
        this.renderShader();
        this._shader.forEach((shader, index) => {
            this._$container.append(shader)
        })
    }
    initShaderElements() {
        this._$shader = this.createShader();
        this._shader = [];
        this._shader.push(this._$shader)
    }
    renderShader() {}
    createShader() {
        return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(DATE_TIME_SHADER_CLASS)
    }
    clean() {
        this._$container && this._$container.find("." + DATE_TIME_SHADER_CLASS).remove()
    }
}
/* harmony default export */ __webpack_exports__["default"] = (CurrentTimeShader);


/***/ }),

/***/ 61446:
/*!*******************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.vertical.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _shaders_ui_scheduler_current_time_shader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shaders/ui.scheduler.current_time_shader */ 27159);
/**
 * DevExtreme (esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.vertical.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var DATE_TIME_SHADER_ALL_DAY_CLASS = "dx-scheduler-date-time-shader-all-day";
var DATE_TIME_SHADER_TOP_CLASS = "dx-scheduler-date-time-shader-top";
var DATE_TIME_SHADER_BOTTOM_CLASS = "dx-scheduler-date-time-shader-bottom";
class VerticalCurrentTimeShader extends _shaders_ui_scheduler_current_time_shader__WEBPACK_IMPORTED_MODULE_2__.default {
    renderShader() {
        var shaderHeight = this._getShaderHeight();
        var maxHeight = this._getShaderMaxHeight();
        var isSolidShader = shaderHeight > maxHeight;
        if (shaderHeight > maxHeight) {
            shaderHeight = maxHeight
        }
        (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setHeight)(this._$shader, shaderHeight);
        var groupCount = this._workSpace._getGroupCount() || 1;
        if (this._workSpace.isGroupedByDate()) {
            this._renderGroupedByDateShaderParts(groupCount, shaderHeight, maxHeight, isSolidShader)
        } else {
            this._renderShaderParts(groupCount, shaderHeight, maxHeight, isSolidShader)
        }
    }
    _renderShaderParts(groupCount, shaderHeight, maxHeight, isSolidShader) {
        for (var i = 0; i < groupCount; i++) {
            var shaderWidth = this._getShaderWidth(i);
            this._renderTopShader(this._$shader, shaderHeight, shaderWidth, i);
            !isSolidShader && this._renderBottomShader(this._$shader, maxHeight, shaderHeight, shaderWidth, i);
            this._renderAllDayShader(shaderWidth, i)
        }
    }
    _renderGroupedByDateShaderParts(groupCount, shaderHeight, maxHeight, isSolidShader) {
        var shaderWidth = this._getShaderWidth(0);
        var bottomShaderWidth = shaderWidth - this._workSpace.getCellWidth();
        if (shaderHeight < 0) {
            shaderHeight = 0;
            bottomShaderWidth = shaderWidth
        }
        this._renderTopShader(this._$shader, shaderHeight, shaderWidth * groupCount, 0);
        !isSolidShader && this._renderBottomShader(this._$shader, maxHeight, shaderHeight, bottomShaderWidth * groupCount + this._workSpace.getCellWidth(), 0);
        this._renderAllDayShader(shaderWidth * groupCount, 0)
    }
    _renderTopShader($shader, height, width, i) {
        this._$topShader = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(DATE_TIME_SHADER_TOP_CLASS);
        if (width) {
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setWidth)(this._$topShader, width)
        }
        if (height) {
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setHeight)(this._$topShader, height)
        }
        this._$topShader.css("marginTop", this._getShaderTopOffset(i));
        this._$topShader.css("left", this._getShaderOffset(i, width));
        $shader.append(this._$topShader)
    }
    _renderBottomShader($shader, maxHeight, height, width, i) {
        this._$bottomShader = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(DATE_TIME_SHADER_BOTTOM_CLASS);
        var shaderWidth = height < 0 ? width : width - this._workSpace.getCellWidth();
        var shaderHeight = height < 0 ? maxHeight : maxHeight - height;
        (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setWidth)(this._$bottomShader, shaderWidth);
        (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setHeight)(this._$bottomShader, shaderHeight);
        this._$bottomShader.css("left", this._getShaderOffset(i, width - this._workSpace.getCellWidth()));
        $shader.append(this._$bottomShader)
    }
    _renderAllDayShader(shaderWidth, i) {
        if (this._workSpace.option("showAllDayPanel")) {
            this._$allDayIndicator = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(DATE_TIME_SHADER_ALL_DAY_CLASS);
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setHeight)(this._$allDayIndicator, this._workSpace.getAllDayHeight());
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setWidth)(this._$allDayIndicator, shaderWidth);
            this._$allDayIndicator.css("left", this._getShaderOffset(i, shaderWidth));
            this._workSpace._$allDayPanel.prepend(this._$allDayIndicator)
        }
    }
    _getShaderOffset(i, width) {
        return this._workSpace.getGroupedStrategy().getShaderOffset(i, width)
    }
    _getShaderTopOffset(i) {
        return this._workSpace.getGroupedStrategy().getShaderTopOffset(i)
    }
    _getShaderHeight(i, width) {
        return this._workSpace.getGroupedStrategy().getShaderHeight()
    }
    _getShaderMaxHeight(i, width) {
        return this._workSpace.getGroupedStrategy().getShaderMaxHeight()
    }
    _getShaderWidth(i) {
        return this._workSpace.getGroupedStrategy().getShaderWidth(i)
    }
    clean() {
        super.clean();
        this._workSpace && this._workSpace._$allDayPanel && this._workSpace._$allDayPanel.find("." + DATE_TIME_SHADER_ALL_DAY_CLASS).remove()
    }
}
/* harmony default export */ __webpack_exports__["default"] = (VerticalCurrentTimeShader);


/***/ }),

/***/ 90791:
/*!****************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/subscribes.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./classes */ 19156);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils */ 56943);
/* harmony import */ var _appointmentAdapter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./appointmentAdapter */ 50760);
/* harmony import */ var _internal_scheduler_appointments_m_text_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../__internal/scheduler/appointments/m_text_utils */ 3092);
/**
 * DevExtreme (esm/ui/scheduler/subscribes.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */









var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.dateToMilliseconds;
var subscribes = {
    isCurrentViewAgenda: function() {
        return "agenda" === this.currentViewType
    },
    currentViewUpdated: function(currentView) {
        this.option("currentView", currentView)
    },
    currentDateUpdated: function(date) {
        this.option("currentDate", date)
    },
    getOption: function(name) {
        return this.option(name)
    },
    getWorkspaceOption: function(name) {
        return this.getWorkSpace().option(name)
    },
    isVirtualScrolling: function() {
        return this.isVirtualScrolling()
    },
    setCellDataCacheAlias: function(appointment, geometry) {
        this._workSpace.setCellDataCacheAlias(appointment, geometry)
    },
    isGroupedByDate: function() {
        return this.getWorkSpace().isGroupedByDate()
    },
    showAppointmentTooltip: function(options) {
        var targetedAppointment = this.getTargetedAppointment(options.data, options.target);
        this.showAppointmentTooltip(options.data, options.target, targetedAppointment)
    },
    hideAppointmentTooltip: function() {
        this.hideAppointmentTooltip()
    },
    showEditAppointmentPopup: function(options) {
        var targetedData = this.getTargetedAppointment(options.data, options.target);
        this.showAppointmentPopup(options.data, false, targetedData)
    },
    updateAppointmentAfterResize: function(options) {
        var info = _utils__WEBPACK_IMPORTED_MODULE_6__.utils.dataAccessors.getAppointmentInfo(options.$appointment);
        var exceptionDate = info.sourceAppointment.exceptionDate;
        this._checkRecurringAppointment(options.target, options.data, exceptionDate, function() {
            this._updateAppointment(options.target, options.data, (function() {
                this._appointments.moveAppointmentBack()
            }))
        }.bind(this))
    },
    getUpdatedData: function(rawAppointment) {
        return this._getUpdatedData(rawAppointment)
    },
    updateAppointmentAfterDrag: function(_ref) {
        var {
            event: event,
            element: element,
            rawAppointment: rawAppointment,
            newCellIndex: newCellIndex,
            oldCellIndex: oldCellIndex
        } = _ref;
        var info = _utils__WEBPACK_IMPORTED_MODULE_6__.utils.dataAccessors.getAppointmentInfo(element);
        var appointment = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_7__.createAppointmentAdapter)(rawAppointment, this._dataAccessors, this.timeZoneCalculator);
        var targetedAppointment = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_7__.createAppointmentAdapter)((0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)({}, rawAppointment, this._getUpdatedData(rawAppointment)), this._dataAccessors, this.timeZoneCalculator);
        var targetedRawAppointment = targetedAppointment.source();
        var becomeAllDay = targetedAppointment.allDay;
        var wasAllDay = appointment.allDay;
        var movedBetweenAllDayAndSimple = this._workSpace.supportAllDayRow() && (wasAllDay && !becomeAllDay || !wasAllDay && becomeAllDay);
        var isDragAndDropBetweenComponents = event.fromComponent !== event.toComponent;
        if (-1 === newCellIndex) {
            if (!isDragAndDropBetweenComponents) {
                this._appointments.moveAppointmentBack(event)
            }
            return
        }
        if (newCellIndex !== oldCellIndex || isDragAndDropBetweenComponents || movedBetweenAllDayAndSimple) {
            this._checkRecurringAppointment(rawAppointment, targetedRawAppointment, info.sourceAppointment.exceptionDate, () => {
                this._updateAppointment(rawAppointment, targetedRawAppointment, (function() {
                    this._appointments.moveAppointmentBack(event)
                }), event)
            }, void 0, void 0, event)
        } else {
            this._appointments.moveAppointmentBack(event)
        }
    },
    onDeleteButtonPress: function(options) {
        var targetedData = this.getTargetedAppointment(options.data, (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(options.target));
        this.checkAndDeleteAppointment(options.data, targetedData);
        this.hideAppointmentTooltip()
    },
    getTextAndFormatDate(appointmentRaw, targetedAppointmentRaw, format) {
        var appointmentAdapter = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_7__.createAppointmentAdapter)(appointmentRaw, this._dataAccessors, this.timeZoneCalculator);
        var targetedAdapter = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_7__.createAppointmentAdapter)(targetedAppointmentRaw || appointmentRaw, this._dataAccessors, this.timeZoneCalculator);
        var startDate = this.timeZoneCalculator.createDate(targetedAdapter.startDate, {
            path: "toGrid"
        });
        var endDate = this.timeZoneCalculator.createDate(targetedAdapter.endDate, {
            path: "toGrid"
        });
        var formatType = format || (0,_internal_scheduler_appointments_m_text_utils__WEBPACK_IMPORTED_MODULE_8__.getFormatType)(startDate, endDate, targetedAdapter.allDay, "month" !== this.currentViewType);
        return {
            text: targetedAdapter.text || appointmentAdapter.text,
            formatDate: (0,_internal_scheduler_appointments_m_text_utils__WEBPACK_IMPORTED_MODULE_8__.formatDates)(startDate, endDate, formatType)
        }
    },
    _createAppointmentTitle(data) {
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(data)) {
            return data.text
        }
        return String(data)
    },
    getResizableAppointmentArea: function(options) {
        var allDay = options.allDay;
        var groups = this._getCurrentViewOption("groups");
        if (groups && groups.length) {
            if (allDay || this.getLayoutManager().getRenderingStrategyInstance()._needHorizontalGroupBounds()) {
                var horizontalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);
                return {
                    left: horizontalGroupBounds.left,
                    right: horizontalGroupBounds.right,
                    top: 0,
                    bottom: 0
                }
            }
            if (this.getLayoutManager().getRenderingStrategyInstance()._needVerticalGroupBounds(allDay) && this._workSpace._isVerticalGroupedWorkSpace()) {
                var verticalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);
                return {
                    left: 0,
                    right: 0,
                    top: verticalGroupBounds.top,
                    bottom: verticalGroupBounds.bottom
                }
            }
        }
    },
    needRecalculateResizableArea: function() {
        return this.getWorkSpace().needRecalculateResizableArea()
    },
    getAppointmentGeometry: function(settings) {
        return this.getLayoutManager().getRenderingStrategyInstance().getAppointmentGeometry(settings)
    },
    isAllDay: function(appointmentData) {
        return this.getLayoutManager().getRenderingStrategyInstance().isAllDay(appointmentData)
    },
    getDeltaTime: function(e, initialSize, itemData) {
        return this.getLayoutManager().getRenderingStrategyInstance().getDeltaTime(e, initialSize, itemData)
    },
    getDropDownAppointmentWidth: function(isAllDay) {
        return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentWidth(this._getViewCountConfig().intervalCount, isAllDay)
    },
    getDropDownAppointmentHeight: function() {
        return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentHeight()
    },
    getCellWidth: function() {
        return this.getWorkSpace().getCellWidth()
    },
    getCellHeight: function() {
        return this.getWorkSpace().getCellHeight()
    },
    getMaxAppointmentCountPerCellByType: function(isAllDay) {
        return this.getRenderingStrategyInstance()._getMaxAppointmentCountPerCellByType(isAllDay)
    },
    needCorrectAppointmentDates: function() {
        return this.getRenderingStrategyInstance().needCorrectAppointmentDates()
    },
    getRenderingStrategyDirection: function() {
        return this.getRenderingStrategyInstance().getDirection()
    },
    updateAppointmentEndDate: function(options) {
        var endDate = options.endDate;
        var endDayHour = this._getCurrentViewOption("endDayHour");
        var startDayHour = this._getCurrentViewOption("startDayHour");
        var updatedEndDate = endDate;
        if (endDate.getHours() >= endDayHour) {
            updatedEndDate.setHours(endDayHour, 0, 0, 0)
        } else if (!options.isSameDate && startDayHour > 0 && 60 * endDate.getHours() + endDate.getMinutes() < 60 * startDayHour) {
            updatedEndDate = new Date(updatedEndDate.getTime() - toMs("day"));
            updatedEndDate.setHours(endDayHour, 0, 0, 0)
        }
        return updatedEndDate
    },
    renderCompactAppointments: function(options) {
        this._compactAppointmentsHelper.render(options)
    },
    clearCompactAppointments: function() {
        this._compactAppointmentsHelper.clear()
    },
    supportCompactDropDownAppointments: function() {
        return this.getLayoutManager().getRenderingStrategyInstance().supportCompactDropDownAppointments()
    },
    getGroupCount: function() {
        return this._workSpace._getGroupCount()
    },
    mapAppointmentFields: function(config) {
        var {
            itemData: itemData,
            itemElement: itemElement,
            targetedAppointment: targetedAppointment
        } = config;
        var targetedData = targetedAppointment || this.getTargetedAppointment(itemData, itemElement);
        return {
            appointmentData: config.itemData,
            appointmentElement: config.itemElement,
            targetedAppointmentData: targetedData
        }
    },
    dayHasAppointment: function(day, appointment, trimTime) {
        return this.dayHasAppointment(day, appointment, trimTime)
    },
    getLayoutManager: function() {
        return this._layoutManager
    },
    getAgendaVerticalStepHeight: function() {
        return this.getWorkSpace().getAgendaVerticalStepHeight()
    },
    getAgendaDuration: function() {
        return this._getCurrentViewOption("agendaDuration")
    },
    getStartViewDate: function() {
        return this.getStartViewDate()
    },
    getEndViewDate: function() {
        return this.getEndViewDate()
    },
    forceMaxAppointmentPerCell: function() {
        return this.forceMaxAppointmentPerCell()
    },
    onAgendaReady: function(rows) {
        var $appts = this.getAppointmentsInstance()._itemElements();
        var total = 0;
        var applyClass = function(_, count) {
            var index = count + total - 1;
            $appts.eq(index).addClass(_classes__WEBPACK_IMPORTED_MODULE_5__.AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS);
            total += count
        };
        for (var i = 0; i < rows.length; i++) {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__.each)(rows[i], applyClass)
        }
    },
    getTimezone: function() {
        return this._getTimezoneOffsetByOption()
    },
    getTargetedAppointmentData: function(appointment, element) {
        return this.getTargetedAppointment(appointment, element)
    },
    getEndDayHour: function() {
        return this._workSpace.option("endDayHour") || this.option("endDayHour")
    },
    getStartDayHour: function() {
        return this._workSpace.option("startDayHour") || this.option("startDayHour")
    },
    isAdaptive: function() {
        return this.option("adaptivityEnabled")
    },
    removeDroppableCellClass: function() {
        this._workSpace.removeDroppableCellClass()
    }
};
/* harmony default export */ __webpack_exports__["default"] = (subscribes);


/***/ }),

/***/ 27336:
/*!*******************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/table_creator.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/dom_adapter */ 81113);
/* harmony import */ var _core_element_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/element_data */ 25694);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/element */ 60213);
/**
 * DevExtreme (esm/ui/scheduler/table_creator.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */






var ROW_SELECTOR = "tr";
class SchedulerTableCreator {
    constructor() {
        this.VERTICAL = "vertical";
        this.HORIZONTAL = "horizontal"
    }
    insertAllDayRow(allDayElements, tableBody, index) {
        if (allDayElements[index]) {
            var row = allDayElements[index].find(ROW_SELECTOR);
            if (!row.length) {
                row = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.createElement(ROW_SELECTOR));
                row.append(allDayElements[index].get(0))
            }
            tableBody.appendChild(row.get ? row.get(0) : row)
        }
    }
    makeTable(options) {
        var tableBody = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.createElement("tbody");
        var templateCallbacks = [];
        var row;
        var rowCountInGroup = options.groupCount ? options.rowCount / options.groupCount : options.rowCount;
        var allDayElementIndex = 0;
        var allDayElements = options.allDayElements;
        var groupIndex = options.groupIndex;
        var rowCount = options.rowCount;
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(options.container).append(tableBody);
        if (allDayElements) {
            this.insertAllDayRow(allDayElements, tableBody, 0);
            allDayElementIndex++
        }
        for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {
            row = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.createElement(ROW_SELECTOR);
            tableBody.appendChild(row);
            var isLastRowInGroup = (rowIndex + 1) % rowCountInGroup === 0;
            if (options.rowClass) {
                row.className = options.rowClass
            }
            for (var columnIndex = 0; columnIndex < options.cellCount; columnIndex++) {
                var _options$setAdditiona;
                var td = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.createElement("td");
                row.appendChild(td);
                if (options.cellClass) {
                    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isFunction)(options.cellClass)) {
                        td.className = options.cellClass(rowIndex, columnIndex)
                    } else {
                        td.className = options.cellClass
                    }
                }
                var cellDataObject = void 0;
                var dataKey = void 0;
                var dataValue = void 0;
                if (options.getCellData) {
                    cellDataObject = options.getCellData(td, rowIndex, columnIndex, groupIndex);
                    dataKey = cellDataObject.key;
                    dataValue = cellDataObject.value;
                    dataKey && (0,_core_element_data__WEBPACK_IMPORTED_MODULE_3__.data)(td, dataKey, dataValue)
                }
                null === (_options$setAdditiona = options.setAdditionalClasses) || void 0 === _options$setAdditiona ? void 0 : _options$setAdditiona.call(options, (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(td), dataValue);
                if (options.cellTemplate && options.cellTemplate.render) {
                    var additionalTemplateData = options.getTemplateData ? options.getTemplateData(rowIndex) : {};
                    var templateOptions = {
                        model: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
                            text: options.getCellText ? options.getCellText(rowIndex, columnIndex) : "",
                            date: options.getCellDate ? options.getCellDate(rowIndex) : void 0
                        }, additionalTemplateData),
                        container: (0,_core_element__WEBPACK_IMPORTED_MODULE_5__.getPublicElement)((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(td)),
                        index: rowIndex * options.cellCount + columnIndex
                    };
                    if (dataValue) {
                        if (dataValue.startDate) {
                            templateOptions.model.startDate = dataValue.startDate
                        }
                        if (dataValue.endDate) {
                            templateOptions.model.endDate = dataValue.endDate
                        }
                        if (dataValue.groups) {
                            templateOptions.model.groups = dataValue.groups
                        }
                        if (dataValue.allDay) {
                            templateOptions.model.allDay = dataValue.allDay
                        }
                    }
                    templateCallbacks.push(options.cellTemplate.render.bind(options.cellTemplate, templateOptions))
                } else if (options.getCellText) {
                    (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").text(options.getCellText(rowIndex, columnIndex)).addClass(options.getCellTextClass).appendTo((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(td))
                }
            }
            if (allDayElements && isLastRowInGroup) {
                this.insertAllDayRow(allDayElements, tableBody, allDayElementIndex);
                allDayElementIndex++
            }
        }
        return templateCallbacks
    }
    makeGroupedTable(type, groups, cssClasses, cellCount, cellTemplate, rowCount, groupByDate) {
        var rows = [];
        if (type === this.VERTICAL) {
            rows = this._makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount)
        } else {
            rows = this._makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate)
        }
        return rows
    }
    makeGroupedTableFromJSON(type, data, config) {
        var table;
        var cellStorage = [];
        var rowIndex = 0;
        config = config || {};
        var cellTag = config.cellTag || "td";
        var childrenField = config.childrenField || "children";
        var titleField = config.titleField || "title";
        var groupTableClass = config.groupTableClass;
        var groupRowClass = config.groupRowClass;
        var groupCellClass = config.groupCellClass;
        var groupCellCustomContent = config.groupCellCustomContent;

        function getChildCount(item) {
            if (item[childrenField]) {
                return item[childrenField].length
            }
            return 0
        }

        function createCell(text, childCount, index, data) {
            var cell = {
                element: _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.createElement(cellTag),
                childCount: childCount
            };
            if (groupCellClass) {
                cell.element.className = groupCellClass
            }
            var cellText = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.createTextNode(text);
            if ("function" === typeof groupCellCustomContent) {
                groupCellCustomContent(cell.element, cellText, index, data)
            } else {
                cell.element.appendChild(cellText)
            }
            return cell
        }! function() {
            table = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.createElement("table");
            if (groupTableClass) {
                table.className = groupTableClass
            }
        }();
        ! function generateCells(data) {
            for (var i = 0; i < data.length; i++) {
                var childCount = getChildCount(data[i]);
                var cell = createCell(data[i][titleField], childCount, i, data[i]);
                if (!cellStorage[rowIndex]) {
                    cellStorage[rowIndex] = []
                }
                cellStorage[rowIndex].push(cell);
                if (childCount) {
                    generateCells(data[i][childrenField])
                } else {
                    rowIndex++
                }
            }
        }(data);
        void cellStorage.forEach((function(cells) {
            var row = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.createElement(ROW_SELECTOR);
            if (groupRowClass) {
                row.className = groupRowClass
            }
            var rowspans = [];
            for (var i = cells.length - 1; i >= 0; i--) {
                var prev = cells[i + 1];
                var rowspan = cells[i].childCount;
                if (prev && prev.childCount) {
                    rowspan *= prev.childCount
                }
                rowspans.push(rowspan)
            }
            rowspans.reverse();
            cells.forEach((function(cell, index) {
                if (rowspans[index]) {
                    cell.element.setAttribute("rowSpan", rowspans[index])
                }
                row.appendChild(cell.element)
            }));
            table.appendChild(row)
        }));
        return table
    }
    _makeFlexGroupedRowCells(group, repeatCount, cssClasses, cellTemplate) {
        var repeatByDate = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;
        var cells = [];
        var items = group.items;
        var itemCount = items.length;
        for (var i = 0; i < repeatCount * repeatByDate; i++) {
            for (var j = 0; j < itemCount; j++) {
                var $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>");
                var cell = {};
                if (cellTemplate && cellTemplate.render) {
                    var templateOptions = {
                        model: items[j],
                        container: (0,_core_element__WEBPACK_IMPORTED_MODULE_5__.getPublicElement)($container),
                        index: i * itemCount + j
                    };
                    if (group.data) {
                        templateOptions.model.data = group.data[j]
                    }
                    cell.template = cellTemplate.render.bind(cellTemplate, templateOptions)
                } else {
                    $container.text(items[j].text).attr("title", items[j].text).addClass("dx-scheduler-group-header-content");
                    $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").append($container)
                }
                var cssClass = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isFunction)(cssClasses.groupHeaderClass) ? cssClasses.groupHeaderClass(j) : cssClasses.groupHeaderClass;
                cell.element = $container.addClass(cssClass);
                cells.push(cell)
            }
        }
        return cells
    }
    _makeVerticalGroupedRows(groups, cssClasses, cellTemplate) {
        var cellTemplates = [];
        var repeatCount = 1;
        var cellsArray = [];
        var cellIterator = function(cell) {
            if (cell.template) {
                cellTemplates.push(cell.template)
            }
        };
        for (var i = 0; i < groups.length; i++) {
            if (i > 0) {
                repeatCount = groups[i - 1].items.length * repeatCount
            }
            var cells = this._makeFlexGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate);
            cells.forEach(cellIterator);
            cellsArray.push(cells)
        }
        var rows = [];
        var groupCount = cellsArray.length;
        for (var _i = 0; _i < groupCount; _i++) {
            rows.push((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(cssClasses.groupHeaderRowClass))
        }
        for (var _i2 = groupCount - 1; _i2 >= 0; _i2--) {
            var currentColumnLength = cellsArray[_i2].length;
            for (var j = 0; j < currentColumnLength; j++) {
                rows[_i2].append(cellsArray[_i2][j].element)
            }
        }
        return {
            elements: (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass("dx-scheduler-group-flex-container").append(rows),
            cellTemplates: cellTemplates
        }
    }
    _makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate) {
        var repeatCount = 1;
        var groupCount = groups.length;
        var rows = [];
        var cellTemplates = [];
        var repeatByDate = groupByDate ? cellCount : 1;
        var cellIterator = function(cell) {
            if (cell.template) {
                cellTemplates.push(cell.template)
            }
            return cell.element
        };
        for (var i = 0; i < groupCount; i++) {
            if (i > 0) {
                repeatCount = groups[i - 1].items.length * repeatCount
            }
            var cells = this._makeGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate, repeatByDate);
            rows.push((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<tr>").addClass(cssClasses.groupRowClass).append(cells.map(cellIterator)))
        }
        var maxCellCount = rows[groupCount - 1].find("th").length;
        for (var j = 0; j < groupCount; j++) {
            var $cell = rows[j].find("th");
            var colspan = maxCellCount / $cell.length;
            if (!groupByDate) {
                colspan *= cellCount
            }
            if (colspan > 1 && 1 === repeatByDate || groupByDate && groupCount > 1) {
                $cell.attr("colSpan", colspan)
            }
        }
        return {
            elements: rows,
            cellTemplates: cellTemplates
        }
    }
    _makeGroupedRowCells(group, repeatCount, cssClasses, cellTemplate, repeatByDate) {
        repeatByDate = repeatByDate || 1;
        repeatCount *= repeatByDate;
        var cells = [];
        var items = group.items;
        var itemCount = items.length;
        for (var i = 0; i < repeatCount; i++) {
            for (var j = 0; j < itemCount; j++) {
                var $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>");
                var cell = {};
                if (cellTemplate && cellTemplate.render) {
                    var templateOptions = {
                        model: items[j],
                        container: (0,_core_element__WEBPACK_IMPORTED_MODULE_5__.getPublicElement)($container),
                        index: i * itemCount + j
                    };
                    if (group.data) {
                        templateOptions.model.data = group.data[j]
                    }
                    cell.template = cellTemplate.render.bind(cellTemplate, templateOptions)
                } else {
                    $container.text(items[j].text);
                    $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").append($container)
                }
                $container.addClass(cssClasses.groupHeaderContentClass);
                var cssClass = void 0;
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isFunction)(cssClasses.groupHeaderClass)) {
                    cssClass = cssClasses.groupHeaderClass(j)
                } else {
                    cssClass = cssClasses.groupHeaderClass
                }
                cell.element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<th>").addClass(cssClass).append($container);
                cells.push(cell)
            }
        }
        return cells
    }
}
/* harmony default export */ __webpack_exports__["default"] = ({
    tableCreator: new SchedulerTableCreator
});


/***/ }),

/***/ 18817:
/*!******************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/ui.scheduler.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/component_registrator */ 2382);
/* harmony import */ var _core_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/config */ 99284);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/devices */ 41881);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/templates/bindable_template */ 32503);
/* harmony import */ var _core_templates_empty_template__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/templates/empty_template */ 3896);
/* harmony import */ var _core_utils_callbacks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/callbacks */ 18557);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/common */ 37552);
/* harmony import */ var _core_utils_data__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/data */ 25670);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/position */ 9622);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/date_serialization */ 37043);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/deferred */ 97233);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/window */ 88684);
/* harmony import */ var _data_helper__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../data_helper */ 53454);
/* harmony import */ var _events_visibility_change__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../events/visibility_change */ 23495);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../localization/date */ 83881);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../localization/message */ 19336);
/* harmony import */ var _dialog__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../dialog */ 95752);
/* harmony import */ var _themes__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../themes */ 78279);
/* harmony import */ var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../widget/ui.errors */ 42491);
/* harmony import */ var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../widget/ui.widget */ 69703);
/* harmony import */ var _internal_scheduler_appointment_popup_m_popup__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../__internal/scheduler/appointment_popup/m_popup */ 80619);
/* harmony import */ var _internal_scheduler_appointment_popup_m_form__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../__internal/scheduler/appointment_popup/m_form */ 30892);
/* harmony import */ var _compactAppointmentsHelper__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./compactAppointmentsHelper */ 30935);
/* harmony import */ var _internal_scheduler_tooltip_strategies_m_desktop_tooltip_strategy__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../__internal/scheduler/tooltip_strategies/m_desktop_tooltip_strategy */ 59342);
/* harmony import */ var _internal_scheduler_tooltip_strategies_m_mobile_tooltip_strategy__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../../__internal/scheduler/tooltip_strategies/m_mobile_tooltip_strategy */ 20509);
/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./loading */ 68225);
/* harmony import */ var _internal_scheduler_appointments_m_appointment_collection__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../__internal/scheduler/appointments/m_appointment_collection */ 13216);
/* harmony import */ var _appointments_layout_manager__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./appointments.layout_manager */ 38104);
/* harmony import */ var _internal_scheduler_header_m_header__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../../__internal/scheduler/header/m_header */ 67036);
/* harmony import */ var _subscribes__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./subscribes */ 90791);
/* harmony import */ var _recurrence__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./recurrence */ 68155);
/* harmony import */ var _utils_timeZone__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./utils.timeZone */ 53374);
/* harmony import */ var _workspaces_ui_scheduler_agenda__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./workspaces/ui.scheduler.agenda */ 85664);
/* harmony import */ var _workspaces_ui_scheduler_timeline_day__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./workspaces/ui.scheduler.timeline_day */ 37867);
/* harmony import */ var _workspaces_ui_scheduler_timeline_month__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./workspaces/ui.scheduler.timeline_month */ 36922);
/* harmony import */ var _workspaces_ui_scheduler_timeline_week__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./workspaces/ui.scheduler.timeline_week */ 80050);
/* harmony import */ var _workspaces_ui_scheduler_timeline_work_week__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./workspaces/ui.scheduler.timeline_work_week */ 87464);
/* harmony import */ var _workspaces_ui_scheduler_work_space_day__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./workspaces/ui.scheduler.work_space_day */ 69681);
/* harmony import */ var _workspaces_ui_scheduler_work_space_month__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./workspaces/ui.scheduler.work_space_month */ 23645);
/* harmony import */ var _workspaces_ui_scheduler_work_space_week__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./workspaces/ui.scheduler.work_space_week */ 60188);
/* harmony import */ var _workspaces_ui_scheduler_work_space_work_week__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./workspaces/ui.scheduler.work_space_work_week */ 44040);
/* harmony import */ var _appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./appointmentAdapter */ 50760);
/* harmony import */ var _dataStructures__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./dataStructures */ 58595);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./utils */ 56943);
/* harmony import */ var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../../__internal/scheduler/resources/m_utils */ 48025);
/* harmony import */ var _expressionUtils__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./expressionUtils */ 91286);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _internal_scheduler_appointments_m_render__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../../__internal/scheduler/appointments/m_render */ 95126);
/* harmony import */ var _internal_scheduler_resources_m_agenda_resource_processor__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../../__internal/scheduler/resources/m_agenda_resource_processor */ 220);
/* harmony import */ var _internal_scheduler_appointments_data_provider_m_appointment_data_provider__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../../__internal/scheduler/appointments/data_provider/m_appointment_data_provider */ 33845);
/* harmony import */ var _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay */ 89448);
/* harmony import */ var _renovation_ui_scheduler_utils_data__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../../renovation/ui/scheduler/utils/data */ 48543);
/* harmony import */ var _renovation_ui_scheduler_model_views__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../../renovation/ui/scheduler/model/views */ 13108);
/* harmony import */ var _renovation_ui_scheduler_timeZoneCalculator_createTimeZoneCalculator__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../../renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator */ 41059);
/* harmony import */ var _renovation_ui_scheduler_utils_recurrence_excludeFromRecurrence__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../../renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence */ 68913);
/**
 * DevExtreme (esm/ui/scheduler/ui.scheduler.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */





























































var MINUTES_IN_HOUR = 60;
var DEFAULT_AGENDA_DURATION = 7;
var WIDGET_CLASS = "dx-scheduler";
var WIDGET_SMALL_CLASS = "".concat(WIDGET_CLASS, "-small");
var WIDGET_ADAPTIVE_CLASS = "".concat(WIDGET_CLASS, "-adaptive");
var WIDGET_READONLY_CLASS = "".concat(WIDGET_CLASS, "-readonly");
var WIDGET_SMALL_WIDTH = 400;
var FULL_DATE_FORMAT = "yyyyMMddTHHmmss";
var UTC_FULL_DATE_FORMAT = FULL_DATE_FORMAT + "Z";
var DEFAULT_APPOINTMENT_TEMPLATE_NAME = "item";
var DEFAULT_APPOINTMENT_COLLECTOR_TEMPLATE_NAME = "appointmentCollector";
var DEFAULT_DROP_DOWN_APPOINTMENT_TEMPLATE_NAME = "dropDownAppointment";
var VIEWS_CONFIG = {
  day: {
    workSpace: _workspaces_ui_scheduler_work_space_day__WEBPACK_IMPORTED_MODULE_43__.default,
    renderingStrategy: "vertical"
  },
  week: {
    workSpace: _workspaces_ui_scheduler_work_space_week__WEBPACK_IMPORTED_MODULE_45__.default,
    renderingStrategy: "vertical"
  },
  workWeek: {
    workSpace: _workspaces_ui_scheduler_work_space_work_week__WEBPACK_IMPORTED_MODULE_46__.default,
    renderingStrategy: "vertical"
  },
  month: {
    workSpace: _workspaces_ui_scheduler_work_space_month__WEBPACK_IMPORTED_MODULE_44__.default,
    renderingStrategy: "horizontalMonth"
  },
  timelineDay: {
    workSpace: _workspaces_ui_scheduler_timeline_day__WEBPACK_IMPORTED_MODULE_39__.default,
    renderingStrategy: "horizontal"
  },
  timelineWeek: {
    workSpace: _workspaces_ui_scheduler_timeline_week__WEBPACK_IMPORTED_MODULE_41__.default,
    renderingStrategy: "horizontal"
  },
  timelineWorkWeek: {
    workSpace: _workspaces_ui_scheduler_timeline_work_week__WEBPACK_IMPORTED_MODULE_42__.default,
    renderingStrategy: "horizontal"
  },
  timelineMonth: {
    workSpace: _workspaces_ui_scheduler_timeline_month__WEBPACK_IMPORTED_MODULE_40__.default,
    renderingStrategy: "horizontalMonthLine"
  },
  agenda: {
    workSpace: _workspaces_ui_scheduler_agenda__WEBPACK_IMPORTED_MODULE_38__.default,
    renderingStrategy: "agenda"
  }
};
var StoreEventNames = {
  ADDING: "onAppointmentAdding",
  ADDED: "onAppointmentAdded",
  DELETING: "onAppointmentDeleting",
  DELETED: "onAppointmentDeleted",
  UPDATING: "onAppointmentUpdating",
  UPDATED: "onAppointmentUpdated"
};
var RECURRENCE_EDITING_MODE = {
  SERIES: "editSeries",
  OCCURENCE: "editOccurence",
  CANCEL: "cancel"
};

class Scheduler extends _widget_ui_widget__WEBPACK_IMPORTED_MODULE_25__.default {
  _getDefaultOptions() {
    var defaultOptions = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)(super._getDefaultOptions(), {
      views: ["day", "week"],
      currentView: "day",
      currentDate: _core_utils_date__WEBPACK_IMPORTED_MODULE_11__.default.trimTime(new Date()),
      min: void 0,
      max: void 0,
      dateSerializationFormat: void 0,
      firstDayOfWeek: void 0,
      groups: [],
      resources: [],
      loadedResources: [],
      resourceLoaderMap: new Map(),
      dataSource: null,
      customizeDateNavigatorText: void 0,
      appointmentTemplate: DEFAULT_APPOINTMENT_TEMPLATE_NAME,
      dropDownAppointmentTemplate: DEFAULT_DROP_DOWN_APPOINTMENT_TEMPLATE_NAME,
      appointmentCollectorTemplate: DEFAULT_APPOINTMENT_COLLECTOR_TEMPLATE_NAME,
      dataCellTemplate: null,
      timeCellTemplate: null,
      resourceCellTemplate: null,
      dateCellTemplate: null,
      startDayHour: 0,
      endDayHour: 24,
      editing: {
        allowAdding: true,
        allowDeleting: true,
        allowDragging: true,
        allowResizing: true,
        allowUpdating: true,
        allowTimeZoneEditing: false
      },
      showAllDayPanel: true,
      showCurrentTimeIndicator: true,
      shadeUntilCurrentTime: false,
      indicatorUpdateInterval: 3e5,
      indicatorTime: void 0,
      recurrenceEditMode: "dialog",
      cellDuration: 30,
      maxAppointmentsPerCell: "auto",
      selectedCellData: [],
      groupByDate: false,
      onAppointmentRendered: null,
      onAppointmentClick: null,
      onAppointmentDblClick: null,
      onAppointmentContextMenu: null,
      onCellClick: null,
      onCellContextMenu: null,
      onAppointmentAdding: null,
      onAppointmentAdded: null,
      onAppointmentUpdating: null,
      onAppointmentUpdated: null,
      onAppointmentDeleting: null,
      onAppointmentDeleted: null,
      onAppointmentFormOpening: null,
      onAppointmentTooltipShowing: null,
      appointmentTooltipTemplate: "appointmentTooltip",
      appointmentPopupTemplate: "appointmentPopup",
      crossScrollingEnabled: false,
      useDropDownViewSwitcher: false,
      startDateExpr: "startDate",
      endDateExpr: "endDate",
      textExpr: "text",
      descriptionExpr: "description",
      allDayExpr: "allDay",
      recurrenceRuleExpr: "recurrenceRule",
      recurrenceExceptionExpr: "recurrenceException",
      disabledExpr: "disabled",
      remoteFiltering: false,
      timeZone: "",
      startDateTimeZoneExpr: "startDateTimeZone",
      endDateTimeZoneExpr: "endDateTimeZone",
      noDataText: _localization_message__WEBPACK_IMPORTED_MODULE_21__.default.format("dxCollectionWidget-noDataText"),
      adaptivityEnabled: false,
      allowMultipleCellSelection: true,
      scrolling: {
        mode: "standard"
      },
      allDayPanelMode: "all",
      renovateRender: true,
      _draggingMode: "outlook",
      _appointmentTooltipOffset: {
        x: 0,
        y: 0
      },
      _appointmentTooltipButtonsPosition: "bottom",
      _appointmentTooltipOpenButtonText: _localization_message__WEBPACK_IMPORTED_MODULE_21__.default.format("dxScheduler-openAppointment"),
      _appointmentCountPerCell: 2,
      _collectorOffset: 0,
      _appointmentOffset: 26,
      toolbar: [{
        location: "before",
        defaultElement: "dateNavigator"
      }, {
        location: "after",
        defaultElement: "viewSwitcher"
      }]
    });
    return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)(true, defaultOptions, {
      integrationOptions: {
        useDeferUpdateForTemplates: false
      }
    });
  }

  get filteredItems() {
    if (!this._filteredItems) {
      this._filteredItems = [];
    }

    return this._filteredItems;
  }

  set filteredItems(value) {
    this._filteredItems = value;
  }

  get preparedItems() {
    if (!this._preparedItems) {
      this._preparedItems = [];
    }

    return this._preparedItems;
  }

  set preparedItems(value) {
    this._preparedItems = value;
  }

  get currentView() {
    return (0,_renovation_ui_scheduler_model_views__WEBPACK_IMPORTED_MODULE_58__.getCurrentView)(this.option("currentView"), this.option("views"));
  }

  get currentViewType() {
    return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isObject)(this.currentView) ? this.currentView.type : this.currentView;
  }

  get timeZoneCalculator() {
    if (!this._timeZoneCalculator) {
      this._timeZoneCalculator = (0,_renovation_ui_scheduler_timeZoneCalculator_createTimeZoneCalculator__WEBPACK_IMPORTED_MODULE_59__.createTimeZoneCalculator)(this.option("timeZone"));
    }

    return this._timeZoneCalculator;
  }

  _setDeprecatedOptions() {
    super._setDeprecatedOptions();

    (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)(this._deprecatedOptions, {
      dropDownAppointmentTemplate: {
        since: "19.2",
        message: "appointmentTooltipTemplate"
      }
    });
  }

  _defaultOptionsRules() {
    return super._defaultOptionsRules().concat([{
      device: function () {
        return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_3__.default.real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_3__.default.isSimulator();
      },
      options: {
        focusStateEnabled: true
      }
    }, {
      device: function () {
        return !_core_devices__WEBPACK_IMPORTED_MODULE_3__.default.current().generic;
      },
      options: {
        useDropDownViewSwitcher: true,
        editing: {
          allowDragging: false,
          allowResizing: false
        }
      }
    }, {
      device: function () {
        return (0,_themes__WEBPACK_IMPORTED_MODULE_23__.isMaterial)();
      },
      options: {
        useDropDownViewSwitcher: true,
        dateCellTemplate: function (data, index, element) {
          var text = data.text;
          text.split(" ").forEach(function (text, index) {
            var span = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_4__.default)("<span>").text(text).addClass("dx-scheduler-header-panel-cell-date");
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_4__.default)(element).append(span);

            if (!index) {
              (0,_core_renderer__WEBPACK_IMPORTED_MODULE_4__.default)(element).append(" ");
            }
          });
        },
        _appointmentTooltipOffset: {
          x: 0,
          y: 11
        },
        _appointmentTooltipButtonsPosition: "top",
        _appointmentTooltipOpenButtonText: null,
        _appointmentCountPerCell: 1,
        _collectorOffset: 20,
        _appointmentOffset: 30
      }
    }]);
  }

  _postponeDataSourceLoading(promise) {
    this.postponedOperations.add("_reloadDataSource", this._reloadDataSource.bind(this), promise);
  }

  _postponeResourceLoading() {
    var whenLoaded = this.postponedOperations.add("loadResources", () => {
      var groups = this._getCurrentViewOption("groups");

      return (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_50__.loadResources)(groups, this.option("resources"), this.option("resourceLoaderMap"));
    });
    var resolveCallbacks = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.Deferred();
    whenLoaded.done(resources => {
      this.option("loadedResources", resources);
      resolveCallbacks.resolve(resources);
    });

    this._postponeDataSourceLoading(whenLoaded);

    return resolveCallbacks.promise();
  }

  _optionChanged(args) {
    var _this$_header, _this$_header2, _this$_header4;

    var value = args.value;
    var name = args.name;

    switch (args.name) {
      case "customizeDateNavigatorText":
        this._updateOption("header", name, value);

        break;

      case "firstDayOfWeek":
        this._updateOption("workSpace", name, value);

        this._updateOption("header", name, value);

        break;

      case "currentDate":
        value = this._dateOption(name);
        value = _core_utils_date__WEBPACK_IMPORTED_MODULE_11__.default.trimTime(new Date(value));
        this.option("selectedCellData", []);

        this._workSpace.option(name, new Date(value));

        null === (_this$_header = this._header) || void 0 === _this$_header ? void 0 : _this$_header.option(name, new Date(value));
        null === (_this$_header2 = this._header) || void 0 === _this$_header2 ? void 0 : _this$_header2.option("startViewDate", this.getStartViewDate());

        this._appointments.option("items", []);

        this._filterAppointmentsByDate();

        this._postponeDataSourceLoading();

        break;

      case "dataSource":
        this._initDataSource();

        this.appointmentDataProvider.setDataSource(this._dataSource);

        this._postponeResourceLoading().done(resources => {
          this._filterAppointmentsByDate();

          this._updateOption("workSpace", "showAllDayPanel", this.option("showAllDayPanel"));
        });

        break;

      case "min":
      case "max":
        value = this._dateOption(name);

        this._updateOption("header", name, new Date(value));

        this._updateOption("workSpace", name, new Date(value));

        break;

      case "views":
        if (this._getCurrentViewOptions()) {
          this.repaint();
        } else {
          var _this$_header3;

          null === (_this$_header3 = this._header) || void 0 === _this$_header3 ? void 0 : _this$_header3.option(name, value);
        }

        break;

      case "useDropDownViewSwitcher":
        null === (_this$_header4 = this._header) || void 0 === _this$_header4 ? void 0 : _this$_header4.option(name, value);
        break;

      case "currentView":
        this._validateDayHours();

        this._validateCellDuration();

        this._appointments.option({
          items: [],
          allowDrag: this._allowDragging(),
          allowResize: this._allowResizing(),
          itemTemplate: this._getAppointmentTemplate("appointmentTemplate")
        });

        this._postponeResourceLoading().done(resources => {
          var _this$_header5;

          this._refreshWorkSpace(resources);

          null === (_this$_header5 = this._header) || void 0 === _this$_header5 ? void 0 : _this$_header5.option(this._headerConfig());

          this._filterAppointmentsByDate();

          this._appointments.option("allowAllDayResize", "day" !== value);
        });

        this.postponedOperations.callPostponedOperations();
        break;

      case "appointmentTemplate":
        this._appointments.option("itemTemplate", value);

        break;

      case "dateCellTemplate":
      case "resourceCellTemplate":
      case "dataCellTemplate":
      case "timeCellTemplate":
        this.repaint();
        break;

      case "groups":
        this._postponeResourceLoading().done(resources => {
          this._refreshWorkSpace(resources);

          this._filterAppointmentsByDate();
        });

        break;

      case "resources":
        this._dataAccessors.resources = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_50__.createExpressions)(this.option("resources"));
        this.agendaResourceProcessor.initializeState(this.option("resources"));
        this.updateInstances();

        this._postponeResourceLoading().done(resources => {
          this._appointments.option("items", []);

          this._refreshWorkSpace(resources);

          this._filterAppointmentsByDate();

          this._createAppointmentPopupForm();
        });

        break;

      case "startDayHour":
      case "endDayHour":
        this._validateDayHours();

        this.updateInstances();

        this._appointments.option("items", []);

        this._updateOption("workSpace", name, value);

        this._appointments.repaint();

        this._filterAppointmentsByDate();

        this._postponeDataSourceLoading();

        break;

      case StoreEventNames.ADDING:
      case StoreEventNames.ADDED:
      case StoreEventNames.UPDATING:
      case StoreEventNames.UPDATED:
      case StoreEventNames.DELETING:
      case StoreEventNames.DELETED:
      case "onAppointmentFormOpening":
      case "onAppointmentTooltipShowing":
        this._actions[name] = this._createActionByOption(name);
        break;

      case "onAppointmentRendered":
        this._appointments.option("onItemRendered", this._getAppointmentRenderedAction());

        break;

      case "onAppointmentClick":
        this._appointments.option("onItemClick", this._createActionByOption(name));

        break;

      case "onAppointmentDblClick":
        this._appointments.option(name, this._createActionByOption(name));

        break;

      case "onAppointmentContextMenu":
        this._appointments.option("onItemContextMenu", this._createActionByOption(name));

        break;

      case "noDataText":
      case "allowMultipleCellSelection":
      case "selectedCellData":
      case "accessKey":
      case "onCellClick":
      case "onCellContextMenu":
        this._workSpace.option(name, value);

        break;

      case "crossScrollingEnabled":
        this._postponeResourceLoading().done(resources => {
          this._appointments.option("items", []);

          this._refreshWorkSpace(resources);

          if (this._readyToRenderAppointments) {
            this._appointments.option("items", this._getAppointmentsToRepaint());
          }
        });

        break;

      case "cellDuration":
        this._validateCellDuration();

        this._updateOption("workSpace", name, value);

        this._appointments.option("items", []);

        if (this._readyToRenderAppointments) {
          this._updateOption("workSpace", "hoursInterval", value / 60);

          this._appointments.option("items", this._getAppointmentsToRepaint());
        }

        break;

      case "tabIndex":
      case "focusStateEnabled":
        this._updateOption("header", name, value);

        this._updateOption("workSpace", name, value);

        this._appointments.option(name, value);

        super._optionChanged(args);

        break;

      case "width":
        this._updateOption("header", name, value);

        if (this.option("crossScrollingEnabled")) {
          this._updateOption("workSpace", "width", value);
        }

        this._updateOption("workSpace", "schedulerWidth", value);

        super._optionChanged(args);

        this._dimensionChanged(null, true);

        break;

      case "height":
        super._optionChanged(args);

        this._dimensionChanged(null, true);

        this._updateOption("workSpace", "schedulerHeight", value);

        break;

      case "editing":
        this._initEditing();

        var editing = this._editing;

        this._bringEditingModeToAppointments(editing);

        this.hideAppointmentTooltip();

        this._cleanPopup();

        break;

      case "showAllDayPanel":
        this.updateInstances();
        this.repaint();
        break;

      case "showCurrentTimeIndicator":
      case "indicatorTime":
      case "indicatorUpdateInterval":
      case "shadeUntilCurrentTime":
      case "groupByDate":
        this._updateOption("workSpace", name, value);

        this.repaint();
        break;

      case "appointmentDragging":
      case "appointmentTooltipTemplate":
      case "appointmentPopupTemplate":
      case "recurrenceEditMode":
      case "remoteFiltering":
      case "timeZone":
        this.updateInstances();
        this.repaint();
        break;

      case "dropDownAppointmentTemplate":
      case "appointmentCollectorTemplate":
      case "_appointmentTooltipOffset":
      case "_appointmentTooltipButtonsPosition":
      case "_appointmentTooltipOpenButtonText":
      case "_appointmentCountPerCell":
      case "_collectorOffset":
      case "_appointmentOffset":
        this.repaint();
        break;

      case "dateSerializationFormat":
      case "maxAppointmentsPerCell":
        break;

      case "startDateExpr":
      case "endDateExpr":
      case "startDateTimeZoneExpr":
      case "endDateTimeZoneExpr":
      case "textExpr":
      case "descriptionExpr":
      case "allDayExpr":
      case "recurrenceRuleExpr":
      case "recurrenceExceptionExpr":
      case "disabledExpr":
        this._updateExpression(name, value);

        this.appointmentDataProvider.updateDataAccessors(this._dataAccessors);

        this._initAppointmentTemplate();

        this.repaint();
        break;

      case "adaptivityEnabled":
        this._toggleAdaptiveClass();

        this.repaint();
        break;

      case "scrolling":
        this.option("crossScrollingEnabled", this._isHorizontalVirtualScrolling() || this.option("crossScrollingEnabled"));

        this._updateOption("workSpace", args.fullName, value);

        break;

      case "allDayPanelMode":
        this._updateOption("workSpace", args.fullName, value);

        break;

      case "renovateRender":
        this._updateOption("workSpace", name, value);

        break;

      case "_draggingMode":
        this._workSpace.option("draggingMode", value);

        break;

      case "toolbar":
        this._header ? this._header.option("items", value) : this.repaint();
        break;

      case "loadedResources":
      case "resourceLoaderMap":
        break;

      default:
        super._optionChanged(args);

    }
  }

  _dateOption(optionName) {
    var optionValue = this._getCurrentViewOption(optionName);

    return _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_12__.default.deserializeDate(optionValue);
  }

  _getSerializationFormat(optionName) {
    var value = this._getCurrentViewOption(optionName);

    if ("number" === typeof value) {
      return "number";
    }

    if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isString)(value)) {
      return;
    }

    return _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_12__.default.getDateSerializationFormat(value);
  }

  _bringEditingModeToAppointments(editing) {
    var editingConfig = {
      allowDelete: editing.allowUpdating && editing.allowDeleting
    };

    if (!this._isAgenda()) {
      editingConfig.allowDrag = editing.allowDragging;
      editingConfig.allowResize = editing.allowResizing;
      editingConfig.allowAllDayResize = editing.allowResizing && this._supportAllDayResizing();
    }

    this._appointments.option(editingConfig);

    this.repaint();
  }

  _isAgenda() {
    return "agenda" === this.getLayoutManager().appointmentRenderingStrategyName;
  }

  _allowDragging() {
    return this._editing.allowDragging && !this._isAgenda();
  }

  _allowResizing() {
    return this._editing.allowResizing && !this._isAgenda();
  }

  _allowAllDayResizing() {
    return this._editing.allowResizing && this._supportAllDayResizing();
  }

  _supportAllDayResizing() {
    return "day" !== this.currentViewType || this.currentView.intervalCount > 1;
  }

  _isAllDayExpanded() {
    return this.option("showAllDayPanel") && this.appointmentDataProvider.hasAllDayAppointments(this.filteredItems, this.preparedItems);
  }

  _getTimezoneOffsetByOption(date) {
    return _utils_timeZone__WEBPACK_IMPORTED_MODULE_37__.default.calculateTimezoneByValue(this.option("timeZone"), date);
  }

  _filterAppointmentsByDate() {
    var dateRange = this._workSpace.getDateRange();

    var startDate = this.timeZoneCalculator.createDate(dateRange[0], {
      path: "fromGrid"
    });
    var endDate = this.timeZoneCalculator.createDate(dateRange[1], {
      path: "fromGrid"
    });
    this.appointmentDataProvider.filterByDate(startDate, endDate, this.option("remoteFiltering"), this.option("dateSerializationFormat"));
  }

  _reloadDataSource() {
    var result = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.Deferred();

    if (this._dataSource) {
      this._dataSource.load().done(function () {
        (0,_loading__WEBPACK_IMPORTED_MODULE_31__.hide)();

        this._fireContentReadyAction(result);
      }.bind(this)).fail(function () {
        (0,_loading__WEBPACK_IMPORTED_MODULE_31__.hide)();
        result.reject();
      });

      this._dataSource.isLoading() && (0,_loading__WEBPACK_IMPORTED_MODULE_31__.show)({
        container: this.$element(),
        position: {
          of: this.$element()
        }
      });
    } else {
      this._fireContentReadyAction(result);
    }

    return result.promise();
  }

  _fireContentReadyAction(result) {
    var contentReadyBase = super._fireContentReadyAction.bind(this);

    var fireContentReady = () => {
      contentReadyBase();
      null === result || void 0 === result ? void 0 : result.resolve();
    };

    if (this._workSpaceRecalculation) {
      var _this$_workSpaceRecal;

      null === (_this$_workSpaceRecal = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal ? void 0 : _this$_workSpaceRecal.done(() => {
        fireContentReady();
      });
    } else {
      fireContentReady();
    }
  }

  _dimensionChanged(value) {
    var isForce = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
    var isFixedHeight = "number" === typeof this.option("height");
    var isFixedWidth = "number" === typeof this.option("width");

    if (!this._isVisible()) {
      return;
    }

    this._toggleSmallClass();

    var workspace = this.getWorkSpace();

    if (!this._isAgenda() && this.filteredItems && workspace) {
      if (isForce || !isFixedHeight || !isFixedWidth) {
        workspace.option("allDayExpanded", this._isAllDayExpanded());

        workspace._dimensionChanged();

        var appointments = this.getLayoutManager().createAppointmentsMap(this.filteredItems);

        this._appointments.option("items", appointments);
      }
    }

    this.hideAppointmentTooltip();

    this._appointmentPopup.triggerResize();

    this._appointmentPopup.updatePopupFullScreenMode();
  }

  _clean() {
    this._cleanPopup();

    super._clean();
  }

  _toggleSmallClass() {
    var width = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_10__.getBoundingRect)(this.$element().get(0)).width;
    this.$element().toggleClass(WIDGET_SMALL_CLASS, width < WIDGET_SMALL_WIDTH);
  }

  _toggleAdaptiveClass() {
    this.$element().toggleClass(WIDGET_ADAPTIVE_CLASS, this.option("adaptivityEnabled"));
  }

  _visibilityChanged(visible) {
    visible && this._dimensionChanged(null, true);
  }

  _dataSourceOptions() {
    return {
      paginate: false
    };
  }

  _initAllDayPanel() {
    if ("hidden" === this.option("allDayPanelMode")) {
      this.option("showAllDayPanel", false);
    }
  }

  _init() {
    this._initExpressions({
      startDate: this.option("startDateExpr"),
      endDate: this.option("endDateExpr"),
      startDateTimeZone: this.option("startDateTimeZoneExpr"),
      endDateTimeZone: this.option("endDateTimeZoneExpr"),
      allDay: this.option("allDayExpr"),
      text: this.option("textExpr"),
      description: this.option("descriptionExpr"),
      recurrenceRule: this.option("recurrenceRuleExpr"),
      recurrenceException: this.option("recurrenceExceptionExpr"),
      disabled: this.option("disabledExpr")
    });

    super._init();

    this._initAllDayPanel();

    this._initDataSource();

    this._customizeDataSourceLoadOptions();

    this.$element().addClass(WIDGET_CLASS);

    this._initEditing();

    this.updateInstances();

    this._initActions();

    this._compactAppointmentsHelper = new _compactAppointmentsHelper__WEBPACK_IMPORTED_MODULE_28__.CompactAppointmentsHelper(this);
    this._asyncTemplatesTimers = [];
    this._dataSourceLoadedCallback = (0,_core_utils_callbacks__WEBPACK_IMPORTED_MODULE_7__.default)();
    this._subscribes = _subscribes__WEBPACK_IMPORTED_MODULE_35__.default;
    this.agendaResourceProcessor = new _internal_scheduler_resources_m_agenda_resource_processor__WEBPACK_IMPORTED_MODULE_54__.AgendaResourceProcessor(this.option("resources"));
  }

  createAppointmentDataProvider() {
    var _this$appointmentData;

    null === (_this$appointmentData = this.appointmentDataProvider) || void 0 === _this$appointmentData ? void 0 : _this$appointmentData.destroy();
    this.appointmentDataProvider = new _internal_scheduler_appointments_data_provider_m_appointment_data_provider__WEBPACK_IMPORTED_MODULE_55__.AppointmentDataProvider({
      dataSource: this._dataSource,
      dataAccessors: this._dataAccessors,
      timeZoneCalculator: this.timeZoneCalculator,
      dateSerializationFormat: this.option("dateSerializationFormat"),
      resources: this.option("resources"),
      startDayHour: this._getCurrentViewOption("startDayHour"),
      endDayHour: this._getCurrentViewOption("endDayHour"),
      appointmentDuration: this._getCurrentViewOption("cellDuration"),
      allDayPanelMode: this._getCurrentViewOption("allDayPanelMode"),
      showAllDayPanel: this.option("showAllDayPanel"),
      getLoadedResources: () => this.option("loadedResources"),
      getIsVirtualScrolling: () => this.isVirtualScrolling(),
      getSupportAllDayRow: () => this._workSpace.supportAllDayRow(),
      getViewType: () => this._workSpace.type,
      getViewDirection: () => this._workSpace.viewDirection,
      getDateRange: () => this._workSpace.getDateRange(),
      getGroupCount: () => this._workSpace._getGroupCount(),
      getViewDataProvider: () => this._workSpace.viewDataProvider
    });
  }

  updateInstances() {
    this._timeZoneCalculator = null;

    if (this.getWorkSpace()) {
      this.createAppointmentDataProvider();
    }
  }

  _customizeDataSourceLoadOptions() {
    var _this$_dataSource;

    null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.on("customizeStoreLoadOptions", _ref => {
      var {
        storeLoadOptions: storeLoadOptions
      } = _ref;
      storeLoadOptions.startDate = this.getStartViewDate();
      storeLoadOptions.endDate = this.getEndViewDate();
    });
  }

  _initTemplates() {
    this._initAppointmentTemplate();

    this._templateManager.addDefaultTemplates({
      appointmentTooltip: new _core_templates_empty_template__WEBPACK_IMPORTED_MODULE_6__.EmptyTemplate(),
      dropDownAppointment: new _core_templates_empty_template__WEBPACK_IMPORTED_MODULE_6__.EmptyTemplate()
    });

    super._initTemplates();
  }

  _initAppointmentTemplate() {
    var {
      expr: expr
    } = this._dataAccessors;

    var createGetter = property => (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_9__.compileGetter)("appointmentData.".concat(property));

    var getDate = getter => data => {
      var value = getter(data);

      if (value instanceof Date) {
        return value.valueOf();
      }

      return value;
    };

    this._templateManager.addDefaultTemplates({
      item: new _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_5__.BindableTemplate(($container, data, model) => this.getAppointmentsInstance()._renderAppointmentTemplate($container, data, model), ["html", "text", "startDate", "endDate", "allDay", "description", "recurrenceRule", "recurrenceException", "startDateTimeZone", "endDateTimeZone"], this.option("integrationOptions.watchMethod"), {
        text: createGetter(expr.textExpr),
        startDate: getDate(createGetter(expr.startDateExpr)),
        endDate: getDate(createGetter(expr.endDateExpr)),
        startDateTimeZone: createGetter(expr.startDateTimeZoneExpr),
        endDateTimeZone: createGetter(expr.endDateTimeZoneExpr),
        allDay: createGetter(expr.allDayExpr),
        recurrenceRule: createGetter(expr.recurrenceRuleExpr)
      })
    });
  }

  _renderContent() {
    this._renderContentImpl();
  }

  _updatePreparedItems(items) {
    this.preparedItems = (0,_renovation_ui_scheduler_utils_data__WEBPACK_IMPORTED_MODULE_57__.getPreparedDataItems)(items, this._dataAccessors, this._getCurrentViewOption("cellDuration"), this.timeZoneCalculator);
  }

  _dataSourceChangedHandler(result) {
    if (this._readyToRenderAppointments) {
      this._workSpaceRecalculation.done(function () {
        this._updatePreparedItems(result);

        this._renderAppointments();

        this.getWorkSpace().onDataSourceChanged(this.filteredItems);
      }.bind(this));
    }
  }

  isVirtualScrolling() {
    var _currentViewOptions$s;

    var workspace = this.getWorkSpace();

    if (workspace) {
      return workspace.isVirtualScrolling();
    }

    var currentViewOptions = this._getCurrentViewOptions();

    var scrolling = this.option("scrolling");
    return "virtual" === (null === scrolling || void 0 === scrolling ? void 0 : scrolling.mode) || "virtual" === (null === currentViewOptions || void 0 === currentViewOptions ? void 0 : null === (_currentViewOptions$s = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s ? void 0 : _currentViewOptions$s.mode);
  }

  _filterAppointments() {
    this.filteredItems = this.appointmentDataProvider.filter(this.preparedItems);
  }

  _renderAppointments() {
    var workspace = this.getWorkSpace();

    this._filterAppointments();

    workspace.option("allDayExpanded", this._isAllDayExpanded());
    var viewModel = [];

    if (this._isVisible()) {
      viewModel = this._getAppointmentsToRepaint();
    }

    if (this.option("isRenovatedAppointments")) {
      (0,_internal_scheduler_appointments_m_render__WEBPACK_IMPORTED_MODULE_53__.renderAppointments)({
        instance: this,
        $dateTable: this.getWorkSpace()._getDateTable(),
        viewModel: viewModel
      });
    } else {
      this._appointments.option("items", viewModel);
    }

    this.appointmentDataProvider.cleanState();
  }

  _getAppointmentsToRepaint() {
    var layoutManager = this.getLayoutManager();
    var appointmentsMap = layoutManager.createAppointmentsMap(this.filteredItems);

    if (this.option("isRenovatedAppointments")) {
      var appointmentTemplate = this.option("appointmentTemplate") !== DEFAULT_APPOINTMENT_TEMPLATE_NAME ? this.option("appointmentTemplate") : void 0;
      return {
        appointments: appointmentsMap,
        appointmentTemplate: appointmentTemplate
      };
    }

    return layoutManager.getRepaintedAppointments(appointmentsMap, this.getAppointmentsInstance().option("items"));
  }

  _initExpressions(fields) {
    this._dataAccessors = _utils__WEBPACK_IMPORTED_MODULE_49__.utils.dataAccessors.create(fields, this._dataAccessors, (0,_core_config__WEBPACK_IMPORTED_MODULE_2__.default)().forceIsoDateParsing, this.option("dateSerializationFormat"));
    this._dataAccessors.resources = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_50__.createExpressions)(this.option("resources"));
  }

  _updateExpression(name, value) {
    var exprObj = {};
    exprObj[name.replace("Expr", "")] = value;

    this._initExpressions(exprObj);
  }

  getResourceDataAccessors() {
    return this._dataAccessors.resources;
  }

  _initEditing() {
    var editing = this.option("editing");
    this._editing = {
      allowAdding: !!editing,
      allowUpdating: !!editing,
      allowDeleting: !!editing,
      allowResizing: !!editing,
      allowDragging: !!editing
    };

    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isObject)(editing)) {
      this._editing = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)(this._editing, editing);
    }

    this._editing.allowDragging = this._editing.allowDragging && this._editing.allowUpdating;
    this._editing.allowResizing = this._editing.allowResizing && this._editing.allowUpdating;
    this.$element().toggleClass(WIDGET_READONLY_CLASS, this._isReadOnly());
  }

  _isReadOnly() {
    var result = true;
    var editing = this._editing;

    for (var prop in editing) {
      if (Object.prototype.hasOwnProperty.call(editing, prop)) {
        result = result && !editing[prop];
      }
    }

    return result;
  }

  _dispose() {
    var _this$_recurrenceDial;

    this._appointmentTooltip && this._appointmentTooltip.dispose();
    null === (_this$_recurrenceDial = this._recurrenceDialog) || void 0 === _this$_recurrenceDial ? void 0 : _this$_recurrenceDial.hide(RECURRENCE_EDITING_MODE.CANCEL);
    this.hideAppointmentPopup();
    this.hideAppointmentTooltip();

    this._asyncTemplatesTimers.forEach(clearTimeout);

    this._asyncTemplatesTimers = [];

    super._dispose();
  }

  _initActions() {
    this._actions = {
      onAppointmentAdding: this._createActionByOption(StoreEventNames.ADDING),
      onAppointmentAdded: this._createActionByOption(StoreEventNames.ADDED),
      onAppointmentUpdating: this._createActionByOption(StoreEventNames.UPDATING),
      onAppointmentUpdated: this._createActionByOption(StoreEventNames.UPDATED),
      onAppointmentDeleting: this._createActionByOption(StoreEventNames.DELETING),
      onAppointmentDeleted: this._createActionByOption(StoreEventNames.DELETED),
      onAppointmentFormOpening: this._createActionByOption("onAppointmentFormOpening"),
      onAppointmentTooltipShowing: this._createActionByOption("onAppointmentTooltipShowing")
    };
  }

  _getAppointmentRenderedAction() {
    return this._createActionByOption("onAppointmentRendered", {
      excludeValidators: ["disabled", "readOnly"]
    });
  }

  _renderFocusTarget() {
    return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_8__.noop)();
  }

  _initMarkup() {
    super._initMarkup();

    this._validateDayHours();

    this._validateCellDuration();

    this._renderMainContainer();

    this._renderHeader();

    this._layoutManager = new _appointments_layout_manager__WEBPACK_IMPORTED_MODULE_33__.default(this);
    this._appointments = this._createComponent("<div>", _internal_scheduler_appointments_m_appointment_collection__WEBPACK_IMPORTED_MODULE_32__.default, this._appointmentsConfig());

    this._appointments.option("itemTemplate", this._getAppointmentTemplate("appointmentTemplate"));

    this._appointmentTooltip = new (this.option("adaptivityEnabled") ? _internal_scheduler_tooltip_strategies_m_mobile_tooltip_strategy__WEBPACK_IMPORTED_MODULE_30__.MobileTooltipStrategy : _internal_scheduler_tooltip_strategies_m_desktop_tooltip_strategy__WEBPACK_IMPORTED_MODULE_29__.DesktopTooltipStrategy)(this._getAppointmentTooltipOptions());

    this._createAppointmentPopupForm();

    if (this._isDataSourceLoaded() || this._isDataSourceLoading()) {
      this._initMarkupCore(this.option("loadedResources"));

      this._dataSourceChangedHandler(this._dataSource.items());

      this._fireContentReadyAction();
    } else {
      var groups = this._getCurrentViewOption("groups");

      (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_50__.loadResources)(groups, this.option("resources"), this.option("resourceLoaderMap")).done(resources => {
        this.option("loadedResources", resources);

        this._initMarkupCore(resources);

        this._reloadDataSource();
      });
    }
  }

  _createAppointmentPopupForm() {
    var _this$_appointmentPop;

    if (this._appointmentForm) {
      var _this$_appointmentFor;

      null === (_this$_appointmentFor = this._appointmentForm.form) || void 0 === _this$_appointmentFor ? void 0 : _this$_appointmentFor.dispose();
    }

    this._appointmentForm = this.createAppointmentForm();
    null === (_this$_appointmentPop = this._appointmentPopup) || void 0 === _this$_appointmentPop ? void 0 : _this$_appointmentPop.dispose();
    this._appointmentPopup = this.createAppointmentPopup(this._appointmentForm);
  }

  _renderMainContainer() {
    this._mainContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_4__.default)("<div>").addClass("dx-scheduler-container");
    this.$element().append(this._mainContainer);
  }

  createAppointmentForm() {
    var scheduler = {
      createResourceEditorModel: () => (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_50__.createResourceEditorModel)(this.option("resources"), this.option("loadedResources")),
      getDataAccessors: () => this._dataAccessors,
      createComponent: (element, component, options) => this._createComponent(element, component, options),
      getEditingConfig: () => this._editing,
      getFirstDayOfWeek: () => this.option("firstDayOfWeek"),
      getStartDayHour: () => this.option("startDayHour"),
      getCalculatedEndDate: startDateWithStartHour => this._workSpace.calculateEndDate(startDateWithStartHour),
      getTimeZoneCalculator: () => this.timeZoneCalculator
    };
    return new _internal_scheduler_appointment_popup_m_form__WEBPACK_IMPORTED_MODULE_27__.AppointmentForm(scheduler);
  }

  createAppointmentPopup(form) {
    var scheduler = {
      getElement: () => this.$element(),
      createComponent: (element, component, options) => this._createComponent(element, component, options),
      focus: () => this.focus(),
      getResources: () => this.option("resources"),
      getEditingConfig: () => this._editing,
      getTimeZoneCalculator: () => this.timeZoneCalculator,
      getDataAccessors: () => this._dataAccessors,
      getAppointmentFormOpening: () => this._actions.onAppointmentFormOpening,
      processActionResult: (arg, canceled) => this._processActionResult(arg, canceled),
      addAppointment: appointment => this.addAppointment(appointment),
      updateAppointment: (sourceAppointment, updatedAppointment) => this.updateAppointment(sourceAppointment, updatedAppointment),
      updateScrollPosition: (startDate, resourceItem, inAllDayRow) => {
        this._workSpace.updateScrollPosition(startDate, resourceItem, inAllDayRow);
      }
    };
    return new _internal_scheduler_appointment_popup_m_popup__WEBPACK_IMPORTED_MODULE_26__.AppointmentPopup(scheduler, form);
  }

  _getAppointmentTooltipOptions() {
    return {
      createComponent: this._createComponent.bind(this),
      container: this.$element(),
      getScrollableContainer: this.getWorkSpaceScrollableContainer.bind(this),
      addDefaultTemplates: this._templateManager.addDefaultTemplates.bind(this._templateManager),
      getAppointmentTemplate: this._getAppointmentTemplate.bind(this),
      showAppointmentPopup: this.showAppointmentPopup.bind(this),
      checkAndDeleteAppointment: this.checkAndDeleteAppointment.bind(this),
      isAppointmentInAllDayPanel: this.isAppointmentInAllDayPanel.bind(this),
      createFormattedDateText: (appointment, targetedAppointment, format) => this.fire("getTextAndFormatDate", appointment, targetedAppointment, format),
      getAppointmentDisabled: appointment => (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__.createAppointmentAdapter)(appointment, this._dataAccessors, this.timeZoneCalculator).disabled
    };
  }

  checkAndDeleteAppointment(appointment, targetedAppointment) {
    var targetedAdapter = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__.createAppointmentAdapter)(targetedAppointment, this._dataAccessors, this.timeZoneCalculator);
    var deletingOptions = this.fireOnAppointmentDeleting(appointment, targetedAdapter);

    this._checkRecurringAppointment(appointment, targetedAppointment, targetedAdapter.startDate, () => {
      this.processDeleteAppointment(appointment, deletingOptions);
    }, true);
  }

  _getExtraAppointmentTooltipOptions() {
    return {
      rtlEnabled: this.option("rtlEnabled"),
      focusStateEnabled: this.option("focusStateEnabled"),
      editing: this.option("editing"),
      offset: this.option("_appointmentTooltipOffset")
    };
  }

  isAppointmentInAllDayPanel(appointmentData) {
    var workSpace = this._workSpace;
    var itTakesAllDay = this.appointmentTakesAllDay(appointmentData);
    return itTakesAllDay && workSpace.supportAllDayRow() && workSpace.option("showAllDayPanel");
  }

  _initMarkupCore(resources) {
    this._readyToRenderAppointments = (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_17__.hasWindow)();
    this._workSpace && this._cleanWorkspace();

    this._renderWorkSpace(resources);

    this._appointments.option({
      fixedContainer: this._workSpace.getFixedContainer(),
      allDayContainer: this._workSpace.getAllDayContainer()
    });

    this._waitAsyncTemplate(() => {
      var _this$_workSpaceRecal2;

      return null === (_this$_workSpaceRecal2 = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal2 ? void 0 : _this$_workSpaceRecal2.resolve();
    });

    this.createAppointmentDataProvider();

    this._filterAppointmentsByDate();

    this._validateKeyFieldIfAgendaExist();
  }

  _isDataSourceLoaded() {
    return this._dataSource && this._dataSource.isLoaded();
  }

  _render() {
    var _this$getWorkSpace;

    this._toggleSmallClass();

    this._toggleAdaptiveClass();

    null === (_this$getWorkSpace = this.getWorkSpace()) || void 0 === _this$getWorkSpace ? void 0 : _this$getWorkSpace.updateHeaderEmptyCellWidth();

    super._render();
  }

  _renderHeader() {
    if (0 !== this.option("toolbar").length) {
      var $header = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_4__.default)("<div>").appendTo(this._mainContainer);
      this._header = this._createComponent($header, _internal_scheduler_header_m_header__WEBPACK_IMPORTED_MODULE_34__.SchedulerHeader, this._headerConfig());
    }
  }

  _headerConfig() {
    var currentViewOptions = this._getCurrentViewOptions();

    var countConfig = this._getViewCountConfig();

    var result = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)({
      firstDayOfWeek: this.getFirstDayOfWeek(),
      currentView: this.option("currentView"),
      isAdaptive: this.option("adaptivityEnabled"),
      tabIndex: this.option("tabIndex"),
      focusStateEnabled: this.option("focusStateEnabled"),
      rtlEnabled: this.option("rtlEnabled"),
      useDropDownViewSwitcher: this.option("useDropDownViewSwitcher"),
      customizeDateNavigatorText: this.option("customizeDateNavigatorText"),
      agendaDuration: currentViewOptions.agendaDuration || DEFAULT_AGENDA_DURATION
    }, currentViewOptions);
    result.intervalCount = countConfig.intervalCount;
    result.views = this.option("views");
    result.min = new Date(this._dateOption("min"));
    result.max = new Date(this._dateOption("max"));
    result.currentDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_11__.default.trimTime(new Date(this._dateOption("currentDate")));
    result.onCurrentViewChange = name => {
      this.option("currentView", name);
    }, result.onCurrentDateChange = date => {
      this.option("currentDate", date);
    };
    result.items = this.option("toolbar");
    result.startViewDate = this.getStartViewDate();

    result.todayDate = () => {
      var result = this.timeZoneCalculator.createDate(new Date(), {
        path: "toGrid"
      });
      return result;
    };

    return result;
  }

  _appointmentsConfig() {
    var config = {
      getResources: () => this.option("resources"),
      getResourceDataAccessors: this.getResourceDataAccessors.bind(this),
      getAgendaResourceProcessor: () => this.agendaResourceProcessor,
      getAppointmentColor: this.createGetAppointmentColor(),
      getAppointmentDataProvider: () => this.appointmentDataProvider,
      dataAccessors: this._dataAccessors,
      observer: this,
      onItemRendered: this._getAppointmentRenderedAction(),
      onItemClick: this._createActionByOption("onAppointmentClick"),
      onItemContextMenu: this._createActionByOption("onAppointmentContextMenu"),
      onAppointmentDblClick: this._createActionByOption("onAppointmentDblClick"),
      tabIndex: this.option("tabIndex"),
      focusStateEnabled: this.option("focusStateEnabled"),
      allowDrag: this._allowDragging(),
      allowDelete: this._editing.allowUpdating && this._editing.allowDeleting,
      allowResize: this._allowResizing(),
      allowAllDayResize: this._allowAllDayResizing(),
      rtlEnabled: this.option("rtlEnabled"),
      currentView: this.currentView,
      groups: this._getCurrentViewOption("groups"),
      isRenovatedAppointments: this.option("isRenovatedAppointments"),
      timeZoneCalculator: this.timeZoneCalculator,
      getResizableStep: () => this._workSpace ? this._workSpace.positionHelper.getResizableStep() : 0,
      getDOMElementsMetaData: () => {
        var _this$_workSpace;

        return null === (_this$_workSpace = this._workSpace) || void 0 === _this$_workSpace ? void 0 : _this$_workSpace.getDOMElementsMetaData();
      },
      getViewDataProvider: () => {
        var _this$_workSpace2;

        return null === (_this$_workSpace2 = this._workSpace) || void 0 === _this$_workSpace2 ? void 0 : _this$_workSpace2.viewDataProvider;
      },
      isVerticalViewDirection: () => "vertical" === this.getRenderingStrategyInstance().getDirection(),
      isVerticalGroupedWorkSpace: () => this._workSpace._isVerticalGroupedWorkSpace(),
      isDateAndTimeView: () => (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_52__.isDateAndTimeView)(this._workSpace.type),
      onContentReady: () => {
        var _this$_workSpace3;

        null === (_this$_workSpace3 = this._workSpace) || void 0 === _this$_workSpace3 ? void 0 : _this$_workSpace3.option("allDayExpanded", this._isAllDayExpanded());
      }
    };
    return config;
  }

  getCollectorOffset() {
    if (this._workSpace.needApplyCollectorOffset() && !this.option("adaptivityEnabled")) {
      return this.option("_collectorOffset");
    } else {
      return 0;
    }
  }

  getAppointmentDurationInMinutes() {
    return this._getCurrentViewOption("cellDuration");
  }

  _getCurrentViewType() {
    return this.currentViewType;
  }

  _renderWorkSpace(groups) {
    var _this$_header6;

    this._readyToRenderAppointments && this._toggleSmallClass();
    var $workSpace = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_4__.default)("<div>").appendTo(this._mainContainer);

    var countConfig = this._getViewCountConfig();

    var workSpaceComponent = VIEWS_CONFIG[this._getCurrentViewType()].workSpace;

    var workSpaceConfig = this._workSpaceConfig(groups, countConfig);

    this._workSpace = this._createComponent($workSpace, workSpaceComponent, workSpaceConfig);
    this._allowDragging() && this._workSpace.initDragBehavior(this, this._all);

    this._workSpace._attachTablesEvents();

    this._workSpace.getWorkArea().append(this._appointments.$element());

    this._recalculateWorkspace();

    countConfig.startDate && (null === (_this$_header6 = this._header) || void 0 === _this$_header6 ? void 0 : _this$_header6.option("currentDate", this._workSpace._getHeaderDate()));

    this._appointments.option("_collectorOffset", this.getCollectorOffset());
  }

  _getViewCountConfig() {
    var currentView = this.option("currentView");

    var view = this._getViewByName(currentView);

    var viewCount = view && view.intervalCount || 1;
    var startDate = view && view.startDate || null;
    return {
      intervalCount: viewCount,
      startDate: startDate
    };
  }

  _getViewByName(name) {
    var views = this.option("views");

    for (var i = 0; i < views.length; i++) {
      if (views[i].name === name || views[i].type === name || views[i] === name) {
        return views[i];
      }
    }
  }

  _recalculateWorkspace() {
    this._workSpaceRecalculation = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.Deferred();

    this._waitAsyncTemplate(() => {
      (0,_events_visibility_change__WEBPACK_IMPORTED_MODULE_19__.triggerResizeEvent)(this._workSpace.$element());

      this._workSpace._refreshDateTimeIndication();
    });
  }

  _workSpaceConfig(groups, countConfig) {
    var _currentViewOptions$s2;

    var currentViewOptions = this._getCurrentViewOptions();

    var scrolling = this.option("scrolling");
    var isVirtualScrolling = "virtual" === scrolling.mode || "virtual" === (null === (_currentViewOptions$s2 = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s2 ? void 0 : _currentViewOptions$s2.mode);
    var horizontalVirtualScrollingAllowed = isVirtualScrolling && (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isDefined)(scrolling.orientation) || ["horizontal", "both"].filter(item => {
      var _currentViewOptions$s3;

      return scrolling.orientation === item || (null === (_currentViewOptions$s3 = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s3 ? void 0 : _currentViewOptions$s3.orientation) === item;
    }).length > 0);
    var crossScrollingEnabled = this.option("crossScrollingEnabled") || horizontalVirtualScrollingAllowed || (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_52__.isTimelineView)(this.currentViewType);
    var result = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)({
      resources: this.option("resources"),
      loadedResources: this.option("loadedResources"),
      getFilteredItems: () => this.filteredItems,
      getResourceDataAccessors: this.getResourceDataAccessors.bind(this),
      noDataText: this.option("noDataText"),
      firstDayOfWeek: this.option("firstDayOfWeek"),
      startDayHour: this.option("startDayHour"),
      endDayHour: this.option("endDayHour"),
      tabIndex: this.option("tabIndex"),
      accessKey: this.option("accessKey"),
      focusStateEnabled: this.option("focusStateEnabled"),
      cellDuration: this.option("cellDuration"),
      showAllDayPanel: this.option("showAllDayPanel"),
      showCurrentTimeIndicator: this.option("showCurrentTimeIndicator"),
      indicatorTime: this.option("indicatorTime"),
      indicatorUpdateInterval: this.option("indicatorUpdateInterval"),
      shadeUntilCurrentTime: this.option("shadeUntilCurrentTime"),
      allDayExpanded: this._appointments.option("items"),
      crossScrollingEnabled: crossScrollingEnabled,
      dataCellTemplate: this.option("dataCellTemplate"),
      timeCellTemplate: this.option("timeCellTemplate"),
      resourceCellTemplate: this.option("resourceCellTemplate"),
      dateCellTemplate: this.option("dateCellTemplate"),
      allowMultipleCellSelection: this.option("allowMultipleCellSelection"),
      selectedCellData: this.option("selectedCellData"),
      onSelectionChanged: args => {
        this.option("selectedCellData", args.selectedCellData);
      },
      groupByDate: this._getCurrentViewOption("groupByDate"),
      scrolling: scrolling,
      draggingMode: this.option("_draggingMode"),
      timeZoneCalculator: this.timeZoneCalculator,
      schedulerHeight: this.option("height"),
      schedulerWidth: this.option("width"),
      allDayPanelMode: this.option("allDayPanelMode"),
      onSelectedCellsClick: this.showAddAppointmentPopup.bind(this),
      onRenderAppointments: this._renderAppointments.bind(this),
      onShowAllDayPanel: value => this.option("showAllDayPanel", value),
      getHeaderHeight: () => _utils__WEBPACK_IMPORTED_MODULE_49__.utils.DOM.getHeaderHeight(this._header),
      onScrollEnd: () => this._appointments.updateResizableArea(),
      renovateRender: this._isRenovatedRender(isVirtualScrolling),
      isRenovatedAppointments: this.option("isRenovatedAppointments")
    }, currentViewOptions);
    result.observer = this;
    result.intervalCount = countConfig.intervalCount;
    result.startDate = countConfig.startDate;
    result.groups = groups;
    result.onCellClick = this._createActionByOption("onCellClick");
    result.onCellContextMenu = this._createActionByOption("onCellContextMenu");
    result.currentDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_11__.default.trimTime(new Date(this._dateOption("currentDate")));
    result.hoursInterval = result.cellDuration / 60;
    result.allDayExpanded = false;
    result.dataCellTemplate = result.dataCellTemplate ? this._getTemplate(result.dataCellTemplate) : null;
    result.timeCellTemplate = result.timeCellTemplate ? this._getTemplate(result.timeCellTemplate) : null;
    result.resourceCellTemplate = result.resourceCellTemplate ? this._getTemplate(result.resourceCellTemplate) : null;
    result.dateCellTemplate = result.dateCellTemplate ? this._getTemplate(result.dateCellTemplate) : null;

    result.getAppointmentDataProvider = () => this.appointmentDataProvider;

    return result;
  }

  _isRenovatedRender(isVirtualScrolling) {
    return this.option("renovateRender") && (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_17__.hasWindow)() || isVirtualScrolling;
  }

  _waitAsyncTemplate(callback) {
    if (this._options.silent("templatesRenderAsynchronously")) {
      var timer = setTimeout(() => {
        callback();
        clearTimeout(timer);
      });

      this._asyncTemplatesTimers.push(timer);
    } else {
      callback();
    }
  }

  _getCurrentViewOptions() {
    return this.currentView;
  }

  _getCurrentViewOption(optionName) {
    if (this.currentView && void 0 !== this.currentView[optionName]) {
      return this.currentView[optionName];
    }

    return this.option(optionName);
  }

  _getAppointmentTemplate(optionName) {
    var currentViewOptions = this._getCurrentViewOptions();

    if (currentViewOptions && currentViewOptions[optionName]) {
      return this._getTemplate(currentViewOptions[optionName]);
    }

    return this._getTemplateByOption(optionName);
  }

  _updateOption(viewName, optionName, value) {
    var currentViewOptions = this._getCurrentViewOptions();

    if (!currentViewOptions || !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isDefined)(currentViewOptions[optionName])) {
      this["_" + viewName].option(optionName, value);
    }
  }

  _refreshWorkSpace(groups) {
    this._cleanWorkspace();

    delete this._workSpace;

    this._renderWorkSpace(groups);

    if (this._readyToRenderAppointments) {
      this._appointments.option({
        fixedContainer: this._workSpace.getFixedContainer(),
        allDayContainer: this._workSpace.getAllDayContainer()
      });

      this._waitAsyncTemplate(() => this._workSpaceRecalculation.resolve());
    }
  }

  _cleanWorkspace() {
    this._appointments.$element().detach();

    this._workSpace._dispose();

    this._workSpace.$element().remove();

    this.option("selectedCellData", []);
  }

  getWorkSpaceScrollable() {
    return this._workSpace.getScrollable();
  }

  getWorkSpaceScrollableContainer() {
    return this._workSpace.getScrollableContainer();
  }

  getWorkSpace() {
    return this._workSpace;
  }

  getHeader() {
    return this._header;
  }

  _cleanPopup() {
    var _this$_appointmentPop2;

    null === (_this$_appointmentPop2 = this._appointmentPopup) || void 0 === _this$_appointmentPop2 ? void 0 : _this$_appointmentPop2.dispose();
  }

  _checkRecurringAppointment(rawAppointment, singleAppointment, exceptionDate, callback, isDeleted, isPopupEditing, dragEvent, recurrenceEditMode) {
    var recurrenceRule = _expressionUtils__WEBPACK_IMPORTED_MODULE_51__.ExpressionUtils.getField(this._dataAccessors, "recurrenceRule", rawAppointment);

    if (!(0,_recurrence__WEBPACK_IMPORTED_MODULE_36__.getRecurrenceProcessor)().evalRecurrenceRule(recurrenceRule).isValid || !this._editing.allowUpdating) {
      callback();
      return;
    }

    var editMode = recurrenceEditMode || this.option("recurrenceEditMode");

    switch (editMode) {
      case "series":
        callback();
        break;

      case "occurrence":
        this._excludeAppointmentFromSeries(rawAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);

        break;

      default:
        if (dragEvent) {
          dragEvent.cancel = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.Deferred();
        }

        this._showRecurrenceChangeConfirm(isDeleted).done(editingMode => {
          editingMode === RECURRENCE_EDITING_MODE.SERIES && callback();
          editingMode === RECURRENCE_EDITING_MODE.OCCURENCE && this._excludeAppointmentFromSeries(rawAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);
        }).fail(() => this._appointments.moveAppointmentBack(dragEvent));

    }
  }

  _excludeAppointmentFromSeries(rawAppointment, newRawAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent) {
    var appointment = (0,_renovation_ui_scheduler_utils_recurrence_excludeFromRecurrence__WEBPACK_IMPORTED_MODULE_60__.excludeFromRecurrence)(rawAppointment, exceptionDate, this._dataAccessors, this._timeZoneCalculator);

    var singleRawAppointment = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, newRawAppointment);

    delete singleRawAppointment[this._dataAccessors.expr.recurrenceExceptionExpr];
    delete singleRawAppointment[this._dataAccessors.expr.recurrenceRuleExpr];
    var keyPropertyName = this.appointmentDataProvider.keyName;
    delete singleRawAppointment[keyPropertyName];
    var canCreateNewAppointment = !isDeleted && !isPopupEditing;

    if (canCreateNewAppointment) {
      this.addAppointment(singleRawAppointment);
    }

    if (isPopupEditing) {
      this._appointmentPopup.show(singleRawAppointment, {
        isToolbarVisible: true,
        action: _internal_scheduler_appointment_popup_m_popup__WEBPACK_IMPORTED_MODULE_26__.ACTION_TO_APPOINTMENT.EXCLUDE_FROM_SERIES,
        excludeInfo: {
          sourceAppointment: rawAppointment,
          updatedAppointment: appointment.source()
        }
      });

      this._editAppointmentData = rawAppointment;
    } else {
      this._updateAppointment(rawAppointment, appointment.source(), () => {
        this._appointments.moveAppointmentBack(dragEvent);
      }, dragEvent);
    }
  }

  _createRecurrenceException(appointment, exceptionDate) {
    var result = [];

    if (appointment.recurrenceException) {
      result.push(appointment.recurrenceException);
    }

    result.push(this._getSerializedDate(exceptionDate, appointment.startDate, appointment.allDay));
    return result.join();
  }

  _getSerializedDate(date, startDate, isAllDay) {
    isAllDay && date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds());
    return _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_12__.default.serializeDate(date, UTC_FULL_DATE_FORMAT);
  }

  _showRecurrenceChangeConfirm(isDeleted) {
    var message = _localization_message__WEBPACK_IMPORTED_MODULE_21__.default.format(isDeleted ? "dxScheduler-confirmRecurrenceDeleteMessage" : "dxScheduler-confirmRecurrenceEditMessage");
    var seriesText = _localization_message__WEBPACK_IMPORTED_MODULE_21__.default.format(isDeleted ? "dxScheduler-confirmRecurrenceDeleteSeries" : "dxScheduler-confirmRecurrenceEditSeries");
    var occurrenceText = _localization_message__WEBPACK_IMPORTED_MODULE_21__.default.format(isDeleted ? "dxScheduler-confirmRecurrenceDeleteOccurrence" : "dxScheduler-confirmRecurrenceEditOccurrence");
    this._recurrenceDialog = (0,_dialog__WEBPACK_IMPORTED_MODULE_22__.custom)({
      messageHtml: message,
      showCloseButton: true,
      showTitle: true,
      buttons: [{
        text: seriesText,
        onClick: function () {
          return RECURRENCE_EDITING_MODE.SERIES;
        }
      }, {
        text: occurrenceText,
        onClick: function () {
          return RECURRENCE_EDITING_MODE.OCCURENCE;
        }
      }],
      popupOptions: {
        wrapperAttr: {
          class: "dx-dialog"
        }
      }
    });
    return this._recurrenceDialog.show();
  }

  _getUpdatedData(rawAppointment) {
    var getConvertedFromGrid = date => date ? this.timeZoneCalculator.createDate(date, {
      path: "fromGrid"
    }) : void 0;

    var isValidDate = date => !isNaN(new Date(date).getTime());

    var targetCell = this.getTargetCellData();
    var appointment = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__.createAppointmentAdapter)(rawAppointment, this._dataAccessors, this.timeZoneCalculator);
    var cellStartDate = getConvertedFromGrid(targetCell.startDate);
    var cellEndDate = getConvertedFromGrid(targetCell.endDate);
    var appointmentStartDate = new Date(appointment.startDate);
    var appointmentEndDate = new Date(appointment.endDate);
    var resultedStartDate = cellStartDate || appointmentStartDate;

    if (!isValidDate(appointmentStartDate)) {
      appointmentStartDate = resultedStartDate;
    }

    if (!isValidDate(appointmentEndDate)) {
      appointmentEndDate = cellEndDate;
    }

    var duration = appointmentEndDate.getTime() - appointmentStartDate.getTime();
    var isKeepAppointmentHours = this._workSpace.keepOriginalHours() && isValidDate(appointment.startDate) && isValidDate(cellStartDate);

    if (isKeepAppointmentHours) {
      var {
        trimTime: trimTime
      } = _core_utils_date__WEBPACK_IMPORTED_MODULE_11__.default;
      var startDate = this.timeZoneCalculator.createDate(appointment.startDate, {
        path: "toGrid"
      });
      var timeInMs = startDate.getTime() - trimTime(startDate).getTime();
      resultedStartDate = new Date(trimTime(targetCell.startDate).getTime() + timeInMs);
      resultedStartDate = this.timeZoneCalculator.createDate(resultedStartDate, {
        path: "fromGrid"
      });
    }

    var result = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__.createAppointmentAdapter)({}, this._dataAccessors, this.timeZoneCalculator);

    if (void 0 !== targetCell.allDay) {
      result.allDay = targetCell.allDay;
    }

    result.startDate = resultedStartDate;
    var resultedEndDate = new Date(resultedStartDate.getTime() + duration);

    if (this.appointmentTakesAllDay(rawAppointment) && !result.allDay && this._workSpace.supportAllDayRow()) {
      resultedEndDate = this._workSpace.calculateEndDate(resultedStartDate);
    }

    if (appointment.allDay && !this._workSpace.supportAllDayRow() && !this._workSpace.keepOriginalHours()) {
      var dateCopy = new Date(resultedStartDate);
      dateCopy.setHours(0);
      resultedEndDate = new Date(dateCopy.getTime() + duration);

      if (0 !== resultedEndDate.getHours()) {
        resultedEndDate.setHours(this._getCurrentViewOption("endDayHour"));
      }
    }

    var timeZoneOffset = _utils_timeZone__WEBPACK_IMPORTED_MODULE_37__.default.getTimezoneOffsetChangeInMs(appointmentStartDate, appointmentEndDate, resultedStartDate, resultedEndDate);
    result.endDate = new Date(resultedEndDate.getTime() - timeZoneOffset);
    var rawResult = result.source();
    (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_50__.setResourceToAppointment)(this.option("resources"), this.getResourceDataAccessors(), rawResult, targetCell.groups);
    return rawResult;
  }

  getTargetedAppointment(appointment, element) {
    var settings = _utils__WEBPACK_IMPORTED_MODULE_49__.utils.dataAccessors.getAppointmentSettings(element);
    var info = _utils__WEBPACK_IMPORTED_MODULE_49__.utils.dataAccessors.getAppointmentInfo(element);
    var appointmentIndex = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_4__.default)(element).data(this._appointments._itemIndexKey());
    var adapter = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__.createAppointmentAdapter)(appointment, this._dataAccessors, this.timeZoneCalculator);
    var targetedAdapter = adapter.clone();

    if (this._isAgenda() && adapter.isRecurrent) {
      var agendaSettings = settings.agendaSettings;
      targetedAdapter.startDate = _expressionUtils__WEBPACK_IMPORTED_MODULE_51__.ExpressionUtils.getField(this._dataAccessors, "startDate", agendaSettings);
      targetedAdapter.endDate = _expressionUtils__WEBPACK_IMPORTED_MODULE_51__.ExpressionUtils.getField(this._dataAccessors, "endDate", agendaSettings);
    } else if (settings) {
      targetedAdapter.startDate = info ? info.sourceAppointment.startDate : adapter.startDate;
      targetedAdapter.endDate = info ? info.sourceAppointment.endDate : adapter.endDate;
    }

    var rawTargetedAppointment = targetedAdapter.source();

    if (element) {
      this.setTargetedAppointmentResources(rawTargetedAppointment, element, appointmentIndex);
    }

    if (info) {
      rawTargetedAppointment.displayStartDate = new Date(info.appointment.startDate);
      rawTargetedAppointment.displayEndDate = new Date(info.appointment.endDate);
    }

    return rawTargetedAppointment;
  }

  subscribe(subject, action) {
    this._subscribes[subject] = _subscribes__WEBPACK_IMPORTED_MODULE_35__.default[subject] = action;
  }

  fire(subject) {
    var callback = this._subscribes[subject];
    var args = Array.prototype.slice.call(arguments);

    if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isFunction)(callback)) {
      throw _widget_ui_errors__WEBPACK_IMPORTED_MODULE_24__.default.Error("E1031", subject);
    }

    return callback.apply(this, args.slice(1));
  }

  getTargetCellData() {
    return this._workSpace.getDataByDroppableCell();
  }

  _updateAppointment(target, rawAppointment, onUpdatePrevented, dragEvent) {
    var updatingOptions = {
      newData: rawAppointment,
      oldData: (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)({}, target),
      cancel: false
    };

    var performFailAction = function (err) {
      if (onUpdatePrevented) {
        onUpdatePrevented.call(this);
      }

      if (err && "Error" === err.name) {
        throw err;
      }
    }.bind(this);

    this._actions[StoreEventNames.UPDATING](updatingOptions);

    if (dragEvent && !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isDeferred)(dragEvent.cancel)) {
      dragEvent.cancel = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.Deferred();
    }

    return this._processActionResult(updatingOptions, function (canceled) {
      var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.Deferred();

      if (!canceled) {
        this._expandAllDayPanel(rawAppointment);

        try {
          deferred = this.appointmentDataProvider.update(target, rawAppointment).done(() => {
            dragEvent && dragEvent.cancel.resolve(false);
          }).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.UPDATED, storeAppointment)).fail(() => performFailAction());
        } catch (err) {
          performFailAction(err);
          deferred.resolve();
        }
      } else {
        performFailAction();
        deferred.resolve();
      }

      return deferred.promise();
    });
  }

  _processActionResult(actionOptions, callback) {
    var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.Deferred();

    var resolveCallback = callbackResult => {
      (0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.when)((0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.fromPromise)(callbackResult)).always(deferred.resolve);
    };

    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isPromise)(actionOptions.cancel)) {
      (0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.when)((0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.fromPromise)(actionOptions.cancel)).always(cancel => {
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isDefined)(cancel)) {
          cancel = "rejected" === actionOptions.cancel.state();
        }

        resolveCallback(callback.call(this, cancel));
      });
    } else {
      resolveCallback(callback.call(this, actionOptions.cancel));
    }

    return deferred.promise();
  }

  _expandAllDayPanel(appointment) {
    if (!this._isAllDayExpanded() && this.appointmentTakesAllDay(appointment)) {
      this._workSpace.option("allDayExpanded", true);
    }
  }

  _onDataPromiseCompleted(handlerName, storeAppointment, appointment) {
    var args = {
      appointmentData: appointment || storeAppointment
    };

    if (storeAppointment instanceof Error) {
      args.error = storeAppointment;
    } else {
      this._appointmentPopup.visible && this._appointmentPopup.hide();
    }

    this._actions[handlerName](args);

    this._fireContentReadyAction();
  }

  getAppointmentsInstance() {
    return this._appointments;
  }

  getLayoutManager() {
    return this._layoutManager;
  }

  getRenderingStrategyInstance() {
    return this.getLayoutManager().getRenderingStrategyInstance();
  }

  getActions() {
    return this._actions;
  }

  appointmentTakesAllDay(rawAppointment) {
    var appointment = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__.createAppointmentAdapter)(rawAppointment, this._dataAccessors, this.timeZoneCalculator);
    return (0,_renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_56__.getAppointmentTakesAllDay)(appointment, this._getCurrentViewOption("startDayHour"), this._getCurrentViewOption("endDayHour"), this._getCurrentViewOption("allDayPanelMode"));
  }

  dayHasAppointment(day, rawAppointment, trimTime) {
    var getConvertedToTimeZone = date => this.timeZoneCalculator.createDate(date, {
      path: "toGrid"
    });

    var appointment = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__.createAppointmentAdapter)(rawAppointment, this._dataAccessors, this.timeZoneCalculator);
    var startDate = new Date(appointment.startDate);
    var endDate = new Date(appointment.endDate);
    startDate = getConvertedToTimeZone(startDate);
    endDate = getConvertedToTimeZone(endDate);

    if (day.getTime() === endDate.getTime()) {
      return startDate.getTime() === endDate.getTime();
    }

    if (trimTime) {
      day = _core_utils_date__WEBPACK_IMPORTED_MODULE_11__.default.trimTime(day);
      startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_11__.default.trimTime(startDate);
      endDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_11__.default.trimTime(endDate);
    }

    var dayTimeStamp = day.getTime();
    var startDateTimeStamp = startDate.getTime();
    var endDateTimeStamp = endDate.getTime();
    return startDateTimeStamp <= dayTimeStamp && dayTimeStamp <= endDateTimeStamp;
  }

  setTargetedAppointmentResources(rawAppointment, element, appointmentIndex) {
    var groups = this._getCurrentViewOption("groups");

    if (null !== groups && void 0 !== groups && groups.length) {
      var resourcesSetter = this.getResourceDataAccessors().setter;
      var workSpace = this._workSpace;
      var getGroups;
      var setResourceCallback;

      if (this._isAgenda()) {
        getGroups = function () {
          var apptSettings = this.getLayoutManager()._positionMap[appointmentIndex];

          return (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_50__.getCellGroups)(apptSettings[0].groupIndex, this.getWorkSpace().option("groups"));
        };

        setResourceCallback = function (_, group) {
          resourcesSetter[group.name](rawAppointment, group.id);
        };
      } else {
        getGroups = function () {
          var setting = _utils__WEBPACK_IMPORTED_MODULE_49__.utils.dataAccessors.getAppointmentSettings(element) || {};
          return workSpace.getCellDataByCoordinates({
            left: setting.left,
            top: setting.top
          }).groups;
        };

        setResourceCallback = function (field, value) {
          resourcesSetter[field](rawAppointment, value);
        };
      }

      (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_15__.each)(getGroups.call(this), setResourceCallback);
    }
  }

  getStartViewDate() {
    var _this$_workSpace4;

    return null === (_this$_workSpace4 = this._workSpace) || void 0 === _this$_workSpace4 ? void 0 : _this$_workSpace4.getStartViewDate();
  }

  getEndViewDate() {
    return this._workSpace.getEndViewDate();
  }

  showAddAppointmentPopup(cellData, cellGroups) {
    var appointmentAdapter = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__.createAppointmentAdapter)({}, this._dataAccessors, this.timeZoneCalculator);
    appointmentAdapter.allDay = cellData.allDay;
    appointmentAdapter.startDate = this.timeZoneCalculator.createDate(cellData.startDate, {
      path: "fromGrid"
    });
    appointmentAdapter.endDate = this.timeZoneCalculator.createDate(cellData.endDate, {
      path: "fromGrid"
    });
    var resultAppointment = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)(appointmentAdapter.source(), cellGroups);
    this.showAppointmentPopup(resultAppointment, true);
  }

  showAppointmentPopup(rawAppointment, createNewAppointment, rawTargetedAppointment) {
    var newRawTargetedAppointment = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, rawTargetedAppointment);

    if (newRawTargetedAppointment) {
      delete newRawTargetedAppointment.displayStartDate;
      delete newRawTargetedAppointment.displayEndDate;
    }

    var appointment = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__.createAppointmentAdapter)(newRawTargetedAppointment || rawAppointment, this._dataAccessors, this.timeZoneCalculator);
    var newTargetedAppointment = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)({}, rawAppointment, newRawTargetedAppointment);
    var isCreateAppointment = null !== createNewAppointment && void 0 !== createNewAppointment ? createNewAppointment : (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isEmptyObject)(rawAppointment);

    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isEmptyObject)(rawAppointment)) {
      rawAppointment = this.createPopupAppointment();
    }

    if (isCreateAppointment) {
      delete this._editAppointmentData;
      this._editing.allowAdding && this._appointmentPopup.show(rawAppointment, {
        isToolbarVisible: true,
        action: _internal_scheduler_appointment_popup_m_popup__WEBPACK_IMPORTED_MODULE_26__.ACTION_TO_APPOINTMENT.CREATE
      });
    } else {
      this._checkRecurringAppointment(rawAppointment, newTargetedAppointment, appointment.startDate, () => {
        this._editAppointmentData = rawAppointment;

        this._appointmentPopup.show(rawAppointment, {
          isToolbarVisible: this._editing.allowUpdating,
          action: _internal_scheduler_appointment_popup_m_popup__WEBPACK_IMPORTED_MODULE_26__.ACTION_TO_APPOINTMENT.UPDATE
        });
      }, false, true);
    }
  }

  createPopupAppointment() {
    var result = {};
    var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_11__.default.dateToMilliseconds;
    var startDate = new Date(this.option("currentDate"));
    var endDate = new Date(startDate.getTime() + this.option("cellDuration") * toMs("minute"));
    _expressionUtils__WEBPACK_IMPORTED_MODULE_51__.ExpressionUtils.setField(this._dataAccessors, "startDate", result, startDate);
    _expressionUtils__WEBPACK_IMPORTED_MODULE_51__.ExpressionUtils.setField(this._dataAccessors, "endDate", result, endDate);
    return result;
  }

  hideAppointmentPopup(saveChanges) {
    var _this$_appointmentPop3;

    if (null !== (_this$_appointmentPop3 = this._appointmentPopup) && void 0 !== _this$_appointmentPop3 && _this$_appointmentPop3.visible) {
      saveChanges && this._appointmentPopup.saveChangesAsync();

      this._appointmentPopup.hide();
    }
  }

  showAppointmentTooltip(appointment, element, targetedAppointment) {
    if (appointment) {
      var settings = _utils__WEBPACK_IMPORTED_MODULE_49__.utils.dataAccessors.getAppointmentSettings(element);
      var appointmentConfig = {
        itemData: targetedAppointment || appointment,
        groupIndex: null === settings || void 0 === settings ? void 0 : settings.groupIndex,
        groups: this.option("groups")
      };

      var _getAppointmentColor = this.createGetAppointmentColor();

      var deferredColor = _getAppointmentColor(appointmentConfig);

      var info = new _dataStructures__WEBPACK_IMPORTED_MODULE_48__.AppointmentTooltipInfo(appointment, targetedAppointment, deferredColor);
      this.showAppointmentTooltipCore(element, [info]);
    }
  }

  createGetAppointmentColor() {
    return appointmentConfig => {
      var resourceConfig = {
        resources: this.option("resources"),
        dataAccessors: this.getResourceDataAccessors(),
        loadedResources: this.option("loadedResources"),
        resourceLoaderMap: this.option("resourceLoaderMap")
      };
      return (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_50__.getAppointmentColor)(resourceConfig, appointmentConfig);
    };
  }

  showAppointmentTooltipCore(target, data, options) {
    var arg = {
      cancel: false,
      appointments: data.map(item => {
        var result = {
          appointmentData: item.appointment,
          currentAppointmentData: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, item.targetedAppointment),
          color: item.color
        };

        if (item.settings.info) {
          var {
            startDate: startDate,
            endDate: endDate
          } = item.settings.info.appointment;
          result.currentAppointmentData.displayStartDate = startDate;
          result.currentAppointmentData.displayEndDate = endDate;
        }

        return result;
      }),
      targetElement: target
    };

    this._createActionByOption("onAppointmentTooltipShowing")(arg);

    if (this._appointmentTooltip.isAlreadyShown(target)) {
      this.hideAppointmentTooltip();
    } else {
      this._processActionResult(arg, canceled => {
        !canceled && this._appointmentTooltip.show(target, data, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this._getExtraAppointmentTooltipOptions(), options));
      });
    }
  }

  hideAppointmentTooltip() {
    this._appointmentTooltip && this._appointmentTooltip.hide();
  }

  scrollToTime(hours, minutes, date) {
    _widget_ui_errors__WEBPACK_IMPORTED_MODULE_24__.default.log("W0002", "dxScheduler", "scrollToTime", "21.1", 'Use the "scrollTo" method instead');

    this._workSpace.scrollToTime(hours, minutes, date);
  }

  scrollTo(date, groups, allDay) {
    this._workSpace.scrollTo(date, groups, allDay);
  }

  _isHorizontalVirtualScrolling() {
    var scrolling = this.option("scrolling");
    var {
      orientation: orientation,
      mode: mode
    } = scrolling;
    var isVirtualScrolling = "virtual" === mode;
    return isVirtualScrolling && ("horizontal" === orientation || "both" === orientation);
  }

  addAppointment(rawAppointment) {
    var appointment = (0,_appointmentAdapter__WEBPACK_IMPORTED_MODULE_47__.createAppointmentAdapter)(rawAppointment, this._dataAccessors, this.timeZoneCalculator);
    appointment.text = appointment.text || "";
    var serializedAppointment = appointment.source(true);
    var addingOptions = {
      appointmentData: serializedAppointment,
      cancel: false
    };

    this._actions[StoreEventNames.ADDING](addingOptions);

    return this._processActionResult(addingOptions, canceled => {
      if (canceled) {
        return new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.Deferred().resolve();
      }

      this._expandAllDayPanel(serializedAppointment);

      return this.appointmentDataProvider.add(serializedAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.ADDED, storeAppointment));
    });
  }

  updateAppointment(target, appointment) {
    return this._updateAppointment(target, appointment);
  }

  deleteAppointment(rawAppointment) {
    var deletingOptions = this.fireOnAppointmentDeleting(rawAppointment);
    this.processDeleteAppointment(rawAppointment, deletingOptions);
  }

  fireOnAppointmentDeleting(rawAppointment, targetedAppointmentData) {
    var deletingOptions = {
      appointmentData: rawAppointment,
      targetedAppointmentData: targetedAppointmentData,
      cancel: false
    };

    this._actions[StoreEventNames.DELETING](deletingOptions);

    return deletingOptions;
  }

  processDeleteAppointment(rawAppointment, deletingOptions) {
    this._processActionResult(deletingOptions, function (canceled) {
      if (!canceled) {
        this.appointmentDataProvider.remove(rawAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.DELETED, storeAppointment, rawAppointment));
      }
    });
  }

  deleteRecurrence(appointment, date, recurrenceEditMode) {
    this._checkRecurringAppointment(appointment, {}, date, () => {
      this.processDeleteAppointment(appointment, {
        cancel: false
      });
    }, true, false, null, recurrenceEditMode);
  }

  focus() {
    if (this._editAppointmentData) {
      this._appointments.focus();
    } else {
      this._workSpace.focus();
    }
  }

  getFirstDayOfWeek() {
    return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isDefined)(this.option("firstDayOfWeek")) ? this.option("firstDayOfWeek") : _localization_date__WEBPACK_IMPORTED_MODULE_20__.default.firstDayOfWeekIndex();
  }

  _validateKeyFieldIfAgendaExist() {
    if (!this.appointmentDataProvider.isDataSourceInit) {
      return;
    }

    var hasAgendaView = !!this._getViewByName("agenda");
    var isKeyExist = !!this.appointmentDataProvider.keyName;

    if (hasAgendaView && !isKeyExist) {
      _widget_ui_errors__WEBPACK_IMPORTED_MODULE_24__.default.log("W1023");
    }
  }

  _validateCellDuration() {
    var endDayHour = this._getCurrentViewOption("endDayHour");

    var startDayHour = this._getCurrentViewOption("startDayHour");

    var cellDuration = this._getCurrentViewOption("cellDuration");

    if ((endDayHour - startDayHour) * MINUTES_IN_HOUR % cellDuration !== 0) {
      _widget_ui_errors__WEBPACK_IMPORTED_MODULE_24__.default.log("W1015");
    }
  }

  _validateDayHours() {
    var startDayHour = this._getCurrentViewOption("startDayHour");

    var endDayHour = this._getCurrentViewOption("endDayHour");

    (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_52__.validateDayHours)(startDayHour, endDayHour);
  }

  _getDragBehavior() {
    return this._workSpace.dragBehavior;
  }

}

Scheduler.include(_data_helper__WEBPACK_IMPORTED_MODULE_18__.default);
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_1__.default)("dxScheduler", Scheduler);
/* harmony default export */ __webpack_exports__["default"] = (Scheduler);

/***/ }),

/***/ 56943:
/*!***********************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/utils.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "utils": function() { return /* binding */ utils; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/iterator */ 14975);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ 27895);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/element */ 60213);
/* harmony import */ var _core_utils_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/data */ 25670);
/* harmony import */ var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/date_serialization */ 37043);
/**
 * DevExtreme (esm/ui/scheduler/utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */








var utils = {
    dataAccessors: {
        getAppointmentSettings: element => (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(element).data(_constants__WEBPACK_IMPORTED_MODULE_4__.APPOINTMENT_SETTINGS_KEY),
        getAppointmentInfo: element => {
            var settings = utils.dataAccessors.getAppointmentSettings(element);
            return null === settings || void 0 === settings ? void 0 : settings.info
        },
        create: (fields, currentDataAccessors, forceIsoDateParsing, dateSerializationFormat) => {
            var dataAccessors = currentDataAccessors ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, currentDataAccessors) : {
                getter: {},
                setter: {},
                expr: {}
            };
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__.each)(fields, (name, expr) => {
                if (expr) {
                    var getter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_6__.compileGetter)(expr);
                    var setter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_6__.compileSetter)(expr);
                    var dateGetter;
                    var dateSetter;
                    var serializationFormat;
                    if (field = name, "startDate" === field || "endDate" === field) {
                        dateGetter = object => {
                            var value = getter(object);
                            if (forceIsoDateParsing) {
                                value = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_7__.default.deserializeDate(value)
                            }
                            return value
                        };
                        dateSetter = (object, value) => {
                            if (dateSerializationFormat) {
                                serializationFormat = dateSerializationFormat
                            } else if (forceIsoDateParsing && !serializationFormat) {
                                var oldValue = getter(object);
                                serializationFormat = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_7__.default.getDateSerializationFormat(oldValue)
                            }
                            var newValue = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_7__.default.serializeDate(value, serializationFormat);
                            setter(object, newValue)
                        }
                    }
                    dataAccessors.getter[name] = dateGetter || getter;
                    dataAccessors.setter[name] = dateSetter || setter;
                    dataAccessors.expr["".concat(name, "Expr")] = expr
                } else {
                    delete dataAccessors.getter[name];
                    delete dataAccessors.setter[name];
                    delete dataAccessors.expr["".concat(name, "Expr")]
                }
                var field
            });
            return dataAccessors
        }
    },
    DOM: {
        getHeaderHeight: header => header ? header._$element && parseInt((0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getOuterHeight)(header._$element), 10) : 0
    },
    renovation: {
        renderComponent: (widget, parentElement, componentClass, componentName, viewModel) => {
            var component = widget[componentName];
            if (!component) {
                var container = (0,_core_element__WEBPACK_IMPORTED_MODULE_5__.getPublicElement)(parentElement);
                component = widget._createComponent(container, componentClass, viewModel);
                widget[componentName] = component
            } else {
                var $element = component.$element();
                var elementStyle = $element.get(0).style;
                var height = elementStyle.height;
                var width = elementStyle.width;
                component.option(viewModel);
                if (height) {
                    (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setHeight)($element, height)
                }
                if (width) {
                    (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setWidth)($element, width)
                }
            }
        }
    }
};


/***/ }),

/***/ 53374:
/*!********************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/utils.timeZone.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/date */ 35341);
/* harmony import */ var _internal_scheduler_timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../__internal/scheduler/timezones/m_utils_timezones_data */ 78514);
/* harmony import */ var _dateAdapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dateAdapter */ 72494);
/**
 * DevExtreme (esm/ui/scheduler/utils.timeZone.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.dateToMilliseconds;
var MINUTES_IN_HOUR = 60;
var MS_IN_MINUTE = 6e4;
var createUTCDateWithLocalOffset = date => {
    if (!date) {
        return null
    }
    return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()))
};
var createDateFromUTCWithLocalOffset = date => {
    var result = (0,_dateAdapter__WEBPACK_IMPORTED_MODULE_2__.default)(date);
    var timezoneOffsetBeforeInMin = result.getTimezoneOffset();
    result.addTime(result.getTimezoneOffset("minute"));
    result.subtractMinutes(timezoneOffsetBeforeInMin - result.getTimezoneOffset());
    return result.source
};
var getTimeZones = function() {
    var date = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Date;
    var dateInUTC = createUTCDate(date);
    return _internal_scheduler_timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_1__.default.getDisplayedTimeZones(dateInUTC.getTime())
};
var createUTCDate = date => new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes()));
var getTimezoneOffsetChangeInMinutes = (startDate, endDate, updatedStartDate, updatedEndDate) => getDaylightOffset(updatedStartDate, updatedEndDate) - getDaylightOffset(startDate, endDate);
var getTimezoneOffsetChangeInMs = (startDate, endDate, updatedStartDate, updatedEndDate) => getTimezoneOffsetChangeInMinutes(startDate, endDate, updatedStartDate, updatedEndDate) * toMs("minute");
var getDaylightOffset = (startDate, endDate) => new Date(startDate).getTimezoneOffset() - new Date(endDate).getTimezoneOffset();
var getDaylightOffsetInMs = (startDate, endDate) => getDaylightOffset(startDate, endDate) * toMs("minute");
var calculateTimezoneByValue = function(timezone) {
    var date = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date;
    if ("string" === typeof timezone) {
        var dateUtc = createUTCDate(date);
        return _internal_scheduler_timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_1__.default.getTimeZoneOffsetById(timezone, dateUtc.getTime())
    }
    return timezone
};
var _getDaylightOffsetByTimezone = (startDate, endDate, timeZone) => calculateTimezoneByValue(timeZone, startDate) - calculateTimezoneByValue(timeZone, endDate);
var getCorrectedDateByDaylightOffsets = (convertedOriginalStartDate, convertedDate, date, timeZone, startDateTimezone) => {
    var daylightOffsetByCommonTimezone = _getDaylightOffsetByTimezone(convertedOriginalStartDate, convertedDate, timeZone);
    var daylightOffsetByAppointmentTimezone = _getDaylightOffsetByTimezone(convertedOriginalStartDate, convertedDate, startDateTimezone);
    var diff = daylightOffsetByCommonTimezone - daylightOffsetByAppointmentTimezone;
    return new Date(date.getTime() - diff * toMs("hour"))
};
var correctRecurrenceExceptionByTimezone = function(exception, exceptionByStartDate, timeZone, startDateTimeZone) {
    var isBackConversion = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : false;
    var timezoneOffset = (exception.getTimezoneOffset() - exceptionByStartDate.getTimezoneOffset()) / MINUTES_IN_HOUR;
    if (startDateTimeZone) {
        timezoneOffset = _getDaylightOffsetByTimezone(exceptionByStartDate, exception, startDateTimeZone)
    } else if (timeZone) {
        timezoneOffset = _getDaylightOffsetByTimezone(exceptionByStartDate, exception, timeZone)
    }
    return new Date(exception.getTime() + (isBackConversion ? -1 : 1) * timezoneOffset * toMs("hour"))
};
var isTimezoneChangeInDate = date => {
    var startDayDate = new Date(new Date(date).setHours(0, 0, 0, 0));
    var endDayDate = new Date(new Date(date).setHours(23, 59, 59, 0));
    return startDayDate.getTimezoneOffset() - endDayDate.getTimezoneOffset() !== 0
};
var getDateWithoutTimezoneChange = date => {
    var clonedDate = new Date(date);
    if (isTimezoneChangeInDate(clonedDate)) {
        var result = new Date(clonedDate);
        return new Date(result.setDate(result.getDate() + 1))
    }
    return clonedDate
};
var isSameAppointmentDates = (startDate, endDate) => {
    endDate = new Date(endDate.getTime() - 1);
    return _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.sameDate(startDate, endDate)
};
var getClientTimezoneOffset = function() {
    var date = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Date;
    return date.getTimezoneOffset() * MS_IN_MINUTE
};
var getDiffBetweenClientTimezoneOffsets = function() {
    var firstDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Date;
    var secondDate = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date;
    return getClientTimezoneOffset(firstDate) - getClientTimezoneOffset(secondDate)
};
var isEqualLocalTimeZone = function(timeZoneName) {
    var date = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date;
    if (Intl) {
        var localTimeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone;
        if (localTimeZoneName === timeZoneName) {
            return true
        }
    }
    return isEqualLocalTimeZoneByDeclaration(timeZoneName, date)
};
var hasDSTInLocalTimeZone = () => {
    var [startDate, endDate] = getExtremeDates();
    return startDate.getTimezoneOffset() !== endDate.getTimezoneOffset()
};
var isEqualLocalTimeZoneByDeclaration = (timeZoneName, date) => {
    var year = date.getFullYear();
    var getOffset = date => -date.getTimezoneOffset() / 60;
    var getDateAndMoveHourBack = dateStamp => new Date(dateStamp - 36e5);
    var configTuple = _internal_scheduler_timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_1__.default.getTimeZoneDeclarationTuple(timeZoneName, year);
    var [summerTime, winterTime] = configTuple;
    var noDSTInTargetTimeZone = configTuple.length < 2;
    if (noDSTInTargetTimeZone) {
        var targetTimeZoneOffset = _internal_scheduler_timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_1__.default.getTimeZoneOffsetById(timeZoneName, date);
        var localTimeZoneOffset = getOffset(date);
        if (targetTimeZoneOffset !== localTimeZoneOffset) {
            return false
        }
        return hasDSTInLocalTimeZone() ? false : true
    }
    var localSummerOffset = getOffset(new Date(summerTime.date));
    var localWinterOffset = getOffset(new Date(winterTime.date));
    if (localSummerOffset !== summerTime.offset) {
        return false
    }
    if (localSummerOffset === getOffset(getDateAndMoveHourBack(summerTime.date))) {
        return false
    }
    if (localWinterOffset !== winterTime.offset) {
        return false
    }
    if (localWinterOffset === getOffset(getDateAndMoveHourBack(winterTime.date))) {
        return false
    }
    return true
};
var getExtremeDates = () => {
    var nowDate = new Date(Date.now());
    var startDate = new Date;
    var endDate = new Date;
    startDate.setFullYear(nowDate.getFullYear(), 0, 1);
    endDate.setFullYear(nowDate.getFullYear(), 6, 1);
    return [startDate, endDate]
};
var setOffsetsToDate = (targetDate, offsetsArray) => {
    var newDateMs = offsetsArray.reduce((result, offset) => result + offset, targetDate.getTime());
    return new Date(newDateMs)
};
var utils = {
    getDaylightOffset: getDaylightOffset,
    getDaylightOffsetInMs: getDaylightOffsetInMs,
    getTimezoneOffsetChangeInMinutes: getTimezoneOffsetChangeInMinutes,
    getTimezoneOffsetChangeInMs: getTimezoneOffsetChangeInMs,
    calculateTimezoneByValue: calculateTimezoneByValue,
    getCorrectedDateByDaylightOffsets: getCorrectedDateByDaylightOffsets,
    isSameAppointmentDates: isSameAppointmentDates,
    correctRecurrenceExceptionByTimezone: correctRecurrenceExceptionByTimezone,
    getClientTimezoneOffset: getClientTimezoneOffset,
    getDiffBetweenClientTimezoneOffsets: getDiffBetweenClientTimezoneOffsets,
    createUTCDateWithLocalOffset: createUTCDateWithLocalOffset,
    createDateFromUTCWithLocalOffset: createDateFromUTCWithLocalOffset,
    createUTCDate: createUTCDate,
    isTimezoneChangeInDate: isTimezoneChangeInDate,
    getDateWithoutTimezoneChange: getDateWithoutTimezoneChange,
    hasDSTInLocalTimeZone: hasDSTInLocalTimeZone,
    isEqualLocalTimeZone: isEqualLocalTimeZone,
    isEqualLocalTimeZoneByDeclaration: isEqualLocalTimeZoneByDeclaration,
    getTimeZones: getTimeZones,
    setOffsetsToDate: setOffsetsToDate
};
/* harmony default export */ __webpack_exports__["default"] = (utils);


/***/ }),

/***/ 72283:
/*!**********************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/cache.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Cache": function() { return /* binding */ Cache; }
/* harmony export */ });
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/cache.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

class Cache {
    constructor() {
        this._cache = new Map
    }
    get size() {
        return this._cache.size
    }
    clear() {
        this._cache.clear()
    }
    get(name, callback) {
        if (!this._cache.has(name) && callback) {
            this.set(name, callback())
        }
        return this._cache.get(name)
    }
    set(name, value) {
        (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(value) && this._cache.set(name, value)
    }
}


/***/ }),

/***/ 67682:
/*!*******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/cells_selection_controller.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CellsSelectionController": function() { return /* binding */ CellsSelectionController; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/cells_selection_controller.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class CellsSelectionController {
    handleArrowClick(options) {
        var {
            key: key,
            focusedCellPosition: focusedCellPosition,
            edgeIndices: edgeIndices,
            getCellDataByPosition: getCellDataByPosition,
            isAllDayPanelCell: isAllDayPanelCell
        } = options;
        var nextCellIndices;
        switch (key) {
            case "down":
                nextCellIndices = this.getCellFromNextRowPosition(focusedCellPosition, "next", edgeIndices);
                break;
            case "up":
                nextCellIndices = this.getCellFromNextRowPosition(focusedCellPosition, "prev", edgeIndices);
                break;
            case "left":
                nextCellIndices = this.getCellFromNextColumnPosition((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options, {
                    direction: "prev"
                }));
                break;
            case "right":
                nextCellIndices = this.getCellFromNextColumnPosition((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options, {
                    direction: "next"
                }))
        }
        var currentCellData = getCellDataByPosition(nextCellIndices.rowIndex, nextCellIndices.columnIndex, isAllDayPanelCell);
        return this.moveToCell((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options, {
            currentCellData: currentCellData
        }))
    }
    getCellFromNextRowPosition(focusedCellPosition, direction, edgeIndices) {
        var {
            columnIndex: columnIndex,
            rowIndex: rowIndex
        } = focusedCellPosition;
        var deltaPosition = "next" === direction ? 1 : -1;
        var nextRowIndex = rowIndex + deltaPosition;
        var validRowIndex = nextRowIndex >= 0 && nextRowIndex <= edgeIndices.lastRowIndex ? nextRowIndex : rowIndex;
        return {
            columnIndex: columnIndex,
            rowIndex: validRowIndex
        }
    }
    getCellFromNextColumnPosition(options) {
        var {
            focusedCellPosition: focusedCellPosition,
            direction: direction,
            edgeIndices: edgeIndices,
            isRTL: isRTL,
            isGroupedByDate: isGroupedByDate,
            groupCount: groupCount,
            isMultiSelection: isMultiSelection,
            viewType: viewType
        } = options;
        var {
            columnIndex: columnIndex,
            rowIndex: rowIndex
        } = focusedCellPosition;
        var {
            firstColumnIndex: firstColumnIndex,
            lastColumnIndex: lastColumnIndex,
            firstRowIndex: firstRowIndex,
            lastRowIndex: lastRowIndex
        } = edgeIndices;
        var step = isGroupedByDate && isMultiSelection ? groupCount : 1;
        var sign = isRTL ? -1 : 1;
        var deltaColumnIndex = "next" === direction ? sign * step : -1 * sign * step;
        var nextColumnIndex = columnIndex + deltaColumnIndex;
        var isValidColumnIndex = nextColumnIndex >= firstColumnIndex && nextColumnIndex <= lastColumnIndex;
        if (isValidColumnIndex) {
            return {
                columnIndex: nextColumnIndex,
                rowIndex: rowIndex
            }
        }
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__.isDateAndTimeView)(viewType) ? focusedCellPosition : this._processEdgeCell({
            nextColumnIndex: nextColumnIndex,
            rowIndex: rowIndex,
            columnIndex: columnIndex,
            firstColumnIndex: firstColumnIndex,
            lastColumnIndex: lastColumnIndex,
            firstRowIndex: firstRowIndex,
            lastRowIndex: lastRowIndex,
            step: step
        })
    }
    _processEdgeCell(options) {
        var {
            nextColumnIndex: nextColumnIndex,
            rowIndex: rowIndex,
            columnIndex: columnIndex,
            firstColumnIndex: firstColumnIndex,
            lastColumnIndex: lastColumnIndex,
            firstRowIndex: firstRowIndex,
            lastRowIndex: lastRowIndex,
            step: step
        } = options;
        var validColumnIndex = nextColumnIndex;
        var validRowIndex = rowIndex;
        var isLeftEdgeCell = nextColumnIndex < firstColumnIndex;
        var isRightEdgeCell = nextColumnIndex > lastColumnIndex;
        if (isLeftEdgeCell) {
            var columnIndexInNextRow = lastColumnIndex - (step - columnIndex % step - 1);
            var nextRowIndex = rowIndex - 1;
            var isValidRowIndex = nextRowIndex >= firstRowIndex;
            validRowIndex = isValidRowIndex ? nextRowIndex : rowIndex;
            validColumnIndex = isValidRowIndex ? columnIndexInNextRow : columnIndex
        }
        if (isRightEdgeCell) {
            var _columnIndexInNextRow = firstColumnIndex + columnIndex % step;
            var _nextRowIndex = rowIndex + 1;
            var _isValidRowIndex = _nextRowIndex <= lastRowIndex;
            validRowIndex = _isValidRowIndex ? _nextRowIndex : rowIndex;
            validColumnIndex = _isValidRowIndex ? _columnIndexInNextRow : columnIndex
        }
        return {
            columnIndex: validColumnIndex,
            rowIndex: validRowIndex
        }
    }
    moveToCell(options) {
        var {
            isMultiSelection: isMultiSelection,
            isMultiSelectionAllowed: isMultiSelectionAllowed,
            focusedCellData: focusedCellData,
            currentCellData: currentCellData
        } = options;
        var isValidMultiSelection = isMultiSelection && isMultiSelectionAllowed;
        var nextFocusedCellData = isValidMultiSelection ? this._getNextCellData(currentCellData, focusedCellData) : currentCellData;
        return nextFocusedCellData
    }
    _getNextCellData(nextFocusedCellData, focusedCellData, isVirtualCell) {
        if (isVirtualCell) {
            return focusedCellData
        }
        var isValidNextFocusedCell = this._isValidNextFocusedCell(nextFocusedCellData, focusedCellData);
        return isValidNextFocusedCell ? nextFocusedCellData : focusedCellData
    }
    _isValidNextFocusedCell(nextFocusedCellData, focusedCellData) {
        if (!focusedCellData) {
            return true
        }
        var {
            groupIndex: groupIndex,
            allDay: allDay
        } = focusedCellData;
        var {
            groupIndex: nextGroupIndex,
            allDay: nextAllDay
        } = nextFocusedCellData;
        return groupIndex === nextGroupIndex && allDay === nextAllDay
    }
}


/***/ }),

/***/ 21985:
/*!**************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/cells_selection_state.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ CellsSelectionState; }
/* harmony export */ });
/* harmony import */ var _renovation_ui_scheduler_workspaces_base_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/workspaces/base/utils */ 65866);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/cells_selection_state.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

class CellsSelectionState {
    constructor(viewDataProvider) {
        this._viewDataProvider = viewDataProvider;
        this._focusedCell = null;
        this._selectedCells = null;
        this._firstSelectedCell = null;
        this._prevFocusedCell = null;
        this._prevSelectedCells = null
    }
    get viewDataProvider() {
        return this._viewDataProvider
    }
    get focusedCell() {
        var focusedCell = this._focusedCell;
        if (!focusedCell) {
            return
        }
        var {
            groupIndex: groupIndex,
            startDate: startDate,
            allDay: allDay
        } = focusedCell;
        var cellInfo = {
            groupIndex: groupIndex,
            startDate: startDate,
            isAllDay: allDay,
            index: focusedCell.index
        };
        var cellPosition = this.viewDataProvider.findCellPositionInMap(cellInfo);
        return {
            coordinates: cellPosition,
            cellData: focusedCell
        }
    }
    setFocusedCell(rowIndex, columnIndex, isAllDay) {
        if (rowIndex >= 0) {
            var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);
            this._focusedCell = cell
        }
    }
    setSelectedCells(lastCellCoordinates) {
        var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;
        var viewDataProvider = this._viewDataProvider;
        var {
            rowIndex: lastRowIndex,
            columnIndex: lastColumnIndex,
            allDay: isLastCellAllDay
        } = lastCellCoordinates;
        if (lastRowIndex < 0) {
            return
        }
        var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;
        var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);
        this._firstSelectedCell = firstCell;
        this._selectedCells = (0,_renovation_ui_scheduler_workspaces_base_utils__WEBPACK_IMPORTED_MODULE_0__.getSelectedCells)(this._viewDataProvider, firstCell, lastCell, isLastCellAllDay)
    }
    setSelectedCellsByData(selectedCellsData) {
        this._selectedCells = selectedCellsData
    }
    getSelectedCells() {
        return this._selectedCells
    }
    releaseSelectedAndFocusedCells() {
        this.releaseSelectedCells();
        this.releaseFocusedCell()
    }
    releaseSelectedCells() {
        this._prevSelectedCells = this._selectedCells;
        this._prevFirstSelectedCell = this._firstSelectedCell;
        this._selectedCells = null;
        this._firstSelectedCell = null
    }
    releaseFocusedCell() {
        this._prevFocusedCell = this._focusedCell;
        this._focusedCell = null
    }
    restoreSelectedAndFocusedCells() {
        this._selectedCells = this._selectedCells || this._prevSelectedCells;
        this._focusedCell = this._focusedCell || this._prevFocusedCell;
        this._firstSelectedCell = this._firstSelectedCell || this._prevFirstSelectedCell;
        this._prevSelectedCells = null;
        this._prevFirstSelectedCell = null;
        this._prevFocusedCell = null
    }
    clearSelectedAndFocusedCells() {
        this._prevSelectedCells = null;
        this._selectedCells = null;
        this._prevFocusedCell = null;
        this._focusedCell = null
    }
}


/***/ }),

/***/ 18690:
/*!***************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/helpers/positionHelper.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getCellHeight": function() { return /* binding */ getCellHeight; },
/* harmony export */   "getCellWidth": function() { return /* binding */ getCellWidth; },
/* harmony export */   "getAllDayHeight": function() { return /* binding */ getAllDayHeight; },
/* harmony export */   "getMaxAllowedPosition": function() { return /* binding */ getMaxAllowedPosition; },
/* harmony export */   "getGroupWidth": function() { return /* binding */ getGroupWidth; },
/* harmony export */   "PositionHelper": function() { return /* binding */ PositionHelper; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/helpers/positionHelper.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var getCellSize = DOMMetaData => {
    var {
        dateTableCellsMeta: dateTableCellsMeta
    } = DOMMetaData;
    var length = null === dateTableCellsMeta || void 0 === dateTableCellsMeta ? void 0 : dateTableCellsMeta.length;
    if (!length) {
        return {
            width: 0,
            height: 0
        }
    }
    var cellIndex = length > 1 ? 1 : 0;
    var cellSize = dateTableCellsMeta[cellIndex][0];
    return {
        width: cellSize.width,
        height: cellSize.height
    }
};
var getMaxAllowedHorizontalPosition = (groupIndex, viewDataProvider, rtlEnabled, DOMMetaData) => {
    var {
        dateTableCellsMeta: dateTableCellsMeta
    } = DOMMetaData;
    var firstRow = dateTableCellsMeta[0];
    if (!firstRow) {
        return 0
    }
    var {
        columnIndex: columnIndex
    } = viewDataProvider.getLastGroupCellPosition(groupIndex);
    var cellPosition = firstRow[columnIndex];
    if (!cellPosition) {
        return 0
    }
    return !rtlEnabled ? cellPosition.left + cellPosition.width : cellPosition.left
};
var getCellHeight = DOMMetaData => getCellSize(DOMMetaData).height;
var getCellWidth = DOMMetaData => getCellSize(DOMMetaData).width;
var getAllDayHeight = (showAllDayPanel, isVerticalGrouping, DOMMetaData) => {
    if (!showAllDayPanel) {
        return 0
    }
    if (isVerticalGrouping) {
        var {
            dateTableCellsMeta: dateTableCellsMeta
        } = DOMMetaData;
        var length = null === dateTableCellsMeta || void 0 === dateTableCellsMeta ? void 0 : dateTableCellsMeta.length;
        return length ? dateTableCellsMeta[0][0].height : 0
    }
    var {
        allDayPanelCellsMeta: allDayPanelCellsMeta
    } = DOMMetaData;
    return null !== allDayPanelCellsMeta && void 0 !== allDayPanelCellsMeta && allDayPanelCellsMeta.length ? allDayPanelCellsMeta[0].height : 0
};
var getMaxAllowedPosition = (groupIndex, viewDataProvider, rtlEnabled, DOMMetaData) => {
    var validGroupIndex = groupIndex || 0;
    return getMaxAllowedHorizontalPosition(validGroupIndex, viewDataProvider, rtlEnabled, DOMMetaData)
};
var getGroupWidth = (groupIndex, viewDataProvider, options) => {
    var {
        isVirtualScrolling: isVirtualScrolling,
        rtlEnabled: rtlEnabled,
        DOMMetaData: DOMMetaData
    } = options;
    var cellWidth = getCellWidth(DOMMetaData);
    var result = viewDataProvider.getCellCount(options) * cellWidth;
    if (isVirtualScrolling) {
        var groupedData = viewDataProvider.groupedDataMap.dateTableGroupedMap;
        var groupLength = groupedData[groupIndex][0].length;
        result = groupLength * cellWidth
    }
    var position = getMaxAllowedPosition(groupIndex, viewDataProvider, rtlEnabled, DOMMetaData);
    var currentPosition = position[groupIndex];
    if (currentPosition) {
        if (rtlEnabled) {
            result = currentPosition - position[groupIndex + 1]
        } else if (0 === groupIndex) {
            result = currentPosition
        } else {
            result = currentPosition - position[groupIndex - 1]
        }
    }
    return result
};
class PositionHelper {
    get viewDataProvider() {
        return this.options.viewDataProvider
    }
    get rtlEnabled() {
        return this.options.rtlEnabled
    }
    get isGroupedByDate() {
        return this.options.isGroupedByDate
    }
    get groupCount() {
        return this.options.groupCount
    }
    get DOMMetaData() {
        return this.options.getDOMMetaDataCallback()
    }
    constructor(options) {
        this.options = options;
        this.groupStrategy = this.options.isVerticalGrouping ? new GroupStrategyBase(this.options) : new GroupStrategyHorizontal(this.options)
    }
    getHorizontalMax(groupIndex) {
        var getMaxPosition = groupIndex => getMaxAllowedPosition(groupIndex, this.viewDataProvider, this.rtlEnabled, this.DOMMetaData);
        if (this.isGroupedByDate) {
            var viewPortGroupCount = this.viewDataProvider.getViewPortGroupCount();
            return Math.max(getMaxPosition(groupIndex), getMaxPosition(viewPortGroupCount - 1))
        }
        return getMaxPosition(groupIndex)
    }
    getResizableStep() {
        var cellWidth = getCellWidth(this.DOMMetaData);
        if (this.isGroupedByDate) {
            return this.groupCount * cellWidth
        }
        return cellWidth
    }
    getVerticalMax(options) {
        return this.groupStrategy.getVerticalMax(options)
    }
    getOffsetByAllDayPanel(options) {
        return this.groupStrategy.getOffsetByAllDayPanel(options)
    }
    getGroupTop(options) {
        return this.groupStrategy.getGroupTop(options)
    }
}
class GroupStrategyBase {
    constructor(options) {
        this.options = options
    }
    get viewDataProvider() {
        return this.options.viewDataProvider
    }
    get isGroupedByDate() {
        return this.options.isGroupedByDate
    }
    get rtlEnabled() {
        return this.options.rtlEnabled
    }
    get groupCount() {
        return this.options.groupCount
    }
    get DOMMetaData() {
        return this.options.getDOMMetaDataCallback()
    }
    getOffsetByAllDayPanel(_ref) {
        var {
            groupIndex: groupIndex,
            supportAllDayRow: supportAllDayRow,
            showAllDayPanel: showAllDayPanel
        } = _ref;
        var result = 0;
        if (supportAllDayRow && showAllDayPanel) {
            var allDayPanelHeight = getAllDayHeight(showAllDayPanel, true, this.DOMMetaData);
            result = allDayPanelHeight * (groupIndex + 1)
        }
        return result
    }
    getVerticalMax(options) {
        var maxAllowedPosition = this._getMaxAllowedVerticalPosition((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options, {
            viewDataProvider: this.viewDataProvider,
            rtlEnabled: this.rtlEnabled,
            DOMMetaData: this.DOMMetaData
        }));
        maxAllowedPosition += this.getOffsetByAllDayPanel(options);
        return maxAllowedPosition
    }
    getGroupTop(_ref2) {
        var {
            groupIndex: groupIndex,
            showAllDayPanel: showAllDayPanel,
            isGroupedAllDayPanel: isGroupedAllDayPanel
        } = _ref2;
        var rowCount = this.viewDataProvider.getRowCountInGroup(groupIndex);
        var maxVerticalPosition = this._getMaxAllowedVerticalPosition({
            groupIndex: groupIndex,
            viewDataProvider: this.viewDataProvider,
            showAllDayPanel: showAllDayPanel,
            isGroupedAllDayPanel: isGroupedAllDayPanel,
            isVerticalGrouping: true,
            DOMMetaData: this.DOMMetaData
        });
        return maxVerticalPosition - getCellHeight(this.DOMMetaData) * rowCount
    }
    _getAllDayHeight(showAllDayPanel) {
        return getAllDayHeight(showAllDayPanel, true, this.DOMMetaData)
    }
    _getMaxAllowedVerticalPosition(_ref3) {
        var {
            groupIndex: groupIndex,
            showAllDayPanel: showAllDayPanel,
            isGroupedAllDayPanel: isGroupedAllDayPanel
        } = _ref3;
        var {
            rowIndex: rowIndex
        } = this.viewDataProvider.getLastGroupCellPosition(groupIndex);
        var {
            dateTableCellsMeta: dateTableCellsMeta
        } = this.DOMMetaData;
        var lastGroupRow = dateTableCellsMeta[rowIndex];
        if (!lastGroupRow) {
            return 0
        }
        var result = lastGroupRow[0].top + lastGroupRow[0].height;
        if (isGroupedAllDayPanel) {
            result -= (groupIndex + 1) * this._getAllDayHeight(showAllDayPanel)
        }
        return result
    }
}
class GroupStrategyHorizontal extends GroupStrategyBase {
    getOffsetByAllDayPanel(options) {
        return 0
    }
    getVerticalMax(options) {
        var {
            isVirtualScrolling: isVirtualScrolling,
            groupIndex: groupIndex
        } = options;
        var correctedGroupIndex = isVirtualScrolling ? groupIndex : 0;
        return this._getMaxAllowedVerticalPosition((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options, {
            groupIndex: correctedGroupIndex
        }))
    }
    getGroupTop(options) {
        return 0
    }
    _getAllDayHeight(showAllDayPanel) {
        return getAllDayHeight(showAllDayPanel, false, this.DOMMetaData)
    }
}


/***/ }),

/***/ 85664:
/*!************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.agenda.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/dom_adapter */ 81113);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/common */ 37552);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/utils/iterator */ 14975);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/element */ 60213);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _ui_scheduler_work_space__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ui.scheduler.work_space */ 31085);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../localization/date */ 83881);
/* harmony import */ var _table_creator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../table_creator */ 27336);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../classes */ 19156);
/* harmony import */ var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../__internal/scheduler/resources/m_utils */ 48025);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_agenda__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/agenda */ 7967);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../constants */ 27895);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.agenda.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

















var {
    tableCreator: tableCreator
} = _table_creator__WEBPACK_IMPORTED_MODULE_10__.default;
var AGENDA_CLASS = "dx-scheduler-agenda";
var AGENDA_DATE_CLASS = "dx-scheduler-agenda-date";
var GROUP_TABLE_CLASS = "dx-scheduler-group-table";
var TIME_PANEL_ROW_CLASS = "dx-scheduler-time-panel-row";
var TIME_PANEL_CELL_CLASS = "dx-scheduler-time-panel-cell";
var NODATA_CONTAINER_CLASS = "dx-scheduler-agenda-nodata";
var LAST_ROW_CLASS = "dx-scheduler-date-table-last-row";
var INNER_CELL_MARGIN = 5;
var OUTER_CELL_MARGIN = 20;
class SchedulerAgenda extends _ui_scheduler_work_space__WEBPACK_IMPORTED_MODULE_7__.default {
    get type() {
        return _constants__WEBPACK_IMPORTED_MODULE_15__.VIEWS.AGENDA
    }
    get renderingStrategy() {
        return this.invoke("getLayoutManager").getRenderingStrategyInstance()
    }
    get appointmentDataProvider() {
        return this.option("getAppointmentDataProvider")()
    }
    getStartViewDate() {
        return this._startViewDate
    }
    _init() {
        super._init();
        this._activeStateUnit = void 0
    }
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(super._getDefaultOptions(), {
            agendaDuration: 7,
            rowHeight: 60,
            noDataText: ""
        })
    }
    _optionChanged(args) {
        var name = args.name;
        var value = args.value;
        switch (name) {
            case "agendaDuration":
                break;
            case "noDataText":
            case "rowHeight":
                this._recalculateAgenda(this._rows);
                break;
            case "groups":
                if (!value || !value.length) {
                    if (this._$groupTable) {
                        this._$groupTable.remove();
                        this._$groupTable = null;
                        this._detachGroupCountClass()
                    }
                } else if (!this._$groupTable) {
                    this._initGroupTable();
                    this._dateTableScrollable.$content().prepend(this._$groupTable)
                }
                super._optionChanged(args);
                break;
            default:
                super._optionChanged(args)
        }
    }
    _renderFocusState() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _renderFocusTarget() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _cleanFocusState() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    supportAllDayRow() {
        return false
    }
    _isVerticalGroupedWorkSpace() {
        return false
    }
    _getElementClass() {
        return AGENDA_CLASS
    }
    _calculateStartViewDate() {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_agenda__WEBPACK_IMPORTED_MODULE_13__.calculateStartViewDate)(this.option("currentDate"), this.option("startDayHour"))
    }
    _getRowCount() {
        return this.option("agendaDuration")
    }
    _getCellCount() {
        return 1
    }
    _getTimePanelRowCount() {
        return this.option("agendaDuration")
    }
    _renderAllDayPanel() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _toggleAllDayVisibility() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _initWorkSpaceUnits() {
        this._initGroupTable();
        this._$timePanel = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<table>").addClass(_classes__WEBPACK_IMPORTED_MODULE_11__.TIME_PANEL_CLASS);
        this._$dateTable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<table>").addClass(_classes__WEBPACK_IMPORTED_MODULE_11__.DATE_TABLE_CLASS);
        this._$dateTableScrollableContent = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass("dx-scheduler-date-table-scrollable-content");
        this._$dateTableContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass("dx-scheduler-date-table-container")
    }
    _initGroupTable() {
        var groups = this.option("groups");
        if (groups && groups.length) {
            this._$groupTable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<table>").addClass(GROUP_TABLE_CLASS)
        }
    }
    _renderView() {
        this._startViewDate = this._calculateStartViewDate();
        this._rows = [];
        this._initPositionHelper()
    }
    _recalculateAgenda(rows) {
        var cellTemplates = [];
        this._cleanView();
        if (this._rowsIsEmpty(rows)) {
            this._renderNoData();
            return
        }
        this._rows = rows;
        if (this._$groupTable) {
            cellTemplates = this._renderGroupHeader();
            this._setGroupHeaderCellsHeight()
        }
        this._renderTimePanel();
        this._renderDateTable();
        this.invoke("onAgendaReady", rows);
        this._applyCellTemplates(cellTemplates);
        this._dateTableScrollable.update()
    }
    _renderNoData() {
        this._$noDataContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(NODATA_CONTAINER_CLASS).html(this.option("noDataText"));
        this._dateTableScrollable.$content().append(this._$noDataContainer)
    }
    _setTableSizes() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _toggleHorizontalScrollClass() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _createCrossScrollingConfig() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _setGroupHeaderCellsHeight() {
        var $cells = this._getGroupHeaderCells().filter((function(_, element) {
            return !element.getAttribute("rowSpan")
        }));
        var rows = this._removeEmptyRows(this._rows);
        if (!rows.length) {
            return
        }
        for (var i = 0; i < $cells.length; i++) {
            var $cellContent = $cells.eq(i).find(".dx-scheduler-group-header-content");
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setOuterHeight)($cellContent, this._getGroupRowHeight(rows[i]))
        }
    }
    _rowsIsEmpty(rows) {
        var result = true;
        for (var i = 0; i < rows.length; i++) {
            var groupRow = rows[i];
            for (var j = 0; j < groupRow.length; j++) {
                if (groupRow[j]) {
                    result = false;
                    break
                }
            }
        }
        return result
    }
    _attachGroupCountClass() {
        var className = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_14__.getVerticalGroupCountClass)(this.option("groups"));
        this.$element().addClass(className)
    }
    _removeEmptyRows(rows) {
        var result = [];
        for (var i = 0; i < rows.length; i++) {
            if (rows[i].length && !(data = rows[i], !data.some((function(value) {
                    return value > 0
                })))) {
                result.push(rows[i])
            }
        }
        var data;
        return result
    }
    _getGroupHeaderContainer() {
        return this._$groupTable
    }
    _makeGroupRows() {
        var tree = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_12__.createReducedResourcesTree)(this.option("loadedResources"), (field, action) => (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_12__.getDataAccessors)(this.option("getResourceDataAccessors")(), field, action), this.option("getFilteredItems")());
        var cellTemplate = this.option("resourceCellTemplate");
        var getGroupHeaderContentClass = _classes__WEBPACK_IMPORTED_MODULE_11__.GROUP_HEADER_CONTENT_CLASS;
        var cellTemplates = [];
        var table = tableCreator.makeGroupedTableFromJSON(tableCreator.VERTICAL, tree, {
            cellTag: "th",
            groupTableClass: GROUP_TABLE_CLASS,
            groupRowClass: _classes__WEBPACK_IMPORTED_MODULE_11__.GROUP_ROW_CLASS,
            groupCellClass: this._getGroupHeaderClass(),
            groupCellCustomContent(cell, cellTextElement, index, data) {
                var container = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.createElement("div");
                container.className = getGroupHeaderContentClass;
                if (cellTemplate && cellTemplate.render) {
                    cellTemplates.push(cellTemplate.render.bind(cellTemplate, {
                        model: {
                            data: data.data,
                            id: data.value,
                            color: data.color,
                            text: cellTextElement.textContent
                        },
                        container: (0,_core_element__WEBPACK_IMPORTED_MODULE_5__.getPublicElement)((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(container)),
                        index: index
                    }))
                } else {
                    var contentWrapper = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__.default.createElement("div");
                    contentWrapper.appendChild(cellTextElement);
                    container.appendChild(contentWrapper)
                }
                cell.appendChild(container)
            },
            cellTemplate: cellTemplate
        });
        return {
            elements: (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(table).find(".".concat(_classes__WEBPACK_IMPORTED_MODULE_11__.GROUP_ROW_CLASS)),
            cellTemplates: cellTemplates
        }
    }
    _cleanView() {
        this._$dateTable.empty();
        this._$timePanel.empty();
        if (this._$groupTable) {
            this._$groupTable.empty()
        }
        if (this._$noDataContainer) {
            this._$noDataContainer.empty();
            this._$noDataContainer.remove();
            delete this._$noDataContainer
        }
    }
    _createWorkSpaceElements() {
        this._createWorkSpaceStaticElements()
    }
    _createWorkSpaceStaticElements() {
        this._$dateTableContainer.append(this._$dateTable);
        this._dateTableScrollable.$content().append(this._$dateTableScrollableContent);
        if (this._$groupTable) {
            this._$dateTableScrollableContent.prepend(this._$groupTable)
        }
        this._$dateTableScrollableContent.append(this._$timePanel, this._$dateTableContainer);
        this.$element().append(this._dateTableScrollable.$element())
    }
    _renderDateTable() {
        this._renderTableBody({
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_5__.getPublicElement)(this._$dateTable),
            rowClass: _classes__WEBPACK_IMPORTED_MODULE_11__.DATE_TABLE_ROW_CLASS,
            cellClass: this._getDateTableCellClass()
        })
    }
    _attachTablesEvents() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _attachEvents() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _cleanCellDataCache() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    isIndicationAvailable() {
        return false
    }
    _prepareCellTemplateOptions(text, date, rowIndex, $cell) {
        var groupsOpt = this.option("groups");
        var groups = {};
        var isGroupedView = !!groupsOpt.length;
        var path = isGroupedView && (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_12__.getPathToLeaf)(rowIndex, groupsOpt) || [];
        path.forEach((function(resourceValue, resourceIndex) {
            var resourceName = groupsOpt[resourceIndex].name;
            groups[resourceName] = resourceValue
        }));
        var groupIndex = isGroupedView ? this._getGroupIndexByResourceId(groups) : void 0;
        return {
            model: {
                text: text,
                date: date,
                groups: groups,
                groupIndex: groupIndex
            },
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_5__.getPublicElement)($cell),
            index: rowIndex
        }
    }
    _renderTableBody(options) {
        var cellTemplates = [];
        var cellTemplateOpt = options.cellTemplate;
        this._$rows = [];
        var i;
        var fillTableBody = function(rowIndex, rowSize) {
            if (rowSize) {
                var date;
                var cellDateNumber;
                var cellDayName;
                var $row = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<tr>");
                var $td = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<td>");
                (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setHeight)($td, this._getRowHeight(rowSize));
                if (options.getStartDate) {
                    date = options.getStartDate && options.getStartDate(rowIndex);
                    cellDateNumber = _localization_date__WEBPACK_IMPORTED_MODULE_9__.default.format(date, "d");
                    cellDayName = _localization_date__WEBPACK_IMPORTED_MODULE_9__.default.format(date, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_14__.formatWeekday)
                }
                if (cellTemplateOpt && cellTemplateOpt.render) {
                    var templateOptions = this._prepareCellTemplateOptions(cellDateNumber + " " + cellDayName, date, i, $td);
                    cellTemplates.push(cellTemplateOpt.render.bind(cellTemplateOpt, templateOptions))
                } else if (cellDateNumber && cellDayName) {
                    $td.addClass(AGENDA_DATE_CLASS).text(cellDateNumber + " " + cellDayName)
                }
                if (options.rowClass) {
                    $row.addClass(options.rowClass)
                }
                if (options.cellClass) {
                    $td.addClass(options.cellClass)
                }
                $row.append($td);
                this._$rows.push($row)
            }
        }.bind(this);
        for (i = 0; i < this._rows.length; i++) {
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_4__.each)(this._rows[i], fillTableBody);
            this._setLastRowClass()
        }
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(options.container).append((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<tbody>").append(this._$rows));
        this._applyCellTemplates(cellTemplates)
    }
    _setLastRowClass() {
        if (this._rows.length > 1 && this._$rows.length) {
            var $lastRow = this._$rows[this._$rows.length - 1];
            $lastRow.addClass(LAST_ROW_CLASS)
        }
    }
    _renderTimePanel() {
        this._renderTableBody({
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_5__.getPublicElement)(this._$timePanel),
            rowCount: this._getTimePanelRowCount(),
            cellCount: 1,
            rowClass: TIME_PANEL_ROW_CLASS,
            cellClass: TIME_PANEL_CELL_CLASS,
            cellTemplate: this.option("dateCellTemplate"),
            getStartDate: this._getTimePanelStartDate.bind(this)
        })
    }
    _getTimePanelStartDate(rowIndex) {
        var current = new Date(this.option("currentDate"));
        var cellDate = new Date(current.setDate(current.getDate() + rowIndex));
        return cellDate
    }
    _getRowHeight(rowSize) {
        var baseHeight = this.option("rowHeight");
        var innerOffset = (rowSize - 1) * INNER_CELL_MARGIN;
        return rowSize ? baseHeight * rowSize + innerOffset + OUTER_CELL_MARGIN : 0
    }
    _getGroupRowHeight(groupRows) {
        if (!groupRows) {
            return
        }
        var result = 0;
        for (var i = 0; i < groupRows.length; i++) {
            result += this._getRowHeight(groupRows[i])
        }
        return result
    }
    _calculateRows(appointments) {
        return this.renderingStrategy.calculateRows(appointments, this.option("agendaDuration"), this.option("currentDate"))
    }
    onDataSourceChanged(appointments) {
        super.onDataSourceChanged();
        this._renderView();
        var rows = this._calculateRows(appointments);
        this._recalculateAgenda(rows)
    }
    getAgendaVerticalStepHeight() {
        return this.option("rowHeight")
    }
    getEndViewDate() {
        var currentDate = new Date(this.option("currentDate"));
        var agendaDuration = this.option("agendaDuration");
        currentDate.setHours(this.option("endDayHour"));
        var result = currentDate.setDate(currentDate.getDate() + agendaDuration - 1) - 6e4;
        return new Date(result)
    }
    getEndViewDateByEndDayHour() {
        return this.getEndViewDate()
    }
    getCellDataByCoordinates() {
        return {
            startDate: null,
            endDate: null
        }
    }
    updateScrollPosition(date) {
        var newDate = this.timeZoneCalculator.createDate(date, {
            path: "toGrid"
        });
        var bounds = this.getVisibleBounds();
        var startDateHour = newDate.getHours();
        var startDateMinutes = newDate.getMinutes();
        if (this.needUpdateScrollPosition(startDateHour, startDateMinutes, bounds, newDate)) {
            this.scrollToTime(startDateHour, startDateMinutes, newDate)
        }
    }
    needUpdateScrollPosition(hours, minutes, bounds) {
        var isUpdateNeeded = false;
        if (hours < bounds.top.hours || hours > bounds.bottom.hours) {
            isUpdateNeeded = true
        }
        if (hours === bounds.top.hours && minutes < bounds.top.minutes) {
            isUpdateNeeded = true
        }
        if (hours === bounds.bottom.hours && minutes > bounds.top.minutes) {
            isUpdateNeeded = true
        }
        return isUpdateNeeded
    }
    renovatedRenderSupported() {
        return false
    }
    _setSelectedCellsByCellData() {}
    _getIntervalDuration() {
        return _core_utils_date__WEBPACK_IMPORTED_MODULE_16__.default.dateToMilliseconds("day") * this.option("intervalCount")
    }
    getDOMElementsMetaData() {
        return {
            dateTableCellsMeta: [
                [{}]
            ],
            allDayPanelCellsMeta: [{}]
        }
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_6__.default)("dxSchedulerAgenda", SchedulerAgenda);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerAgenda);


/***/ }),

/***/ 58148:
/*!**************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.timeline.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/common */ 37552);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/utils/position */ 9622);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _ui_scheduler_work_space_indicator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ui.scheduler.work_space.indicator */ 4507);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _table_creator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../table_creator */ 27336);
/* harmony import */ var _shaders_ui_scheduler_current_time_shader_horizontal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shaders/ui.scheduler.current_time_shader.horizontal */ 98105);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../classes */ 19156);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_timeline_week__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/timeline_week */ 55639);
/* harmony import */ var _utils_timeZone__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils.timeZone */ 53374);
/* harmony import */ var _renovation_ui_scheduler_workspaces_timeline_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/workspaces/timeline/header_panel/layout.j */ 10889);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../core/utils/window */ 88684);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */










var {
    tableCreator: tableCreator
} = _table_creator__WEBPACK_IMPORTED_MODULE_9__.default;







var TIMELINE_CLASS = "dx-scheduler-timeline";
var GROUP_TABLE_CLASS = "dx-scheduler-group-table";
var HORIZONTAL_GROUPED_WORKSPACE_CLASS = "dx-scheduler-work-space-horizontal-grouped";
var HEADER_PANEL_CELL_CLASS = "dx-scheduler-header-panel-cell";
var HEADER_PANEL_WEEK_CELL_CLASS = "dx-scheduler-header-panel-week-cell";
var HEADER_ROW_CLASS = "dx-scheduler-header-row";
var HORIZONTAL = "horizontal";
var DATE_TABLE_CELL_BORDER = 1;
var DATE_TABLE_HEADER_MARGIN = 10;
var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_8__.default.dateToMilliseconds;
class SchedulerTimeline extends _ui_scheduler_work_space_indicator__WEBPACK_IMPORTED_MODULE_7__.default {
    get verticalGroupTableClass() {
        return GROUP_TABLE_CLASS
    }
    get viewDirection() {
        return "horizontal"
    }
    get renovatedHeaderPanelComponent() {
        return _renovation_ui_scheduler_workspaces_timeline_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_14__.default
    }
    getGroupTableWidth() {
        return this._$sidebarTable ? (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getOuterWidth)(this._$sidebarTable) : 0
    }
    _getTotalRowCount(groupCount) {
        if (this._isHorizontalGroupedWorkSpace()) {
            return this._getRowCount()
        } else {
            groupCount = groupCount || 1;
            return this._getRowCount() * groupCount
        }
    }
    _getFormat() {
        return "shorttime"
    }
    _getWorkSpaceHeight() {
        if (this.option("crossScrollingEnabled") && (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_16__.hasWindow)()) {
            return (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_5__.getBoundingRect)(this._$dateTable.get(0)).height
        }
        return (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_5__.getBoundingRect)(this.$element().get(0)).height
    }
    _dateTableScrollableConfig() {
        var config = super._dateTableScrollableConfig();
        var timelineConfig = {
            direction: HORIZONTAL
        };
        return this.option("crossScrollingEnabled") ? config : (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)(config, timelineConfig)
    }
    _needCreateCrossScrolling() {
        return true
    }
    _headerScrollableConfig() {
        var config = super._headerScrollableConfig();
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)(config, {
            scrollByContent: true
        })
    }
    supportAllDayRow() {
        return false
    }
    _getGroupHeaderContainer() {
        if (this._isHorizontalGroupedWorkSpace()) {
            return this._$thead
        }
        return this._$sidebarTable
    }
    _insertAllDayRowsIntoDateTable() {
        return false
    }
    _needRenderWeekHeader() {
        return false
    }
    _incrementDate(date) {
        date.setDate(date.getDate() + 1)
    }
    getIndicationCellCount() {
        var timeDiff = this._getTimeDiff();
        return this._calculateDurationInCells(timeDiff)
    }
    _getTimeDiff() {
        var today = this._getToday();
        var date = this._getIndicationFirstViewDate();
        var startViewDate = this.getStartViewDate();
        var dayLightOffset = _utils_timeZone__WEBPACK_IMPORTED_MODULE_13__.default.getDaylightOffsetInMs(startViewDate, today);
        if (dayLightOffset) {
            today = new Date(today.getTime() + dayLightOffset)
        }
        return today.getTime() - date.getTime()
    }
    _calculateDurationInCells(timeDiff) {
        var today = this._getToday();
        var differenceInDays = Math.floor(timeDiff / toMs("day"));
        var duration = (timeDiff - differenceInDays * toMs("day") - this.option("startDayHour") * toMs("hour")) / this.getCellDuration();
        if (today.getHours() > this.option("endDayHour")) {
            duration = this._getCellCountInDay()
        }
        if (duration < 0) {
            duration = 0
        }
        return differenceInDays * this._getCellCountInDay() + duration
    }
    getIndicationWidth() {
        if (this.isGroupedByDate()) {
            var cellCount = this.getIndicationCellCount();
            var integerPart = Math.floor(cellCount);
            var fractionPart = cellCount - integerPart;
            return this.getCellWidth() * (integerPart * this._getGroupCount() + fractionPart)
        } else {
            return this.getIndicationCellCount() * this.getCellWidth()
        }
    }
    _isVerticalShader() {
        return false
    }
    _isCurrentTimeHeaderCell() {
        return false
    }
    _setTableSizes() {
        var minHeight = this._getWorkSpaceMinHeight();
        (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setHeight)(this._$sidebarTable, minHeight);
        (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setHeight)(this._$dateTable, minHeight);
        super._setTableSizes();
        this.virtualScrollingDispatcher.updateDimensions()
    }
    _getWorkSpaceMinHeight() {
        var minHeight = this._getWorkSpaceHeight();
        var workspaceContainerHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getOuterHeight)(this.$element(), true) - this.getHeaderPanelHeight() - 2 * DATE_TABLE_CELL_BORDER - DATE_TABLE_HEADER_MARGIN;
        if (minHeight < workspaceContainerHeight) {
            minHeight = workspaceContainerHeight
        }
        return minHeight
    }
    _getCellCoordinatesByIndex(index) {
        return {
            columnIndex: index % this._getCellCount(),
            rowIndex: 0
        }
    }
    _getCellByCoordinates(cellCoordinates, groupIndex) {
        var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex);
        return this._$dateTable.find("tr").eq(indexes.rowIndex).find("td").eq(indexes.columnIndex)
    }
    _getWorkSpaceWidth() {
        return (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getOuterWidth)(this._$dateTable, true)
    }
    _getIndicationFirstViewDate() {
        return _core_utils_date__WEBPACK_IMPORTED_MODULE_8__.default.trimTime(new Date(this.getStartViewDate()))
    }
    _getIntervalBetween(currentDate, allDay) {
        var startDayHour = this.option("startDayHour");
        var endDayHour = this.option("endDayHour");
        var firstViewDate = this.getStartViewDate();
        var firstViewDateTime = firstViewDate.getTime();
        var hiddenInterval = (24 - endDayHour + startDayHour) * toMs("hour");
        var timeZoneOffset = _core_utils_date__WEBPACK_IMPORTED_MODULE_8__.default.getTimezonesDifference(firstViewDate, currentDate);
        var apptStart = currentDate.getTime();
        var fullInterval = apptStart - firstViewDateTime - timeZoneOffset;
        var fullDays = Math.floor(fullInterval / toMs("day"));
        var tailDuration = fullInterval - fullDays * toMs("day");
        var tailDelta = 0;
        var cellCount = this._getCellCountInDay() * (fullDays - this._getWeekendsCount(fullDays));
        var gapBeforeAppt = apptStart - _core_utils_date__WEBPACK_IMPORTED_MODULE_8__.default.trimTime(new Date(currentDate)).getTime();
        var result = cellCount * this.option("hoursInterval") * toMs("hour");
        if (!allDay) {
            if (currentDate.getHours() < startDayHour) {
                tailDelta = tailDuration - hiddenInterval + gapBeforeAppt
            } else if (currentDate.getHours() >= startDayHour && currentDate.getHours() < endDayHour) {
                tailDelta = tailDuration
            } else if (currentDate.getHours() >= startDayHour && currentDate.getHours() >= endDayHour) {
                tailDelta = tailDuration - (gapBeforeAppt - endDayHour * toMs("hour"))
            } else if (!fullDays) {
                result = fullInterval
            }
            result += tailDelta
        }
        return result
    }
    _getWeekendsCount() {
        return 0
    }
    getAllDayContainer() {
        return null
    }
    getTimePanelWidth() {
        return 0
    }
    getIntervalDuration(allDay) {
        return this.getCellDuration()
    }
    getCellMinWidth() {
        return 0
    }
    getWorkSpaceLeftOffset() {
        return 0
    }
    scrollToTime(hours, minutes, date) {
        var coordinates = this._getScrollCoordinates(hours, minutes, date);
        var scrollable = this.getScrollable();
        var offset = this.option("rtlEnabled") ? (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_5__.getBoundingRect)(this.getScrollableContainer().get(0)).width : 0;
        if (this.option("templatesRenderAsynchronously")) {
            setTimeout((function() {
                scrollable.scrollBy({
                    left: coordinates.left - scrollable.scrollLeft() - offset,
                    top: 0
                })
            }))
        } else {
            scrollable.scrollBy({
                left: coordinates.left - scrollable.scrollLeft() - offset,
                top: 0
            })
        }
    }
    renderRAllDayPanel() {}
    renderRTimeTable() {}
    _renderGroupAllDayPanel() {}
    generateRenderOptions() {
        var options = super.generateRenderOptions(true);
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options, {
            isGenerateWeekDaysHeaderData: this._needRenderWeekHeader(),
            getDateForHeaderText: _renovation_ui_scheduler_view_model_to_test_views_utils_timeline_week__WEBPACK_IMPORTED_MODULE_12__.getDateForHeaderText
        })
    }
    _init() {
        super._init();
        this.$element().addClass(TIMELINE_CLASS);
        this._$sidebarTable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(GROUP_TABLE_CLASS)
    }
    _getDefaultGroupStrategy() {
        return "vertical"
    }
    _toggleGroupingDirectionClass() {
        this.$element().toggleClass(HORIZONTAL_GROUPED_WORKSPACE_CLASS, this._isHorizontalGroupedWorkSpace())
    }
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)(super._getDefaultOptions(), {
            groupOrientation: "vertical"
        })
    }
    _createWorkSpaceElements() {
        this._createWorkSpaceScrollableElements()
    }
    _toggleAllDayVisibility() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _changeAllDayVisibility() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _getDateHeaderTemplate() {
        return this.option("timeCellTemplate")
    }
    _renderView() {
        var groupCellTemplates;
        if (!this.isRenovatedRender()) {
            groupCellTemplates = this._renderGroupHeader()
        }
        this.renderWorkSpace();
        if (this.isRenovatedRender()) {
            this.virtualScrollingDispatcher.updateDimensions()
        }
        this._shader = new _shaders_ui_scheduler_current_time_shader_horizontal__WEBPACK_IMPORTED_MODULE_10__.default(this);
        this._$sidebarTable.appendTo(this._sidebarScrollable.$content());
        if (this.isRenovatedRender() && this._isVerticalGroupedWorkSpace()) {
            this.renderRGroupPanel()
        }
        this.updateHeaderEmptyCellWidth();
        this._applyCellTemplates(groupCellTemplates)
    }
    _setHorizontalGroupHeaderCellsHeight() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _setCurrentTimeCells() {
        var timePanelCells = this._getTimePanelCells();
        var currentTimeCellIndices = this._getCurrentTimePanelCellIndices();
        currentTimeCellIndices.forEach(timePanelCellIndex => {
            timePanelCells.eq(timePanelCellIndex).addClass(_classes__WEBPACK_IMPORTED_MODULE_11__.HEADER_CURRENT_TIME_CELL_CLASS)
        })
    }
    _cleanCurrentTimeCells() {
        this.$element().find(".".concat(_classes__WEBPACK_IMPORTED_MODULE_11__.HEADER_CURRENT_TIME_CELL_CLASS)).removeClass(_classes__WEBPACK_IMPORTED_MODULE_11__.HEADER_CURRENT_TIME_CELL_CLASS)
    }
    _getTimePanelCells() {
        return this.$element().find(".".concat(HEADER_PANEL_CELL_CLASS, ":not(.").concat(HEADER_PANEL_WEEK_CELL_CLASS, ")"))
    }
    _getCurrentTimePanelCellIndices() {
        var columnCountPerGroup = this._getCellCount();
        var today = this._getToday();
        var index = this.getCellIndexByDate(today);
        var {
            columnIndex: currentTimeColumnIndex
        } = this._getCellCoordinatesByIndex(index);
        if (void 0 === currentTimeColumnIndex) {
            return []
        }
        var horizontalGroupCount = this._isHorizontalGroupedWorkSpace() && !this.isGroupedByDate() ? this._getGroupCount() : 1;
        return [...new Array(horizontalGroupCount)].map((_, groupIndex) => columnCountPerGroup * groupIndex + currentTimeColumnIndex)
    }
    _renderTimePanel() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _renderAllDayPanel() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _createAllDayPanelElements() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)()
    }
    _renderDateHeader() {
        var $headerRow = super._renderDateHeader();
        if (this._needRenderWeekHeader()) {
            var firstViewDate = new Date(this.getStartViewDate());
            var currentDate = new Date(firstViewDate);
            var $cells = [];
            var groupCount = this._getGroupCount();
            var cellCountInDay = this._getCellCountInDay();
            var colSpan = this.isGroupedByDate() ? cellCountInDay * groupCount : cellCountInDay;
            var cellTemplate = this.option("dateCellTemplate");
            var horizontalGroupCount = this._isHorizontalGroupedWorkSpace() && !this.isGroupedByDate() ? groupCount : 1;
            var cellsInGroup = this.viewDataProvider.viewDataGenerator.daysInInterval * this.option("intervalCount");
            var cellsCount = cellsInGroup * horizontalGroupCount;
            for (var templateIndex = 0; templateIndex < cellsCount; templateIndex++) {
                var $th = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<th>");
                var text = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_15__.formatWeekdayAndDay)(currentDate);
                if (cellTemplate) {
                    var templateOptions = {
                        model: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
                            text: text,
                            date: new Date(currentDate)
                        }, this._getGroupsForDateHeaderTemplate(templateIndex, colSpan)),
                        container: $th,
                        index: templateIndex
                    };
                    cellTemplate.render(templateOptions)
                } else {
                    $th.text(text)
                }
                $th.addClass(HEADER_PANEL_CELL_CLASS).addClass(HEADER_PANEL_WEEK_CELL_CLASS).attr("colSpan", colSpan);
                $cells.push($th);
                if (templateIndex % cellsInGroup === cellsInGroup - 1) {
                    currentDate = new Date(firstViewDate)
                } else {
                    this._incrementDate(currentDate)
                }
            }
            var $row = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<tr>").addClass(HEADER_ROW_CLASS).append($cells);
            $headerRow.before($row)
        }
    }
    _renderIndicator(height, rtlOffset, $container, groupCount) {
        var $indicator;
        var width = this.getIndicationWidth();
        if ("vertical" === this.option("groupOrientation")) {
            $indicator = this._createIndicator($container);
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setHeight)($indicator, (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_5__.getBoundingRect)($container.get(0)).height);
            $indicator.css("left", rtlOffset ? rtlOffset - width : width)
        } else {
            for (var i = 0; i < groupCount; i++) {
                var offset = this.isGroupedByDate() ? i * this.getCellWidth() : this._getCellCount() * this.getCellWidth() * i;
                $indicator = this._createIndicator($container);
                (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setHeight)($indicator, (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_5__.getBoundingRect)($container.get(0)).height);
                $indicator.css("left", rtlOffset ? rtlOffset - width - offset : width + offset)
            }
        }
    }
    _makeGroupRows(groups, groupByDate) {
        var tableCreatorStrategy = "vertical" === this.option("groupOrientation") ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;
        return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {
            groupRowClass: _classes__WEBPACK_IMPORTED_MODULE_11__.GROUP_ROW_CLASS,
            groupHeaderRowClass: _classes__WEBPACK_IMPORTED_MODULE_11__.GROUP_ROW_CLASS,
            groupHeaderClass: this._getGroupHeaderClass.bind(this),
            groupHeaderContentClass: _classes__WEBPACK_IMPORTED_MODULE_11__.GROUP_HEADER_CONTENT_CLASS
        }, this._getCellCount() || 1, this.option("resourceCellTemplate"), this._getTotalRowCount(this._getGroupCount()), groupByDate)
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_6__.default)("dxSchedulerTimeline", SchedulerTimeline);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerTimeline);


/***/ }),

/***/ 37867:
/*!******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.timeline_day.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ 27895);
/* harmony import */ var _ui_scheduler_timeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui.scheduler.timeline */ 58148);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_day.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var TIMELINE_CLASS = "dx-scheduler-timeline-day";
class SchedulerTimelineDay extends _ui_scheduler_timeline__WEBPACK_IMPORTED_MODULE_2__.default {
    get type() {
        return _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_DAY
    }
    _getElementClass() {
        return TIMELINE_CLASS
    }
    _needRenderWeekHeader() {
        return this._isWorkSpaceWithCount()
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxSchedulerTimelineDay", SchedulerTimelineDay);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerTimelineDay);


/***/ }),

/***/ 36922:
/*!********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.timeline_month.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _ui_scheduler_timeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui.scheduler.timeline */ 58148);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _renovation_ui_scheduler_workspaces_base_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/workspaces/base/header_panel/layout.j */ 27865);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/month */ 35189);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../constants */ 27895);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_month.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */








var TIMELINE_CLASS = "dx-scheduler-timeline-month";
class SchedulerTimelineMonth extends _ui_scheduler_timeline__WEBPACK_IMPORTED_MODULE_2__.default {
    get type() {
        return _constants__WEBPACK_IMPORTED_MODULE_7__.VIEWS.TIMELINE_MONTH
    }
    get viewDirection() {
        return "horizontal"
    }
    get renovatedHeaderPanelComponent() {
        return _renovation_ui_scheduler_workspaces_base_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_4__.default
    }
    _renderView() {
        super._renderView();
        this._updateScrollable()
    }
    _getElementClass() {
        return TIMELINE_CLASS
    }
    _getDateHeaderTemplate() {
        return this.option("dateCellTemplate")
    }
    _calculateDurationInCells(timeDiff) {
        return timeDiff / this.getCellDuration()
    }
    isIndicatorVisible() {
        return true
    }
    _getFormat() {
        return _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_6__.formatWeekdayAndDay
    }
    _getIntervalBetween(currentDate) {
        var firstViewDate = this.getStartViewDate();
        var timeZoneOffset = _core_utils_date__WEBPACK_IMPORTED_MODULE_3__.default.getTimezonesDifference(firstViewDate, currentDate);
        return currentDate.getTime() - (firstViewDate.getTime() - 36e5 * this.option("startDayHour")) - timeZoneOffset
    }
    _getViewStartByOptions() {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_5__.getViewStartByOptions)(this.option("startDate"), this.option("currentDate"), this.option("intervalCount"), _core_utils_date__WEBPACK_IMPORTED_MODULE_3__.default.getFirstMonthDate(this.option("startDate")))
    }
    generateRenderOptions() {
        var options = super.generateRenderOptions(true);
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options, {
            getDateForHeaderText: (_, date) => date
        })
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_1__.default)("dxSchedulerTimelineMonth", SchedulerTimelineMonth);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerTimelineMonth);


/***/ }),

/***/ 80050:
/*!*******************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.timeline_week.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ SchedulerTimelineWeek; }
/* harmony export */ });
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _ui_scheduler_timeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ui.scheduler.timeline */ 58148);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/utils/position */ 9622);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ 27895);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_week.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var TIMELINE_CLASS = "dx-scheduler-timeline-week";
class SchedulerTimelineWeek extends _ui_scheduler_timeline__WEBPACK_IMPORTED_MODULE_1__.default {
    get type() {
        return _constants__WEBPACK_IMPORTED_MODULE_3__.VIEWS.TIMELINE_WEEK
    }
    _getElementClass() {
        return TIMELINE_CLASS
    }
    _getHeaderPanelCellWidth($headerRow) {
        return (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_2__.getBoundingRect)($headerRow.children().first().get(0)).width
    }
    _needRenderWeekHeader() {
        return true
    }
    _incrementDate(date) {
        date.setDate(date.getDate() + 1)
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxSchedulerTimelineWeek", SchedulerTimelineWeek);


/***/ }),

/***/ 87464:
/*!************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ 27895);
/* harmony import */ var _ui_scheduler_timeline_week__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui.scheduler.timeline_week */ 80050);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/work_week */ 95984);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var TIMELINE_CLASS = "dx-scheduler-timeline-work-week";
var LAST_DAY_WEEK_INDEX = 5;
class SchedulerTimelineWorkWeek extends _ui_scheduler_timeline_week__WEBPACK_IMPORTED_MODULE_2__.default {
    get type() {
        return _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_WORK_WEEK
    }
    constructor() {
        super(...arguments);
        this._getWeekendsCount = _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_3__.getWeekendsCount
    }
    _getElementClass() {
        return TIMELINE_CLASS
    }
    _incrementDate(date) {
        var day = date.getDay();
        if (day === LAST_DAY_WEEK_INDEX) {
            date.setDate(date.getDate() + 2)
        }
        super._incrementDate(date)
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxSchedulerTimelineWorkWeek", SchedulerTimelineWorkWeek);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerTimelineWorkWeek);


/***/ }),

/***/ 12807:
/*!***********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.virtual_scrolling.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VirtualScrollingDispatcher": function() { return /* binding */ VirtualScrollingDispatcher; },
/* harmony export */   "VirtualScrollingRenderer": function() { return /* binding */ VirtualScrollingRenderer; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/dom_adapter */ 81113);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../events/core/events_engine */ 99064);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/window */ 88684);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../events/utils/index */ 3151);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.virtual_scrolling.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */






var DEFAULT_CELL_HEIGHT = 50;
var MIN_CELL_WIDTH = 1;
var MIN_SCROLL_OFFSET = 10;
var VIRTUAL_APPOINTMENTS_RENDER_TIMEOUT = 15;
var DOCUMENT_SCROLL_EVENT_NAMESPACE = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_4__.addNamespace)("scroll", "dxSchedulerVirtualScrolling");
var scrollingOrientations = {
    vertical: "vertical",
    horizontal: "horizontal",
    both: "both",
    none: "none"
};
var DefaultScrollingOrientation = scrollingOrientations.both;
class VirtualScrollingDispatcher {
    constructor(options) {
        this.options = options;
        if (options) {
            this._rowHeight = this.getCellHeight();
            this._cellWidth = this.getCellWidth();
            this._createVirtualScrollingBase()
        }
    }
    get isRTL() {
        return this.options.isRTL()
    }
    get verticalVirtualScrolling() {
        return this._verticalVirtualScrolling
    }
    set verticalVirtualScrolling(value) {
        this._verticalVirtualScrolling = value
    }
    get horizontalVirtualScrolling() {
        return this._horizontalVirtualScrolling
    }
    set horizontalVirtualScrolling(value) {
        this._horizontalVirtualScrolling = value
    }
    get document() {
        return _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__.default.getDocument()
    }
    get height() {
        return this.options.getSchedulerHeight()
    }
    get width() {
        return this.options.getSchedulerWidth()
    }
    get rowHeight() {
        return this._rowHeight
    }
    set rowHeight(value) {
        this._rowHeight = value
    }
    get outlineCount() {
        return this.options.getScrolling().outlineCount
    }
    get cellWidth() {
        return this._cellWidth
    }
    set cellWidth(value) {
        this._cellWidth = value
    }
    get viewportWidth() {
        var width = this.width && this.options.getViewWidth();
        return width > 0 ? width : this.options.getWindowWidth()
    }
    get viewportHeight() {
        var height = this.height && this.options.getViewHeight();
        return height > 0 ? height : this.options.getWindowHeight()
    }
    get cellCountInsideTopVirtualRow() {
        var _this$verticalScrolli;
        return (null === (_this$verticalScrolli = this.verticalScrollingState) || void 0 === _this$verticalScrolli ? void 0 : _this$verticalScrolli.virtualItemCountBefore) || 0
    }
    get cellCountInsideLeftVirtualCell() {
        var _this$horizontalScrol;
        return (null === (_this$horizontalScrol = this.horizontalScrollingState) || void 0 === _this$horizontalScrol ? void 0 : _this$horizontalScrol.virtualItemCountBefore) || 0
    }
    get cellCountInsideRightVirtualCell() {
        var _this$horizontalScrol2;
        return (null === (_this$horizontalScrol2 = this.horizontalScrollingState) || void 0 === _this$horizontalScrol2 ? void 0 : _this$horizontalScrol2.virtualItemCountAfter) || 0
    }
    get topVirtualRowsCount() {
        return this.cellCountInsideTopVirtualRow > 0 ? 1 : 0
    }
    get leftVirtualCellsCount() {
        var virtualItemsCount = !this.isRTL ? this.cellCountInsideLeftVirtualCell : this.cellCountInsideRightVirtualCell;
        return virtualItemsCount > 0 ? 1 : 0
    }
    get virtualRowOffset() {
        var _this$verticalScrolli2;
        return (null === (_this$verticalScrolli2 = this.verticalScrollingState) || void 0 === _this$verticalScrolli2 ? void 0 : _this$verticalScrolli2.virtualItemSizeBefore) || 0
    }
    get virtualCellOffset() {
        var _this$horizontalScrol3;
        return (null === (_this$horizontalScrol3 = this.horizontalScrollingState) || void 0 === _this$horizontalScrol3 ? void 0 : _this$horizontalScrol3.virtualItemSizeBefore) || 0
    }
    get scrollingState() {
        var _this$verticalVirtual, _this$horizontalVirtu;
        return {
            vertical: null === (_this$verticalVirtual = this.verticalVirtualScrolling) || void 0 === _this$verticalVirtual ? void 0 : _this$verticalVirtual.state,
            horizontal: null === (_this$horizontalVirtu = this.horizontalVirtualScrolling) || void 0 === _this$horizontalVirtu ? void 0 : _this$horizontalVirtu.state
        }
    }
    get verticalScrollingState() {
        return this.scrollingState.vertical
    }
    get horizontalScrollingState() {
        return this.scrollingState.horizontal
    }
    get scrollingOrientation() {
        var scrolling = this.options.getScrolling();
        if ("standard" === scrolling.mode) {
            return scrollingOrientations.none
        }
        return scrolling.orientation || DefaultScrollingOrientation
    }
    get verticalScrollingAllowed() {
        return this.scrollingOrientation === scrollingOrientations.vertical || this.scrollingOrientation === scrollingOrientations.both
    }
    get horizontalScrollingAllowed() {
        return this.scrollingOrientation === scrollingOrientations.horizontal || this.scrollingOrientation === scrollingOrientations.both
    }
    setViewOptions(options) {
        this.options = options;
        if (this.verticalVirtualScrolling) {
            this.verticalVirtualScrolling.options = options;
            this.verticalVirtualScrolling.itemSize = this.rowHeight;
            this.verticalVirtualScrolling.viewportSize = this.viewportHeight
        }
        if (this.horizontalVirtualScrolling) {
            this.horizontalVirtualScrolling.options = options;
            this.verticalVirtualScrolling.itemSize = this.cellWidth;
            this.verticalVirtualScrolling.viewportSize = this.viewportWidth
        }
    }
    getRenderState() {
        var _this$verticalVirtual2, _this$horizontalVirtu2;
        var verticalRenderState = (null === (_this$verticalVirtual2 = this.verticalVirtualScrolling) || void 0 === _this$verticalVirtual2 ? void 0 : _this$verticalVirtual2.getRenderState()) || {};
        var horizontalRenderState = (null === (_this$horizontalVirtu2 = this.horizontalVirtualScrolling) || void 0 === _this$horizontalVirtu2 ? void 0 : _this$horizontalVirtu2.getRenderState()) || {};
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, verticalRenderState, horizontalRenderState)
    }
    getCellHeight() {
        var cellHeight = this.options.getCellHeight();
        var result = cellHeight > 0 ? cellHeight : DEFAULT_CELL_HEIGHT;
        return Math.floor(result)
    }
    getCellWidth() {
        var cellWidth = this.options.getCellWidth();
        var minCellWidth = this.options.getCellMinWidth();
        if (!cellWidth || cellWidth < minCellWidth) {
            cellWidth = minCellWidth
        }
        var result = cellWidth > 0 ? cellWidth : MIN_CELL_WIDTH;
        return Math.floor(result)
    }
    calculateCoordinatesByDataAndPosition(cellData, position, date, isCalculateTime, isVerticalDirectionView) {
        var {
            rowIndex: rowIndex,
            columnIndex: columnIndex
        } = position;
        var {
            startDate: startDate,
            endDate: endDate,
            allDay: allDay
        } = cellData;
        var timeToScroll = date.getTime();
        var cellStartTime = startDate.getTime();
        var cellEndTime = endDate.getTime();
        var scrollInCell = allDay || !isCalculateTime ? 0 : (timeToScroll - cellStartTime) / (cellEndTime - cellStartTime);
        var cellWidth = this.getCellWidth();
        var rowHeight = this.getCellHeight();
        var top = isVerticalDirectionView ? (rowIndex + scrollInCell) * rowHeight : rowIndex * rowHeight;
        var left = isVerticalDirectionView ? columnIndex * cellWidth : (columnIndex + scrollInCell) * cellWidth;
        if (this.isRTL) {
            left = this.options.getScrollableOuterWidth() - left
        }
        return {
            top: top,
            left: left
        }
    }
    dispose() {
        if (this._onScrollHandler) {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__.default.off(this.document, DOCUMENT_SCROLL_EVENT_NAMESPACE, this._onScrollHandler)
        }
    }
    createVirtualScrolling() {
        var isVerticalVirtualScrollingCreated = !!this.verticalVirtualScrolling;
        var isHorizontalVirtualScrollingCreated = !!this.horizontalVirtualScrolling;
        if (this.verticalScrollingAllowed !== isVerticalVirtualScrollingCreated || this.horizontalScrollingAllowed !== isHorizontalVirtualScrollingCreated) {
            this._rowHeight = this.getCellHeight();
            this._cellWidth = this.getCellWidth();
            this._createVirtualScrollingBase()
        }
    }
    _createVirtualScrollingBase() {
        if (this.verticalScrollingAllowed) {
            this.verticalVirtualScrolling = new VerticalVirtualScrolling((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this.options, {
                viewportHeight: this.viewportHeight,
                rowHeight: this.rowHeight,
                outlineCount: this.outlineCount
            }))
        }
        if (this.horizontalScrollingAllowed) {
            this.horizontalVirtualScrolling = new HorizontalVirtualScrolling((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, this.options, {
                viewportWidth: this.viewportWidth,
                cellWidth: this.cellWidth,
                outlineCount: this.outlineCount
            }))
        }
    }
    isAttachWindowScrollEvent() {
        return (this.horizontalScrollingAllowed || this.verticalScrollingAllowed) && !this.height
    }
    attachScrollableEvents() {
        if (this.isAttachWindowScrollEvent()) {
            this._attachWindowScroll()
        }
    }
    _attachWindowScroll() {
        var window = (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_3__.getWindow)();
        this._onScrollHandler = this.options.createAction(() => {
            var {
                scrollX: scrollX,
                scrollY: scrollY
            } = window;
            if (scrollX >= MIN_SCROLL_OFFSET || scrollY >= MIN_SCROLL_OFFSET) {
                this.handleOnScrollEvent({
                    left: scrollX,
                    top: scrollY
                })
            }
        });
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__.default.on(this.document, DOCUMENT_SCROLL_EVENT_NAMESPACE, this._onScrollHandler)
    }
    handleOnScrollEvent(scrollPosition) {
        if (scrollPosition) {
            var _this$verticalVirtual3, _this$horizontalVirtu3;
            var {
                left: left,
                top: top
            } = scrollPosition;
            var verticalStateChanged = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isDefined)(top) && (null === (_this$verticalVirtual3 = this.verticalVirtualScrolling) || void 0 === _this$verticalVirtual3 ? void 0 : _this$verticalVirtual3.updateState(top));
            var horizontalStateChanged = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isDefined)(left) && (null === (_this$horizontalVirtu3 = this.horizontalVirtualScrolling) || void 0 === _this$horizontalVirtu3 ? void 0 : _this$horizontalVirtu3.updateState(left));
            if (verticalStateChanged || horizontalStateChanged) {
                var _this$options$updateR, _this$options;
                null === (_this$options$updateR = (_this$options = this.options).updateRender) || void 0 === _this$options$updateR ? void 0 : _this$options$updateR.call(_this$options)
            }
        }
    }
    updateDimensions(isForce) {
        var cellHeight = this.getCellHeight();
        var needUpdateVertical = this.verticalScrollingAllowed && cellHeight !== this.rowHeight;
        if ((needUpdateVertical || isForce) && this.verticalVirtualScrolling) {
            this.rowHeight = cellHeight;
            this.verticalVirtualScrolling.viewportSize = this.viewportHeight;
            this.verticalVirtualScrolling.reinitState(cellHeight, isForce)
        }
        var cellWidth = this.getCellWidth();
        var needUpdateHorizontal = this.horizontalScrollingAllowed && cellWidth !== this.cellWidth;
        if ((needUpdateHorizontal || isForce) && this.horizontalVirtualScrolling) {
            this.cellWidth = cellWidth;
            this.horizontalVirtualScrolling.viewportSize = this.viewportWidth;
            this.horizontalVirtualScrolling.reinitState(cellWidth, isForce)
        }
        if (needUpdateVertical || needUpdateHorizontal) {
            var _this$options$updateG, _this$options2;
            null === (_this$options$updateG = (_this$options2 = this.options).updateGrid) || void 0 === _this$options$updateG ? void 0 : _this$options$updateG.call(_this$options2)
        }
    }
}
class VirtualScrollingBase {
    constructor(options) {
        this.options = options;
        this._state = this.defaultState;
        this.viewportSize = options.viewportSize;
        this._itemSize = options.itemSize;
        this._position = -1;
        this._itemSizeChanged = false;
        this.updateState(0)
    }
    get itemSize() {
        return this._itemSize
    }
    set itemSize(value) {
        this._itemSizeChanged = this._itemSize !== value;
        this._itemSize = value
    }
    get state() {
        return this._state
    }
    set state(value) {
        this._state = value
    }
    get startIndex() {
        return this.state.startIndex
    }
    get pageSize() {
        return Math.ceil(this.viewportSize / this.itemSize)
    }
    get outlineCount() {
        return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isDefined)(this.options.outlineCount) ? this.options.outlineCount : Math.floor(this.pageSize / 2)
    }
    get groupCount() {
        return this.options.getGroupCount()
    }
    get isVerticalGrouping() {
        return this.options.isVerticalGrouping()
    }
    get defaultState() {
        return {
            prevPosition: 0,
            startIndex: -1,
            itemCount: 0,
            virtualItemCountBefore: 0,
            virtualItemCountAfter: 0,
            outlineCountBefore: 0,
            outlineCountAfter: 0,
            virtualItemSizeBefore: 0,
            virtualItemSizeAfter: 0,
            outlineSizeBefore: 0,
            outlineSizeAfter: 0
        }
    }
    get maxScrollPosition() {
        return this.getTotalItemCount() * this.itemSize - this.viewportSize
    }
    get position() {
        return this._position
    }
    set position(value) {
        this._position = value
    }
    needUpdateState(position) {
        var {
            prevPosition: prevPosition,
            startIndex: startIndex
        } = this.state;
        var isFirstInitialization = startIndex < 0;
        if (isFirstInitialization) {
            return true
        }
        var isStartIndexChanged = false;
        if (this._validateAndSavePosition(position)) {
            if (0 === position || position === this.maxScrollPosition) {
                return true
            }
            var currentPosition = prevPosition;
            var currentItemsCount = Math.floor(currentPosition / this.itemSize);
            var itemsCount = Math.floor(position / this.itemSize);
            isStartIndexChanged = Math.abs(currentItemsCount - itemsCount) >= this.outlineCount
        }
        return isStartIndexChanged
    }
    _validateAndSavePosition(position) {
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isDefined)(position)) {
            return false
        }
        var result = this.position !== position;
        this.position = position;
        return result
    }
    _correctPosition(position) {
        return position >= 0 ? Math.min(position, this.maxScrollPosition) : -1
    }
    updateState(position, isForce) {
        position = this._correctPosition(position);
        if (!this.needUpdateState(position) && !isForce) {
            return false
        }
        var itemsInfoBefore = this._calcItemInfoBefore(position);
        var itemsDeltaBefore = this._calcItemDeltaBefore(itemsInfoBefore);
        var {
            outlineCountAfter: outlineCountAfter,
            virtualItemCountAfter: virtualItemCountAfter,
            itemCountWithAfter: itemCountWithAfter
        } = this._calcItemInfoAfter(itemsDeltaBefore);
        var {
            virtualItemCountBefore: virtualItemCountBefore,
            outlineCountBefore: outlineCountBefore
        } = itemsInfoBefore;
        var itemCount = outlineCountBefore + itemCountWithAfter + outlineCountAfter;
        var itemCountBefore = Math.floor(position / this.itemSize);
        this.state.prevPosition = itemCountBefore * this.itemSize;
        this.state.startIndex = itemCountBefore - outlineCountBefore;
        this.state.virtualItemCountBefore = virtualItemCountBefore;
        this.state.outlineCountBefore = outlineCountBefore;
        this.state.itemCount = itemCount;
        this.state.outlineCountAfter = outlineCountAfter;
        this.state.virtualItemCountAfter = virtualItemCountAfter;
        this._updateStateCore();
        return true
    }
    reinitState(itemSize, isForceUpdate) {
        var {
            position: position
        } = this;
        this.itemSize = itemSize;
        this.updateState(0, isForceUpdate);
        if (position > 0) {
            this.updateState(position, isForceUpdate)
        }
    }
    _calcItemInfoBefore(position) {
        var virtualItemCountBefore = Math.floor(position / this.itemSize);
        var outlineCountBefore = Math.min(virtualItemCountBefore, this.outlineCount);
        virtualItemCountBefore -= outlineCountBefore;
        return {
            virtualItemCountBefore: virtualItemCountBefore,
            outlineCountBefore: outlineCountBefore
        }
    }
    _calcItemDeltaBefore(itemInfoBefore) {
        var {
            virtualItemCountBefore: virtualItemCountBefore,
            outlineCountBefore: outlineCountBefore
        } = itemInfoBefore;
        var totalItemCount = this.getTotalItemCount();
        return totalItemCount - virtualItemCountBefore - outlineCountBefore
    }
    getTotalItemCount() {
        throw "getTotalItemCount method should be implemented"
    }
    getRenderState() {
        throw "getRenderState method should be implemented"
    }
    _calcItemInfoAfter(itemsDeltaBefore) {
        var itemCountWithAfter = itemsDeltaBefore >= this.pageSize ? this.pageSize : itemsDeltaBefore;
        var virtualItemCountAfter = itemsDeltaBefore - itemCountWithAfter;
        var outlineCountAfter = virtualItemCountAfter > 0 ? Math.min(virtualItemCountAfter, this.outlineCount) : 0;
        if (virtualItemCountAfter > 0) {
            virtualItemCountAfter -= outlineCountAfter
        }
        return {
            virtualItemCountAfter: virtualItemCountAfter,
            outlineCountAfter: outlineCountAfter,
            itemCountWithAfter: itemCountWithAfter
        }
    }
    _updateStateCore() {
        var {
            state: state
        } = this;
        var virtualItemCountBefore = state.virtualItemCountBefore;
        var virtualItemCountAfter = state.virtualItemCountAfter;
        var outlineCountBefore = state.outlineCountBefore;
        var outlineCountAfter = state.outlineCountAfter;
        var prevVirtualItemSizeBefore = state.virtualItemSizeBefore;
        var prevVirtualItemSizeAfter = state.virtualItemSizeAfter;
        var prevOutlineSizeBefore = state.outlineSizeBefore;
        var prevOutlineSizeAfter = state.outlineSizeAfter;
        var virtualItemSizeBefore = this.itemSize * virtualItemCountBefore;
        var virtualItemSizeAfter = this.itemSize * virtualItemCountAfter;
        var outlineSizeBefore = this.itemSize * outlineCountBefore;
        var outlineSizeAfter = this.itemSize * outlineCountAfter;
        var prevVirtualSizeBefore = prevVirtualItemSizeBefore + prevOutlineSizeBefore;
        var virtualSizeBefore = virtualItemSizeBefore + outlineSizeBefore;
        var prevVirtualSizeAfter = prevVirtualItemSizeAfter + prevOutlineSizeAfter;
        var virtualSizeAfter = virtualItemSizeAfter + outlineSizeAfter;
        var isAppend = prevVirtualSizeBefore < virtualSizeBefore;
        var isPrepend = prevVirtualSizeAfter < virtualSizeAfter;
        var needAddItems = this._itemSizeChanged || isAppend || isPrepend;
        if (needAddItems) {
            this._updateStateVirtualItems(virtualItemSizeBefore, virtualItemSizeAfter)
        }
    }
    _updateStateVirtualItems(virtualItemSizeBefore, virtualItemSizeAfter) {
        var {
            state: state
        } = this;
        state.virtualItemSizeBefore = virtualItemSizeBefore;
        state.virtualItemSizeAfter = virtualItemSizeAfter
    }
}
class VerticalVirtualScrolling extends VirtualScrollingBase {
    constructor(options) {
        super((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options, {
            itemSize: options.rowHeight,
            viewportSize: options.viewportHeight
        }))
    }
    get prevTopPosition() {
        return this.state.prevPosition
    }
    get rowCount() {
        return this.state.itemCount
    }
    get topVirtualRowCount() {
        return this.state.virtualItemCountBefore
    }
    get bottomVirtualRowCount() {
        return this.state.virtualItemCountAfter
    }
    getTotalItemCount() {
        return this.options.getTotalRowCount(this.groupCount, this.isVerticalGrouping)
    }
    getRenderState() {
        return {
            topVirtualRowHeight: this.state.virtualItemSizeBefore,
            bottomVirtualRowHeight: this.state.virtualItemSizeAfter,
            startRowIndex: this.state.startIndex,
            rowCount: this.state.itemCount,
            startIndex: this.state.startIndex
        }
    }
}
class HorizontalVirtualScrolling extends VirtualScrollingBase {
    constructor(options) {
        super((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options, {
            itemSize: options.cellWidth,
            viewportSize: options.viewportWidth
        }))
    }
    get isRTL() {
        return this.options.isRTL()
    }
    getTotalItemCount() {
        return this.options.getTotalCellCount(this.groupCount, this.isVerticalGrouping)
    }
    getRenderState() {
        return {
            leftVirtualCellWidth: this.state.virtualItemSizeBefore,
            rightVirtualCellWidth: this.state.virtualItemSizeAfter,
            startCellIndex: this.state.startIndex,
            cellCount: this.state.itemCount,
            cellWidth: this.itemSize
        }
    }
    _updateStateVirtualItems(virtualItemSizeBefore, virtualItemSizeAfter) {
        if (!this.isRTL) {
            super._updateStateVirtualItems(virtualItemSizeBefore, virtualItemSizeAfter)
        } else {
            var {
                state: state
            } = this;
            state.virtualItemSizeAfter = virtualItemSizeBefore;
            state.virtualItemSizeBefore = virtualItemSizeAfter;
            state.startIndex = this.getTotalItemCount() - this.startIndex - this.state.itemCount
        }
    }
}
class VirtualScrollingRenderer {
    constructor(workspace) {
        this._workspace = workspace;
        this._renderAppointmentTimeoutID = null
    }
    getRenderTimeout() {
        return this._workspace.option("isRenovatedAppointments") ? -1 : VIRTUAL_APPOINTMENTS_RENDER_TIMEOUT
    }
    get workspace() {
        return this._workspace
    }
    updateRender() {
        this._renderGrid();
        this._renderAppointments()
    }
    _renderGrid() {
        this.workspace.renderWorkSpace(false)
    }
    _renderAppointments() {
        var renderTimeout = this.getRenderTimeout();
        if (renderTimeout >= 0) {
            clearTimeout(this._renderAppointmentTimeoutID);
            this._renderAppointmentTimeoutID = setTimeout(() => this.workspace.updateAppointments(), renderTimeout)
        } else {
            this.workspace.updateAppointments()
        }
    }
}


/***/ }),

/***/ 37510:
/*!********************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space.grouped.strategy.horizontal.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/position */ 9622);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes */ 19156);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space.grouped.strategy.horizontal.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class HorizontalGroupedStrategy {
    constructor(workSpace) {
        this._workSpace = workSpace
    }
    prepareCellIndexes(cellCoordinates, groupIndex, inAllDay) {
        var groupByDay = this._workSpace.isGroupedByDate();
        if (!groupByDay) {
            return {
                rowIndex: cellCoordinates.rowIndex,
                columnIndex: cellCoordinates.columnIndex + groupIndex * this._workSpace._getCellCount()
            }
        } else {
            return {
                rowIndex: cellCoordinates.rowIndex,
                columnIndex: cellCoordinates.columnIndex * this._workSpace._getGroupCount() + groupIndex
            }
        }
    }
    getGroupIndex(rowIndex, columnIndex) {
        var groupByDay = this._workSpace.isGroupedByDate();
        var groupCount = this._workSpace._getGroupCount();
        if (groupByDay) {
            return columnIndex % groupCount
        } else {
            return Math.floor(columnIndex / this._workSpace._getCellCount())
        }
    }
    calculateHeaderCellRepeatCount() {
        return this._workSpace._getGroupCount() || 1
    }
    insertAllDayRowsIntoDateTable() {
        return false
    }
    getTotalCellCount(groupCount) {
        groupCount = groupCount || 1;
        return this._workSpace._getCellCount() * groupCount
    }
    getTotalRowCount() {
        return this._workSpace._getRowCount()
    }
    calculateTimeCellRepeatCount() {
        return 1
    }
    getWorkSpaceMinWidth() {
        return (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._workSpace.$element().get(0)).width - this._workSpace.getTimePanelWidth()
    }
    getAllDayOffset() {
        return this._workSpace.getAllDayHeight()
    }
    getGroupCountClass(groups) {
        return
    }
    getLeftOffset() {
        return this._workSpace.getTimePanelWidth()
    }
    _createGroupBoundOffset(startCell, endCell, cellWidth) {
        var extraOffset = cellWidth / 2;
        var startOffset = startCell ? startCell.offset().left - extraOffset : 0;
        var endOffset = endCell ? endCell.offset().left + cellWidth + extraOffset : 0;
        return {
            left: startOffset,
            right: endOffset,
            top: 0,
            bottom: 0
        }
    }
    _getGroupedByDateBoundOffset($cells, cellWidth) {
        var lastCellIndex = $cells.length - 1;
        var startCell = $cells.eq(0);
        var endCell = $cells.eq(lastCellIndex);
        return this._createGroupBoundOffset(startCell, endCell, cellWidth)
    }
    getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates, groupedDataMap) {
        if (this._workSpace.isGroupedByDate()) {
            return this._getGroupedByDateBoundOffset($cells, cellWidth)
        }
        var startCell;
        var endCell;
        var cellIndex = this._workSpace.getCellIndexByCoordinates(coordinates);
        var groupIndex = coordinates.groupIndex || Math.floor(cellIndex / cellCount);
        var currentCellGroup = groupedDataMap.dateTableGroupedMap[groupIndex];
        if (currentCellGroup) {
            var groupRowLength = currentCellGroup[0].length;
            var groupStartPosition = currentCellGroup[0][0].position;
            var groupEndPosition = currentCellGroup[0][groupRowLength - 1].position;
            startCell = $cells.eq(groupStartPosition.columnIndex);
            endCell = $cells.eq(groupEndPosition.columnIndex)
        }
        return this._createGroupBoundOffset(startCell, endCell, cellWidth)
    }
    shiftIndicator($indicator, height, rtlOffset, groupIndex) {
        var offset = this._getIndicatorOffset(groupIndex);
        var horizontalOffset = rtlOffset ? rtlOffset - offset : offset;
        $indicator.css("left", horizontalOffset);
        $indicator.css("top", height)
    }
    _getIndicatorOffset(groupIndex) {
        var groupByDay = this._workSpace.isGroupedByDate();
        return groupByDay ? this._calculateGroupByDateOffset(groupIndex) : this._calculateOffset(groupIndex)
    }
    _calculateOffset(groupIndex) {
        var indicatorStartPosition = this._workSpace.getIndicatorOffset(groupIndex);
        var offset = this._workSpace._getCellCount() * this._workSpace.getRoundedCellWidth(groupIndex - 1, 0) * groupIndex;
        return indicatorStartPosition + offset
    }
    _calculateGroupByDateOffset(groupIndex) {
        return this._workSpace.getIndicatorOffset(0) * this._workSpace._getGroupCount() + this._workSpace.getRoundedCellWidth(groupIndex - 1, 0) * groupIndex
    }
    getShaderOffset(i, width) {
        var offset = this._workSpace._getCellCount() * this._workSpace.getRoundedCellWidth(i - 1) * i;
        return this._workSpace.option("rtlEnabled") ? (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._workSpace._dateTableScrollable.$content().get(0)).width - offset - this._workSpace.getTimePanelWidth() - width : offset
    }
    getShaderTopOffset(i) {
        return -this.getShaderMaxHeight() * (i > 0 ? 1 : 0)
    }
    getShaderHeight() {
        var height = this._workSpace.getIndicationHeight();
        return height
    }
    getShaderMaxHeight() {
        return (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._workSpace._dateTableScrollable.$content().get(0)).height
    }
    getShaderWidth(i) {
        return this._workSpace.getIndicationWidth(i)
    }
    getScrollableScrollTop(allDay) {
        return !allDay ? this._workSpace.getScrollable().scrollTop() : 0
    }
    addAdditionalGroupCellClasses(cellClass, index, i, j) {
        var applyUnconditionally = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : false;
        cellClass = this._addLastGroupCellClass(cellClass, index, applyUnconditionally);
        return this._addFirstGroupCellClass(cellClass, index, applyUnconditionally)
    }
    _addLastGroupCellClass(cellClass, index, applyUnconditionally) {
        if (applyUnconditionally) {
            return "".concat(cellClass, " ").concat(_classes__WEBPACK_IMPORTED_MODULE_1__.LAST_GROUP_CELL_CLASS)
        }
        var groupByDate = this._workSpace.isGroupedByDate();
        if (groupByDate) {
            if (index % this._workSpace._getGroupCount() === 0) {
                return "".concat(cellClass, " ").concat(_classes__WEBPACK_IMPORTED_MODULE_1__.LAST_GROUP_CELL_CLASS)
            }
        } else if (index % this._workSpace._getCellCount() === 0) {
            return "".concat(cellClass, " ").concat(_classes__WEBPACK_IMPORTED_MODULE_1__.LAST_GROUP_CELL_CLASS)
        }
        return cellClass
    }
    _addFirstGroupCellClass(cellClass, index, applyUnconditionally) {
        if (applyUnconditionally) {
            return "".concat(cellClass, " ").concat(_classes__WEBPACK_IMPORTED_MODULE_1__.FIRST_GROUP_CELL_CLASS)
        }
        var groupByDate = this._workSpace.isGroupedByDate();
        if (groupByDate) {
            if ((index - 1) % this._workSpace._getGroupCount() === 0) {
                return "".concat(cellClass, " ").concat(_classes__WEBPACK_IMPORTED_MODULE_1__.FIRST_GROUP_CELL_CLASS)
            }
        } else if ((index - 1) % this._workSpace._getCellCount() === 0) {
            return "".concat(cellClass, " ").concat(_classes__WEBPACK_IMPORTED_MODULE_1__.FIRST_GROUP_CELL_CLASS)
        }
        return cellClass
    }
}
/* harmony default export */ __webpack_exports__["default"] = (HorizontalGroupedStrategy);


/***/ }),

/***/ 85116:
/*!******************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space.grouped.strategy.vertical.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/position */ 9622);
/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cache */ 72283);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../classes */ 19156);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space.grouped.strategy.vertical.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var DATE_HEADER_OFFSET = 10;
var WORK_SPACE_BORDER = 1;
class VerticalGroupedStrategy {
    constructor(workSpace) {
        this._workSpace = workSpace;
        this.cache = new _cache__WEBPACK_IMPORTED_MODULE_1__.Cache
    }
    prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow) {
        var rowIndex = cellCoordinates.rowIndex + groupIndex * this._workSpace._getRowCount();
        if (this._workSpace.supportAllDayRow() && this._workSpace.option("showAllDayPanel")) {
            rowIndex += groupIndex;
            if (!inAllDayRow) {
                rowIndex += 1
            }
        }
        return {
            rowIndex: rowIndex,
            columnIndex: cellCoordinates.columnIndex
        }
    }
    getGroupIndex(rowIndex) {
        return Math.floor(rowIndex / this._workSpace._getRowCount())
    }
    calculateHeaderCellRepeatCount() {
        return 1
    }
    insertAllDayRowsIntoDateTable() {
        return this._workSpace.option("showAllDayPanel")
    }
    getTotalCellCount() {
        return this._workSpace._getCellCount()
    }
    getTotalRowCount() {
        return this._workSpace._getRowCount() * this._workSpace._getGroupCount()
    }
    calculateTimeCellRepeatCount() {
        return this._workSpace._getGroupCount() || 1
    }
    getWorkSpaceMinWidth() {
        var minWidth = this._workSpace._getWorkSpaceWidth();
        var workspaceContainerWidth = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._workSpace.$element().get(0)).width - this._workSpace.getTimePanelWidth() - this._workSpace.getGroupTableWidth() - 2 * WORK_SPACE_BORDER;
        if (minWidth < workspaceContainerWidth) {
            minWidth = workspaceContainerWidth
        }
        return minWidth
    }
    getAllDayOffset() {
        return 0
    }
    getGroupCountClass(groups) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__.getVerticalGroupCountClass)(groups)
    }
    getLeftOffset() {
        return this._workSpace.getTimePanelWidth() + this._workSpace.getGroupTableWidth()
    }
    getGroupBoundsOffset(groupIndex, _ref) {
        var [$firstCell, $lastCell] = _ref;
        return this.cache.get("groupBoundsOffset".concat(groupIndex), () => {
            var startDayHour = this._workSpace.option("startDayHour");
            var endDayHour = this._workSpace.option("endDayHour");
            var hoursInterval = this._workSpace.option("hoursInterval");
            var dayHeight = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__.calculateDayDuration)(startDayHour, endDayHour) / hoursInterval * this._workSpace.getCellHeight();
            var scrollTop = this.getScrollableScrollTop();
            var topOffset = groupIndex * dayHeight + (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._workSpace._$thead.get(0)).height + this._workSpace.option("getHeaderHeight")() + DATE_HEADER_OFFSET - scrollTop;
            if (this._workSpace.option("showAllDayPanel") && this._workSpace.supportAllDayRow()) {
                topOffset += this._workSpace.getCellHeight() * (groupIndex + 1)
            }
            var bottomOffset = topOffset + dayHeight;
            var {
                left: left
            } = $firstCell.getBoundingClientRect();
            var {
                right: right
            } = $lastCell.getBoundingClientRect();
            return this._groupBoundsOffset = {
                left: left,
                right: right,
                top: topOffset,
                bottom: bottomOffset
            }
        })
    }
    shiftIndicator($indicator, height, rtlOffset, i) {
        var offset = this._workSpace.getIndicatorOffset(0);
        var tableOffset = this._workSpace.option("crossScrollingEnabled") ? 0 : this._workSpace.getGroupTableWidth();
        var horizontalOffset = rtlOffset ? rtlOffset - offset : offset;
        var verticalOffset = this._workSpace._getRowCount() * this._workSpace.getCellHeight() * i;
        if (this._workSpace.supportAllDayRow() && this._workSpace.option("showAllDayPanel")) {
            verticalOffset += this._workSpace.getAllDayHeight() * (i + 1)
        }
        $indicator.css("left", horizontalOffset + tableOffset);
        $indicator.css("top", height + verticalOffset)
    }
    getShaderOffset(i, width) {
        var offset = this._workSpace.option("crossScrollingEnabled") ? 0 : this._workSpace.getGroupTableWidth();
        return this._workSpace.option("rtlEnabled") ? (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._$container.get(0)).width - offset - this._workSpace.getWorkSpaceLeftOffset() - width : offset
    }
    getShaderTopOffset(i) {
        return 0
    }
    getShaderHeight() {
        var height = this._workSpace.getIndicationHeight();
        if (this._workSpace.supportAllDayRow() && this._workSpace.option("showAllDayPanel")) {
            height += this._workSpace.getCellHeight()
        }
        return height
    }
    getShaderMaxHeight() {
        var height = this._workSpace._getRowCount() * this._workSpace.getCellHeight();
        if (this._workSpace.supportAllDayRow() && this._workSpace.option("showAllDayPanel")) {
            height += this._workSpace.getCellHeight()
        }
        return height
    }
    getShaderWidth() {
        return this._workSpace.getIndicationWidth(0)
    }
    getScrollableScrollTop() {
        return this._workSpace.getScrollable().scrollTop()
    }
    addAdditionalGroupCellClasses(cellClass, index, i, j) {
        cellClass = this._addLastGroupCellClass(cellClass, i + 1);
        return this._addFirstGroupCellClass(cellClass, i + 1)
    }
    _addLastGroupCellClass(cellClass, index) {
        if (index % this._workSpace._getRowCount() === 0) {
            return "".concat(cellClass, " ").concat(_classes__WEBPACK_IMPORTED_MODULE_2__.LAST_GROUP_CELL_CLASS)
        }
        return cellClass
    }
    _addFirstGroupCellClass(cellClass, index) {
        if ((index - 1) % this._workSpace._getRowCount() === 0) {
            return "".concat(cellClass, " ").concat(_classes__WEBPACK_IMPORTED_MODULE_2__.FIRST_GROUP_CELL_CLASS)
        }
        return cellClass
    }
}
/* harmony default export */ __webpack_exports__["default"] = (VerticalGroupedStrategy);


/***/ }),

/***/ 4507:
/*!**************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space.indicator.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _ui_scheduler_work_space__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui.scheduler.work_space */ 31085);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/utils/position */ 9622);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/utils/window */ 88684);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../classes */ 19156);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _utils_timeZone__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils.timeZone */ 53374);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space.indicator.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */











var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.dateToMilliseconds;
var SCHEDULER_DATE_TIME_INDICATOR_CLASS = "dx-scheduler-date-time-indicator";
var TIME_PANEL_CURRENT_TIME_CELL_CLASS = "dx-scheduler-time-panel-current-time-cell";
class SchedulerWorkSpaceIndicator extends _ui_scheduler_work_space__WEBPACK_IMPORTED_MODULE_2__.default {
    _getToday() {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__.getToday)(this.option("indicatorTime"), this.timeZoneCalculator)
    }
    isIndicationOnView() {
        if (this.option("showCurrentTimeIndicator")) {
            var today = this._getToday();
            var endViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.trimTime(this.getEndViewDate());
            return _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.dateInRange(today, this.getStartViewDate(), new Date(endViewDate.getTime() + toMs("day")))
        }
        return false
    }
    isIndicationAvailable() {
        if (!(0,_core_utils_window__WEBPACK_IMPORTED_MODULE_7__.hasWindow)()) {
            return false
        }
        var today = this._getToday();
        return today >= _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.trimTime(new Date(this.getStartViewDate()))
    }
    isIndicatorVisible() {
        var today = this._getToday();
        var endViewDate = new Date(this.getEndViewDate().getTime() + toMs("minute") - 1);
        var firstViewDate = new Date(this.getStartViewDate());
        firstViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());
        endViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());
        return _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.dateInRange(today, firstViewDate, endViewDate)
    }
    _renderDateTimeIndication() {
        if (this.isIndicationAvailable()) {
            if (this.option("shadeUntilCurrentTime")) {
                this._shader.render()
            }
            if (this.isIndicationOnView() && this.isIndicatorVisible()) {
                var groupCount = this._getGroupCount() || 1;
                var $container = this._dateTableScrollable.$content();
                var height = this.getIndicationHeight();
                var rtlOffset = this._getRtlOffset(this.getCellWidth());
                this._renderIndicator(height, rtlOffset, $container, groupCount);
                this._setCurrentTimeCells()
            }
        }
    }
    _renderIndicator(height, rtlOffset, $container, groupCount) {
        var groupedByDate = this.isGroupedByDate();
        var repeatCount = groupedByDate ? 1 : groupCount;
        for (var i = 0; i < repeatCount; i++) {
            var $indicator = this._createIndicator($container);
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setWidth)($indicator, groupedByDate ? this.getCellWidth() * groupCount : this.getCellWidth());
            this._groupedStrategy.shiftIndicator($indicator, height, rtlOffset, i)
        }
    }
    _createIndicator($container) {
        var $indicator = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(SCHEDULER_DATE_TIME_INDICATOR_CLASS);
        $container.append($indicator);
        return $indicator
    }
    _getRtlOffset(width) {
        return this.option("rtlEnabled") ? (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_6__.getBoundingRect)(this._dateTableScrollable.$content().get(0)).width - this.getTimePanelWidth() - width : 0
    }
    _setIndicationUpdateInterval() {
        if (!this.option("showCurrentTimeIndicator") || 0 === this.option("indicatorUpdateInterval")) {
            return
        }
        this._clearIndicatorUpdateInterval();
        this._indicatorInterval = setInterval(function() {
            this._refreshDateTimeIndication()
        }.bind(this), this.option("indicatorUpdateInterval"))
    }
    _clearIndicatorUpdateInterval() {
        if (this._indicatorInterval) {
            clearInterval(this._indicatorInterval);
            delete this._indicatorInterval
        }
    }
    _isVerticalShader() {
        return true
    }
    getIndicationWidth(groupIndex) {
        var maxWidth = this.getCellWidth() * this._getCellCount();
        var difference = this._getIndicatorDuration();
        if (difference > this._getCellCount()) {
            difference = this._getCellCount()
        }
        var width = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);
        return maxWidth < width ? maxWidth : width
    }
    getIndicatorOffset(groupIndex) {
        var difference = this._getIndicatorDuration() - 1;
        var offset = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);
        return offset
    }
    _getIndicatorDuration() {
        var today = this._getToday();
        var firstViewDate = new Date(this.getStartViewDate());
        var timeDiff = today.getTime() - firstViewDate.getTime();
        if ("workWeek" === this.option("type")) {
            timeDiff -= this._getWeekendsCount(Math.round(timeDiff / toMs("day"))) * toMs("day")
        }
        return Math.ceil((timeDiff + 1) / toMs("day"))
    }
    getIndicationHeight() {
        var today = _utils_timeZone__WEBPACK_IMPORTED_MODULE_10__.default.getDateWithoutTimezoneChange(this._getToday());
        var cellHeight = this.getCellHeight();
        var date = new Date(this.getStartViewDate());
        if (this.isIndicationOnView()) {
            date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate())
        }
        var duration = today.getTime() - date.getTime();
        var cellCount = duration / this.getCellDuration();
        return cellCount * cellHeight
    }
    _dispose() {
        this._clearIndicatorUpdateInterval();
        super._dispose.apply(this, arguments)
    }
    _refreshDateTimeIndication() {
        var _this$_shader;
        this._cleanDateTimeIndicator();
        this._cleanCurrentTimeCells();
        null === (_this$_shader = this._shader) || void 0 === _this$_shader ? void 0 : _this$_shader.clean();
        this._renderDateTimeIndication()
    }
    _setCurrentTimeCells() {
        var timePanelCells = this._getTimePanelCells();
        var currentTimeCellIndices = this._getCurrentTimePanelCellIndices();
        currentTimeCellIndices.forEach(timePanelCellIndex => {
            timePanelCells.eq(timePanelCellIndex).addClass(TIME_PANEL_CURRENT_TIME_CELL_CLASS)
        })
    }
    _isCurrentTimeHeaderCell(headerIndex) {
        if (this.isIndicationOnView()) {
            var completeDateHeaderMap = this.viewDataProvider.completeDateHeaderMap;
            var date = completeDateHeaderMap[completeDateHeaderMap.length - 1][headerIndex].startDate;
            return _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.sameDate(date, this._getToday())
        }
        return false
    }
    _getHeaderPanelCellClass(i) {
        var cellClass = super._getHeaderPanelCellClass(i);
        if (this._isCurrentTimeHeaderCell(i)) {
            return cellClass + " " + _classes__WEBPACK_IMPORTED_MODULE_8__.HEADER_CURRENT_TIME_CELL_CLASS
        }
        return cellClass
    }
    _cleanView() {
        super._cleanView();
        this._cleanDateTimeIndicator()
    }
    _dimensionChanged() {
        super._dimensionChanged();
        this._refreshDateTimeIndication()
    }
    _cleanDateTimeIndicator() {
        this.$element().find("." + SCHEDULER_DATE_TIME_INDICATOR_CLASS).remove()
    }
    _cleanCurrentTimeCells() {
        this.$element().find(".".concat(TIME_PANEL_CURRENT_TIME_CELL_CLASS)).removeClass(TIME_PANEL_CURRENT_TIME_CELL_CLASS)
    }
    _cleanWorkSpace() {
        super._cleanWorkSpace();
        this._renderDateTimeIndication();
        this._setIndicationUpdateInterval()
    }
    _optionChanged(args) {
        switch (args.name) {
            case "showCurrentTimeIndicator":
            case "indicatorTime":
                this._cleanWorkSpace();
                break;
            case "indicatorUpdateInterval":
                this._setIndicationUpdateInterval();
                break;
            case "showAllDayPanel":
            case "allDayExpanded":
            case "crossScrollingEnabled":
                super._optionChanged(args);
                this._refreshDateTimeIndication();
                break;
            case "shadeUntilCurrentTime":
                this._refreshDateTimeIndication();
                break;
            default:
                super._optionChanged(args)
        }
    }
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(super._getDefaultOptions(), {
            showCurrentTimeIndicator: true,
            indicatorTime: new Date,
            indicatorUpdateInterval: 5 * toMs("minute"),
            shadeUntilCurrentTime: true
        })
    }
    _getCurrentTimePanelCellIndices() {
        var rowCountPerGroup = this._getTimePanelRowCount();
        var today = this._getToday();
        var index = this.getCellIndexByDate(today);
        var {
            rowIndex: currentTimeRowIndex
        } = this._getCellCoordinatesByIndex(index);
        if (void 0 === currentTimeRowIndex) {
            return []
        }
        var cellIndices;
        if (0 === currentTimeRowIndex) {
            cellIndices = [currentTimeRowIndex]
        } else {
            cellIndices = currentTimeRowIndex % 2 === 0 ? [currentTimeRowIndex - 1, currentTimeRowIndex] : [currentTimeRowIndex, currentTimeRowIndex + 1]
        }
        var verticalGroupCount = this._isVerticalGroupedWorkSpace() ? this._getGroupCount() : 1;
        return [...new Array(verticalGroupCount)].reduce((currentIndices, _, groupIndex) => [...currentIndices, ...cellIndices.map(cellIndex => rowCountPerGroup * groupIndex + cellIndex)], [])
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_3__.default)("dxSchedulerWorkSpace", SchedulerWorkSpaceIndicator);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerWorkSpaceIndicator);


/***/ }),

/***/ 31085:
/*!****************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/dom_adapter */ 81113);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../events/core/events_engine */ 99064);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/utils/window */ 88684);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/element */ 60213);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../core/utils/position */ 9622);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../localization/message */ 19336);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../core/utils/common */ 37552);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../core/utils/type */ 33275);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../events/utils/index */ 3151);
/* harmony import */ var _events_pointer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../events/pointer */ 24842);
/* harmony import */ var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../widget/ui.errors */ 42491);
/* harmony import */ var _events_click__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../events/click */ 38894);
/* harmony import */ var _events_contextmenu__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../events/contextmenu */ 56582);
/* harmony import */ var _events_drag__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../events/drag */ 85970);
/* harmony import */ var _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../scroll_view/ui.scrollable */ 79678);
/* harmony import */ var _ui_scheduler_work_space_grouped_strategy_horizontal__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ui.scheduler.work_space.grouped.strategy.horizontal */ 37510);
/* harmony import */ var _ui_scheduler_work_space_grouped_strategy_vertical__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./ui.scheduler.work_space.grouped.strategy.vertical */ 85116);
/* harmony import */ var _table_creator__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../table_creator */ 27336);
/* harmony import */ var _shaders_ui_scheduler_current_time_shader_vertical__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../shaders/ui.scheduler.current_time_shader.vertical */ 61446);
/* harmony import */ var _appointmentDragBehavior__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../appointmentDragBehavior */ 13383);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../constants */ 27895);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../classes */ 19156);
/* harmony import */ var _internal_scheduler_base_m_widget_observer__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../../__internal/scheduler/base/m_widget_observer */ 19297);
/* harmony import */ var _animation_translator__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../../animation/translator */ 10829);
/* harmony import */ var _ui_scheduler_virtual_scrolling__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./ui.scheduler.virtual_scrolling */ 12807);
/* harmony import */ var _view_model_view_data_provider__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./view_model/view_data_provider */ 55428);
/* harmony import */ var _renovation_ui_scheduler_workspaces_base_date_table_layout_j__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/workspaces/base/date_table/layout.j */ 85953);
/* harmony import */ var _renovation_ui_scheduler_workspaces_base_date_table_all_day_panel_table_j__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.j */ 16551);
/* harmony import */ var _renovation_ui_scheduler_workspaces_base_date_table_all_day_panel_title_j__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.j */ 69883);
/* harmony import */ var _renovation_ui_scheduler_workspaces_base_time_panel_layout_j__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/workspaces/base/time_panel/layout.j */ 47756);
/* harmony import */ var _renovation_ui_scheduler_workspaces_base_group_panel_group_panel_j__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/workspaces/base/group_panel/group_panel.j */ 16783);
/* harmony import */ var _renovation_ui_scheduler_workspaces_base_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/workspaces/base/header_panel/layout.j */ 27865);
/* harmony import */ var _cells_selection_state__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./cells_selection_state */ 21985);
/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./cache */ 72283);
/* harmony import */ var _cells_selection_controller__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./cells_selection_controller */ 67682);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../../../__internal/scheduler/resources/m_utils */ 48025);
/* harmony import */ var _helpers_positionHelper__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./helpers/positionHelper */ 18690);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../utils */ 56943);
/* harmony import */ var _core_utils_data__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../../../core/utils/data */ 25670);
/* harmony import */ var _renovation_ui_common_utils_scroll_getMemoizeScrollTo__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../../../renovation/ui/common/utils/scroll/getMemoizeScrollTo */ 37999);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */























var {
    tableCreator: tableCreator
} = _table_creator__WEBPACK_IMPORTED_MODULE_22__.default;























var DRAGGING_MOUSE_FAULT = 10;
var abstract = _internal_scheduler_base_m_widget_observer__WEBPACK_IMPORTED_MODULE_27__.default.abstract;
var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_5__.default.dateToMilliseconds;
var COMPONENT_CLASS = "dx-scheduler-work-space";
var GROUPED_WORKSPACE_CLASS = "dx-scheduler-work-space-grouped";
var VERTICAL_GROUPED_WORKSPACE_CLASS = "dx-scheduler-work-space-vertical-grouped";
var WORKSPACE_VERTICAL_GROUP_TABLE_CLASS = "dx-scheduler-work-space-vertical-group-table";
var WORKSPACE_WITH_BOTH_SCROLLS_CLASS = "dx-scheduler-work-space-both-scrollbar";
var WORKSPACE_WITH_COUNT_CLASS = "dx-scheduler-work-space-count";
var WORKSPACE_WITH_GROUP_BY_DATE_CLASS = "dx-scheduler-work-space-group-by-date";
var WORKSPACE_WITH_ODD_CELLS_CLASS = "dx-scheduler-work-space-odd-cells";
var TIME_PANEL_CELL_CLASS = "dx-scheduler-time-panel-cell";
var TIME_PANEL_ROW_CLASS = "dx-scheduler-time-panel-row";
var ALL_DAY_PANEL_CLASS = "dx-scheduler-all-day-panel";
var ALL_DAY_TABLE_CLASS = "dx-scheduler-all-day-table";
var ALL_DAY_CONTAINER_CLASS = "dx-scheduler-all-day-appointments";
var ALL_DAY_TITLE_CLASS = "dx-scheduler-all-day-title";
var ALL_DAY_TABLE_CELL_CLASS = "dx-scheduler-all-day-table-cell";
var ALL_DAY_TABLE_ROW_CLASS = "dx-scheduler-all-day-table-row";
var WORKSPACE_WITH_ALL_DAY_CLASS = "dx-scheduler-work-space-all-day";
var WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS = "dx-scheduler-work-space-all-day-collapsed";
var WORKSPACE_WITH_MOUSE_SELECTION_CLASS = "dx-scheduler-work-space-mouse-selection";
var HORIZONTAL_SIZES_CLASS = "dx-scheduler-cell-sizes-horizontal";
var VERTICAL_SIZES_CLASS = "dx-scheduler-cell-sizes-vertical";
var HEADER_PANEL_CLASS = "dx-scheduler-header-panel";
var HEADER_PANEL_CELL_CLASS = "dx-scheduler-header-panel-cell";
var HEADER_ROW_CLASS = "dx-scheduler-header-row";
var GROUP_HEADER_CLASS = "dx-scheduler-group-header";
var DATE_TABLE_CELL_CLASS = "dx-scheduler-date-table-cell";
var DATE_TABLE_FOCUSED_CELL_CLASS = "dx-scheduler-focused-cell";
var VIRTUAL_ROW_CLASS = "dx-scheduler-virtual-row";
var DATE_TABLE_DROPPABLE_CELL_CLASS = "dx-scheduler-date-table-droppable-cell";
var SCHEDULER_HEADER_SCROLLABLE_CLASS = "dx-scheduler-header-scrollable";
var SCHEDULER_SIDEBAR_SCROLLABLE_CLASS = "dx-scheduler-sidebar-scrollable";
var SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS = "dx-scheduler-date-table-scrollable";
var SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_14__.default.down, "dxSchedulerWorkSpace");
var DragEventNames = {
    ENTER: (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_18__.enter, "dxSchedulerDateTable"),
    DROP: (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_18__.drop, "dxSchedulerDateTable"),
    LEAVE: (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_18__.leave, "dxSchedulerDateTable")
};
var SCHEDULER_CELL_DXCLICK_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.addNamespace)(_events_click__WEBPACK_IMPORTED_MODULE_16__.name, "dxSchedulerDateTable");
var SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_14__.default.down, "dxSchedulerDateTable");
var SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_14__.default.up, "dxSchedulerDateTable");
var SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_14__.default.move, "dxSchedulerDateTable");
var CELL_DATA = "dxCellData";
var DATE_TABLE_MIN_CELL_WIDTH = 75;
var DAY_MS = toMs("day");
var HOUR_MS = toMs("hour");
var DRAG_AND_DROP_SELECTOR = ".".concat(_classes__WEBPACK_IMPORTED_MODULE_26__.DATE_TABLE_CLASS, " td, .").concat(ALL_DAY_TABLE_CLASS, " td");
var CELL_SELECTOR = ".".concat(DATE_TABLE_CELL_CLASS, ", .").concat(ALL_DAY_TABLE_CELL_CLASS);
var CELL_INDEX_CALCULATION_EPSILON = .05;
class SchedulerWorkSpace extends _internal_scheduler_base_m_widget_observer__WEBPACK_IMPORTED_MODULE_27__.default {
    get viewDataProvider() {
        if (!this._viewDataProvider) {
            this._viewDataProvider = new _view_model_view_data_provider__WEBPACK_IMPORTED_MODULE_30__.default(this.type)
        }
        return this._viewDataProvider
    }
    get cache() {
        if (!this._cache) {
            this._cache = new _cache__WEBPACK_IMPORTED_MODULE_38__.Cache
        }
        return this._cache
    }
    get cellsSelectionState() {
        if (!this._cellsSelectionState) {
            this._cellsSelectionState = new _cells_selection_state__WEBPACK_IMPORTED_MODULE_37__.default(this.viewDataProvider);
            var selectedCellsOption = this.option("selectedCellData");
            if ((null === selectedCellsOption || void 0 === selectedCellsOption ? void 0 : selectedCellsOption.length) > 0) {
                var validSelectedCells = selectedCellsOption.map(selectedCell => {
                    var groups = selectedCell.groups;
                    if (!groups || 0 === this._getGroupCount()) {
                        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, selectedCell, {
                            groupIndex: 0
                        })
                    }
                    var groupIndex = this._getGroupIndexByResourceId(groups);
                    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, selectedCell, {
                        groupIndex: groupIndex
                    })
                });
                this._cellsSelectionState.setSelectedCellsByData(validSelectedCells)
            }
        }
        return this._cellsSelectionState
    }
    get cellsSelectionController() {
        if (!this._cellsSelectionController) {
            this._cellsSelectionController = new _cells_selection_controller__WEBPACK_IMPORTED_MODULE_39__.CellsSelectionController
        }
        return this._cellsSelectionController
    }
    get isAllDayPanelVisible() {
        return this._isShowAllDayPanel() && this.supportAllDayRow()
    }
    get verticalGroupTableClass() {
        return WORKSPACE_VERTICAL_GROUP_TABLE_CLASS
    }
    get viewDirection() {
        return "vertical"
    }
    get renovatedHeaderPanelComponent() {
        return _renovation_ui_scheduler_workspaces_base_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_36__.default
    }
    get timeZoneCalculator() {
        return this.option("timeZoneCalculator")
    }
    get isDefaultDraggingMode() {
        return "default" === this.option("draggingMode")
    }
    _supportedKeys() {
        var clickHandler = function(e) {
            e.preventDefault();
            e.stopPropagation();
            var selectedCells = this.cellsSelectionState.getSelectedCells();
            if (null !== selectedCells && void 0 !== selectedCells && selectedCells.length) {
                var selectedCellsElement = selectedCells.map(cellData => this._getCellByData(cellData)).filter(cell => !!cell);
                e.target = selectedCellsElement;
                this._showPopup = true;
                this._cellClickAction({
                    event: e,
                    cellElement: (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(selectedCellsElement),
                    cellData: selectedCells[0]
                })
            }
        };
        var onArrowPressed = (e, key) => {
            var _this$cellsSelectionS;
            e.preventDefault();
            e.stopPropagation();
            var focusedCellData = null === (_this$cellsSelectionS = this.cellsSelectionState.focusedCell) || void 0 === _this$cellsSelectionS ? void 0 : _this$cellsSelectionS.cellData;
            if (focusedCellData) {
                var isAllDayPanelCell = focusedCellData.allDay && !this._isVerticalGroupedWorkSpace();
                var isMultiSelection = e.shiftKey;
                var isMultiSelectionAllowed = this.option("allowMultipleCellSelection");
                var isRTL = this._isRTL();
                var groupCount = this._getGroupCount();
                var isGroupedByDate = this.isGroupedByDate();
                var isHorizontalGrouping = this._isHorizontalGroupedWorkSpace();
                var focusedCellPosition = this.viewDataProvider.findCellPositionInMap((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, focusedCellData, {
                    isAllDay: focusedCellData.allDay
                }));
                var edgeIndices = isHorizontalGrouping && isMultiSelection && !isGroupedByDate ? this.viewDataProvider.getGroupEdgeIndices(focusedCellData.groupIndex, isAllDayPanelCell) : this.viewDataProvider.getViewEdgeIndices(isAllDayPanelCell);
                var nextCellData = this.cellsSelectionController.handleArrowClick({
                    focusedCellPosition: focusedCellPosition,
                    edgeIndices: edgeIndices,
                    isRTL: isRTL,
                    isGroupedByDate: isGroupedByDate,
                    groupCount: groupCount,
                    isMultiSelection: isMultiSelection,
                    isMultiSelectionAllowed: isMultiSelectionAllowed,
                    viewType: this.type,
                    key: key,
                    getCellDataByPosition: this.viewDataProvider.getCellData.bind(this.viewDataProvider),
                    isAllDayPanelCell: isAllDayPanelCell,
                    focusedCellData: focusedCellData
                });
                this._processNextSelectedCell(nextCellData, focusedCellData, isMultiSelection && isMultiSelectionAllowed)
            }
        };
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(super._supportedKeys(), {
            enter: clickHandler,
            space: clickHandler,
            downArrow: e => {
                onArrowPressed(e, "down")
            },
            upArrow: e => {
                onArrowPressed(e, "up")
            },
            rightArrow: e => {
                onArrowPressed(e, "right")
            },
            leftArrow: e => {
                onArrowPressed(e, "left")
            }
        })
    }
    _isRTL() {
        return this.option("rtlEnabled")
    }
    _moveToCell($cell, isMultiSelection) {
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_12__.isDefined)($cell) || !$cell.length) {
            return
        }
        var isMultiSelectionAllowed = this.option("allowMultipleCellSelection");
        var currentCellData = this._getFullCellData($cell);
        var focusedCellData = this.cellsSelectionState.focusedCell.cellData;
        var nextFocusedCellData = this.cellsSelectionController.moveToCell({
            isMultiSelection: isMultiSelection,
            isMultiSelectionAllowed: isMultiSelectionAllowed,
            currentCellData: currentCellData,
            focusedCellData: focusedCellData,
            isVirtualCell: $cell.hasClass(_classes__WEBPACK_IMPORTED_MODULE_26__.VIRTUAL_CELL_CLASS)
        });
        this._processNextSelectedCell(nextFocusedCellData, focusedCellData, isMultiSelectionAllowed && isMultiSelection)
    }
    _processNextSelectedCell(nextCellData, focusedCellData, isMultiSelection) {
        var nextCellPosition = this.viewDataProvider.findCellPositionInMap({
            startDate: nextCellData.startDate,
            groupIndex: nextCellData.groupIndex,
            isAllDay: nextCellData.allDay,
            index: nextCellData.index
        });
        if (!this.viewDataProvider.isSameCell(focusedCellData, nextCellData)) {
            var $cell = nextCellData.allDay && !this._isVerticalGroupedWorkSpace() ? this._dom_getAllDayPanelCell(nextCellPosition.columnIndex) : this._dom_getDateCell(nextCellPosition);
            var isNextCellAllDay = nextCellData.allDay;
            this._setSelectedCellsStateAndUpdateSelection(isNextCellAllDay, nextCellPosition, isMultiSelection, $cell);
            this._dateTableScrollable.scrollToElement($cell)
        }
    }
    _setSelectedCellsStateAndUpdateSelection(isAllDay, cellPosition, isMultiSelection, $nextFocusedCell) {
        var nextCellCoordinates = {
            rowIndex: cellPosition.rowIndex,
            columnIndex: cellPosition.columnIndex,
            allDay: isAllDay
        };
        this.cellsSelectionState.setFocusedCell(nextCellCoordinates.rowIndex, nextCellCoordinates.columnIndex, isAllDay);
        if (isMultiSelection) {
            this.cellsSelectionState.setSelectedCells(nextCellCoordinates)
        } else {
            this.cellsSelectionState.setSelectedCells(nextCellCoordinates, nextCellCoordinates)
        }
        this.updateCellsSelection();
        this._updateSelectedCellDataOption(this.cellsSelectionState.getSelectedCells(), $nextFocusedCell)
    }
    _hasAllDayClass($cell) {
        return $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS)
    }
    _focusInHandler(e) {
        if ((0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(e.target).is(this._focusTarget()) && false !== this._isCellClick) {
            delete this._isCellClick;
            delete this._contextMenuHandled;
            super._focusInHandler.apply(this, arguments);
            this.cellsSelectionState.restoreSelectedAndFocusedCells();
            if (!this.cellsSelectionState.focusedCell) {
                var cellCoordinates = {
                    columnIndex: 0,
                    rowIndex: 0,
                    allDay: this._isVerticalGroupedWorkSpace() && this.isAllDayPanelVisible
                };
                this.cellsSelectionState.setFocusedCell(cellCoordinates.rowIndex, cellCoordinates.columnIndex, cellCoordinates.allDay);
                this.cellsSelectionState.setSelectedCells(cellCoordinates, cellCoordinates)
            }
            this.updateCellsSelection();
            this._updateSelectedCellDataOption(this.cellsSelectionState.getSelectedCells())
        }
    }
    _focusOutHandler() {
        super._focusOutHandler.apply(this, arguments);
        if (!this._contextMenuHandled && !this._disposed) {
            this.cellsSelectionState.releaseSelectedAndFocusedCells();
            this.viewDataProvider.updateViewData(this.generateRenderOptions());
            this.updateCellsSelection()
        }
    }
    _focusTarget() {
        return this.$element()
    }
    _isVerticalGroupedWorkSpace() {
        return !!this.option("groups").length && "vertical" === this.option("groupOrientation")
    }
    _isHorizontalGroupedWorkSpace() {
        return !!this.option("groups").length && "horizontal" === this.option("groupOrientation")
    }
    _isWorkSpaceWithCount() {
        return this.option("intervalCount") > 1
    }
    _isWorkspaceWithOddCells() {
        return .5 === this.option("hoursInterval") && !this.isVirtualScrolling()
    }
    _getRealGroupOrientation() {
        return this._isVerticalGroupedWorkSpace() ? "vertical" : "horizontal"
    }
    createRAllDayPanelElements() {
        this._$allDayPanel = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(ALL_DAY_PANEL_CLASS);
        this._$allDayTitle = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").appendTo(this._$headerPanelEmptyCell)
    }
    _dateTableScrollableConfig() {
        var config = {
            useKeyboard: false,
            bounceEnabled: false,
            updateManually: true,
            onScroll: () => {
                var _this$_groupedStrateg;
                null === (_this$_groupedStrateg = this._groupedStrategy.cache) || void 0 === _this$_groupedStrateg ? void 0 : _this$_groupedStrateg.clear()
            }
        };
        if (this._needCreateCrossScrolling()) {
            config = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(config, this._createCrossScrollingConfig(config))
        }
        if (this.isVirtualScrolling() && (this.virtualScrollingDispatcher.horizontalScrollingAllowed || this.virtualScrollingDispatcher.height)) {
            var currentOnScroll = config.onScroll;
            config = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, config, {
                onScroll: e => {
                    null === currentOnScroll || void 0 === currentOnScroll ? void 0 : currentOnScroll(e);
                    this.virtualScrollingDispatcher.handleOnScrollEvent(null === e || void 0 === e ? void 0 : e.scrollOffset)
                }
            })
        }
        return config
    }
    _createCrossScrollingConfig(_ref) {
        var {
            onScroll: _onScroll
        } = _ref;
        return {
            direction: "both",
            onScroll: event => {
                null === _onScroll || void 0 === _onScroll ? void 0 : _onScroll();
                this._scrollSync.sidebar({
                    top: event.scrollOffset.top
                });
                this._scrollSync.header({
                    left: event.scrollOffset.left
                })
            },
            onEnd: () => {
                this.option("onScrollEnd")()
            }
        }
    }
    _headerScrollableConfig() {
        return {
            useKeyboard: false,
            showScrollbar: "never",
            direction: "horizontal",
            useNative: false,
            updateManually: true,
            bounceEnabled: false,
            onScroll: event => {
                this._scrollSync.dateTable({
                    left: event.scrollOffset.left
                })
            }
        }
    }
    _visibilityChanged(visible) {
        this.cache.clear();
        if (visible) {
            this._updateGroupTableHeight()
        }
        if (visible && this._needCreateCrossScrolling()) {
            this._setTableSizes()
        }
    }
    _setTableSizes() {
        this.cache.clear();
        this._attachTableClasses();
        var cellWidth = this.getCellWidth();
        if (cellWidth < this.getCellMinWidth()) {
            cellWidth = this.getCellMinWidth()
        }
        var minWidth = this.getWorkSpaceMinWidth();
        var groupCount = this._getGroupCount();
        var totalCellCount = this._getTotalCellCount(groupCount);
        var width = cellWidth * totalCellCount;
        if (width < minWidth) {
            width = minWidth
        }
        (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setWidth)(this._$headerPanel, width);
        (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setWidth)(this._$dateTable, width);
        if (this._$allDayTable) {
            (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setWidth)(this._$allDayTable, width)
        }
        this._attachHeaderTableClasses();
        this._updateGroupTableHeight();
        this._updateScrollable()
    }
    getWorkSpaceMinWidth() {
        return this._groupedStrategy.getWorkSpaceMinWidth()
    }
    _dimensionChanged() {
        if (!this._isVisible()) {
            return
        }
        if (this.option("crossScrollingEnabled")) {
            this._setTableSizes()
        }
        this.updateHeaderEmptyCellWidth();
        this._updateScrollable();
        this.cache.clear()
    }
    _needCreateCrossScrolling() {
        return this.option("crossScrollingEnabled")
    }
    _getElementClass() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_11__.noop)()
    }
    _getRowCount() {
        return this.viewDataProvider.getRowCount({
            intervalCount: this.option("intervalCount"),
            currentDate: this.option("currentDate"),
            viewType: this.type,
            hoursInterval: this.option("hoursInterval"),
            startDayHour: this.option("startDayHour"),
            endDayHour: this.option("endDayHour")
        })
    }
    _getCellCount() {
        return this.viewDataProvider.getCellCount({
            intervalCount: this.option("intervalCount"),
            currentDate: this.option("currentDate"),
            viewType: this.type,
            hoursInterval: this.option("hoursInterval"),
            startDayHour: this.option("startDayHour"),
            endDayHour: this.option("endDayHour")
        })
    }
    isRenovatedRender() {
        return this.renovatedRenderSupported() && this.option("renovateRender")
    }
    _isVirtualModeOn() {
        return "virtual" === this.option("scrolling.mode")
    }
    isVirtualScrolling() {
        return this.isRenovatedRender() && this._isVirtualModeOn()
    }
    _initVirtualScrolling() {
        if (this.virtualScrollingDispatcher) {
            this.virtualScrollingDispatcher.dispose();
            this.virtualScrollingDispatcher = null
        }
        this.virtualScrollingDispatcher = new _ui_scheduler_virtual_scrolling__WEBPACK_IMPORTED_MODULE_29__.VirtualScrollingDispatcher(this._getVirtualScrollingDispatcherOptions());
        this.virtualScrollingDispatcher.attachScrollableEvents();
        this.renderer = new _ui_scheduler_virtual_scrolling__WEBPACK_IMPORTED_MODULE_29__.VirtualScrollingRenderer(this)
    }
    onDataSourceChanged() {}
    isGroupedAllDayPanel() {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_40__.calculateIsGroupedAllDayPanel)(this.option("groups"), this.option("groupOrientation"), this.isAllDayPanelVisible)
    }
    generateRenderOptions(isProvideVirtualCellsWidth) {
        var _this$_getToday;
        var groupCount = this._getGroupCount();
        var groupOrientation = groupCount > 0 ? this.option("groupOrientation") : this._getDefaultGroupStrategy();
        var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
            groupByDate: this.option("groupByDate"),
            startRowIndex: 0,
            startCellIndex: 0,
            groupOrientation: groupOrientation,
            today: null === (_this$_getToday = this._getToday) || void 0 === _this$_getToday ? void 0 : _this$_getToday.call(this),
            groups: this.option("groups"),
            isProvideVirtualCellsWidth: isProvideVirtualCellsWidth,
            isAllDayPanelVisible: this.isAllDayPanelVisible,
            selectedCells: this.cellsSelectionState.getSelectedCells(),
            focusedCell: this.cellsSelectionState.focusedCell,
            headerCellTextFormat: this._getFormat(),
            getDateForHeaderText: (_, date) => date,
            startDayHour: this.option("startDayHour"),
            endDayHour: this.option("endDayHour"),
            cellDuration: this.getCellDuration(),
            viewType: this.type,
            intervalCount: this.option("intervalCount"),
            hoursInterval: this.option("hoursInterval"),
            currentDate: this.option("currentDate"),
            startDate: this.option("startDate"),
            firstDayOfWeek: this.option("firstDayOfWeek")
        }, this.virtualScrollingDispatcher.getRenderState());
        return options
    }
    renovatedRenderSupported() {
        return true
    }
    _updateGroupTableHeight() {
        if (this._isVerticalGroupedWorkSpace() && (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_6__.hasWindow)()) {
            this._setHorizontalGroupHeaderCellsHeight()
        }
    }
    updateHeaderEmptyCellWidth() {
        if ((0,_core_utils_window__WEBPACK_IMPORTED_MODULE_6__.hasWindow)() && this._isRenderHeaderPanelEmptyCell()) {
            var timePanelWidth = this.getTimePanelWidth();
            var groupPanelWidth = this.getGroupTableWidth();
            this._$headerPanelEmptyCell.css("width", timePanelWidth + groupPanelWidth)
        }
    }
    _isGroupsSpecified(resources) {
        return this.option("groups").length && resources
    }
    _getGroupIndexByResourceId(id) {
        var groups = this.option("groups");
        var resourceTree = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_41__.createResourcesTree)(groups);
        if (!resourceTree.length) {
            return 0
        }
        return this._getGroupIndexRecursively(resourceTree, id)
    }
    _getGroupIndexRecursively(resourceTree, id) {
        var currentKey = resourceTree[0].name;
        var currentValue = id[currentKey];
        return resourceTree.reduce((prevIndex, _ref2) => {
            var {
                leafIndex: leafIndex,
                value: value,
                children: children
            } = _ref2;
            var areValuesEqual = currentValue === value;
            if (areValuesEqual && void 0 !== leafIndex) {
                return leafIndex
            }
            if (areValuesEqual) {
                return this._getGroupIndexRecursively(children, id)
            }
            return prevIndex
        }, 0)
    }
    _getViewStartByOptions() {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_40__.getViewStartByOptions)(this.option("startDate"), this.option("currentDate"), this._getIntervalDuration(), this.option("startDate") ? this._calculateViewStartDate() : void 0)
    }
    _getIntervalDuration() {
        return this.viewDataProvider.getIntervalDuration(this.option("intervalCount"))
    }
    _getHeaderDate() {
        return this.getStartViewDate()
    }
    _calculateViewStartDate() {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_40__.calculateViewStartDate)(this.option("startDate"))
    }
    _firstDayOfWeek() {
        return this.viewDataProvider.getFirstDayOfWeek(this.option("firstDayOfWeek"))
    }
    _attachEvents() {
        this._createSelectionChangedAction();
        this._attachClickEvent();
        this._attachContextMenuEvent()
    }
    _attachClickEvent() {
        var that = this;
        var pointerDownAction = this._createAction((function(e) {
            that._pointerDownHandler(e.event)
        }));
        this._createCellClickAction();
        var cellSelector = "." + DATE_TABLE_CELL_CLASS + ",." + ALL_DAY_TABLE_CELL_CLASS;
        var $element = this.$element();
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME, (function(e) {
            if ((0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.isMouseEvent)(e) && e.which > 1) {
                e.preventDefault();
                return
            }
            pointerDownAction({
                event: e
            })
        }));
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME, cellSelector, (function(e) {
            var $cell = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(e.target);
            that._cellClickAction({
                event: e,
                cellElement: (0,_core_element__WEBPACK_IMPORTED_MODULE_7__.getPublicElement)($cell),
                cellData: that.getCellData($cell)
            })
        }))
    }
    _createCellClickAction() {
        this._cellClickAction = this._createActionByOption("onCellClick", {
            afterExecute: e => this._cellClickHandler(e.args[0].event)
        })
    }
    _createSelectionChangedAction() {
        this._selectionChangedAction = this._createActionByOption("onSelectionChanged")
    }
    _cellClickHandler() {
        if (this._showPopup) {
            delete this._showPopup;
            this._handleSelectedCellsClick()
        }
    }
    _pointerDownHandler(e) {
        var $target = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(e.target);
        if (!$target.hasClass(DATE_TABLE_CELL_CLASS) && !$target.hasClass(ALL_DAY_TABLE_CELL_CLASS)) {
            this._isCellClick = false;
            return
        }
        this._isCellClick = true;
        if ($target.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {
            this._showPopup = true
        } else {
            var cellCoordinates = this._getCoordinatesByCell($target);
            var isAllDayCell = this._hasAllDayClass($target);
            this._setSelectedCellsStateAndUpdateSelection(isAllDayCell, cellCoordinates, false, $target)
        }
    }
    _handleSelectedCellsClick() {
        var selectedCells = this.cellsSelectionState.getSelectedCells();
        var firstCellData = selectedCells[0];
        var lastCellData = selectedCells[selectedCells.length - 1];
        var result = {
            startDate: firstCellData.startDate,
            endDate: lastCellData.endDate
        };
        if (void 0 !== lastCellData.allDay) {
            result.allDay = lastCellData.allDay
        }
        this.option("onSelectedCellsClick")(result, lastCellData.groups)
    }
    _attachContextMenuEvent() {
        this._createContextMenuAction();
        var cellSelector = "." + DATE_TABLE_CELL_CLASS + ",." + ALL_DAY_TABLE_CELL_CLASS;
        var $element = this.$element();
        var eventName = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.addNamespace)(_events_contextmenu__WEBPACK_IMPORTED_MODULE_17__.name, this.NAME);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off($element, eventName, cellSelector);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on($element, eventName, cellSelector, this._contextMenuHandler.bind(this))
    }
    _contextMenuHandler(e) {
        var $cell = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(e.target);
        this._contextMenuAction({
            event: e,
            cellElement: (0,_core_element__WEBPACK_IMPORTED_MODULE_7__.getPublicElement)($cell),
            cellData: this.getCellData($cell)
        });
        this._contextMenuHandled = true
    }
    _createContextMenuAction() {
        this._contextMenuAction = this._createActionByOption("onCellContextMenu")
    }
    _getGroupHeaderContainer() {
        if (this._isVerticalGroupedWorkSpace()) {
            return this._$groupTable
        }
        return this._$thead
    }
    _getDateHeaderContainer() {
        return this._$thead
    }
    _getCalculateHeaderCellRepeatCount() {
        return this._groupedStrategy.calculateHeaderCellRepeatCount()
    }
    _updateScrollable() {
        var _this$_headerScrollab, _this$_sidebarScrolla;
        this._dateTableScrollable.update();
        null === (_this$_headerScrollab = this._headerScrollable) || void 0 === _this$_headerScrollab ? void 0 : _this$_headerScrollab.update();
        null === (_this$_sidebarScrolla = this._sidebarScrollable) || void 0 === _this$_sidebarScrolla ? void 0 : _this$_sidebarScrolla.update()
    }
    _getTimePanelRowCount() {
        return this._getCellCountInDay()
    }
    _getCellCountInDay() {
        var hoursInterval = this.option("hoursInterval");
        var startDayHour = this.option("startDayHour");
        var endDayHour = this.option("endDayHour");
        return this.viewDataProvider.getCellCountInDay(startDayHour, endDayHour, hoursInterval)
    }
    _getTotalCellCount(groupCount) {
        return this._groupedStrategy.getTotalCellCount(groupCount)
    }
    _getTotalRowCount(groupCount, includeAllDayPanelRows) {
        var result = this._groupedStrategy.getTotalRowCount(groupCount);
        if (includeAllDayPanelRows && this.isAllDayPanelVisible) {
            result += groupCount
        }
        return result
    }
    _getGroupIndex(rowIndex, columnIndex) {
        return this._groupedStrategy.getGroupIndex(rowIndex, columnIndex)
    }
    calculateEndDate(startDate) {
        var viewDataGenerator = this.viewDataProvider.viewDataGenerator;
        return viewDataGenerator.calculateEndDate(startDate, viewDataGenerator.getInterval(this.option("hoursInterval")), this.option("endDayHour"))
    }
    _getGroupCount() {
        return (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_41__.getGroupCount)(this.option("groups"))
    }
    _attachTablesEvents() {
        var element = this.$element();
        this._attachDragEvents(element);
        this._attachPointerEvents(element)
    }
    _detachDragEvents(element) {
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off(element, DragEventNames.ENTER);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off(element, DragEventNames.LEAVE);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off(element, DragEventNames.DROP)
    }
    _attachDragEvents(element) {
        this._detachDragEvents(element);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on(element, DragEventNames.ENTER, DRAG_AND_DROP_SELECTOR, {
            checkDropTarget: (target, event) => !this._isOutsideScrollable(target, event)
        }, e => {
            if (!this.preventDefaultDragging) {
                this.removeDroppableCellClass();
                (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(e.target).addClass(DATE_TABLE_DROPPABLE_CELL_CLASS)
            }
        });
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on(element, DragEventNames.LEAVE, () => {
            if (!this.preventDefaultDragging) {
                this.removeDroppableCellClass()
            }
        });
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on(element, DragEventNames.DROP, DRAG_AND_DROP_SELECTOR, () => {
            var _this$dragBehavior, _this$dragBehavior$dr;
            if (!this.dragBehavior) {
                return
            }
            if (!(null !== (_this$dragBehavior = this.dragBehavior) && void 0 !== _this$dragBehavior && _this$dragBehavior.dragBetweenComponentsPromise)) {
                this.dragBehavior.removeDroppableClasses();
                return
            }
            null === (_this$dragBehavior$dr = this.dragBehavior.dragBetweenComponentsPromise) || void 0 === _this$dragBehavior$dr ? void 0 : _this$dragBehavior$dr.then(() => {
                this.dragBehavior.removeDroppableClasses()
            })
        })
    }
    _attachPointerEvents(element) {
        var isPointerDown = false;
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off(element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off(element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on(element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME, DRAG_AND_DROP_SELECTOR, e => {
            if ((0,_events_utils_index__WEBPACK_IMPORTED_MODULE_13__.isMouseEvent)(e) && 1 === e.which) {
                isPointerDown = true;
                this.$element().addClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);
                _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);
                _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME, () => {
                    isPointerDown = false;
                    this.$element().removeClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS)
                })
            }
        });
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on(element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME, DRAG_AND_DROP_SELECTOR, e => {
            if (isPointerDown && this._dateTableScrollable && !this._dateTableScrollable.option("scrollByContent")) {
                e.preventDefault();
                e.stopPropagation();
                this._moveToCell((0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(e.target), true)
            }
        })
    }
    _getFormat() {
        return abstract()
    }
    getWorkArea() {
        return this._$dateTableContainer
    }
    getScrollable() {
        return this._dateTableScrollable
    }
    getScrollableScrollTop() {
        return this._dateTableScrollable.scrollTop()
    }
    getGroupedScrollableScrollTop(allDay) {
        return this._groupedStrategy.getScrollableScrollTop(allDay)
    }
    getScrollableScrollLeft() {
        return this._dateTableScrollable.scrollLeft()
    }
    getScrollableOuterWidth() {
        return this._dateTableScrollable.scrollWidth()
    }
    getScrollableContainer() {
        return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(this._dateTableScrollable.container())
    }
    getHeaderPanelHeight() {
        return this._$headerPanel && (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getOuterHeight)(this._$headerPanel, true)
    }
    getTimePanelWidth() {
        return this._$timePanel && (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(this._$timePanel.get(0)).width
    }
    getGroupTableWidth() {
        return this._$groupTable ? (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getOuterWidth)(this._$groupTable) : 0
    }
    getWorkSpaceLeftOffset() {
        return this._groupedStrategy.getLeftOffset()
    }
    _getCellCoordinatesByIndex(index) {
        var columnIndex = Math.floor(index / this._getRowCount());
        var rowIndex = index - this._getRowCount() * columnIndex;
        return {
            columnIndex: columnIndex,
            rowIndex: rowIndex
        }
    }
    _getDateGenerationOptions() {
        var _this$viewDataProvide;
        return {
            startDayHour: this.option("startDayHour"),
            endDayHour: this.option("endDayHour"),
            isWorkView: this.viewDataProvider.viewDataGenerator.isWorkView,
            interval: null === (_this$viewDataProvide = this.viewDataProvider.viewDataGenerator) || void 0 === _this$viewDataProvide ? void 0 : _this$viewDataProvide.getInterval(this.option("hoursInterval")),
            startViewDate: this.getStartViewDate(),
            firstDayOfWeek: this._firstDayOfWeek()
        }
    }
    _getIntervalBetween(currentDate, allDay) {
        var firstViewDate = this.getStartViewDate();
        var startDayTime = this.option("startDayHour") * HOUR_MS;
        var timeZoneOffset = _core_utils_date__WEBPACK_IMPORTED_MODULE_5__.default.getTimezonesDifference(firstViewDate, currentDate);
        var fullInterval = currentDate.getTime() - firstViewDate.getTime() - timeZoneOffset;
        var days = this._getDaysOfInterval(fullInterval, startDayTime);
        var weekendsCount = this._getWeekendsCount(days);
        var result = (days - weekendsCount) * DAY_MS;
        if (!allDay) {
            var hiddenInterval = this.viewDataProvider.hiddenInterval;
            var visibleDayDuration = this.getVisibleDayDuration();
            result = fullInterval - days * hiddenInterval - weekendsCount * visibleDayDuration
        }
        return result
    }
    _getWeekendsCount() {
        return 0
    }
    _getDaysOfInterval(fullInterval, startDayTime) {
        return Math.floor((fullInterval + startDayTime) / DAY_MS)
    }
    _updateIndex(index) {
        return index * this._getRowCount()
    }
    _getDroppableCell() {
        return this._getDateTables().find("." + DATE_TABLE_DROPPABLE_CELL_CLASS)
    }
    _getWorkSpaceWidth() {
        return this.cache.get("workspaceWidth", () => {
            if (this._needCreateCrossScrolling()) {
                return (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(this._$dateTable.get(0)).width
            }
            var totalWidth = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(this.$element().get(0)).width;
            var timePanelWidth = this.getTimePanelWidth();
            var groupTableWidth = this.getGroupTableWidth();
            return totalWidth - timePanelWidth - groupTableWidth
        })
    }
    _getCellByCoordinates(cellCoordinates, groupIndex, inAllDayRow) {
        var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow);
        return this._dom_getDateCell(indexes)
    }
    _dom_getDateCell(position) {
        return this._$dateTable.find("tr:not(.".concat(VIRTUAL_ROW_CLASS, ")")).eq(position.rowIndex).find("td:not(.".concat(_classes__WEBPACK_IMPORTED_MODULE_26__.VIRTUAL_CELL_CLASS, ")")).eq(position.columnIndex)
    }
    _dom_getAllDayPanelCell(columnIndex) {
        return this._$allDayPanel.find("tr").eq(0).find("td").eq(columnIndex)
    }
    _getCells(allDay, direction) {
        var cellClass = allDay ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;
        if ("vertical" === direction) {
            var result = [];
            for (var i = 1;; i++) {
                var cells = this.$element().find("tr .".concat(cellClass, ":nth-child(").concat(i, ")"));
                if (!cells.length) {
                    break
                }
                result = result.concat(cells.toArray())
            }
            return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(result)
        } else {
            return this.$element().find("." + cellClass)
        }
    }
    _getFirstAndLastDataTableCell() {
        var selector = this.isVirtualScrolling() ? ".".concat(DATE_TABLE_CELL_CLASS, ", .").concat(_classes__WEBPACK_IMPORTED_MODULE_26__.VIRTUAL_CELL_CLASS) : ".".concat(DATE_TABLE_CELL_CLASS);
        var $cells = this.$element().find(selector);
        return [$cells[0], $cells[$cells.length - 1]]
    }
    _getAllCells(allDay) {
        if (this._isVerticalGroupedWorkSpace()) {
            return this._$dateTable.find("td:not(.".concat(_classes__WEBPACK_IMPORTED_MODULE_26__.VIRTUAL_CELL_CLASS, ")"))
        }
        var cellClass = allDay && this.supportAllDayRow() ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;
        return this.$element().find(".".concat(cellClass))
    }
    _setHorizontalGroupHeaderCellsHeight() {
        var height = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(this._$dateTable.get(0)).height;
        (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setOuterHeight)(this._$groupTable, height)
    }
    _getGroupHeaderCells() {
        return this.$element().find("." + GROUP_HEADER_CLASS)
    }
    _getScrollCoordinates(hours, minutes, date, groupIndex, allDay) {
        var currentDate = date || new Date(this.option("currentDate"));
        var startDayHour = this.option("startDayHour");
        var endDayHour = this.option("endDayHour");
        if (hours < startDayHour) {
            hours = startDayHour
        }
        if (hours >= endDayHour) {
            hours = endDayHour - 1
        }
        currentDate.setHours(hours, minutes, 0, 0);
        var cell = this.viewDataProvider.findGlobalCellPosition(currentDate, groupIndex, allDay);
        var {
            position: position,
            cellData: cellData
        } = cell;
        return this.virtualScrollingDispatcher.calculateCoordinatesByDataAndPosition(cellData, position, currentDate, (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_40__.isDateAndTimeView)(this.type), "vertical" === this.viewDirection)
    }
    _isOutsideScrollable(target, event) {
        var $dateTableScrollableElement = this._dateTableScrollable.$element();
        var scrollableSize = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)($dateTableScrollableElement.get(0));
        var window = (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_6__.getWindow)();
        var isTargetInAllDayPanel = !(0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(target).closest($dateTableScrollableElement).length;
        var isOutsideHorizontalScrollable = event.pageX < scrollableSize.left || event.pageX > scrollableSize.left + scrollableSize.width + (window.scrollX || 0);
        var isOutsideVerticalScrollable = event.pageY < scrollableSize.top || event.pageY > scrollableSize.top + scrollableSize.height + (window.scrollY || 0);
        if (isTargetInAllDayPanel && !isOutsideHorizontalScrollable) {
            return false
        }
        return isOutsideVerticalScrollable || isOutsideHorizontalScrollable
    }
    setCellDataCache(cellCoordinates, groupIndex, $cell) {
        var key = JSON.stringify({
            rowIndex: cellCoordinates.rowIndex,
            columnIndex: cellCoordinates.columnIndex,
            groupIndex: groupIndex
        });
        this.cache.set(key, this.getCellData($cell))
    }
    setCellDataCacheAlias(appointment, geometry) {
        var key = JSON.stringify({
            rowIndex: appointment.rowIndex,
            columnIndex: appointment.columnIndex,
            groupIndex: appointment.groupIndex
        });
        var aliasKey = JSON.stringify({
            top: geometry.top,
            left: geometry.left
        });
        this.cache.set(aliasKey, this.cache.get(key))
    }
    supportAllDayRow() {
        return true
    }
    keepOriginalHours() {
        return false
    }
    _filterCellDataFields(cellData) {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(true, {}, {
            startDate: cellData.startDate,
            endDate: cellData.endDate,
            groups: cellData.groups,
            groupIndex: cellData.groupIndex,
            allDay: cellData.allDay
        })
    }
    getCellData($cell) {
        var cellData = this._getFullCellData($cell) || {};
        return this._filterCellDataFields(cellData)
    }
    _getFullCellData($cell) {
        var currentCell = $cell[0];
        if (currentCell) {
            return this._getDataByCell($cell)
        }
        return
    }
    _getVirtualRowOffset() {
        return this.virtualScrollingDispatcher.virtualRowOffset
    }
    _getVirtualCellOffset() {
        return this.virtualScrollingDispatcher.virtualCellOffset
    }
    _getDataByCell($cell) {
        var rowIndex = $cell.parent().index() - this.virtualScrollingDispatcher.topVirtualRowsCount;
        var columnIndex = $cell.index() - this.virtualScrollingDispatcher.leftVirtualCellsCount;
        var {
            viewDataProvider: viewDataProvider
        } = this;
        var isAllDayCell = this._hasAllDayClass($cell);
        var cellData = viewDataProvider.getCellData(rowIndex, columnIndex, isAllDayCell);
        return cellData ? cellData : void 0
    }
    isGroupedByDate() {
        return this.option("groupByDate") && this._isHorizontalGroupedWorkSpace() && this._getGroupCount() > 0
    }
    getCellIndexByDate(date, inAllDayRow) {
        var viewDataGenerator = this.viewDataProvider.viewDataGenerator;
        var timeInterval = inAllDayRow ? 864e5 : viewDataGenerator.getInterval(this.option("hoursInterval"));
        var startViewDateOffset = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_40__.getStartViewDateTimeOffset)(this.getStartViewDate(), this.option("startDayHour"));
        var dateTimeStamp = this._getIntervalBetween(date, inAllDayRow) + startViewDateOffset;
        var index = Math.floor(dateTimeStamp / timeInterval);
        if (inAllDayRow) {
            index = this._updateIndex(index)
        }
        if (index < 0) {
            index = 0
        }
        return index
    }
    getDroppableCellIndex() {
        var $droppableCell = this._getDroppableCell();
        var $row = $droppableCell.parent();
        var rowIndex = $row.index();
        return rowIndex * $row.find("td").length + $droppableCell.index()
    }
    getDataByDroppableCell() {
        var cellData = this.getCellData((0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(this._getDroppableCell()));
        var allDay = cellData.allDay;
        var startDate = cellData.startDate;
        var endDate = cellData.endDate;
        return {
            startDate: startDate,
            endDate: endDate,
            allDay: allDay,
            groups: cellData.groups
        }
    }
    getDateRange() {
        return [this.getStartViewDate(), this.getEndViewDateByEndDayHour()]
    }
    getCellMinWidth() {
        return DATE_TABLE_MIN_CELL_WIDTH
    }
    getRoundedCellWidth(groupIndex, startIndex, cellCount) {
        if (groupIndex < 0 || !(0,_core_utils_window__WEBPACK_IMPORTED_MODULE_6__.hasWindow)()) {
            return 0
        }
        var $row = this.$element().find(".".concat(_classes__WEBPACK_IMPORTED_MODULE_26__.DATE_TABLE_ROW_CLASS)).eq(0);
        var width = 0;
        var $cells = $row.find("." + DATE_TABLE_CELL_CLASS);
        var totalCellCount = this._getCellCount() * groupIndex;
        cellCount = cellCount || this._getCellCount();
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_12__.isDefined)(startIndex)) {
            startIndex = totalCellCount
        }
        for (var i = startIndex; i < totalCellCount + cellCount; i++) {
            var element = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)($cells).eq(i).get(0);
            var elementWidth = element ? (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(element).width : 0;
            width += elementWidth
        }
        return width / (totalCellCount + cellCount - startIndex)
    }
    getCellWidth() {
        return (0,_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_42__.getCellWidth)(this.getDOMElementsMetaData())
    }
    getCellHeight() {
        return (0,_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_42__.getCellHeight)(this.getDOMElementsMetaData())
    }
    getAllDayHeight() {
        return (0,_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_42__.getAllDayHeight)(this.option("showAllDayPanel"), this._isVerticalGroupedWorkSpace(), this.getDOMElementsMetaData())
    }
    getMaxAllowedPosition(groupIndex) {
        return (0,_helpers_positionHelper__WEBPACK_IMPORTED_MODULE_42__.getMaxAllowedPosition)(groupIndex, this.viewDataProvider, this.option("rtlEnabled"), this.getDOMElementsMetaData())
    }
    getAllDayOffset() {
        return this._groupedStrategy.getAllDayOffset()
    }
    getCellIndexByCoordinates(coordinates, allDay) {
        var cellCount = this._getTotalCellCount(this._getGroupCount());
        var cellWidth = this.getCellWidth();
        var cellHeight = allDay ? this.getAllDayHeight() : this.getCellHeight();
        var topIndex = Math.floor(Math.floor(coordinates.top) / Math.floor(cellHeight));
        var leftIndex = coordinates.left / cellWidth;
        leftIndex = Math.floor(leftIndex + CELL_INDEX_CALCULATION_EPSILON);
        if (this._isRTL()) {
            leftIndex = cellCount - leftIndex - 1
        }
        return cellCount * topIndex + leftIndex
    }
    getStartViewDate() {
        return this.viewDataProvider.getStartViewDate()
    }
    getEndViewDate() {
        return this.viewDataProvider.getLastCellEndDate()
    }
    getEndViewDateByEndDayHour() {
        return this.viewDataProvider.getLastViewDateByEndDayHour(this.option("endDayHour"))
    }
    getCellDuration() {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_40__.getCellDuration)(this.type, this.option("startDayHour"), this.option("endDayHour"), this.option("hoursInterval"))
    }
    getIntervalDuration(allDay) {
        return allDay ? toMs("day") : this.getCellDuration()
    }
    getVisibleDayDuration() {
        var startDayHour = this.option("startDayHour");
        var endDayHour = this.option("endDayHour");
        var hoursInterval = this.option("hoursInterval");
        return this.viewDataProvider.getVisibleDayDuration(startDayHour, endDayHour, hoursInterval)
    }
    getGroupBounds(coordinates) {
        var groupBounds = this._groupedStrategy instanceof _ui_scheduler_work_space_grouped_strategy_vertical__WEBPACK_IMPORTED_MODULE_21__.default ? this.getGroupBoundsVertical(coordinates.groupIndex) : this.getGroupBoundsHorizontal(coordinates);
        return this._isRTL() ? this.getGroupBoundsRtlCorrection(groupBounds) : groupBounds
    }
    getGroupBoundsVertical(groupIndex) {
        var $firstAndLastCells = this._getFirstAndLastDataTableCell();
        return this._groupedStrategy.getGroupBoundsOffset(groupIndex, $firstAndLastCells)
    }
    getGroupBoundsHorizontal(coordinates) {
        var cellCount = this._getCellCount();
        var $cells = this._getCells();
        var cellWidth = this.getCellWidth();
        var groupedDataMap = this.viewDataProvider.groupedDataMap;
        return this._groupedStrategy.getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates, groupedDataMap)
    }
    getGroupBoundsRtlCorrection(groupBounds) {
        var cellWidth = this.getCellWidth();
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, groupBounds, {
            left: groupBounds.right - 2 * cellWidth,
            right: groupBounds.left + 2 * cellWidth
        })
    }
    needRecalculateResizableArea() {
        return this._isVerticalGroupedWorkSpace() && 0 !== this.getScrollable().scrollTop()
    }
    getCellDataByCoordinates(coordinates, allDay) {
        var key = JSON.stringify({
            top: coordinates.top,
            left: coordinates.left
        });
        return this.cache.get(key, () => {
            var $cells = this._getCells(allDay);
            var cellIndex = this.getCellIndexByCoordinates(coordinates, allDay);
            var $cell = $cells.eq(cellIndex);
            return this.getCellData($cell)
        })
    }
    getVisibleBounds() {
        var result = {};
        var $scrollable = this.getScrollable().$element();
        var cellHeight = this.getCellHeight();
        var scrolledCellCount = this.getScrollableScrollTop() / cellHeight;
        var totalCellCount = scrolledCellCount + (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getHeight)($scrollable) / cellHeight;
        result.top = {
            hours: Math.floor(scrolledCellCount * this.option("hoursInterval")) + this.option("startDayHour"),
            minutes: scrolledCellCount % 2 ? 30 : 0
        };
        result.bottom = {
            hours: Math.floor(totalCellCount * this.option("hoursInterval")) + this.option("startDayHour"),
            minutes: Math.floor(totalCellCount) % 2 ? 30 : 0
        };
        return result
    }
    updateScrollPosition(date, groups) {
        var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;
        var newDate = this.timeZoneCalculator.createDate(date, {
            path: "toGrid"
        });
        var inAllDayRow = allDay && this.isAllDayPanelVisible;
        if (this.needUpdateScrollPosition(newDate, groups, inAllDayRow)) {
            this.scrollTo(newDate, groups, inAllDayRow, false)
        }
    }
    needUpdateScrollPosition(date, groups, inAllDayRow) {
        var cells = this._getCellsInViewport(inAllDayRow);
        var groupIndex = this._isGroupsSpecified(groups) ? this._getGroupIndexByResourceId(groups) : 0;
        var time = date.getTime();
        var trimmedTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_5__.default.trimTime(date).getTime();
        return cells.reduce((currentResult, cell) => {
            var {
                startDate: cellStartDate,
                endDate: cellEndDate,
                groupIndex: cellGroupIndex
            } = this.getCellData(cell);
            var cellStartTime = cellStartDate.getTime();
            var cellEndTime = cellEndDate.getTime();
            if ((!inAllDayRow && cellStartTime <= time && time < cellEndTime || inAllDayRow && trimmedTime === cellStartTime) && groupIndex === cellGroupIndex) {
                return false
            }
            return currentResult
        }, true)
    }
    _getCellsInViewport(inAllDayRow) {
        var $scrollable = this.getScrollable().$element();
        var cellHeight = this.getCellHeight();
        var cellWidth = this.getCellWidth();
        var totalColumnCount = this._getTotalCellCount(this._getGroupCount());
        var scrollableScrollTop = this.getScrollableScrollTop();
        var scrollableScrollLeft = this.getScrollableScrollLeft();
        var fullScrolledRowCount = scrollableScrollTop / cellHeight - this.virtualScrollingDispatcher.topVirtualRowsCount;
        var scrolledRowCount = Math.floor(fullScrolledRowCount);
        if (scrollableScrollTop % cellHeight !== 0) {
            scrolledRowCount += 1
        }
        var fullScrolledColumnCount = scrollableScrollLeft / cellWidth;
        var scrolledColumnCount = Math.floor(fullScrolledColumnCount);
        if (scrollableScrollLeft % cellWidth !== 0) {
            scrolledColumnCount += 1
        }
        var rowCount = Math.floor(fullScrolledRowCount + (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getHeight)($scrollable) / cellHeight);
        var columnCount = Math.floor(fullScrolledColumnCount + (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getWidth)($scrollable) / cellWidth);
        var $cells = this._getAllCells(inAllDayRow);
        var result = [];
        $cells.each((function(index) {
            var $cell = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(this);
            var columnIndex = index % totalColumnCount;
            var rowIndex = index / totalColumnCount;
            if (scrolledColumnCount <= columnIndex && columnIndex < columnCount && scrolledRowCount <= rowIndex && rowIndex < rowCount) {
                result.push($cell)
            }
        }));
        return result
    }
    scrollToTime(hours, minutes, date) {
        if (!this._isValidScrollDate(date)) {
            return
        }
        var coordinates = this._getScrollCoordinates(hours, minutes, date);
        var scrollable = this.getScrollable();
        scrollable.scrollBy({
            top: coordinates.top - scrollable.scrollTop(),
            left: 0
        })
    }
    scrollTo(date, groups) {
        var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;
        var throwWarning = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;
        if (!this._isValidScrollDate(date, throwWarning)) {
            return
        }
        var groupIndex = this._getGroupCount() && groups ? this._getGroupIndexByResourceId(groups) : 0;
        var isScrollToAllDay = allDay && this.isAllDayPanelVisible;
        var coordinates = this._getScrollCoordinates(date.getHours(), date.getMinutes(), date, groupIndex, isScrollToAllDay);
        var scrollable = this.getScrollable();
        var $scrollable = scrollable.$element();
        var cellWidth = this.getCellWidth();
        var offset = this.option("rtlEnabled") ? cellWidth : 0;
        var scrollableHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getHeight)($scrollable);
        var scrollableWidth = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getWidth)($scrollable);
        var cellHeight = this.getCellHeight();
        var xShift = (scrollableWidth - cellWidth) / 2;
        var yShift = (scrollableHeight - cellHeight) / 2;
        var left = coordinates.left - scrollable.scrollLeft() - xShift - offset;
        var top = coordinates.top - scrollable.scrollTop() - yShift;
        if (isScrollToAllDay && !this._isVerticalGroupedWorkSpace()) {
            top = 0
        }
        if (this.option("templatesRenderAsynchronously")) {
            setTimeout(() => {
                scrollable.scrollBy({
                    left: left,
                    top: top
                })
            })
        } else {
            scrollable.scrollBy({
                left: left,
                top: top
            })
        }
    }
    _isValidScrollDate(date) {
        var throwWarning = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : true;
        var min = this.getStartViewDate();
        var max = this.getEndViewDate();
        if (date < min || date > max) {
            throwWarning && _widget_ui_errors__WEBPACK_IMPORTED_MODULE_15__.default.log("W1008", date);
            return false
        }
        return true
    }
    needApplyCollectorOffset() {
        return false
    }
    removeDroppableCellClass($cellElement) {
        var $cell = $cellElement || this._getDroppableCell();
        null === $cell || void 0 === $cell ? void 0 : $cell.removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS)
    }
    _getCoordinatesByCell($cell) {
        var columnIndex = $cell.index() - this.virtualScrollingDispatcher.leftVirtualCellsCount;
        var rowIndex = $cell.parent().index();
        var isAllDayCell = this._hasAllDayClass($cell);
        var isVerticalGrouping = this._isVerticalGroupedWorkSpace();
        if (!(isAllDayCell && !isVerticalGrouping)) {
            rowIndex -= this.virtualScrollingDispatcher.topVirtualRowsCount
        }
        return {
            rowIndex: rowIndex,
            columnIndex: columnIndex
        }
    }
    _isShowAllDayPanel() {
        return this.option("showAllDayPanel")
    }
    _getTimePanelCells() {
        return this.$element().find(".".concat(TIME_PANEL_CELL_CLASS))
    }
    _getRDateTableProps() {
        return {
            viewData: this.viewDataProvider.viewData,
            dataCellTemplate: this.option("dataCellTemplate"),
            addDateTableClass: !this.option("crossScrollingEnabled") || this.isVirtualScrolling(),
            groupOrientation: this.option("groupOrientation"),
            addVerticalSizesClassToRows: false
        }
    }
    _updateSelectedCellDataOption(selectedCellData) {
        var correctedSelectedCellData = selectedCellData.map(_ref3 => {
            var {
                startDate: startDate,
                endDate: endDate,
                allDay: allDay,
                groupIndex: groupIndex,
                groups: groups
            } = _ref3;
            return {
                startDate: startDate,
                endDate: endDate,
                allDay: allDay,
                groupIndex: groupIndex,
                groups: groups
            }
        });
        this.option("selectedCellData", correctedSelectedCellData);
        this._selectionChangedAction({
            selectedCellData: correctedSelectedCellData
        })
    }
    _getCellByData(cellData) {
        var {
            startDate: startDate,
            groupIndex: groupIndex,
            allDay: allDay,
            index: index
        } = cellData;
        var position = this.viewDataProvider.findCellPositionInMap({
            startDate: startDate,
            groupIndex: groupIndex,
            isAllDay: allDay,
            index: index
        });
        if (!position) {
            return
        }
        return allDay && !this._isVerticalGroupedWorkSpace() ? this._dom_getAllDayPanelCell(position.columnIndex) : this._dom_getDateCell(position)
    }
    getDOMElementsMetaData() {
        return this.cache.get("cellElementsMeta", () => ({
            dateTableCellsMeta: this._getDateTableDOMElementsInfo(),
            allDayPanelCellsMeta: this._getAllDayPanelDOMElementsInfo()
        }))
    }
    _getDateTableDOMElementsInfo() {
        var dateTableCells = this._getAllCells(false);
        if (!dateTableCells.length || !(0,_core_utils_window__WEBPACK_IMPORTED_MODULE_6__.hasWindow)()) {
            return [
                [{}]
            ]
        }
        var dateTable = this._getDateTable();
        var dateTableRect = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(dateTable.get(0));
        var columnsCount = this.viewDataProvider.getColumnsCount();
        var result = [];
        dateTableCells.each((index, cell) => {
            var rowIndex = Math.floor(index / columnsCount);
            if (result.length === rowIndex) {
                result.push([])
            }
            this._addCellMetaData(result[rowIndex], cell, dateTableRect)
        });
        return result
    }
    _getAllDayPanelDOMElementsInfo() {
        var result = [];
        if (this.isAllDayPanelVisible && !this._isVerticalGroupedWorkSpace() && (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_6__.hasWindow)()) {
            var allDayCells = this._getAllCells(true);
            if (!allDayCells.length) {
                return [{}]
            }
            var allDayAppointmentContainer = this._$allDayPanel;
            var allDayPanelRect = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(allDayAppointmentContainer.get(0));
            allDayCells.each((_, cell) => {
                this._addCellMetaData(result, cell, allDayPanelRect)
            })
        }
        return result
    }
    _addCellMetaData(cellMetaDataArray, cell, parentRect) {
        var cellRect = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(cell);
        cellMetaDataArray.push({
            left: cellRect.left - parentRect.left,
            top: cellRect.top - parentRect.top,
            width: cellRect.width,
            height: cellRect.height
        })
    }
    _oldRender_getAllDayCellData(groupIndex) {
        return (cell, rowIndex, columnIndex) => {
            var validColumnIndex = columnIndex % this._getCellCount();
            var options = this._getDateGenerationOptions(true);
            var startDate = this.viewDataProvider.viewDataGenerator.getDateByCellIndices(options, rowIndex, validColumnIndex, this._getCellCountInDay());
            startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_5__.default.trimTime(startDate);
            var validGroupIndex = groupIndex || 0;
            if (this.isGroupedByDate()) {
                validGroupIndex = Math.floor(columnIndex % this._getGroupCount())
            } else if (this._isHorizontalGroupedWorkSpace()) {
                validGroupIndex = Math.floor(columnIndex / this._getCellCount())
            }
            var data = {
                startDate: startDate,
                endDate: startDate,
                allDay: true,
                groupIndex: validGroupIndex
            };
            var groupsArray = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_41__.getCellGroups)(validGroupIndex, this.option("groups"));
            if (groupsArray.length) {
                data.groups = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_41__.getGroupsObjectFromGroupsArray)(groupsArray)
            }
            return {
                key: CELL_DATA,
                value: data
            }
        }
    }
    renderRWorkSpace(componentsToRender) {
        var components = null !== componentsToRender && void 0 !== componentsToRender ? componentsToRender : {
            header: true,
            timePanel: true,
            dateTable: true,
            allDayPanel: true
        };
        components.header && this.renderRHeaderPanel();
        components.timePanel && this.renderRTimeTable();
        components.dateTable && this.renderRDateTable();
        components.allDayPanel && this.renderRAllDayPanel()
    }
    renderRDateTable() {
        _utils__WEBPACK_IMPORTED_MODULE_43__.utils.renovation.renderComponent(this, this._$dateTable, _renovation_ui_scheduler_workspaces_base_date_table_layout_j__WEBPACK_IMPORTED_MODULE_31__.default, "renovatedDateTable", this._getRDateTableProps())
    }
    renderRGroupPanel() {
        var options = {
            groups: this.option("groups"),
            groupOrientation: this.option("groupOrientation"),
            groupByDate: this.isGroupedByDate(),
            resourceCellTemplate: this.option("resourceCellTemplate"),
            className: this.verticalGroupTableClass,
            groupPanelData: this.viewDataProvider.getGroupPanelData(this.generateRenderOptions())
        };
        if (this.option("groups").length) {
            this._attachGroupCountClass();
            _utils__WEBPACK_IMPORTED_MODULE_43__.utils.renovation.renderComponent(this, this._getGroupHeaderContainer(), _renovation_ui_scheduler_workspaces_base_group_panel_group_panel_j__WEBPACK_IMPORTED_MODULE_35__.default, "renovatedGroupPanel", options)
        } else {
            this._detachGroupCountClass()
        }
    }
    renderRAllDayPanel() {
        var visible = this.isAllDayPanelVisible && !this.isGroupedAllDayPanel();
        if (visible) {
            var _this$virtualScrollin;
            this._toggleAllDayVisibility(false);
            var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
                viewData: this.viewDataProvider.viewData,
                dataCellTemplate: this.option("dataCellTemplate"),
                startCellIndex: 0
            }, (null === (_this$virtualScrollin = this.virtualScrollingDispatcher.horizontalVirtualScrolling) || void 0 === _this$virtualScrollin ? void 0 : _this$virtualScrollin.getRenderState()) || {});
            _utils__WEBPACK_IMPORTED_MODULE_43__.utils.renovation.renderComponent(this, this._$allDayTable, _renovation_ui_scheduler_workspaces_base_date_table_all_day_panel_table_j__WEBPACK_IMPORTED_MODULE_32__.default, "renovatedAllDayPanel", options);
            _utils__WEBPACK_IMPORTED_MODULE_43__.utils.renovation.renderComponent(this, this._$allDayTitle, _renovation_ui_scheduler_workspaces_base_date_table_all_day_panel_title_j__WEBPACK_IMPORTED_MODULE_33__.default, "renovatedAllDayPanelTitle", {})
        }
        this._toggleAllDayVisibility(true)
    }
    renderRTimeTable() {
        _utils__WEBPACK_IMPORTED_MODULE_43__.utils.renovation.renderComponent(this, this._$timePanel, _renovation_ui_scheduler_workspaces_base_time_panel_layout_j__WEBPACK_IMPORTED_MODULE_34__.default, "renovatedTimePanel", {
            timePanelData: this.viewDataProvider.timePanelData,
            timeCellTemplate: this.option("timeCellTemplate"),
            groupOrientation: this.option("groupOrientation")
        })
    }
    renderRHeaderPanel() {
        var isRenderDateHeader = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;
        if (this.option("groups").length) {
            this._attachGroupCountClass()
        } else {
            this._detachGroupCountClass()
        }
        _utils__WEBPACK_IMPORTED_MODULE_43__.utils.renovation.renderComponent(this, this._$thead, this.renovatedHeaderPanelComponent, "renovatedHeaderPanel", {
            dateHeaderData: this.viewDataProvider.dateHeaderData,
            groupPanelData: this.viewDataProvider.getGroupPanelData(this.generateRenderOptions()),
            dateCellTemplate: this.option("dateCellTemplate"),
            timeCellTemplate: this.option("timeCellTemplate"),
            groups: this.option("groups"),
            groupByDate: this.isGroupedByDate(),
            groupOrientation: this.option("groupOrientation"),
            resourceCellTemplate: this.option("resourceCellTemplate"),
            isRenderDateHeader: isRenderDateHeader
        })
    }
    initDragBehavior(scheduler) {
        if (!this.dragBehavior && scheduler) {
            this.dragBehavior = new _appointmentDragBehavior__WEBPACK_IMPORTED_MODULE_24__.default(scheduler);
            var $rootElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(scheduler.element());
            this._createDragBehavior(this.getWorkArea(), $rootElement);
            this._createDragBehavior(this.getAllDayContainer(), $rootElement)
        }
    }
    _createDragBehavior($targetElement, $rootElement) {
        var options = {
            getItemData: (itemElement, appointments) => appointments._getItemData(itemElement),
            getItemSettings: $itemElement => $itemElement.data(_constants__WEBPACK_IMPORTED_MODULE_25__.APPOINTMENT_SETTINGS_KEY)
        };
        this._createDragBehaviorBase($targetElement, $rootElement, options)
    }
    _createDragBehaviorBase(targetElement, rootElement, options) {
        var container = this.$element().find(".".concat(_classes__WEBPACK_IMPORTED_MODULE_26__.FIXED_CONTAINER_CLASS));
        this.dragBehavior.addTo(targetElement, createDragBehaviorConfig(container, rootElement, this.isDefaultDraggingMode, this.dragBehavior, () => {
            if (!this.isDefaultDraggingMode) {
                this.preventDefaultDragging = false
            }
        }, () => {
            if (!this.isDefaultDraggingMode) {
                this.preventDefaultDragging = true
            }
        }, () => this._getDroppableCell(), () => this._getDateTables(), () => this.removeDroppableCellClass(), () => this.getCellWidth(), options))
    }
    _isRenderHeaderPanelEmptyCell() {
        return this._isVerticalGroupedWorkSpace()
    }
    _dispose() {
        super._dispose();
        this.virtualScrollingDispatcher.dispose()
    }
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(super._getDefaultOptions(), {
            currentDate: new Date,
            intervalCount: 1,
            startDate: null,
            firstDayOfWeek: void 0,
            startDayHour: 0,
            endDayHour: 24,
            hoursInterval: .5,
            activeStateEnabled: true,
            hoverStateEnabled: true,
            groups: [],
            showAllDayPanel: true,
            allDayExpanded: false,
            onCellClick: null,
            crossScrollingEnabled: false,
            dataCellTemplate: null,
            timeCellTemplate: null,
            resourceCellTemplate: null,
            dateCellTemplate: null,
            allowMultipleCellSelection: true,
            indicatorTime: new Date,
            indicatorUpdateInterval: 5 * toMs("minute"),
            shadeUntilCurrentTime: true,
            groupOrientation: "horizontal",
            selectedCellData: [],
            groupByDate: false,
            scrolling: {
                mode: "standard"
            },
            allDayPanelMode: "all",
            renovateRender: true,
            height: void 0,
            draggingMode: "outlook",
            onScrollEnd: () => {},
            getHeaderHeight: void 0,
            onRenderAppointments: () => {},
            onShowAllDayPanel: () => {},
            onSelectedCellsClick: () => {},
            timeZoneCalculator: void 0,
            schedulerHeight: void 0,
            schedulerWidth: void 0
        })
    }
    _optionChanged(args) {
        switch (args.name) {
            case "startDayHour":
                (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_40__.validateDayHours)(args.value, this.option("endDayHour"));
                this._cleanWorkSpace();
                break;
            case "endDayHour":
                (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_40__.validateDayHours)(this.option("startDayHour"), args.value);
                this._cleanWorkSpace();
                break;
            case "dateCellTemplate":
            case "resourceCellTemplate":
            case "dataCellTemplate":
            case "timeCellTemplate":
            case "hoursInterval":
            case "firstDayOfWeek":
            case "currentDate":
            case "startDate":
                this._cleanWorkSpace();
                break;
            case "groups":
                this._cleanView();
                this._removeAllDayElements();
                this._initGrouping();
                this.repaint();
                break;
            case "groupOrientation":
                this._initGroupedStrategy();
                this._createAllDayPanelElements();
                this._removeAllDayElements();
                this._cleanWorkSpace();
                this._toggleGroupByDateClass();
                break;
            case "showAllDayPanel":
                if (this._isVerticalGroupedWorkSpace()) {
                    this._cleanView();
                    this._removeAllDayElements();
                    this._initGrouping();
                    this.repaint()
                } else if (!this.isRenovatedRender()) {
                    this._toggleAllDayVisibility(true)
                } else {
                    this.renderWorkSpace()
                }
                break;
            case "allDayExpanded":
                this._changeAllDayVisibility();
                this._attachTablesEvents();
                this._updateScrollable();
                break;
            case "onSelectionChanged":
                this._createSelectionChangedAction();
                break;
            case "onCellClick":
                this._createCellClickAction();
                break;
            case "onCellContextMenu":
                this._attachContextMenuEvent();
                break;
            case "intervalCount":
                this._cleanWorkSpace();
                this._toggleWorkSpaceCountClass();
                break;
            case "groupByDate":
                this._cleanWorkSpace();
                this._toggleGroupByDateClass();
                break;
            case "crossScrollingEnabled":
                this._toggleHorizontalScrollClass();
                this._dateTableScrollable.option(this._dateTableScrollableConfig());
                break;
            case "allDayPanelMode":
                this.updateShowAllDayPanel();
                this.updateAppointments();
                break;
            case "width":
                super._optionChanged(args);
                this._dimensionChanged();
                break;
            case "timeZoneCalculator":
            case "allowMultipleCellSelection":
            case "selectedCellData":
                break;
            case "renovateRender":
            case "scrolling":
                this.repaint();
                break;
            case "schedulerHeight":
            case "schedulerWidth":
                this.virtualScrollingDispatcher.updateDimensions(true);
                break;
            default:
                super._optionChanged(args)
        }
    }
    updateShowAllDayPanel() {
        var isHiddenAllDayPanel = "hidden" === this.option("allDayPanelMode");
        this.option("onShowAllDayPanel")(!isHiddenAllDayPanel)
    }
    _getVirtualScrollingDispatcherOptions() {
        return {
            getCellHeight: this.getCellHeight.bind(this),
            getCellWidth: this.getCellWidth.bind(this),
            getCellMinWidth: this.getCellMinWidth.bind(this),
            isRTL: this._isRTL.bind(this),
            getSchedulerHeight: () => this.option("schedulerHeight"),
            getSchedulerWidth: () => this.option("schedulerWidth"),
            getViewHeight: () => this.$element().height ? this.$element().height() : (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getHeight)(this.$element()),
            getViewWidth: () => this.$element().width ? this.$element().width() : (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getWidth)(this.$element()),
            getWindowHeight: () => (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_6__.getWindow)().innerHeight,
            getWindowWidth: () => (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_6__.getWindow)().innerWidth,
            getScrolling: () => this.option("scrolling"),
            getScrollableOuterWidth: this.getScrollableOuterWidth.bind(this),
            getScrollable: this.getScrollable.bind(this),
            createAction: this._createAction.bind(this),
            updateRender: this.updateRender.bind(this),
            updateGrid: this.updateGrid.bind(this),
            getGroupCount: this._getGroupCount.bind(this),
            isVerticalGrouping: this._isVerticalGroupedWorkSpace.bind(this),
            getTotalRowCount: this._getTotalRowCount.bind(this),
            getTotalCellCount: this._getTotalCellCount.bind(this)
        }
    }
    _cleanWorkSpace() {
        this._cleanView();
        this._toggleGroupedClass();
        this._toggleWorkSpaceWithOddCells();
        this.virtualScrollingDispatcher.updateDimensions(true);
        this._renderView();
        this.option("crossScrollingEnabled") && this._setTableSizes();
        this.cache.clear()
    }
    _init() {
        this._scrollSync = {};
        this._viewDataProvider = null;
        this._cellsSelectionState = null;
        this._activeStateUnit = CELL_SELECTOR;
        super._init();
        this._initGrouping();
        this._toggleHorizontalScrollClass();
        this._toggleWorkSpaceCountClass();
        this._toggleGroupByDateClass();
        this._toggleWorkSpaceWithOddCells();
        this.$element().addClass(COMPONENT_CLASS).addClass(this._getElementClass())
    }
    _initPositionHelper() {
        this.positionHelper = new _helpers_positionHelper__WEBPACK_IMPORTED_MODULE_42__.PositionHelper({
            key: this.option("key"),
            viewDataProvider: this.viewDataProvider,
            viewStartDayHour: this.option("startDayHour"),
            viewEndDayHour: this.option("endDayHour"),
            cellDuration: this.getCellDuration(),
            groupedStrategy: this._groupedStrategy,
            isGroupedByDate: this.isGroupedByDate(),
            rtlEnabled: this.option("rtlEnabled"),
            startViewDate: this.getStartViewDate(),
            isVerticalGrouping: this._isVerticalGroupedWorkSpace(),
            groupCount: this._getGroupCount(),
            isVirtualScrolling: this.isVirtualScrolling(),
            getDOMMetaDataCallback: this.getDOMElementsMetaData.bind(this)
        })
    }
    _initGrouping() {
        this._initGroupedStrategy();
        this._toggleGroupingDirectionClass();
        this._toggleGroupByDateClass()
    }
    isVerticalOrientation() {
        var orientation = this.option("groups").length ? this.option("groupOrientation") : this._getDefaultGroupStrategy();
        return "vertical" === orientation
    }
    _initGroupedStrategy() {
        var Strategy = this.isVerticalOrientation() ? _ui_scheduler_work_space_grouped_strategy_vertical__WEBPACK_IMPORTED_MODULE_21__.default : _ui_scheduler_work_space_grouped_strategy_horizontal__WEBPACK_IMPORTED_MODULE_20__.default;
        this._groupedStrategy = new Strategy(this)
    }
    _getDefaultGroupStrategy() {
        return "horizontal"
    }
    _toggleHorizontalScrollClass() {
        this.$element().toggleClass(WORKSPACE_WITH_BOTH_SCROLLS_CLASS, this.option("crossScrollingEnabled"))
    }
    _toggleGroupByDateClass() {
        this.$element().toggleClass(WORKSPACE_WITH_GROUP_BY_DATE_CLASS, this.isGroupedByDate())
    }
    _toggleWorkSpaceCountClass() {
        this.$element().toggleClass(WORKSPACE_WITH_COUNT_CLASS, this._isWorkSpaceWithCount())
    }
    _toggleWorkSpaceWithOddCells() {
        this.$element().toggleClass(WORKSPACE_WITH_ODD_CELLS_CLASS, this._isWorkspaceWithOddCells())
    }
    _toggleGroupingDirectionClass() {
        this.$element().toggleClass(VERTICAL_GROUPED_WORKSPACE_CLASS, this._isVerticalGroupedWorkSpace())
    }
    _getDateTableCellClass(rowIndex, columnIndex) {
        var cellClass = DATE_TABLE_CELL_CLASS + " " + HORIZONTAL_SIZES_CLASS + " " + VERTICAL_SIZES_CLASS;
        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, columnIndex + 1, rowIndex, columnIndex)
    }
    _getGroupHeaderClass(i) {
        var cellClass = GROUP_HEADER_CLASS;
        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1)
    }
    _initWorkSpaceUnits() {
        this._$headerPanelContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass("dx-scheduler-header-panel-container");
        this._$headerTablesContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass("dx-scheduler-header-tables-container");
        this._$headerPanel = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<table>");
        this._$thead = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<thead>").appendTo(this._$headerPanel);
        this._$headerPanelEmptyCell = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass("dx-scheduler-header-panel-empty-cell");
        this._$allDayTable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<table>");
        this._$fixedContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(_classes__WEBPACK_IMPORTED_MODULE_26__.FIXED_CONTAINER_CLASS);
        this._$allDayContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(ALL_DAY_CONTAINER_CLASS);
        this._$dateTableScrollableContent = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass("dx-scheduler-date-table-scrollable-content");
        this._$sidebarScrollableContent = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass("dx-scheduler-side-bar-scrollable-content");
        this._initAllDayPanelElements();
        if (this.isRenovatedRender()) {
            this.createRAllDayPanelElements()
        } else {
            this._createAllDayPanelElements()
        }
        this._$timePanel = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<table>").addClass(_classes__WEBPACK_IMPORTED_MODULE_26__.TIME_PANEL_CLASS);
        this._$dateTable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<table>");
        this._$dateTableContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass("dx-scheduler-date-table-container");
        this._$groupTable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(WORKSPACE_VERTICAL_GROUP_TABLE_CLASS)
    }
    _initAllDayPanelElements() {
        this._allDayTitles = [];
        this._allDayTables = [];
        this._allDayPanels = []
    }
    _initDateTableScrollable() {
        var $dateTableScrollable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS);
        this._dateTableScrollable = this._createComponent($dateTableScrollable, _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_19__.default, this._dateTableScrollableConfig());
        this._scrollSync.dateTable = (0,_renovation_ui_common_utils_scroll_getMemoizeScrollTo__WEBPACK_IMPORTED_MODULE_45__.getMemoizeScrollTo)(() => this._dateTableScrollable)
    }
    _createWorkSpaceElements() {
        if (this.option("crossScrollingEnabled")) {
            this._createWorkSpaceScrollableElements()
        } else {
            this._createWorkSpaceStaticElements()
        }
    }
    _createWorkSpaceStaticElements() {
        this._$dateTableContainer.append(this._$dateTable);
        if (this._isVerticalGroupedWorkSpace()) {
            this._$dateTableContainer.append(this._$allDayContainer);
            this._$dateTableScrollableContent.append(this._$groupTable, this._$timePanel, this._$dateTableContainer);
            this._dateTableScrollable.$content().append(this._$dateTableScrollableContent);
            this._$headerTablesContainer.append(this._$headerPanel)
        } else {
            var _this$_$allDayPanel;
            this._$dateTableScrollableContent.append(this._$timePanel, this._$dateTableContainer);
            this._dateTableScrollable.$content().append(this._$dateTableScrollableContent);
            this._$headerTablesContainer.append(this._$headerPanel, this._$allDayPanel);
            null === (_this$_$allDayPanel = this._$allDayPanel) || void 0 === _this$_$allDayPanel ? void 0 : _this$_$allDayPanel.append(this._$allDayContainer, this._$allDayTable)
        }
        this._appendHeaderPanelEmptyCellIfNecessary();
        this._$headerPanelContainer.append(this._$headerTablesContainer);
        this.$element().append(this._$fixedContainer, this._$headerPanelContainer, this._dateTableScrollable.$element())
    }
    _createWorkSpaceScrollableElements() {
        this.$element().append(this._$fixedContainer);
        this._$flexContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass("dx-scheduler-work-space-flex-container");
        this._createHeaderScrollable();
        this._headerScrollable.$content().append(this._$headerPanel);
        this._appendHeaderPanelEmptyCellIfNecessary();
        this._$headerPanelContainer.append(this._$headerTablesContainer);
        this.$element().append(this._$headerPanelContainer);
        this.$element().append(this._$flexContainer);
        this._createSidebarScrollable();
        this._$flexContainer.append(this._dateTableScrollable.$element());
        this._$dateTableContainer.append(this._$dateTable);
        this._$dateTableScrollableContent.append(this._$dateTableContainer);
        this._dateTableScrollable.$content().append(this._$dateTableScrollableContent);
        if (this._isVerticalGroupedWorkSpace()) {
            this._$dateTableContainer.append(this._$allDayContainer);
            this._$sidebarScrollableContent.append(this._$groupTable, this._$timePanel)
        } else {
            var _this$_$allDayPanel2;
            this._headerScrollable.$content().append(this._$allDayPanel);
            null === (_this$_$allDayPanel2 = this._$allDayPanel) || void 0 === _this$_$allDayPanel2 ? void 0 : _this$_$allDayPanel2.append(this._$allDayContainer, this._$allDayTable);
            this._$sidebarScrollableContent.append(this._$timePanel)
        }
        this._sidebarScrollable.$content().append(this._$sidebarScrollableContent)
    }
    _appendHeaderPanelEmptyCellIfNecessary() {
        this._isRenderHeaderPanelEmptyCell() && this._$headerPanelContainer.append(this._$headerPanelEmptyCell)
    }
    _createHeaderScrollable() {
        var $headerScrollable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(SCHEDULER_HEADER_SCROLLABLE_CLASS).appendTo(this._$headerTablesContainer);
        this._headerScrollable = this._createComponent($headerScrollable, _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_19__.default, this._headerScrollableConfig());
        this._scrollSync.header = (0,_renovation_ui_common_utils_scroll_getMemoizeScrollTo__WEBPACK_IMPORTED_MODULE_45__.getMemoizeScrollTo)(() => this._headerScrollable)
    }
    _createSidebarScrollable() {
        var $timePanelScrollable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(SCHEDULER_SIDEBAR_SCROLLABLE_CLASS).appendTo(this._$flexContainer);
        this._sidebarScrollable = this._createComponent($timePanelScrollable, _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_19__.default, {
            useKeyboard: false,
            showScrollbar: "never",
            direction: "vertical",
            useNative: false,
            updateManually: true,
            bounceEnabled: false,
            onScroll: event => {
                this._scrollSync.dateTable({
                    top: event.scrollOffset.top
                })
            }
        });
        this._scrollSync.sidebar = (0,_renovation_ui_common_utils_scroll_getMemoizeScrollTo__WEBPACK_IMPORTED_MODULE_45__.getMemoizeScrollTo)(() => this._sidebarScrollable)
    }
    _attachTableClasses() {
        this._addTableClass(this._$dateTable, _classes__WEBPACK_IMPORTED_MODULE_26__.DATE_TABLE_CLASS);
        if (this._isVerticalGroupedWorkSpace()) {
            var groupCount = this._getGroupCount();
            for (var i = 0; i < groupCount; i++) {
                this._addTableClass(this._allDayTables[i], ALL_DAY_TABLE_CLASS)
            }
        } else if (!this.isRenovatedRender()) {
            this._addTableClass(this._$allDayTable, ALL_DAY_TABLE_CLASS)
        }
    }
    _attachHeaderTableClasses() {
        this._addTableClass(this._$headerPanel, HEADER_PANEL_CLASS)
    }
    _addTableClass($el, className) {
        $el && !$el.hasClass(className) && $el.addClass(className)
    }
    _initMarkup() {
        this.cache.clear();
        this._initWorkSpaceUnits();
        this._initVirtualScrolling();
        this._initDateTableScrollable();
        this._createWorkSpaceElements();
        super._initMarkup();
        if (!this.option("crossScrollingEnabled")) {
            this._attachTableClasses();
            this._attachHeaderTableClasses()
        }
        this._toggleGroupedClass();
        this._renderView();
        this._attachEvents()
    }
    _render() {
        super._render();
        this._renderDateTimeIndication();
        this._setIndicationUpdateInterval()
    }
    _toggleGroupedClass() {
        this.$element().toggleClass(GROUPED_WORKSPACE_CLASS, this._getGroupCount() > 0)
    }
    _renderView() {
        if (this.isRenovatedRender()) {
            if (this._isVerticalGroupedWorkSpace()) {
                this.renderRGroupPanel()
            }
        } else {
            this._applyCellTemplates(this._renderGroupHeader())
        }
        this.renderWorkSpace();
        if (this.isRenovatedRender()) {
            this.virtualScrollingDispatcher.updateDimensions()
        }
        this._updateGroupTableHeight();
        this.updateHeaderEmptyCellWidth();
        this._shader = new _shaders_ui_scheduler_current_time_shader_vertical__WEBPACK_IMPORTED_MODULE_23__.default(this)
    }
    updateCellsSelection() {
        var renderOptions = this.generateRenderOptions();
        this.viewDataProvider.updateViewData(renderOptions);
        this.renderRWorkSpace({
            timePanel: true,
            dateTable: true,
            allDayPanel: true
        })
    }
    _renderDateTimeIndication() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_11__.noop)()
    }
    _setIndicationUpdateInterval() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_11__.noop)()
    }
    _refreshDateTimeIndication() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_11__.noop)()
    }
    _detachGroupCountClass() {
        [..._classes__WEBPACK_IMPORTED_MODULE_26__.VERTICAL_GROUP_COUNT_CLASSES].forEach(className => {
            this.$element().removeClass(className)
        })
    }
    _attachGroupCountClass() {
        var className = this._groupedStrategy.getGroupCountClass(this.option("groups"));
        this.$element().addClass(className)
    }
    _getDateHeaderTemplate() {
        return this.option("dateCellTemplate")
    }
    _toggleAllDayVisibility(isUpdateScrollable) {
        var showAllDayPanel = this._isShowAllDayPanel();
        this.$element().toggleClass(WORKSPACE_WITH_ALL_DAY_CLASS, showAllDayPanel);
        this._changeAllDayVisibility();
        isUpdateScrollable && this._updateScrollable()
    }
    _changeAllDayVisibility() {
        this.cache.clear();
        this.$element().toggleClass(WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS, !this.option("allDayExpanded") && this._isShowAllDayPanel())
    }
    _getDateTables() {
        return this._$dateTable.add(this._$allDayTable)
    }
    _getDateTable() {
        return this._$dateTable
    }
    _removeAllDayElements() {
        this._$allDayTable && this._$allDayTable.remove();
        this._$allDayTitle && this._$allDayTitle.remove()
    }
    _cleanView() {
        var _this$_shader;
        this.cache.clear();
        this._cleanTableWidths();
        this.cellsSelectionState.clearSelectedAndFocusedCells();
        if (!this.isRenovatedRender()) {
            var _this$_$allDayTable, _this$_$sidebarTable;
            this._$thead.empty();
            this._$dateTable.empty();
            this._$timePanel.empty();
            this._$groupTable.empty();
            null === (_this$_$allDayTable = this._$allDayTable) || void 0 === _this$_$allDayTable ? void 0 : _this$_$allDayTable.empty();
            null === (_this$_$sidebarTable = this._$sidebarTable) || void 0 === _this$_$sidebarTable ? void 0 : _this$_$sidebarTable.empty()
        }
        null === (_this$_shader = this._shader) || void 0 === _this$_shader ? void 0 : _this$_shader.clean();
        delete this._interval
    }
    _clean() {
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__.default.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);
        this._disposeRenovatedComponents();
        super._clean()
    }
    _cleanTableWidths() {
        this._$headerPanel.css("width", "");
        this._$dateTable.css("width", "");
        this._$allDayTable && this._$allDayTable.css("width", "")
    }
    _disposeRenovatedComponents() {
        var _this$renovatedAllDay, _this$renovatedDateTa, _this$renovatedTimePa, _this$renovatedGroupP, _this$renovatedHeader;
        null === (_this$renovatedAllDay = this.renovatedAllDayPanel) || void 0 === _this$renovatedAllDay ? void 0 : _this$renovatedAllDay.dispose();
        this.renovatedAllDayPanel = void 0;
        null === (_this$renovatedDateTa = this.renovatedDateTable) || void 0 === _this$renovatedDateTa ? void 0 : _this$renovatedDateTa.dispose();
        this.renovatedDateTable = void 0;
        null === (_this$renovatedTimePa = this.renovatedTimePanel) || void 0 === _this$renovatedTimePa ? void 0 : _this$renovatedTimePa.dispose();
        this.renovatedTimePanel = void 0;
        null === (_this$renovatedGroupP = this.renovatedGroupPanel) || void 0 === _this$renovatedGroupP ? void 0 : _this$renovatedGroupP.dispose();
        this.renovatedGroupPanel = void 0;
        null === (_this$renovatedHeader = this.renovatedHeaderPanel) || void 0 === _this$renovatedHeader ? void 0 : _this$renovatedHeader.dispose();
        this.renovatedHeaderPanel = void 0
    }
    getGroupedStrategy() {
        return this._groupedStrategy
    }
    getFixedContainer() {
        return this._$fixedContainer
    }
    getAllDayContainer() {
        return this._$allDayContainer
    }
    updateRender() {
        this.renderer.updateRender()
    }
    updateGrid() {
        this.renderer._renderGrid()
    }
    updateAppointments() {
        var _this$dragBehavior2;
        this.option("onRenderAppointments")();
        null === (_this$dragBehavior2 = this.dragBehavior) || void 0 === _this$dragBehavior2 ? void 0 : _this$dragBehavior2.updateDragSource()
    }
    _createAllDayPanelElements() {
        var groupCount = this._getGroupCount();
        if (this._isVerticalGroupedWorkSpace() && 0 !== groupCount) {
            for (var i = 0; i < groupCount; i++) {
                var $allDayTitle = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(ALL_DAY_TITLE_CLASS).text(_localization_message__WEBPACK_IMPORTED_MODULE_10__.default.format("dxScheduler-allDay"));
                this._allDayTitles.push($allDayTitle);
                this._$allDayTable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<table>");
                this._allDayTables.push(this._$allDayTable);
                this._$allDayPanel = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);
                this._allDayPanels.push(this._$allDayPanel)
            }
        } else {
            this._$allDayTitle = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(ALL_DAY_TITLE_CLASS).text(_localization_message__WEBPACK_IMPORTED_MODULE_10__.default.format("dxScheduler-allDay")).appendTo(this.$element());
            this._$allDayTable = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<table>");
            this._$allDayPanel = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<div>").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable)
        }
    }
    renderWorkSpace() {
        var isGenerateNewViewData = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;
        this.cache.clear();
        this.viewDataProvider.update(this.generateRenderOptions(), isGenerateNewViewData);
        if (this.isRenovatedRender()) {
            this.renderRWorkSpace()
        } else {
            this._renderDateHeader();
            this._renderTimePanel();
            this._renderGroupAllDayPanel();
            this._renderDateTable();
            this._renderAllDayPanel()
        }
        this._initPositionHelper()
    }
    _renderGroupHeader() {
        var $container = this._getGroupHeaderContainer();
        var groupCount = this._getGroupCount();
        var cellTemplates = [];
        if (groupCount) {
            var groupRows = this._makeGroupRows(this.option("groups"), this.option("groupByDate"));
            this._attachGroupCountClass();
            $container.append(groupRows.elements);
            cellTemplates = groupRows.cellTemplates
        } else {
            this._detachGroupCountClass()
        }
        return cellTemplates
    }
    _applyCellTemplates(templates) {
        null === templates || void 0 === templates ? void 0 : templates.forEach((function(template) {
            template()
        }))
    }
    _makeGroupRows(groups, groupByDate) {
        var tableCreatorStrategy = this._isVerticalGroupedWorkSpace() ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;
        return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {
            groupHeaderRowClass: _classes__WEBPACK_IMPORTED_MODULE_26__.GROUP_ROW_CLASS,
            groupRowClass: _classes__WEBPACK_IMPORTED_MODULE_26__.GROUP_ROW_CLASS,
            groupHeaderClass: this._getGroupHeaderClass.bind(this),
            groupHeaderContentClass: _classes__WEBPACK_IMPORTED_MODULE_26__.GROUP_HEADER_CONTENT_CLASS
        }, this._getCellCount() || 1, this.option("resourceCellTemplate"), this._getGroupCount(), groupByDate)
    }
    _renderDateHeader() {
        var container = this._getDateHeaderContainer();
        var $headerRow = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<tr>").addClass(HEADER_ROW_CLASS);
        var count = this._getCellCount();
        var cellTemplate = this._getDateHeaderTemplate();
        var repeatCount = this._getCalculateHeaderCellRepeatCount();
        var templateCallbacks = [];
        var groupByDate = this.isGroupedByDate();
        if (!groupByDate) {
            for (var rowIndex = 0; rowIndex < repeatCount; rowIndex++) {
                for (var columnIndex = 0; columnIndex < count; columnIndex++) {
                    var templateIndex = rowIndex * count + columnIndex;
                    this._renderDateHeaderTemplate($headerRow, columnIndex, templateIndex, cellTemplate, templateCallbacks)
                }
            }
            container.append($headerRow)
        } else {
            var colSpan = groupByDate ? this._getGroupCount() : 1;
            for (var _columnIndex = 0; _columnIndex < count; _columnIndex++) {
                var _templateIndex = _columnIndex * repeatCount;
                var cellElement = this._renderDateHeaderTemplate($headerRow, _columnIndex, _templateIndex, cellTemplate, templateCallbacks);
                cellElement.attr("colSpan", colSpan)
            }
            container.prepend($headerRow)
        }
        this._applyCellTemplates(templateCallbacks);
        return $headerRow
    }
    _renderDateHeaderTemplate(container, panelCellIndex, templateIndex, cellTemplate, templateCallbacks) {
        var validTemplateIndex = this.isGroupedByDate() ? Math.floor(templateIndex / this._getGroupCount()) : templateIndex;
        var completeDateHeaderMap = this.viewDataProvider.completeDateHeaderMap;
        var {
            text: text,
            startDate: date
        } = completeDateHeaderMap[completeDateHeaderMap.length - 1][validTemplateIndex];
        var $cell = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)("<th>").addClass(this._getHeaderPanelCellClass(panelCellIndex)).attr("title", text);
        if (null !== cellTemplate && void 0 !== cellTemplate && cellTemplate.render) {
            templateCallbacks.push(cellTemplate.render.bind(cellTemplate, {
                model: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
                    text: text,
                    date: date
                }, this._getGroupsForDateHeaderTemplate(templateIndex)),
                index: templateIndex,
                container: (0,_core_element__WEBPACK_IMPORTED_MODULE_7__.getPublicElement)($cell)
            }))
        } else {
            $cell.text(text)
        }
        container.append($cell);
        return $cell
    }
    _getGroupsForDateHeaderTemplate(templateIndex) {
        var indexMultiplier = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
        var groupIndex;
        var groups;
        if (this._isHorizontalGroupedWorkSpace() && !this.isGroupedByDate()) {
            groupIndex = this._getGroupIndex(0, templateIndex * indexMultiplier);
            var groupsArray = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_41__.getCellGroups)(groupIndex, this.option("groups"));
            groups = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_41__.getGroupsObjectFromGroupsArray)(groupsArray)
        }
        return {
            groups: groups,
            groupIndex: groupIndex
        }
    }
    _getHeaderPanelCellClass(i) {
        var cellClass = HEADER_PANEL_CELL_CLASS + " " + HORIZONTAL_SIZES_CLASS;
        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1, void 0, void 0, this.isGroupedByDate())
    }
    _renderAllDayPanel(index) {
        var cellCount = this._getCellCount();
        if (!this._isVerticalGroupedWorkSpace()) {
            cellCount *= this._getGroupCount() || 1
        }
        var cellTemplates = this._renderTableBody({
            container: this._allDayPanels.length ? (0,_core_element__WEBPACK_IMPORTED_MODULE_7__.getPublicElement)(this._allDayTables[index]) : (0,_core_element__WEBPACK_IMPORTED_MODULE_7__.getPublicElement)(this._$allDayTable),
            rowCount: 1,
            cellCount: cellCount,
            cellClass: this._getAllDayPanelCellClass.bind(this),
            rowClass: ALL_DAY_TABLE_ROW_CLASS,
            cellTemplate: this.option("dataCellTemplate"),
            getCellData: this._oldRender_getAllDayCellData(index),
            groupIndex: index
        }, true);
        this._toggleAllDayVisibility(true);
        this._applyCellTemplates(cellTemplates)
    }
    _renderGroupAllDayPanel() {
        if (this._isVerticalGroupedWorkSpace()) {
            var groupCount = this._getGroupCount();
            for (var i = 0; i < groupCount; i++) {
                this._renderAllDayPanel(i)
            }
        }
    }
    _getAllDayPanelCellClass(i, j) {
        var cellClass = ALL_DAY_TABLE_CELL_CLASS + " " + HORIZONTAL_SIZES_CLASS;
        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1)
    }
    _renderTimePanel() {
        var repeatCount = this._groupedStrategy.calculateTimeCellRepeatCount();
        var getData = (rowIndex, field) => {
            var allDayPanelsCount = 0;
            if (this.isAllDayPanelVisible) {
                allDayPanelsCount = 1
            }
            if (this.isGroupedAllDayPanel()) {
                allDayPanelsCount = Math.ceil((rowIndex + 1) / this._getRowCount())
            }
            var validRowIndex = rowIndex + allDayPanelsCount;
            return this.viewDataProvider.completeTimePanelMap[validRowIndex][field]
        };
        this._renderTableBody({
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_7__.getPublicElement)(this._$timePanel),
            rowCount: this._getTimePanelRowCount() * repeatCount,
            cellCount: 1,
            cellClass: this._getTimeCellClass.bind(this),
            rowClass: TIME_PANEL_ROW_CLASS,
            cellTemplate: this.option("timeCellTemplate"),
            getCellText: rowIndex => getData(rowIndex, "text"),
            getCellDate: rowIndex => getData(rowIndex, "startDate"),
            groupCount: this._getGroupCount(),
            allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0,
            getTemplateData: (rowIndex => {
                if (!this._isVerticalGroupedWorkSpace()) {
                    return {}
                }
                var groupIndex = this._getGroupIndex(rowIndex, 0);
                var groupsArray = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_41__.getCellGroups)(groupIndex, this.option("groups"));
                var groups = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_41__.getGroupsObjectFromGroupsArray)(groupsArray);
                return {
                    groupIndex: groupIndex,
                    groups: groups
                }
            }).bind(this)
        })
    }
    _getTimeCellClass(i) {
        var cellClass = TIME_PANEL_CELL_CLASS + " " + VERTICAL_SIZES_CLASS;
        return this._isVerticalGroupedWorkSpace() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i, i) : cellClass
    }
    _renderDateTable() {
        var groupCount = this._getGroupCount();
        this._renderTableBody({
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_7__.getPublicElement)(this._$dateTable),
            rowCount: this._getTotalRowCount(groupCount),
            cellCount: this._getTotalCellCount(groupCount),
            cellClass: this._getDateTableCellClass.bind(this),
            rowClass: _classes__WEBPACK_IMPORTED_MODULE_26__.DATE_TABLE_ROW_CLASS,
            cellTemplate: this.option("dataCellTemplate"),
            getCellData: (_, rowIndex, columnIndex) => {
                var isGroupedAllDayPanel = this.isGroupedAllDayPanel();
                var validRowIndex = rowIndex;
                if (isGroupedAllDayPanel) {
                    var rowCount = this._getRowCount();
                    var allDayPanelsCount = Math.ceil(rowIndex / rowCount);
                    validRowIndex += allDayPanelsCount
                }
                var cellData = this.viewDataProvider.viewDataMap.dateTableMap[validRowIndex][columnIndex].cellData;
                return {
                    value: this._filterCellDataFields(cellData),
                    fullValue: cellData,
                    key: CELL_DATA
                }
            },
            allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayPanels : void 0,
            groupCount: groupCount,
            groupByDate: this.option("groupByDate")
        })
    }
    _insertAllDayRowsIntoDateTable() {
        return this._groupedStrategy.insertAllDayRowsIntoDateTable()
    }
    _renderTableBody(options, delayCellTemplateRendering) {
        var result = [];
        if (!delayCellTemplateRendering) {
            this._applyCellTemplates(tableCreator.makeTable(options))
        } else {
            result = tableCreator.makeTable(options)
        }
        return result
    }
}
var createDragBehaviorConfig = (container, rootElement, isDefaultDraggingMode, dragBehavior, enableDefaultDragging, disableDefaultDragging, getDroppableCell, getDateTables, removeDroppableCellClass, getCellWidth, options) => {
    var state = {
        dragElement: void 0,
        itemData: void 0
    };
    var isItemDisabled = () => {
        var {
            itemData: itemData
        } = state;
        if (itemData) {
            var getter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_44__.compileGetter)("disabled");
            return getter(itemData)
        }
        return true
    };
    var cursorOffset = options.isSetCursorOffset ? () => {
        var $dragElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(state.dragElement);
        return {
            x: (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getWidth)($dragElement) / 2,
            y: (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getHeight)($dragElement) / 2
        }
    } : void 0;
    return {
        container: container,
        dragTemplate: () => state.dragElement,
        onDragStart: e => {
            if (!isDefaultDraggingMode) {
                disableDefaultDragging()
            }
            var canceled = e.cancel;
            var event = e.event;
            var $itemElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(e.itemElement);
            var appointments = e.component._appointments;
            state.itemData = options.getItemData(e.itemElement, appointments);
            var settings = options.getItemSettings($itemElement, e);
            var initialPosition = options.initialPosition;
            if (!isItemDisabled()) {
                event.data = event.data || {};
                if (!canceled) {
                    if (!settings.isCompact) {
                        dragBehavior.updateDragSource(state.itemData, settings)
                    }
                    state.dragElement = ((itemData, settings, appointments) => {
                        var appointmentIndex = appointments.option("items").length;
                        settings.isCompact = false;
                        settings.virtual = false;
                        var items = appointments._renderItem(appointmentIndex, {
                            itemData: itemData,
                            settings: [settings]
                        });
                        return items[0]
                    })(state.itemData, settings, appointments);
                    event.data.itemElement = state.dragElement;
                    event.data.initialPosition = null !== initialPosition && void 0 !== initialPosition ? initialPosition : (0,_animation_translator__WEBPACK_IMPORTED_MODULE_28__.locate)((0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(state.dragElement));
                    event.data.itemData = state.itemData;
                    event.data.itemSettings = settings;
                    dragBehavior.onDragStart(event.data);
                    (0,_animation_translator__WEBPACK_IMPORTED_MODULE_28__.resetPosition)((0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(state.dragElement))
                }
            }
        },
        onDragMove: () => {
            if (isDefaultDraggingMode) {
                return
            }
            var elements = (() => {
                var appointmentWidth = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getWidth)(state.dragElement);
                var cellWidth = getCellWidth();
                var isWideAppointment = appointmentWidth > cellWidth;
                var isNarrowAppointment = appointmentWidth <= DRAGGING_MOUSE_FAULT;
                var dragElementContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(state.dragElement).parent();
                var boundingRect = (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(dragElementContainer.get(0));
                var newX = boundingRect.left;
                var newY = boundingRect.top;
                if (isWideAppointment) {
                    return _core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__.default.elementsFromPoint(newX + DRAGGING_MOUSE_FAULT, newY + DRAGGING_MOUSE_FAULT)
                } else if (isNarrowAppointment) {
                    return _core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__.default.elementsFromPoint(newX, newY)
                }
                return _core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__.default.elementsFromPoint(newX + appointmentWidth / 2, newY + DRAGGING_MOUSE_FAULT)
            })();
            var isMoveUnderControl = !!elements.find(el => el === rootElement.get(0));
            var dateTables = getDateTables();
            var droppableCell = elements.find(el => {
                var classList = el.classList;
                var isCurrentSchedulerElement = 1 === dateTables.find(el).length;
                return isCurrentSchedulerElement && (classList.contains(DATE_TABLE_CELL_CLASS) || classList.contains(ALL_DAY_TABLE_CELL_CLASS))
            });
            if (droppableCell) {
                if (!getDroppableCell().is(droppableCell)) {
                    removeDroppableCellClass()
                }
                (0,_core_renderer__WEBPACK_IMPORTED_MODULE_2__.default)(droppableCell).addClass(DATE_TABLE_DROPPABLE_CELL_CLASS)
            } else if (!isMoveUnderControl) {
                removeDroppableCellClass()
            }
        },
        onDragEnd: e => {
            var _state$dragElement;
            if (!isDefaultDraggingMode) {
                enableDefaultDragging()
            }
            if (!isItemDisabled()) {
                dragBehavior.onDragEnd(e)
            }
            null === (_state$dragElement = state.dragElement) || void 0 === _state$dragElement ? void 0 : _state$dragElement.remove();
            removeDroppableCellClass()
        },
        cursorOffset: cursorOffset,
        filter: options.filter
    }
};
/* harmony default export */ __webpack_exports__["default"] = (SchedulerWorkSpace);


/***/ }),

/***/ 69681:
/*!********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space_day.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ 27895);
/* harmony import */ var _ui_scheduler_work_space_vertical__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui.scheduler.work_space_vertical */ 34262);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_day.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var DAY_CLASS = "dx-scheduler-work-space-day";
class SchedulerWorkSpaceDay extends _ui_scheduler_work_space_vertical__WEBPACK_IMPORTED_MODULE_2__.default {
    get type() {
        return _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.DAY
    }
    _getElementClass() {
        return DAY_CLASS
    }
    _renderDateHeader() {
        return 1 === this.option("intervalCount") ? null : super._renderDateHeader()
    }
    renderRHeaderPanel() {
        if (1 === this.option("intervalCount")) {
            super.renderRHeaderPanel(false)
        } else {
            super.renderRHeaderPanel(true)
        }
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxSchedulerWorkSpaceDay", SchedulerWorkSpaceDay);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerWorkSpaceDay);


/***/ }),

/***/ 23645:
/*!**********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space_month.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/common */ 37552);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _ui_scheduler_work_space_indicator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui.scheduler.work_space.indicator */ 4507);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/utils/date */ 35341);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/utils/position */ 9622);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils */ 56943);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/utils/window */ 88684);
/* harmony import */ var _renovation_ui_scheduler_workspaces_month_date_table_layout_j__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/workspaces/month/date_table/layout.j */ 93335);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/month */ 35189);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../constants */ 27895);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_month.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */












var MONTH_CLASS = "dx-scheduler-work-space-month";
var DATE_TABLE_CURRENT_DATE_CLASS = "dx-scheduler-date-table-current-date";
var DATE_TABLE_CELL_TEXT_CLASS = "dx-scheduler-date-table-cell-text";
var DATE_TABLE_FIRST_OF_MONTH_CLASS = "dx-scheduler-date-table-first-of-month";
var DATE_TABLE_OTHER_MONTH_DATE_CLASS = "dx-scheduler-date-table-other-month";
var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.dateToMilliseconds;
class SchedulerWorkSpaceMonth extends _ui_scheduler_work_space_indicator__WEBPACK_IMPORTED_MODULE_3__.default {
    get type() {
        return _constants__WEBPACK_IMPORTED_MODULE_11__.VIEWS.MONTH
    }
    _getElementClass() {
        return MONTH_CLASS
    }
    _getFormat() {
        return _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_10__.formatWeekday
    }
    _getIntervalBetween(currentDate) {
        var firstViewDate = this.getStartViewDate();
        var timeZoneOffset = _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.getTimezonesDifference(firstViewDate, currentDate);
        return currentDate.getTime() - (firstViewDate.getTime() - 36e5 * this.option("startDayHour")) - timeZoneOffset
    }
    _getDateGenerationOptions() {
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, super._getDateGenerationOptions(), {
            cellCountInDay: 1
        })
    }
    getCellWidth() {
        return this.cache.get("cellWidth", () => {
            var averageWidth = 0;
            var cells = this._getCells().slice(0, 7);
            cells.each((index, element) => {
                averageWidth += (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_7__.hasWindow)() ? (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_5__.getBoundingRect)(element).width : 0
            });
            return 0 === cells.length ? void 0 : averageWidth / 7
        })
    }
    _insertAllDayRowsIntoDateTable() {
        return false
    }
    _getCellCoordinatesByIndex(index) {
        var rowIndex = Math.floor(index / this._getCellCount());
        var columnIndex = index - this._getCellCount() * rowIndex;
        return {
            rowIndex: rowIndex,
            columnIndex: columnIndex
        }
    }
    _needCreateCrossScrolling() {
        return this.option("crossScrollingEnabled") || this._isVerticalGroupedWorkSpace()
    }
    _getViewStartByOptions() {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_9__.getViewStartByOptions)(this.option("startDate"), this.option("currentDate"), this.option("intervalCount"), _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.getFirstMonthDate(this.option("startDate")))
    }
    _updateIndex(index) {
        return index
    }
    isIndicationAvailable() {
        return false
    }
    getIntervalDuration() {
        return toMs("day")
    }
    getTimePanelWidth() {
        return 0
    }
    supportAllDayRow() {
        return false
    }
    keepOriginalHours() {
        return true
    }
    getWorkSpaceLeftOffset() {
        return 0
    }
    needApplyCollectorOffset() {
        return true
    }
    _getHeaderDate() {
        return this._getViewStartByOptions()
    }
    scrollToTime() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_1__.noop)()
    }
    renderRAllDayPanel() {}
    renderRTimeTable() {}
    renderRDateTable() {
        _utils__WEBPACK_IMPORTED_MODULE_6__.utils.renovation.renderComponent(this, this._$dateTable, _renovation_ui_scheduler_workspaces_month_date_table_layout_j__WEBPACK_IMPORTED_MODULE_8__.default, "renovatedDateTable", this._getRDateTableProps())
    }
    _createWorkSpaceElements() {
        if (this._isVerticalGroupedWorkSpace()) {
            this._createWorkSpaceScrollableElements()
        } else {
            super._createWorkSpaceElements()
        }
    }
    _toggleAllDayVisibility() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_1__.noop)()
    }
    _changeAllDayVisibility() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_1__.noop)()
    }
    _renderTimePanel() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_1__.noop)()
    }
    _renderAllDayPanel() {
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_1__.noop)()
    }
    _setMonthClassesToCell($cell, data) {
        $cell.toggleClass(DATE_TABLE_CURRENT_DATE_CLASS, data.isCurrentDate).toggleClass(DATE_TABLE_FIRST_OF_MONTH_CLASS, data.firstDayOfMonth).toggleClass(DATE_TABLE_OTHER_MONTH_DATE_CLASS, data.otherMonth)
    }
    _createAllDayPanelElements() {}
    _renderTableBody(options) {
        options.getCellText = (rowIndex, columnIndex) => {
            var date = this.viewDataProvider.completeViewDataMap[rowIndex][columnIndex].startDate;
            return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_9__.getCellText)(date, this.option("intervalCount"))
        };
        options.getCellTextClass = DATE_TABLE_CELL_TEXT_CLASS;
        options.setAdditionalClasses = this._setMonthClassesToCell.bind(this), super._renderTableBody(options)
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_2__.default)("dxSchedulerWorkSpaceMonth", SchedulerWorkSpaceMonth);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerWorkSpaceMonth);


/***/ }),

/***/ 34262:
/*!*************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space_vertical.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _ui_scheduler_work_space_indicator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ui.scheduler.work_space.indicator */ 4507);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_vertical.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



class SchedulerWorkspaceVertical extends _ui_scheduler_work_space_indicator__WEBPACK_IMPORTED_MODULE_1__.default {
    _getFormat() {
        return _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.formatWeekdayAndDay
    }
    generateRenderOptions() {
        var options = super.generateRenderOptions();
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, options, {
            isGenerateTimePanelData: true
        })
    }
    _isRenderHeaderPanelEmptyCell() {
        return true
    }
}
/* harmony default export */ __webpack_exports__["default"] = (SchedulerWorkspaceVertical);


/***/ }),

/***/ 60188:
/*!*********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space_week.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ 27895);
/* harmony import */ var _ui_scheduler_work_space_vertical__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui.scheduler.work_space_vertical */ 34262);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/week */ 12871);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_week.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var WEEK_CLASS = "dx-scheduler-work-space-week";
class SchedulerWorkSpaceWeek extends _ui_scheduler_work_space_vertical__WEBPACK_IMPORTED_MODULE_2__.default {
    get type() {
        return _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.WEEK
    }
    _getElementClass() {
        return WEEK_CLASS
    }
    _calculateViewStartDate() {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_3__.calculateViewStartDate)(this.option("startDate"), this._firstDayOfWeek())
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxSchedulerWorkSpaceWeek", SchedulerWorkSpaceWeek);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerWorkSpaceWeek);


/***/ }),

/***/ 44040:
/*!**************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.work_space_work_week.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/component_registrator */ 2382);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/work_week */ 95984);
/* harmony import */ var _ui_scheduler_work_space_week__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui.scheduler.work_space_week */ 60188);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ 27895);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.work_space_work_week.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */




var WORK_WEEK_CLASS = "dx-scheduler-work-space-work-week";
class SchedulerWorkSpaceWorkWeek extends _ui_scheduler_work_space_week__WEBPACK_IMPORTED_MODULE_2__.default {
    get type() {
        return _constants__WEBPACK_IMPORTED_MODULE_3__.VIEWS.WORK_WEEK
    }
    constructor() {
        super(...arguments);
        this._getWeekendsCount = _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_1__.getWeekendsCount
    }
    _getElementClass() {
        return WORK_WEEK_CLASS
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxSchedulerWorkSpaceWorkWeek", SchedulerWorkSpaceWorkWeek);
/* harmony default export */ __webpack_exports__["default"] = (SchedulerWorkSpaceWorkWeek);


/***/ }),

/***/ 23565:
/*!******************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/date_header_data_generator.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DateHeaderDataGenerator": function() { return /* binding */ DateHeaderDataGenerator; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../__internal/scheduler/resources/m_utils */ 48025);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/date_header_data_generator.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["startDate", "endDate", "isFirstGroupCell", "isLastGroupCell"];



class DateHeaderDataGenerator {
    constructor(viewDataGenerator) {
        this._viewDataGenerator = viewDataGenerator
    }
    getCompleteDateHeaderMap(options, completeViewDataMap) {
        var {
            isGenerateWeekDaysHeaderData: isGenerateWeekDaysHeaderData
        } = options;
        var result = [];
        if (isGenerateWeekDaysHeaderData) {
            var weekDaysRow = this._generateWeekDaysHeaderRowMap(options, completeViewDataMap);
            result.push(weekDaysRow)
        }
        var dateRow = this._generateHeaderDateRow(options, completeViewDataMap);
        result.push(dateRow);
        return result
    }
    _generateWeekDaysHeaderRowMap(options, completeViewDataMap) {
        var {
            isGroupedByDate: isGroupedByDate,
            groups: groups,
            groupOrientation: groupOrientation,
            startDayHour: startDayHour,
            endDayHour: endDayHour,
            hoursInterval: hoursInterval,
            isHorizontalGrouping: isHorizontalGrouping,
            intervalCount: intervalCount
        } = options;
        var cellCountInDay = this._viewDataGenerator.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
        var horizontalGroupCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getHorizontalGroupCount)(groups, groupOrientation);
        var index = completeViewDataMap[0][0].allDay ? 1 : 0;
        var colSpan = isGroupedByDate ? horizontalGroupCount * cellCountInDay : cellCountInDay;
        var groupCount = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_3__.getGroupCount)(groups);
        var datesRepeatCount = isHorizontalGrouping && !isGroupedByDate ? groupCount : 1;
        var daysInGroup = this._viewDataGenerator.daysInInterval * intervalCount;
        var daysInView = daysInGroup * datesRepeatCount;
        var weekDaysRow = [];
        for (var dayIndex = 0; dayIndex < daysInView; dayIndex += 1) {
            var cell = completeViewDataMap[index][dayIndex * colSpan];
            weekDaysRow.push((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, cell, {
                colSpan: colSpan,
                text: (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.formatWeekdayAndDay)(cell.startDate),
                isFirstGroupCell: false,
                isLastGroupCell: false
            }))
        }
        return weekDaysRow
    }
    _generateHeaderDateRow(options, completeViewDataMap) {
        var {
            today: today,
            isGroupedByDate: isGroupedByDate,
            groupOrientation: groupOrientation,
            groups: groups,
            headerCellTextFormat: headerCellTextFormat,
            getDateForHeaderText: getDateForHeaderText,
            interval: interval,
            startViewDate: startViewDate,
            startDayHour: startDayHour,
            endDayHour: endDayHour,
            hoursInterval: hoursInterval,
            intervalCount: intervalCount,
            currentDate: currentDate,
            viewType: viewType
        } = options;
        var horizontalGroupCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getHorizontalGroupCount)(groups, groupOrientation);
        var index = completeViewDataMap[0][0].allDay ? 1 : 0;
        var colSpan = isGroupedByDate ? horizontalGroupCount : 1;
        var isVerticalGrouping = "vertical" === groupOrientation;
        var cellCountInGroupRow = this._viewDataGenerator.getCellCount({
            intervalCount: intervalCount,
            currentDate: currentDate,
            viewType: viewType,
            hoursInterval: hoursInterval,
            startDayHour: startDayHour,
            endDayHour: endDayHour
        });
        var cellCountInDay = this._viewDataGenerator.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
        var slicedByColumnsData = isGroupedByDate ? completeViewDataMap[index].filter((_, columnIndex) => columnIndex % horizontalGroupCount === 0) : completeViewDataMap[index];
        return slicedByColumnsData.map((_ref, index) => {
            var {
                startDate: startDate,
                isFirstGroupCell: isFirstGroupCell,
                isLastGroupCell: isLastGroupCell
            } = _ref, restProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_ref, _excluded);
            var text = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getHeaderCellText)(index % cellCountInGroupRow, startDate, headerCellTextFormat, getDateForHeaderText, {
                interval: interval,
                startViewDate: startViewDate,
                startDayHour: startDayHour,
                cellCountInDay: cellCountInDay
            });
            return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__.default)({}, restProps, {
                startDate: startDate,
                text: text,
                today: _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.sameDate(startDate, today),
                colSpan: colSpan,
                isFirstGroupCell: isGroupedByDate || isFirstGroupCell && !isVerticalGrouping,
                isLastGroupCell: isGroupedByDate || isLastGroupCell && !isVerticalGrouping
            })
        })
    }
    generateDateHeaderData(completeDateHeaderMap, completeViewDataMap, options) {
        var {
            isGenerateWeekDaysHeaderData: isGenerateWeekDaysHeaderData,
            cellWidth: cellWidth,
            isProvideVirtualCellsWidth: isProvideVirtualCellsWidth,
            startDayHour: startDayHour,
            endDayHour: endDayHour,
            hoursInterval: hoursInterval,
            isMonthDateHeader: isMonthDateHeader
        } = options;
        var dataMap = [];
        var weekDayRowConfig = {};
        var validCellWidth = cellWidth || 0;
        if (isGenerateWeekDaysHeaderData) {
            weekDayRowConfig = this._generateDateHeaderDataRow(options, completeDateHeaderMap, completeViewDataMap, this._viewDataGenerator.getCellCountInDay(startDayHour, endDayHour, hoursInterval), 0, validCellWidth);
            dataMap.push(weekDayRowConfig.dateRow)
        }
        var datesRowConfig = this._generateDateHeaderDataRow(options, completeDateHeaderMap, completeViewDataMap, 1, isGenerateWeekDaysHeaderData ? 1 : 0, validCellWidth);
        dataMap.push(datesRowConfig.dateRow);
        return {
            dataMap: dataMap,
            leftVirtualCellWidth: isProvideVirtualCellsWidth ? datesRowConfig.leftVirtualCellWidth : void 0,
            rightVirtualCellWidth: isProvideVirtualCellsWidth ? datesRowConfig.rightVirtualCellWidth : void 0,
            leftVirtualCellCount: datesRowConfig.leftVirtualCellCount,
            rightVirtualCellCount: datesRowConfig.rightVirtualCellCount,
            weekDayLeftVirtualCellWidth: weekDayRowConfig.leftVirtualCellWidth,
            weekDayRightVirtualCellWidth: weekDayRowConfig.rightVirtualCellWidth,
            weekDayLeftVirtualCellCount: weekDayRowConfig.leftVirtualCellCount,
            weekDayRightVirtualCellCount: weekDayRowConfig.rightVirtualCellCount,
            isMonthDateHeader: isMonthDateHeader
        }
    }
    _generateDateHeaderDataRow(options, completeDateHeaderMap, completeViewDataMap, baseColSpan, rowIndex, cellWidth) {
        var {
            startCellIndex: startCellIndex,
            cellCount: cellCount,
            isProvideVirtualCellsWidth: isProvideVirtualCellsWidth,
            groups: groups,
            groupOrientation: groupOrientation,
            isGroupedByDate: isGroupedByDate
        } = options;
        var horizontalGroupCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getHorizontalGroupCount)(groups, groupOrientation);
        var colSpan = isGroupedByDate ? horizontalGroupCount * baseColSpan : baseColSpan;
        var leftVirtualCellCount = Math.floor(startCellIndex / colSpan);
        var displayedCellCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getDisplayedCellCount)(cellCount, completeViewDataMap);
        var actualCellCount = Math.ceil((startCellIndex + displayedCellCount) / colSpan);
        var totalCellCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getTotalCellCountByCompleteData)(completeViewDataMap);
        var dateRow = completeDateHeaderMap[rowIndex].slice(leftVirtualCellCount, actualCellCount);
        var finalLeftVirtualCellCount = leftVirtualCellCount * colSpan;
        var finalLeftVirtualCellWidth = finalLeftVirtualCellCount * cellWidth;
        var finalRightVirtualCellCount = totalCellCount - actualCellCount * colSpan;
        var finalRightVirtualCellWidth = finalRightVirtualCellCount * cellWidth;
        return {
            dateRow: dateRow,
            leftVirtualCellCount: finalLeftVirtualCellCount,
            leftVirtualCellWidth: isProvideVirtualCellsWidth ? finalLeftVirtualCellWidth : void 0,
            rightVirtualCellCount: finalRightVirtualCellCount,
            rightVirtualCellWidth: isProvideVirtualCellsWidth ? finalRightVirtualCellWidth : void 0
        }
    }
}


/***/ }),

/***/ 46752:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/grouped_data_map_provider.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GroupedDataMapProvider": function() { return /* binding */ GroupedDataMapProvider; }
/* harmony export */ });
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/grouped_data_map_provider.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class GroupedDataMapProvider {
    constructor(viewDataGenerator, viewDataMap, completeViewDataMap, viewOptions) {
        this.groupedDataMap = viewDataGenerator.generateGroupedDataMap(viewDataMap);
        this.completeViewDataMap = completeViewDataMap;
        this._viewOptions = viewOptions
    }
    getGroupStartDate(groupIndex) {
        var firstRow = this.getFirstGroupRow(groupIndex);
        if (firstRow) {
            var {
                startDate: startDate
            } = firstRow[0].cellData;
            return startDate
        }
    }
    getGroupEndDate(groupIndex) {
        var lastRow = this.getLastGroupRow(groupIndex);
        if (lastRow) {
            var lastColumnIndex = lastRow.length - 1;
            var {
                cellData: cellData
            } = lastRow[lastColumnIndex];
            var {
                endDate: endDate
            } = cellData;
            return endDate
        }
    }
    findGroupCellStartDate(groupIndex, startDate, endDate, isFindByDate) {
        var groupData = this.getGroupFromDateTableGroupMap(groupIndex);
        var checkCellStartDate = (rowIndex, columnIndex) => {
            var {
                cellData: cellData
            } = groupData[rowIndex][columnIndex];
            var {
                startDate: secondMin,
                endDate: secondMax
            } = cellData;
            if (isFindByDate) {
                secondMin = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(secondMin);
                secondMax = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.setToDayEnd(secondMin)
            }
            if (_core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.intervalsOverlap({
                    firstMin: startDate,
                    firstMax: endDate,
                    secondMin: secondMin,
                    secondMax: secondMax
                })) {
                return secondMin
            }
        };
        var startDateVerticalSearch = (() => {
            var cellCount = groupData[0].length;
            for (var columnIndex = 0; columnIndex < cellCount; ++columnIndex) {
                for (var rowIndex = 0; rowIndex < groupData.length; ++rowIndex) {
                    var result = checkCellStartDate(rowIndex, columnIndex);
                    if (result) {
                        return result
                    }
                }
            }
        })();
        var startDateHorizontalSearch = (() => {
            for (var rowIndex = 0; rowIndex < groupData.length; ++rowIndex) {
                var row = groupData[rowIndex];
                for (var columnIndex = 0; columnIndex < row.length; ++columnIndex) {
                    var result = checkCellStartDate(rowIndex, columnIndex);
                    if (result) {
                        return result
                    }
                }
            }
        })();
        return startDateVerticalSearch > startDateHorizontalSearch ? startDateHorizontalSearch : startDateVerticalSearch
    }
    findAllDayGroupCellStartDate(groupIndex, startDate) {
        var groupStartDate = this.getGroupStartDate(groupIndex);
        return groupStartDate > startDate ? groupStartDate : startDate
    }
    findCellPositionInMap(cellInfo) {
        var {
            groupIndex: groupIndex,
            startDate: startDate,
            isAllDay: isAllDay,
            index: index
        } = cellInfo;
        var startTime = isAllDay ? _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(startDate).getTime() : startDate.getTime();
        var isStartDateInCell = cellData => {
            if (!(0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__.isDateAndTimeView)(this._viewOptions.viewType)) {
                return _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.sameDate(startDate, cellData.startDate)
            }
            var cellStartTime = cellData.startDate.getTime();
            var cellEndTime = cellData.endDate.getTime();
            return isAllDay ? cellData.allDay && startTime >= cellStartTime && startTime <= cellEndTime : startTime >= cellStartTime && startTime < cellEndTime
        };
        var {
            allDayPanelGroupedMap: allDayPanelGroupedMap,
            dateTableGroupedMap: dateTableGroupedMap
        } = this.groupedDataMap;
        var rows = isAllDay && !this._viewOptions.isVerticalGrouping ? allDayPanelGroupedMap[groupIndex] ? [allDayPanelGroupedMap[groupIndex]] : [] : dateTableGroupedMap[groupIndex] || [];
        for (var rowIndex = 0; rowIndex < rows.length; ++rowIndex) {
            var row = rows[rowIndex];
            for (var columnIndex = 0; columnIndex < row.length; ++columnIndex) {
                var cell = row[columnIndex];
                var {
                    cellData: cellData
                } = cell;
                if (this._isSameGroupIndexAndIndex(cellData, groupIndex, index)) {
                    if (isStartDateInCell(cellData)) {
                        return cell.position
                    }
                }
            }
        }
        return
    }
    _isSameGroupIndexAndIndex(cellData, groupIndex, index) {
        return cellData.groupIndex === groupIndex && (void 0 === index || cellData.index === index)
    }
    getCellsGroup(groupIndex) {
        var {
            dateTableGroupedMap: dateTableGroupedMap
        } = this.groupedDataMap;
        var groupData = dateTableGroupedMap[groupIndex];
        if (groupData) {
            var {
                cellData: cellData
            } = groupData[0][0];
            return cellData.groups
        }
    }
    getCompletedGroupsInfo() {
        var {
            dateTableGroupedMap: dateTableGroupedMap
        } = this.groupedDataMap;
        return dateTableGroupedMap.map(groupData => {
            var firstCell = groupData[0][0];
            var {
                allDay: allDay,
                groupIndex: groupIndex
            } = firstCell.cellData;
            return {
                allDay: allDay,
                groupIndex: groupIndex,
                startDate: this.getGroupStartDate(groupIndex),
                endDate: this.getGroupEndDate(groupIndex)
            }
        }).filter(_ref => {
            var {
                startDate: startDate
            } = _ref;
            return !!startDate
        })
    }
    getGroupIndices() {
        return this.getCompletedGroupsInfo().map(_ref2 => {
            var {
                groupIndex: groupIndex
            } = _ref2;
            return groupIndex
        })
    }
    getGroupFromDateTableGroupMap(groupIndex) {
        var {
            dateTableGroupedMap: dateTableGroupedMap
        } = this.groupedDataMap;
        return dateTableGroupedMap[groupIndex]
    }
    getFirstGroupRow(groupIndex) {
        var groupedData = this.getGroupFromDateTableGroupMap(groupIndex);
        if (groupedData) {
            var {
                cellData: cellData
            } = groupedData[0][0];
            return !cellData.allDay ? groupedData[0] : groupedData[1]
        }
    }
    getLastGroupRow(groupIndex) {
        var {
            dateTableGroupedMap: dateTableGroupedMap
        } = this.groupedDataMap;
        var groupedData = dateTableGroupedMap[groupIndex];
        if (groupedData) {
            var lastRowIndex = groupedData.length - 1;
            return groupedData[lastRowIndex]
        }
    }
    getLastGroupCellPosition(groupIndex) {
        var groupRow = this.getLastGroupRow(groupIndex);
        return null === groupRow || void 0 === groupRow ? void 0 : groupRow[(null === groupRow || void 0 === groupRow ? void 0 : groupRow.length) - 1].position
    }
    getRowCountInGroup(groupIndex) {
        var groupRow = this.getLastGroupRow(groupIndex);
        var cellAmount = groupRow.length;
        var lastCellData = groupRow[cellAmount - 1].cellData;
        var lastCellIndex = lastCellData.index;
        return (lastCellIndex + 1) / groupRow.length
    }
}


/***/ }),

/***/ 69682:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/time_panel_data_generator.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimePanelDataGenerator": function() { return /* binding */ TimePanelDataGenerator; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/workspaces/utils */ 59016);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/week */ 12871);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/time_panel_data_generator.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["allDay", "startDate", "endDate", "groups", "groupIndex", "isFirstGroupCell", "isLastGroupCell", "index"];



class TimePanelDataGenerator {
    constructor(viewDataGenerator) {
        this._viewDataGenerator = viewDataGenerator
    }
    getCompleteTimePanelMap(options, completeViewDataMap) {
        var {
            startViewDate: startViewDate,
            cellDuration: cellDuration,
            startDayHour: startDayHour,
            isVerticalGrouping: isVerticalGrouping,
            intervalCount: intervalCount,
            currentDate: currentDate,
            viewType: viewType,
            hoursInterval: hoursInterval,
            endDayHour: endDayHour
        } = options;
        var rowCountInGroup = this._viewDataGenerator.getRowCount({
            intervalCount: intervalCount,
            currentDate: currentDate,
            viewType: viewType,
            hoursInterval: hoursInterval,
            startDayHour: startDayHour,
            endDayHour: endDayHour
        });
        var cellCountInGroupRow = this._viewDataGenerator.getCellCount({
            intervalCount: intervalCount,
            currentDate: currentDate,
            viewType: viewType,
            hoursInterval: hoursInterval,
            startDayHour: startDayHour,
            endDayHour: endDayHour
        });
        var allDayRowsCount = 0;
        return completeViewDataMap.map((row, index) => {
            var _row$ = row[0],
                {
                    allDay: allDay,
                    startDate: startDate,
                    groups: groups,
                    groupIndex: groupIndex,
                    isFirstGroupCell: isFirstGroupCell,
                    isLastGroupCell: isLastGroupCell,
                    index: cellIndex
                } = _row$,
                restCellProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_row$, _excluded);
            if (allDay) {
                allDayRowsCount += 1
            }
            var timeIndex = (index - allDayRowsCount) % rowCountInGroup;
            return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, restCellProps, {
                startDate: startDate,
                allDay: allDay,
                text: (0,_renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_4__.getTimePanelCellText)(timeIndex, startDate, startViewDate, cellDuration, startDayHour),
                groups: isVerticalGrouping ? groups : void 0,
                groupIndex: isVerticalGrouping ? groupIndex : void 0,
                isFirstGroupCell: isVerticalGrouping && isFirstGroupCell,
                isLastGroupCell: isVerticalGrouping && isLastGroupCell,
                index: Math.floor(cellIndex / cellCountInGroupRow)
            })
        })
    }
    generateTimePanelData(completeTimePanelMap, options) {
        var {
            startRowIndex: startRowIndex,
            rowCount: rowCount,
            topVirtualRowHeight: topVirtualRowHeight,
            bottomVirtualRowHeight: bottomVirtualRowHeight,
            isGroupedAllDayPanel: isGroupedAllDayPanel,
            isVerticalGrouping: isVerticalGrouping,
            isAllDayPanelVisible: isAllDayPanelVisible
        } = options;
        var indexDifference = isVerticalGrouping || !isAllDayPanelVisible ? 0 : 1;
        var correctedStartRowIndex = startRowIndex + indexDifference;
        var displayedRowCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__.getDisplayedRowCount)(rowCount, completeTimePanelMap);
        var timePanelMap = completeTimePanelMap.slice(correctedStartRowIndex, correctedStartRowIndex + displayedRowCount);
        var timePanelData = {
            topVirtualRowHeight: topVirtualRowHeight,
            bottomVirtualRowHeight: bottomVirtualRowHeight,
            isGroupedAllDayPanel: isGroupedAllDayPanel
        };
        var {
            previousGroupedData: groupedData
        } = this._generateTimePanelDataFromMap(timePanelMap, isVerticalGrouping);
        timePanelData.groupedData = groupedData;
        return timePanelData
    }
    _generateTimePanelDataFromMap(timePanelMap, isVerticalGrouping) {
        return timePanelMap.reduce((_ref, cellData) => {
            var {
                previousGroupIndex: previousGroupIndex,
                previousGroupedData: previousGroupedData
            } = _ref;
            var currentGroupIndex = cellData.groupIndex;
            if (currentGroupIndex !== previousGroupIndex) {
                previousGroupedData.push({
                    dateTable: [],
                    isGroupedAllDayPanel: (0,_renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_2__.getIsGroupedAllDayPanel)(!!cellData.allDay, isVerticalGrouping),
                    groupIndex: currentGroupIndex,
                    key: (0,_renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_2__.getKeyByGroup)(currentGroupIndex, isVerticalGrouping)
                })
            }
            if (cellData.allDay) {
                previousGroupedData[previousGroupedData.length - 1].allDayPanel = cellData
            } else {
                previousGroupedData[previousGroupedData.length - 1].dateTable.push(cellData)
            }
            return {
                previousGroupIndex: currentGroupIndex,
                previousGroupedData: previousGroupedData
            }
        }, {
            previousGroupIndex: -1,
            previousGroupedData: []
        })
    }
}


/***/ }),

/***/ 96929:
/*!*********************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/utils.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getViewDataGeneratorByViewType": function() { return /* binding */ getViewDataGeneratorByViewType; },
/* harmony export */   "alignToFirstDayOfWeek": function() { return /* binding */ alignToFirstDayOfWeek; },
/* harmony export */   "alignToLastDayOfWeek": function() { return /* binding */ alignToLastDayOfWeek; },
/* harmony export */   "calculateDaysBetweenDates": function() { return /* binding */ calculateDaysBetweenDates; },
/* harmony export */   "calculateAlignedWeeksBetweenDates": function() { return /* binding */ calculateAlignedWeeksBetweenDates; }
/* harmony export */ });
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ 27895);
/* harmony import */ var _view_data_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view_data_generator */ 19168);
/* harmony import */ var _view_data_generator_day__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view_data_generator_day */ 30952);
/* harmony import */ var _view_data_generator_month__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./view_data_generator_month */ 3014);
/* harmony import */ var _view_data_generator_timeline_month__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./view_data_generator_timeline_month */ 27023);
/* harmony import */ var _view_data_generator_week__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./view_data_generator_week */ 8219);
/* harmony import */ var _view_data_generator_work_week__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./view_data_generator_work_week */ 63076);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */








var DAYS_IN_WEEK = 7;
var MS_IN_DAY = 864e5;
var getViewDataGeneratorByViewType = viewType => {
    switch (viewType) {
        case _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.MONTH:
            return new _view_data_generator_month__WEBPACK_IMPORTED_MODULE_4__.ViewDataGeneratorMonth;
        case _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_MONTH:
            return new _view_data_generator_timeline_month__WEBPACK_IMPORTED_MODULE_5__.ViewDataGeneratorTimelineMonth;
        case _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.DAY:
        case _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_DAY:
            return new _view_data_generator_day__WEBPACK_IMPORTED_MODULE_3__.ViewDataGeneratorDay;
        case _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.WEEK:
        case _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_WEEK:
            return new _view_data_generator_week__WEBPACK_IMPORTED_MODULE_6__.ViewDataGeneratorWeek;
        case _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.WORK_WEEK:
        case _constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_WORK_WEEK:
            return new _view_data_generator_work_week__WEBPACK_IMPORTED_MODULE_7__.ViewDataGeneratorWorkWeek;
        default:
            return new _view_data_generator__WEBPACK_IMPORTED_MODULE_2__.ViewDataGenerator
    }
};
function alignToFirstDayOfWeek(date, firstDayOfWeek) {
    var newDate = new Date(date);
    var dayDiff = newDate.getDay() - firstDayOfWeek;
    if (dayDiff < 0) {
        dayDiff += DAYS_IN_WEEK
    }
    newDate.setDate(newDate.getDate() - dayDiff);
    return newDate
}
function alignToLastDayOfWeek(date, firstDayOfWeek) {
    var newDate = alignToFirstDayOfWeek(date, firstDayOfWeek);
    newDate.setDate(newDate.getDate() + DAYS_IN_WEEK - 1);
    return newDate
}
function calculateDaysBetweenDates(fromDate, toDate) {
    var msDiff = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(toDate).getTime() - _core_utils_date__WEBPACK_IMPORTED_MODULE_0__.default.trimTime(fromDate).getTime();
    return Math.round(msDiff / MS_IN_DAY) + 1
}
function calculateAlignedWeeksBetweenDates(fromDate, toDate, firstDayOfWeek) {
    var alignedFromDate = alignToFirstDayOfWeek(fromDate, firstDayOfWeek);
    var alignedToDate = alignToLastDayOfWeek(toDate, firstDayOfWeek);
    var weekCount = calculateDaysBetweenDates(alignedFromDate, alignedToDate) / DAYS_IN_WEEK;
    return Math.max(weekCount, 6)
}


/***/ }),

/***/ 19168:
/*!***********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/view_data_generator.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewDataGenerator": function() { return /* binding */ ViewDataGenerator; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ 27895);
/* harmony import */ var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../__internal/scheduler/resources/m_utils */ 48025);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/workspaces/utils */ 59016);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */






var HOUR_MS = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds("hour");
var DAY_MS = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds("day");
class ViewDataGenerator {
    get daysInInterval() {
        return 1
    }
    get isWorkView() {
        return false
    }
    get tableAllDay() {
        return false
    }
    isSkippedDate() {
        return false
    }
    getStartViewDate(options) {
        return this._calculateStartViewDate(options)
    }
    getCompleteViewDataMap(options) {
        var {
            groups: groups,
            isGroupedByDate: isGroupedByDate,
            isHorizontalGrouping: isHorizontalGrouping,
            isVerticalGrouping: isVerticalGrouping,
            intervalCount: intervalCount,
            currentDate: currentDate,
            viewType: viewType,
            startDayHour: startDayHour,
            endDayHour: endDayHour,
            hoursInterval: hoursInterval
        } = options;
        this._setVisibilityDates(options);
        this.setHiddenInterval(startDayHour, endDayHour, hoursInterval);
        var groupsList = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_3__.getAllGroups)(groups);
        var cellCountInGroupRow = this.getCellCount({
            intervalCount: intervalCount,
            currentDate: currentDate,
            viewType: viewType,
            startDayHour: startDayHour,
            endDayHour: endDayHour,
            hoursInterval: hoursInterval
        });
        var rowCountInGroup = this.getRowCount({
            intervalCount: intervalCount,
            currentDate: currentDate,
            viewType: viewType,
            hoursInterval: hoursInterval,
            startDayHour: startDayHour,
            endDayHour: endDayHour
        });
        var viewDataMap = [];
        var allDayPanelData = this._generateAllDayPanelData(options, rowCountInGroup, cellCountInGroupRow);
        var viewCellsData = this._generateViewCellsData(options, rowCountInGroup, cellCountInGroupRow);
        allDayPanelData && viewDataMap.push(allDayPanelData);
        viewDataMap.push(...viewCellsData);
        if (isHorizontalGrouping && !isGroupedByDate) {
            viewDataMap = this._transformViewDataMapForHorizontalGrouping(viewDataMap, groupsList)
        }
        if (isVerticalGrouping) {
            viewDataMap = this._transformViewDataMapForVerticalGrouping(viewDataMap, groupsList)
        }
        if (isGroupedByDate) {
            viewDataMap = this._transformViewDataMapForGroupingByDate(viewDataMap, groupsList)
        }
        var completeViewDataMap = this._addKeysToCells(viewDataMap);
        return completeViewDataMap
    }
    _transformViewDataMapForHorizontalGrouping(viewDataMap, groupsList) {
        var result = viewDataMap.map(row => row.slice());
        groupsList.slice(1).forEach((groups, index) => {
            var groupIndex = index + 1;
            viewDataMap.forEach((row, rowIndex) => {
                var nextGroupRow = row.map(cellData => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, cellData, {
                    groups: groups,
                    groupIndex: groupIndex
                }));
                result[rowIndex].push(...nextGroupRow)
            })
        });
        return result
    }
    _transformViewDataMapForVerticalGrouping(viewDataMap, groupsList) {
        var result = viewDataMap.map(row => row.slice());
        groupsList.slice(1).forEach((groups, index) => {
            var groupIndex = index + 1;
            var nextGroupMap = viewDataMap.map(cellsRow => {
                var nextRow = cellsRow.map(cellData => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, cellData, {
                    groupIndex: groupIndex,
                    groups: groups
                }));
                return nextRow
            });
            result.push(...nextGroupMap)
        });
        return result
    }
    _transformViewDataMapForGroupingByDate(viewDataMap, groupsList) {
        var correctedGroupList = groupsList.slice(1);
        var correctedGroupCount = correctedGroupList.length;
        var result = viewDataMap.map(cellsRow => {
            var groupedByDateCellsRow = cellsRow.reduce((currentRow, cell) => {
                var rowWithCurrentCell = [...currentRow, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, cell, {
                    isFirstGroupCell: true,
                    isLastGroupCell: 0 === correctedGroupCount
                }), ...correctedGroupList.map((groups, index) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, cell, {
                    groups: groups,
                    groupIndex: index + 1,
                    isFirstGroupCell: false,
                    isLastGroupCell: index === correctedGroupCount - 1
                }))];
                return rowWithCurrentCell
            }, []);
            return groupedByDateCellsRow
        });
        return result
    }
    _addKeysToCells(viewDataMap) {
        var totalColumnCount = viewDataMap[0].length;
        var {
            currentViewDataMap: result
        } = viewDataMap.reduce((_ref, row, rowIndex) => {
            var {
                allDayPanelsCount: allDayPanelsCount,
                currentViewDataMap: currentViewDataMap
            } = _ref;
            var isAllDay = row[0].allDay;
            var keyBase = (rowIndex - allDayPanelsCount) * totalColumnCount;
            var currentAllDayPanelsCount = isAllDay ? allDayPanelsCount + 1 : allDayPanelsCount;
            currentViewDataMap[rowIndex].forEach((cell, columnIndex) => {
                cell.key = keyBase + columnIndex
            });
            return {
                allDayPanelsCount: currentAllDayPanelsCount,
                currentViewDataMap: currentViewDataMap
            }
        }, {
            allDayPanelsCount: 0,
            currentViewDataMap: viewDataMap
        });
        return result
    }
    generateViewDataMap(completeViewDataMap, options) {
        var {
            rowCount: rowCount,
            startCellIndex: startCellIndex,
            startRowIndex: startRowIndex,
            cellCount: cellCount,
            isVerticalGrouping: isVerticalGrouping,
            isAllDayPanelVisible: isAllDayPanelVisible
        } = options;
        var sliceCells = (row, rowIndex, startIndex, count) => {
            var sliceToIndex = void 0 !== count ? startIndex + count : void 0;
            return row.slice(startIndex, sliceToIndex).map((cellData, columnIndex) => ({
                cellData: cellData,
                position: {
                    rowIndex: rowIndex,
                    columnIndex: columnIndex
                }
            }))
        };
        var correctedStartRowIndex = startRowIndex;
        var allDayPanelMap = [];
        if (this._isStandaloneAllDayPanel(isVerticalGrouping, isAllDayPanelVisible)) {
            correctedStartRowIndex++;
            allDayPanelMap = sliceCells(completeViewDataMap[0], 0, startCellIndex, cellCount)
        }
        var displayedRowCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getDisplayedRowCount)(rowCount, completeViewDataMap);
        var dateTableMap = completeViewDataMap.slice(correctedStartRowIndex, correctedStartRowIndex + displayedRowCount).map((row, rowIndex) => sliceCells(row, rowIndex, startCellIndex, cellCount));
        return {
            allDayPanelMap: allDayPanelMap,
            dateTableMap: dateTableMap
        }
    }
    _isStandaloneAllDayPanel(isVerticalGrouping, isAllDayPanelVisible) {
        return !isVerticalGrouping && isAllDayPanelVisible
    }
    getViewDataFromMap(completeViewDataMap, viewDataMap, options) {
        var {
            topVirtualRowHeight: topVirtualRowHeight,
            bottomVirtualRowHeight: bottomVirtualRowHeight,
            leftVirtualCellWidth: leftVirtualCellWidth,
            rightVirtualCellWidth: rightVirtualCellWidth,
            cellCount: cellCount,
            rowCount: rowCount,
            startRowIndex: startRowIndex,
            startCellIndex: startCellIndex,
            isProvideVirtualCellsWidth: isProvideVirtualCellsWidth,
            isGroupedAllDayPanel: isGroupedAllDayPanel,
            isVerticalGrouping: isVerticalGrouping,
            isAllDayPanelVisible: isAllDayPanelVisible
        } = options;
        var {
            allDayPanelMap: allDayPanelMap,
            dateTableMap: dateTableMap
        } = viewDataMap;
        var {
            groupedData: groupedData
        } = dateTableMap.reduce((_ref2, cellsRow) => {
            var {
                previousGroupIndex: previousGroupIndex,
                groupedData: groupedData
            } = _ref2;
            var cellDataRow = cellsRow.map(_ref3 => {
                var {
                    cellData: cellData
                } = _ref3;
                return cellData
            });
            var firstCell = cellDataRow[0];
            var isAllDayRow = firstCell.allDay;
            var currentGroupIndex = firstCell.groupIndex;
            if (currentGroupIndex !== previousGroupIndex) {
                groupedData.push({
                    dateTable: [],
                    isGroupedAllDayPanel: (0,_renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_5__.getIsGroupedAllDayPanel)(!!isAllDayRow, isVerticalGrouping),
                    groupIndex: currentGroupIndex,
                    key: (0,_renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_5__.getKeyByGroup)(currentGroupIndex, isVerticalGrouping)
                })
            }
            if (isAllDayRow) {
                groupedData[groupedData.length - 1].allDayPanel = cellDataRow
            } else {
                groupedData[groupedData.length - 1].dateTable.push({
                    cells: cellDataRow,
                    key: cellDataRow[0].key - startCellIndex
                })
            }
            return {
                groupedData: groupedData,
                previousGroupIndex: currentGroupIndex
            }
        }, {
            previousGroupIndex: -1,
            groupedData: []
        });
        if (this._isStandaloneAllDayPanel(isVerticalGrouping, isAllDayPanelVisible)) {
            groupedData[0].allDayPanel = allDayPanelMap.map(_ref4 => {
                var {
                    cellData: cellData
                } = _ref4;
                return cellData
            })
        }
        var totalCellCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getTotalCellCountByCompleteData)(completeViewDataMap);
        var totalRowCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getTotalRowCountByCompleteData)(completeViewDataMap);
        var displayedCellCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getDisplayedCellCount)(cellCount, completeViewDataMap);
        var displayedRowCount = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getDisplayedRowCount)(rowCount, completeViewDataMap);
        return {
            groupedData: groupedData,
            topVirtualRowHeight: topVirtualRowHeight,
            bottomVirtualRowHeight: bottomVirtualRowHeight,
            leftVirtualCellWidth: isProvideVirtualCellsWidth ? leftVirtualCellWidth : void 0,
            rightVirtualCellWidth: isProvideVirtualCellsWidth ? rightVirtualCellWidth : void 0,
            isGroupedAllDayPanel: isGroupedAllDayPanel,
            leftVirtualCellCount: startCellIndex,
            rightVirtualCellCount: void 0 === cellCount ? 0 : totalCellCount - startCellIndex - displayedCellCount,
            topVirtualRowCount: startRowIndex,
            bottomVirtualRowCount: totalRowCount - startRowIndex - displayedRowCount
        }
    }
    _generateViewCellsData(options, rowCount, cellCountInGroupRow) {
        var viewCellsData = [];
        for (var rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {
            viewCellsData.push(this._generateCellsRow(options, false, rowIndex, rowCount, cellCountInGroupRow))
        }
        return viewCellsData
    }
    _generateAllDayPanelData(options, rowCount, columnCount) {
        if (!options.isAllDayPanelVisible) {
            return null
        }
        return this._generateCellsRow(options, true, 0, rowCount, columnCount)
    }
    _generateCellsRow(options, allDay, rowIndex, rowCount, columnCount) {
        var cellsRow = [];
        for (var columnIndex = 0; columnIndex < columnCount; ++columnIndex) {
            var cellDataValue = this.getCellData(rowIndex, columnIndex, options, allDay);
            cellDataValue.index = rowIndex * columnCount + columnIndex;
            cellDataValue.isFirstGroupCell = this._isFirstGroupCell(rowIndex, columnIndex, options, rowCount, columnCount);
            cellDataValue.isLastGroupCell = this._isLastGroupCell(rowIndex, columnIndex, options, rowCount, columnCount);
            cellsRow.push(cellDataValue)
        }
        return cellsRow
    }
    getCellData(rowIndex, columnIndex, options, allDay) {
        return allDay ? this.prepareAllDayCellData(options, rowIndex, columnIndex) : this.prepareCellData(options, rowIndex, columnIndex)
    }
    prepareCellData(options, rowIndex, columnIndex) {
        var {
            groups: groups,
            startDayHour: startDayHour,
            endDayHour: endDayHour,
            interval: interval,
            hoursInterval: hoursInterval
        } = options;
        var groupsList = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_3__.getAllGroups)(groups);
        var startDate = this.getDateByCellIndices(options, rowIndex, columnIndex, this.getCellCountInDay(startDayHour, endDayHour, hoursInterval));
        var endDate = this.calculateEndDate(startDate, interval, endDayHour);
        var data = {
            startDate: startDate,
            endDate: endDate,
            allDay: this.tableAllDay,
            groupIndex: 0
        };
        if (groupsList.length > 0) {
            data.groups = groupsList[0]
        }
        return data
    }
    prepareAllDayCellData(options, rowIndex, columnIndex) {
        var data = this.prepareCellData(options, rowIndex, columnIndex);
        var startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.trimTime(data.startDate);
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, data, {
            startDate: startDate,
            endDate: startDate,
            allDay: true
        })
    }
    getDateByCellIndices(options, rowIndex, columnIndex, cellCountInDay) {
        var startViewDate = options.startViewDate;
        var {
            startDayHour: startDayHour,
            interval: interval,
            firstDayOfWeek: firstDayOfWeek,
            intervalCount: intervalCount
        } = options;
        var isStartViewDateDuringDST = startViewDate.getHours() !== Math.floor(startDayHour);
        if (isStartViewDateDuringDST) {
            var dateWithCorrectHours = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.getStartViewDateWithoutDST)(startViewDate, startDayHour);
            startViewDate = new Date(dateWithCorrectHours - _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds("day"))
        }
        var columnCountBase = this.getCellCount(options);
        var rowCountBase = this.getRowCount(options);
        var cellIndex = this._calculateCellIndex(rowIndex, columnIndex, rowCountBase, columnCountBase);
        var millisecondsOffset = this.getMillisecondsOffset(cellIndex, interval, cellCountInDay);
        var offsetByCount = this.isWorkView ? this.getTimeOffsetByColumnIndex(columnIndex, this.getFirstDayOfWeek(firstDayOfWeek), columnCountBase, intervalCount) : 0;
        var startViewDateTime = startViewDate.getTime();
        var currentDate = new Date(startViewDateTime + millisecondsOffset + offsetByCount);
        var timeZoneDifference = isStartViewDateDuringDST ? 0 : _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.getTimezonesDifference(startViewDate, currentDate);
        currentDate.setTime(currentDate.getTime() + timeZoneDifference);
        return currentDate
    }
    getMillisecondsOffset(cellIndex, interval, cellCountInDay) {
        var dayIndex = Math.floor(cellIndex / cellCountInDay);
        var realHiddenInterval = dayIndex * this.hiddenInterval;
        return interval * cellIndex + realHiddenInterval
    }
    getTimeOffsetByColumnIndex(columnIndex, firstDayOfWeek, columnCount, intervalCount) {
        var firstDayOfWeekDiff = Math.max(0, firstDayOfWeek - 1);
        var columnsInWeek = columnCount / intervalCount;
        var weekendCount = Math.floor((columnIndex + firstDayOfWeekDiff) / columnsInWeek);
        return DAY_MS * weekendCount * 2
    }
    calculateEndDate(startDate, interval, endDayHour) {
        var result = new Date(startDate);
        result.setMilliseconds(result.getMilliseconds() + Math.round(interval));
        return result
    }
    _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.calculateCellIndex)(rowIndex, columnIndex, rowCount)
    }
    generateGroupedDataMap(viewDataMap) {
        var {
            allDayPanelMap: allDayPanelMap,
            dateTableMap: dateTableMap
        } = viewDataMap;
        var {
            previousGroupedDataMap: dateTableGroupedMap
        } = dateTableMap.reduce((previousOptions, cellsRow) => {
            var {
                previousGroupedDataMap: previousGroupedDataMap,
                previousRowIndex: previousRowIndex,
                previousGroupIndex: previousGroupIndex
            } = previousOptions;
            var {
                groupIndex: currentGroupIndex
            } = cellsRow[0].cellData;
            var currentRowIndex = currentGroupIndex === previousGroupIndex ? previousRowIndex + 1 : 0;
            cellsRow.forEach(cell => {
                var {
                    groupIndex: groupIndex
                } = cell.cellData;
                if (!previousGroupedDataMap[groupIndex]) {
                    previousGroupedDataMap[groupIndex] = []
                }
                if (!previousGroupedDataMap[groupIndex][currentRowIndex]) {
                    previousGroupedDataMap[groupIndex][currentRowIndex] = []
                }
                previousGroupedDataMap[groupIndex][currentRowIndex].push(cell)
            });
            return {
                previousGroupedDataMap: previousGroupedDataMap,
                previousRowIndex: currentRowIndex,
                previousGroupIndex: currentGroupIndex
            }
        }, {
            previousGroupedDataMap: [],
            previousRowIndex: -1,
            previousGroupIndex: -1
        });
        var allDayPanelGroupedMap = [];
        null === allDayPanelMap || void 0 === allDayPanelMap ? void 0 : allDayPanelMap.forEach(cell => {
            var {
                groupIndex: groupIndex
            } = cell.cellData;
            if (!allDayPanelGroupedMap[groupIndex]) {
                allDayPanelGroupedMap[groupIndex] = []
            }
            allDayPanelGroupedMap[groupIndex].push(cell)
        });
        return {
            allDayPanelGroupedMap: allDayPanelGroupedMap,
            dateTableGroupedMap: dateTableGroupedMap
        }
    }
    _isFirstGroupCell(rowIndex, columnIndex, options, rowCount, columnCount) {
        var {
            groupOrientation: groupOrientation,
            groups: groups,
            isGroupedByDate: isGroupedByDate
        } = options;
        var groupCount = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_3__.getGroupCount)(groups);
        if (isGroupedByDate) {
            return columnIndex % groupCount === 0
        }
        if (groupOrientation === _constants__WEBPACK_IMPORTED_MODULE_2__.HORIZONTAL_GROUP_ORIENTATION) {
            return columnIndex % columnCount === 0
        }
        return rowIndex % rowCount === 0
    }
    _isLastGroupCell(rowIndex, columnIndex, options, rowCount, columnCount) {
        var {
            groupOrientation: groupOrientation,
            groups: groups,
            isGroupedByDate: isGroupedByDate
        } = options;
        var groupCount = (0,_internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_3__.getGroupCount)(groups);
        if (isGroupedByDate) {
            return (columnIndex + 1) % groupCount === 0
        }
        if (groupOrientation === _constants__WEBPACK_IMPORTED_MODULE_2__.HORIZONTAL_GROUP_ORIENTATION) {
            return (columnIndex + 1) % columnCount === 0
        }
        return (rowIndex + 1) % rowCount === 0
    }
    markSelectedAndFocusedCells(viewDataMap, renderOptions) {
        var {
            selectedCells: selectedCells,
            focusedCell: focusedCell
        } = renderOptions;
        if (!selectedCells && !focusedCell) {
            return viewDataMap
        }
        var {
            allDayPanelMap: allDayPanelMap,
            dateTableMap: dateTableMap
        } = viewDataMap;
        var nextDateTableMap = dateTableMap.map(row => this._markSelectedAndFocusedCellsInRow(row, selectedCells, focusedCell));
        var nextAllDayMap = this._markSelectedAndFocusedCellsInRow(allDayPanelMap, selectedCells, focusedCell);
        return {
            allDayPanelMap: nextAllDayMap,
            dateTableMap: nextDateTableMap
        }
    }
    _markSelectedAndFocusedCellsInRow(dataRow, selectedCells, focusedCell) {
        return dataRow.map(cell => {
            var {
                index: index,
                groupIndex: groupIndex,
                allDay: allDay,
                startDate: startDate
            } = cell.cellData;
            var indexInSelectedCells = selectedCells.findIndex(_ref5 => {
                var {
                    index: selectedCellIndex,
                    groupIndex: selectedCellGroupIndex,
                    allDay: selectedCellAllDay,
                    startDate: selectedCellStartDate
                } = _ref5;
                return groupIndex === selectedCellGroupIndex && (index === selectedCellIndex || void 0 === selectedCellIndex && startDate.getTime() === selectedCellStartDate.getTime()) && !!allDay === !!selectedCellAllDay
            });
            var isFocused = !!focusedCell && index === focusedCell.cellData.index && groupIndex === focusedCell.cellData.groupIndex && allDay === focusedCell.cellData.allDay;
            if (!isFocused && -1 === indexInSelectedCells) {
                return cell
            }
            return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, cell, {
                cellData: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, cell.cellData, {
                    isSelected: indexInSelectedCells > -1,
                    isFocused: isFocused
                })
            })
        })
    }
    getInterval(hoursInterval) {
        return hoursInterval * HOUR_MS
    }
    _getIntervalDuration(intervalCount) {
        return _core_utils_date__WEBPACK_IMPORTED_MODULE_1__.default.dateToMilliseconds("day") * intervalCount
    }
    _setVisibilityDates() {}
    getCellCountInDay(startDayHour, endDayHour, hoursInterval) {
        var result = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.calculateDayDuration)(startDayHour, endDayHour) / hoursInterval;
        return Math.ceil(result)
    }
    getCellCount(options) {
        var {
            intervalCount: intervalCount,
            viewType: viewType,
            startDayHour: startDayHour,
            endDayHour: endDayHour,
            hoursInterval: hoursInterval
        } = options;
        var cellCountInDay = this.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
        var columnCountInDay = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.isHorizontalView)(viewType) ? cellCountInDay : 1;
        return this.daysInInterval * intervalCount * columnCountInDay
    }
    getRowCount(options) {
        var {
            viewType: viewType,
            startDayHour: startDayHour,
            endDayHour: endDayHour,
            hoursInterval: hoursInterval
        } = options;
        var cellCountInDay = this.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
        var rowCountInDay = !(0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.isHorizontalView)(viewType) ? cellCountInDay : 1;
        return rowCountInDay
    }
    setHiddenInterval(startDayHour, endDayHour, hoursInterval) {
        this.hiddenInterval = DAY_MS - this.getVisibleDayDuration(startDayHour, endDayHour, hoursInterval)
    }
    getVisibleDayDuration(startDayHour, endDayHour, hoursInterval) {
        var cellCountInDay = this.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
        return hoursInterval * cellCountInDay * HOUR_MS
    }
    getFirstDayOfWeek(firstDayOfWeekOption) {
        return firstDayOfWeekOption
    }
}


/***/ }),

/***/ 30952:
/*!***************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/view_data_generator_day.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewDataGeneratorDay": function() { return /* binding */ ViewDataGeneratorDay; }
/* harmony export */ });
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_day__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/day */ 62902);
/* harmony import */ var _view_data_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view_data_generator */ 19168);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_day.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class ViewDataGeneratorDay extends _view_data_generator__WEBPACK_IMPORTED_MODULE_1__.ViewDataGenerator {
    _calculateStartViewDate(options) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_day__WEBPACK_IMPORTED_MODULE_0__.calculateStartViewDate)(options.currentDate, options.startDayHour, options.startDate, this._getIntervalDuration(options.intervalCount))
    }
}


/***/ }),

/***/ 3014:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/view_data_generator_month.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewDataGeneratorMonth": function() { return /* binding */ ViewDataGeneratorMonth; }
/* harmony export */ });
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _view_data_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view_data_generator */ 19168);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month */ 35189);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ 96929);
/* harmony import */ var _localization_date__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../localization/date */ 83881);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_month.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */






var DAY_IN_MILLISECONDS = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.dateToMilliseconds("day");
var DAYS_IN_WEEK = 7;
class ViewDataGeneratorMonth extends _view_data_generator__WEBPACK_IMPORTED_MODULE_1__.ViewDataGenerator {
    get tableAllDay() {
        return
    }
    getCellData(rowIndex, columnIndex, options, allDay) {
        var data = super.getCellData(rowIndex, columnIndex, options, false);
        var startDate = data.startDate;
        var {
            indicatorTime: indicatorTime,
            timeZoneCalculator: timeZoneCalculator,
            intervalCount: intervalCount
        } = options;
        data.today = this.isCurrentDate(startDate, indicatorTime, timeZoneCalculator);
        data.otherMonth = this.isOtherMonth(startDate, this._minVisibleDate, this._maxVisibleDate);
        data.firstDayOfMonth = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__.isFirstCellInMonthWithIntervalCount)(startDate, intervalCount);
        data.text = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__.getCellText)(startDate, intervalCount);
        return data
    }
    isCurrentDate(date, indicatorTime, timeZoneCalculator) {
        return _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.sameDate(date, (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_0__.getToday)(indicatorTime, timeZoneCalculator))
    }
    isOtherMonth(cellDate, minDate, maxDate) {
        return !_core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.dateInRange(cellDate, minDate, maxDate, "date")
    }
    _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__.calculateCellIndex)(rowIndex, columnIndex, rowCount, columnCount)
    }
    calculateEndDate(startDate, interval, endDayHour) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_0__.setOptionHour)(startDate, endDayHour)
    }
    getInterval() {
        return DAY_IN_MILLISECONDS
    }
    _calculateStartViewDate(options) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__.calculateStartViewDate)(options.currentDate, options.startDayHour, options.startDate, options.intervalCount, this.getFirstDayOfWeek(options.firstDayOfWeek))
    }
    _setVisibilityDates(options) {
        var {
            intervalCount: intervalCount,
            startDate: startDate,
            currentDate: currentDate
        } = options;
        var firstMonthDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.getFirstMonthDate(startDate);
        var viewStart = (0,_renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__.getViewStartByOptions)(startDate, currentDate, intervalCount, firstMonthDate);
        this._minVisibleDate = new Date(viewStart.setDate(1));
        var nextMonthDate = new Date(viewStart.setMonth(viewStart.getMonth() + intervalCount));
        this._maxVisibleDate = new Date(nextMonthDate.setDate(0))
    }
    getCellCount() {
        return DAYS_IN_WEEK
    }
    getRowCount(options) {
        var _options$firstDayOfWe;
        var startDate = new Date(options.currentDate);
        startDate.setDate(1);
        var endDate = new Date(startDate);
        endDate.setMonth(endDate.getMonth() + options.intervalCount);
        endDate.setDate(0);
        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.calculateAlignedWeeksBetweenDates)(startDate, endDate, null !== (_options$firstDayOfWe = options.firstDayOfWeek) && void 0 !== _options$firstDayOfWe ? _options$firstDayOfWe : _localization_date__WEBPACK_IMPORTED_MODULE_5__.default.firstDayOfWeekIndex())
    }
    getCellCountInDay() {
        return 1
    }
    setHiddenInterval() {
        this.hiddenInterval = 0
    }
}


/***/ }),

/***/ 27023:
/*!**************************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/view_data_generator_timeline_month.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewDataGeneratorTimelineMonth": function() { return /* binding */ ViewDataGeneratorTimelineMonth; }
/* harmony export */ });
/* harmony import */ var _view_data_generator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view_data_generator */ 19168);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month */ 35189);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_timeline_month__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month */ 11377);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_timeline_month.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */





var DAY_IN_MILLISECONDS = _core_utils_date__WEBPACK_IMPORTED_MODULE_4__.default.dateToMilliseconds("day");
class ViewDataGeneratorTimelineMonth extends _view_data_generator__WEBPACK_IMPORTED_MODULE_0__.ViewDataGenerator {
    _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_1__.calculateCellIndex)(rowIndex, columnIndex, rowCount, columnCount)
    }
    calculateEndDate(startDate, interval, endDayHour) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__.setOptionHour)(startDate, endDayHour)
    }
    getInterval() {
        return DAY_IN_MILLISECONDS
    }
    _calculateStartViewDate(options) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_timeline_month__WEBPACK_IMPORTED_MODULE_2__.calculateStartViewDate)(options.currentDate, options.startDayHour, options.startDate, options.intervalCount)
    }
    getCellCount(options) {
        var {
            intervalCount: intervalCount,
            currentDate: currentDate
        } = options;
        var cellCount = 0;
        for (var i = 1; i <= intervalCount; i++) {
            cellCount += new Date(currentDate.getFullYear(), currentDate.getMonth() + i, 0).getDate()
        }
        return cellCount
    }
    setHiddenInterval() {
        this.hiddenInterval = 0
    }
}


/***/ }),

/***/ 8219:
/*!****************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/view_data_generator_week.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewDataGeneratorWeek": function() { return /* binding */ ViewDataGeneratorWeek; }
/* harmony export */ });
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/week */ 12871);
/* harmony import */ var _view_data_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view_data_generator */ 19168);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_week.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class ViewDataGeneratorWeek extends _view_data_generator__WEBPACK_IMPORTED_MODULE_1__.ViewDataGenerator {
    get daysInInterval() {
        return 7
    }
    _getIntervalDuration(intervalCount) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_0__.getIntervalDuration)(intervalCount)
    }
    _calculateStartViewDate(options) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_0__.calculateStartViewDate)(options.currentDate, options.startDayHour, options.startDate, this._getIntervalDuration(options.intervalCount), this.getFirstDayOfWeek(options.firstDayOfWeek))
    }
}


/***/ }),

/***/ 63076:
/*!*********************************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/view_data_generator_work_week.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewDataGeneratorWorkWeek": function() { return /* binding */ ViewDataGeneratorWorkWeek; }
/* harmony export */ });
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/work_week */ 95984);
/* harmony import */ var _view_data_generator_week__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view_data_generator_week */ 8219);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_work_week.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class ViewDataGeneratorWorkWeek extends _view_data_generator_week__WEBPACK_IMPORTED_MODULE_1__.ViewDataGeneratorWeek {
    get daysInInterval() {
        return 5
    }
    get isWorkView() {
        return true
    }
    isSkippedDate(date) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_0__.isDataOnWeekend)(date)
    }
    _calculateStartViewDate(options) {
        return (0,_renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_0__.calculateStartViewDate)(options.currentDate, options.startDayHour, options.startDate, this._getIntervalDuration(options.intervalCount), this.getFirstDayOfWeek(options.firstDayOfWeek))
    }
    getFirstDayOfWeek(firstDayOfWeekOption) {
        return firstDayOfWeekOption || 0
    }
}


/***/ }),

/***/ 55428:
/*!**********************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/view_data_provider.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ ViewDataProvider; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ 76518);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ 21493);
/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/utils/date */ 35341);
/* harmony import */ var _renovation_ui_scheduler_view_model_group_panel_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/group_panel/utils */ 42626);
/* harmony import */ var _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/workspaces/utils */ 59016);
/* harmony import */ var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */ 28123);
/* harmony import */ var _date_header_data_generator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./date_header_data_generator */ 23565);
/* harmony import */ var _grouped_data_map_provider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./grouped_data_map_provider */ 46752);
/* harmony import */ var _time_panel_data_generator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./time_panel_data_generator */ 69682);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils */ 96929);
/* harmony import */ var _utils_timeZone__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils.timeZone */ 53374);
/**
 * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_provider.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var _excluded = ["groups", "groupOrientation", "groupByDate", "isAllDayPanelVisible"];









class ViewDataProvider {
    constructor(viewType) {
        this.viewDataGenerator = (0,_utils__WEBPACK_IMPORTED_MODULE_9__.getViewDataGeneratorByViewType)(viewType);
        this.viewData = {};
        this.completeViewDataMap = [];
        this.completeDateHeaderMap = [];
        this.viewDataMap = {};
        this._groupedDataMapProvider = null
    }
    get groupedDataMap() {
        return this._groupedDataMapProvider.groupedDataMap
    }
    get hiddenInterval() {
        return this.viewDataGenerator.hiddenInterval
    }
    isSkippedDate(date) {
        return this.viewDataGenerator.isSkippedDate(date)
    }
    update(options, isGenerateNewViewData) {
        this.viewDataGenerator = (0,_utils__WEBPACK_IMPORTED_MODULE_9__.getViewDataGeneratorByViewType)(options.viewType);
        var viewDataGenerator = this.viewDataGenerator;
        var dateHeaderDataGenerator = new _date_header_data_generator__WEBPACK_IMPORTED_MODULE_6__.DateHeaderDataGenerator(viewDataGenerator);
        var timePanelDataGenerator = new _time_panel_data_generator__WEBPACK_IMPORTED_MODULE_8__.TimePanelDataGenerator(viewDataGenerator);
        var renderOptions = this._transformRenderOptions(options);
        renderOptions.interval = this.viewDataGenerator.getInterval(renderOptions.hoursInterval);
        this._options = renderOptions;
        if (isGenerateNewViewData) {
            this.completeViewDataMap = viewDataGenerator.getCompleteViewDataMap(renderOptions);
            this.completeDateHeaderMap = dateHeaderDataGenerator.getCompleteDateHeaderMap(renderOptions, this.completeViewDataMap);
            if (renderOptions.isGenerateTimePanelData) {
                this.completeTimePanelMap = timePanelDataGenerator.getCompleteTimePanelMap(renderOptions, this.completeViewDataMap)
            }
        }
        this.viewDataMap = viewDataGenerator.generateViewDataMap(this.completeViewDataMap, renderOptions);
        this.updateViewData(renderOptions);
        this._groupedDataMapProvider = new _grouped_data_map_provider__WEBPACK_IMPORTED_MODULE_7__.GroupedDataMapProvider(this.viewDataGenerator, this.viewDataMap, this.completeViewDataMap, {
            isVerticalGrouping: renderOptions.isVerticalGrouping,
            viewType: renderOptions.viewType
        });
        this.dateHeaderData = dateHeaderDataGenerator.generateDateHeaderData(this.completeDateHeaderMap, this.completeViewDataMap, renderOptions);
        if (renderOptions.isGenerateTimePanelData) {
            this.timePanelData = timePanelDataGenerator.generateTimePanelData(this.completeTimePanelMap, renderOptions)
        }
    }
    createGroupedDataMapProvider() {
        this._groupedDataMapProvider = new _grouped_data_map_provider__WEBPACK_IMPORTED_MODULE_7__.GroupedDataMapProvider(this.viewDataGenerator, this.viewDataMap, this.completeViewDataMap, {
            isVerticalGrouping: this._options.isVerticalGrouping,
            viewType: this._options.viewType
        })
    }
    updateViewData(options) {
        var renderOptions = this._transformRenderOptions(options);
        this.viewDataMapWithSelection = this.viewDataGenerator.markSelectedAndFocusedCells(this.viewDataMap, renderOptions);
        this.viewData = this.viewDataGenerator.getViewDataFromMap(this.completeViewDataMap, this.viewDataMapWithSelection, renderOptions)
    }
    _transformRenderOptions(renderOptions) {
        var {
            groups: groups,
            groupOrientation: groupOrientation,
            groupByDate: groupByDate,
            isAllDayPanelVisible: isAllDayPanelVisible
        } = renderOptions, restOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(renderOptions, _excluded);
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, restOptions, {
            startViewDate: this.viewDataGenerator._calculateStartViewDate(renderOptions),
            isVerticalGrouping: (0,_renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__.isVerticalGroupingApplied)(groups, groupOrientation),
            isHorizontalGrouping: (0,_renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__.isHorizontalGroupingApplied)(groups, groupOrientation),
            isGroupedByDate: (0,_renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__.isGroupingByDate)(groups, groupOrientation, groupByDate),
            isGroupedAllDayPanel: (0,_renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_5__.calculateIsGroupedAllDayPanel)(groups, groupOrientation, isAllDayPanelVisible),
            groups: groups,
            groupOrientation: groupOrientation,
            isAllDayPanelVisible: isAllDayPanelVisible
        })
    }
    getGroupPanelData(options) {
        var renderOptions = this._transformRenderOptions(options);
        if (renderOptions.groups.length > 0) {
            var cellCount = this.getCellCount(renderOptions);
            return (0,_renovation_ui_scheduler_view_model_group_panel_utils__WEBPACK_IMPORTED_MODULE_3__.getGroupPanelData)(renderOptions.groups, cellCount, renderOptions.isGroupedByDate, renderOptions.isGroupedByDate ? 1 : cellCount)
        }
        return
    }
    getGroupStartDate(groupIndex) {
        return this._groupedDataMapProvider.getGroupStartDate(groupIndex)
    }
    getGroupEndDate(groupIndex) {
        return this._groupedDataMapProvider.getGroupEndDate(groupIndex)
    }
    findGroupCellStartDate(groupIndex, startDate, endDate) {
        var isFindByDate = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;
        return this._groupedDataMapProvider.findGroupCellStartDate(groupIndex, startDate, endDate, isFindByDate)
    }
    findAllDayGroupCellStartDate(groupIndex, startDate) {
        return this._groupedDataMapProvider.findAllDayGroupCellStartDate(groupIndex, startDate)
    }
    findCellPositionInMap(cellInfo) {
        return this._groupedDataMapProvider.findCellPositionInMap(cellInfo)
    }
    hasAllDayPanel() {
        var {
            viewData: viewData
        } = this.viewDataMap;
        var {
            allDayPanel: allDayPanel
        } = viewData.groupedData[0];
        return !viewData.isGroupedAllDayPanel && (null === allDayPanel || void 0 === allDayPanel ? void 0 : allDayPanel.length) > 0
    }
    getCellsGroup(groupIndex) {
        return this._groupedDataMapProvider.getCellsGroup(groupIndex)
    }
    getCompletedGroupsInfo() {
        return this._groupedDataMapProvider.getCompletedGroupsInfo()
    }
    getGroupIndices() {
        return this._groupedDataMapProvider.getGroupIndices()
    }
    getLastGroupCellPosition(groupIndex) {
        return this._groupedDataMapProvider.getLastGroupCellPosition(groupIndex)
    }
    getRowCountInGroup(groupIndex) {
        return this._groupedDataMapProvider.getRowCountInGroup(groupIndex)
    }
    getCellData(rowIndex, columnIndex, isAllDay, rtlEnabled) {
        var row = isAllDay && !this._options.isVerticalGrouping ? this.viewDataMap.allDayPanelMap : this.viewDataMap.dateTableMap[rowIndex];
        var actualColumnIndex = !rtlEnabled ? columnIndex : row.length - 1 - columnIndex;
        var {
            cellData: cellData
        } = row[actualColumnIndex];
        return cellData
    }
    getCellsByGroupIndexAndAllDay(groupIndex, allDay) {
        var rowsPerGroup = this._getRowCountWithAllDayRows();
        var isShowAllDayPanel = this._options.isAllDayPanelVisible;
        var firstRowInGroup = this._options.isVerticalGrouping ? groupIndex * rowsPerGroup : 0;
        var lastRowInGroup = this._options.isVerticalGrouping ? (groupIndex + 1) * rowsPerGroup - 1 : rowsPerGroup;
        var correctedFirstRow = isShowAllDayPanel && !allDay ? firstRowInGroup + 1 : firstRowInGroup;
        var correctedLastRow = allDay ? correctedFirstRow : lastRowInGroup;
        return this.completeViewDataMap.slice(correctedFirstRow, correctedLastRow + 1).map(row => row.filter(_ref => {
            var {
                groupIndex: currentGroupIndex
            } = _ref;
            return groupIndex === currentGroupIndex
        }))
    }
    getCellCountWithGroup(groupIndex) {
        var rowIndex = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        var {
            dateTableGroupedMap: dateTableGroupedMap
        } = this.groupedDataMap;
        return dateTableGroupedMap.filter((_, index) => index <= groupIndex).reduce((previous, row) => previous + row[rowIndex].length, 0)
    }
    hasGroupAllDayPanel(groupIndex) {
        var _this$groupedDataMap$2;
        if (this._options.isVerticalGrouping) {
            var _this$groupedDataMap$;
            return !!(null !== (_this$groupedDataMap$ = this.groupedDataMap.dateTableGroupedMap[groupIndex]) && void 0 !== _this$groupedDataMap$ && _this$groupedDataMap$[0][0].cellData.allDay)
        }
        return (null === (_this$groupedDataMap$2 = this.groupedDataMap.allDayPanelGroupedMap[groupIndex]) || void 0 === _this$groupedDataMap$2 ? void 0 : _this$groupedDataMap$2.length) > 0
    }
    isGroupIntersectDateInterval(groupIndex, startDate, endDate) {
        var groupStartDate = this.getGroupStartDate(groupIndex);
        var groupEndDate = this.getGroupEndDate(groupIndex);
        return startDate < groupEndDate && endDate > groupStartDate
    }
    findGlobalCellPosition(date) {
        var groupIndex = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;
        var {
            completeViewDataMap: completeViewDataMap
        } = this;
        var showAllDayPanel = this._options.isAllDayPanelVisible;
        for (var rowIndex = 0; rowIndex < completeViewDataMap.length; rowIndex += 1) {
            var currentRow = completeViewDataMap[rowIndex];
            for (var columnIndex = 0; columnIndex < currentRow.length; columnIndex += 1) {
                var cellData = currentRow[columnIndex];
                var {
                    startDate: currentStartDate,
                    endDate: currentEndDate,
                    groupIndex: currentGroupIndex,
                    allDay: currentAllDay
                } = cellData;
                if (groupIndex === currentGroupIndex && allDay === !!currentAllDay && this._compareDatesAndAllDay(date, currentStartDate, currentEndDate, allDay)) {
                    return {
                        position: {
                            columnIndex: columnIndex,
                            rowIndex: showAllDayPanel && !this._options.isVerticalGrouping ? rowIndex - 1 : rowIndex
                        },
                        cellData: cellData
                    }
                }
            }
        }
    }
    _compareDatesAndAllDay(date, cellStartDate, cellEndDate, allDay) {
        var time = date.getTime();
        var trimmedTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.trimTime(date).getTime();
        var cellStartTime = cellStartDate.getTime();
        var cellEndTime = cellEndDate.getTime();
        return !allDay && time >= cellStartTime && time < cellEndTime || allDay && trimmedTime === cellStartTime
    }
    getSkippedDaysCount(groupIndex, startDate, endDate, daysCount) {
        var {
            dateTableGroupedMap: dateTableGroupedMap
        } = this._groupedDataMapProvider.groupedDataMap;
        var groupedData = dateTableGroupedMap[groupIndex];
        var includedDays = 0;
        for (var rowIndex = 0; rowIndex < groupedData.length; rowIndex += 1) {
            for (var columnIndex = 0; columnIndex < groupedData[rowIndex].length; columnIndex += 1) {
                var cell = groupedData[rowIndex][columnIndex].cellData;
                if (startDate.getTime() < cell.endDate.getTime() && endDate.getTime() > cell.startDate.getTime()) {
                    includedDays += 1
                }
            }
        }
        var lastCell = groupedData[groupedData.length - 1][groupedData[0].length - 1].cellData;
        var lastCellStart = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.trimTime(lastCell.startDate);
        var daysAfterView = Math.floor((endDate.getTime() - lastCellStart.getTime()) / _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.dateToMilliseconds("day"));
        var deltaDays = daysAfterView > 0 ? daysAfterView : 0;
        return daysCount - includedDays - deltaDays
    }
    getColumnsCount() {
        var {
            dateTableMap: dateTableMap
        } = this.viewDataMap;
        return dateTableMap ? dateTableMap[0].length : 0
    }
    getViewEdgeIndices(isAllDayPanel) {
        if (isAllDayPanel) {
            return {
                firstColumnIndex: 0,
                lastColumnIndex: this.viewDataMap.allDayPanelMap.length - 1,
                firstRowIndex: 0,
                lastRowIndex: 0
            }
        }
        return {
            firstColumnIndex: 0,
            lastColumnIndex: this.viewDataMap.dateTableMap[0].length - 1,
            firstRowIndex: 0,
            lastRowIndex: this.viewDataMap.dateTableMap.length - 1
        }
    }
    getGroupEdgeIndices(groupIndex, isAllDay) {
        var groupedDataMap = this.groupedDataMap.dateTableGroupedMap[groupIndex];
        var cellsCount = groupedDataMap[0].length;
        var rowsCount = groupedDataMap.length;
        var firstColumnIndex = groupedDataMap[0][0].position.columnIndex;
        var lastColumnIndex = groupedDataMap[0][cellsCount - 1].position.columnIndex;
        if (isAllDay) {
            return {
                firstColumnIndex: firstColumnIndex,
                lastColumnIndex: lastColumnIndex,
                firstRowIndex: 0,
                lastRowIndex: 0
            }
        }
        return {
            firstColumnIndex: firstColumnIndex,
            lastColumnIndex: lastColumnIndex,
            firstRowIndex: groupedDataMap[0][0].position.rowIndex,
            lastRowIndex: groupedDataMap[rowsCount - 1][0].position.rowIndex
        }
    }
    isSameCell(firstCellData, secondCellData) {
        var {
            startDate: firstStartDate,
            groupIndex: firstGroupIndex,
            allDay: firstAllDay,
            index: firstIndex
        } = firstCellData;
        var {
            startDate: secondStartDate,
            groupIndex: secondGroupIndex,
            allDay: secondAllDay,
            index: secondIndex
        } = secondCellData;
        return firstStartDate.getTime() === secondStartDate.getTime() && firstGroupIndex === secondGroupIndex && firstAllDay === secondAllDay && firstIndex === secondIndex
    }
    getLastViewDate() {
        var completeViewDataMap = this.completeViewDataMap;
        var rowsCount = completeViewDataMap.length - 1;
        return completeViewDataMap[rowsCount][completeViewDataMap[rowsCount].length - 1].endDate
    }
    getStartViewDate() {
        return this._options.startViewDate
    }
    getIntervalDuration(intervalCount) {
        return this.viewDataGenerator._getIntervalDuration(intervalCount)
    }
    getLastCellEndDate() {
        return new Date(this.getLastViewDate().getTime() - _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.dateToMilliseconds("minute"))
    }
    getLastViewDateByEndDayHour(endDayHour) {
        var lastCellEndDate = this.getLastCellEndDate();
        var endTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.dateTimeFromDecimal(endDayHour);
        var endDateOfLastViewCell = new Date(lastCellEndDate.setHours(endTime.hours, endTime.minutes));
        return this._adjustEndDateByDaylightDiff(lastCellEndDate, endDateOfLastViewCell)
    }
    _adjustEndDateByDaylightDiff(startDate, endDate) {
        var daylightDiff = _utils_timeZone__WEBPACK_IMPORTED_MODULE_10__.default.getDaylightOffsetInMs(startDate, endDate);
        var endDateOfLastViewCell = new Date(endDate.getTime() - daylightDiff);
        return new Date(endDateOfLastViewCell.getTime() - _core_utils_date__WEBPACK_IMPORTED_MODULE_2__.default.dateToMilliseconds("minute"))
    }
    getCellCountInDay(startDayHour, endDayHour, hoursInterval) {
        return this.viewDataGenerator.getCellCountInDay(startDayHour, endDayHour, hoursInterval)
    }
    getCellCount(options) {
        return this.viewDataGenerator.getCellCount(options)
    }
    getRowCount(options) {
        return this.viewDataGenerator.getRowCount(options)
    }
    getVisibleDayDuration(startDayHour, endDayHour, hoursInterval) {
        return this.viewDataGenerator.getVisibleDayDuration(startDayHour, endDayHour, hoursInterval)
    }
    _getRowCountWithAllDayRows() {
        var allDayRowCount = this._options.isAllDayPanelVisible ? 1 : 0;
        return this.getRowCount(this._options) + allDayRowCount
    }
    getFirstDayOfWeek(firstDayOfWeekOption) {
        return this.viewDataGenerator.getFirstDayOfWeek(firstDayOfWeekOption)
    }
    setViewOptions(options) {
        this._options = this._transformRenderOptions(options)
    }
    getViewOptions() {
        return this._options
    }
    getViewPortGroupCount() {
        var {
            dateTableGroupedMap: dateTableGroupedMap
        } = this.groupedDataMap;
        return (null === dateTableGroupedMap || void 0 === dateTableGroupedMap ? void 0 : dateTableGroupedMap.length) || 0
    }
}


/***/ }),

/***/ 98222:
/*!**************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/switch.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/core/events_engine */ 99064);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/devices */ 41881);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _editor_editor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./editor/editor */ 68016);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../events/utils/index */ 3151);
/* harmony import */ var _events_core_emitter_feedback__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../events/core/emitter.feedback */ 88215);
/* harmony import */ var _core_utils_position__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/position */ 9622);
/* harmony import */ var _animation_fx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../animation/fx */ 65736);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../localization/message */ 19336);
/* harmony import */ var _events_click__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../events/click */ 38894);
/* harmony import */ var _events_gesture_swipeable__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../events/gesture/swipeable */ 50161);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../core/utils/deferred */ 97233);
/**
 * DevExtreme (esm/ui/switch.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */















var SWITCH_CLASS = "dx-switch";
var SWITCH_WRAPPER_CLASS = SWITCH_CLASS + "-wrapper";
var SWITCH_CONTAINER_CLASS = SWITCH_CLASS + "-container";
var SWITCH_INNER_CLASS = SWITCH_CLASS + "-inner";
var SWITCH_HANDLE_CLASS = SWITCH_CLASS + "-handle";
var SWITCH_ON_VALUE_CLASS = SWITCH_CLASS + "-on-value";
var SWITCH_ON_CLASS = SWITCH_CLASS + "-on";
var SWITCH_OFF_CLASS = SWITCH_CLASS + "-off";
var SWITCH_ANIMATION_DURATION = 100;
var Switch = _editor_editor__WEBPACK_IMPORTED_MODULE_6__.default.inherit({
    _supportedKeys: function() {
        var isRTL = this.option("rtlEnabled");
        var click = function(e) {
            e.preventDefault();
            this._clickAction({
                event: e
            })
        };
        var move = function(value, e) {
            e.preventDefault();
            e.stopPropagation();
            this._saveValueChangeEvent(e);
            this._animateValue(value)
        };
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)(this.callBase(), {
            space: click,
            enter: click,
            leftArrow: move.bind(this, isRTL ? true : false),
            rightArrow: move.bind(this, isRTL ? false : true)
        })
    },
    _useTemplates: function() {
        return false
    },
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)(this.callBase(), {
            hoverStateEnabled: true,
            activeStateEnabled: true,
            switchedOnText: _localization_message__WEBPACK_IMPORTED_MODULE_11__.default.format("dxSwitch-switchedOnText"),
            switchedOffText: _localization_message__WEBPACK_IMPORTED_MODULE_11__.default.format("dxSwitch-switchedOffText"),
            value: false
        })
    },
    _defaultOptionsRules: function() {
        return this.callBase().concat([{
            device: function() {
                return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_3__.default.real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_3__.default.isSimulator()
            },
            options: {
                focusStateEnabled: true
            }
        }])
    },
    _feedbackHideTimeout: 0,
    _animating: false,
    _initMarkup: function() {
        this._renderContainers();
        this.$element().addClass(SWITCH_CLASS).append(this._$switchWrapper);
        this._renderSubmitElement();
        this._renderClick();
        this.setAria("role", "button");
        this._renderSwipeable();
        this.callBase();
        this._renderSwitchInner();
        this._renderLabels();
        this._renderValue()
    },
    _getInnerOffset: function(value, offset) {
        var ratio = (offset - this._offsetDirection() * Number(!value)) / 2;
        return 100 * ratio + "%"
    },
    _getHandleOffset: function(value, offset) {
        if (this.option("rtlEnabled")) {
            value = !value
        }
        if (value) {
            var calcValue = 100 * -offset - 100;
            return calcValue + "%"
        } else {
            return 100 * -offset + "%"
        }
    },
    _renderSwitchInner: function() {
        this._$switchInner = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(SWITCH_INNER_CLASS).appendTo(this._$switchContainer);
        this._$handle = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(SWITCH_HANDLE_CLASS).appendTo(this._$switchInner)
    },
    _renderLabels: function() {
        this._$labelOn = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(SWITCH_ON_CLASS).prependTo(this._$switchInner);
        this._$labelOff = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(SWITCH_OFF_CLASS).appendTo(this._$switchInner);
        this._setLabelsText()
    },
    _renderContainers: function() {
        this._$switchContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(SWITCH_CONTAINER_CLASS);
        this._$switchWrapper = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(SWITCH_WRAPPER_CLASS).append(this._$switchContainer)
    },
    _renderSwipeable: function() {
        this._createComponent(this.$element(), _events_gesture_swipeable__WEBPACK_IMPORTED_MODULE_13__.default, {
            elastic: false,
            immediate: true,
            onStart: this._swipeStartHandler.bind(this),
            onUpdated: this._swipeUpdateHandler.bind(this),
            onEnd: this._swipeEndHandler.bind(this),
            itemSizeFunc: this._getItemSizeFunc.bind(this)
        })
    },
    _getItemSizeFunc: function() {
        return (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)(this._$switchContainer, true) - (0,_core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(this._$handle.get(0)).width
    },
    _renderSubmitElement: function() {
        this._$submitElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<input>").attr("type", "hidden").appendTo(this.$element())
    },
    _getSubmitElement: function() {
        return this._$submitElement
    },
    _offsetDirection: function() {
        return this.option("rtlEnabled") ? -1 : 1
    },
    _renderPosition: function(state, swipeOffset) {
        var innerOffset = this._getInnerOffset(state, swipeOffset);
        var handleOffset = this._getHandleOffset(state, swipeOffset);
        this._$switchInner.css("transform", " translateX(" + innerOffset + ")");
        this._$handle.css("transform", " translateX(" + handleOffset + ")")
    },
    _validateValue: function() {
        var check = this.option("value");
        if ("boolean" !== typeof check) {
            this._options.silent("value", !!check)
        }
    },
    _renderClick: function() {
        var eventName = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_click__WEBPACK_IMPORTED_MODULE_12__.name, this.NAME);
        var $element = this.$element();
        this._clickAction = this._createAction(this._clickHandler.bind(this));
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__.default.off($element, eventName);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__.default.on($element, eventName, function(e) {
            this._clickAction({
                event: e
            })
        }.bind(this))
    },
    _clickHandler: function(args) {
        var e = args.event;
        this._saveValueChangeEvent(e);
        if (this._animating || this._swiping) {
            return
        }
        this._animateValue(!this.option("value"))
    },
    _animateValue: function(value) {
        var startValue = this.option("value");
        var endValue = value;
        if (startValue === endValue) {
            return
        }
        this._animating = true;
        var fromInnerOffset = this._getInnerOffset(startValue, 0);
        var toInnerOffset = this._getInnerOffset(endValue, 0);
        var fromHandleOffset = this._getHandleOffset(startValue, 0);
        var toHandleOffset = this._getHandleOffset(endValue, 0);
        var that = this;
        var fromInnerConfig = {};
        var toInnerConfig = {};
        var fromHandleConfig = {};
        var toHandlerConfig = {};
        fromInnerConfig.transform = " translateX(" + fromInnerOffset + ")";
        toInnerConfig.transform = " translateX(" + toInnerOffset + ")";
        fromHandleConfig.transform = " translateX(" + fromHandleOffset + ")";
        toHandlerConfig.transform = " translateX(" + toHandleOffset + ")";
        this.$element().toggleClass(SWITCH_ON_VALUE_CLASS, endValue);
        _animation_fx__WEBPACK_IMPORTED_MODULE_10__.default.animate(this._$handle, {
            from: fromHandleConfig,
            to: toHandlerConfig,
            duration: SWITCH_ANIMATION_DURATION
        });
        _animation_fx__WEBPACK_IMPORTED_MODULE_10__.default.animate(this._$switchInner, {
            from: fromInnerConfig,
            to: toInnerConfig,
            duration: SWITCH_ANIMATION_DURATION,
            complete: function() {
                that._animating = false;
                that.option("value", endValue)
            }
        })
    },
    _swipeStartHandler: function(e) {
        var state = this.option("value");
        var rtlEnabled = this.option("rtlEnabled");
        var maxOffOffset = rtlEnabled ? 0 : 1;
        var maxOnOffset = rtlEnabled ? 1 : 0;
        e.event.maxLeftOffset = state ? maxOffOffset : maxOnOffset;
        e.event.maxRightOffset = state ? maxOnOffset : maxOffOffset;
        this._swiping = true;
        this._feedbackDeferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_14__.Deferred;
        (0,_events_core_emitter_feedback__WEBPACK_IMPORTED_MODULE_8__.lock)(this._feedbackDeferred);
        this._toggleActiveState(this.$element(), this.option("activeStateEnabled"))
    },
    _swipeUpdateHandler: function(e) {
        this._renderPosition(this.option("value"), e.event.offset)
    },
    _swipeEndHandler: function(e) {
        var that = this;
        var offsetDirection = this._offsetDirection();
        var toInnerConfig = {};
        var toHandleConfig = {};
        var innerOffset = this._getInnerOffset(that.option("value"), e.event.targetOffset);
        var handleOffset = this._getHandleOffset(that.option("value"), e.event.targetOffset);
        toInnerConfig.transform = " translateX(" + innerOffset + ")";
        toHandleConfig.transform = " translateX(" + handleOffset + ")";
        _animation_fx__WEBPACK_IMPORTED_MODULE_10__.default.animate(this._$handle, {
            to: toHandleConfig,
            duration: SWITCH_ANIMATION_DURATION
        });
        _animation_fx__WEBPACK_IMPORTED_MODULE_10__.default.animate(this._$switchInner, {
            to: toInnerConfig,
            duration: SWITCH_ANIMATION_DURATION,
            complete: function() {
                that._swiping = false;
                var pos = that.option("value") + offsetDirection * e.event.targetOffset;
                that._saveValueChangeEvent(e.event);
                that.option("value", Boolean(pos));
                that._feedbackDeferred.resolve();
                that._toggleActiveState(that.$element(), false)
            }
        })
    },
    _renderValue: function() {
        this._validateValue();
        var val = this.option("value");
        this._renderPosition(val, 0);
        this.$element().toggleClass(SWITCH_ON_VALUE_CLASS, val);
        this._getSubmitElement().val(val);
        this.setAria({
            pressed: val,
            label: val ? this.option("switchedOnText") : this.option("switchedOffText")
        })
    },
    _setLabelsText: function() {
        this._$labelOn && this._$labelOn.text(this.option("switchedOnText"));
        this._$labelOff && this._$labelOff.text(this.option("switchedOffText"))
    },
    _visibilityChanged: function(visible) {
        if (visible) {
            this.repaint()
        }
    },
    _optionChanged: function(args) {
        switch (args.name) {
            case "width":
                delete this._marginBound;
                this._refresh();
                break;
            case "switchedOnText":
            case "switchedOffText":
                this._setLabelsText();
                break;
            case "value":
                this._renderValue();
                this.callBase(args);
                break;
            default:
                this.callBase(args)
        }
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_5__.default)("dxSwitch", Switch);
/* harmony default export */ __webpack_exports__["default"] = (Switch);


/***/ }),

/***/ 16515:
/*!*****************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/tab_panel.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _core_utils_support__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils/support */ 48491);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/devices */ 41881);
/* harmony import */ var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/dom_adapter */ 81113);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _multi_view__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./multi_view */ 19073);
/* harmony import */ var _tabs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tabs */ 28909);
/* harmony import */ var _tab_panel_item__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tab_panel/item */ 76946);
/* harmony import */ var _core_utils_icon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/utils/icon */ 60181);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/element */ 60213);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../core/utils/type */ 33275);
/* harmony import */ var _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/templates/bindable_template */ 32503);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../core/utils/window */ 88684);
/**
 * DevExtreme (esm/ui/tab_panel.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */















var TABPANEL_CLASS = "dx-tabpanel";
var TABPANEL_TABS_CLASS = "dx-tabpanel-tabs";
var TABPANEL_CONTAINER_CLASS = "dx-tabpanel-container";
var TABS_ITEM_TEXT_CLASS = "dx-tab-text";
var TabPanel = _multi_view__WEBPACK_IMPORTED_MODULE_7__.default.inherit({
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(this.callBase(), {
            itemTitleTemplate: "title",
            hoverStateEnabled: true,
            showNavButtons: false,
            scrollByContent: true,
            scrollingEnabled: true,
            onTitleClick: null,
            onTitleHold: null,
            onTitleRendered: null,
            badgeExpr: function(data) {
                return data ? data.badge : void 0
            }
        })
    },
    _defaultOptionsRules: function() {
        return this.callBase().concat([{
            device: function() {
                return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_4__.default.real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_4__.default.isSimulator()
            },
            options: {
                focusStateEnabled: true
            }
        }, {
            device: function() {
                return !_core_utils_support__WEBPACK_IMPORTED_MODULE_2__.touch
            },
            options: {
                swipeEnabled: false
            }
        }, {
            device: {
                platform: "generic"
            },
            options: {
                animationEnabled: false
            }
        }])
    },
    _init: function() {
        this.callBase();
        this.$element().addClass(TABPANEL_CLASS);
        this.setAria("role", "tabpanel")
    },
    _initMarkup: function() {
        this.callBase();
        this._createTitleActions();
        this._renderLayout()
    },
    _initTemplates: function() {
        this.callBase();
        this._templateManager.addDefaultTemplates({
            title: new _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_13__.BindableTemplate((function($container, data) {
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_12__.isPlainObject)(data)) {
                    var $iconElement = (0,_core_utils_icon__WEBPACK_IMPORTED_MODULE_10__.getImageContainer)(data.icon);
                    if ($iconElement) {
                        $container.append($iconElement)
                    }
                    if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_12__.isDefined)(data.title) && !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_12__.isPlainObject)(data.title)) {
                        $container.append(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_5__.default.createTextNode(data.title))
                    }
                } else if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_12__.isDefined)(data)) {
                    $container.text(String(data))
                }
                $container.wrapInner((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<span>").addClass(TABS_ITEM_TEXT_CLASS))
            }), ["title", "icon"], this.option("integrationOptions.watchMethod"))
        })
    },
    _createTitleActions: function() {
        this._createTitleClickAction();
        this._createTitleHoldAction();
        this._createTitleRenderedAction()
    },
    _createTitleClickAction: function() {
        this._titleClickAction = this._createActionByOption("onTitleClick")
    },
    _createTitleHoldAction: function() {
        this._titleHoldAction = this._createActionByOption("onTitleHold")
    },
    _createTitleRenderedAction: function() {
        this._titleRenderedAction = this._createActionByOption("onTitleRendered")
    },
    _renderContent: function() {
        var that = this;
        this.callBase();
        if (this.option("templatesRenderAsynchronously")) {
            this._resizeEventTimer = setTimeout((function() {
                that._updateLayout()
            }), 0)
        }
    },
    _renderLayout: function() {
        if (this._tabs) {
            this._updateLayout();
            return
        }
        var $element = this.$element();
        this._$tabContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(TABPANEL_TABS_CLASS).appendTo($element);
        var $tabs = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").appendTo(this._$tabContainer);
        this._tabs = this._createComponent($tabs, _tabs__WEBPACK_IMPORTED_MODULE_8__.default, this._tabConfig());
        this._$container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(TABPANEL_CONTAINER_CLASS).appendTo($element);
        this._$container.append(this._$wrapper);
        this._updateLayout()
    },
    _updateLayout: function() {
        if ((0,_core_utils_window__WEBPACK_IMPORTED_MODULE_14__.hasWindow)()) {
            var tabsHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterHeight)(this._$tabContainer);
            this._$container.css({
                marginTop: -tabsHeight,
                paddingTop: tabsHeight
            })
        }
    },
    _refreshActiveDescendant: function() {
        if (!this._tabs) {
            return
        }
        var tabs = this._tabs;
        var tabItems = tabs.itemElements();
        var $activeTab = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(tabItems[tabs.option("selectedIndex")]);
        var id = this.getFocusedItemId();
        this.setAria("controls", void 0, (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(tabItems));
        this.setAria("controls", id, $activeTab)
    },
    _tabConfig: function() {
        return {
            selectOnFocus: true,
            focusStateEnabled: this.option("focusStateEnabled"),
            hoverStateEnabled: this.option("hoverStateEnabled"),
            repaintChangesOnly: this.option("repaintChangesOnly"),
            tabIndex: this.option("tabIndex"),
            selectedIndex: this.option("selectedIndex"),
            badgeExpr: this.option("badgeExpr"),
            onItemClick: this._titleClickAction.bind(this),
            onItemHold: this._titleHoldAction.bind(this),
            itemHoldTimeout: this.option("itemHoldTimeout"),
            onSelectionChanged: function(e) {
                this.option("selectedIndex", e.component.option("selectedIndex"));
                this._refreshActiveDescendant()
            }.bind(this),
            onItemRendered: this._titleRenderedAction.bind(this),
            itemTemplate: this._getTemplateByOption("itemTitleTemplate"),
            items: this.option("items"),
            noDataText: null,
            scrollingEnabled: this.option("scrollingEnabled"),
            scrollByContent: this.option("scrollByContent"),
            showNavButtons: this.option("showNavButtons"),
            itemTemplateProperty: "tabTemplate",
            loopItemFocus: this.option("loop"),
            selectionRequired: true,
            onOptionChanged: function(args) {
                if ("focusedElement" === args.name) {
                    if (args.value) {
                        var $value = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(args.value);
                        var $newItem = this._itemElements().eq($value.index());
                        this.option("focusedElement", (0,_core_element__WEBPACK_IMPORTED_MODULE_11__.getPublicElement)($newItem))
                    } else {
                        this.option("focusedElement", args.value)
                    }
                }
            }.bind(this),
            onFocusIn: function(args) {
                this._focusInHandler(args.event)
            }.bind(this),
            onFocusOut: function(args) {
                if (!this._isFocusOutHandlerExecuting) {
                    this._focusOutHandler(args.event)
                }
            }.bind(this)
        }
    },
    _renderFocusTarget: function() {
        this._focusTarget().attr("tabIndex", -1)
    },
    _updateFocusState: function(e, isFocused) {
        this.callBase(e, isFocused);
        if (e.target === this._tabs._focusTarget().get(0)) {
            this._toggleFocusClass(isFocused, this._focusTarget())
        }
    },
    _focusOutHandler: function(e) {
        this._isFocusOutHandlerExecuting = true;
        this.callBase.apply(this, arguments);
        this._tabs._focusOutHandler(e);
        this._isFocusOutHandlerExecuting = false
    },
    _setTabsOption: function(name, value) {
        if (this._tabs) {
            this._tabs.option(name, value)
        }
    },
    _visibilityChanged: function(visible) {
        if (visible) {
            this._tabs._dimensionChanged();
            this._updateLayout()
        }
    },
    registerKeyHandler: function(key, handler) {
        this.callBase(key, handler);
        if (this._tabs) {
            this._tabs.registerKeyHandler(key, handler)
        }
    },
    repaint: function() {
        this.callBase();
        this._tabs.repaint()
    },
    _optionChanged: function(args) {
        var name = args.name;
        var value = args.value;
        var fullName = args.fullName;
        switch (name) {
            case "dataSource":
                this.callBase(args);
                break;
            case "items":
                this._setTabsOption(name, this.option(name));
                this._updateLayout();
                if (!this.option("repaintChangesOnly")) {
                    this._tabs.repaint()
                }
                this.callBase(args);
                break;
            case "width":
                this.callBase(args);
                this._tabs.repaint();
                break;
            case "selectedIndex":
            case "selectedItem":
                this._setTabsOption(fullName, value);
                this.callBase(args);
                if (true === this.option("focusStateEnabled")) {
                    var selectedIndex = this.option("selectedIndex");
                    var selectedTabContent = this._itemElements().eq(selectedIndex);
                    this.option("focusedElement", (0,_core_element__WEBPACK_IMPORTED_MODULE_11__.getPublicElement)(selectedTabContent))
                }
                break;
            case "itemHoldTimeout":
            case "focusStateEnabled":
            case "hoverStateEnabled":
                this._setTabsOption(fullName, value);
                this.callBase(args);
                break;
            case "scrollingEnabled":
            case "scrollByContent":
            case "showNavButtons":
                this._setTabsOption(fullName, value);
                break;
            case "focusedElement":
                var id = value ? (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(value).index() : value;
                var newItem = value ? this._tabs._itemElements().eq(id) : value;
                this._setTabsOption("focusedElement", (0,_core_element__WEBPACK_IMPORTED_MODULE_11__.getPublicElement)(newItem));
                this.callBase(args);
                break;
            case "itemTitleTemplate":
                this._setTabsOption("itemTemplate", this._getTemplateByOption("itemTitleTemplate"));
                break;
            case "onTitleClick":
                this._createTitleClickAction();
                this._setTabsOption("onItemClick", this._titleClickAction.bind(this));
                break;
            case "onTitleHold":
                this._createTitleHoldAction();
                this._setTabsOption("onItemHold", this._titleHoldAction.bind(this));
                break;
            case "onTitleRendered":
                this._createTitleRenderedAction();
                this._setTabsOption("onItemRendered", this._titleRenderedAction.bind(this));
                break;
            case "loop":
                this._setTabsOption("loopItemFocus", value);
                break;
            case "badgeExpr":
                this._invalidate();
                break;
            default:
                this.callBase(args)
        }
    },
    _clean: function() {
        clearTimeout(this._resizeEventTimer);
        this.callBase()
    }
});
TabPanel.ItemClass = _tab_panel_item__WEBPACK_IMPORTED_MODULE_9__.default;
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_6__.default)("dxTabPanel", TabPanel);
/* harmony default export */ __webpack_exports__["default"] = (TabPanel);


/***/ }),

/***/ 76946:
/*!**********************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/tab_panel/item.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ TabPanelItem; }
/* harmony export */ });
/* harmony import */ var _collection_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../collection/item */ 70855);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/common */ 37552);
/**
 * DevExtreme (esm/ui/tab_panel/item.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


class TabPanelItem extends _collection_item__WEBPACK_IMPORTED_MODULE_0__.default {
    _renderWatchers() {
        this._startWatcher("badge", _core_utils_common__WEBPACK_IMPORTED_MODULE_1__.noop);
        return super._renderWatchers()
    }
}


/***/ }),

/***/ 28909:
/*!************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/tabs.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/core/events_engine */ 99064);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/devices */ 41881);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./button */ 66037);
/* harmony import */ var _widget_utils_ink_ripple__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./widget/utils.ink_ripple */ 10906);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../events/utils/index */ 3151);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/type */ 33275);
/* harmony import */ var _events_pointer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../events/pointer */ 24842);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/utils/iterator */ 14975);
/* harmony import */ var _tabs_item__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./tabs/item */ 60312);
/* harmony import */ var _tabs_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./tabs/constants */ 28925);
/* harmony import */ var _themes__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./themes */ 78279);
/* harmony import */ var _events_hold__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../events/hold */ 69668);
/* harmony import */ var _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./scroll_view/ui.scrollable */ 79678);
/* harmony import */ var _collection_ui_collection_widget_live_update__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./collection/ui.collection_widget.live_update */ 61608);
/* harmony import */ var _core_utils_icon__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../core/utils/icon */ 60181);
/* harmony import */ var _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../core/templates/bindable_template */ 32503);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../core/utils/deferred */ 97233);
/* harmony import */ var _renovation_ui_scroll_view_utils_get_boundary_props__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../renovation/ui/scroll_view/utils/get_boundary_props */ 3749);
/* harmony import */ var _renovation_ui_scroll_view_utils_get_scroll_left_max__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../renovation/ui/scroll_view/utils/get_scroll_left_max */ 15256);
/**
 * DevExtreme (esm/ui/tabs.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */























var TABS_CLASS = "dx-tabs";
var TABS_WRAPPER_CLASS = "dx-tabs-wrapper";
var TABS_STRETCHED_CLASS = "dx-tabs-stretched";
var TABS_SCROLLABLE_CLASS = "dx-tabs-scrollable";
var TABS_NAV_BUTTONS_CLASS = "dx-tabs-nav-buttons";
var OVERFLOW_HIDDEN_CLASS = "dx-overflow-hidden";
var TABS_ITEM_CLASS = "dx-tab";
var TABS_ITEM_SELECTED_CLASS = "dx-tab-selected";
var TABS_NAV_BUTTON_CLASS = "dx-tabs-nav-button";
var TABS_LEFT_NAV_BUTTON_CLASS = "dx-tabs-nav-button-left";
var TABS_RIGHT_NAV_BUTTON_CLASS = "dx-tabs-nav-button-right";
var TABS_ITEM_TEXT_CLASS = "dx-tab-text";
var TABS_ITEM_DATA_KEY = "dxTabData";
var BUTTON_NEXT_ICON = "chevronnext";
var BUTTON_PREV_ICON = "chevronprev";
var FEEDBACK_HIDE_TIMEOUT = 100;
var FEEDBACK_DURATION_INTERVAL = 5;
var FEEDBACK_SCROLL_TIMEOUT = 300;
var TAB_OFFSET = 30;
var Tabs = _collection_ui_collection_widget_live_update__WEBPACK_IMPORTED_MODULE_17__.default.inherit({
    _activeStateUnit: "." + TABS_ITEM_CLASS,
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(this.callBase(), {
            hoverStateEnabled: true,
            showNavButtons: true,
            scrollByContent: true,
            scrollingEnabled: true,
            selectionMode: "single",
            activeStateEnabled: true,
            selectionRequired: false,
            selectOnFocus: true,
            loopItemFocus: false,
            useInkRipple: false,
            badgeExpr: function(data) {
                return data ? data.badge : void 0
            },
            _itemAttributes: {
                role: "tab"
            }
        })
    },
    _defaultOptionsRules: function() {
        var themeName = (0,_themes__WEBPACK_IMPORTED_MODULE_14__.current)();
        return this.callBase().concat([{
            device: function() {
                return "desktop" !== _core_devices__WEBPACK_IMPORTED_MODULE_3__.default.real().deviceType
            },
            options: {
                showNavButtons: false
            }
        }, {
            device: {
                deviceType: "desktop"
            },
            options: {
                scrollByContent: false
            }
        }, {
            device: function() {
                return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_3__.default.real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_3__.default.isSimulator()
            },
            options: {
                focusStateEnabled: true
            }
        }, {
            device: function() {
                return (0,_themes__WEBPACK_IMPORTED_MODULE_14__.isMaterial)(themeName)
            },
            options: {
                useInkRipple: true,
                selectOnFocus: false
            }
        }])
    },
    _init: function() {
        this.callBase();
        this.setAria("role", "tablist");
        this.$element().addClass(TABS_CLASS);
        this._renderWrapper();
        this._renderMultiple();
        this._feedbackHideTimeout = FEEDBACK_HIDE_TIMEOUT
    },
    _initTemplates: function() {
        this.callBase();
        this._templateManager.addDefaultTemplates({
            item: new _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_19__.BindableTemplate(function($container, data) {
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_9__.isPlainObject)(data)) {
                    this._prepareDefaultItemTemplate(data, $container)
                } else {
                    $container.text(String(data))
                }
                var $iconElement = (0,_core_utils_icon__WEBPACK_IMPORTED_MODULE_18__.getImageContainer)(data.icon);
                $iconElement && $iconElement.prependTo($container);
                $container.wrapInner((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<span>").addClass(TABS_ITEM_TEXT_CLASS))
            }.bind(this), ["text", "html", "icon"], this.option("integrationOptions.watchMethod"))
        })
    },
    _createItemByTemplate: function(itemTemplate, renderArgs) {
        var {
            itemData: itemData,
            container: container,
            index: index
        } = renderArgs;
        this._deferredTemplates[index] = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__.Deferred;
        return itemTemplate.render({
            model: itemData,
            container: container,
            index: index,
            onRendered: () => this._deferredTemplates[index].resolve()
        })
    },
    _itemClass: function() {
        return TABS_ITEM_CLASS
    },
    _selectedItemClass: function() {
        return TABS_ITEM_SELECTED_CLASS
    },
    _itemDataKey: function() {
        return TABS_ITEM_DATA_KEY
    },
    _initMarkup: function() {
        this._deferredTemplates = [];
        this.callBase();
        this.option("useInkRipple") && this._renderInkRipple();
        this.$element().addClass(OVERFLOW_HIDDEN_CLASS)
    },
    _render: function() {
        this.callBase();
        this._deferRenderScrolling()
    },
    _deferRenderScrolling() {
        _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__.when.apply(this, this._deferredTemplates).done(() => this._renderScrolling())
    },
    _renderScrolling: function() {
        var removeClasses = [TABS_STRETCHED_CLASS, _tabs_constants__WEBPACK_IMPORTED_MODULE_13__.TABS_EXPANDED_CLASS, OVERFLOW_HIDDEN_CLASS];
        this.$element().removeClass(removeClasses.join(" "));
        if (this.option("scrollingEnabled") && this._isItemsWidthExceeded()) {
            if (!this._scrollable) {
                this._renderScrollable();
                this._renderNavButtons()
            }
            var scrollable = this.getScrollable();
            scrollable.update();
            if (this.option("rtlEnabled")) {
                var maxLeftOffset = (0,_renovation_ui_scroll_view_utils_get_scroll_left_max__WEBPACK_IMPORTED_MODULE_22__.getScrollLeftMax)((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(this.getScrollable().container()).get(0));
                scrollable.scrollTo({
                    left: maxLeftOffset
                })
            }
            this._updateNavButtonsVisibility();
            this._scrollToItem(this.option("selectedItem"))
        }
        if (!(this.option("scrollingEnabled") && this._isItemsWidthExceeded())) {
            this._cleanScrolling();
            if (this._needStretchItems() && !this._isItemsWidthExceeded()) {
                this.$element().addClass(TABS_STRETCHED_CLASS)
            }
            this.$element().removeClass(TABS_NAV_BUTTONS_CLASS).addClass(_tabs_constants__WEBPACK_IMPORTED_MODULE_13__.TABS_EXPANDED_CLASS)
        }
    },
    _isItemsWidthExceeded: function() {
        var tabItemsWidth = this._getSummaryItemsWidth(this._getVisibleItems(), true);
        return tabItemsWidth - 1 > (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this.$element())
    },
    _needStretchItems: function() {
        var $visibleItems = this._getVisibleItems();
        var elementWidth = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this.$element());
        var itemsWidth = [];
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)($visibleItems, (_, item) => {
            itemsWidth.push((0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)(item, true))
        });
        var maxTabWidth = Math.max.apply(null, itemsWidth);
        return maxTabWidth >= elementWidth / $visibleItems.length
    },
    _cleanNavButtons: function() {
        if (!this._leftButton || !this._rightButton) {
            return
        }
        this._leftButton.$element().remove();
        this._rightButton.$element().remove();
        this._leftButton = null;
        this._rightButton = null
    },
    _cleanScrolling: function() {
        if (!this._scrollable) {
            return
        }
        this._$wrapper.appendTo(this.$element());
        this._scrollable.$element().remove();
        this._scrollable = null;
        this._cleanNavButtons()
    },
    _renderInkRipple: function() {
        this._inkRipple = (0,_widget_utils_ink_ripple__WEBPACK_IMPORTED_MODULE_6__.render)()
    },
    _toggleActiveState: function($element, value, e) {
        this.callBase.apply(this, arguments);
        if (!this._inkRipple) {
            return
        }
        var config = {
            element: $element,
            event: e
        };
        if (value) {
            this._inkRipple.showWave(config)
        } else {
            this._inkRipple.hideWave(config)
        }
    },
    _renderMultiple: function() {
        if ("multiple" === this.option("selectionMode")) {
            this.option("selectOnFocus", false)
        }
    },
    _renderWrapper: function() {
        this._$wrapper = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(TABS_WRAPPER_CLASS);
        this.$element().append(this._$wrapper)
    },
    _itemContainer: function() {
        return this._$wrapper
    },
    _renderScrollable: function() {
        var $itemContainer = this.$element().wrapInner((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(TABS_SCROLLABLE_CLASS)).children();
        this._scrollable = this._createComponent($itemContainer, _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_16__.default, {
            direction: "horizontal",
            showScrollbar: "never",
            useKeyboard: false,
            useNative: false,
            scrollByContent: this.option("scrollByContent"),
            onScroll: () => {
                this._updateNavButtonsVisibility()
            }
        });
        this.$element().append(this._scrollable.$element())
    },
    _scrollToItem: function(itemData) {
        if (!this._scrollable) {
            return
        }
        var $item = this._editStrategy.getItemElement(itemData);
        this._scrollable.scrollToElement($item)
    },
    _renderNavButtons: function() {
        this.$element().toggleClass(TABS_NAV_BUTTONS_CLASS, this.option("showNavButtons"));
        if (!this.option("showNavButtons")) {
            return
        }
        var rtlEnabled = this.option("rtlEnabled");
        this._leftButton = this._createNavButton(-TAB_OFFSET, rtlEnabled ? BUTTON_NEXT_ICON : BUTTON_PREV_ICON);
        var $leftButton = this._leftButton.$element();
        $leftButton.addClass(TABS_LEFT_NAV_BUTTON_CLASS);
        this.$element().prepend($leftButton);
        this._rightButton = this._createNavButton(TAB_OFFSET, rtlEnabled ? BUTTON_PREV_ICON : BUTTON_NEXT_ICON);
        var $rightButton = this._rightButton.$element();
        $rightButton.addClass(TABS_RIGHT_NAV_BUTTON_CLASS);
        this.$element().append($rightButton)
    },
    _updateNavButtonsVisibility: function() {
        var scrollable = this.getScrollable();
        this._leftButton && this._leftButton.option("disabled", (0,_renovation_ui_scroll_view_utils_get_boundary_props__WEBPACK_IMPORTED_MODULE_21__.isReachedLeft)(scrollable.scrollLeft(), 1));
        this._rightButton && this._rightButton.option("disabled", (0,_renovation_ui_scroll_view_utils_get_boundary_props__WEBPACK_IMPORTED_MODULE_21__.isReachedRight)((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(scrollable.container()).get(0), scrollable.scrollLeft(), 1))
    },
    _updateScrollPosition: function(offset, duration) {
        this._scrollable.update();
        this._scrollable.scrollBy(offset / duration)
    },
    _createNavButton: function(offset, icon) {
        var that = this;
        var holdAction = that._createAction((function() {
            that._holdInterval = setInterval((function() {
                that._updateScrollPosition(offset, FEEDBACK_DURATION_INTERVAL)
            }), FEEDBACK_DURATION_INTERVAL)
        }));
        var holdEventName = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_hold__WEBPACK_IMPORTED_MODULE_15__.default.name, "dxNavButton");
        var pointerUpEventName = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_10__.default.up, "dxNavButton");
        var pointerOutEventName = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_10__.default.out, "dxNavButton");
        var navButton = this._createComponent((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(TABS_NAV_BUTTON_CLASS), _button__WEBPACK_IMPORTED_MODULE_5__.default, {
            focusStateEnabled: false,
            icon: icon,
            onClick: function() {
                that._updateScrollPosition(offset, 1)
            },
            integrationOptions: {}
        });
        var $navButton = navButton.$element();
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__.default.on($navButton, holdEventName, {
            timeout: FEEDBACK_SCROLL_TIMEOUT
        }, function(e) {
            holdAction({
                event: e
            })
        }.bind(this));
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__.default.on($navButton, pointerUpEventName, (function() {
            that._clearInterval()
        }));
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__.default.on($navButton, pointerOutEventName, (function() {
            that._clearInterval()
        }));
        return navButton
    },
    _clearInterval: function() {
        if (this._holdInterval) {
            clearInterval(this._holdInterval)
        }
    },
    _updateSelection: function(addedSelection) {
        this._scrollable && this._scrollable.scrollToElement(this.itemElements().eq(addedSelection[0]), {
            left: 1,
            right: 1
        })
    },
    _visibilityChanged: function(visible) {
        if (visible) {
            this._dimensionChanged()
        }
    },
    _dimensionChanged: function() {
        this._renderScrolling()
    },
    _itemSelectHandler: function(e) {
        if ("single" === this.option("selectionMode") && this.isItemSelected(e.currentTarget)) {
            return
        }
        this.callBase(e)
    },
    _clean: function() {
        this._deferredTemplates = [];
        this._cleanScrolling();
        this.callBase()
    },
    _optionChanged: function(args) {
        switch (args.name) {
            case "useInkRipple":
            case "scrollingEnabled":
            case "showNavButtons":
                this._invalidate();
                break;
            case "scrollByContent":
                this._scrollable && this._scrollable.option(args.name, args.value);
                break;
            case "width":
                this.callBase(args);
                this._dimensionChanged();
                break;
            case "selectionMode":
                this._renderMultiple();
                this.callBase(args);
                break;
            case "badgeExpr":
                this._invalidate();
                break;
            default:
                this.callBase(args)
        }
    },
    _afterItemElementInserted() {
        this.callBase();
        this._deferRenderScrolling()
    },
    _afterItemElementDeleted($item, deletedActionArgs) {
        this.callBase($item, deletedActionArgs);
        this._renderScrolling()
    },
    getScrollable() {
        return this._scrollable
    }
});
Tabs.ItemClass = _tabs_item__WEBPACK_IMPORTED_MODULE_12__.default;
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_4__.default)("dxTabs", Tabs);
/* harmony default export */ __webpack_exports__["default"] = (Tabs);


/***/ }),

/***/ 28925:
/*!**********************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/tabs/constants.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TABS_EXPANDED_CLASS": function() { return /* binding */ TABS_EXPANDED_CLASS; }
/* harmony export */ });
/**
 * DevExtreme (esm/ui/tabs/constants.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
var TABS_EXPANDED_CLASS = "dx-tabs-expanded";


/***/ }),

/***/ 60312:
/*!*****************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/tabs/item.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _collection_item__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../collection/item */ 70855);
/**
 * DevExtreme (esm/ui/tabs/item.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var TABS_ITEM_BADGE_CLASS = "dx-tabs-item-badge";
var BADGE_CLASS = "dx-badge";
var TabsItem = _collection_item__WEBPACK_IMPORTED_MODULE_1__.default.inherit({
    _renderWatchers: function() {
        this.callBase();
        this._startWatcher("badge", this._renderBadge.bind(this))
    },
    _renderBadge: function(badge) {
        this._$element.children("." + BADGE_CLASS).remove();
        if (!badge) {
            return
        }
        var $badge = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(TABS_ITEM_BADGE_CLASS).addClass(BADGE_CLASS).text(badge);
        this._$element.append($badge)
    }
});
/* harmony default export */ __webpack_exports__["default"] = (TabsItem);


/***/ }),

/***/ 77100:
/*!***************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/tag_box.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/devices */ 41881);
/* harmony import */ var _core_element_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/element_data */ 25694);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../events/core/events_engine */ 99064);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/utils/common */ 37552);
/* harmony import */ var _core_utils_selection_filter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/utils/selection_filter */ 43722);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/utils/deferred */ 97233);
/* harmony import */ var _core_utils_dom__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/dom */ 16520);
/* harmony import */ var _core_element__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/element */ 60213);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/utils/type */ 33275);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../core/utils/window */ 88684);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_array__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../core/utils/array */ 36959);
/* harmony import */ var _localization_message__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../localization/message */ 19336);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../events/utils/index */ 3151);
/* harmony import */ var _events_click__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../events/click */ 38894);
/* harmony import */ var _text_box_utils_caret__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./text_box/utils.caret */ 76199);
/* harmony import */ var _data_data_source_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../data/data_source/utils */ 77382);
/* harmony import */ var _select_box__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./select_box */ 67373);
/* harmony import */ var _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../core/templates/bindable_template */ 32503);
/* harmony import */ var _text_box_utils_scroll__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./text_box/utils.scroll */ 89797);
/* harmony import */ var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./widget/ui.errors */ 42491);
/**
 * DevExtreme (esm/ui/tag_box.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

























var TAGBOX_TAG_DATA_KEY = "dxTagData";
var TAGBOX_CLASS = "dx-tagbox";
var TAGBOX_TAG_CONTAINER_CLASS = "dx-tag-container";
var TAGBOX_TAG_CLASS = "dx-tag";
var TAGBOX_MULTI_TAG_CLASS = "dx-tagbox-multi-tag";
var TAGBOX_CUSTOM_TAG_CLASS = "dx-tag-custom";
var TAGBOX_TAG_REMOVE_BUTTON_CLASS = "dx-tag-remove-button";
var TAGBOX_ONLY_SELECT_CLASS = "dx-tagbox-only-select";
var TAGBOX_SINGLE_LINE_CLASS = "dx-tagbox-single-line";
var TAGBOX_POPUP_WRAPPER_CLASS = "dx-tagbox-popup-wrapper";
var TAGBOX_TAG_CONTENT_CLASS = "dx-tag-content";
var TAGBOX_DEFAULT_FIELD_TEMPLATE_CLASS = "dx-tagbox-default-template";
var TAGBOX_CUSTOM_FIELD_TEMPLATE_CLASS = "dx-tagbox-custom-template";
var TEXTEDITOR_INPUT_CONTAINER_CLASS = "dx-texteditor-input-container";
var TAGBOX_MOUSE_WHEEL_DELTA_MULTIPLIER = -.3;
var TagBox = _select_box__WEBPACK_IMPORTED_MODULE_21__.default.inherit({
    _supportedKeys: function() {
        var parent = this.callBase();
        var sendToList = options => this._list._keyboardHandler(options);
        var rtlEnabled = this.option("rtlEnabled");
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)({}, parent, {
            backspace: function(e) {
                if (!this._isCaretAtTheStart()) {
                    return
                }
                this._processKeyboardEvent(e);
                this._isTagRemoved = true;
                var $tagToDelete = this._$focusedTag || this._tagElements().last();
                if (this._$focusedTag) {
                    this._moveTagFocus("prev", true)
                }
                if (0 === $tagToDelete.length) {
                    return
                }
                this._preserveFocusedTag = true;
                this._removeTagElement($tagToDelete);
                delete this._preserveFocusedTag
            },
            upArrow: (e, opts) => e.altKey || !this._list ? parent.upArrow.call(this, e) : sendToList(opts),
            downArrow: (e, opts) => e.altKey || !this._list ? parent.downArrow.call(this, e) : sendToList(opts),
            del: function(e) {
                if (!this._$focusedTag || !this._isCaretAtTheStart()) {
                    return
                }
                this._processKeyboardEvent(e);
                this._isTagRemoved = true;
                var $tagToDelete = this._$focusedTag;
                this._moveTagFocus("next", true);
                this._preserveFocusedTag = true;
                this._removeTagElement($tagToDelete);
                delete this._preserveFocusedTag
            },
            enter: function(e, options) {
                var isListItemFocused = this._list && null !== this._list.option("focusedElement");
                var isCustomItem = this.option("acceptCustomValue") && !isListItemFocused;
                if (isCustomItem) {
                    e.preventDefault();
                    "" !== this._searchValue() && this._customItemAddedHandler(e);
                    return
                }
                if (this.option("opened")) {
                    this._saveValueChangeEvent(e);
                    sendToList(options);
                    e.preventDefault()
                }
            },
            space: function(e, options) {
                var isOpened = this.option("opened");
                var isInputActive = this._shouldRenderSearchEvent();
                if (isOpened && !isInputActive) {
                    this._saveValueChangeEvent(e);
                    sendToList(options);
                    e.preventDefault()
                }
            },
            leftArrow: function(e) {
                if (!this._isCaretAtTheStart() || this._isEmpty() || this._isEditable() && rtlEnabled && !this._$focusedTag) {
                    return
                }
                e.preventDefault();
                var direction = rtlEnabled ? "next" : "prev";
                this._moveTagFocus(direction);
                !this.option("multiline") && this._scrollContainer(direction)
            },
            rightArrow: function(e) {
                if (!this._isCaretAtTheStart() || this._isEmpty() || this._isEditable() && !rtlEnabled && !this._$focusedTag) {
                    return
                }
                e.preventDefault();
                var direction = rtlEnabled ? "prev" : "next";
                this._moveTagFocus(direction);
                !this.option("multiline") && this._scrollContainer(direction)
            }
        })
    },
    _processKeyboardEvent: function(e) {
        e.preventDefault();
        e.stopPropagation();
        this._saveValueChangeEvent(e)
    },
    _isEmpty: function() {
        return 0 === this._getValue().length
    },
    _updateTagsContainer: function($element) {
        this._$tagsContainer = $element.addClass(TAGBOX_TAG_CONTAINER_CLASS)
    },
    _allowSelectItemByTab: function() {
        return false
    },
    _isCaretAtTheStart: function() {
        var position = (0,_text_box_utils_caret__WEBPACK_IMPORTED_MODULE_19__.default)(this._input());
        return 0 === position.start && 0 === position.end
    },
    _moveTagFocus: function(direction, clearOnBoundary) {
        if (!this._$focusedTag) {
            var tagElements = this._tagElements();
            this._$focusedTag = "next" === direction ? tagElements.first() : tagElements.last();
            this._toggleFocusClass(true, this._$focusedTag);
            return
        }
        var $nextFocusedTag = this._$focusedTag[direction](".".concat(TAGBOX_TAG_CLASS));
        if ($nextFocusedTag.length > 0) {
            this._replaceFocusedTag($nextFocusedTag)
        } else if (clearOnBoundary || "next" === direction && this._isEditable()) {
            this._clearTagFocus()
        }
    },
    _replaceFocusedTag: function($nextFocusedTag) {
        this._toggleFocusClass(false, this._$focusedTag);
        this._$focusedTag = $nextFocusedTag;
        this._toggleFocusClass(true, this._$focusedTag)
    },
    _clearTagFocus: function() {
        if (!this._$focusedTag) {
            return
        }
        this._toggleFocusClass(false, this._$focusedTag);
        delete this._$focusedTag
    },
    _focusClassTarget: function($element) {
        if ($element && $element.length && $element[0] !== this._focusTarget()[0]) {
            return $element
        }
        return this.callBase()
    },
    _getLabelContainer: function() {
        return this._$tagsContainer
    },
    _scrollContainer: function(direction) {
        if (this.option("multiline") || !(0,_core_utils_window__WEBPACK_IMPORTED_MODULE_12__.hasWindow)()) {
            return
        }
        if (!this._$tagsContainer) {
            return
        }
        var scrollPosition = this._getScrollPosition(direction);
        this._$tagsContainer.scrollLeft(scrollPosition)
    },
    _getScrollPosition: function(direction) {
        if ("start" === direction || "end" === direction) {
            return this._getBorderPosition(direction)
        }
        return this._$focusedTag ? this._getFocusedTagPosition(direction) : this._getBorderPosition("end")
    },
    _getBorderPosition: function(direction) {
        var rtlEnabled = this.option("rtlEnabled");
        var isScrollLeft = "end" === direction ^ rtlEnabled;
        var scrollSign = rtlEnabled ? -1 : 1;
        return isScrollLeft ^ !rtlEnabled ? 0 : scrollSign * (this._$tagsContainer.get(0).scrollWidth - (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)(this._$tagsContainer))
    },
    _getFocusedTagPosition: function(direction) {
        var rtlEnabled = this.option("rtlEnabled");
        var isScrollLeft = "next" === direction ^ rtlEnabled;
        var {
            left: scrollOffset
        } = this._$focusedTag.position();
        var scrollLeft = this._$tagsContainer.scrollLeft();
        if (isScrollLeft) {
            scrollOffset += (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)(this._$focusedTag, true) - (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)(this._$tagsContainer)
        }
        if (isScrollLeft ^ scrollOffset < 0) {
            scrollLeft += scrollOffset
        }
        return scrollLeft
    },
    _setNextValue: _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop,
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)(this.callBase(), {
            value: [],
            showDropDownButton: false,
            maxFilterQueryLength: 1500,
            tagTemplate: "tag",
            selectAllText: _localization_message__WEBPACK_IMPORTED_MODULE_16__.default.format("dxList-selectAll"),
            hideSelectedItems: false,
            selectedItems: [],
            selectAllMode: "page",
            onSelectAllValueChanged: null,
            maxDisplayedTags: void 0,
            showMultiTagOnly: true,
            onMultiTagPreparing: null,
            multiline: true,
            useSubmitBehavior: true
        })
    },
    _init: function() {
        this.callBase();
        this._selectedItems = [];
        this._initSelectAllValueChangedAction()
    },
    _initActions: function() {
        this.callBase();
        this._initMultiTagPreparingAction()
    },
    _initMultiTagPreparingAction: function() {
        this._multiTagPreparingAction = this._createActionByOption("onMultiTagPreparing", {
            beforeExecute: function(e) {
                this._multiTagPreparingHandler(e.args[0])
            }.bind(this),
            excludeValidators: ["disabled", "readOnly"]
        })
    },
    _multiTagPreparingHandler: function(args) {
        var {
            length: selectedCount
        } = this._getValue();
        if (!this.option("showMultiTagOnly")) {
            args.text = _localization_message__WEBPACK_IMPORTED_MODULE_16__.default.getFormatter("dxTagBox-moreSelected")(selectedCount - this.option("maxDisplayedTags") + 1)
        } else {
            args.text = _localization_message__WEBPACK_IMPORTED_MODULE_16__.default.getFormatter("dxTagBox-selected")(selectedCount)
        }
    },
    _initDynamicTemplates: function() {
        this.callBase();
        this._templateManager.addDefaultTemplates({
            tag: new _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_22__.BindableTemplate(($container, data) => {
                var _data$text;
                var $tagContent = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(TAGBOX_TAG_CONTENT_CLASS);
                (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<span>").text(null !== (_data$text = data.text) && void 0 !== _data$text ? _data$text : data).appendTo($tagContent);
                (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(TAGBOX_TAG_REMOVE_BUTTON_CLASS).appendTo($tagContent);
                $container.append($tagContent)
            }, ["text"], this.option("integrationOptions.watchMethod"), {
                text: this._displayGetter
            })
        })
    },
    _toggleSubmitElement: function(enabled) {
        if (enabled) {
            this._renderSubmitElement();
            this._setSubmitValue()
        } else {
            this._$submitElement && this._$submitElement.remove();
            delete this._$submitElement
        }
    },
    _renderSubmitElement: function() {
        if (!this.option("useSubmitBehavior")) {
            return
        }
        this._$submitElement = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<select>").attr("multiple", "multiple").css("display", "none").appendTo(this.$element())
    },
    _setSubmitValue: function() {
        if (!this.option("useSubmitBehavior")) {
            return
        }
        var value = this._getValue();
        var $options = [];
        for (var i = 0, n = value.length; i < n; i++) {
            var useDisplayText = this._shouldUseDisplayValue(value[i]);
            $options.push((0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<option>").val(useDisplayText ? this._displayGetter(value[i]) : value[i]).attr("selected", "selected"))
        }
        this._getSubmitElement().empty().append($options)
    },
    _initMarkup: function() {
        this._tagElementsCache = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)();
        var isSingleLineMode = !this.option("multiline");
        this.$element().addClass(TAGBOX_CLASS).toggleClass(TAGBOX_ONLY_SELECT_CLASS, !(this.option("searchEnabled") || this.option("acceptCustomValue"))).toggleClass(TAGBOX_SINGLE_LINE_CLASS, isSingleLineMode);
        this._initTagTemplate();
        this.callBase()
    },
    _render: function() {
        this.callBase();
        this._renderTagRemoveAction();
        this._renderSingleLineScroll();
        this._scrollContainer("start")
    },
    _initTagTemplate: function() {
        this._tagTemplate = this._getTemplateByOption("tagTemplate")
    },
    _renderField: function() {
        var isDefaultFieldTemplate = !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(this.option("fieldTemplate"));
        this.$element().toggleClass(TAGBOX_DEFAULT_FIELD_TEMPLATE_CLASS, isDefaultFieldTemplate).toggleClass(TAGBOX_CUSTOM_FIELD_TEMPLATE_CLASS, !isDefaultFieldTemplate);
        this.callBase()
    },
    _renderTagRemoveAction: function() {
        var tagRemoveAction = this._createAction(this._removeTagHandler.bind(this));
        var eventName = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_17__.addNamespace)(_events_click__WEBPACK_IMPORTED_MODULE_18__.name, "dxTagBoxTagRemove");
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off(this._$tagsContainer, eventName);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on(this._$tagsContainer, eventName, ".".concat(TAGBOX_TAG_REMOVE_BUTTON_CLASS), event => {
            tagRemoveAction({
                event: event
            })
        })
    },
    _renderSingleLineScroll: function() {
        var mouseWheelEvent = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_17__.addNamespace)("dxmousewheel", this.NAME);
        var $element = this.$element();
        var isMultiline = this.option("multiline");
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off($element, mouseWheelEvent);
        if ("desktop" !== _core_devices__WEBPACK_IMPORTED_MODULE_2__.default.real().deviceType) {
            this._$tagsContainer && this._$tagsContainer.css("overflowX", isMultiline ? "" : "auto");
            return
        }
        if (isMultiline) {
            return
        }
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on($element, mouseWheelEvent, this._tagContainerMouseWheelHandler.bind(this))
    },
    _tagContainerMouseWheelHandler: function(e) {
        var scrollLeft = this._$tagsContainer.scrollLeft();
        var delta = e.delta * TAGBOX_MOUSE_WHEEL_DELTA_MULTIPLIER;
        if (!(0,_events_utils_index__WEBPACK_IMPORTED_MODULE_17__.isCommandKeyPressed)(e) && (0,_text_box_utils_scroll__WEBPACK_IMPORTED_MODULE_23__.allowScroll)(this._$tagsContainer, delta, true)) {
            this._$tagsContainer.scrollLeft(scrollLeft + delta);
            return false
        }
    },
    _renderEvents: function() {
        this.callBase();
        var input = this._input();
        var namespace = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_17__.addNamespace)("keydown", this.NAME);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on(input, namespace, e => {
            var keyName = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_17__.normalizeKeyName)(e);
            if (!this._isControlKey(keyName) && this._isEditable()) {
                this._clearTagFocus()
            }
        })
    },
    _popupWrapperClass: function() {
        return this.callBase() + " " + TAGBOX_POPUP_WRAPPER_CLASS
    },
    _renderInput: function() {
        this.callBase();
        this._renderPreventBlurOnInputClick()
    },
    _renderPreventBlurOnInputClick: function() {
        var eventName = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_17__.addNamespace)("mousedown", "dxTagBox");
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.off(this._inputWrapper(), eventName);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__.default.on(this._inputWrapper(), eventName, e => {
            if (e.target !== this._input()[0] && this._isFocused()) {
                e.preventDefault()
            }
        })
    },
    _renderInputValueImpl: function() {
        return this._renderMultiSelect()
    },
    _loadInputValue: function() {
        return (0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.when)()
    },
    _clearTextValue: function() {
        this._input().val("");
        this._toggleEmptinessEventHandler();
        this.option("text", "")
    },
    _focusInHandler: function(e) {
        if (!this._preventNestedFocusEvent(e)) {
            this._scrollContainer("end")
        }
        this.callBase(e)
    },
    _renderInputValue: function() {
        this.option("displayValue", this._searchValue());
        return this.callBase()
    },
    _restoreInputText: function(saveEditingValue) {
        if (!saveEditingValue) {
            this._clearTextValue()
        }
    },
    _focusOutHandler: function(e) {
        if (!this._preventNestedFocusEvent(e)) {
            this._clearTagFocus();
            this._scrollContainer("start")
        }
        this.callBase(e)
    },
    _getFirstPopupElement: function() {
        return this.option("showSelectionControls") ? this._list.$element() : this.callBase()
    },
    _initSelectAllValueChangedAction: function() {
        this._selectAllValueChangeAction = this._createActionByOption("onSelectAllValueChanged")
    },
    _renderList: function() {
        this.callBase();
        this._setListDataSourceFilter();
        if (this.option("showSelectionControls")) {
            this._list.registerKeyHandler("tab", e => this._popupElementTabHandler(e));
            this._list.registerKeyHandler("escape", e => this._popupElementEscHandler(e))
        }
    },
    _canListHaveFocus: function() {
        return "useButtons" === this.option("applyValueMode")
    },
    _listConfig: function() {
        var selectionMode = this.option("showSelectionControls") ? "all" : "multiple";
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)(this.callBase(), {
            selectionMode: selectionMode,
            selectAllText: this.option("selectAllText"),
            onSelectAllValueChanged: _ref => {
                var {
                    value: value
                } = _ref;
                this._selectAllValueChangeAction({
                    value: value
                })
            },
            selectAllMode: this.option("selectAllMode"),
            selectedItems: this._selectedItems,
            onFocusedItemChanged: null
        })
    },
    _renderMultiSelect: function() {
        var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred;
        this._updateTagsContainer(this._$textEditorInputContainer);
        this._renderInputSize();
        this._renderTags().done(() => {
            this._popup && this._popup.refreshPosition();
            d.resolve()
        }).fail(d.reject);
        return d.promise()
    },
    _listItemClickHandler: function(e) {
        !this.option("showSelectionControls") && this._clearTextValue();
        if ("useButtons" === this.option("applyValueMode")) {
            return
        }
        this.callBase(e);
        this._saveValueChangeEvent(void 0)
    },
    _shouldClearFilter: function() {
        var shouldClearFilter = this.callBase();
        var showSelectionControls = this.option("showSelectionControls");
        return !showSelectionControls && shouldClearFilter
    },
    _renderInputSize: function() {
        var $input = this._input();
        var value = $input.val();
        var isEmptyInput = (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isString)(value) && value;
        var width = "";
        var size = "";
        var canTypeText = this.option("searchEnabled") || this.option("acceptCustomValue");
        if (isEmptyInput && canTypeText) {
            var $calculationElement = (0,_core_utils_dom__WEBPACK_IMPORTED_MODULE_9__.createTextElementHiddenCopy)($input, value, {
                includePaddings: true
            });
            $calculationElement.insertAfter($input);
            width = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)($calculationElement) + 5;
            $calculationElement.remove()
        } else if (!value) {
            size = 1
        }
        $input.css("width", width);
        $input.attr("size", size)
    },
    _renderInputSubstitution: function() {
        this.callBase();
        this._updateWidgetHeight()
    },
    _getValue: function() {
        return this.option("value") || []
    },
    _multiTagRequired: function() {
        var values = this._getValue();
        var maxDisplayedTags = this.option("maxDisplayedTags");
        return (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(maxDisplayedTags) && values.length > maxDisplayedTags
    },
    _renderMultiTag: function($input) {
        var $tag = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(TAGBOX_TAG_CLASS).addClass(TAGBOX_MULTI_TAG_CLASS);
        var args = {
            multiTagElement: (0,_core_element__WEBPACK_IMPORTED_MODULE_10__.getPublicElement)($tag),
            selectedItems: this.option("selectedItems")
        };
        this._multiTagPreparingAction(args);
        if (args.cancel) {
            return false
        }
        $tag.data(TAGBOX_TAG_DATA_KEY, args.text);
        $tag.insertBefore($input);
        this._tagTemplate.render({
            model: args.text,
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_10__.getPublicElement)($tag)
        });
        return $tag
    },
    _getFilter: function(creator) {
        var dataSourceFilter = this._dataController.filter();
        var filterExpr = creator.getCombinedFilter(this.option("valueExpr"), dataSourceFilter);
        var filterQueryLength = encodeURI(JSON.stringify(filterExpr)).length;
        var maxFilterQueryLength = this.option("maxFilterQueryLength");
        if (filterQueryLength <= maxFilterQueryLength) {
            return filterExpr
        }
        _widget_ui_errors__WEBPACK_IMPORTED_MODULE_24__.default.log("W1019", maxFilterQueryLength)
    },
    _getFilteredItems: function(values) {
        var _this$_loadFilteredIt, _this$_list;
        null === (_this$_loadFilteredIt = this._loadFilteredItemsPromise) || void 0 === _this$_loadFilteredIt ? void 0 : _this$_loadFilteredIt.reject();
        var creator = new _core_utils_selection_filter__WEBPACK_IMPORTED_MODULE_7__.SelectionFilterCreator(values);
        var listSelectedItems = null === (_this$_list = this._list) || void 0 === _this$_list ? void 0 : _this$_list.option("selectedItems");
        var isListItemsLoaded = !!listSelectedItems && this._list._dataController.isLoaded();
        var selectedItems = listSelectedItems || this.option("selectedItems");
        var clientFilterFunction = creator.getLocalFilter(this._valueGetter);
        var filteredItems = selectedItems.filter(clientFilterFunction);
        var selectedItemsAlreadyLoaded = filteredItems.length === values.length;
        var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred;
        var dataController = this._dataController;
        if ((!this._isDataSourceChanged || isListItemsLoaded) && selectedItemsAlreadyLoaded) {
            return d.resolve(filteredItems).promise()
        } else {
            var {
                customQueryParams: customQueryParams,
                expand: expand,
                select: select
            } = dataController.loadOptions();
            var filter = this._getFilter(creator);
            dataController.loadFromStore({
                filter: filter,
                customQueryParams: customQueryParams,
                expand: expand,
                select: select
            }).done((data, extra) => {
                this._isDataSourceChanged = false;
                if (this._disposed) {
                    d.reject();
                    return
                }
                var {
                    data: items
                } = (0,_data_data_source_utils__WEBPACK_IMPORTED_MODULE_20__.normalizeLoadResult)(data, extra);
                var mappedItems = dataController.applyMapFunction(items);
                d.resolve(mappedItems.filter(clientFilterFunction))
            }).fail(d.reject);
            this._loadFilteredItemsPromise = d;
            return d.promise()
        }
    },
    _createTagsData: function(values, filteredItems) {
        var items = [];
        var cache = {};
        var isValueExprSpecified = "this" === this._valueGetterExpr();
        var filteredValues = {};
        filteredItems.forEach(filteredItem => {
            var filteredItemValue = isValueExprSpecified ? JSON.stringify(filteredItem) : this._valueGetter(filteredItem);
            filteredValues[filteredItemValue] = filteredItem
        });
        var loadItemPromises = [];
        values.forEach((value, index) => {
            var currentItem = filteredValues[isValueExprSpecified ? JSON.stringify(value) : value];
            if (isValueExprSpecified && !(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(currentItem)) {
                loadItemPromises.push(this._loadItem(value, cache).always(item => {
                    var newItem = this._createTagData(items, item, value, index);
                    items.splice(index, 0, newItem)
                }))
            } else {
                var newItem = this._createTagData(items, currentItem, value, index);
                items.splice(index, 0, newItem)
            }
        });
        var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred;
        _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.when.apply(this, loadItemPromises).always((function() {
            d.resolve(items)
        }));
        return d.promise()
    },
    _createTagData: function(items, item, value, valueIndex) {
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(item)) {
            this._selectedItems.push(item);
            return item
        } else {
            var selectedItem = this.option("selectedItem");
            var customItem = this._valueGetter(selectedItem) === value ? selectedItem : value;
            return customItem
        }
    },
    _isGroupedData: function() {
        return this.option("grouped") && !this._dataController.group()
    },
    _getItemsByValues: function(values) {
        var resultItems = [];
        values.forEach(function(value) {
            var item = this._getItemFromPlain(value);
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(item)) {
                resultItems.push(item)
            }
        }.bind(this));
        return resultItems
    },
    _getFilteredGroupedItems: function(values) {
        var selectedItems = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred;
        if (this._filteredGroupedItemsLoadPromise) {
            this._dataController.cancel(this._filteredGroupedItemsLoadPromise.operationId)
        }
        if (!this._dataController.items().length) {
            this._filteredGroupedItemsLoadPromise = this._dataController.load().done(() => {
                selectedItems.resolve(this._getItemsByValues(values))
            }).fail(() => {
                selectedItems.resolve([])
            }).always(() => {
                this._filteredGroupedItemsLoadPromise = void 0
            })
        } else {
            selectedItems.resolve(this._getItemsByValues(values))
        }
        return selectedItems.promise()
    },
    _loadTagsData: function() {
        var values = this._getValue();
        var tagData = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred;
        this._selectedItems = [];
        var filteredItemsPromise = this._isGroupedData() ? this._getFilteredGroupedItems(values) : this._getFilteredItems(values);
        filteredItemsPromise.done(filteredItems => {
            var items = this._createTagsData(values, filteredItems);
            items.always((function(data) {
                tagData.resolve(data)
            }))
        }).fail(tagData.reject.bind(this));
        return tagData.promise()
    },
    _renderTags: function() {
        var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred;
        var isPlainDataUsed = false;
        if (this._shouldGetItemsFromPlain(this._valuesToUpdate)) {
            this._selectedItems = this._getItemsFromPlain(this._valuesToUpdate);
            if (this._selectedItems.length === this._valuesToUpdate.length) {
                this._renderTagsImpl(this._selectedItems);
                isPlainDataUsed = true;
                d.resolve()
            }
        }
        if (!isPlainDataUsed) {
            this._loadTagsData().done(items => {
                if (this._disposed) {
                    d.reject();
                    return
                }
                this._renderTagsImpl(items);
                d.resolve()
            }).fail(d.reject)
        }
        return d.promise()
    },
    _renderTagsImpl: function(items) {
        this._renderTagsCore(items);
        this._renderEmptyState();
        if (!this._preserveFocusedTag) {
            this._clearTagFocus()
        }
    },
    _shouldGetItemsFromPlain: function(values) {
        return values && this._dataController.isLoaded() && values.length <= this._getPlainItems().length
    },
    _getItemsFromPlain: function(values) {
        var selectedItems = this._getSelectedItemsFromList(values);
        var needFilterPlainItems = 0 === selectedItems.length && values.length > 0 || selectedItems.length < values.length;
        if (needFilterPlainItems) {
            var plainItems = this._getPlainItems();
            selectedItems = this._filterSelectedItems(plainItems, values)
        }
        return selectedItems
    },
    _getSelectedItemsFromList: function(values) {
        var _this$_list2;
        var listSelectedItems = null === (_this$_list2 = this._list) || void 0 === _this$_list2 ? void 0 : _this$_list2.option("selectedItems");
        var selectedItems = [];
        if (values.length === (null === listSelectedItems || void 0 === listSelectedItems ? void 0 : listSelectedItems.length)) {
            selectedItems = this._filterSelectedItems(listSelectedItems, values)
        }
        return selectedItems
    },
    _filterSelectedItems: function(plainItems, values) {
        var selectedItems = plainItems.filter(dataItem => {
            var currentValue;
            for (var i = 0; i < values.length; i++) {
                currentValue = values[i];
                if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isObject)(currentValue)) {
                    if (this._isValueEquals(dataItem, currentValue)) {
                        return true
                    }
                } else if (this._isValueEquals(this._valueGetter(dataItem), currentValue)) {
                    return true
                }
            }
            return false
        }, this);
        return selectedItems
    },
    _integrateInput: function() {
        this._isInputReady.resolve();
        this.callBase();
        var tagsContainer = this.$element().find(".".concat(TEXTEDITOR_INPUT_CONTAINER_CLASS));
        this._updateTagsContainer(tagsContainer);
        this._renderTagRemoveAction()
    },
    _renderTagsCore: function(items) {
        var _this$_isInputReady;
        null === (_this$_isInputReady = this._isInputReady) || void 0 === _this$_isInputReady ? void 0 : _this$_isInputReady.reject();
        this._isInputReady = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred;
        this._renderField();
        this.option("selectedItems", this._selectedItems.slice());
        this._cleanTags();
        if (this._input().length > 0) {
            this._isInputReady.resolve()
        }
        (0,_core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.when)(this._isInputReady).done(() => {
            this._renderTagsElements(items)
        })
    },
    _renderTagsElements(items) {
        var $multiTag = this._multiTagRequired() && this._renderMultiTag(this._input());
        var showMultiTagOnly = this.option("showMultiTagOnly");
        var maxDisplayedTags = this.option("maxDisplayedTags");
        items.forEach((item, index) => {
            if ($multiTag && showMultiTagOnly || $multiTag && !showMultiTagOnly && index - maxDisplayedTags >= -1) {
                return false
            }
            this._renderTag(item, $multiTag || this._input())
        });
        if (this._isFocused()) {
            this._scrollContainer("end")
        }
        this._refreshTagElements()
    },
    _cleanTags: function() {
        if (this._multiTagRequired()) {
            this._tagElements().remove()
        } else {
            var $tags = this._tagElements();
            var values = this._getValue();
            (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)($tags, (function(_, tag) {
                var $tag = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(tag);
                var tagData = $tag.data(TAGBOX_TAG_DATA_KEY);
                if (!(null !== values && void 0 !== values && values.includes(tagData))) {
                    $tag.remove()
                }
            }))
        }
    },
    _renderEmptyState: function() {
        var isEmpty = !(this._getValue().length || this._selectedItems.length || this._searchValue());
        this._toggleEmptiness(isEmpty);
        this._renderDisplayText()
    },
    _renderDisplayText: function() {
        this._renderInputSize()
    },
    _refreshTagElements: function() {
        this._tagElementsCache = this.$element().find(".".concat(TAGBOX_TAG_CLASS))
    },
    _tagElements: function() {
        return this._tagElementsCache
    },
    _applyTagTemplate: function(item, $tag) {
        this._tagTemplate.render({
            model: item,
            container: (0,_core_element__WEBPACK_IMPORTED_MODULE_10__.getPublicElement)($tag)
        })
    },
    _renderTag: function(item, $input) {
        var value = this._valueGetter(item);
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(value)) {
            return
        }
        var $tag = this._getTag(value);
        var displayValue = this._displayGetter(item);
        var itemModel = this._getItemModel(item, displayValue);
        if ($tag) {
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(displayValue)) {
                $tag.empty();
                this._applyTagTemplate(itemModel, $tag)
            }
            $tag.removeClass(TAGBOX_CUSTOM_TAG_CLASS)
        } else {
            $tag = this._createTag(value, $input);
            if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(item)) {
                this._applyTagTemplate(itemModel, $tag)
            } else {
                $tag.addClass(TAGBOX_CUSTOM_TAG_CLASS);
                this._applyTagTemplate(value, $tag)
            }
        }
    },
    _getItemModel: function(item, displayValue) {
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isObject)(item) && (0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(displayValue)) {
            return item
        } else {
            return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_6__.ensureDefined)(displayValue, "")
        }
    },
    _getTag: function(value) {
        var $tags = this._tagElements();
        var tagsLength = $tags.length;
        var result = false;
        for (var i = 0; i < tagsLength; i++) {
            var $tag = $tags[i];
            var tagData = (0,_core_element_data__WEBPACK_IMPORTED_MODULE_3__.data)($tag, TAGBOX_TAG_DATA_KEY);
            if (value === tagData || (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_6__.equalByValue)(value, tagData)) {
                result = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)($tag);
                break
            }
        }
        return result
    },
    _createTag: function(value, $input) {
        return (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(TAGBOX_TAG_CLASS).data(TAGBOX_TAG_DATA_KEY, value).insertBefore($input)
    },
    _toggleEmptinessEventHandler: function() {
        this._toggleEmptiness(!this._getValue().length && !this._searchValue().length)
    },
    _customItemAddedHandler: function(e) {
        this.callBase(e);
        this._clearTextValue()
    },
    _removeTagHandler: function(args) {
        var e = args.event;
        e.stopPropagation();
        this._saveValueChangeEvent(e);
        var $tag = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(e.target).closest(".".concat(TAGBOX_TAG_CLASS));
        this._removeTagElement($tag)
    },
    _removeTagElement: function($tag) {
        if ($tag.hasClass(TAGBOX_MULTI_TAG_CLASS)) {
            if (!this.option("showMultiTagOnly")) {
                this.option("value", this._getValue().slice(0, this.option("maxDisplayedTags")))
            } else {
                this.reset()
            }
            return
        }
        var itemValue = $tag.data(TAGBOX_TAG_DATA_KEY);
        this._removeTagWithUpdate(itemValue);
        this._refreshTagElements()
    },
    _updateField: _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop,
    _removeTagWithUpdate: function(itemValue) {
        var value = this._getValue().slice();
        this._removeTag(value, itemValue);
        this.option("value", value);
        if (0 === value.length) {
            this._clearTagFocus()
        }
    },
    _getCurrentValue: function() {
        return this._lastValue()
    },
    _selectionChangeHandler: function(e) {
        if ("useButtons" === this.option("applyValueMode")) {
            return
        }
        var value = this._getValue().slice();
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)(e.removedItems || [], (_, removedItem) => {
            this._removeTag(value, this._valueGetter(removedItem))
        });
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)(e.addedItems || [], (_, addedItem) => {
            this._addTag(value, this._valueGetter(addedItem))
        });
        this._updateWidgetHeight();
        if (!(0,_core_utils_common__WEBPACK_IMPORTED_MODULE_6__.equalByValue)(this._list.option("selectedItemKeys"), this.option("value"))) {
            var listSelectionChangeEvent = this._list._getSelectionChangeEvent();
            listSelectionChangeEvent && this._saveValueChangeEvent(listSelectionChangeEvent);
            this.option("value", value)
        }
        this._list._saveSelectionChangeEvent(void 0)
    },
    _removeTag: function(value, item) {
        var index = this._valueIndex(item, value);
        if (index >= 0) {
            value.splice(index, 1)
        }
    },
    _addTag: function(value, item) {
        var index = this._valueIndex(item);
        if (index < 0) {
            value.push(item)
        }
    },
    _fieldRenderData: function() {
        return this._selectedItems.slice()
    },
    _completeSelection: function(value) {
        if (!this.option("showSelectionControls")) {
            this._setValue(value)
        }
    },
    _setValue: function(value) {
        if (null === value) {
            return
        }
        var useButtons = "useButtons" === this.option("applyValueMode");
        var valueIndex = this._valueIndex(value);
        var values = (useButtons ? this._list.option("selectedItemKeys") : this._getValue()).slice();
        if (valueIndex >= 0) {
            values.splice(valueIndex, 1)
        } else {
            values.push(value)
        }
        if ("useButtons" === this.option("applyValueMode")) {
            this._list.option("selectedItemKeys", values)
        } else {
            this.option("value", values)
        }
    },
    _isSelectedValue: function(value, cache) {
        return this._valueIndex(value, null, cache) > -1
    },
    _valueIndex: function(value, values, cache) {
        var result = -1;
        if (cache && "object" !== typeof value) {
            if (!cache.indexByValues) {
                cache.indexByValues = {};
                values = values || this._getValue();
                values.forEach((function(value, index) {
                    cache.indexByValues[value] = index
                }))
            }
            if (value in cache.indexByValues) {
                return cache.indexByValues[value]
            }
        }
        values = values || this._getValue();
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)(values, (index, selectedValue) => {
            if (this._isValueEquals(value, selectedValue)) {
                result = index;
                return false
            }
        });
        return result
    },
    _lastValue: function() {
        var values = this._getValue();
        var lastValue = values[values.length - 1];
        return null !== lastValue && void 0 !== lastValue ? lastValue : null
    },
    _shouldRenderSearchEvent: function() {
        return this.option("searchEnabled") || this.option("acceptCustomValue")
    },
    _searchHandler: function(e) {
        if (this.option("searchEnabled") && !!e && !this._isTagRemoved) {
            this.callBase(arguments);
            this._setListDataSourceFilter()
        }
        this._updateWidgetHeight();
        delete this._isTagRemoved
    },
    _updateWidgetHeight: function() {
        var element = this.$element();
        var originalHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)(element);
        this._renderInputSize();
        var currentHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)(element);
        if (this._popup && this.option("opened") && this._isEditable() && currentHeight !== originalHeight) {
            this._popup.repaint()
        }
    },
    _refreshSelected: function() {
        var _this$_list3;
        (null === (_this$_list3 = this._list) || void 0 === _this$_list3 ? void 0 : _this$_list3.getDataSource()) && this._list.option("selectedItems", this._selectedItems)
    },
    _resetListDataSourceFilter: function() {
        var dataController = this._dataController;
        delete this._userFilter;
        dataController.filter(null);
        dataController.reload()
    },
    _setListDataSourceFilter: function() {
        if (!this.option("hideSelectedItems") || !this._list) {
            return
        }
        var dataController = this._dataController;
        var valueGetterExpr = this._valueGetterExpr();
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isString)(valueGetterExpr) && "this" !== valueGetterExpr) {
            var filter = this._dataSourceFilterExpr();
            if (void 0 === this._userFilter) {
                this._userFilter = dataController.filter() || null
            }
            this._userFilter && filter.push(this._userFilter);
            filter.length ? dataController.filter(filter) : dataController.filter(null)
        } else {
            dataController.filter(this._dataSourceFilterFunction.bind(this))
        }
        dataController.load()
    },
    _dataSourceFilterExpr: function() {
        var filter = [];
        this._getValue().forEach(value => filter.push(["!", [this._valueGetterExpr(), value]]));
        return filter
    },
    _dataSourceFilterFunction: function(itemData) {
        var itemValue = this._valueGetter(itemData);
        var result = true;
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)(this._getValue(), (index, value) => {
            if (this._isValueEquals(value, itemValue)) {
                result = false;
                return false
            }
        });
        return result
    },
    _dataSourceChangedHandler: function() {
        this._isDataSourceChanged = true;
        this.callBase.apply(this, arguments)
    },
    _applyButtonHandler: function(args) {
        this._saveValueChangeEvent(args.event);
        this.option("value", this._getSortedListValues());
        this._clearTextValue();
        this.callBase();
        this._cancelSearchIfNeed()
    },
    _getSortedListValues: function() {
        var listValues = this._getListValues();
        var currentValue = this.option("value") || [];
        var existedItems = listValues.length ? (0,_core_utils_array__WEBPACK_IMPORTED_MODULE_15__.getIntersection)(currentValue, listValues) : [];
        var newItems = existedItems.length ? (0,_core_utils_array__WEBPACK_IMPORTED_MODULE_15__.removeDuplicates)(listValues, currentValue) : listValues;
        return existedItems.concat(newItems)
    },
    _getListValues: function() {
        if (!this._list) {
            return []
        }
        return this._getPlainItems(this._list.option("selectedItems")).map(item => this._valueGetter(item))
    },
    _setListDataSource: function() {
        var currentValue = this._getValue();
        this.callBase();
        if (currentValue !== this.option("value")) {
            this.option("value", currentValue)
        }
        this._refreshSelected()
    },
    _renderOpenedState: function() {
        this.callBase();
        if ("useButtons" === this.option("applyValueMode") && !this.option("opened")) {
            this._refreshSelected()
        }
    },
    reset: function() {
        this._restoreInputText();
        var defaultValue = this._getDefaultOptions().value;
        var currentValue = this.option("value");
        if (defaultValue && 0 === defaultValue.length && currentValue && defaultValue.length === currentValue.length) {
            return
        }
        this.callBase()
    },
    _clean: function() {
        this.callBase();
        delete this._defaultTagTemplate;
        delete this._valuesToUpdate;
        delete this._tagTemplate
    },
    _getSelectedItemsDifference(newItems, previousItems) {
        if (!newItems.length) {
            return {
                addedItems: [],
                removedItems: previousItems.slice()
            }
        }
        if (!previousItems.length) {
            return {
                addedItems: newItems.slice(),
                removedItems: []
            }
        }
        var previousItemsValuesMap = previousItems.reduce((map, item) => {
            var value = this._valueGetter(item);
            map[value] = item;
            return map
        }, {});
        var addedItems = [];
        newItems.forEach(item => {
            var value = this._valueGetter(item);
            if (!previousItemsValuesMap[value]) {
                addedItems.push(item)
            }
            delete previousItemsValuesMap[value]
        });
        return {
            addedItems: addedItems,
            removedItems: Object.values(previousItemsValuesMap)
        }
    },
    _optionChanged: function(args) {
        var {
            name: name,
            value: value,
            previousValue: previousValue
        } = args;
        switch (name) {
            case "onSelectAllValueChanged":
                this._initSelectAllValueChangedAction();
                break;
            case "onMultiTagPreparing":
                this._initMultiTagPreparingAction();
                this._renderTags();
                break;
            case "hideSelectedItems":
                if (value) {
                    this._setListDataSourceFilter()
                } else {
                    this._resetListDataSourceFilter()
                }
                break;
            case "useSubmitBehavior":
                this._toggleSubmitElement(value);
                break;
            case "displayExpr":
                this.callBase(args);
                this._initTemplates();
                this._invalidate();
                break;
            case "tagTemplate":
                this._initTagTemplate();
                this._invalidate();
                break;
            case "selectAllText":
                this._setListOption("selectAllText", this.option("selectAllText"));
                break;
            case "readOnly":
            case "disabled":
                this.callBase(args);
                !value && this._refreshEvents();
                break;
            case "value":
                this._valuesToUpdate = value;
                this.callBase(args);
                this._valuesToUpdate = void 0;
                this._setListDataSourceFilter();
                break;
            case "maxDisplayedTags":
            case "showMultiTagOnly":
                this._renderTags();
                break;
            case "selectAllMode":
                this._setListOption(name, value);
                break;
            case "selectedItem":
                break;
            case "selectedItems":
                this._selectionChangedAction(this._getSelectedItemsDifference(value, previousValue));
                break;
            case "multiline":
                this.$element().toggleClass(TAGBOX_SINGLE_LINE_CLASS, !value);
                this._renderSingleLineScroll();
                break;
            case "maxFilterQueryLength":
                break;
            default:
                this.callBase(args)
        }
    },
    _getActualSearchValue: function() {
        return this.callBase() || this._searchValue()
    },
    _popupHidingHandler: function() {
        this.callBase();
        this._clearFilter()
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_5__.default)("dxTagBox", TagBox);
/* harmony default export */ __webpack_exports__["default"] = (TagBox);


/***/ }),

/***/ 46740:
/*!*****************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/text_area.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/core/events_engine */ 99064);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils/common */ 37552);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/window */ 88684);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/utils/type */ 33275);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../events/utils/index */ 3151);
/* harmony import */ var _events_pointer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../events/pointer */ 24842);
/* harmony import */ var _events_gesture_emitter_gesture_scroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../events/gesture/emitter.gesture.scroll */ 2136);
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/utils/size */ 84167);
/* harmony import */ var _text_box_utils_scroll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./text_box/utils.scroll */ 89797);
/* harmony import */ var _text_box__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./text_box */ 70426);
/**
 * DevExtreme (esm/ui/text_area.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */













var TEXTAREA_CLASS = "dx-textarea";
var TEXTEDITOR_INPUT_CLASS = "dx-texteditor-input";
var TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE = "dx-texteditor-input-auto-resize";
var TextArea = _text_box__WEBPACK_IMPORTED_MODULE_12__.default.inherit({
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this.callBase(), {
            spellcheck: true,
            minHeight: void 0,
            maxHeight: void 0,
            autoResizeEnabled: false
        })
    },
    _initMarkup: function() {
        this.$element().addClass(TEXTAREA_CLASS);
        this.callBase();
        this.setAria("multiline", "true")
    },
    _renderContentImpl: function() {
        this._updateInputHeight();
        this.callBase()
    },
    _renderInput: function() {
        this.callBase();
        this._renderScrollHandler()
    },
    _createInput: function() {
        var $input = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<textarea>");
        this._applyInputAttributes($input, this.option("inputAttr"));
        this._updateInputAutoResizeAppearance($input);
        return $input
    },
    _applyInputAttributes: function($input, customAttributes) {
        $input.attr(customAttributes).addClass(TEXTEDITOR_INPUT_CLASS)
    },
    _renderScrollHandler: function() {
        this._eventY = 0;
        var $input = this._input();
        var initScrollData = (0,_text_box_utils_scroll__WEBPACK_IMPORTED_MODULE_11__.prepareScrollData)($input, true);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__.default.on($input, (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_gesture_emitter_gesture_scroll__WEBPACK_IMPORTED_MODULE_9__.default.init, this.NAME), initScrollData, _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop);
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__.default.on($input, (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_8__.default.down, this.NAME), this._pointerDownHandler.bind(this));
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__.default.on($input, (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_8__.default.move, this.NAME), this._pointerMoveHandler.bind(this))
    },
    _pointerDownHandler: function(e) {
        this._eventY = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.eventData)(e).y
    },
    _pointerMoveHandler: function(e) {
        var currentEventY = (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.eventData)(e).y;
        var delta = this._eventY - currentEventY;
        if ((0,_text_box_utils_scroll__WEBPACK_IMPORTED_MODULE_11__.allowScroll)(this._input(), delta)) {
            e.isScrollingEvent = true;
            e.stopPropagation()
        }
        this._eventY = currentEventY
    },
    _renderDimensions: function() {
        var $element = this.$element();
        var element = $element.get(0);
        var width = this._getOptionValue("width", element);
        var height = this._getOptionValue("height", element);
        var minHeight = this.option("minHeight");
        var maxHeight = this.option("maxHeight");
        $element.css({
            minHeight: void 0 !== minHeight ? minHeight : "",
            maxHeight: void 0 !== maxHeight ? maxHeight : "",
            width: width,
            height: height
        })
    },
    _resetDimensions: function() {
        this.$element().css({
            height: "",
            minHeight: "",
            maxHeight: ""
        })
    },
    _renderEvents: function() {
        if (this.option("autoResizeEnabled")) {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__.default.on(this._input(), (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)("input paste", this.NAME), this._updateInputHeight.bind(this))
        }
        this.callBase()
    },
    _refreshEvents: function() {
        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__.default.off(this._input(), (0,_events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)("input paste", this.NAME));
        this.callBase()
    },
    _getHeightDifference($input) {
        return (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getVerticalOffsets)(this._$element.get(0), false) + (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getVerticalOffsets)(this._$textEditorContainer.get(0), false) + (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getVerticalOffsets)(this._$textEditorInputContainer.get(0), false) + (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getElementBoxParams)("height", (0,_core_utils_window__WEBPACK_IMPORTED_MODULE_3__.getWindow)().getComputedStyle($input.get(0))).margin
    },
    _updateInputHeight: function() {
        if (!(0,_core_utils_window__WEBPACK_IMPORTED_MODULE_3__.hasWindow)()) {
            return
        }
        var $input = this._input();
        var height = this.option("height");
        var autoHeightResizing = void 0 === height && this.option("autoResizeEnabled");
        var shouldCalculateInputHeight = autoHeightResizing || void 0 === height && this.option("minHeight");
        if (!shouldCalculateInputHeight) {
            $input.css("height", "");
            return
        }
        this._resetDimensions();
        this._$element.css("height", (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getOuterHeight)(this._$element));
        $input.css("height", 0);
        var heightDifference = this._getHeightDifference($input);
        this._renderDimensions();
        var minHeight = this._getBoundaryHeight("minHeight");
        var maxHeight = this._getBoundaryHeight("maxHeight");
        var inputHeight = $input[0].scrollHeight;
        if (void 0 !== minHeight) {
            inputHeight = Math.max(inputHeight, minHeight - heightDifference)
        }
        if (void 0 !== maxHeight) {
            var adjustedMaxHeight = maxHeight - heightDifference;
            var needScroll = inputHeight > adjustedMaxHeight;
            inputHeight = Math.min(inputHeight, adjustedMaxHeight);
            this._updateInputAutoResizeAppearance($input, !needScroll)
        }
        $input.css("height", inputHeight);
        if (autoHeightResizing) {
            this._$element.css("height", "auto")
        }
    },
    _getBoundaryHeight: function(optionName) {
        var boundaryValue = this.option(optionName);
        if ((0,_core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(boundaryValue)) {
            return "number" === typeof boundaryValue ? boundaryValue : (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_10__.parseHeight)(boundaryValue, this.$element().get(0).parentElement, this._$element.get(0))
        }
    },
    _renderInputType: _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop,
    _visibilityChanged: function(visible) {
        if (visible) {
            this._updateInputHeight()
        }
    },
    _updateInputAutoResizeAppearance: function($input, isAutoResizeEnabled) {
        if ($input) {
            var autoResizeEnabled = (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_2__.ensureDefined)(isAutoResizeEnabled, this.option("autoResizeEnabled"));
            $input.toggleClass(TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE, autoResizeEnabled)
        }
    },
    _dimensionChanged: function() {
        if (this.option("visible")) {
            this._updateInputHeight()
        }
    },
    _optionChanged: function(args) {
        switch (args.name) {
            case "autoResizeEnabled":
                this._updateInputAutoResizeAppearance(this._input(), args.value);
                this._refreshEvents();
                this._updateInputHeight();
                break;
            case "value":
            case "height":
                this.callBase(args);
                this._updateInputHeight();
                break;
            case "minHeight":
            case "maxHeight":
                this._renderDimensions();
                this._updateInputHeight();
                break;
            case "visible":
                this.callBase(args);
                args.value && this._updateInputHeight();
                break;
            default:
                this.callBase(args)
        }
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_4__.default)("dxTextArea", TextArea);
/* harmony default export */ __webpack_exports__["default"] = (TextArea);


/***/ }),

/***/ 89797:
/*!*****************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/text_box/utils.scroll.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "allowScroll": function() { return /* binding */ allowScroll; },
/* harmony export */   "prepareScrollData": function() { return /* binding */ prepareScrollData; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../events/utils/index */ 3151);
/**
 * DevExtreme (esm/ui/text_box/utils.scroll.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */


var allowScroll = function(container, delta, shiftKey) {
    var $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(container);
    var scrollTopPos = shiftKey ? $container.scrollLeft() : $container.scrollTop();
    var prop = shiftKey ? "Width" : "Height";
    var scrollSize = $container.prop("scroll".concat(prop));
    var clientSize = $container.prop("client".concat(prop));
    var scrollBottomPos = scrollSize - clientSize - scrollTopPos | 0;
    if (0 === scrollTopPos && 0 === scrollBottomPos) {
        return false
    }
    var isScrollFromTop = 0 === scrollTopPos && delta >= 0;
    var isScrollFromBottom = 0 === scrollBottomPos && delta <= 0;
    var isScrollFromMiddle = scrollTopPos > 0 && scrollBottomPos > 0;
    if (isScrollFromTop || isScrollFromBottom || isScrollFromMiddle) {
        return true
    }
};
var prepareScrollData = function(container, validateTarget) {
    var $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(container);
    return {
        validate: function(e) {
            if ((0,_events_utils_index__WEBPACK_IMPORTED_MODULE_1__.isDxMouseWheelEvent)(e) && (eventTarget = e.target, validateTarget ? (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(eventTarget).is(container) : true)) {
                if (allowScroll($container, -e.delta, e.shiftKey)) {
                    e._needSkipEvent = true;
                    return true
                }
                return false
            }
            var eventTarget
        }
    }
};



/***/ }),

/***/ 8866:
/*!***************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/toolbar.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _toolbar_ui_toolbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toolbar/ui.toolbar */ 63739);
/**
 * DevExtreme (esm/ui/toolbar.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

/* harmony default export */ __webpack_exports__["default"] = (_toolbar_ui_toolbar__WEBPACK_IMPORTED_MODULE_0__.default);


/***/ }),

/***/ 4025:
/*!****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/toolbar/internal/ui.toolbar.menu.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ DropDownMenu; }
/* harmony export */ });
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/devices */ 41881);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../widget/ui.widget */ 69703);
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../button */ 66037);
/* harmony import */ var _ui_toolbar_menu_list__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ui.toolbar.menu.list */ 96460);
/* harmony import */ var _themes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../themes */ 78279);
/* harmony import */ var _core_templates_child_default_template__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../core/templates/child_default_template */ 51968);
/* harmony import */ var _ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ui.toolbar.utils */ 49636);
/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../core/utils/window */ 88684);
/* harmony import */ var _popup__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../popup */ 24113);
/**
 * DevExtreme (esm/ui/toolbar/internal/ui.toolbar.menu.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */












var DROP_DOWN_MENU_CLASS = "dx-dropdownmenu";
var DROP_DOWN_MENU_POPUP_CLASS = "dx-dropdownmenu-popup";
var DROP_DOWN_MENU_POPUP_WRAPPER_CLASS = "dx-dropdownmenu-popup-wrapper";
var DROP_DOWN_MENU_LIST_CLASS = "dx-dropdownmenu-list";
var DROP_DOWN_MENU_BUTTON_CLASS = "dx-dropdownmenu-button";
var POPUP_BOUNDARY_VERTICAL_OFFSET = 10;
var POPUP_VERTICAL_OFFSET = 3;
class DropDownMenu extends _widget_ui_widget__WEBPACK_IMPORTED_MODULE_4__.default {
    _supportedKeys() {
        var extension = {};
        if (!this.option("opened") || !this._list.option("focusedElement")) {
            extension = this._button._supportedKeys()
        }
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(super._supportedKeys(), extension, {
            tab: function() {
                this._popup && this._popup.hide()
            }
        })
    }
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(super._getDefaultOptions(), {
            items: [],
            onItemClick: null,
            dataSource: null,
            itemTemplate: "item",
            onButtonClick: null,
            activeStateEnabled: true,
            hoverStateEnabled: true,
            opened: false,
            onItemRendered: null,
            closeOnClick: true,
            useInkRipple: false,
            container: void 0,
            animation: {
                show: {
                    type: "fade",
                    from: 0,
                    to: 1
                },
                hide: {
                    type: "fade",
                    to: 0
                }
            }
        })
    }
    _defaultOptionsRules() {
        return super._defaultOptionsRules().concat([{
            device: function() {
                return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_2__.default.real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_2__.default.isSimulator()
            },
            options: {
                focusStateEnabled: true
            }
        }, {
            device: function() {
                return (0,_themes__WEBPACK_IMPORTED_MODULE_7__.isMaterial)()
            },
            options: {
                useInkRipple: true,
                animation: {
                    show: {
                        type: "pop",
                        duration: 200,
                        from: {
                            scale: 0
                        },
                        to: {
                            scale: 1
                        }
                    },
                    hide: {
                        type: "pop",
                        duration: 200,
                        from: {
                            scale: 1
                        },
                        to: {
                            scale: 0
                        }
                    }
                }
            }
        }])
    }
    _init() {
        super._init();
        this.$element().addClass(DROP_DOWN_MENU_CLASS);
        this._initItemClickAction();
        this._initButtonClickAction()
    }
    _initItemClickAction() {
        this._itemClickAction = this._createActionByOption("onItemClick")
    }
    _initButtonClickAction() {
        this._buttonClickAction = this._createActionByOption("onButtonClick")
    }
    _initTemplates() {
        this._templateManager.addDefaultTemplates({
            content: new _core_templates_child_default_template__WEBPACK_IMPORTED_MODULE_8__.ChildDefaultTemplate("content")
        });
        super._initTemplates()
    }
    _initMarkup() {
        this._renderButton();
        super._initMarkup()
    }
    _render() {
        super._render();
        this.setAria({
            haspopup: true,
            expanded: this.option("opened")
        })
    }
    _renderContentImpl() {
        if (this.option("opened")) {
            this._renderPopup()
        }
    }
    _clean() {
        this._cleanFocusState();
        this._list && this._list.$element().remove();
        this._popup && this._popup.$element().remove();
        delete this._list;
        delete this._popup
    }
    _renderButton() {
        var $button = this.$element().addClass(DROP_DOWN_MENU_BUTTON_CLASS);
        this._button = this._createComponent($button, _button__WEBPACK_IMPORTED_MODULE_5__.default, {
            icon: "overflow",
            template: "content",
            useInkRipple: this.option("useInkRipple"),
            hoverStateEnabled: false,
            focusStateEnabled: false,
            onClick: e => {
                this.option("opened", !this.option("opened"));
                this._buttonClickAction(e)
            }
        })
    }
    _toggleActiveState($element, value, e) {
        this._button._toggleActiveState($element, value, e)
    }
    _toggleMenuVisibility(opened) {
        var state = null !== opened && void 0 !== opened ? opened : !this._popup.option("visible");
        if (opened) {
            this._renderPopup()
        }
        this._popup.toggle(state);
        this.setAria("expanded", state)
    }
    _renderPopup() {
        if (this._$popup) {
            return
        }
        this._$popup = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").appendTo(this.$element());
        var {
            rtlEnabled: rtlEnabled,
            container: container,
            animation: animation
        } = this.option();
        this._popup = this._createComponent(this._$popup, "dxPopup", {
            onInitialized(_ref) {
                var {
                    component: component
                } = _ref;
                component.$wrapper().addClass(DROP_DOWN_MENU_POPUP_WRAPPER_CLASS).addClass(DROP_DOWN_MENU_POPUP_CLASS)
            },
            deferRendering: false,
            contentTemplate: contentElement => this._renderList(contentElement),
            _ignoreFunctionValueDeprecation: true,
            maxHeight: () => this._getMaxHeight(),
            position: {
                my: "top ".concat(rtlEnabled ? "left" : "right"),
                at: "bottom ".concat(rtlEnabled ? "left" : "right"),
                collision: "fit flip",
                offset: {
                    v: POPUP_VERTICAL_OFFSET
                },
                of: this.$element()
            },
            animation: animation,
            onOptionChanged: _ref2 => {
                var {
                    name: name,
                    value: value
                } = _ref2;
                if ("visible" === name) {
                    this.option("opened", value)
                }
            },
            container: container,
            autoResizeEnabled: false,
            height: "auto",
            width: "auto",
            hideOnOutsideClick: e => this._closeOutsideDropDownHandler(e),
            hideOnParentScroll: true,
            shading: false,
            dragEnabled: false,
            showTitle: false,
            fullScreen: false,
            _fixWrapperPosition: true
        })
    }
    _getMaxHeight() {
        var $element = this.$element();
        var offsetTop = $element.offset().top;
        var windowHeight = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterHeight)((0,_core_utils_window__WEBPACK_IMPORTED_MODULE_10__.getWindow)());
        var maxHeight = Math.max(offsetTop, windowHeight - offsetTop - (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterHeight)($element));
        return Math.min(windowHeight, maxHeight - POPUP_VERTICAL_OFFSET - POPUP_BOUNDARY_VERTICAL_OFFSET)
    }
    _closeOutsideDropDownHandler(e) {
        var isOutsideClick = !(0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(e.target).closest(this.$element()).length;
        return isOutsideClick
    }
    _renderList(contentElement) {
        var $content = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(contentElement);
        $content.addClass(DROP_DOWN_MENU_LIST_CLASS);
        this._list = this._createComponent($content, _ui_toolbar_menu_list__WEBPACK_IMPORTED_MODULE_6__.default, {
            dataSource: this._getListDataSource(),
            pageLoadMode: "scrollBottom",
            indicateLoading: false,
            noDataText: "",
            itemTemplate: this.option("itemTemplate"),
            onItemClick: e => {
                if (this.option("closeOnClick")) {
                    this.option("opened", false)
                }
                this._itemClickAction(e)
            },
            tabIndex: -1,
            focusStateEnabled: false,
            activeStateEnabled: true,
            onItemRendered: this.option("onItemRendered"),
            _areaTarget: this.$element(),
            _itemAttributes: {
                role: "menuitem"
            },
            _listAttributes: {
                role: "button"
            }
        })
    }
    _itemOptionChanged(item, property, value) {
        var _this$_list;
        null === (_this$_list = this._list) || void 0 === _this$_list ? void 0 : _this$_list._itemOptionChanged(item, property, value);
        (0,_ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_9__.toggleItemFocusableElementTabIndex)(this._list, item)
    }
    _getListDataSource() {
        var _this$option;
        return null !== (_this$option = this.option("dataSource")) && void 0 !== _this$option ? _this$option : this.option("items")
    }
    _setListDataSource() {
        var _this$_list2;
        null === (_this$_list2 = this._list) || void 0 === _this$_list2 ? void 0 : _this$_list2.option("dataSource", this._getListDataSource());
        delete this._deferRendering
    }
    _getKeyboardListeners() {
        return super._getKeyboardListeners().concat([this._list])
    }
    _toggleVisibility(visible) {
        super._toggleVisibility(visible);
        this._button.option("visible", visible)
    }
    _optionChanged(args) {
        var _this$_list3, _this$_list4, _this$_list5;
        var {
            name: name,
            value: value
        } = args;
        switch (name) {
            case "items":
            case "dataSource":
                if (!this.option("opened")) {
                    this._deferRendering = true
                } else {
                    this._setListDataSource()
                }
                break;
            case "itemTemplate":
                null === (_this$_list3 = this._list) || void 0 === _this$_list3 ? void 0 : _this$_list3.option(name, this._getTemplate(value));
                break;
            case "onItemClick":
                this._initItemClickAction();
                break;
            case "onButtonClick":
                this._buttonClickAction();
                break;
            case "useInkRipple":
                this._invalidate();
                break;
            case "focusStateEnabled":
                null === (_this$_list4 = this._list) || void 0 === _this$_list4 ? void 0 : _this$_list4.option(name, value);
                super._optionChanged(args);
                break;
            case "onItemRendered":
                null === (_this$_list5 = this._list) || void 0 === _this$_list5 ? void 0 : _this$_list5.option(name, value);
                break;
            case "opened":
                if (this._deferRendering) {
                    this._setListDataSource()
                }
                this._toggleMenuVisibility(value);
                this._updateFocusableItemsTabIndex();
                break;
            case "closeOnClick":
                break;
            case "container":
                this._popup && this._popup.option(name, value);
                break;
            case "disabled":
                if (this._list) {
                    this._updateFocusableItemsTabIndex()
                }
                break;
            default:
                super._optionChanged(args)
        }
    }
    _updateFocusableItemsTabIndex() {
        this.option("items").forEach(item => (0,_ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_9__.toggleItemFocusableElementTabIndex)(this._list, item))
    }
}


/***/ }),

/***/ 96460:
/*!*********************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/toolbar/internal/ui.toolbar.menu.list.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ ToolbarMenuList; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/iterator */ 14975);
/* harmony import */ var _list_ui_list_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../list/ui.list.base */ 75520);
/**
 * DevExtreme (esm/ui/toolbar/internal/ui.toolbar.menu.list.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */



var TOOLBAR_MENU_ACTION_CLASS = "dx-toolbar-menu-action";
var TOOLBAR_HIDDEN_BUTTON_CLASS = "dx-toolbar-hidden-button";
var TOOLBAR_HIDDEN_BUTTON_GROUP_CLASS = "dx-toolbar-hidden-button-group";
var TOOLBAR_MENU_SECTION_CLASS = "dx-toolbar-menu-section";
var TOOLBAR_MENU_CUSTOM_CLASS = "dx-toolbar-menu-custom";
var TOOLBAR_MENU_LAST_SECTION_CLASS = "dx-toolbar-menu-last-section";
var SCROLLVIEW_CONTENT_CLASS = "dx-scrollview-content";
class ToolbarMenuList extends _list_ui_list_base__WEBPACK_IMPORTED_MODULE_2__.ListBase {
    _init() {
        super._init();
        this._activeStateUnit = ".".concat(TOOLBAR_MENU_ACTION_CLASS, ":not(.").concat(TOOLBAR_HIDDEN_BUTTON_GROUP_CLASS, ")")
    }
    _initMarkup() {
        this._renderSections();
        super._initMarkup();
        this._setMenuRole()
    }
    _getSections() {
        return this._itemContainer().children()
    }
    _itemElements() {
        return this._getSections().children(this._itemSelector())
    }
    _renderSections() {
        var $container = this._itemContainer();
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(["before", "center", "after", "menu"], (_, section) => {
            var sectionName = "_$".concat(section, "Section");
            if (!this[sectionName]) {
                this[sectionName] = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").addClass(TOOLBAR_MENU_SECTION_CLASS)
            }
            this[sectionName].appendTo($container)
        })
    }
    _renderItems() {
        super._renderItems.apply(this, arguments);
        this._updateSections()
    }
    _setMenuRole() {
        var $menuContainer = this.$element().find(".".concat(SCROLLVIEW_CONTENT_CLASS));
        $menuContainer.attr("role", "menu")
    }
    _updateSections() {
        var $sections = this.$element().find(".".concat(TOOLBAR_MENU_SECTION_CLASS));
        $sections.removeClass(TOOLBAR_MENU_LAST_SECTION_CLASS);
        $sections.not(":empty").eq(-1).addClass(TOOLBAR_MENU_LAST_SECTION_CLASS)
    }
    _renderItem(index, item, itemContainer, $after) {
        var _item$location;
        var location = null !== (_item$location = item.location) && void 0 !== _item$location ? _item$location : "menu";
        var $container = this["_$".concat(location, "Section")];
        var itemElement = super._renderItem(index, item, $container, $after);
        if (this._getItemTemplateName({
                itemData: item
            })) {
            itemElement.addClass(TOOLBAR_MENU_CUSTOM_CLASS)
        }
        if ("menu" === location || "dxButton" === item.widget || "dxButtonGroup" === item.widget || item.isAction) {
            itemElement.addClass(TOOLBAR_MENU_ACTION_CLASS)
        }
        if ("dxButton" === item.widget) {
            itemElement.addClass(TOOLBAR_HIDDEN_BUTTON_CLASS)
        }
        if ("dxButtonGroup" === item.widget) {
            itemElement.addClass(TOOLBAR_HIDDEN_BUTTON_GROUP_CLASS)
        }
        itemElement.addClass(item.cssClass);
        return itemElement
    }
    _getItemTemplateName(args) {
        var template = super._getItemTemplateName(args);
        var data = args.itemData;
        var menuTemplate = data && data.menuItemTemplate;
        return menuTemplate || template
    }
    _dataSourceOptions() {
        return {
            paginate: false
        }
    }
    _itemClickHandler(e, args, config) {
        if ((0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(e.target).closest(".".concat(TOOLBAR_MENU_ACTION_CLASS)).length) {
            super._itemClickHandler(e, args, config)
        }
    }
    _getAriaTarget() {
        var _this$option;
        return null !== (_this$option = this.option("_areaTarget")) && void 0 !== _this$option ? _this$option : super._getAriaTarget()
    }
    _clean() {
        this._getSections().empty();
        super._clean()
    }
}


/***/ }),

/***/ 29322:
/*!******************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/toolbar/strategy/toolbar.multiline.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MultiLineStrategy": function() { return /* binding */ MultiLineStrategy; }
/* harmony export */ });
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/**
 * DevExtreme (esm/ui/toolbar/strategy/toolbar.multiline.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var TOOLBAR_LABEL_CLASS = "dx-toolbar-label";
class MultiLineStrategy {
    constructor(toolbar) {
        this._toolbar = toolbar
    }
    _initMarkup() {}
    _updateMenuVisibility() {}
    _renderMenuItems() {}
    _renderItem() {}
    _getMenuItems() {}
    _getToolbarItems() {
        var _this$_toolbar$option;
        return null !== (_this$_toolbar$option = this._toolbar.option("items")) && void 0 !== _this$_toolbar$option ? _this$_toolbar$option : []
    }
    _getItemsWidth() {
        return this._toolbar._getSummaryItemsWidth(this._toolbar.itemElements(), true)
    }
    _arrangeItems() {
        var $label = this._toolbar._$toolbarItemsContainer.find(".".concat(TOOLBAR_LABEL_CLASS)).eq(0);
        if (!$label.length) {
            return
        }
        var elementWidth = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this._toolbar.$element());
        var labelPaddings = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)($label) - (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)($label);
        $label.css("maxWidth", elementWidth - labelPaddings)
    }
    _hideOverflowItems() {}
    _dimensionChanged() {}
    _itemOptionChanged() {}
    _optionChanged() {}
}


/***/ }),

/***/ 11178:
/*!*******************************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/toolbar/strategy/toolbar.singleline.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SingleLineStrategy": function() { return /* binding */ SingleLineStrategy; }
/* harmony export */ });
/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/utils/size */ 84167);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/renderer */ 84529);
/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/utils/iterator */ 14975);
/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/utils/common */ 37552);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/utils/extend */ 59253);
/* harmony import */ var _internal_ui_toolbar_menu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/ui.toolbar.menu */ 4025);
/* harmony import */ var _core_utils_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/utils/data */ 25670);
/**
 * DevExtreme (esm/ui/toolbar/strategy/toolbar.singleline.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */







var INVISIBLE_STATE_CLASS = "dx-state-invisible";
var TOOLBAR_DROP_DOWN_MENU_CONTAINER_CLASS = "dx-toolbar-menu-container";
var TOOLBAR_BUTTON_CLASS = "dx-toolbar-button";
var TOOLBAR_AUTO_HIDE_ITEM_CLASS = "dx-toolbar-item-auto-hide";
var TOOLBAR_HIDDEN_ITEM = "dx-toolbar-item-invisible";
class SingleLineStrategy {
    constructor(toolbar) {
        this._toolbar = toolbar
    }
    _initMarkup() {
        (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.deferRender)(() => {
            this._renderOverflowMenu();
            this._renderMenuItems()
        })
    }
    _renderOverflowMenu() {
        if (!this._hasVisibleMenuItems()) {
            return
        }
        this._renderMenuButtonContainer();
        var $menu = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").appendTo(this._overflowMenuContainer());
        var itemClickAction = this._toolbar._createActionByOption("onItemClick");
        var menuItemTemplate = this._toolbar._getTemplateByOption("menuItemTemplate");
        this._menu = this._toolbar._createComponent($menu, _internal_ui_toolbar_menu__WEBPACK_IMPORTED_MODULE_5__.default, {
            disabled: this._toolbar.option("disabled"),
            itemTemplate: () => menuItemTemplate,
            onItemClick: e => {
                itemClickAction(e)
            },
            container: this._toolbar.option("menuContainer"),
            onOptionChanged: _ref => {
                var {
                    name: name,
                    value: value
                } = _ref;
                if ("opened" === name) {
                    this._toolbar.option("overflowMenuVisible", value)
                }
                if ("items" === name) {
                    this._updateMenuVisibility(value)
                }
            }
        })
    }
    renderMenuItems() {
        if (!this._menu) {
            this._renderOverflowMenu()
        }
        this._menu && this._menu.option("items", this._getMenuItems());
        if (this._menu && !this._menu.option("items").length) {
            this._menu.option("opened", false)
        }
    }
    _renderMenuButtonContainer() {
        this._$overflowMenuContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").appendTo(this._toolbar._$afterSection).addClass(TOOLBAR_BUTTON_CLASS).addClass(TOOLBAR_DROP_DOWN_MENU_CONTAINER_CLASS)
    }
    _overflowMenuContainer() {
        return this._$overflowMenuContainer
    }
    _updateMenuVisibility(menuItems) {
        var items = null !== menuItems && void 0 !== menuItems ? menuItems : this._getMenuItems();
        var isMenuVisible = items.length && this._hasVisibleMenuItems(items);
        this._toggleMenuVisibility(isMenuVisible)
    }
    _toggleMenuVisibility(value) {
        if (!this._overflowMenuContainer()) {
            return
        }
        this._overflowMenuContainer().toggleClass(INVISIBLE_STATE_CLASS, !value)
    }
    _renderMenuItems() {
        (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.deferRender)(() => {
            this.renderMenuItems()
        })
    }
    _dimensionChanged() {
        this.renderMenuItems()
    }
    _getToolbarItems() {
        var _this$_toolbar$option;
        return (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.grep)(null !== (_this$_toolbar$option = this._toolbar.option("items")) && void 0 !== _this$_toolbar$option ? _this$_toolbar$option : [], item => !this._toolbar._isMenuItem(item))
    }
    _getHiddenItems() {
        return this._toolbar._itemContainer().children(".".concat(TOOLBAR_AUTO_HIDE_ITEM_CLASS, ".").concat(TOOLBAR_HIDDEN_ITEM)).not(".".concat(INVISIBLE_STATE_CLASS))
    }
    _getMenuItems() {
        var _this$_toolbar$option2, _this$_restoreItems;
        var menuItems = (0,_core_utils_common__WEBPACK_IMPORTED_MODULE_3__.grep)(null !== (_this$_toolbar$option2 = this._toolbar.option("items")) && void 0 !== _this$_toolbar$option2 ? _this$_toolbar$option2 : [], item => this._toolbar._isMenuItem(item));
        var $hiddenItems = this._getHiddenItems();
        this._restoreItems = null !== (_this$_restoreItems = this._restoreItems) && void 0 !== _this$_restoreItems ? _this$_restoreItems : [];
        var overflowItems = [].slice.call($hiddenItems).map(hiddenItem => {
            var itemData = this._toolbar._getItemData(hiddenItem);
            var $itemContainer = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(hiddenItem);
            var $itemMarkup = $itemContainer.children();
            return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)({
                menuItemTemplate: () => {
                    this._restoreItems.push({
                        container: $itemContainer,
                        item: $itemMarkup
                    });
                    var $container = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)("<div>").addClass(TOOLBAR_AUTO_HIDE_ITEM_CLASS);
                    return $container.append($itemMarkup)
                }
            }, itemData)
        });
        return [...overflowItems, ...menuItems]
    }
    _hasVisibleMenuItems(items) {
        var menuItems = null !== items && void 0 !== items ? items : this._toolbar.option("items");
        var result = false;
        var optionGetter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_6__.compileGetter)("visible");
        var overflowGetter = (0,_core_utils_data__WEBPACK_IMPORTED_MODULE_6__.compileGetter)("locateInMenu");
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__.each)(menuItems, (function(index, item) {
            var itemVisible = optionGetter(item, {
                functionsAsIs: true
            });
            var itemOverflow = overflowGetter(item, {
                functionsAsIs: true
            });
            if (false !== itemVisible && ("auto" === itemOverflow || "always" === itemOverflow) || "menu" === item.location) {
                result = true
            }
        }));
        return result
    }
    _arrangeItems() {
        var _this$_restoreItems2;
        this._toolbar._$centerSection.css({
            margin: "0 auto",
            float: "none"
        });
        (0,_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__.each)(null !== (_this$_restoreItems2 = this._restoreItems) && void 0 !== _this$_restoreItems2 ? _this$_restoreItems2 : [], (function(_, obj) {
            (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(obj.container).append(obj.item)
        }));
        this._restoreItems = [];
        var elementWidth = (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this._toolbar.$element());
        this._hideOverflowItems(elementWidth);
        return elementWidth
    }
    _hideOverflowItems(elementWidth) {
        var _elementWidth;
        var overflowItems = this._toolbar.$element().find(".".concat(TOOLBAR_AUTO_HIDE_ITEM_CLASS));
        if (!overflowItems.length) {
            return
        }
        elementWidth = null !== (_elementWidth = elementWidth) && void 0 !== _elementWidth ? _elementWidth : (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this._toolbar.$element());
        (0,_core_renderer__WEBPACK_IMPORTED_MODULE_1__.default)(overflowItems).removeClass(TOOLBAR_HIDDEN_ITEM);
        var itemsWidth = this._getItemsWidth();
        while (overflowItems.length && elementWidth < itemsWidth) {
            var $item = overflowItems.eq(-1);
            itemsWidth -= (0,_core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)($item);
            $item.addClass(TOOLBAR_HIDDEN_ITEM);
            overflowItems.splice(-1, 1)
        }
    }
    _getItemsWidth() {
        return this._toolbar._getSummaryItemsWidth([this._toolbar._$beforeSection, this._toolbar._$centerSection, this._toolbar._$afterSection])
    }
    _itemOptionChanged(item, property, value) {
        if ("disabled" === property || "options.disabled" === property) {
            if (this._toolbar._isMenuItem(item)) {
                var _this$_menu;
                null === (_this$_menu = this._menu) || void 0 === _this$_menu ? void 0 : _this$_menu._itemOptionChanged(item, property, value);
                return
            }
        }
        this.renderMenuItems()
    }
    _renderItem(item, itemElement) {
        if ("auto" === item.locateInMenu) {
            itemElement.addClass(TOOLBAR_AUTO_HIDE_ITEM_CLASS)
        }
    }
    _optionChanged(name, value) {
        var _this$_menu2, _this$_menu3, _this$_menu4, _this$_menu5, _this$_menu6;
        switch (name) {
            case "disabled":
                null === (_this$_menu2 = this._menu) || void 0 === _this$_menu2 ? void 0 : _this$_menu2.option(name, value);
                break;
            case "overflowMenuVisible":
                null === (_this$_menu3 = this._menu) || void 0 === _this$_menu3 ? void 0 : _this$_menu3.option("opened", value);
                break;
            case "onItemClick":
                null === (_this$_menu4 = this._menu) || void 0 === _this$_menu4 ? void 0 : _this$_menu4.option(name, value);
                break;
            case "menuContainer":
                null === (_this$_menu5 = this._menu) || void 0 === _this$_menu5 ? void 0 : _this$_menu5.option("container", value);
                break;
            case "menuItemTemplate":
                null === (_this$_menu6 = this._menu) || void 0 === _this$_menu6 ? void 0 : _this$_menu6.option("itemTemplate", value)
        }
    }
}


/***/ }),

/***/ 63739:
/*!**************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/toolbar/ui.toolbar.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/component_registrator */ 2382);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _ui_toolbar_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui.toolbar.base */ 9835);
/* harmony import */ var _ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui.toolbar.utils */ 49636);
/* harmony import */ var _strategy_toolbar_multiline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./strategy/toolbar.multiline */ 29322);
/* harmony import */ var _strategy_toolbar_singleline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./strategy/toolbar.singleline */ 11178);
/**
 * DevExtreme (esm/ui/toolbar/ui.toolbar.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */






var TOOLBAR_MULTILINE_CLASS = "dx-toolbar-multiline";
var TOOLBAR_AUTO_HIDE_TEXT_CLASS = "dx-toolbar-text-auto-hide";
class Toolbar extends _ui_toolbar_base__WEBPACK_IMPORTED_MODULE_2__.default {
    _getDefaultOptions() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(super._getDefaultOptions(), {
            menuItemTemplate: "menuItem",
            menuContainer: void 0,
            overflowMenuVisible: false,
            multiline: false
        })
    }
    _isMultiline() {
        return this.option("multiline")
    }
    _dimensionChanged(dimension) {
        if ("height" === dimension) {
            return
        }
        super._dimensionChanged();
        this._layoutStrategy._dimensionChanged()
    }
    _initMarkup() {
        super._initMarkup();
        this._updateFocusableItemsTabIndex();
        this._layoutStrategy._initMarkup()
    }
    _renderToolbar() {
        super._renderToolbar();
        this._renderLayoutStrategy()
    }
    _itemContainer() {
        if (this._isMultiline()) {
            return this._$toolbarItemsContainer
        }
        return super._itemContainer()
    }
    _renderLayoutStrategy() {
        this.$element().toggleClass(TOOLBAR_MULTILINE_CLASS, this._isMultiline());
        this._layoutStrategy = this._isMultiline() ? new _strategy_toolbar_multiline__WEBPACK_IMPORTED_MODULE_4__.MultiLineStrategy(this) : new _strategy_toolbar_singleline__WEBPACK_IMPORTED_MODULE_5__.SingleLineStrategy(this)
    }
    _renderSections() {
        if (this._isMultiline()) {
            return
        }
        return super._renderSections()
    }
    _postProcessRenderItems() {
        this._layoutStrategy._hideOverflowItems();
        this._layoutStrategy._updateMenuVisibility();
        super._postProcessRenderItems();
        this._layoutStrategy._renderMenuItems()
    }
    _renderItem(index, item, itemContainer, $after) {
        var itemElement = super._renderItem(index, item, itemContainer, $after);
        this._layoutStrategy._renderItem(item, itemElement);
        var {
            widget: widget,
            showText: showText
        } = item;
        if ("dxButton" === widget && "inMenu" === showText) {
            itemElement.toggleClass(TOOLBAR_AUTO_HIDE_TEXT_CLASS)
        }
        return itemElement
    }
    _getItemsWidth() {
        return this._layoutStrategy._getItemsWidth()
    }
    _getMenuItems() {
        return this._layoutStrategy._getMenuItems()
    }
    _getToolbarItems() {
        return this._layoutStrategy._getToolbarItems()
    }
    _arrangeItems() {
        if (this.$element().is(":hidden")) {
            return
        }
        var elementWidth = this._layoutStrategy._arrangeItems();
        if (!this._isMultiline()) {
            super._arrangeItems(elementWidth)
        }
    }
    _itemOptionChanged(item, property, value) {
        if (!this._isMenuItem(item)) {
            super._itemOptionChanged(item, property, value)
        }
        this._layoutStrategy._itemOptionChanged(item, property, value);
        if ("disabled" === property || "options.disabled" === property) {
            (0,_ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_3__.toggleItemFocusableElementTabIndex)(this, item)
        }
        if ("location" === property) {
            this.repaint()
        }
    }
    _updateFocusableItemsTabIndex() {
        this._getToolbarItems().forEach(item => (0,_ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_3__.toggleItemFocusableElementTabIndex)(this, item))
    }
    _isMenuItem(itemData) {
        return "menu" === itemData.location || "always" === itemData.locateInMenu
    }
    _isToolbarItem(itemData) {
        return void 0 === itemData.location || "never" === itemData.locateInMenu
    }
    _optionChanged(_ref) {
        var {
            name: name,
            value: value
        } = _ref;
        this._layoutStrategy._optionChanged(name, value);
        switch (name) {
            case "menuContainer":
            case "menuItemTemplate":
            case "overflowMenuVisible":
                break;
            case "multiline":
                this._invalidate();
                break;
            case "disabled":
                super._optionChanged.apply(this, arguments);
                this._updateFocusableItemsTabIndex();
                break;
            default:
                super._optionChanged.apply(this, arguments)
        }
    }
    updateDimensions() {
        this._dimensionChanged()
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_0__.default)("dxToolbar", Toolbar);
/* harmony default export */ __webpack_exports__["default"] = (Toolbar);


/***/ }),

/***/ 49636:
/*!********************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/toolbar/ui.toolbar.utils.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toggleItemFocusableElementTabIndex": function() { return /* binding */ toggleItemFocusableElementTabIndex; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/**
 * DevExtreme (esm/ui/toolbar/ui.toolbar.utils.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

var BUTTON_GROUP_CLASS = "dx-buttongroup";
var TOOLBAR_ITEMS = ["dxAutocomplete", "dxButton", "dxCheckBox", "dxDateBox", "dxMenu", "dxSelectBox", "dxTabs", "dxTextBox", "dxButtonGroup", "dxDropDownButton"];
var getItemInstance = function($element) {
    var itemData = $element.data && $element.data();
    var dxComponents = itemData && itemData.dxComponents;
    var widgetName = dxComponents && dxComponents[0];
    return widgetName && itemData[widgetName]
};
function toggleItemFocusableElementTabIndex(context, item) {
    var _itemData$options;
    if (!context) {
        return
    }
    var $item = context._findItemElementByItem(item);
    if (!$item.length) {
        return
    }
    var itemData = context._getItemData($item);
    var isItemNotFocusable = !!(null !== (_itemData$options = itemData.options) && void 0 !== _itemData$options && _itemData$options.disabled || itemData.disabled || context.option("disabled"));
    var {
        widget: widget
    } = itemData;
    if (widget && -1 !== TOOLBAR_ITEMS.indexOf(widget)) {
        var $widget = $item.find(widget.toLowerCase().replace("dx", ".dx-"));
        if ($widget.length) {
            var _itemInstance$_focusT, _itemData$options2;
            var itemInstance = getItemInstance($widget);
            if (!itemInstance) {
                return
            }
            var $focusTarget = null === (_itemInstance$_focusT = itemInstance._focusTarget) || void 0 === _itemInstance$_focusT ? void 0 : _itemInstance$_focusT.call(itemInstance);
            if ("dxDropDownButton" === widget) {
                $focusTarget = $focusTarget && $focusTarget.find(".".concat(BUTTON_GROUP_CLASS))
            } else {
                var _$focusTarget;
                $focusTarget = null !== (_$focusTarget = $focusTarget) && void 0 !== _$focusTarget ? _$focusTarget : (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(itemInstance.element())
            }
            var tabIndex = null === (_itemData$options2 = itemData.options) || void 0 === _itemData$options2 ? void 0 : _itemData$options2.tabIndex;
            if (isItemNotFocusable) {
                $focusTarget.attr("tabIndex", -1)
            } else {
                $focusTarget.attr("tabIndex", null !== tabIndex && void 0 !== tabIndex ? tabIndex : 0)
            }
        }
    }
}


/***/ }),

/***/ 78553:
/*!***************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/tooltip.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tooltip_tooltip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tooltip/tooltip */ 48915);
/**
 * DevExtreme (esm/ui/tooltip.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */

/* harmony default export */ __webpack_exports__["default"] = (_tooltip_tooltip__WEBPACK_IMPORTED_MODULE_0__.default);


/***/ }),

/***/ 48915:
/*!***********************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/tooltip/tooltip.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _core_guid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/guid */ 22203);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/component_registrator */ 2382);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _popover_ui_popover__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../popover/ui.popover */ 23679);
/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/type */ 33275);
/**
 * DevExtreme (esm/ui/tooltip/tooltip.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */





var TOOLTIP_CLASS = "dx-tooltip";
var TOOLTIP_WRAPPER_CLASS = "dx-tooltip-wrapper";

var Tooltip = _popover_ui_popover__WEBPACK_IMPORTED_MODULE_4__.default.inherit({
    _getDefaultOptions: function() {
        return (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(this.callBase(), {
            toolbarItems: [],
            showCloseButton: false,
            showTitle: false,
            title: null,
            titleTemplate: null,
            onTitleRendered: null,
            bottomTemplate: null,
            propagateOutsideClick: true
        })
    },
    _render: function() {
        this.$element().addClass(TOOLTIP_CLASS);
        this.$wrapper().addClass(TOOLTIP_WRAPPER_CLASS);
        this.callBase()
    },
    _renderContent: function() {
        this.callBase();
        this._contentId = "dx-" + new _core_guid__WEBPACK_IMPORTED_MODULE_1__.default;
        this.$overlayContent().attr({
            id: this._contentId,
            role: "tooltip"
        });
        this._toggleAriaDescription(true)
    },
    _toggleAriaDescription: function(showing) {
        var $target = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(this.option("target"));
        var label = showing ? this._contentId : void 0;
        if (!(0,_core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isWindow)($target.get(0))) {
            this.setAria("describedby", label, $target)
        }
    }
});
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_2__.default)("dxTooltip", Tooltip);
/* harmony default export */ __webpack_exports__["default"] = (Tooltip);


/***/ }),

/***/ 75934:
/*!**************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/tooltip/ui.tooltip.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "show": function() { return /* binding */ show; },
/* harmony export */   "hide": function() { return /* binding */ hide; }
/* harmony export */ });
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/renderer */ 84529);
/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tooltip */ 48915);
/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/extend */ 59253);
/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/deferred */ 97233);
/* harmony import */ var _core_utils_view_port__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/view_port */ 30228);
/**
 * DevExtreme (esm/ui/tooltip/ui.tooltip.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */





var tooltip = null;
var removeTooltipElement = null;
var createTooltip = function(options) {
    options = (0,_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({
        position: "top"
    }, options);
    var content = options.content;
    delete options.content;
    var $tooltip = (0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)("<div>").html(content).appendTo((0,_core_utils_view_port__WEBPACK_IMPORTED_MODULE_4__.value)());
    removeTooltipElement = function() {
        $tooltip.remove()
    };
    tooltip = new _tooltip__WEBPACK_IMPORTED_MODULE_1__.default($tooltip, options)
};
var removeTooltip = function() {
    if (!tooltip) {
        return
    }
    removeTooltipElement();
    tooltip = null
};
function show(options) {
    removeTooltip();
    createTooltip(options);
    return tooltip.show()
}
function hide() {
    if (!tooltip) {
        return (new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_3__.Deferred).resolve()
    }
    return tooltip.hide().done(removeTooltip).promise()
}


/***/ }),

/***/ 40058:
/*!************************************************************!*\
  !*** ./node_modules/devextreme/esm/ui/validation_group.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/renderer */ 84529);
/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/component_registrator */ 2382);
/* harmony import */ var _core_dom_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/dom_component */ 530);
/* harmony import */ var _validation_summary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validation_summary */ 85575);
/* harmony import */ var _validation_engine__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validation_engine */ 83092);
/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./validator */ 90015);
/**
 * DevExtreme (esm/ui/validation_group.js)
 * Version: 22.2.8
 * Build date: Thu Aug 31 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */






var VALIDATION_ENGINE_CLASS = "dx-validationgroup";
var VALIDATOR_CLASS = "dx-validator";
var VALIDATION_SUMMARY_CLASS = "dx-validationsummary";
class ValidationGroup extends _core_dom_component__WEBPACK_IMPORTED_MODULE_2__.default {
    _getDefaultOptions() {
        return super._getDefaultOptions()
    }
    _init() {
        super._init();
        _validation_engine__WEBPACK_IMPORTED_MODULE_4__.default.addGroup(this)
    }
    _initMarkup() {
        var $element = this.$element();
        $element.addClass(VALIDATION_ENGINE_CLASS);
        $element.find(".".concat(VALIDATOR_CLASS)).each((function(_, validatorContainer) {
            _validator__WEBPACK_IMPORTED_MODULE_5__.default.getInstance((0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(validatorContainer))._initGroupRegistration()
        }));
        $element.find(".".concat(VALIDATION_SUMMARY_CLASS)).each((function(_, summaryContainer) {
            _validation_summary__WEBPACK_IMPORTED_MODULE_3__.default.getInstance((0,_core_renderer__WEBPACK_IMPORTED_MODULE_0__.default)(summaryContainer)).refreshValidationGroup()
        }));
        super._initMarkup()
    }
    validate() {
        return _validation_engine__WEBPACK_IMPORTED_MODULE_4__.default.validateGroup(this)
    }
    reset() {
        return _validation_engine__WEBPACK_IMPORTED_MODULE_4__.default.resetGroup(this)
    }
    _dispose() {
        _validation_engine__WEBPACK_IMPORTED_MODULE_4__.default.removeGroup(this);
        this.$element().removeClass(VALIDATION_ENGINE_CLASS);
        super._dispose()
    }
    _useTemplates() {
        return false
    }
}
(0,_core_component_registrator__WEBPACK_IMPORTED_MODULE_1__.default)("dxValidationGroup", ValidationGroup);
/* harmony default export */ __webpack_exports__["default"] = (ValidationGroup);


/***/ }),

/***/ 82450:
/*!**********************************************!*\
  !*** ./node_modules/rrule/dist/esm/cache.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Cache": function() { return /* binding */ Cache; }
/* harmony export */ });
/* harmony import */ var _iterresult__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iterresult */ 8210);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dateutil */ 98054);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers */ 36853);



function argsMatch(left, right) {
    if (Array.isArray(left)) {
        if (!Array.isArray(right))
            return false;
        if (left.length !== right.length)
            return false;
        return left.every(function (date, i) { return date.getTime() === right[i].getTime(); });
    }
    if (left instanceof Date) {
        return right instanceof Date && left.getTime() === right.getTime();
    }
    return left === right;
}
var Cache = /** @class */ (function () {
    function Cache() {
        this.all = false;
        this.before = [];
        this.after = [];
        this.between = [];
    }
    /**
     * @param {String} what - all/before/after/between
     * @param {Array,Date} value - an array of dates, one date, or null
     * @param {Object?} args - _iter arguments
     */
    Cache.prototype._cacheAdd = function (what, value, args) {
        if (value) {
            value = value instanceof Date ? (0,_dateutil__WEBPACK_IMPORTED_MODULE_1__.clone)(value) : (0,_dateutil__WEBPACK_IMPORTED_MODULE_1__.cloneDates)(value);
        }
        if (what === 'all') {
            this.all = value;
        }
        else {
            args._value = value;
            this[what].push(args);
        }
    };
    /**
     * @return false - not in the cache
     * @return null  - cached, but zero occurrences (before/after)
     * @return Date  - cached (before/after)
     * @return []    - cached, but zero occurrences (all/between)
     * @return [Date1, DateN] - cached (all/between)
     */
    Cache.prototype._cacheGet = function (what, args) {
        var cached = false;
        var argsKeys = args ? Object.keys(args) : [];
        var findCacheDiff = function (item) {
            for (var i = 0; i < argsKeys.length; i++) {
                var key = argsKeys[i];
                if (!argsMatch(args[key], item[key])) {
                    return true;
                }
            }
            return false;
        };
        var cachedObject = this[what];
        if (what === 'all') {
            cached = this.all;
        }
        else if ((0,_helpers__WEBPACK_IMPORTED_MODULE_2__.isArray)(cachedObject)) {
            // Let's see whether we've already called the
            // 'what' method with the same 'args'
            for (var i = 0; i < cachedObject.length; i++) {
                var item = cachedObject[i];
                if (argsKeys.length && findCacheDiff(item))
                    continue;
                cached = item._value;
                break;
            }
        }
        if (!cached && this.all) {
            // Not in the cache, but we already know all the occurrences,
            // so we can find the correct dates from the cached ones.
            var iterResult = new _iterresult__WEBPACK_IMPORTED_MODULE_0__.default(what, args);
            for (var i = 0; i < this.all.length; i++) {
                if (!iterResult.accept(this.all[i]))
                    break;
            }
            cached = iterResult.getValue();
            this._cacheAdd(what, cached, args);
        }
        return (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.isArray)(cached)
            ? (0,_dateutil__WEBPACK_IMPORTED_MODULE_1__.cloneDates)(cached)
            : cached instanceof Date
                ? (0,_dateutil__WEBPACK_IMPORTED_MODULE_1__.clone)(cached)
                : cached;
    };
    return Cache;
}());



/***/ }),

/***/ 72673:
/*!***********************************************************!*\
  !*** ./node_modules/rrule/dist/esm/callbackiterresult.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _iterresult__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iterresult */ 8210);


/**
 * IterResult subclass that calls a callback function on each add,
 * and stops iterating when the callback returns false.
 */
var CallbackIterResult = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(CallbackIterResult, _super);
    function CallbackIterResult(method, args, iterator) {
        var _this = _super.call(this, method, args) || this;
        _this.iterator = iterator;
        return _this;
    }
    CallbackIterResult.prototype.add = function (date) {
        if (this.iterator(date, this._result.length)) {
            this._result.push(date);
            return true;
        }
        return false;
    };
    return CallbackIterResult;
}(_iterresult__WEBPACK_IMPORTED_MODULE_0__.default));
/* harmony default export */ __webpack_exports__["default"] = (CallbackIterResult);


/***/ }),

/***/ 42236:
/*!*************************************************!*\
  !*** ./node_modules/rrule/dist/esm/datetime.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Time": function() { return /* binding */ Time; },
/* harmony export */   "DateTime": function() { return /* binding */ DateTime; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ 12905);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ 36853);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dateutil */ 98054);




var Time = /** @class */ (function () {
    function Time(hour, minute, second, millisecond) {
        this.hour = hour;
        this.minute = minute;
        this.second = second;
        this.millisecond = millisecond || 0;
    }
    Time.prototype.getHours = function () {
        return this.hour;
    };
    Time.prototype.getMinutes = function () {
        return this.minute;
    };
    Time.prototype.getSeconds = function () {
        return this.second;
    };
    Time.prototype.getMilliseconds = function () {
        return this.millisecond;
    };
    Time.prototype.getTime = function () {
        return ((this.hour * 60 * 60 + this.minute * 60 + this.second) * 1000 +
            this.millisecond);
    };
    return Time;
}());

var DateTime = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(DateTime, _super);
    function DateTime(year, month, day, hour, minute, second, millisecond) {
        var _this = _super.call(this, hour, minute, second, millisecond) || this;
        _this.year = year;
        _this.month = month;
        _this.day = day;
        return _this;
    }
    DateTime.fromDate = function (date) {
        return new this(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.valueOf() % 1000);
    };
    DateTime.prototype.getWeekday = function () {
        return (0,_dateutil__WEBPACK_IMPORTED_MODULE_2__.getWeekday)(new Date(this.getTime()));
    };
    DateTime.prototype.getTime = function () {
        return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)).getTime();
    };
    DateTime.prototype.getDay = function () {
        return this.day;
    };
    DateTime.prototype.getMonth = function () {
        return this.month;
    };
    DateTime.prototype.getYear = function () {
        return this.year;
    };
    DateTime.prototype.addYears = function (years) {
        this.year += years;
    };
    DateTime.prototype.addMonths = function (months) {
        this.month += months;
        if (this.month > 12) {
            var yearDiv = Math.floor(this.month / 12);
            var monthMod = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(this.month, 12);
            this.month = monthMod;
            this.year += yearDiv;
            if (this.month === 0) {
                this.month = 12;
                --this.year;
            }
        }
    };
    DateTime.prototype.addWeekly = function (days, wkst) {
        if (wkst > this.getWeekday()) {
            this.day += -(this.getWeekday() + 1 + (6 - wkst)) + days * 7;
        }
        else {
            this.day += -(this.getWeekday() - wkst) + days * 7;
        }
        this.fixDay();
    };
    DateTime.prototype.addDaily = function (days) {
        this.day += days;
        this.fixDay();
    };
    DateTime.prototype.addHours = function (hours, filtered, byhour) {
        if (filtered) {
            // Jump to one iteration before next day
            this.hour += Math.floor((23 - this.hour) / hours) * hours;
        }
        for (;;) {
            this.hour += hours;
            var _a = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.divmod)(this.hour, 24), dayDiv = _a.div, hourMod = _a.mod;
            if (dayDiv) {
                this.hour = hourMod;
                this.addDaily(dayDiv);
            }
            if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(byhour) || (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(byhour, this.hour))
                break;
        }
    };
    DateTime.prototype.addMinutes = function (minutes, filtered, byhour, byminute) {
        if (filtered) {
            // Jump to one iteration before next day
            this.minute +=
                Math.floor((1439 - (this.hour * 60 + this.minute)) / minutes) * minutes;
        }
        for (;;) {
            this.minute += minutes;
            var _a = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.divmod)(this.minute, 60), hourDiv = _a.div, minuteMod = _a.mod;
            if (hourDiv) {
                this.minute = minuteMod;
                this.addHours(hourDiv, false, byhour);
            }
            if (((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(byhour) || (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(byhour, this.hour)) &&
                ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(byminute) || (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(byminute, this.minute))) {
                break;
            }
        }
    };
    DateTime.prototype.addSeconds = function (seconds, filtered, byhour, byminute, bysecond) {
        if (filtered) {
            // Jump to one iteration before next day
            this.second +=
                Math.floor((86399 - (this.hour * 3600 + this.minute * 60 + this.second)) /
                    seconds) * seconds;
        }
        for (;;) {
            this.second += seconds;
            var _a = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.divmod)(this.second, 60), minuteDiv = _a.div, secondMod = _a.mod;
            if (minuteDiv) {
                this.second = secondMod;
                this.addMinutes(minuteDiv, false, byhour, byminute);
            }
            if (((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(byhour) || (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(byhour, this.hour)) &&
                ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(byminute) || (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(byminute, this.minute)) &&
                ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(bysecond) || (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(bysecond, this.second))) {
                break;
            }
        }
    };
    DateTime.prototype.fixDay = function () {
        if (this.day <= 28) {
            return;
        }
        var daysinmonth = (0,_dateutil__WEBPACK_IMPORTED_MODULE_2__.monthRange)(this.year, this.month - 1)[1];
        if (this.day <= daysinmonth) {
            return;
        }
        while (this.day > daysinmonth) {
            this.day -= daysinmonth;
            ++this.month;
            if (this.month === 13) {
                this.month = 1;
                ++this.year;
                if (this.year > _dateutil__WEBPACK_IMPORTED_MODULE_2__.MAXYEAR) {
                    return;
                }
            }
            daysinmonth = (0,_dateutil__WEBPACK_IMPORTED_MODULE_2__.monthRange)(this.year, this.month - 1)[1];
        }
    };
    DateTime.prototype.add = function (options, filtered) {
        var freq = options.freq, interval = options.interval, wkst = options.wkst, byhour = options.byhour, byminute = options.byminute, bysecond = options.bysecond;
        switch (freq) {
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.YEARLY:
                return this.addYears(interval);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.MONTHLY:
                return this.addMonths(interval);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.WEEKLY:
                return this.addWeekly(interval, wkst);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.DAILY:
                return this.addDaily(interval);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.HOURLY:
                return this.addHours(interval, filtered, byhour);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.MINUTELY:
                return this.addMinutes(interval, filtered, byhour, byminute);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.SECONDLY:
                return this.addSeconds(interval, filtered, byhour, byminute, bysecond);
        }
    };
    return DateTime;
}(Time));



/***/ }),

/***/ 98054:
/*!*************************************************!*\
  !*** ./node_modules/rrule/dist/esm/dateutil.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "datetime": function() { return /* binding */ datetime; },
/* harmony export */   "MONTH_DAYS": function() { return /* binding */ MONTH_DAYS; },
/* harmony export */   "ONE_DAY": function() { return /* binding */ ONE_DAY; },
/* harmony export */   "MAXYEAR": function() { return /* binding */ MAXYEAR; },
/* harmony export */   "ORDINAL_BASE": function() { return /* binding */ ORDINAL_BASE; },
/* harmony export */   "PY_WEEKDAYS": function() { return /* binding */ PY_WEEKDAYS; },
/* harmony export */   "getYearDay": function() { return /* binding */ getYearDay; },
/* harmony export */   "isLeapYear": function() { return /* binding */ isLeapYear; },
/* harmony export */   "isDate": function() { return /* binding */ isDate; },
/* harmony export */   "isValidDate": function() { return /* binding */ isValidDate; },
/* harmony export */   "tzOffset": function() { return /* binding */ tzOffset; },
/* harmony export */   "daysBetween": function() { return /* binding */ daysBetween; },
/* harmony export */   "toOrdinal": function() { return /* binding */ toOrdinal; },
/* harmony export */   "fromOrdinal": function() { return /* binding */ fromOrdinal; },
/* harmony export */   "getMonthDays": function() { return /* binding */ getMonthDays; },
/* harmony export */   "getWeekday": function() { return /* binding */ getWeekday; },
/* harmony export */   "monthRange": function() { return /* binding */ monthRange; },
/* harmony export */   "combine": function() { return /* binding */ combine; },
/* harmony export */   "clone": function() { return /* binding */ clone; },
/* harmony export */   "cloneDates": function() { return /* binding */ cloneDates; },
/* harmony export */   "sort": function() { return /* binding */ sort; },
/* harmony export */   "timeToUntilString": function() { return /* binding */ timeToUntilString; },
/* harmony export */   "untilStringToDate": function() { return /* binding */ untilStringToDate; },
/* harmony export */   "dateInTimeZone": function() { return /* binding */ dateInTimeZone; }
/* harmony export */ });
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ 36853);

var datetime = function (y, m, d, h, i, s) {
    if (h === void 0) { h = 0; }
    if (i === void 0) { i = 0; }
    if (s === void 0) { s = 0; }
    return new Date(Date.UTC(y, m - 1, d, h, i, s));
};
/**
 * General date-related utilities.
 * Also handles several incompatibilities between JavaScript and Python
 *
 */
var MONTH_DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
/**
 * Number of milliseconds of one day
 */
var ONE_DAY = 1000 * 60 * 60 * 24;
/**
 * @see: <http://docs.python.org/library/datetime.html#datetime.MAXYEAR>
 */
var MAXYEAR = 9999;
/**
 * Python uses 1-Jan-1 as the base for calculating ordinals but we don't
 * want to confuse the JS engine with milliseconds > Number.MAX_NUMBER,
 * therefore we use 1-Jan-1970 instead
 */
var ORDINAL_BASE = datetime(1970, 1, 1);
/**
 * Python: MO-SU: 0 - 6
 * JS: SU-SAT 0 - 6
 */
var PY_WEEKDAYS = [6, 0, 1, 2, 3, 4, 5];
/**
 * py_date.timetuple()[7]
 */
var getYearDay = function (date) {
    var dateNoTime = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
    return (Math.ceil((dateNoTime.valueOf() - new Date(date.getUTCFullYear(), 0, 1).valueOf()) /
        ONE_DAY) + 1);
};
var isLeapYear = function (year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
};
var isDate = function (value) {
    return value instanceof Date;
};
var isValidDate = function (value) {
    return isDate(value) && !isNaN(value.getTime());
};
/**
 * @return {Number} the date's timezone offset in ms
 */
var tzOffset = function (date) {
    return date.getTimezoneOffset() * 60 * 1000;
};
/**
 * @see: <http://www.mcfedries.com/JavaScript/DaysBetween.asp>
 */
var daysBetween = function (date1, date2) {
    // The number of milliseconds in one day
    // Convert both dates to milliseconds
    var date1ms = date1.getTime() - tzOffset(date1);
    var date2ms = date2.getTime() - tzOffset(date2);
    // Calculate the difference in milliseconds
    var differencems = date1ms - date2ms;
    // Convert back to days and return
    return Math.round(differencems / ONE_DAY);
};
/**
 * @see: <http://docs.python.org/library/datetime.html#datetime.date.toordinal>
 */
var toOrdinal = function (date) {
    return daysBetween(date, ORDINAL_BASE);
};
/**
 * @see - <http://docs.python.org/library/datetime.html#datetime.date.fromordinal>
 */
var fromOrdinal = function (ordinal) {
    return new Date(ORDINAL_BASE.getTime() + ordinal * ONE_DAY);
};
var getMonthDays = function (date) {
    var month = date.getUTCMonth();
    return month === 1 && isLeapYear(date.getUTCFullYear())
        ? 29
        : MONTH_DAYS[month];
};
/**
 * @return {Number} python-like weekday
 */
var getWeekday = function (date) {
    return PY_WEEKDAYS[date.getUTCDay()];
};
/**
 * @see: <http://docs.python.org/library/calendar.html#calendar.monthrange>
 */
var monthRange = function (year, month) {
    var date = datetime(year, month + 1, 1);
    return [getWeekday(date), getMonthDays(date)];
};
/**
 * @see: <http://docs.python.org/library/datetime.html#datetime.datetime.combine>
 */
var combine = function (date, time) {
    time = time || date;
    return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds()));
};
var clone = function (date) {
    var dolly = new Date(date.getTime());
    return dolly;
};
var cloneDates = function (dates) {
    var clones = [];
    for (var i = 0; i < dates.length; i++) {
        clones.push(clone(dates[i]));
    }
    return clones;
};
/**
 * Sorts an array of Date or Time objects
 */
var sort = function (dates) {
    dates.sort(function (a, b) {
        return a.getTime() - b.getTime();
    });
};
var timeToUntilString = function (time, utc) {
    if (utc === void 0) { utc = true; }
    var date = new Date(time);
    return [
        (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCFullYear().toString(), 4, '0'),
        (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCMonth() + 1, 2, '0'),
        (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCDate(), 2, '0'),
        'T',
        (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCHours(), 2, '0'),
        (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCMinutes(), 2, '0'),
        (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCSeconds(), 2, '0'),
        utc ? 'Z' : '',
    ].join('');
};
var untilStringToDate = function (until) {
    var re = /^(\d{4})(\d{2})(\d{2})(T(\d{2})(\d{2})(\d{2})Z?)?$/;
    var bits = re.exec(until);
    if (!bits)
        throw new Error("Invalid UNTIL value: ".concat(until));
    return new Date(Date.UTC(parseInt(bits[1], 10), parseInt(bits[2], 10) - 1, parseInt(bits[3], 10), parseInt(bits[5], 10) || 0, parseInt(bits[6], 10) || 0, parseInt(bits[7], 10) || 0));
};
var dateTZtoISO8601 = function (date, timeZone) {
    // date format for sv-SE is almost ISO8601
    var dateStr = date.toLocaleString('sv-SE', { timeZone: timeZone });
    // '2023-02-07 10:41:36'
    return dateStr.replace(' ', 'T') + 'Z';
};
var dateInTimeZone = function (date, timeZone) {
    var localTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;
    // Date constructor can only reliably parse dates in ISO8601 format
    var dateInLocalTZ = new Date(dateTZtoISO8601(date, localTimeZone));
    var dateInTargetTZ = new Date(dateTZtoISO8601(date, timeZone !== null && timeZone !== void 0 ? timeZone : 'UTC'));
    var tzOffset = dateInTargetTZ.getTime() - dateInLocalTZ.getTime();
    return new Date(date.getTime() - tzOffset);
};


/***/ }),

/***/ 14642:
/*!*****************************************************!*\
  !*** ./node_modules/rrule/dist/esm/datewithzone.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DateWithZone": function() { return /* binding */ DateWithZone; }
/* harmony export */ });
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dateutil */ 98054);

var DateWithZone = /** @class */ (function () {
    function DateWithZone(date, tzid) {
        if (isNaN(date.getTime())) {
            throw new RangeError('Invalid date passed to DateWithZone');
        }
        this.date = date;
        this.tzid = tzid;
    }
    Object.defineProperty(DateWithZone.prototype, "isUTC", {
        get: function () {
            return !this.tzid || this.tzid.toUpperCase() === 'UTC';
        },
        enumerable: false,
        configurable: true
    });
    DateWithZone.prototype.toString = function () {
        var datestr = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.timeToUntilString)(this.date.getTime(), this.isUTC);
        if (!this.isUTC) {
            return ";TZID=".concat(this.tzid, ":").concat(datestr);
        }
        return ":".concat(datestr);
    };
    DateWithZone.prototype.getTime = function () {
        return this.date.getTime();
    };
    DateWithZone.prototype.rezonedDate = function () {
        if (this.isUTC) {
            return this.date;
        }
        return (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.dateInTimeZone)(this.date, this.tzid);
    };
    return DateWithZone;
}());



/***/ }),

/***/ 36853:
/*!************************************************!*\
  !*** ./node_modules/rrule/dist/esm/helpers.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isPresent": function() { return /* binding */ isPresent; },
/* harmony export */   "isNumber": function() { return /* binding */ isNumber; },
/* harmony export */   "isWeekdayStr": function() { return /* binding */ isWeekdayStr; },
/* harmony export */   "isArray": function() { return /* binding */ isArray; },
/* harmony export */   "range": function() { return /* binding */ range; },
/* harmony export */   "clone": function() { return /* binding */ clone; },
/* harmony export */   "repeat": function() { return /* binding */ repeat; },
/* harmony export */   "toArray": function() { return /* binding */ toArray; },
/* harmony export */   "padStart": function() { return /* binding */ padStart; },
/* harmony export */   "split": function() { return /* binding */ split; },
/* harmony export */   "pymod": function() { return /* binding */ pymod; },
/* harmony export */   "divmod": function() { return /* binding */ divmod; },
/* harmony export */   "empty": function() { return /* binding */ empty; },
/* harmony export */   "notEmpty": function() { return /* binding */ notEmpty; },
/* harmony export */   "includes": function() { return /* binding */ includes; }
/* harmony export */ });
/* harmony import */ var _weekday__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./weekday */ 57845);
// =============================================================================
// Helper functions
// =============================================================================

var isPresent = function (value) {
    return value !== null && value !== undefined;
};
var isNumber = function (value) {
    return typeof value === 'number';
};
var isWeekdayStr = function (value) {
    return typeof value === 'string' && _weekday__WEBPACK_IMPORTED_MODULE_0__.ALL_WEEKDAYS.includes(value);
};
var isArray = Array.isArray;
/**
 * Simplified version of python's range()
 */
var range = function (start, end) {
    if (end === void 0) { end = start; }
    if (arguments.length === 1) {
        end = start;
        start = 0;
    }
    var rang = [];
    for (var i = start; i < end; i++)
        rang.push(i);
    return rang;
};
var clone = function (array) {
    return [].concat(array);
};
var repeat = function (value, times) {
    var i = 0;
    var array = [];
    if (isArray(value)) {
        for (; i < times; i++)
            array[i] = [].concat(value);
    }
    else {
        for (; i < times; i++)
            array[i] = value;
    }
    return array;
};
var toArray = function (item) {
    if (isArray(item)) {
        return item;
    }
    return [item];
};
function padStart(item, targetLength, padString) {
    if (padString === void 0) { padString = ' '; }
    var str = String(item);
    targetLength = targetLength >> 0;
    if (str.length > targetLength) {
        return String(str);
    }
    targetLength = targetLength - str.length;
    if (targetLength > padString.length) {
        padString += repeat(padString, targetLength / padString.length);
    }
    return padString.slice(0, targetLength) + String(str);
}
/**
 * Python like split
 */
var split = function (str, sep, num) {
    var splits = str.split(sep);
    return num
        ? splits.slice(0, num).concat([splits.slice(num).join(sep)])
        : splits;
};
/**
 * closure/goog/math/math.js:modulo
 * Copyright 2006 The Closure Library Authors.
 * The % operator in JavaScript returns the remainder of a / b, but differs from
 * some other languages in that the result will have the same sign as the
 * dividend. For example, -1 % 8 == -1, whereas in some other languages
 * (such as Python) the result would be 7. This function emulates the more
 * correct modulo behavior, which is useful for certain applications such as
 * calculating an offset index in a circular list.
 *
 * @param {number} a The dividend.
 * @param {number} b The divisor.
 * @return {number} a % b where the result is between 0 and b (either 0 <= x < b
 * or b < x <= 0, depending on the sign of b).
 */
var pymod = function (a, b) {
    var r = a % b;
    // If r and b differ in sign, add b to wrap the result to the correct sign.
    return r * b < 0 ? r + b : r;
};
/**
 * @see: <http://docs.python.org/library/functions.html#divmod>
 */
var divmod = function (a, b) {
    return { div: Math.floor(a / b), mod: pymod(a, b) };
};
var empty = function (obj) {
    return !isPresent(obj) || obj.length === 0;
};
/**
 * Python-like boolean
 *
 * @return {Boolean} value of an object/primitive, taking into account
 * the fact that in Python an empty list's/tuple's
 * boolean value is False, whereas in JS it's true
 */
var notEmpty = function (obj) {
    return !empty(obj);
};
/**
 * Return true if a value is in an array
 */
var includes = function (arr, val) {
    return notEmpty(arr) && arr.indexOf(val) !== -1;
};


/***/ }),

/***/ 68382:
/*!**********************************************!*\
  !*** ./node_modules/rrule/dist/esm/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RRule": function() { return /* reexport safe */ _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule; },
/* harmony export */   "RRuleSet": function() { return /* reexport safe */ _rruleset__WEBPACK_IMPORTED_MODULE_1__.RRuleSet; },
/* harmony export */   "rrulestr": function() { return /* reexport safe */ _rrulestr__WEBPACK_IMPORTED_MODULE_2__.rrulestr; },
/* harmony export */   "Frequency": function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_3__.Frequency; },
/* harmony export */   "Weekday": function() { return /* reexport safe */ _weekday__WEBPACK_IMPORTED_MODULE_4__.Weekday; },
/* harmony export */   "datetime": function() { return /* reexport safe */ _dateutil__WEBPACK_IMPORTED_MODULE_5__.datetime; }
/* harmony export */ });
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rrule */ 8932);
/* harmony import */ var _rruleset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rruleset */ 2476);
/* harmony import */ var _rrulestr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rrulestr */ 4134);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ 12905);
/* harmony import */ var _weekday__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./weekday */ 57845);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dateutil */ 98054);
/* !
 * rrule.js - Library for working with recurrence rules for calendar dates.
 * https://github.com/jakubroztocil/rrule
 *
 * Copyright 2010, Jakub Roztocil and Lars Schoning
 * Licenced under the BSD licence.
 * https://github.com/jakubroztocil/rrule/blob/master/LICENCE
 *
 * Based on:
 * python-dateutil - Extensions to the standard Python datetime module.
 * Copyright (c) 2003-2011 - Gustavo Niemeyer <gustavo@niemeyer.net>
 * Copyright (c) 2012 - Tomi Pieviläinen <tomi.pievilainen@iki.fi>
 * https://github.com/jakubroztocil/rrule/blob/master/LICENCE
 *
 */








/***/ }),

/***/ 60630:
/*!***************************************************!*\
  !*** ./node_modules/rrule/dist/esm/iter/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "iter": function() { return /* binding */ iter; }
/* harmony export */ });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types */ 12905);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dateutil */ 98054);
/* harmony import */ var _iterinfo_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../iterinfo/index */ 79021);
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rrule */ 8932);
/* harmony import */ var _parseoptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parseoptions */ 73181);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers */ 36853);
/* harmony import */ var _datewithzone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../datewithzone */ 14642);
/* harmony import */ var _poslist__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./poslist */ 19996);
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../datetime */ 42236);









function iter(iterResult, options) {
    var dtstart = options.dtstart, freq = options.freq, interval = options.interval, until = options.until, bysetpos = options.bysetpos;
    var count = options.count;
    if (count === 0 || interval === 0) {
        return emitResult(iterResult);
    }
    var counterDate = _datetime__WEBPACK_IMPORTED_MODULE_8__.DateTime.fromDate(dtstart);
    var ii = new _iterinfo_index__WEBPACK_IMPORTED_MODULE_2__.default(options);
    ii.rebuild(counterDate.year, counterDate.month);
    var timeset = makeTimeset(ii, counterDate, options);
    for (;;) {
        var _a = ii.getdayset(freq)(counterDate.year, counterDate.month, counterDate.day), dayset = _a[0], start = _a[1], end = _a[2];
        var filtered = removeFilteredDays(dayset, start, end, ii, options);
        if ((0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(bysetpos)) {
            var poslist = (0,_poslist__WEBPACK_IMPORTED_MODULE_7__.buildPoslist)(bysetpos, timeset, start, end, ii, dayset);
            for (var j = 0; j < poslist.length; j++) {
                var res = poslist[j];
                if (until && res > until) {
                    return emitResult(iterResult);
                }
                if (res >= dtstart) {
                    var rezonedDate = rezoneIfNeeded(res, options);
                    if (!iterResult.accept(rezonedDate)) {
                        return emitResult(iterResult);
                    }
                    if (count) {
                        --count;
                        if (!count) {
                            return emitResult(iterResult);
                        }
                    }
                }
            }
        }
        else {
            for (var j = start; j < end; j++) {
                var currentDay = dayset[j];
                if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.isPresent)(currentDay)) {
                    continue;
                }
                var date = (0,_dateutil__WEBPACK_IMPORTED_MODULE_1__.fromOrdinal)(ii.yearordinal + currentDay);
                for (var k = 0; k < timeset.length; k++) {
                    var time = timeset[k];
                    var res = (0,_dateutil__WEBPACK_IMPORTED_MODULE_1__.combine)(date, time);
                    if (until && res > until) {
                        return emitResult(iterResult);
                    }
                    if (res >= dtstart) {
                        var rezonedDate = rezoneIfNeeded(res, options);
                        if (!iterResult.accept(rezonedDate)) {
                            return emitResult(iterResult);
                        }
                        if (count) {
                            --count;
                            if (!count) {
                                return emitResult(iterResult);
                            }
                        }
                    }
                }
            }
        }
        if (options.interval === 0) {
            return emitResult(iterResult);
        }
        // Handle frequency and interval
        counterDate.add(options, filtered);
        if (counterDate.year > _dateutil__WEBPACK_IMPORTED_MODULE_1__.MAXYEAR) {
            return emitResult(iterResult);
        }
        if (!(0,_types__WEBPACK_IMPORTED_MODULE_0__.freqIsDailyOrGreater)(freq)) {
            timeset = ii.gettimeset(freq)(counterDate.hour, counterDate.minute, counterDate.second, 0);
        }
        ii.rebuild(counterDate.year, counterDate.month);
    }
}
function isFiltered(ii, currentDay, options) {
    var bymonth = options.bymonth, byweekno = options.byweekno, byweekday = options.byweekday, byeaster = options.byeaster, bymonthday = options.bymonthday, bynmonthday = options.bynmonthday, byyearday = options.byyearday;
    return (((0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(bymonth) && !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(bymonth, ii.mmask[currentDay])) ||
        ((0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(byweekno) && !ii.wnomask[currentDay]) ||
        ((0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(byweekday) && !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byweekday, ii.wdaymask[currentDay])) ||
        ((0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(ii.nwdaymask) && !ii.nwdaymask[currentDay]) ||
        (byeaster !== null && !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(ii.eastermask, currentDay)) ||
        (((0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(bymonthday) || (0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(bynmonthday)) &&
            !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(bymonthday, ii.mdaymask[currentDay]) &&
            !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(bynmonthday, ii.nmdaymask[currentDay])) ||
        ((0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(byyearday) &&
            ((currentDay < ii.yearlen &&
                !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byyearday, currentDay + 1) &&
                !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byyearday, -ii.yearlen + currentDay)) ||
                (currentDay >= ii.yearlen &&
                    !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byyearday, currentDay + 1 - ii.yearlen) &&
                    !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byyearday, -ii.nextyearlen + currentDay - ii.yearlen)))));
}
function rezoneIfNeeded(date, options) {
    return new _datewithzone__WEBPACK_IMPORTED_MODULE_6__.DateWithZone(date, options.tzid).rezonedDate();
}
function emitResult(iterResult) {
    return iterResult.getValue();
}
function removeFilteredDays(dayset, start, end, ii, options) {
    var filtered = false;
    for (var dayCounter = start; dayCounter < end; dayCounter++) {
        var currentDay = dayset[dayCounter];
        filtered = isFiltered(ii, currentDay, options);
        if (filtered)
            dayset[currentDay] = null;
    }
    return filtered;
}
function makeTimeset(ii, counterDate, options) {
    var freq = options.freq, byhour = options.byhour, byminute = options.byminute, bysecond = options.bysecond;
    if ((0,_types__WEBPACK_IMPORTED_MODULE_0__.freqIsDailyOrGreater)(freq)) {
        return (0,_parseoptions__WEBPACK_IMPORTED_MODULE_4__.buildTimeset)(options);
    }
    if ((freq >= _rrule__WEBPACK_IMPORTED_MODULE_3__.RRule.HOURLY &&
        (0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(byhour) &&
        !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byhour, counterDate.hour)) ||
        (freq >= _rrule__WEBPACK_IMPORTED_MODULE_3__.RRule.MINUTELY &&
            (0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(byminute) &&
            !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byminute, counterDate.minute)) ||
        (freq >= _rrule__WEBPACK_IMPORTED_MODULE_3__.RRule.SECONDLY &&
            (0,_helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(bysecond) &&
            !(0,_helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(bysecond, counterDate.second))) {
        return [];
    }
    return ii.gettimeset(freq)(counterDate.hour, counterDate.minute, counterDate.second, counterDate.millisecond);
}


/***/ }),

/***/ 19996:
/*!*****************************************************!*\
  !*** ./node_modules/rrule/dist/esm/iter/poslist.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildPoslist": function() { return /* binding */ buildPoslist; }
/* harmony export */ });
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dateutil */ 98054);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ 36853);


function buildPoslist(bysetpos, timeset, start, end, ii, dayset) {
    var poslist = [];
    for (var j = 0; j < bysetpos.length; j++) {
        var daypos = void 0;
        var timepos = void 0;
        var pos = bysetpos[j];
        if (pos < 0) {
            daypos = Math.floor(pos / timeset.length);
            timepos = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(pos, timeset.length);
        }
        else {
            daypos = Math.floor((pos - 1) / timeset.length);
            timepos = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(pos - 1, timeset.length);
        }
        var tmp = [];
        for (var k = start; k < end; k++) {
            var val = dayset[k];
            if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(val))
                continue;
            tmp.push(val);
        }
        var i = void 0;
        if (daypos < 0) {
            i = tmp.slice(daypos)[0];
        }
        else {
            i = tmp[daypos];
        }
        var time = timeset[timepos];
        var date = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.fromOrdinal)(ii.yearordinal + i);
        var res = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.combine)(date, time);
        // XXX: can this ever be in the array?
        // - compare the actual date instead?
        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(poslist, res))
            poslist.push(res);
    }
    (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.sort)(poslist);
    return poslist;
}


/***/ }),

/***/ 15501:
/*!********************************************************!*\
  !*** ./node_modules/rrule/dist/esm/iterinfo/easter.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "easter": function() { return /* binding */ easter; }
/* harmony export */ });
function easter(y, offset) {
    if (offset === void 0) { offset = 0; }
    var a = y % 19;
    var b = Math.floor(y / 100);
    var c = y % 100;
    var d = Math.floor(b / 4);
    var e = b % 4;
    var f = Math.floor((b + 8) / 25);
    var g = Math.floor((b - f + 1) / 3);
    var h = Math.floor(19 * a + b - d - g + 15) % 30;
    var i = Math.floor(c / 4);
    var k = c % 4;
    var l = Math.floor(32 + 2 * e + 2 * i - h - k) % 7;
    var m = Math.floor((a + 11 * h + 22 * l) / 451);
    var month = Math.floor((h + l - 7 * m + 114) / 31);
    var day = ((h + l - 7 * m + 114) % 31) + 1;
    var date = Date.UTC(y, month - 1, day + offset);
    var yearStart = Date.UTC(y, 0, 1);
    return [Math.ceil((date - yearStart) / (1000 * 60 * 60 * 24))];
}


/***/ }),

/***/ 79021:
/*!*******************************************************!*\
  !*** ./node_modules/rrule/dist/esm/iterinfo/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ 36853);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ 12905);
/* harmony import */ var _yearinfo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./yearinfo */ 36957);
/* harmony import */ var _monthinfo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./monthinfo */ 79997);
/* harmony import */ var _easter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./easter */ 15501);
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../datetime */ 42236);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dateutil */ 98054);







// =============================================================================
// Iterinfo
// =============================================================================
var Iterinfo = /** @class */ (function () {
    // eslint-disable-next-line no-empty-function
    function Iterinfo(options) {
        this.options = options;
    }
    Iterinfo.prototype.rebuild = function (year, month) {
        var options = this.options;
        if (year !== this.lastyear) {
            this.yearinfo = (0,_yearinfo__WEBPACK_IMPORTED_MODULE_2__.rebuildYear)(year, options);
        }
        if ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.notEmpty)(options.bynweekday) &&
            (month !== this.lastmonth || year !== this.lastyear)) {
            var _a = this.yearinfo, yearlen = _a.yearlen, mrange = _a.mrange, wdaymask = _a.wdaymask;
            this.monthinfo = (0,_monthinfo__WEBPACK_IMPORTED_MODULE_3__.rebuildMonth)(year, month, yearlen, mrange, wdaymask, options);
        }
        if ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.isPresent)(options.byeaster)) {
            this.eastermask = (0,_easter__WEBPACK_IMPORTED_MODULE_4__.easter)(year, options.byeaster);
        }
    };
    Object.defineProperty(Iterinfo.prototype, "lastyear", {
        get: function () {
            return this.monthinfo ? this.monthinfo.lastyear : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "lastmonth", {
        get: function () {
            return this.monthinfo ? this.monthinfo.lastmonth : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "yearlen", {
        get: function () {
            return this.yearinfo.yearlen;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "yearordinal", {
        get: function () {
            return this.yearinfo.yearordinal;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "mrange", {
        get: function () {
            return this.yearinfo.mrange;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "wdaymask", {
        get: function () {
            return this.yearinfo.wdaymask;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "mmask", {
        get: function () {
            return this.yearinfo.mmask;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "wnomask", {
        get: function () {
            return this.yearinfo.wnomask;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "nwdaymask", {
        get: function () {
            return this.monthinfo ? this.monthinfo.nwdaymask : [];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "nextyearlen", {
        get: function () {
            return this.yearinfo.nextyearlen;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "mdaymask", {
        get: function () {
            return this.yearinfo.mdaymask;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Iterinfo.prototype, "nmdaymask", {
        get: function () {
            return this.yearinfo.nmdaymask;
        },
        enumerable: false,
        configurable: true
    });
    Iterinfo.prototype.ydayset = function () {
        return [(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.range)(this.yearlen), 0, this.yearlen];
    };
    Iterinfo.prototype.mdayset = function (_, month) {
        var start = this.mrange[month - 1];
        var end = this.mrange[month];
        var set = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(null, this.yearlen);
        for (var i = start; i < end; i++)
            set[i] = i;
        return [set, start, end];
    };
    Iterinfo.prototype.wdayset = function (year, month, day) {
        // We need to handle cross-year weeks here.
        var set = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(null, this.yearlen + 7);
        var i = (0,_dateutil__WEBPACK_IMPORTED_MODULE_6__.toOrdinal)((0,_dateutil__WEBPACK_IMPORTED_MODULE_6__.datetime)(year, month, day)) - this.yearordinal;
        var start = i;
        for (var j = 0; j < 7; j++) {
            set[i] = i;
            ++i;
            if (this.wdaymask[i] === this.options.wkst)
                break;
        }
        return [set, start, i];
    };
    Iterinfo.prototype.ddayset = function (year, month, day) {
        var set = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(null, this.yearlen);
        var i = (0,_dateutil__WEBPACK_IMPORTED_MODULE_6__.toOrdinal)((0,_dateutil__WEBPACK_IMPORTED_MODULE_6__.datetime)(year, month, day)) - this.yearordinal;
        set[i] = i;
        return [set, i, i + 1];
    };
    Iterinfo.prototype.htimeset = function (hour, _, second, millisecond) {
        var _this = this;
        var set = [];
        this.options.byminute.forEach(function (minute) {
            set = set.concat(_this.mtimeset(hour, minute, second, millisecond));
        });
        (0,_dateutil__WEBPACK_IMPORTED_MODULE_6__.sort)(set);
        return set;
    };
    Iterinfo.prototype.mtimeset = function (hour, minute, _, millisecond) {
        var set = this.options.bysecond.map(function (second) { return new _datetime__WEBPACK_IMPORTED_MODULE_5__.Time(hour, minute, second, millisecond); });
        (0,_dateutil__WEBPACK_IMPORTED_MODULE_6__.sort)(set);
        return set;
    };
    Iterinfo.prototype.stimeset = function (hour, minute, second, millisecond) {
        return [new _datetime__WEBPACK_IMPORTED_MODULE_5__.Time(hour, minute, second, millisecond)];
    };
    Iterinfo.prototype.getdayset = function (freq) {
        switch (freq) {
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.YEARLY:
                return this.ydayset.bind(this);
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.MONTHLY:
                return this.mdayset.bind(this);
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.WEEKLY:
                return this.wdayset.bind(this);
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.DAILY:
                return this.ddayset.bind(this);
            default:
                return this.ddayset.bind(this);
        }
    };
    Iterinfo.prototype.gettimeset = function (freq) {
        switch (freq) {
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.HOURLY:
                return this.htimeset.bind(this);
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.MINUTELY:
                return this.mtimeset.bind(this);
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.SECONDLY:
                return this.stimeset.bind(this);
        }
    };
    return Iterinfo;
}());
/* harmony default export */ __webpack_exports__["default"] = (Iterinfo);


/***/ }),

/***/ 79997:
/*!***********************************************************!*\
  !*** ./node_modules/rrule/dist/esm/iterinfo/monthinfo.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rebuildMonth": function() { return /* binding */ rebuildMonth; }
/* harmony export */ });
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rrule */ 8932);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ 36853);


function rebuildMonth(year, month, yearlen, mrange, wdaymask, options) {
    var result = {
        lastyear: year,
        lastmonth: month,
        nwdaymask: [],
    };
    var ranges = [];
    if (options.freq === _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule.YEARLY) {
        if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(options.bymonth)) {
            ranges = [[0, yearlen]];
        }
        else {
            for (var j = 0; j < options.bymonth.length; j++) {
                month = options.bymonth[j];
                ranges.push(mrange.slice(month - 1, month + 1));
            }
        }
    }
    else if (options.freq === _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule.MONTHLY) {
        ranges = [mrange.slice(month - 1, month + 1)];
    }
    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(ranges)) {
        return result;
    }
    // Weekly frequency won't get here, so we may not
    // care about cross-year weekly periods.
    result.nwdaymask = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.repeat)(0, yearlen);
    for (var j = 0; j < ranges.length; j++) {
        var rang = ranges[j];
        var first = rang[0];
        var last = rang[1] - 1;
        for (var k = 0; k < options.bynweekday.length; k++) {
            var i = void 0;
            var _a = options.bynweekday[k], wday = _a[0], n = _a[1];
            if (n < 0) {
                i = last + (n + 1) * 7;
                i -= (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(wdaymask[i] - wday, 7);
            }
            else {
                i = first + (n - 1) * 7;
                i += (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(7 - wdaymask[i] + wday, 7);
            }
            if (first <= i && i <= last)
                result.nwdaymask[i] = 1;
        }
    }
    return result;
}


/***/ }),

/***/ 36957:
/*!**********************************************************!*\
  !*** ./node_modules/rrule/dist/esm/iterinfo/yearinfo.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rebuildYear": function() { return /* binding */ rebuildYear; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dateutil */ 98054);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ 36853);
/* harmony import */ var _masks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../masks */ 68777);




function rebuildYear(year, options) {
    var firstyday = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.datetime)(year, 1, 1);
    var yearlen = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.isLeapYear)(year) ? 366 : 365;
    var nextyearlen = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.isLeapYear)(year + 1) ? 366 : 365;
    var yearordinal = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.toOrdinal)(firstyday);
    var yearweekday = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.getWeekday)(firstyday);
    var result = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ yearlen: yearlen, nextyearlen: nextyearlen, yearordinal: yearordinal, yearweekday: yearweekday }, baseYearMasks(year)), { wnomask: null });
    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(options.byweekno)) {
        return result;
    }
    result.wnomask = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.repeat)(0, yearlen + 7);
    var firstwkst;
    var wyearlen;
    var no1wkst = (firstwkst = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(7 - yearweekday + options.wkst, 7));
    if (no1wkst >= 4) {
        no1wkst = 0;
        // Number of days in the year, plus the days we got
        // from last year.
        wyearlen = result.yearlen + (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(yearweekday - options.wkst, 7);
    }
    else {
        // Number of days in the year, minus the days we
        // left in last year.
        wyearlen = yearlen - no1wkst;
    }
    var div = Math.floor(wyearlen / 7);
    var mod = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(wyearlen, 7);
    var numweeks = Math.floor(div + mod / 4);
    for (var j = 0; j < options.byweekno.length; j++) {
        var n = options.byweekno[j];
        if (n < 0) {
            n += numweeks + 1;
        }
        if (!(n > 0 && n <= numweeks)) {
            continue;
        }
        var i = void 0;
        if (n > 1) {
            i = no1wkst + (n - 1) * 7;
            if (no1wkst !== firstwkst) {
                i -= 7 - firstwkst;
            }
        }
        else {
            i = no1wkst;
        }
        for (var k = 0; k < 7; k++) {
            result.wnomask[i] = 1;
            i++;
            if (result.wdaymask[i] === options.wkst)
                break;
        }
    }
    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(options.byweekno, 1)) {
        // Check week number 1 of next year as well
        // orig-TODO : Check -numweeks for next year.
        var i = no1wkst + numweeks * 7;
        if (no1wkst !== firstwkst)
            i -= 7 - firstwkst;
        if (i < yearlen) {
            // If week starts in next year, we
            // don't care about it.
            for (var j = 0; j < 7; j++) {
                result.wnomask[i] = 1;
                i += 1;
                if (result.wdaymask[i] === options.wkst)
                    break;
            }
        }
    }
    if (no1wkst) {
        // Check last week number of last year as
        // well. If no1wkst is 0, either the year
        // started on week start, or week number 1
        // got days from last year, so there are no
        // days from last year's last week number in
        // this year.
        var lnumweeks = void 0;
        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(options.byweekno, -1)) {
            var lyearweekday = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.getWeekday)((0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.datetime)(year - 1, 1, 1));
            var lno1wkst = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(7 - lyearweekday.valueOf() + options.wkst, 7);
            var lyearlen = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.isLeapYear)(year - 1) ? 366 : 365;
            var weekst = void 0;
            if (lno1wkst >= 4) {
                lno1wkst = 0;
                weekst = lyearlen + (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(lyearweekday - options.wkst, 7);
            }
            else {
                weekst = yearlen - no1wkst;
            }
            lnumweeks = Math.floor(52 + (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(weekst, 7) / 4);
        }
        else {
            lnumweeks = -1;
        }
        if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(options.byweekno, lnumweeks)) {
            for (var i = 0; i < no1wkst; i++)
                result.wnomask[i] = 1;
        }
    }
    return result;
}
function baseYearMasks(year) {
    var yearlen = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.isLeapYear)(year) ? 366 : 365;
    var firstyday = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.datetime)(year, 1, 1);
    var wday = (0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.getWeekday)(firstyday);
    if (yearlen === 365) {
        return {
            mmask: _masks__WEBPACK_IMPORTED_MODULE_2__.M365MASK,
            mdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.MDAY365MASK,
            nmdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.NMDAY365MASK,
            wdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.WDAYMASK.slice(wday),
            mrange: _masks__WEBPACK_IMPORTED_MODULE_2__.M365RANGE,
        };
    }
    return {
        mmask: _masks__WEBPACK_IMPORTED_MODULE_2__.M366MASK,
        mdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.MDAY366MASK,
        nmdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.NMDAY366MASK,
        wdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.WDAYMASK.slice(wday),
        mrange: _masks__WEBPACK_IMPORTED_MODULE_2__.M366RANGE,
    };
}


/***/ }),

/***/ 8210:
/*!***************************************************!*\
  !*** ./node_modules/rrule/dist/esm/iterresult.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/**
 * This class helps us to emulate python's generators, sorta.
 */
var IterResult = /** @class */ (function () {
    function IterResult(method, args) {
        this.minDate = null;
        this.maxDate = null;
        this._result = [];
        this.total = 0;
        this.method = method;
        this.args = args;
        if (method === 'between') {
            this.maxDate = args.inc
                ? args.before
                : new Date(args.before.getTime() - 1);
            this.minDate = args.inc ? args.after : new Date(args.after.getTime() + 1);
        }
        else if (method === 'before') {
            this.maxDate = args.inc ? args.dt : new Date(args.dt.getTime() - 1);
        }
        else if (method === 'after') {
            this.minDate = args.inc ? args.dt : new Date(args.dt.getTime() + 1);
        }
    }
    /**
     * Possibly adds a date into the result.
     *
     * @param {Date} date - the date isn't necessarly added to the result
     * list (if it is too late/too early)
     * @return {Boolean} true if it makes sense to continue the iteration
     * false if we're done.
     */
    IterResult.prototype.accept = function (date) {
        ++this.total;
        var tooEarly = this.minDate && date < this.minDate;
        var tooLate = this.maxDate && date > this.maxDate;
        if (this.method === 'between') {
            if (tooEarly)
                return true;
            if (tooLate)
                return false;
        }
        else if (this.method === 'before') {
            if (tooLate)
                return false;
        }
        else if (this.method === 'after') {
            if (tooEarly)
                return true;
            this.add(date);
            return false;
        }
        return this.add(date);
    };
    /**
     *
     * @param {Date} date that is part of the result.
     * @return {Boolean} whether we are interested in more values.
     */
    IterResult.prototype.add = function (date) {
        this._result.push(date);
        return true;
    };
    /**
     * 'before' and 'after' return only one date, whereas 'all'
     * and 'between' an array.
     *
     * @return {Date,Array?}
     */
    IterResult.prototype.getValue = function () {
        var res = this._result;
        switch (this.method) {
            case 'all':
            case 'between':
                return res;
            case 'before':
            case 'after':
            default:
                return (res.length ? res[res.length - 1] : null);
        }
    };
    IterResult.prototype.clone = function () {
        return new IterResult(this.method, this.args);
    };
    return IterResult;
}());
/* harmony default export */ __webpack_exports__["default"] = (IterResult);


/***/ }),

/***/ 25882:
/*!************************************************!*\
  !*** ./node_modules/rrule/dist/esm/iterset.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "iterSet": function() { return /* binding */ iterSet; }
/* harmony export */ });
/* harmony import */ var _datewithzone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datewithzone */ 14642);
/* harmony import */ var _iter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iter */ 60630);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dateutil */ 98054);



function iterSet(iterResult, _rrule, _exrule, _rdate, _exdate, tzid) {
    var _exdateHash = {};
    var _accept = iterResult.accept;
    function evalExdate(after, before) {
        _exrule.forEach(function (rrule) {
            rrule.between(after, before, true).forEach(function (date) {
                _exdateHash[Number(date)] = true;
            });
        });
    }
    _exdate.forEach(function (date) {
        var zonedDate = new _datewithzone__WEBPACK_IMPORTED_MODULE_0__.DateWithZone(date, tzid).rezonedDate();
        _exdateHash[Number(zonedDate)] = true;
    });
    iterResult.accept = function (date) {
        var dt = Number(date);
        if (isNaN(dt))
            return _accept.call(this, date);
        if (!_exdateHash[dt]) {
            evalExdate(new Date(dt - 1), new Date(dt + 1));
            if (!_exdateHash[dt]) {
                _exdateHash[dt] = true;
                return _accept.call(this, date);
            }
        }
        return true;
    };
    if (iterResult.method === 'between') {
        evalExdate(iterResult.args.after, iterResult.args.before);
        iterResult.accept = function (date) {
            var dt = Number(date);
            if (!_exdateHash[dt]) {
                _exdateHash[dt] = true;
                return _accept.call(this, date);
            }
            return true;
        };
    }
    for (var i = 0; i < _rdate.length; i++) {
        var zonedDate = new _datewithzone__WEBPACK_IMPORTED_MODULE_0__.DateWithZone(_rdate[i], tzid).rezonedDate();
        if (!iterResult.accept(new Date(zonedDate.getTime())))
            break;
    }
    _rrule.forEach(function (rrule) {
        (0,_iter__WEBPACK_IMPORTED_MODULE_1__.iter)(iterResult, rrule.options);
    });
    var res = iterResult._result;
    (0,_dateutil__WEBPACK_IMPORTED_MODULE_2__.sort)(res);
    switch (iterResult.method) {
        case 'all':
        case 'between':
            return res;
        case 'before':
            return ((res.length && res[res.length - 1]) || null);
        case 'after':
        default:
            return ((res.length && res[0]) || null);
    }
}


/***/ }),

/***/ 68777:
/*!**********************************************!*\
  !*** ./node_modules/rrule/dist/esm/masks.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WDAYMASK": function() { return /* binding */ WDAYMASK; },
/* harmony export */   "M365MASK": function() { return /* binding */ M365MASK; },
/* harmony export */   "M365RANGE": function() { return /* binding */ M365RANGE; },
/* harmony export */   "M366MASK": function() { return /* binding */ M366MASK; },
/* harmony export */   "M366RANGE": function() { return /* binding */ M366RANGE; },
/* harmony export */   "MDAY365MASK": function() { return /* binding */ MDAY365MASK; },
/* harmony export */   "MDAY366MASK": function() { return /* binding */ MDAY366MASK; },
/* harmony export */   "NMDAY365MASK": function() { return /* binding */ NMDAY365MASK; },
/* harmony export */   "NMDAY366MASK": function() { return /* binding */ NMDAY366MASK; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ 36853);


// =============================================================================
// Date masks
// =============================================================================
// Every mask is 7 days longer to handle cross-year weekly periods.
var M365MASK = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(1, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(2, 28), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(3, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(4, 30), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(5, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(6, 30), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(7, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(8, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(9, 30), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(10, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(11, 30), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(12, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(1, 7), true);
var M366MASK = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(1, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(2, 29), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(3, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(4, 30), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(5, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(6, 30), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(7, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(8, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(9, 30), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(10, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(11, 30), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(12, 31), true), (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(1, 7), true);
var M28 = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.range)(1, 29);
var M29 = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.range)(1, 30);
var M30 = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.range)(1, 31);
var M31 = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.range)(1, 32);
var MDAY366MASK = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], M31, true), M29, true), M31, true), M30, true), M31, true), M30, true), M31, true), M31, true), M30, true), M31, true), M30, true), M31, true), M31.slice(0, 7), true);
var MDAY365MASK = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], M31, true), M28, true), M31, true), M30, true), M31, true), M30, true), M31, true), M31, true), M30, true), M31, true), M30, true), M31, true), M31.slice(0, 7), true);
var NM28 = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.range)(-28, 0);
var NM29 = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.range)(-29, 0);
var NM30 = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.range)(-30, 0);
var NM31 = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.range)(-31, 0);
var NMDAY366MASK = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], NM31, true), NM29, true), NM31, true), NM30, true), NM31, true), NM30, true), NM31, true), NM31, true), NM30, true), NM31, true), NM30, true), NM31, true), NM31.slice(0, 7), true);
var NMDAY365MASK = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], NM31, true), NM28, true), NM31, true), NM30, true), NM31, true), NM30, true), NM31, true), NM31, true), NM30, true), NM31, true), NM30, true), NM31, true), NM31.slice(0, 7), true);
var M366RANGE = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];
var M365RANGE = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];
var WDAYMASK = (function () {
    var wdaymask = [];
    for (var i = 0; i < 55; i++)
        wdaymask = wdaymask.concat((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.range)(7));
    return wdaymask;
})();



/***/ }),

/***/ 95075:
/*!*************************************************!*\
  !*** ./node_modules/rrule/dist/esm/nlp/i18n.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
// =============================================================================
// i18n
// =============================================================================
var ENGLISH = {
    dayNames: [
        'Sunday',
        'Monday',
        'Tuesday',
        'Wednesday',
        'Thursday',
        'Friday',
        'Saturday',
    ],
    monthNames: [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December',
    ],
    tokens: {
        SKIP: /^[ \r\n\t]+|^\.$/,
        number: /^[1-9][0-9]*/,
        numberAsText: /^(one|two|three)/i,
        every: /^every/i,
        'day(s)': /^days?/i,
        'weekday(s)': /^weekdays?/i,
        'week(s)': /^weeks?/i,
        'hour(s)': /^hours?/i,
        'minute(s)': /^minutes?/i,
        'month(s)': /^months?/i,
        'year(s)': /^years?/i,
        on: /^(on|in)/i,
        at: /^(at)/i,
        the: /^the/i,
        first: /^first/i,
        second: /^second/i,
        third: /^third/i,
        nth: /^([1-9][0-9]*)(\.|th|nd|rd|st)/i,
        last: /^last/i,
        for: /^for/i,
        'time(s)': /^times?/i,
        until: /^(un)?til/i,
        monday: /^mo(n(day)?)?/i,
        tuesday: /^tu(e(s(day)?)?)?/i,
        wednesday: /^we(d(n(esday)?)?)?/i,
        thursday: /^th(u(r(sday)?)?)?/i,
        friday: /^fr(i(day)?)?/i,
        saturday: /^sa(t(urday)?)?/i,
        sunday: /^su(n(day)?)?/i,
        january: /^jan(uary)?/i,
        february: /^feb(ruary)?/i,
        march: /^mar(ch)?/i,
        april: /^apr(il)?/i,
        may: /^may/i,
        june: /^june?/i,
        july: /^july?/i,
        august: /^aug(ust)?/i,
        september: /^sep(t(ember)?)?/i,
        october: /^oct(ober)?/i,
        november: /^nov(ember)?/i,
        december: /^dec(ember)?/i,
        comma: /^(,\s*|(and|or)\s*)+/i,
    },
};
/* harmony default export */ __webpack_exports__["default"] = (ENGLISH);


/***/ }),

/***/ 19512:
/*!**************************************************!*\
  !*** ./node_modules/rrule/dist/esm/nlp/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromText": function() { return /* binding */ fromText; },
/* harmony export */   "parseText": function() { return /* reexport safe */ _parsetext__WEBPACK_IMPORTED_MODULE_1__.default; },
/* harmony export */   "isFullyConvertible": function() { return /* binding */ isFullyConvertible; },
/* harmony export */   "toText": function() { return /* binding */ toText; }
/* harmony export */ });
/* harmony import */ var _totext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./totext */ 71650);
/* harmony import */ var _parsetext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parsetext */ 78766);
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rrule */ 8932);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types */ 12905);
/* harmony import */ var _i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./i18n */ 95075);





/* !
 * rrule.js - Library for working with recurrence rules for calendar dates.
 * https://github.com/jakubroztocil/rrule
 *
 * Copyright 2010, Jakub Roztocil and Lars Schoning
 * Licenced under the BSD licence.
 * https://github.com/jakubroztocil/rrule/blob/master/LICENCE
 *
 */
/**
 *
 * Implementation of RRule.fromText() and RRule::toText().
 *
 *
 * On the client side, this file needs to be included
 * when those functions are used.
 *
 */
// =============================================================================
// fromText
// =============================================================================
/**
 * Will be able to convert some of the below described rules from
 * text format to a rule object.
 *
 *
 * RULES
 *
 * Every ([n])
 * day(s)
 * | [weekday], ..., (and) [weekday]
 * | weekday(s)
 * | week(s)
 * | month(s)
 * | [month], ..., (and) [month]
 * | year(s)
 *
 *
 * Plus 0, 1, or multiple of these:
 *
 * on [weekday], ..., (or) [weekday] the [monthday], [monthday], ... (or) [monthday]
 *
 * on [weekday], ..., (and) [weekday]
 *
 * on the [monthday], [monthday], ... (and) [monthday] (day of the month)
 *
 * on the [nth-weekday], ..., (and) [nth-weekday] (of the month/year)
 *
 *
 * Plus 0 or 1 of these:
 *
 * for [n] time(s)
 *
 * until [date]
 *
 * Plus (.)
 *
 *
 * Definitely no supported for parsing:
 *
 * (for year):
 * in week(s) [n], ..., (and) [n]
 *
 * on the [yearday], ..., (and) [n] day of the year
 * on day [yearday], ..., (and) [n]
 *
 *
 * NON-TERMINALS
 *
 * [n]: 1, 2 ..., one, two, three ..
 * [month]: January, February, March, April, May, ... December
 * [weekday]: Monday, ... Sunday
 * [nth-weekday]: first [weekday], 2nd [weekday], ... last [weekday], ...
 * [monthday]: first, 1., 2., 1st, 2nd, second, ... 31st, last day, 2nd last day, ..
 * [date]:
 * - [month] (0-31(,) ([year])),
 * - (the) 0-31.(1-12.([year])),
 * - (the) 0-31/(1-12/([year])),
 * - [weekday]
 *
 * [year]: 0000, 0001, ... 01, 02, ..
 *
 * Definitely not supported for parsing:
 *
 * [yearday]: first, 1., 2., 1st, 2nd, second, ... 366th, last day, 2nd last day, ..
 *
 * @param {String} text
 * @return {Object, Boolean} the rule, or null.
 */
var fromText = function (text, language) {
    if (language === void 0) { language = _i18n__WEBPACK_IMPORTED_MODULE_4__.default; }
    return new _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule((0,_parsetext__WEBPACK_IMPORTED_MODULE_1__.default)(text, language) || undefined);
};
var common = [
    'count',
    'until',
    'interval',
    'byweekday',
    'bymonthday',
    'bymonth',
];
_totext__WEBPACK_IMPORTED_MODULE_0__.default.IMPLEMENTED = [];
_totext__WEBPACK_IMPORTED_MODULE_0__.default.IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.HOURLY] = common;
_totext__WEBPACK_IMPORTED_MODULE_0__.default.IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.MINUTELY] = common;
_totext__WEBPACK_IMPORTED_MODULE_0__.default.IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.DAILY] = ['byhour'].concat(common);
_totext__WEBPACK_IMPORTED_MODULE_0__.default.IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.WEEKLY] = common;
_totext__WEBPACK_IMPORTED_MODULE_0__.default.IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.MONTHLY] = common;
_totext__WEBPACK_IMPORTED_MODULE_0__.default.IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.YEARLY] = ['byweekno', 'byyearday'].concat(common);
// =============================================================================
// Export
// =============================================================================
var toText = function (rrule, gettext, language, dateFormatter) {
    return new _totext__WEBPACK_IMPORTED_MODULE_0__.default(rrule, gettext, language, dateFormatter).toString();
};
var isFullyConvertible = _totext__WEBPACK_IMPORTED_MODULE_0__.default.isFullyConvertible;



/***/ }),

/***/ 78766:
/*!******************************************************!*\
  !*** ./node_modules/rrule/dist/esm/nlp/parsetext.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ parseText; }
/* harmony export */ });
/* harmony import */ var _i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./i18n */ 95075);
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rrule */ 8932);


// =============================================================================
// Parser
// =============================================================================
var Parser = /** @class */ (function () {
    function Parser(rules) {
        this.done = true;
        this.rules = rules;
    }
    Parser.prototype.start = function (text) {
        this.text = text;
        this.done = false;
        return this.nextSymbol();
    };
    Parser.prototype.isDone = function () {
        return this.done && this.symbol === null;
    };
    Parser.prototype.nextSymbol = function () {
        var best;
        var bestSymbol;
        this.symbol = null;
        this.value = null;
        do {
            if (this.done)
                return false;
            var rule = void 0;
            best = null;
            for (var name_1 in this.rules) {
                rule = this.rules[name_1];
                var match = rule.exec(this.text);
                if (match) {
                    if (best === null || match[0].length > best[0].length) {
                        best = match;
                        bestSymbol = name_1;
                    }
                }
            }
            if (best != null) {
                this.text = this.text.substr(best[0].length);
                if (this.text === '')
                    this.done = true;
            }
            if (best == null) {
                this.done = true;
                this.symbol = null;
                this.value = null;
                return;
            }
        } while (bestSymbol === 'SKIP');
        this.symbol = bestSymbol;
        this.value = best;
        return true;
    };
    Parser.prototype.accept = function (name) {
        if (this.symbol === name) {
            if (this.value) {
                var v = this.value;
                this.nextSymbol();
                return v;
            }
            this.nextSymbol();
            return true;
        }
        return false;
    };
    Parser.prototype.acceptNumber = function () {
        return this.accept('number');
    };
    Parser.prototype.expect = function (name) {
        if (this.accept(name))
            return true;
        throw new Error('expected ' + name + ' but found ' + this.symbol);
    };
    return Parser;
}());
function parseText(text, language) {
    if (language === void 0) { language = _i18n__WEBPACK_IMPORTED_MODULE_0__.default; }
    var options = {};
    var ttr = new Parser(language.tokens);
    if (!ttr.start(text))
        return null;
    S();
    return options;
    function S() {
        // every [n]
        ttr.expect('every');
        var n = ttr.acceptNumber();
        if (n)
            options.interval = parseInt(n[0], 10);
        if (ttr.isDone())
            throw new Error('Unexpected end');
        switch (ttr.symbol) {
            case 'day(s)':
                options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.DAILY;
                if (ttr.nextSymbol()) {
                    AT();
                    F();
                }
                break;
            // FIXME Note: every 2 weekdays != every two weeks on weekdays.
            // DAILY on weekdays is not a valid rule
            case 'weekday(s)':
                options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.WEEKLY;
                options.byweekday = [_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.MO, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.TU, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.WE, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.TH, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.FR];
                ttr.nextSymbol();
                F();
                break;
            case 'week(s)':
                options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.WEEKLY;
                if (ttr.nextSymbol()) {
                    ON();
                    F();
                }
                break;
            case 'hour(s)':
                options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.HOURLY;
                if (ttr.nextSymbol()) {
                    ON();
                    F();
                }
                break;
            case 'minute(s)':
                options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.MINUTELY;
                if (ttr.nextSymbol()) {
                    ON();
                    F();
                }
                break;
            case 'month(s)':
                options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.MONTHLY;
                if (ttr.nextSymbol()) {
                    ON();
                    F();
                }
                break;
            case 'year(s)':
                options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.YEARLY;
                if (ttr.nextSymbol()) {
                    ON();
                    F();
                }
                break;
            case 'monday':
            case 'tuesday':
            case 'wednesday':
            case 'thursday':
            case 'friday':
            case 'saturday':
            case 'sunday':
                options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.WEEKLY;
                var key = ttr.symbol
                    .substr(0, 2)
                    .toUpperCase();
                options.byweekday = [_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule[key]];
                if (!ttr.nextSymbol())
                    return;
                // TODO check for duplicates
                while (ttr.accept('comma')) {
                    if (ttr.isDone())
                        throw new Error('Unexpected end');
                    var wkd = decodeWKD();
                    if (!wkd) {
                        throw new Error('Unexpected symbol ' + ttr.symbol + ', expected weekday');
                    }
                    options.byweekday.push(_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule[wkd]);
                    ttr.nextSymbol();
                }
                MDAYs();
                F();
                break;
            case 'january':
            case 'february':
            case 'march':
            case 'april':
            case 'may':
            case 'june':
            case 'july':
            case 'august':
            case 'september':
            case 'october':
            case 'november':
            case 'december':
                options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.YEARLY;
                options.bymonth = [decodeM()];
                if (!ttr.nextSymbol())
                    return;
                // TODO check for duplicates
                while (ttr.accept('comma')) {
                    if (ttr.isDone())
                        throw new Error('Unexpected end');
                    var m = decodeM();
                    if (!m) {
                        throw new Error('Unexpected symbol ' + ttr.symbol + ', expected month');
                    }
                    options.bymonth.push(m);
                    ttr.nextSymbol();
                }
                ON();
                F();
                break;
            default:
                throw new Error('Unknown symbol');
        }
    }
    function ON() {
        var on = ttr.accept('on');
        var the = ttr.accept('the');
        if (!(on || the))
            return;
        do {
            var nth = decodeNTH();
            var wkd = decodeWKD();
            var m = decodeM();
            // nth <weekday> | <weekday>
            if (nth) {
                // ttr.nextSymbol()
                if (wkd) {
                    ttr.nextSymbol();
                    if (!options.byweekday)
                        options.byweekday = [];
                    options.byweekday.push(_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule[wkd].nth(nth));
                }
                else {
                    if (!options.bymonthday)
                        options.bymonthday = [];
                    options.bymonthday.push(nth);
                    ttr.accept('day(s)');
                }
                // <weekday>
            }
            else if (wkd) {
                ttr.nextSymbol();
                if (!options.byweekday)
                    options.byweekday = [];
                options.byweekday.push(_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule[wkd]);
            }
            else if (ttr.symbol === 'weekday(s)') {
                ttr.nextSymbol();
                if (!options.byweekday) {
                    options.byweekday = [_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.MO, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.TU, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.WE, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.TH, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.FR];
                }
            }
            else if (ttr.symbol === 'week(s)') {
                ttr.nextSymbol();
                var n = ttr.acceptNumber();
                if (!n) {
                    throw new Error('Unexpected symbol ' + ttr.symbol + ', expected week number');
                }
                options.byweekno = [parseInt(n[0], 10)];
                while (ttr.accept('comma')) {
                    n = ttr.acceptNumber();
                    if (!n) {
                        throw new Error('Unexpected symbol ' + ttr.symbol + '; expected monthday');
                    }
                    options.byweekno.push(parseInt(n[0], 10));
                }
            }
            else if (m) {
                ttr.nextSymbol();
                if (!options.bymonth)
                    options.bymonth = [];
                options.bymonth.push(m);
            }
            else {
                return;
            }
        } while (ttr.accept('comma') || ttr.accept('the') || ttr.accept('on'));
    }
    function AT() {
        var at = ttr.accept('at');
        if (!at)
            return;
        do {
            var n = ttr.acceptNumber();
            if (!n) {
                throw new Error('Unexpected symbol ' + ttr.symbol + ', expected hour');
            }
            options.byhour = [parseInt(n[0], 10)];
            while (ttr.accept('comma')) {
                n = ttr.acceptNumber();
                if (!n) {
                    throw new Error('Unexpected symbol ' + ttr.symbol + '; expected hour');
                }
                options.byhour.push(parseInt(n[0], 10));
            }
        } while (ttr.accept('comma') || ttr.accept('at'));
    }
    function decodeM() {
        switch (ttr.symbol) {
            case 'january':
                return 1;
            case 'february':
                return 2;
            case 'march':
                return 3;
            case 'april':
                return 4;
            case 'may':
                return 5;
            case 'june':
                return 6;
            case 'july':
                return 7;
            case 'august':
                return 8;
            case 'september':
                return 9;
            case 'october':
                return 10;
            case 'november':
                return 11;
            case 'december':
                return 12;
            default:
                return false;
        }
    }
    function decodeWKD() {
        switch (ttr.symbol) {
            case 'monday':
            case 'tuesday':
            case 'wednesday':
            case 'thursday':
            case 'friday':
            case 'saturday':
            case 'sunday':
                return ttr.symbol.substr(0, 2).toUpperCase();
            default:
                return false;
        }
    }
    function decodeNTH() {
        switch (ttr.symbol) {
            case 'last':
                ttr.nextSymbol();
                return -1;
            case 'first':
                ttr.nextSymbol();
                return 1;
            case 'second':
                ttr.nextSymbol();
                return ttr.accept('last') ? -2 : 2;
            case 'third':
                ttr.nextSymbol();
                return ttr.accept('last') ? -3 : 3;
            case 'nth':
                var v = parseInt(ttr.value[1], 10);
                if (v < -366 || v > 366)
                    throw new Error('Nth out of range: ' + v);
                ttr.nextSymbol();
                return ttr.accept('last') ? -v : v;
            default:
                return false;
        }
    }
    function MDAYs() {
        ttr.accept('on');
        ttr.accept('the');
        var nth = decodeNTH();
        if (!nth)
            return;
        options.bymonthday = [nth];
        ttr.nextSymbol();
        while (ttr.accept('comma')) {
            nth = decodeNTH();
            if (!nth) {
                throw new Error('Unexpected symbol ' + ttr.symbol + '; expected monthday');
            }
            options.bymonthday.push(nth);
            ttr.nextSymbol();
        }
    }
    function F() {
        if (ttr.symbol === 'until') {
            var date = Date.parse(ttr.text);
            if (!date)
                throw new Error('Cannot parse until date:' + ttr.text);
            options.until = new Date(date);
        }
        else if (ttr.accept('for')) {
            options.count = parseInt(ttr.value[0], 10);
            ttr.expect('number');
            // ttr.expect('times')
        }
    }
}


/***/ }),

/***/ 71650:
/*!***************************************************!*\
  !*** ./node_modules/rrule/dist/esm/nlp/totext.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./i18n */ 95075);
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rrule */ 8932);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers */ 36853);



// =============================================================================
// Helper functions
// =============================================================================
/**
 * Return true if a value is in an array
 */
var contains = function (arr, val) {
    return arr.indexOf(val) !== -1;
};
var defaultGetText = function (id) { return id.toString(); };
var defaultDateFormatter = function (year, month, day) { return "".concat(month, " ").concat(day, ", ").concat(year); };
/**
 *
 * @param {RRule} rrule
 * Optional:
 * @param {Function} gettext function
 * @param {Object} language definition
 * @constructor
 */
var ToText = /** @class */ (function () {
    function ToText(rrule, gettext, language, dateFormatter) {
        if (gettext === void 0) { gettext = defaultGetText; }
        if (language === void 0) { language = _i18n__WEBPACK_IMPORTED_MODULE_0__.default; }
        if (dateFormatter === void 0) { dateFormatter = defaultDateFormatter; }
        this.text = [];
        this.language = language || _i18n__WEBPACK_IMPORTED_MODULE_0__.default;
        this.gettext = gettext;
        this.dateFormatter = dateFormatter;
        this.rrule = rrule;
        this.options = rrule.options;
        this.origOptions = rrule.origOptions;
        if (this.origOptions.bymonthday) {
            var bymonthday = [].concat(this.options.bymonthday);
            var bynmonthday = [].concat(this.options.bynmonthday);
            bymonthday.sort(function (a, b) { return a - b; });
            bynmonthday.sort(function (a, b) { return b - a; });
            // 1, 2, 3, .., -5, -4, -3, ..
            this.bymonthday = bymonthday.concat(bynmonthday);
            if (!this.bymonthday.length)
                this.bymonthday = null;
        }
        if ((0,_helpers__WEBPACK_IMPORTED_MODULE_2__.isPresent)(this.origOptions.byweekday)) {
            var byweekday = !(0,_helpers__WEBPACK_IMPORTED_MODULE_2__.isArray)(this.origOptions.byweekday)
                ? [this.origOptions.byweekday]
                : this.origOptions.byweekday;
            var days = String(byweekday);
            this.byweekday = {
                allWeeks: byweekday.filter(function (weekday) {
                    return !weekday.n;
                }),
                someWeeks: byweekday.filter(function (weekday) {
                    return Boolean(weekday.n);
                }),
                isWeekdays: days.indexOf('MO') !== -1 &&
                    days.indexOf('TU') !== -1 &&
                    days.indexOf('WE') !== -1 &&
                    days.indexOf('TH') !== -1 &&
                    days.indexOf('FR') !== -1 &&
                    days.indexOf('SA') === -1 &&
                    days.indexOf('SU') === -1,
                isEveryDay: days.indexOf('MO') !== -1 &&
                    days.indexOf('TU') !== -1 &&
                    days.indexOf('WE') !== -1 &&
                    days.indexOf('TH') !== -1 &&
                    days.indexOf('FR') !== -1 &&
                    days.indexOf('SA') !== -1 &&
                    days.indexOf('SU') !== -1,
            };
            var sortWeekDays = function (a, b) {
                return a.weekday - b.weekday;
            };
            this.byweekday.allWeeks.sort(sortWeekDays);
            this.byweekday.someWeeks.sort(sortWeekDays);
            if (!this.byweekday.allWeeks.length)
                this.byweekday.allWeeks = null;
            if (!this.byweekday.someWeeks.length)
                this.byweekday.someWeeks = null;
        }
        else {
            this.byweekday = null;
        }
    }
    /**
     * Test whether the rrule can be fully converted to text.
     *
     * @param {RRule} rrule
     * @return {Boolean}
     */
    ToText.isFullyConvertible = function (rrule) {
        var canConvert = true;
        if (!(rrule.options.freq in ToText.IMPLEMENTED))
            return false;
        if (rrule.origOptions.until && rrule.origOptions.count)
            return false;
        for (var key in rrule.origOptions) {
            if (contains(['dtstart', 'wkst', 'freq'], key))
                return true;
            if (!contains(ToText.IMPLEMENTED[rrule.options.freq], key))
                return false;
        }
        return canConvert;
    };
    ToText.prototype.isFullyConvertible = function () {
        return ToText.isFullyConvertible(this.rrule);
    };
    /**
     * Perform the conversion. Only some of the frequencies are supported.
     * If some of the rrule's options aren't supported, they'll
     * be omitted from the output an "(~ approximate)" will be appended.
     *
     * @return {*}
     */
    ToText.prototype.toString = function () {
        var gettext = this.gettext;
        if (!(this.options.freq in ToText.IMPLEMENTED)) {
            return gettext('RRule error: Unable to fully convert this rrule to text');
        }
        this.text = [gettext('every')];
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        this[_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.FREQUENCIES[this.options.freq]]();
        if (this.options.until) {
            this.add(gettext('until'));
            var until = this.options.until;
            this.add(this.dateFormatter(until.getUTCFullYear(), this.language.monthNames[until.getUTCMonth()], until.getUTCDate()));
        }
        else if (this.options.count) {
            this.add(gettext('for'))
                .add(this.options.count.toString())
                .add(this.plural(this.options.count) ? gettext('times') : gettext('time'));
        }
        if (!this.isFullyConvertible())
            this.add(gettext('(~ approximate)'));
        return this.text.join('');
    };
    ToText.prototype.HOURLY = function () {
        var gettext = this.gettext;
        if (this.options.interval !== 1)
            this.add(this.options.interval.toString());
        this.add(this.plural(this.options.interval) ? gettext('hours') : gettext('hour'));
    };
    ToText.prototype.MINUTELY = function () {
        var gettext = this.gettext;
        if (this.options.interval !== 1)
            this.add(this.options.interval.toString());
        this.add(this.plural(this.options.interval)
            ? gettext('minutes')
            : gettext('minute'));
    };
    ToText.prototype.DAILY = function () {
        var gettext = this.gettext;
        if (this.options.interval !== 1)
            this.add(this.options.interval.toString());
        if (this.byweekday && this.byweekday.isWeekdays) {
            this.add(this.plural(this.options.interval)
                ? gettext('weekdays')
                : gettext('weekday'));
        }
        else {
            this.add(this.plural(this.options.interval) ? gettext('days') : gettext('day'));
        }
        if (this.origOptions.bymonth) {
            this.add(gettext('in'));
            this._bymonth();
        }
        if (this.bymonthday) {
            this._bymonthday();
        }
        else if (this.byweekday) {
            this._byweekday();
        }
        else if (this.origOptions.byhour) {
            this._byhour();
        }
    };
    ToText.prototype.WEEKLY = function () {
        var gettext = this.gettext;
        if (this.options.interval !== 1) {
            this.add(this.options.interval.toString()).add(this.plural(this.options.interval) ? gettext('weeks') : gettext('week'));
        }
        if (this.byweekday && this.byweekday.isWeekdays) {
            if (this.options.interval === 1) {
                this.add(this.plural(this.options.interval)
                    ? gettext('weekdays')
                    : gettext('weekday'));
            }
            else {
                this.add(gettext('on')).add(gettext('weekdays'));
            }
        }
        else if (this.byweekday && this.byweekday.isEveryDay) {
            this.add(this.plural(this.options.interval) ? gettext('days') : gettext('day'));
        }
        else {
            if (this.options.interval === 1)
                this.add(gettext('week'));
            if (this.origOptions.bymonth) {
                this.add(gettext('in'));
                this._bymonth();
            }
            if (this.bymonthday) {
                this._bymonthday();
            }
            else if (this.byweekday) {
                this._byweekday();
            }
        }
    };
    ToText.prototype.MONTHLY = function () {
        var gettext = this.gettext;
        if (this.origOptions.bymonth) {
            if (this.options.interval !== 1) {
                this.add(this.options.interval.toString()).add(gettext('months'));
                if (this.plural(this.options.interval))
                    this.add(gettext('in'));
            }
            else {
                // this.add(gettext('MONTH'))
            }
            this._bymonth();
        }
        else {
            if (this.options.interval !== 1) {
                this.add(this.options.interval.toString());
            }
            this.add(this.plural(this.options.interval)
                ? gettext('months')
                : gettext('month'));
        }
        if (this.bymonthday) {
            this._bymonthday();
        }
        else if (this.byweekday && this.byweekday.isWeekdays) {
            this.add(gettext('on')).add(gettext('weekdays'));
        }
        else if (this.byweekday) {
            this._byweekday();
        }
    };
    ToText.prototype.YEARLY = function () {
        var gettext = this.gettext;
        if (this.origOptions.bymonth) {
            if (this.options.interval !== 1) {
                this.add(this.options.interval.toString());
                this.add(gettext('years'));
            }
            else {
                // this.add(gettext('YEAR'))
            }
            this._bymonth();
        }
        else {
            if (this.options.interval !== 1) {
                this.add(this.options.interval.toString());
            }
            this.add(this.plural(this.options.interval) ? gettext('years') : gettext('year'));
        }
        if (this.bymonthday) {
            this._bymonthday();
        }
        else if (this.byweekday) {
            this._byweekday();
        }
        if (this.options.byyearday) {
            this.add(gettext('on the'))
                .add(this.list(this.options.byyearday, this.nth, gettext('and')))
                .add(gettext('day'));
        }
        if (this.options.byweekno) {
            this.add(gettext('in'))
                .add(this.plural(this.options.byweekno.length)
                ? gettext('weeks')
                : gettext('week'))
                .add(this.list(this.options.byweekno, undefined, gettext('and')));
        }
    };
    ToText.prototype._bymonthday = function () {
        var gettext = this.gettext;
        if (this.byweekday && this.byweekday.allWeeks) {
            this.add(gettext('on'))
                .add(this.list(this.byweekday.allWeeks, this.weekdaytext, gettext('or')))
                .add(gettext('the'))
                .add(this.list(this.bymonthday, this.nth, gettext('or')));
        }
        else {
            this.add(gettext('on the')).add(this.list(this.bymonthday, this.nth, gettext('and')));
        }
        // this.add(gettext('DAY'))
    };
    ToText.prototype._byweekday = function () {
        var gettext = this.gettext;
        if (this.byweekday.allWeeks && !this.byweekday.isWeekdays) {
            this.add(gettext('on')).add(this.list(this.byweekday.allWeeks, this.weekdaytext));
        }
        if (this.byweekday.someWeeks) {
            if (this.byweekday.allWeeks)
                this.add(gettext('and'));
            this.add(gettext('on the')).add(this.list(this.byweekday.someWeeks, this.weekdaytext, gettext('and')));
        }
    };
    ToText.prototype._byhour = function () {
        var gettext = this.gettext;
        this.add(gettext('at')).add(this.list(this.origOptions.byhour, undefined, gettext('and')));
    };
    ToText.prototype._bymonth = function () {
        this.add(this.list(this.options.bymonth, this.monthtext, this.gettext('and')));
    };
    ToText.prototype.nth = function (n) {
        n = parseInt(n.toString(), 10);
        var nth;
        var gettext = this.gettext;
        if (n === -1)
            return gettext('last');
        var npos = Math.abs(n);
        switch (npos) {
            case 1:
            case 21:
            case 31:
                nth = npos + gettext('st');
                break;
            case 2:
            case 22:
                nth = npos + gettext('nd');
                break;
            case 3:
            case 23:
                nth = npos + gettext('rd');
                break;
            default:
                nth = npos + gettext('th');
        }
        return n < 0 ? nth + ' ' + gettext('last') : nth;
    };
    ToText.prototype.monthtext = function (m) {
        return this.language.monthNames[m - 1];
    };
    ToText.prototype.weekdaytext = function (wday) {
        var weekday = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.isNumber)(wday) ? (wday + 1) % 7 : wday.getJsWeekday();
        return ((wday.n ? this.nth(wday.n) + ' ' : '') +
            this.language.dayNames[weekday]);
    };
    ToText.prototype.plural = function (n) {
        return n % 100 !== 1;
    };
    ToText.prototype.add = function (s) {
        this.text.push(' ');
        this.text.push(s);
        return this;
    };
    ToText.prototype.list = function (arr, callback, finalDelim, delim) {
        var _this = this;
        if (delim === void 0) { delim = ','; }
        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_2__.isArray)(arr)) {
            arr = [arr];
        }
        var delimJoin = function (array, delimiter, finalDelimiter) {
            var list = '';
            for (var i = 0; i < array.length; i++) {
                if (i !== 0) {
                    if (i === array.length - 1) {
                        list += ' ' + finalDelimiter + ' ';
                    }
                    else {
                        list += delimiter + ' ';
                    }
                }
                list += array[i];
            }
            return list;
        };
        callback =
            callback ||
                function (o) {
                    return o.toString();
                };
        var realCallback = function (arg) {
            return callback && callback.call(_this, arg);
        };
        if (finalDelim) {
            return delimJoin(arr.map(realCallback), delim, finalDelim);
        }
        else {
            return arr.map(realCallback).join(delim + ' ');
        }
    };
    return ToText;
}());
/* harmony default export */ __webpack_exports__["default"] = (ToText);


/***/ }),

/***/ 13135:
/*!********************************************************!*\
  !*** ./node_modules/rrule/dist/esm/optionstostring.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "optionsToString": function() { return /* binding */ optionsToString; }
/* harmony export */ });
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rrule */ 8932);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ 36853);
/* harmony import */ var _weekday__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./weekday */ 57845);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dateutil */ 98054);
/* harmony import */ var _datewithzone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./datewithzone */ 14642);





function optionsToString(options) {
    var rrule = [];
    var dtstart = '';
    var keys = Object.keys(options);
    var defaultKeys = Object.keys(_rrule__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_OPTIONS);
    for (var i = 0; i < keys.length; i++) {
        if (keys[i] === 'tzid')
            continue;
        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(defaultKeys, keys[i]))
            continue;
        var key = keys[i].toUpperCase();
        var value = options[keys[i]];
        var outValue = '';
        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(value) || ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(value) && !value.length))
            continue;
        switch (key) {
            case 'FREQ':
                outValue = _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule.FREQUENCIES[options.freq];
                break;
            case 'WKST':
                if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(value)) {
                    outValue = new _weekday__WEBPACK_IMPORTED_MODULE_2__.Weekday(value).toString();
                }
                else {
                    outValue = value.toString();
                }
                break;
            case 'BYWEEKDAY':
                /*
                  NOTE: BYWEEKDAY is a special case.
                  RRule() deconstructs the rule.options.byweekday array
                  into an array of Weekday arguments.
                  On the other hand, rule.origOptions is an array of Weekdays.
                  We need to handle both cases here.
                  It might be worth change RRule to keep the Weekdays.
        
                  Also, BYWEEKDAY (used by RRule) vs. BYDAY (RFC)
        
                  */
                key = 'BYDAY';
                outValue = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.toArray)(value)
                    .map(function (wday) {
                    if (wday instanceof _weekday__WEBPACK_IMPORTED_MODULE_2__.Weekday) {
                        return wday;
                    }
                    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(wday)) {
                        return new _weekday__WEBPACK_IMPORTED_MODULE_2__.Weekday(wday[0], wday[1]);
                    }
                    return new _weekday__WEBPACK_IMPORTED_MODULE_2__.Weekday(wday);
                })
                    .toString();
                break;
            case 'DTSTART':
                dtstart = buildDtstart(value, options.tzid);
                break;
            case 'UNTIL':
                outValue = (0,_dateutil__WEBPACK_IMPORTED_MODULE_3__.timeToUntilString)(value, !options.tzid);
                break;
            default:
                if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {
                    var strValues = [];
                    for (var j = 0; j < value.length; j++) {
                        strValues[j] = String(value[j]);
                    }
                    outValue = strValues.toString();
                }
                else {
                    outValue = String(value);
                }
        }
        if (outValue) {
            rrule.push([key, outValue]);
        }
    }
    var rules = rrule
        .map(function (_a) {
        var key = _a[0], value = _a[1];
        return "".concat(key, "=").concat(value.toString());
    })
        .join(';');
    var ruleString = '';
    if (rules !== '') {
        ruleString = "RRULE:".concat(rules);
    }
    return [dtstart, ruleString].filter(function (x) { return !!x; }).join('\n');
}
function buildDtstart(dtstart, tzid) {
    if (!dtstart) {
        return '';
    }
    return 'DTSTART' + new _datewithzone__WEBPACK_IMPORTED_MODULE_4__.DateWithZone(new Date(dtstart), tzid).toString();
}


/***/ }),

/***/ 73181:
/*!*****************************************************!*\
  !*** ./node_modules/rrule/dist/esm/parseoptions.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initializeOptions": function() { return /* binding */ initializeOptions; },
/* harmony export */   "parseOptions": function() { return /* binding */ parseOptions; },
/* harmony export */   "buildTimeset": function() { return /* binding */ buildTimeset; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ 12905);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ 36853);
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rrule */ 8932);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dateutil */ 98054);
/* harmony import */ var _weekday__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./weekday */ 57845);
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./datetime */ 42236);







function initializeOptions(options) {
    var invalid = [];
    var keys = Object.keys(options);
    // Shallow copy for options and origOptions and check for invalid
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(_rrule__WEBPACK_IMPORTED_MODULE_2__.defaultKeys, key))
            invalid.push(key);
        if ((0,_dateutil__WEBPACK_IMPORTED_MODULE_3__.isDate)(options[key]) && !(0,_dateutil__WEBPACK_IMPORTED_MODULE_3__.isValidDate)(options[key])) {
            invalid.push(key);
        }
    }
    if (invalid.length) {
        throw new Error('Invalid options: ' + invalid.join(', '));
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, options);
}
function parseOptions(options) {
    var opts = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, _rrule__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_OPTIONS), initializeOptions(options));
    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byeaster))
        opts.freq = _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.YEARLY;
    if (!((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.freq) && _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.FREQUENCIES[opts.freq])) {
        throw new Error("Invalid frequency: ".concat(opts.freq, " ").concat(options.freq));
    }
    if (!opts.dtstart)
        opts.dtstart = new Date(new Date().setMilliseconds(0));
    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.wkst)) {
        opts.wkst = _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.MO.weekday;
    }
    else if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.wkst)) {
        // cool, just keep it like that
    }
    else {
        opts.wkst = opts.wkst.weekday;
    }
    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.bysetpos)) {
        if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.bysetpos))
            opts.bysetpos = [opts.bysetpos];
        for (var i = 0; i < opts.bysetpos.length; i++) {
            var v = opts.bysetpos[i];
            if (v === 0 || !(v >= -366 && v <= 366)) {
                throw new Error('bysetpos must be between 1 and 366,' + ' or between -366 and -1');
            }
        }
    }
    if (!(Boolean(opts.byweekno) ||
        (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.notEmpty)(opts.byweekno) ||
        (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.notEmpty)(opts.byyearday) ||
        Boolean(opts.bymonthday) ||
        (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.notEmpty)(opts.bymonthday) ||
        (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byweekday) ||
        (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byeaster))) {
        switch (opts.freq) {
            case _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.YEARLY:
                if (!opts.bymonth)
                    opts.bymonth = opts.dtstart.getUTCMonth() + 1;
                opts.bymonthday = opts.dtstart.getUTCDate();
                break;
            case _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.MONTHLY:
                opts.bymonthday = opts.dtstart.getUTCDate();
                break;
            case _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.WEEKLY:
                opts.byweekday = [(0,_dateutil__WEBPACK_IMPORTED_MODULE_3__.getWeekday)(opts.dtstart)];
                break;
        }
    }
    // bymonth
    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.bymonth) && !(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(opts.bymonth)) {
        opts.bymonth = [opts.bymonth];
    }
    // byyearday
    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byyearday) &&
        !(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(opts.byyearday) &&
        (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.byyearday)) {
        opts.byyearday = [opts.byyearday];
    }
    // bymonthday
    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.bymonthday)) {
        opts.bymonthday = [];
        opts.bynmonthday = [];
    }
    else if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(opts.bymonthday)) {
        var bymonthday = [];
        var bynmonthday = [];
        for (var i = 0; i < opts.bymonthday.length; i++) {
            var v = opts.bymonthday[i];
            if (v > 0) {
                bymonthday.push(v);
            }
            else if (v < 0) {
                bynmonthday.push(v);
            }
        }
        opts.bymonthday = bymonthday;
        opts.bynmonthday = bynmonthday;
    }
    else if (opts.bymonthday < 0) {
        opts.bynmonthday = [opts.bymonthday];
        opts.bymonthday = [];
    }
    else {
        opts.bynmonthday = [];
        opts.bymonthday = [opts.bymonthday];
    }
    // byweekno
    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byweekno) && !(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(opts.byweekno)) {
        opts.byweekno = [opts.byweekno];
    }
    // byweekday / bynweekday
    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byweekday)) {
        opts.bynweekday = null;
    }
    else if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.byweekday)) {
        opts.byweekday = [opts.byweekday];
        opts.bynweekday = null;
    }
    else if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isWeekdayStr)(opts.byweekday)) {
        opts.byweekday = [_weekday__WEBPACK_IMPORTED_MODULE_4__.Weekday.fromStr(opts.byweekday).weekday];
        opts.bynweekday = null;
    }
    else if (opts.byweekday instanceof _weekday__WEBPACK_IMPORTED_MODULE_4__.Weekday) {
        if (!opts.byweekday.n || opts.freq > _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.MONTHLY) {
            opts.byweekday = [opts.byweekday.weekday];
            opts.bynweekday = null;
        }
        else {
            opts.bynweekday = [[opts.byweekday.weekday, opts.byweekday.n]];
            opts.byweekday = null;
        }
    }
    else {
        var byweekday = [];
        var bynweekday = [];
        for (var i = 0; i < opts.byweekday.length; i++) {
            var wday = opts.byweekday[i];
            if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(wday)) {
                byweekday.push(wday);
                continue;
            }
            else if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isWeekdayStr)(wday)) {
                byweekday.push(_weekday__WEBPACK_IMPORTED_MODULE_4__.Weekday.fromStr(wday).weekday);
                continue;
            }
            if (!wday.n || opts.freq > _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.MONTHLY) {
                byweekday.push(wday.weekday);
            }
            else {
                bynweekday.push([wday.weekday, wday.n]);
            }
        }
        opts.byweekday = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.notEmpty)(byweekday) ? byweekday : null;
        opts.bynweekday = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.notEmpty)(bynweekday) ? bynweekday : null;
    }
    // byhour
    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byhour)) {
        opts.byhour = opts.freq < _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.HOURLY ? [opts.dtstart.getUTCHours()] : null;
    }
    else if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.byhour)) {
        opts.byhour = [opts.byhour];
    }
    // byminute
    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byminute)) {
        opts.byminute =
            opts.freq < _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.MINUTELY ? [opts.dtstart.getUTCMinutes()] : null;
    }
    else if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.byminute)) {
        opts.byminute = [opts.byminute];
    }
    // bysecond
    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.bysecond)) {
        opts.bysecond =
            opts.freq < _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.SECONDLY ? [opts.dtstart.getUTCSeconds()] : null;
    }
    else if ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.bysecond)) {
        opts.bysecond = [opts.bysecond];
    }
    return { parsedOptions: opts };
}
function buildTimeset(opts) {
    var millisecondModulo = opts.dtstart.getTime() % 1000;
    if (!(0,_types__WEBPACK_IMPORTED_MODULE_0__.freqIsDailyOrGreater)(opts.freq)) {
        return [];
    }
    var timeset = [];
    opts.byhour.forEach(function (hour) {
        opts.byminute.forEach(function (minute) {
            opts.bysecond.forEach(function (second) {
                timeset.push(new _datetime__WEBPACK_IMPORTED_MODULE_5__.Time(hour, minute, second, millisecondModulo));
            });
        });
    });
    return timeset;
}


/***/ }),

/***/ 59643:
/*!****************************************************!*\
  !*** ./node_modules/rrule/dist/esm/parsestring.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseString": function() { return /* binding */ parseString; },
/* harmony export */   "parseDtstart": function() { return /* binding */ parseDtstart; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ 12905);
/* harmony import */ var _weekday__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./weekday */ 57845);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dateutil */ 98054);
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rrule */ 8932);





function parseString(rfcString) {
    var options = rfcString
        .split('\n')
        .map(parseLine)
        .filter(function (x) { return x !== null; });
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, options[0]), options[1]);
}
function parseDtstart(line) {
    var options = {};
    var dtstartWithZone = /DTSTART(?:;TZID=([^:=]+?))?(?::|=)([^;\s]+)/i.exec(line);
    if (!dtstartWithZone) {
        return options;
    }
    var tzid = dtstartWithZone[1], dtstart = dtstartWithZone[2];
    if (tzid) {
        options.tzid = tzid;
    }
    options.dtstart = (0,_dateutil__WEBPACK_IMPORTED_MODULE_2__.untilStringToDate)(dtstart);
    return options;
}
function parseLine(rfcString) {
    rfcString = rfcString.replace(/^\s+|\s+$/, '');
    if (!rfcString.length)
        return null;
    var header = /^([A-Z]+?)[:;]/.exec(rfcString.toUpperCase());
    if (!header) {
        return parseRrule(rfcString);
    }
    var key = header[1];
    switch (key.toUpperCase()) {
        case 'RRULE':
        case 'EXRULE':
            return parseRrule(rfcString);
        case 'DTSTART':
            return parseDtstart(rfcString);
        default:
            throw new Error("Unsupported RFC prop ".concat(key, " in ").concat(rfcString));
    }
}
function parseRrule(line) {
    var strippedLine = line.replace(/^RRULE:/i, '');
    var options = parseDtstart(strippedLine);
    var attrs = line.replace(/^(?:RRULE|EXRULE):/i, '').split(';');
    attrs.forEach(function (attr) {
        var _a = attr.split('='), key = _a[0], value = _a[1];
        switch (key.toUpperCase()) {
            case 'FREQ':
                options.freq = _types__WEBPACK_IMPORTED_MODULE_0__.Frequency[value.toUpperCase()];
                break;
            case 'WKST':
                options.wkst = _rrule__WEBPACK_IMPORTED_MODULE_3__.Days[value.toUpperCase()];
                break;
            case 'COUNT':
            case 'INTERVAL':
            case 'BYSETPOS':
            case 'BYMONTH':
            case 'BYMONTHDAY':
            case 'BYYEARDAY':
            case 'BYWEEKNO':
            case 'BYHOUR':
            case 'BYMINUTE':
            case 'BYSECOND':
                var num = parseNumber(value);
                var optionKey = key.toLowerCase();
                // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                // @ts-ignore
                options[optionKey] = num;
                break;
            case 'BYWEEKDAY':
            case 'BYDAY':
                options.byweekday = parseWeekday(value);
                break;
            case 'DTSTART':
            case 'TZID':
                // for backwards compatibility
                var dtstart = parseDtstart(line);
                options.tzid = dtstart.tzid;
                options.dtstart = dtstart.dtstart;
                break;
            case 'UNTIL':
                options.until = (0,_dateutil__WEBPACK_IMPORTED_MODULE_2__.untilStringToDate)(value);
                break;
            case 'BYEASTER':
                options.byeaster = Number(value);
                break;
            default:
                throw new Error("Unknown RRULE property '" + key + "'");
        }
    });
    return options;
}
function parseNumber(value) {
    if (value.indexOf(',') !== -1) {
        var values = value.split(',');
        return values.map(parseIndividualNumber);
    }
    return parseIndividualNumber(value);
}
function parseIndividualNumber(value) {
    if (/^[+-]?\d+$/.test(value)) {
        return Number(value);
    }
    return value;
}
function parseWeekday(value) {
    var days = value.split(',');
    return days.map(function (day) {
        if (day.length === 2) {
            // MO, TU, ...
            return _rrule__WEBPACK_IMPORTED_MODULE_3__.Days[day]; // wday instanceof Weekday
        }
        // -1MO, +3FR, 1SO, 13TU ...
        var parts = day.match(/^([+-]?\d{1,2})([A-Z]{2})$/);
        if (!parts || parts.length < 3) {
            throw new SyntaxError("Invalid weekday string: ".concat(day));
        }
        var n = Number(parts[1]);
        var wdaypart = parts[2];
        var wday = _rrule__WEBPACK_IMPORTED_MODULE_3__.Days[wdaypart].weekday;
        return new _weekday__WEBPACK_IMPORTED_MODULE_1__.Weekday(wday, n);
    });
}


/***/ }),

/***/ 8932:
/*!**********************************************!*\
  !*** ./node_modules/rrule/dist/esm/rrule.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Days": function() { return /* binding */ Days; },
/* harmony export */   "DEFAULT_OPTIONS": function() { return /* binding */ DEFAULT_OPTIONS; },
/* harmony export */   "defaultKeys": function() { return /* binding */ defaultKeys; },
/* harmony export */   "RRule": function() { return /* binding */ RRule; }
/* harmony export */ });
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dateutil */ 98054);
/* harmony import */ var _iterresult__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterresult */ 8210);
/* harmony import */ var _callbackiterresult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./callbackiterresult */ 72673);
/* harmony import */ var _nlp_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nlp/index */ 19512);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types */ 12905);
/* harmony import */ var _parseoptions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parseoptions */ 73181);
/* harmony import */ var _parsestring__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parsestring */ 59643);
/* harmony import */ var _optionstostring__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./optionstostring */ 13135);
/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./cache */ 82450);
/* harmony import */ var _weekday__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./weekday */ 57845);
/* harmony import */ var _iter_index__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./iter/index */ 60630);











// =============================================================================
// RRule
// =============================================================================
var Days = {
    MO: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(0),
    TU: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(1),
    WE: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(2),
    TH: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(3),
    FR: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(4),
    SA: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(5),
    SU: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(6),
};
var DEFAULT_OPTIONS = {
    freq: _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.YEARLY,
    dtstart: null,
    interval: 1,
    wkst: Days.MO,
    count: null,
    until: null,
    tzid: null,
    bysetpos: null,
    bymonth: null,
    bymonthday: null,
    bynmonthday: null,
    byyearday: null,
    byweekno: null,
    byweekday: null,
    bynweekday: null,
    byhour: null,
    byminute: null,
    bysecond: null,
    byeaster: null,
};
var defaultKeys = Object.keys(DEFAULT_OPTIONS);
/**
 *
 * @param {Options?} options - see <http://labix.org/python-dateutil/#head-cf004ee9a75592797e076752b2a889c10f445418>
 * - The only required option is `freq`, one of RRule.YEARLY, RRule.MONTHLY, ...
 * @constructor
 */
var RRule = /** @class */ (function () {
    function RRule(options, noCache) {
        if (options === void 0) { options = {}; }
        if (noCache === void 0) { noCache = false; }
        // RFC string
        this._cache = noCache ? null : new _cache__WEBPACK_IMPORTED_MODULE_8__.Cache();
        // used by toString()
        this.origOptions = (0,_parseoptions__WEBPACK_IMPORTED_MODULE_5__.initializeOptions)(options);
        var parsedOptions = (0,_parseoptions__WEBPACK_IMPORTED_MODULE_5__.parseOptions)(options).parsedOptions;
        this.options = parsedOptions;
    }
    RRule.parseText = function (text, language) {
        return (0,_nlp_index__WEBPACK_IMPORTED_MODULE_3__.parseText)(text, language);
    };
    RRule.fromText = function (text, language) {
        return (0,_nlp_index__WEBPACK_IMPORTED_MODULE_3__.fromText)(text, language);
    };
    RRule.fromString = function (str) {
        return new RRule(RRule.parseString(str) || undefined);
    };
    RRule.prototype._iter = function (iterResult) {
        return (0,_iter_index__WEBPACK_IMPORTED_MODULE_10__.iter)(iterResult, this.options);
    };
    RRule.prototype._cacheGet = function (what, args) {
        if (!this._cache)
            return false;
        return this._cache._cacheGet(what, args);
    };
    RRule.prototype._cacheAdd = function (what, value, args) {
        if (!this._cache)
            return;
        return this._cache._cacheAdd(what, value, args);
    };
    /**
     * @param {Function} iterator - optional function that will be called
     * on each date that is added. It can return false
     * to stop the iteration.
     * @return Array containing all recurrences.
     */
    RRule.prototype.all = function (iterator) {
        if (iterator) {
            return this._iter(new _callbackiterresult__WEBPACK_IMPORTED_MODULE_2__.default('all', {}, iterator));
        }
        var result = this._cacheGet('all');
        if (result === false) {
            result = this._iter(new _iterresult__WEBPACK_IMPORTED_MODULE_1__.default('all', {}));
            this._cacheAdd('all', result);
        }
        return result;
    };
    /**
     * Returns all the occurrences of the rrule between after and before.
     * The inc keyword defines what happens if after and/or before are
     * themselves occurrences. With inc == True, they will be included in the
     * list, if they are found in the recurrence set.
     *
     * @return Array
     */
    RRule.prototype.between = function (after, before, inc, iterator) {
        if (inc === void 0) { inc = false; }
        if (!(0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.isValidDate)(after) || !(0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.isValidDate)(before)) {
            throw new Error('Invalid date passed in to RRule.between');
        }
        var args = {
            before: before,
            after: after,
            inc: inc,
        };
        if (iterator) {
            return this._iter(new _callbackiterresult__WEBPACK_IMPORTED_MODULE_2__.default('between', args, iterator));
        }
        var result = this._cacheGet('between', args);
        if (result === false) {
            result = this._iter(new _iterresult__WEBPACK_IMPORTED_MODULE_1__.default('between', args));
            this._cacheAdd('between', result, args);
        }
        return result;
    };
    /**
     * Returns the last recurrence before the given datetime instance.
     * The inc keyword defines what happens if dt is an occurrence.
     * With inc == True, if dt itself is an occurrence, it will be returned.
     *
     * @return Date or null
     */
    RRule.prototype.before = function (dt, inc) {
        if (inc === void 0) { inc = false; }
        if (!(0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.isValidDate)(dt)) {
            throw new Error('Invalid date passed in to RRule.before');
        }
        var args = { dt: dt, inc: inc };
        var result = this._cacheGet('before', args);
        if (result === false) {
            result = this._iter(new _iterresult__WEBPACK_IMPORTED_MODULE_1__.default('before', args));
            this._cacheAdd('before', result, args);
        }
        return result;
    };
    /**
     * Returns the first recurrence after the given datetime instance.
     * The inc keyword defines what happens if dt is an occurrence.
     * With inc == True, if dt itself is an occurrence, it will be returned.
     *
     * @return Date or null
     */
    RRule.prototype.after = function (dt, inc) {
        if (inc === void 0) { inc = false; }
        if (!(0,_dateutil__WEBPACK_IMPORTED_MODULE_0__.isValidDate)(dt)) {
            throw new Error('Invalid date passed in to RRule.after');
        }
        var args = { dt: dt, inc: inc };
        var result = this._cacheGet('after', args);
        if (result === false) {
            result = this._iter(new _iterresult__WEBPACK_IMPORTED_MODULE_1__.default('after', args));
            this._cacheAdd('after', result, args);
        }
        return result;
    };
    /**
     * Returns the number of recurrences in this set. It will have go trough
     * the whole recurrence, if this hasn't been done before.
     */
    RRule.prototype.count = function () {
        return this.all().length;
    };
    /**
     * Converts the rrule into its string representation
     *
     * @see <http://www.ietf.org/rfc/rfc2445.txt>
     * @return String
     */
    RRule.prototype.toString = function () {
        return (0,_optionstostring__WEBPACK_IMPORTED_MODULE_7__.optionsToString)(this.origOptions);
    };
    /**
     * Will convert all rules described in nlp:ToText
     * to text.
     */
    RRule.prototype.toText = function (gettext, language, dateFormatter) {
        return (0,_nlp_index__WEBPACK_IMPORTED_MODULE_3__.toText)(this, gettext, language, dateFormatter);
    };
    RRule.prototype.isFullyConvertibleToText = function () {
        return (0,_nlp_index__WEBPACK_IMPORTED_MODULE_3__.isFullyConvertible)(this);
    };
    /**
     * @return a RRule instance with the same freq and options
     * as this one (cache is not cloned)
     */
    RRule.prototype.clone = function () {
        return new RRule(this.origOptions);
    };
    // RRule class 'constants'
    RRule.FREQUENCIES = [
        'YEARLY',
        'MONTHLY',
        'WEEKLY',
        'DAILY',
        'HOURLY',
        'MINUTELY',
        'SECONDLY',
    ];
    RRule.YEARLY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.YEARLY;
    RRule.MONTHLY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.MONTHLY;
    RRule.WEEKLY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.WEEKLY;
    RRule.DAILY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.DAILY;
    RRule.HOURLY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.HOURLY;
    RRule.MINUTELY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.MINUTELY;
    RRule.SECONDLY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.SECONDLY;
    RRule.MO = Days.MO;
    RRule.TU = Days.TU;
    RRule.WE = Days.WE;
    RRule.TH = Days.TH;
    RRule.FR = Days.FR;
    RRule.SA = Days.SA;
    RRule.SU = Days.SU;
    RRule.parseString = _parsestring__WEBPACK_IMPORTED_MODULE_6__.parseString;
    RRule.optionsToString = _optionstostring__WEBPACK_IMPORTED_MODULE_7__.optionsToString;
    return RRule;
}());



/***/ }),

/***/ 2476:
/*!*************************************************!*\
  !*** ./node_modules/rrule/dist/esm/rruleset.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RRuleSet": function() { return /* binding */ RRuleSet; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rrule */ 8932);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dateutil */ 98054);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers */ 36853);
/* harmony import */ var _iterset__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./iterset */ 25882);
/* harmony import */ var _rrulestr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rrulestr */ 4134);
/* harmony import */ var _optionstostring__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./optionstostring */ 13135);







function createGetterSetter(fieldName) {
    var _this = this;
    return function (field) {
        if (field !== undefined) {
            _this["_".concat(fieldName)] = field;
        }
        if (_this["_".concat(fieldName)] !== undefined) {
            return _this["_".concat(fieldName)];
        }
        for (var i = 0; i < _this._rrule.length; i++) {
            var field_1 = _this._rrule[i].origOptions[fieldName];
            if (field_1) {
                return field_1;
            }
        }
    };
}
var RRuleSet = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__extends)(RRuleSet, _super);
    /**
     *
     * @param {Boolean?} noCache
     * The same stratagy as RRule on cache, default to false
     * @constructor
     */
    function RRuleSet(noCache) {
        if (noCache === void 0) { noCache = false; }
        var _this = _super.call(this, {}, noCache) || this;
        _this.dtstart = createGetterSetter.apply(_this, ['dtstart']);
        _this.tzid = createGetterSetter.apply(_this, ['tzid']);
        _this._rrule = [];
        _this._rdate = [];
        _this._exrule = [];
        _this._exdate = [];
        return _this;
    }
    RRuleSet.prototype._iter = function (iterResult) {
        return (0,_iterset__WEBPACK_IMPORTED_MODULE_3__.iterSet)(iterResult, this._rrule, this._exrule, this._rdate, this._exdate, this.tzid());
    };
    /**
     * Adds an RRule to the set
     *
     * @param {RRule}
     */
    RRuleSet.prototype.rrule = function (rrule) {
        _addRule(rrule, this._rrule);
    };
    /**
     * Adds an EXRULE to the set
     *
     * @param {RRule}
     */
    RRuleSet.prototype.exrule = function (rrule) {
        _addRule(rrule, this._exrule);
    };
    /**
     * Adds an RDate to the set
     *
     * @param {Date}
     */
    RRuleSet.prototype.rdate = function (date) {
        _addDate(date, this._rdate);
    };
    /**
     * Adds an EXDATE to the set
     *
     * @param {Date}
     */
    RRuleSet.prototype.exdate = function (date) {
        _addDate(date, this._exdate);
    };
    /**
     * Get list of included rrules in this recurrence set.
     *
     * @return List of rrules
     */
    RRuleSet.prototype.rrules = function () {
        return this._rrule.map(function (e) { return (0,_rrulestr__WEBPACK_IMPORTED_MODULE_4__.rrulestr)(e.toString()); });
    };
    /**
     * Get list of excluded rrules in this recurrence set.
     *
     * @return List of exrules
     */
    RRuleSet.prototype.exrules = function () {
        return this._exrule.map(function (e) { return (0,_rrulestr__WEBPACK_IMPORTED_MODULE_4__.rrulestr)(e.toString()); });
    };
    /**
     * Get list of included datetimes in this recurrence set.
     *
     * @return List of rdates
     */
    RRuleSet.prototype.rdates = function () {
        return this._rdate.map(function (e) { return new Date(e.getTime()); });
    };
    /**
     * Get list of included datetimes in this recurrence set.
     *
     * @return List of exdates
     */
    RRuleSet.prototype.exdates = function () {
        return this._exdate.map(function (e) { return new Date(e.getTime()); });
    };
    RRuleSet.prototype.valueOf = function () {
        var result = [];
        if (!this._rrule.length && this._dtstart) {
            result = result.concat((0,_optionstostring__WEBPACK_IMPORTED_MODULE_5__.optionsToString)({ dtstart: this._dtstart }));
        }
        this._rrule.forEach(function (rrule) {
            result = result.concat(rrule.toString().split('\n'));
        });
        this._exrule.forEach(function (exrule) {
            result = result.concat(exrule
                .toString()
                .split('\n')
                .map(function (line) { return line.replace(/^RRULE:/, 'EXRULE:'); })
                .filter(function (line) { return !/^DTSTART/.test(line); }));
        });
        if (this._rdate.length) {
            result.push(rdatesToString('RDATE', this._rdate, this.tzid()));
        }
        if (this._exdate.length) {
            result.push(rdatesToString('EXDATE', this._exdate, this.tzid()));
        }
        return result;
    };
    /**
     * to generate recurrence field such as:
     * DTSTART:19970902T010000Z
     * RRULE:FREQ=YEARLY;COUNT=2;BYDAY=TU
     * RRULE:FREQ=YEARLY;COUNT=1;BYDAY=TH
     */
    RRuleSet.prototype.toString = function () {
        return this.valueOf().join('\n');
    };
    /**
     * Create a new RRuleSet Object completely base on current instance
     */
    RRuleSet.prototype.clone = function () {
        var rrs = new RRuleSet(!!this._cache);
        this._rrule.forEach(function (rule) { return rrs.rrule(rule.clone()); });
        this._exrule.forEach(function (rule) { return rrs.exrule(rule.clone()); });
        this._rdate.forEach(function (date) { return rrs.rdate(new Date(date.getTime())); });
        this._exdate.forEach(function (date) { return rrs.exdate(new Date(date.getTime())); });
        return rrs;
    };
    return RRuleSet;
}(_rrule__WEBPACK_IMPORTED_MODULE_0__.RRule));

function _addRule(rrule, collection) {
    if (!(rrule instanceof _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule)) {
        throw new TypeError(String(rrule) + ' is not RRule instance');
    }
    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_2__.includes)(collection.map(String), String(rrule))) {
        collection.push(rrule);
    }
}
function _addDate(date, collection) {
    if (!(date instanceof Date)) {
        throw new TypeError(String(date) + ' is not Date instance');
    }
    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_2__.includes)(collection.map(Number), Number(date))) {
        collection.push(date);
        (0,_dateutil__WEBPACK_IMPORTED_MODULE_1__.sort)(collection);
    }
}
function rdatesToString(param, rdates, tzid) {
    var isUTC = !tzid || tzid.toUpperCase() === 'UTC';
    var header = isUTC ? "".concat(param, ":") : "".concat(param, ";TZID=").concat(tzid, ":");
    var dateString = rdates
        .map(function (rdate) { return (0,_dateutil__WEBPACK_IMPORTED_MODULE_1__.timeToUntilString)(rdate.valueOf(), isUTC); })
        .join(',');
    return "".concat(header).concat(dateString);
}


/***/ }),

/***/ 4134:
/*!*************************************************!*\
  !*** ./node_modules/rrule/dist/esm/rrulestr.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseInput": function() { return /* binding */ parseInput; },
/* harmony export */   "rrulestr": function() { return /* binding */ rrulestr; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _rrule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rrule */ 8932);
/* harmony import */ var _rruleset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rruleset */ 2476);
/* harmony import */ var _dateutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dateutil */ 98054);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers */ 36853);
/* harmony import */ var _parsestring__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parsestring */ 59643);






/**
 * RRuleStr
 * To parse a set of rrule strings
 */
var DEFAULT_OPTIONS = {
    dtstart: null,
    cache: false,
    unfold: false,
    forceset: false,
    compatible: false,
    tzid: null,
};
function parseInput(s, options) {
    var rrulevals = [];
    var rdatevals = [];
    var exrulevals = [];
    var exdatevals = [];
    var parsedDtstart = (0,_parsestring__WEBPACK_IMPORTED_MODULE_4__.parseDtstart)(s);
    var dtstart = parsedDtstart.dtstart;
    var tzid = parsedDtstart.tzid;
    var lines = splitIntoLines(s, options.unfold);
    lines.forEach(function (line) {
        var _a;
        if (!line)
            return;
        var _b = breakDownLine(line), name = _b.name, parms = _b.parms, value = _b.value;
        switch (name.toUpperCase()) {
            case 'RRULE':
                if (parms.length) {
                    throw new Error("unsupported RRULE parm: ".concat(parms.join(',')));
                }
                rrulevals.push((0,_parsestring__WEBPACK_IMPORTED_MODULE_4__.parseString)(line));
                break;
            case 'RDATE':
                var _c = (_a = /RDATE(?:;TZID=([^:=]+))?/i.exec(line)) !== null && _a !== void 0 ? _a : [], rdateTzid = _c[1];
                if (rdateTzid && !tzid) {
                    tzid = rdateTzid;
                }
                rdatevals = rdatevals.concat(parseRDate(value, parms));
                break;
            case 'EXRULE':
                if (parms.length) {
                    throw new Error("unsupported EXRULE parm: ".concat(parms.join(',')));
                }
                exrulevals.push((0,_parsestring__WEBPACK_IMPORTED_MODULE_4__.parseString)(value));
                break;
            case 'EXDATE':
                exdatevals = exdatevals.concat(parseRDate(value, parms));
                break;
            case 'DTSTART':
                break;
            default:
                throw new Error('unsupported property: ' + name);
        }
    });
    return {
        dtstart: dtstart,
        tzid: tzid,
        rrulevals: rrulevals,
        rdatevals: rdatevals,
        exrulevals: exrulevals,
        exdatevals: exdatevals,
    };
}
function buildRule(s, options) {
    var _a = parseInput(s, options), rrulevals = _a.rrulevals, rdatevals = _a.rdatevals, exrulevals = _a.exrulevals, exdatevals = _a.exdatevals, dtstart = _a.dtstart, tzid = _a.tzid;
    var noCache = options.cache === false;
    if (options.compatible) {
        options.forceset = true;
        options.unfold = true;
    }
    if (options.forceset ||
        rrulevals.length > 1 ||
        rdatevals.length ||
        exrulevals.length ||
        exdatevals.length) {
        var rset_1 = new _rruleset__WEBPACK_IMPORTED_MODULE_1__.RRuleSet(noCache);
        rset_1.dtstart(dtstart);
        rset_1.tzid(tzid || undefined);
        rrulevals.forEach(function (val) {
            rset_1.rrule(new _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule(groomRruleOptions(val, dtstart, tzid), noCache));
        });
        rdatevals.forEach(function (date) {
            rset_1.rdate(date);
        });
        exrulevals.forEach(function (val) {
            rset_1.exrule(new _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule(groomRruleOptions(val, dtstart, tzid), noCache));
        });
        exdatevals.forEach(function (date) {
            rset_1.exdate(date);
        });
        if (options.compatible && options.dtstart)
            rset_1.rdate(dtstart);
        return rset_1;
    }
    var val = rrulevals[0] || {};
    return new _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule(groomRruleOptions(val, val.dtstart || options.dtstart || dtstart, val.tzid || options.tzid || tzid), noCache);
}
function rrulestr(s, options) {
    if (options === void 0) { options = {}; }
    return buildRule(s, initializeOptions(options));
}
function groomRruleOptions(val, dtstart, tzid) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, val), { dtstart: dtstart, tzid: tzid });
}
function initializeOptions(options) {
    var invalid = [];
    var keys = Object.keys(options);
    var defaultKeys = Object.keys(DEFAULT_OPTIONS);
    keys.forEach(function (key) {
        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_3__.includes)(defaultKeys, key))
            invalid.push(key);
    });
    if (invalid.length) {
        throw new Error('Invalid options: ' + invalid.join(', '));
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, DEFAULT_OPTIONS), options);
}
function extractName(line) {
    if (line.indexOf(':') === -1) {
        return {
            name: 'RRULE',
            value: line,
        };
    }
    var _a = (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.split)(line, ':', 1), name = _a[0], value = _a[1];
    return {
        name: name,
        value: value,
    };
}
function breakDownLine(line) {
    var _a = extractName(line), name = _a.name, value = _a.value;
    var parms = name.split(';');
    if (!parms)
        throw new Error('empty property name');
    return {
        name: parms[0].toUpperCase(),
        parms: parms.slice(1),
        value: value,
    };
}
function splitIntoLines(s, unfold) {
    if (unfold === void 0) { unfold = false; }
    s = s && s.trim();
    if (!s)
        throw new Error('Invalid empty string');
    // More info about 'unfold' option
    // Go head to http://www.ietf.org/rfc/rfc2445.txt
    if (!unfold) {
        return s.split(/\s/);
    }
    var lines = s.split('\n');
    var i = 0;
    while (i < lines.length) {
        // TODO
        var line = (lines[i] = lines[i].replace(/\s+$/g, ''));
        if (!line) {
            lines.splice(i, 1);
        }
        else if (i > 0 && line[0] === ' ') {
            lines[i - 1] += line.slice(1);
            lines.splice(i, 1);
        }
        else {
            i += 1;
        }
    }
    return lines;
}
function validateDateParm(parms) {
    parms.forEach(function (parm) {
        if (!/(VALUE=DATE(-TIME)?)|(TZID=)/.test(parm)) {
            throw new Error('unsupported RDATE/EXDATE parm: ' + parm);
        }
    });
}
function parseRDate(rdateval, parms) {
    validateDateParm(parms);
    return rdateval.split(',').map(function (datestr) { return (0,_dateutil__WEBPACK_IMPORTED_MODULE_2__.untilStringToDate)(datestr); });
}


/***/ }),

/***/ 12905:
/*!**********************************************!*\
  !*** ./node_modules/rrule/dist/esm/types.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Frequency": function() { return /* binding */ Frequency; },
/* harmony export */   "freqIsDailyOrGreater": function() { return /* binding */ freqIsDailyOrGreater; }
/* harmony export */ });
var Frequency;
(function (Frequency) {
    Frequency[Frequency["YEARLY"] = 0] = "YEARLY";
    Frequency[Frequency["MONTHLY"] = 1] = "MONTHLY";
    Frequency[Frequency["WEEKLY"] = 2] = "WEEKLY";
    Frequency[Frequency["DAILY"] = 3] = "DAILY";
    Frequency[Frequency["HOURLY"] = 4] = "HOURLY";
    Frequency[Frequency["MINUTELY"] = 5] = "MINUTELY";
    Frequency[Frequency["SECONDLY"] = 6] = "SECONDLY";
})(Frequency || (Frequency = {}));
function freqIsDailyOrGreater(freq) {
    return freq < Frequency.HOURLY;
}


/***/ }),

/***/ 57845:
/*!************************************************!*\
  !*** ./node_modules/rrule/dist/esm/weekday.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ALL_WEEKDAYS": function() { return /* binding */ ALL_WEEKDAYS; },
/* harmony export */   "Weekday": function() { return /* binding */ Weekday; }
/* harmony export */ });
// =============================================================================
// Weekday
// =============================================================================
var ALL_WEEKDAYS = [
    'MO',
    'TU',
    'WE',
    'TH',
    'FR',
    'SA',
    'SU',
];
var Weekday = /** @class */ (function () {
    function Weekday(weekday, n) {
        if (n === 0)
            throw new Error("Can't create weekday with n == 0");
        this.weekday = weekday;
        this.n = n;
    }
    Weekday.fromStr = function (str) {
        return new Weekday(ALL_WEEKDAYS.indexOf(str));
    };
    // __call__ - Cannot call the object directly, do it through
    // e.g. RRule.TH.nth(-1) instead,
    Weekday.prototype.nth = function (n) {
        return this.n === n ? this : new Weekday(this.weekday, n);
    };
    // __eq__
    Weekday.prototype.equals = function (other) {
        return this.weekday === other.weekday && this.n === other.n;
    };
    // __repr__
    Weekday.prototype.toString = function () {
        var s = ALL_WEEKDAYS[this.weekday];
        if (this.n)
            s = (this.n > 0 ? '+' : '') + String(this.n) + s;
        return s;
    };
    Weekday.prototype.getJsWeekday = function () {
        return this.weekday === 6 ? 0 : this.weekday + 1;
    };
    return Weekday;
}());



/***/ }),

/***/ 20823:
/*!*****************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _objectDestructuringEmpty; }
/* harmony export */ });
function _objectDestructuringEmpty(obj) {
  if (obj == null) throw new TypeError("Cannot destructure undefined");
}

/***/ })

}]);
//# sourceMappingURL=default-node_modules_devextreme-angular_fesm2015_devextreme-angular-ui-scheduler_js-es2015.js.map