{"version":3,"file":"src_app_modules_settings_settings_module_ts-es2015.js","mappings":";;;;;;;;;;;;;;;;;;AAE+D;;;;;AAQxD,MAAM,yBAAyB;IAGpC;;;OAGG;IACH,YACU,MAAc,EACd,eAAgC;QADhC,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAP1C,cAAS,GAAG,+DAAe,CAAC;IAQxB,CAAC;IAEL;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,QAAiB,EAAE,EAAE;YAClE,IAAI,CAAC,SAAS;gBACZ,mEAAmB,CAAC,CAAC,GAAG,EAAE,EAAE;oBAC1B,IAAI,GAAG,CAAC,GAAG,KAAK,uBAAuB;wBAAE,GAAG,CAAC,QAAQ,GAAG,CAAC,QAAQ,CAAC;oBAClE,OAAO,GAAG;gBACZ,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAkB,EAAE,EAAE;YACtE,IAAI,CAAC,SAAS;gBACZ,mEAAmB,CAAC,CAAC,GAAG,EAAE,EAAE;oBAC1B,IAAI,GAAG,CAAC,GAAG,KAAK,sBAAsB;wBAAE,GAAG,CAAC,QAAQ,GAAG,CAAC,SAAS,CAAC;oBAClE,OAAO,GAAG;gBACZ,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IAEL,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,IAAc;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrB;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAE,GAAG,CAAE,CAAC,CAAC;SAC/B;IACH,CAAC;;kGA1CU,yBAAyB;uHAAzB,yBAAyB;QCVtC,yEAA8B;QAC1B,yEAA6B;QACzB,8EAAmF;QAAjD,yKAAiB,oBAAgB,IAAE;QAAc,4DAAW;QAClG,4DAAM;QACN,yEAAmC;QAC/B,2EAA+B;QACnC,4DAAM;QACV,4DAAM;;QALY,0DAAuB;QAAvB,oFAAuB;;;;;;;;;;;;;;;;;;;;;;;ACDM;AACO;AACiD;AAC3C;AACuB;AAC7B;;;AAEtD,MAAM,cAAc,GAAY;IAC9B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gHAAyB;QACpC,YAAY,EAAE,GAAG,EAAE,CACjB,2PAAkD,CAAC,IAAI,CACrD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CACxB;KACJ;IACD;QACE,IAAI,EAAE,WAAW;QACjB,OAAO,EAAE,EAAE,OAAO,EAAE,6FAAsB,EAAE;QAC5C,YAAY,EAAE,GAAG,EAAE,CACjB,8bAA8C,CAAC,IAAI,CACjD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CACtB;KACJ;CACF;AAWM,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;+GAPhB;YACP,yDAAY;YACZ,sEAAY;YACZ,kEAAqB,CAAC,cAAc,CAAC;YACrC,gEAAe;SAChB;mIAEU,cAAc,cANvB,yDAAY;QACZ,sEAAY,6DAEZ,gEAAe;;;;;;;;;;;;;;;;;;;;AC9BoC;;;AAMhD,MAAM,sBAAsB;IACjC;;;OAGG;IACH,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IACrD;;;OAGG;IACH,OAAO;QACL,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,IAAI,CAC3C,yCAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YACjC,MAAM,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACxD,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC;YACrC,IAAI,YAAY,IAAI,YAAY,IAAI,UAAU,EAAE;gBAC9C,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAC/C,UAAU,CAAC,GAAG,EAAE;oBACd,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACpB,CAAC,EAAE,EAAE,CAAC,CAAC;gBACP,OAAO,wCAAE,CAAC,uBAAuB,CAAC,CAAC;aACpC;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAC/C,OAAO,wCAAE,CAAC,8BAA8B,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC,EACF,gDAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YACjC,OAAO,wCAAE,CAAC,iCAAiC,CAAC,CAAC;QAC/C,CAAC,CAAC,CACH;IACH,CAAC;;4FAjCU,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM","sources":["./src/app/modules/settings/operations/operations-layout/operations-layout.component.ts","./src/app/modules/settings/operations/operations-layout/operations-layout.component.html","./src/app/modules/settings/settings.module.ts","./src/app/resolvers/versionControl.resolver.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { menuItem, operationsMenus } from 'src/app/model/menu';\nimport { SettingsService } from 'src/app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-operations-layout',\n  templateUrl: './operations-layout.component.html',\n  styleUrls: [ './operations-layout.component.scss' ]\n})\nexport class OperationsLayoutComponent implements OnInit {\n\n  menuItems = operationsMenus;\n  /**\n   * constructor\n   * @param router \n   */\n  constructor(\n    private router: Router,\n    private settingsService: SettingsService,\n  ) { }\n\n  /**\n   * on init \n   */\n  ngOnInit(): void {\n    this.settingsService.isRepairChange.subscribe((isRepair: boolean) => {\n      this.menuItems =\n        operationsMenus.map((ele) => {\n          if (ele.url === '/settings/repair-type') ele.disabled = !isRepair;\n          return ele\n        })\n    });\n    this.settingsService.isJobTasksEnabled.subscribe((isEnabled: boolean) => {\n      this.menuItems =\n        operationsMenus.map((ele) => {\n          if (ele.url === '/settings/jobs-tasks') ele.disabled = !isEnabled;\n          return ele\n        })\n    });\n\n  }\n\n  /**\n   * navigate to selected route\n   * @param item \n   */\n  navigate(item: menuItem): void {\n    const url = item.url;\n    {\n      this.router.navigate([ url ]);\n    }\n  }\n}\n","<div class=\"layout-container\">\n    <div class=\"tab-header fx-0\">\n        <chq-tabs [menuItems]=\"menuItems\" (menuItemClick)=\"navigate($event);\" class=\"tabs\"></chq-tabs>\n    </div>\n    <div class=\"tab-content mh-0 fx-1\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { OperationsLayoutComponent } from './operations/operations-layout/operations-layout.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { VersionControlResolver } from 'src/app/resolvers/versionControl.resolver';\nimport { TranslateModule } from '@ngx-translate/core';\n\nconst settingsRoutes: Route[] = [\n  {\n    path: '',\n    component: OperationsLayoutComponent,\n    loadChildren: () =>\n      import('../settings/operations/operations.module').then(\n        m => m.OperationsModule\n      )\n  },\n  {\n    path: 'employees',\n    resolve: { version: VersionControlResolver },\n    loadChildren: () =>\n      import('../settings/employee/employee.module').then(\n        m => m.EmployeeModule\n      )\n  },\n]\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(settingsRoutes),\n    TranslateModule\n  ]\n})\nexport class SettingsModule { }\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { catchError, map, Observable, of } from 'rxjs';\nimport { CommonService } from '../services/common/common.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VersionControlResolver implements Resolve<Observable<any>> {\n  /**\n   * contructor\n   * @param commonService \n   */\n  constructor(private commonService: CommonService) { }\n  /**\n   * resolve the \n   * @returns \n   */\n  resolve(): Observable<any> {\n    this.commonService.showLoading();\n    return this.commonService.checkVersion().pipe(\n      map((res) => {\n        this.commonService.hideLoading();\n        const localVersion = localStorage.getItem('appVersion');\n        const appVersion = res.buildRevision;\n        if (localVersion && localVersion != appVersion) {\n          localStorage.setItem('appVersion', appVersion);\n          setTimeout(() => {\n            location.reload();\n          }, 10);\n          return of('new version available');\n        } else {\n          localStorage.setItem('appVersion', appVersion);\n          return of('new version is not available');\n        }\n      }),\n      catchError(() => {\n        this.commonService.hideLoading();\n        return of('data not available at this time');\n      })\n    )\n  }\n}"],"names":[],"sourceRoot":"webpack:///"}