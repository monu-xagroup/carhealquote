{"version":3,"file":"src_app_modules_settings_operations_operations_module_ts-es2015.js","mappings":"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","sources":["./src/app/model/chq-settings-model.ts","./src/app/modules/settings/operations/booking-type/booking-type.component.ts","./src/app/modules/settings/operations/booking-type/booking-type.component.html","./src/app/modules/settings/operations/jobs-tasks/jobs-tasks.component.ts","./src/app/modules/settings/operations/jobs-tasks/jobs-tasks.component.html","./src/app/modules/settings/operations/operations.module.ts","./src/app/modules/settings/operations/repair-type/repair-type.component.ts","./src/app/modules/settings/operations/repair-type/repair-type.component.html","./src/app/modules/settings/operations/scheduling/scheduling.component.ts","./src/app/modules/settings/operations/scheduling/scheduling.component.html"],"sourcesContent":["import { ChqWidgetsDropdownModel } from './chq-widgets-dropdown-model';\nimport { ChqWidgetsInputModel } from './chq-widgets-input-model';\n\nexport interface AddNewBookingTypeForm {\n    assessment: ChqWidgetsInputModel,\n    assessmentDuration: ChqWidgetsInputModel,\n    assessmentColor: ChqWidgetsDropdownModel,\n    repair: ChqWidgetsInputModel,\n    repairColor: ChqWidgetsDropdownModel,\n    other: ChqWidgetsInputModel,\n    otherInput: ChqWidgetsInputModel,\n    otherDuration: ChqWidgetsInputModel,\n    otherColor: ChqWidgetsDropdownModel,\n    other1: ChqWidgetsInputModel,\n    other1Input: ChqWidgetsInputModel,\n    other1Duration: ChqWidgetsInputModel,\n    other1Color: ChqWidgetsDropdownModel,\n    other2: ChqWidgetsInputModel,\n    other2Input: ChqWidgetsInputModel,\n    other2Duration: ChqWidgetsInputModel,\n    other2Color: ChqWidgetsDropdownModel,\n    other3: ChqWidgetsInputModel,\n    other3Input: ChqWidgetsInputModel,\n    other3Duration: ChqWidgetsInputModel,\n    other3Color: ChqWidgetsDropdownModel,\n    other4: ChqWidgetsInputModel,\n    other4Input: ChqWidgetsInputModel,\n    other4Duration: ChqWidgetsInputModel,\n    other4Color: ChqWidgetsDropdownModel\n}\n\nexport interface BookingTypeFormModel {\n    assessment: boolean;\n    assessmentDuration: number;\n    assessmentId: number;\n    assessmentColor: string;\n    isRepair: boolean;\n    repairId: number;\n    repairColor: string;\n    other: string;\n    otherDuration: number;\n    otherId: number;\n    otherColor: string;\n    other1: string;\n    other1Duration: number;\n    other1Id: number;\n    other1Color: string;\n    other2: string;\n    other2Duration: number;\n    other2Id: number;\n    other2Color: string;\n    other3: string;\n    other3Duration: number;\n    other3Id: number;\n    other3Color: string;\n    other4: string;\n    other4Duration: number;\n    other4Id: number;\n    other4Color: string;\n}\nexport interface RepairTypeFormModel {\n    bookingRepairId: number,\n    repairtypes: number[]\n}\n\nexport const BookingTypeCategories = {\n  'Assessment': 'Assessment',\n  'Repair': 'Repair',\n  'Other': 'Other'\n}\n\nexport const BookingTypeColors = [\n  { value: 'Green', key: '#03A31B' },\n  { value: 'Blue', key: '#3B82F6' },\n  { value: 'Red', key: '#B53E3E' },\n  { value: 'Orange', key: '#F88318' },\n  { value: 'Yellow', key: '#FEF301' },\n  { value: 'Violet', key: '#4b0082' },\n  { value: 'Indigo', key: '#e5d0ff' },\n\n]","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { AddNewBookingTypeForm, BookingTypeCategories, BookingTypeFormModel } from 'src/app/model/chq-settings-model';\nimport { ChqWidgetsButtonModel } from 'src/app/model/chq-widgets-button-model';\nimport { IControlValue } from 'src/app/model/chq-widgets-input-model';\nimport { CommonService } from 'src/app/services/common/common.service';\nimport { MonitorService } from 'src/app/services/monitor-service/monitor.service';\nimport { SettingsService } from 'src/app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-booking-type',\n  templateUrl: './booking-type.component.html',\n  styleUrls: [ './booking-type.component.scss' ]\n})\n\nexport class BookingTypeComponent implements OnInit {\n  bookingTypeColorsLookup: any[] = [];\n  showToast: boolean = true;\n\n  /**\n     * constructor\n     * @param router \n     */\n  constructor(\n    private settingsService: SettingsService,\n    private commonService: CommonService,\n    public monitorService: MonitorService,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.formModel = this.newBookingTypeForm();\n    this.formData = this.newBookingTypeFormModel();\n  }\n\n  public saveButtonModel: ChqWidgetsButtonModel = {\n    label: 'save',\n    type: 'disabled',\n    onclick: this.submitForm.bind(this)\n  }\n\n  newBookingTypeForm = (bookingTypeData?): AddNewBookingTypeForm => {\n    return {\n      assessment: {\n        placeHolder: '',\n        label: '',\n        name: 'assessment',\n        idField: 'assessment',\n        value: '',\n        type: 'checkbox',\n        options: [ { label: '', id: 1, checked: bookingTypeData ? bookingTypeData.assessment : false } ],\n      },\n      assessmentDuration: {\n        placeHolder: 'time',\n        name: 'assessmentDuration',\n        label: 'time_min',\n        value: bookingTypeData ? bookingTypeData.assessmentDuration : null,\n        type: 'number',\n        maxLength: 3,\n        validation: {\n          name: 'assessmentDuration',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[0-9]+$'), Validators.min(1) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'Time should have min 1 characters'\n            }\n            if (error['maxlength']) {\n              return 'Time should have max 3 characters'\n            }\n            if (error['pattern']) {\n              return 'Only numeric characters are allowed'\n            }\n            if (error['min']) {\n              return 'Time should be greater than or equal to 1.'\n            }\n            return '';\n          }\n        },\n        disabled: bookingTypeData && bookingTypeData.assessment ? false : true\n      },\n      assessmentColor: {\n        options: bookingTypeData ? this.getColorOptions('assessmentColor', bookingTypeData) : [],\n        placeHolder: 'color_selection',\n        label: '',\n        name: 'assessmentColor',\n        displayValue: 'description',\n        selectedOption: bookingTypeData ? this.getSelectedValue('assessmentColor', bookingTypeData) : {},\n        isMultiSelect: false,\n        showSelectOption: true,\n        disabled: bookingTypeData && bookingTypeData.assessment ? false : true\n      },\n      repair: {\n        placeHolder: '',\n        label: '',\n        name: 'repair',\n        idField: 'repairId',\n        value: '',\n        type: 'checkbox',\n        options: [ { label: '', id: 1, checked: bookingTypeData ? bookingTypeData.isRepair : false } ],\n      },\n      repairColor: {\n        options: bookingTypeData ? this.getColorOptions('repairColor', bookingTypeData) : [],\n        placeHolder: 'color_selection',\n        label: '',\n        name: 'repairColor',\n        displayValue: 'description',\n        selectedOption: bookingTypeData ? this.getSelectedValue('repairColor', bookingTypeData) : {},\n        isMultiSelect: false,\n        showSelectOption: true,\n        disabled: bookingTypeData && bookingTypeData.isRepair ? false : true\n      },\n      other: {\n        placeHolder: '',\n        label: '',\n        name: 'other',\n        idField: 'other',\n        value: '',\n        type: 'checkbox',\n        options: [ { label: '', id: 1, checked: bookingTypeData ? bookingTypeData.other : false } ],\n        disabled: bookingTypeData && bookingTypeData.other ? false : true\n      },\n      otherInput: {\n        placeHolder: 'enter_booking_type',\n        label: '',\n        name: 'otherInput',\n        idField: 'otherInput',\n        value: bookingTypeData ? bookingTypeData.other : '',\n        type: 'text',\n        maxLength: 50,\n        disabled: bookingTypeData && bookingTypeData.other ? false : true,\n        validation: {\n          name: 'otherInput',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(4), Validators.maxLength(50), Validators.pattern(/^[a-z\\d\\s]+$/i) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'This field should have min 4 characters'\n            }\n            if (error['maxlength']) {\n              return 'This field should have max 50 characters'\n            }\n            if (error['pattern']) {\n              return 'Only alphanumberic characters are allowed'\n            }\n            return '';\n          }\n        }\n      },\n      otherDuration: {\n        placeHolder: 'time',\n        name: 'otherDuration',\n        label: 'time_min',\n        value: bookingTypeData ? bookingTypeData.otherDuration : 0,\n        type: 'number',\n        maxLength: 3,\n        disabled: bookingTypeData && bookingTypeData.other ? false : true,\n        validation: {\n          name: 'otherDuration',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[0-9]+$'), Validators.min(1) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'Time should have min 1 characters'\n            }\n            if (error['maxlength']) {\n              return 'Time should have max 3 characters'\n            }\n            if (error['pattern']) {\n              return 'Only numeric characters are allowed'\n            }\n            if (error['min']) {\n              return 'Time should be greater than or equal to 1.'\n            }\n            return '';\n          }\n        }\n      },\n      otherColor: {\n        options: bookingTypeData ? this.getColorOptions('otherColor', bookingTypeData) : [],\n        placeHolder: 'color_selection',\n        label: '',\n        name: 'otherColor',\n        displayValue: 'description',\n        selectedOption: bookingTypeData ? this.getSelectedValue('otherColor', bookingTypeData) : {},\n        isMultiSelect: false,\n        showSelectOption: true,\n        disabled: bookingTypeData && bookingTypeData.other ? false : true\n      },\n      other1: {\n        placeHolder: '',\n        label: '',\n        name: 'other1',\n        idField: 'other1',\n        value: '',\n        type: 'checkbox',\n        options: [ { label: '', id: 1, checked: bookingTypeData ? bookingTypeData.other1 : false } ],\n        disabled: bookingTypeData && bookingTypeData.other1 ? false : true\n      },\n      other1Input: {\n        placeHolder: 'enter_booking_type',\n        label: '',\n        name: 'other1Input',\n        idField: 'other1Input',\n        value: bookingTypeData ? bookingTypeData.other1 : '',\n        type: 'text',\n        maxLength: 50,\n        disabled: bookingTypeData && bookingTypeData.other1 ? false : true,\n        validation: {\n          name: 'other1Input',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(4), Validators.maxLength(50), Validators.pattern(/^[a-z\\d\\s]+$/i) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'This field should have min 4 characters'\n            }\n            if (error['maxlength']) {\n              return 'This field should have max 50 characters'\n            }\n            if (error['pattern']) {\n              return 'Only alphanumberic characters are allowed'\n            }\n            return '';\n          }\n        }\n      },\n      other1Duration: {\n        placeHolder: 'time',\n        name: 'other1Duration',\n        label: 'time_min',\n        value: bookingTypeData ? bookingTypeData.other1Duration : 0,\n        type: 'number',\n        maxLength: 3,\n        disabled: bookingTypeData && bookingTypeData.other1 ? false : true,\n        validation: {\n          name: 'other1Duration',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[0-9]+$'), Validators.min(1) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'Time should have min 1 characters'\n            }\n            if (error['maxlength']) {\n              return 'Time should have max 3 characters'\n            }\n            if (error['pattern']) {\n              return 'Only numeric characters are allowed'\n            }\n            if (error['min']) {\n              return 'Time should be greater than or equal to 1.'\n            }\n            return '';\n          }\n        }\n      },\n      other1Color: {\n        options: bookingTypeData ? this.getColorOptions('other1Color', bookingTypeData) : [],\n        placeHolder: 'color_selection',\n        label: '',\n        name: 'other1Color',\n        displayValue: 'description',\n        selectedOption: bookingTypeData ? this.getSelectedValue('other1Color', bookingTypeData) : {},\n        isMultiSelect: false,\n        showSelectOption: true,\n        disabled: bookingTypeData && bookingTypeData.other1 ? false : true,\n      },\n      other2: {\n        placeHolder: '',\n        label: '',\n        name: 'other2',\n        idField: 'other2',\n        value: '',\n        type: 'checkbox',\n        options: [ { label: '', id: 1, checked: bookingTypeData ? bookingTypeData.other2 : false } ],\n        disabled: bookingTypeData && bookingTypeData.other2 ? false : true\n      },\n      other2Input: {\n        placeHolder: 'enter_booking_type',\n        label: '',\n        name: 'other2Input',\n        idField: 'other2Input',\n        value: bookingTypeData ? bookingTypeData.other2 : '',\n        type: 'text',\n        maxLength: 50,\n        disabled: bookingTypeData && bookingTypeData.other2 ? false : true,\n        validation: {\n          name: 'other2Input',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(4), Validators.maxLength(50), Validators.pattern(/^[a-z\\d\\s]+$/i) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'This field should have min 4 characters'\n            }\n            if (error['maxlength']) {\n              return 'This field should have max 50 characters'\n            }\n            if (error['pattern']) {\n              return 'Only alphanumberic characters are allowed'\n            }\n            return '';\n          }\n        }\n      },\n      other2Duration: {\n        placeHolder: 'time',\n        name: 'other2Duration',\n        label: 'time_min',\n        value: bookingTypeData ? bookingTypeData.other2Duration : 0,\n        type: 'number',\n        maxLength: 3,\n        disabled: bookingTypeData && bookingTypeData.other2 ? false : true,\n        validation: {\n          name: 'other2Duration',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[0-9]+$'), Validators.min(1) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'Time should have min 1 characters'\n            }\n            if (error['maxlength']) {\n              return 'Time should have max 3 characters'\n            }\n            if (error['pattern']) {\n              return 'Only numeric characters are allowed'\n            }\n            if (error['min']) {\n              return 'Time should be greater than or equal to 1.'\n            }\n            return '';\n          }\n        }\n      },\n      other2Color: {\n        options: bookingTypeData ? this.getColorOptions('other2Color', bookingTypeData) : [],\n        placeHolder: 'color_selection',\n        label: '',\n        name: 'other2Color',\n        displayValue: 'description',\n        selectedOption: bookingTypeData ? this.getSelectedValue('other2Color', bookingTypeData) : {},\n        isMultiSelect: false,\n        showSelectOption: true,\n        disabled: bookingTypeData && bookingTypeData.other2 ? false : true\n      },\n      other3: {\n        placeHolder: '',\n        label: '',\n        name: 'other3',\n        idField: 'other3',\n        value: '',\n        type: 'checkbox',\n        options: [ { label: '', id: 1, checked: bookingTypeData ? bookingTypeData.other3 : false } ],\n      },\n      other3Input: {\n        placeHolder: 'enter_booking_type',\n        label: '',\n        name: 'other3Input',\n        idField: 'other3Input',\n        value: bookingTypeData ? bookingTypeData.other3 : '',\n        type: 'text',\n        maxLength: 50,\n        disabled: bookingTypeData && bookingTypeData.other3 ? false : true,\n        validation: {\n          name: 'other3Input',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(4), Validators.maxLength(50), Validators.pattern(/^[a-z\\d\\s]+$/i) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'This field should have min 4 characters'\n            }\n            if (error['maxlength']) {\n              return 'This field should have max 50 characters'\n            }\n            if (error['pattern']) {\n              return 'Only alphanumberic characters are allowed'\n            }\n            return '';\n          }\n        }\n      },\n      other3Duration: {\n        placeHolder: 'time',\n        name: 'other3Duration',\n        label: 'time_min',\n        value: bookingTypeData ? bookingTypeData.other3Duration : 0,\n        type: 'number',\n        maxLength: 3,\n        disabled: bookingTypeData && bookingTypeData.other3 ? false : true,\n        validation: {\n          name: 'other3Duration',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[0-9]+$'), Validators.min(1) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'Time should have min 1 characters'\n            }\n            if (error['maxlength']) {\n              return 'Time should have max 3 characters'\n            }\n            if (error['pattern']) {\n              return 'Only numeric characters are allowed'\n            }\n            if (error['min']) {\n              return 'Time should be greater than or equal to 1.'\n            }\n            return '';\n          }\n        }\n      },\n      other3Color: {\n        options: bookingTypeData ? this.getColorOptions('other3Color', bookingTypeData) : [],\n        placeHolder: 'color_selection',\n        label: '',\n        name: 'other3Color',\n        displayValue: 'description',\n        selectedOption: bookingTypeData ? this.getSelectedValue('other3Color', bookingTypeData) : {},\n        isMultiSelect: false,\n        showSelectOption: true,\n        disabled: bookingTypeData && bookingTypeData.other3 ? false : true\n      },\n      other4: {\n        placeHolder: '',\n        label: '',\n        name: 'other4',\n        idField: 'other4',\n        value: '',\n        type: 'checkbox',\n        options: [ { label: '', id: 1, checked: bookingTypeData ? bookingTypeData.other4 : false } ]\n      },\n      other4Input: {\n        placeHolder: 'enter_booking_type',\n        label: '',\n        name: 'other4Input',\n        idField: 'other4Input',\n        value: bookingTypeData ? bookingTypeData.other4 : '',\n        type: 'text',\n        maxLength: 50,\n        disabled: bookingTypeData && bookingTypeData.other4 ? false : true,\n        validation: {\n          name: 'other4Input',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(4), Validators.maxLength(50), Validators.pattern(/^[a-z\\d\\s]+$/i) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'This field should have min 4 characters'\n            }\n            if (error['maxlength']) {\n              return 'This field should have max 50 characters'\n            }\n            if (error['pattern']) {\n              return 'Only alphanumberic characters are allowed'\n            }\n            return '';\n          }\n        }\n      },\n      other4Duration: {\n        placeHolder: 'time',\n        name: 'other4Duration',\n        label: 'time_min',\n        value: bookingTypeData ? bookingTypeData.other4Duration : 0,\n        type: 'number',\n        maxLength: 3,\n        disabled: bookingTypeData && bookingTypeData.other4 ? false : true,\n        validation: {\n          name: 'other4Duration',\n          validationFunction: (): ValidatorFn => {\n            return Validators.compose([ Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[0-9]+$'), Validators.min(1) ])\n          },\n          validationMessage: (error: ValidationErrors): string => {\n            if (error['minlength']) {\n              return 'Time should have min 1 characters'\n            }\n            if (error['maxlength']) {\n              return 'Time should have max 3 characters'\n            }\n            if (error['pattern']) {\n              return 'Only numeric characters are allowed'\n            }\n            if (error['min']) {\n              return 'Time should be greater than or equal to 1.'\n            }\n            return '';\n          }\n        }\n      },\n      other4Color: {\n        options: bookingTypeData ? this.getColorOptions('other4Color', bookingTypeData) : [],\n        placeHolder: 'color_selection',\n        label: '',\n        name: 'other4Color',\n        displayValue: 'description',\n        selectedOption: bookingTypeData ? this.getSelectedValue('other4Color', bookingTypeData) : {},\n        isMultiSelect: false,\n        showSelectOption: true,\n        disabled: bookingTypeData && bookingTypeData.other4 ? false : true\n      },\n    }\n  }\n\n  newBookingTypeFormModel = (): BookingTypeFormModel => {\n    return {\n      assessment: false,\n      assessmentDuration: null,\n      assessmentId: null,\n      assessmentColor: '',\n      isRepair: false,\n      repairId: null,\n      repairColor: '',\n      other: '',\n      otherDuration: 0,\n      otherId: null,\n      otherColor: '',\n      other1: '',\n      other1Duration: 0,\n      other1Id: null,\n      other1Color: '',\n      other2: '',\n      other2Duration: 0,\n      other2Id: null,\n      other2Color: '',\n      other3: '',\n      other3Duration: 0,\n      other3Id: null,\n      other3Color: '',\n      other4: '',\n      other4Duration: 0,\n      other4Id: null,\n      other4Color: ''\n    };\n\n  }\n\n  public formModel?: AddNewBookingTypeForm;\n  public formData: BookingTypeFormModel;\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n    this.monitorService.logEvent('ngOnInit', [ 'BookingTypeComponent', 'addenda-repair' ]);\n    this.commonService.showLoading();\n    this.getBookingTypeColors();\n  }\n\n  /**\n   * after view init\n   */\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    this.cdr.detectChanges();\n  }\n\n  /**\n  * check for form validation and set button type\n  * @returns {void}\n */\n  checkForFormValidation(): void {\n    if (this.isBookingTypeFormValid()) {\n      this.saveButtonModel.type = 'primary';\n    } else {\n      this.saveButtonModel.type = 'disabled';\n    }\n  }\n\n  /**\n * check for form validation and set button type\n * @returns {void}\n*/\n  getBookingTypeColors(): void {\n    this.settingsService.getBookingTypeColors().subscribe({\n      next: (result: any) => {\n        this.bookingTypeColorsLookup = result.data;\n        this.getSettings();\n      }, error: (err: any) => {\n        this.commonService.hideLoading();\n        this.monitorService.logException(err);\n      }\n    })\n  }\n\n  /**\n   * get settings\n   */\n  getSettings(): void {\n    this.settingsService.getSettings().subscribe({\n      next: (result: any) => {\n        let bookingTypes = null;\n        if (result && result.data && result.data.bookingTypes && result.data.bookingTypes.length) {\n          bookingTypes = this.convertSettingsData(result.data.bookingTypes)\n          this.formModel = this.newBookingTypeForm(bookingTypes);\n          this.settingsService.isRepairChange.emit(bookingTypes.isRepair)\n        } else {\n          this.formData.assessment = true\n          this.formData.assessmentDuration = 30\n          this.formModel = this.newBookingTypeForm(this.formData);\n        }\n        if (result && result.data && result.data.repairType && result.data.repairType.repairTypes) {\n          this.settingsService.isJobTasksEnabled.emit(result.data.repairType.repairTypes.length > 0 ? true : false)\n        }\n        this.commonService.hideLoading();\n      },\n      error: (err: any) => {\n        this.commonService.hideLoading();\n        this.monitorService.logException(err);\n      }\n    });\n  }\n\n  /**\n    * convert settings data\n    */\n  convertSettingsData(data: any): BookingTypeFormModel {\n    for (let i = 0; i < data.length; i++) {\n      const element = data[i];\n\n      switch (element.category) {\n      case 'Assessment':\n        this.formData.assessmentDuration = element.duration;\n        this.formData.assessment = true;\n        this.formData.assessmentId = element.id;\n        this.formData.assessmentColor = element.color;\n        break;\n\n      case 'Repair':\n        this.formData.isRepair = true;\n        this.formData.repairId = element.id;\n        this.formData.repairColor = element.color;\n        break;\n      default:\n        break;\n      }\n    }\n    const otherData = data.filter(x => x.category.toLowerCase() === 'other');\n    for (let i = 0; i < otherData.length; i++) {\n      const element = otherData[i];\n      if (i === 0) {\n        this.formData.other = element.name;\n        this.formData.otherDuration = element.duration;\n        this.formData.otherId = element.id;\n        this.formData.otherColor = element.color;\n      } else {\n        this.formData[`other${i}`] = element.name;\n        this.formData[`other${i}Duration`] = element.duration;\n        this.formData[`other${i}Id`] = element.id;\n        this.formData[`other${i}Color`] = element.color;\n      }\n    }\n    return this.formData\n  }\n\n  /**\n   * check for form validation\n   * @returns {void}\n   */\n  isBookingTypeFormValid(): boolean {\n    let isValid = true;\n    const isOther = this.formModel.other.options.some((opt: any) => opt.checked === true || opt.checked != '');\n    const isAssessment = this.formModel.assessment.options.some((opt: any) => opt.checked === true);\n    const isRepair = this.formModel.repair.options.some((opt: any) => opt.checked === true);\n    const isOther1 = this.formModel.other1.options.some((opt: any) => opt.checked === true || opt.checked != '');\n    const isOther2 = this.formModel.other2.options.some((opt: any) => opt.checked === true || opt.checked != '');\n    const isOther3 = this.formModel.other3.options.some((opt: any) => opt.checked === true || opt.checked != '');\n    const isOther4 = this.formModel.other4.options.some((opt: any) => opt.checked === true || opt.checked != '');\n\n    if (isAssessment && (this.formModel.assessmentDuration.value == '' || parseInt(this.formModel.assessmentDuration.value.toString()) < 1 || this.formModel.assessmentColor.selectedOption.name === undefined)) {\n      isValid = false;\n    }\n    if (isOther && (this.formModel.otherInput.value == '' || this.formModel.otherDuration.value == 0 || (Object.keys(this.formModel.otherColor.selectedOption).length === 0 || this.formModel.otherColor.selectedOption.name === ''))) {\n      isValid = false;\n    }\n    if (isOther1 && (this.formModel.other1Input.value == '' || this.formModel.other1Duration.value == 0 || (Object.keys(this.formModel.other1Color.selectedOption).length === 0 || this.formModel.other1Color.selectedOption.name === ''))) {\n      isValid = false;\n    }\n    if (isOther2 && (this.formModel.other2Input.value == '' || this.formModel.other2Duration.value == 0 || (Object.keys(this.formModel.other2Color.selectedOption).length === 0 || this.formModel.other2Color.selectedOption.name === ''))) {\n      isValid = false;\n    }\n    if (isOther3 && (this.formModel.other3Input.value == '' || this.formModel.other3Duration.value == 0 || (Object.keys(this.formModel.other3Color.selectedOption).length === 0 || this.formModel.other3Color.selectedOption.name === ''))) {\n      isValid = false;\n    }\n    if (isOther4 && (this.formModel.other4Input.value == '' || this.formModel.other4Duration.value == 0 || (Object.keys(this.formModel.other4Color.selectedOption).length === 0 || this.formModel.other4Color.selectedOption.name === ''))) {\n      isValid = false;\n    }\n    if (isRepair && (Object.keys(this.formModel.repairColor.selectedOption).length === 0 || this.formModel.repairColor.selectedOption.name === '')) {\n      isValid = false;\n    }\n    return isValid;\n  }\n\n  /**\n  Updates the form model and form data based on the output received.assessmentDuration\n  @param {IControlValue} output - The output received from the form control.\n  @returns {void}\n*/\n  onFormUpdate(output: IControlValue): void {\n    if (output) {\n      if (output.type === 'number') {\n        this.formModel[output.name].value = parseInt(output.value);\n      } else {\n        this.formModel[output.name].value = output.value;\n      }\n      if (output.name == 'repair') {\n        if (output.value == true) {\n          this.formModel.repairColor = { ...this.formModel.repairColor, disabled: false };\n        } else {\n          this.formModel.repairColor = { ...this.formModel.repairColor, selectedOption: {}, disabled: true };\n        }\n      }\n      if (output.name == 'assessment') {\n        if (output.value == true) {\n          this.formModel.assessmentDuration = { ...this.formModel.assessmentDuration, disabled: false, value: 30 };\n          this.formModel.assessmentColor = { ...this.formModel.assessmentColor, disabled: false };\n        } else {\n          this.formModel.assessmentDuration = { ...this.formModel.assessmentDuration, disabled: true, value: '' };\n          this.formModel.assessmentColor = { ...this.formModel.assessmentColor, selectedOption: {}, disabled: true };\n        }\n      }\n      if (output.name == 'other') {\n        if (output.name == 'other' && output.value == true) {\n          this.formModel.otherInput = { ...this.formModel.otherInput, disabled: false };\n          this.formModel.otherDuration = { ...this.formModel.otherDuration, disabled: false };\n          this.formModel.otherColor = { ...this.formModel.otherColor, disabled: false };\n        } else {\n          this.formModel.otherInput = { ...this.formModel.otherInput, disabled: true, value: '' };\n          this.formModel.otherDuration = { ...this.formModel.otherDuration, disabled: true, value: '' };\n          this.formModel.otherColor = { ...this.formModel.otherColor, selectedOption: {}, disabled: true };\n        }\n      }\n      if (output.name == 'other1') {\n        if (output.name == 'other1' && output.value == true) {\n          this.formModel.other1Input = { ...this.formModel.other1Input, disabled: false };\n          this.formModel.other1Duration = { ...this.formModel.other1Duration, disabled: false };\n          this.formModel.other1Color = { ...this.formModel.other1Color, disabled: false };\n        } else {\n          this.formModel.other1Input = { ...this.formModel.other1Input, disabled: true, value: '' };\n          this.formModel.other1Duration = { ...this.formModel.other1Duration, disabled: true, value: '' };\n          this.formModel.other1Color = { ...this.formModel.other1Color, selectedOption: {}, disabled: true };\n        }\n      }\n      if (output.name == 'other2') {\n        if (output.name == 'other2' && output.value == true) {\n          this.formModel.other2Input = { ...this.formModel.other2Input, disabled: false };\n          this.formModel.other2Duration = { ...this.formModel.other2Duration, disabled: false };\n          this.formModel.other2Color = { ...this.formModel.other2Color, disabled: false };\n        } else {\n          this.formModel.other2Input = { ...this.formModel.other2Input, disabled: true, value: '' };\n          this.formModel.other2Duration = { ...this.formModel.other2Duration, disabled: true, value: '' };\n          this.formModel.other2Color = { ...this.formModel.other2Color, selectedOption: {}, disabled: true };\n        }\n      }\n      if (output.name == 'other3') {\n        if (output.name == 'other3' && output.value == true) {\n          this.formModel.other3Input = { ...this.formModel.other3Input, disabled: false };\n          this.formModel.other3Duration = { ...this.formModel.other3Duration, disabled: false };\n          this.formModel.other3Color = { ...this.formModel.other3Color, disabled: false };\n        } else {\n          this.formModel.other3Input = { ...this.formModel.other3Input, disabled: true, value: '' };\n          this.formModel.other3Duration = { ...this.formModel.other3Duration, disabled: true, value: '' };\n          this.formModel.other3Color = { ...this.formModel.other3Color, selectedOption: {}, disabled: true };\n        }\n      }\n      if (output.name == 'other4') {\n        if (output.name == 'other4' && output.value == true) {\n          this.formModel.other4Input = { ...this.formModel.other4Input, disabled: false };\n          this.formModel.other4Duration = { ...this.formModel.other4Duration, disabled: false };\n          this.formModel.other4Color = { ...this.formModel.other4Color, disabled: false };\n        } else {\n          this.formModel.other4Input = { ...this.formModel.other4Input, disabled: true, value: '' };\n          this.formModel.other4Duration = { ...this.formModel.other4Duration, disabled: true, value: '' };\n          this.formModel.other4Color = { ...this.formModel.other4Color, selectedOption: {}, disabled: true };\n        }\n      }\n      this.checkForFormValidation();\n      this.refreshColorOptions();\n    }\n  }\n\n  /**\n   * selected any filter in the dropdown\n   * @param $event \n   */\n  public selectFilter($event: any): void {\n    this.formModel[$event.name].selectedOption = $event.value;\n    this.refreshColorOptions();\n    this.onFormUpdate($event);\n\n  }\n  /**\n     Submits the form data to the server.\n     @returns {void}\n   */\n  submitForm(): any {\n    if (!this.isBookingTypeFormValid()) {\n      return;\n    }\n    this.monitorService.logEvent('submitForm', [ 'BookingTypeComponent', 'addenda-repair' ]);\n    const isOther = (this.formModel.other.options.some((opt: any) => opt.checked === true) || this.formModel.otherInput.value != '');\n    const isOther1 = (this.formModel.other1.options.some((opt: any) => opt.checked === true) || this.formModel.other1Input.value != '');\n    const isOther2 = (this.formModel.other2.options.some((opt: any) => opt.checked === true) || this.formModel.other2Input.value != '');\n    const isOther3 = (this.formModel.other3.options.some((opt: any) => opt.checked === true) || this.formModel.other3Input.value != '');\n    const isOther4 = (this.formModel.other4.options.some((opt: any) => opt.checked === true) || this.formModel.other4Input.value != '');\n    const payload = [];\n    const data = {\n      assessment: this.formModel.assessment.options.some((opt: any) => opt.checked === true),\n      assessmentDuration: this.formModel.assessmentDuration.value ? parseInt(this.formModel.assessmentDuration.value.toString()) : 0,\n      assessmentColor: this.formModel.assessmentColor.selectedOption.name,\n      assessmentId: this.formData.assessmentId,\n      isRepair: this.formModel.repair.options.some((opt: any) => opt.checked === true),\n      repairColor: this.formModel.repairColor.selectedOption.name,\n      repairId: this.formData.repairId,\n      other: isOther ? this.formModel.otherInput.value.toString() : '',\n      otherDuration: isOther ? parseInt(this.formModel.otherDuration.value.toString()) : 0,\n      otherColor: this.formModel.otherColor.selectedOption.name,\n      otherId: this.formData.otherId,\n\n      other1: isOther1 ? this.formModel.other1Input.value.toString() : '',\n      other1Duration: isOther1 ? parseInt(this.formModel.other1Duration.value.toString()) : 0,\n      other1Color: this.formModel.other1Color.selectedOption.name,\n      other1Id: this.formData.other1Id,\n\n      other2: isOther2 ? this.formModel.other2Input.value.toString() : '',\n      other2Duration: isOther2 ? parseInt(this.formModel.other2Duration.value.toString()) : 0,\n      other2Color: this.formModel.other2Color.selectedOption.name,\n      other2Id: this.formData.other2Id,\n\n      other3: isOther3 ? this.formModel.other3Input.value.toString() : '',\n      other3Duration: isOther3 ? parseInt(this.formModel.other3Duration.value.toString()) : 0,\n      other3Color: this.formModel.other3Color.selectedOption.name,\n      other3Id: this.formData.other3Id,\n\n      other4: isOther4 ? this.formModel.other4Input.value.toString() : '',\n      other4Duration: isOther4 ? parseInt(this.formModel.other4Duration.value.toString()) : 0,\n      other4Color: this.formModel.other4Color.selectedOption.name,\n      other4Id: this.formData.other4Id,\n    };\n\n    if (data.assessment) {\n      payload.push({\n        category: BookingTypeCategories.Assessment,\n        name: BookingTypeCategories.Assessment,\n        duration: data.assessmentDuration,\n        color: data.assessmentColor,\n        id: data.assessmentId\n      })\n    }\n    if (data.isRepair) {\n      payload.push({\n        category: BookingTypeCategories.Repair,\n        name: BookingTypeCategories.Repair,\n        duration: 0,\n        color: data.repairColor,\n        id: data.repairId\n      })\n    }\n    if (isOther) {\n      payload.push({\n        category: BookingTypeCategories.Other,\n        name: data.other,\n        duration: data.otherDuration,\n        id: data.otherId,\n        color: data.otherColor\n      })\n    }\n    if (isOther1) {\n      payload.push({\n        category: BookingTypeCategories.Other,\n        name: data.other1,\n        duration: data.other1Duration,\n        color: data.other1Color,\n        id: data.other1Id\n      })\n    }\n    if (isOther2) {\n      payload.push({\n        category: BookingTypeCategories.Other,\n        name: data.other2,\n        duration: data.other2Duration,\n        color: data.other2Color,\n        id: data.other2Id\n      })\n    }\n    if (isOther3) {\n      payload.push({\n        category: BookingTypeCategories.Other,\n        name: data.other3,\n        duration: data.other3Duration,\n        color: data.other3Color,\n        id: data.other3Id\n      })\n    }\n    if (isOther4) {\n      payload.push({\n        category: BookingTypeCategories.Other,\n        name: data.other4,\n        duration: data.other4Duration,\n        color: data.other4Color,\n        id: data.other4Id\n      })\n    }\n    if(payload.length == 0) return\n    this.commonService.showLoading();\n    this.settingsService.saveNewBookingType({\n      'bookingTypes': payload\n    }).subscribe({\n      next: () => {\n        if (this.showToast) {\n          this.commonService.showInfoToast(5000, 'New changes will be applied only to new bookings.');\n        }\n        this.settingsService.isRepairChange.emit(data.isRepair);\n        this.settingsService.isJobTasksEnabled.emit(data.isRepair);\n        this.formModel = this.newBookingTypeForm();\n        this.formData = this.newBookingTypeFormModel();\n        this.getSettings();\n      },\n      error: (err: any) => {\n        this.commonService.hideLoading();\n        this.monitorService.logException(err);\n      }\n    });\n  }\n\n  /**\n   * retrieve selected value\n   * @param category \n   * @param values \n   */\n  getSelectedValue(category: string, values: any): any {\n    const selected = this.bookingTypeColorsLookup.find(x => x.name === values[category]);\n    return selected ?? {};\n  }\n\n  /**\n   * get options which and not assigned \n   * @param category \n   * @param values \n   */\n  getColorOptions(category: string, values: any): any {\n    const excludedColors = Object.values(values).filter((value, index) => Object.keys(values)[index] !== category && Object.keys(values)[index].includes('Color'));\n    return this.bookingTypeColorsLookup.filter(x => !excludedColors.includes(x.name));\n  }\n\n  /**\n   * refresh all color selection dropdown\n   */\n  refreshColorOptions(): void {\n    const colorOptions = Object.values(this.formModel).filter((value, index) => Object.keys(this.formModel)[index].includes('Color'));\n    const values = Object.values(this.formModel).filter((value, index) => Object.keys(this.formModel)[index].includes('Color'))\n      .filter(x => x.selectedOption?.name)\n      .map(y => ({ 'name': y.name, 'color': y.selectedOption?.name }))\n      .reduce((acc, cur) => ({ ...acc, [cur.name]: cur.color }), {});\n    colorOptions.forEach((ele) => {\n      const options = this.getColorOptions(ele.name, values);\n      ele['options'] = [ ...options ];\n    })\n    this.updateForm();\n  }\n\n  /**\n   * update form model\n   * @param ele \n   */\n  updateForm(): void {\n    this.formModel.assessmentColor = {\n      ...this.formModel.assessmentColor\n    }\n    this.formModel.repairColor = {\n      ...this.formModel.repairColor\n    }\n    this.formModel.otherColor = {\n      ...this.formModel.otherColor\n    }\n    this.formModel.other1Color = {\n      ...this.formModel.other1Color\n    }\n    this.formModel.other2Color = {\n      ...this.formModel.other2Color\n    }\n    this.formModel.other3Color = {\n      ...this.formModel.other3Color\n    }\n    this.formModel.other4Color = {\n      ...this.formModel.other4Color\n    }\n\n  }\n\n  /**\n  * on Destroy\n  */\n  ngOnDestroy(): void {\n    this.showToast = false;\n    this.submitForm()\n  }\n}\n","<div class=\"page-container-booking-type\">\n    <div class=\"booking-type-wrapper\">\n        <form class=\"booking-type-form\">\n            <div class=\"main-div\">\n                <p class=\"header-label\">{{'booking_type_header' | translate}}</p>\n                <div class=\"main-container\">\n                    <div class=\"left-div fx-1\">\n                        <div class=\"repair-wrapper fx-row booking-type-container\">\n                            <div class=\"repair-checkbox\">\n                                <chq-input [inputModel]=\"formModel.repair\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"input-field text-only\">\n                                <span>{{'repair' | translate}}</span>\n                            </div>\n                            <div class=\"color-dropdown\">\n                                <chq-dropdown [dropdownModel]=\"formModel.repairColor\" (selected)=\"selectFilter($event)\">\n                                </chq-dropdown>\n                            </div>\n                            <div class=\"color\" *ngIf=\"formModel.repairColor?.selectedOption.name\">\n                                <div [ngStyle]=\"{'background': formModel.repairColor?.selectedOption.name}\"></div>\n                            </div>\n                        </div>\n                        <div class=\"vector\"></div>\n                        <div class=\"assessment-wrapper fx-row booking-type-container\">\n                            <div class=\"assessment-checkbox\">\n                                <chq-input [inputModel]=\"formModel.assessment\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"input-field text-only\">\n                                <span>{{'assessment' | translate}}</span>\n                            </div>\n                            <div class=\"time-wrapper\">\n                                <chq-input class=\"time-input\" [inputModel]=\"formModel.assessmentDuration\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"color-dropdown\">\n                                <chq-dropdown [dropdownModel]=\"formModel.assessmentColor\" (selected)=\"selectFilter($event)\">\n                                </chq-dropdown>\n                            </div>\n                            <div class=\"color\" *ngIf=\"formModel.assessmentColor?.selectedOption.name\">\n                                <div [ngStyle]=\"{'background': formModel.assessmentColor?.selectedOption.name}\"></div>\n                            </div>\n                        </div>\n                        <div class=\"vector\"></div>\n                        <div class=\"other-wrapper fx-row booking-type-container\">\n                            <div class=\"other-checkbox\">\n                                <chq-input [inputModel]=\"formModel.other\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"input-field\">\n                                <chq-input [inputModel]=\"formModel.otherInput\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"time-wrapper\">\n                                <chq-input class=\"time-input\" [inputModel]=\"formModel.otherDuration\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"color-dropdown\">\n                                <chq-dropdown [dropdownModel]=\"formModel.otherColor\"\n                                 (selected)=\"selectFilter($event)\">\n                                </chq-dropdown>\n                            </div>\n                            <div class=\"color\" *ngIf=\"formModel.otherColor?.selectedOption.name\">\n                                <div [ngStyle]=\"{'background': formModel.otherColor?.selectedOption.name}\"></div>\n                            </div>\n\n                        </div>\n                        <div class=\"vector\"></div>\n                        <div class=\"other-wrapper fx-row booking-type-container\">\n                            <div class=\"other-checkbox\">\n                                <chq-input [inputModel]=\"formModel.other1\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"input-field\">\n                                <chq-input [inputModel]=\"formModel.other1Input\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"time-wrapper\">\n                                <chq-input class=\"time-input\" [inputModel]=\"formModel.other1Duration\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"color-dropdown\">\n                                <chq-dropdown [dropdownModel]=\"formModel.other1Color\" \n                                (selected)=\"selectFilter($event)\">\n                                </chq-dropdown>\n                            </div>\n                            <div class=\"color\" *ngIf=\"formModel.other1Color?.selectedOption.name\">\n                                <div [ngStyle]=\"{'background': formModel.other1Color?.selectedOption.name}\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"vector hr-show-sm\" ></div>\n                    <div class=\"right-div fx-1\">\n                        <div class=\"other-wrapper fx-row booking-type-container\">\n                            <div class=\"other-checkbox\">\n                                <chq-input [inputModel]=\"formModel.other2\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"input-field\">\n                                <chq-input [inputModel]=\"formModel.other2Input\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"time-wrapper\">\n                                <chq-input class=\"time-input\" [inputModel]=\"formModel.other2Duration\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"color-dropdown\">\n                                <chq-dropdown [dropdownModel]=\"formModel.other2Color\" \n                                 (selected)=\"selectFilter($event)\">\n                                </chq-dropdown>\n                            </div>\n                            <div class=\"color\" *ngIf=\"formModel.other2Color?.selectedOption.name\">\n                                <div [ngStyle]=\"{'background': formModel.other2Color?.selectedOption.name}\"></div>\n                            </div>\n\n                        </div>\n                        <div class=\"vector\"></div>\n                        <div class=\"other-wrapper fx-row booking-type-container\">\n                            <div class=\"other-checkbox\">\n                                <chq-input [inputModel]=\"formModel.other3\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"input-field\">\n                                <chq-input [inputModel]=\"formModel.other3Input\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"time-wrapper\">\n                                <chq-input class=\"time-input\" [inputModel]=\"formModel.other3Duration\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"color-dropdown\">\n                                <chq-dropdown [dropdownModel]=\"formModel.other3Color\"\n                                (selected)=\"selectFilter($event)\">\n                            </chq-dropdown>\n                            </div>\n                            <div class=\"color\" *ngIf=\"formModel.other3Color?.selectedOption.name\">\n                                <div [ngStyle]=\"{'background': formModel.other3Color?.selectedOption.name}\"></div>\n                            </div>\n                        </div>\n                        <div class=\"vector\"></div>\n                        <div class=\"other-wrapper fx-row booking-type-container\">\n                            <div class=\"other-checkbox\">\n                                <chq-input [inputModel]=\"formModel.other4\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"input-field\">\n                                <chq-input [inputModel]=\"formModel.other4Input\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"time-wrapper\">\n                                <chq-input class=\"time-input\" [inputModel]=\"formModel.other4Duration\"\n                                    (controlOutput)=\"onFormUpdate($event)\"></chq-input>\n                            </div>\n                            <div class=\"color-dropdown\">\n                                <chq-dropdown [dropdownModel]=\"formModel.other4Color\"\n                                  (selected)=\"selectFilter($event)\">\n                                </chq-dropdown>\n                            </div>\n                            <div class=\"color\" *ngIf=\"formModel.other4Color?.selectedOption.name\">\n                                <div [ngStyle]=\"{'background': formModel.other4Color?.selectedOption.name}\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"footer-full-wrapper\">\n        <div class=\"footer-image-wrapper\">\n            <div class=\"image-wrapper\">\n                <img src=\"assets/img/addenda-repair.png\" />\n            </div>\n        </div>\n        <div>\n            <chq-button class=\"footer-save-button-wrapper\" [buttonModel]=\"saveButtonModel\"></chq-button>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { AddJobDialogComponent } from 'src/app/dialogs/add-job-dialog/add-job-dialog.component';\nimport { AddTaskDialogComponent } from 'src/app/dialogs/add-task-dialog/add-task-dialog.component';\nimport { AddSettingsJobsFormDataModel } from 'src/app/model/chq-settings-jobs-tasks-model';\nimport { ChqWidgetsButtonModel } from 'src/app/model/chq-widgets-button-model';\nimport { CommonService } from 'src/app/services/common/common.service';\nimport { JobSettingsService } from 'src/app/services/jobs-settings/job-settings.service';\nimport { MonitorService } from 'src/app/services/monitor-service/monitor.service';\nimport { SettingsService } from 'src/app/services/settings/settings.service';\n@Component({\n  selector: 'app-jobs-tasks',\n  templateUrl: './jobs-tasks.component.html',\n  styleUrls: [ './jobs-tasks.component.scss' ]\n})\nexport class JobsTasksComponent {\n\n  public addJobButtonModel: ChqWidgetsButtonModel = {\n    label: 'Add Job',\n    type: 'primary',\n    icon: 'plus-filled'\n  }\n  public addTaskButtonModel: ChqWidgetsButtonModel = {\n    label: 'Add Task',\n    type: 'primary',\n    icon: 'plus-filled'\n  }\n\n  public saveButtonModel: ChqWidgetsButtonModel = {\n    label: 'save',\n    type: 'primary'\n  }\n\n  public deleteButtonModel: ChqWidgetsButtonModel = {\n    label: '',\n    type: 'outline-danger',\n    icon: 'delete',\n  }\n\n  public editButtonModel: ChqWidgetsButtonModel = {\n    label: '',\n    type: 'outline',\n    icon: 'edit',\n  }\n\n  /**\n    Constructor for the component.\n    @param {CommonService} commonService - The CommonService instance.\n    @param {RepairEstimateService} repairEstimateService - The RepairEstimateService instance.\n    @param {ActivatedRoute} route - The ActivatedRoute instance.\n    @param {MatDialog} dialog - The MatDialog instance.\n    @param {BookingService} bookingService - The BookingService instance.\n    @param {RepairEstimateOperationService} repairEstimateOperationService - The RepairEstimateOperationService instance.\n    @param {MonitorService} monitorService - The MonitorService instance.\n    @param {Router} router - The Router instance.\n  */\n\n  public jobsData: any = [];\n  public mediator: any[] = [];\n  public repairTypes: any[] = [];\n\n  startIndex = 0\n  lastIndex = 3\n  enabledRepairTypes: any[] = [];\n  jobsLength = 0;\n  isBodyOrPaint: boolean = false;\n  CallingAPI = false;\n\n  /**\n  Constructor for the class.\n */\n  constructor(\n    public commonService: CommonService,\n    public dialog: MatDialog,\n    private monitorService: MonitorService,\n    private jobSettingsService: JobSettingsService,\n    private settingsService: SettingsService\n  ) {\n    if (this.commonService.accessRight.closed) {\n      this.commonService.accessRight = new BehaviorSubject<boolean>(true);\n    }\n  }\n\n  /**\n   * on init\n   */\n  async ngOnInit(): Promise<void> {\n    this.monitorService.logEvent('ngOnInit', [ 'JobsTasksComponent', 'addenda-repair' ]);\n    this.commonService.showLoading();\n    this.getJobs();\n  }\n\n  /**\n * get repair Types\n */\n  getJobs(): void {\n    this.CallingAPI = true;\n    this.jobSettingsService.getJobs().subscribe({\n      next: (result: any) => {\n        if (result) {\n          this.CallingAPI = false;\n          this.jobsLength = result.data.length\n          if (this.jobsLength >= 20) {\n            this.addJobButtonModel.type = 'disabled';\n          } else {\n            this.addJobButtonModel.type = 'primary';\n          }\n\n          result.data = result.data.map((x) => {\n            x.expandControl = false\n            return x\n          })\n\n          for (let i = 0; i < result.data.length; i++) {\n            const taskMaxLength = Math.max(...result.data[i].repairServiceTypeTasks.map(x => x.tasks.length))\n            this.repairTypes = [ ...this.repairTypes, ...result.data[i].repairServiceTypeTasks.filter(x => !this.repairTypes.some(r => r.id === x.id)).map((x) => {\n              return {\n                'id': x.id,\n                'name': x.name,\n                'description': x.description,\n                'tasks': []\n              }\n            }) ]\n\n            for (let j = 0; j < result.data[i].repairServiceTypeTasks.length; j++) {\n              const currentTaskLength = result.data[i].repairServiceTypeTasks[j].tasks.length;\n              if (currentTaskLength < taskMaxLength) {\n                const tempObj = {\n                  'id': result.data[i].repairServiceTypeTasks[j].tasks.id,\n                  'jobTaskGuid': result.data[i].repairServiceTypeTasks[j].tasks.jobTaskGuid,\n                  'name': '',\n                  'isMandatory': result.data[i].repairServiceTypeTasks[j].tasks.isMandatory,\n                  'importFromGTMotive': result.data[i].repairServiceTypeTasks[j].tasks.importFromGTMotive\n                }\n                for (let index = 0; index < (taskMaxLength - currentTaskLength); index++) {\n                  result.data[i].repairServiceTypeTasks[j].tasks.push(tempObj)\n                }\n              }\n            }\n          }\n\n          if (this.repairTypes.length < 4) {\n            this.lastIndex = this.repairTypes.length - 1;\n          }\n\n          if (this.jobsLength == 0) {\n            this.settingsService.getSettings().subscribe({\n              next: (result: any) => {\n                if (result && result.data && result.data.repairType && result.data.repairType.repairTypes) {\n                  this.isBodyOrPaint = result.data.repairType.repairTypes.includes(1) || result.data.repairType.repairTypes.includes(2)\n                }\n                this.commonService.hideLoading();\n              },\n              error: (err: any) => {\n                this.commonService.hideLoading();\n                this.monitorService.logException(err);\n              }\n            });\n          }else{\n            this.isBodyOrPaint = this.repairTypes.some(x => x.name?.toLowerCase() == 'body' || x.name?.toLowerCase() == 'paint')\n          }\n          this.enabledRepairTypes = this.repairTypes.map(x => x.id)\n          this.jobsData = result.data;\n          this.mediator = this.repairTypes.length < 4 ? this.repairTypes : [ this.repairTypes[0], this.repairTypes[1], this.repairTypes[2], this.repairTypes[3] ]\n          this.settingsService.isRepairChange.emit(true);\n          this.commonService.hideLoading();\n        } \n      },\n      error: (err: any) => {\n        this.CallingAPI = false;\n        this.commonService.hideLoading();\n        this.monitorService.logException(err);\n      }\n    });\n  }\n\n  /**\n* get repair Types\n*/\n  filterRepairtypes(repairServiceTypeTasks: any[]): Array<any> {\n    return repairServiceTypeTasks?.filter(r => this.mediator.some(m => m.id === r.id))\n  }\n\n  /**\n  * get repair Types\n  */\n  getTasksLength(jobData): number {\n    return jobData?.repairServiceTypeTasks.map(r => r.tasks.filter(t => t.name !== '').length).reduce((acc, ele) => acc + ele, 0) || 0;\n  }\n\n  /**\n * cellClickedCallback\n */\n  handleCellClicked(jobData, taskData): void {\n    if (taskData.id === undefined) return\n    const checkedRepairTypes = jobData?.repairServiceTypeTasks?.flatMap(r => r.tasks.filter(t => t.id === taskData.id).length ? r : null)?.filter(r => r !== null)?.map(r => r.id) || [];\n    const data = {\n      jobGuid: jobData?.jobGuid,\n      createdByUserName: jobData?.createdByUserName,\n      taskData,\n      checkedRepairTypes,\n      enabledRepairTypes: this.enabledRepairTypes,\n      tasksLength: this.getTasksLength(jobData)\n    }\n    this.openAddTaskPopup(data, true)\n  }\n\n  /**\n    Opens a dialog box for the repair estimate operation component with the specified data and panel class.\n    @returns {void}\n  */\n  openJobPopup(data: any): void {\n    if (!data && this.jobsLength >= 20) return\n    const dialogRef = this.dialog.open(AddJobDialogComponent, {\n      data: {\n        jobsData: data ? data : null,\n        isBodyOrPaint: this.isBodyOrPaint\n      },\n      width: '564px',\n      maxWidth: '564px',\n      height: 'auto',\n      panelClass: 'operation-panel',\n      autoFocus: false\n    });\n\n    dialogRef.afterClosed().subscribe({\n      next: (response: any) => {\n        if (response) {\n          this.getJobs()\n        }\n      }\n    });\n  }\n\n  /**\n   Opens a dialog box for the repair estimate operation component with the specified data and panel class.\n   @returns {void}\n */\n  openAddTaskPopup(data: any, isEdit: boolean = false, item = null, repairType?:any): void {\n    if (item && this.getTasksLength(item) >= 20) return\n    const dialogRef = this.dialog.open(AddTaskDialogComponent, {\n      data: isEdit ? data : {\n        jobGuid: data,\n        enabledRepairTypes: this.enabledRepairTypes,\n        tasksLength: this.getTasksLength(item),\n        checkedRepairTypes: [ repairType.id ]\n      },\n      width: '480px',\n      maxWidth: '480px',\n      height: 'auto',\n      panelClass: 'operation-panel',\n      autoFocus: false\n    });\n\n    dialogRef.afterClosed().subscribe({\n      next: (response: any) => {\n        if (response) {\n          this.commonService.showLoading();\n          this.getJobs()\n        }\n      }\n    });\n  }\n\n  /**\n  * on toggle change\n  */\n  onToggleChange(data: any, e): void {\n    let shouldCallUpdateJob: boolean = true;\n    if (data != null && data.jobGuid) {\n      const jobsData: AddSettingsJobsFormDataModel =\n      {\n        name: data.name,\n        color: data.color,\n        options: {\n          isUploadPhotosRequired: data?.options?.isUploadPhotosRequired,\n          isAIAnalysisEnabled: data?.options?.isAIAnalysisEnabled,\n          isTimerEnabled: data?.options?.isTimerEnabled,\n          uploadImagesOptions: data?.options?.uploadImagesOptions\n        }\n      }\n      if (e && e.name == 'photos') {\n        if (e.checked) {\n          shouldCallUpdateJob = false;\n          if (data?.options) {\n            data.options.isUploadPhotosRequired = true;\n          }\n          this.openJobPopup(data);\n          this.getJobs();\n        } else {\n          jobsData.options.isUploadPhotosRequired = false\n          jobsData.options.uploadImagesOptions = null\n        }\n      } else if (e && e.name == 'timer') {\n        if (e.checked) {\n          jobsData.options.isTimerEnabled = true\n        } else {\n          jobsData.options.isTimerEnabled = false\n        }\n      } else if (e && e.name == 'damageDetection') {\n        if (e.checked) {\n          jobsData.options.isAIAnalysisEnabled = true\n        } else {\n          jobsData.options.isAIAnalysisEnabled = false\n        }\n      }\n      if (shouldCallUpdateJob) {\n        this.commonService.showLoading();\n        this.jobSettingsService.editJob(\n          jobsData, data.jobGuid\n        ).subscribe({\n          next: () => {\n            this.getJobs();\n            this.commonService.hideLoading();\n          },\n          error: (err: any) => {\n            this.commonService.hideLoading();\n            this.monitorService.logException(err);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * expand user -detail \n  */\n  expand(item): void {\n    item.expandControl = !item.expandControl;\n  }\n\n  /**\n   * leftClick \n  */\n  leftClick(): void {\n    if (this.startIndex === 0) {\n      return;\n    } else if (this.lastIndex === 0) {\n      this.lastIndex = this.repairTypes.length - 1\n      this.startIndex--\n      this.mediator.unshift(this.repairTypes[this.startIndex])\n      this.mediator.pop()\n    } else {\n      this.startIndex--\n      this.lastIndex--\n      this.mediator.unshift(this.repairTypes[this.startIndex])\n      this.mediator.pop()\n    }\n    return\n  }\n\n  /**\n   * rightClick \n  */\n  rightClick(): void {\n    if (this.lastIndex === this.repairTypes.length - 1) {\n      return;\n    } else if (this.startIndex === this.repairTypes.length - 1) {\n      this.startIndex = 0\n      this.lastIndex++\n      this.mediator.shift()\n      this.mediator.push(this.repairTypes[this.lastIndex])\n    } else {\n      this.startIndex++\n      this.lastIndex++\n      this.mediator.shift()\n      this.mediator.push(this.repairTypes[this.lastIndex])\n    }\n    return\n  }\n\n  /**\n* on Delete Job\n*/\n  deleteJob(jobGuid: any): void {\n    const dialogRef = this.commonService.openConfirmationOkDialog('Confirm Deleting',\n      'Are you sure you also want to delete all the tasks included in the job?');\n    this.monitorService.logEvent('deleteJob', [ 'JobsTasksComponent', 'addenda-repair' ]);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.commonService.showLoading();\n        this.jobSettingsService.deleteJobsById(jobGuid).subscribe({\n          next: () => {\n            this.getJobs();\n            this.commonService.hideLoading();\n          },\n          error: () => {\n            this.commonService.hideLoading();\n          }\n        })\n      }\n    });\n  }\n}\n","<div class=\"page-container-jobs-tasks fx-col h-100\">\n    <div class=\"add-btn d-flex fx-0\">\n        <chq-button [buttonModel]=\"addJobButtonModel\" (click)=\"openJobPopup(null)\">{{'add_job' | translate}}</chq-button>\n    </div>\n    <div class=\"list-container justify-space-between fx-1 overflow-auto\" *ngIf=\"jobsLength >= 1\">\n        <div class=\"job fx-row\" *ngFor=\"let item of jobsData\">\n            <div class=\"left-container\">\n                <div class=\"nav-left-toggle\">\n                    <mat-icon [ngClass]=\"{'disable':startIndex === 0}\" [svgIcon]=\"'dropdown'\"\n                        (click)=\"leftClick()\"></mat-icon>\n                </div>\n                <div class=\"controls\">\n                    <div class=\"frame\">\n                        <div class=\"collapse-frame\" [ngStyle]=\"{'background': item.color}\">\n                            <div class=\"label\">{{item.name}}</div>\n                            <mat-icon size=\"sm\" color=\"white\" [svgIcon]=\"'dropdown'\" (click)=\"expand(item)\"\n                                [ngClass]=\"{'active': item.expandControl}\"></mat-icon>\n                        </div>\n                    </div>\n                    <div class=\"expanded-block\" [ngStyle]=\"{'border-color': item.color}\" *ngIf=\"item.expandControl\">\n                        <div>\n                            <div class=\"toggle-frame\">\n                                <div class=\"toggle\">\n                                    <label class=\"label-toggle\">{{'photos' | translate}}</label>\n                                    <chq-toggle [disabled]=\"item.options.isAIAnalysisEnabled\"\n                                        [checked]=\"item.options.isUploadPhotosRequired\" [name]=\"'photos'\"\n                                        [ngClass]=\"{'disable':item.options.isAIAnalysisEnabled}\"\n                                        (ToggleChange)=\"onToggleChange(item, $event)\"></chq-toggle>\n                                </div>\n                                <div class=\"toggle\">\n                                    <label class=\"label-toggle\">{{'timer' | translate}}</label>\n                                    <chq-toggle [checked]=\"item.options.isTimerEnabled\" [name]=\"'timer'\"\n                                        (ToggleChange)=\"onToggleChange(item, $event)\"></chq-toggle>\n                                </div>\n                                <div class=\"toggle\" *ngIf=\"isBodyOrPaint\">\n                                    <label class=\"label-toggle\">{{'damage_detection' | translate}}</label>\n                                    <chq-toggle [checked]=\"item.options.isAIAnalysisEnabled\" [name]=\"'damageDetection'\"\n                                        (ToggleChange)=\"onToggleChange(item, $event)\"\n                                        [ngClass]=\"{'disable':!(item.options && item.options.uploadImagesOptions !== null && item.options.uploadImagesOptions.minNumOfPhotos >= 1 && isBodyOrPaint)}\"\n                                        [disabled]=\"!(item.options && item.options.uploadImagesOptions !== null && item.options.uploadImagesOptions.minNumOfPhotos >= 1 && isBodyOrPaint)\"></chq-toggle>\n                                </div>\n                            </div>\n                            <div class=\"btn-group\">\n                                <chq-button class=\"editbtn\" (click)=\"openJobPopup(item)\"\n                                    [buttonModel]=\"editButtonModel\"></chq-button>\n                                <chq-button class=\"dltbtn\" (click)=\"deleteJob(item.jobGuid)\"\n                                    [buttonModel]=\"deleteButtonModel\"></chq-button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"job-content fx-1\" *ngFor=\"let data of filterRepairtypes(item.repairServiceTypeTasks)\">\n                <ng-container\n                    *ngIf=\"item.repairServiceTypeTasks && item.repairServiceTypeTasks.length ; else elseTemplate\">\n                    <table class=\"table-item\">\n                        <tr class=\"table-header\">\n                            <th class=\"frame\">{{data.name}}</th>\n                        </tr>\n                        <tr *ngFor=\"let data2 of data.tasks\">\n                            <td (click)=\"handleCellClicked(item, data2)\">{{data2.name}}</td>\n                        </tr>\n                        <tr *ngIf=\"data.tasks.length !== 0; else elseTemplate\" class=\"plus-btn-sticky\">\n                            <td class=\"plus-btn-border\">\n                                <div class=\"plus-buttons-block\">\n                                    <mat-icon [ngClass]=\"{'disable':getTasksLength(item) >= 20 }\" class=\"vector\"\n                                        [svgIcon]=\"'plus-active'\" (click)=\"openAddTaskPopup(item.jobGuid, false, item, data)\"></mat-icon>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </ng-container>\n                <ng-template #elseTemplate>\n                    <table class=\"table-item\">\n                        <tr class=\"plus-btn-block\">\n                            <td class=\"plus-btn-border remove-top-border\">\n                                <div class=\"add-task-buttons-block\">\n                                    <mat-icon [svgIcon]=\"'plus-active'\"\n                                        (click)=\"openAddTaskPopup(item.jobGuid, false, item, data)\"></mat-icon>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </ng-template>\n            </div>\n            <div class=\"right-container\">\n                <div class=\"nav-right-toggle\">\n                    <mat-icon [ngClass]=\"{'disable':lastIndex === repairTypes.length - 1}\" [svgIcon]=\"'dropdown'\"\n                        (click)=\"rightClick()\"></mat-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"no-data-wrapper\" *ngIf=\"jobsLength === 0 && !CallingAPI\">\n        <div class=\"no-data-content\">\n            <img src=\"assets/img/no-data.png\" alt=\"\">\n            <span>{{'no_result_found' | translate}}</span>\n            <span>{{'could_not_find_any_data' | translate}}.</span>\n        </div>\n    </div>\n\n    <div class=\"footer-full-wrapper\">\n        <div class=\"footer-image-wrapper\">\n            <div class=\"image-wrapper\">\n                <img src=\"assets/img/addenda-repair.png\" />\n            </div>\n        </div>\n    </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Route, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { VersionControlResolver } from 'src/app/resolvers/versionControl.resolver';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { WidgetsModule } from 'src/app/widgets/chq-widgets.module';\nimport { BookingTypeComponent } from './booking-type/booking-type.component';\nimport { JobsTasksComponent } from './jobs-tasks/jobs-tasks.component';\nimport { OperationsLayoutComponent } from './operations-layout/operations-layout.component';\nimport { RepairTypeComponent } from './repair-type/repair-type.component';\nimport { SchedulingComponent } from './scheduling/scheduling.component';\nimport { FormsModule } from '@angular/forms';\n\nconst casesRoutes: Route[] = [\n  {\n    path: '', \n    component: BookingTypeComponent,\n    resolve: { version: VersionControlResolver }\n  },\n  { \n    path: 'repair-type', \n    component: RepairTypeComponent, \n    resolve: { version: VersionControlResolver }\n  },\n  { \n    path: 'jobs-tasks', \n    component: JobsTasksComponent, \n    resolve: { version: VersionControlResolver }\n  },\n  { \n    path: 'scheduling', \n    component: SchedulingComponent, \n    resolve: { version: VersionControlResolver }\n  },\n];\n\n@NgModule({\n  declarations: [\n    OperationsLayoutComponent,\n    BookingTypeComponent,\n    RepairTypeComponent,\n    JobsTasksComponent,\n    SchedulingComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(casesRoutes),\n    WidgetsModule,\n    SharedModule,\n    MatDatepickerModule,\n    MatIconModule,\n    TranslateModule,\n    FormsModule\n  ],\n  exports: [ RouterModule, OperationsLayoutComponent,\n    MatDatepickerModule ]\n})\nexport class OperationsModule { }\n","import { Component } from '@angular/core';\nimport { RepairTypeFormModel } from 'src/app/model/chq-settings-model';\nimport { ChqWidgetsButtonModel } from 'src/app/model/chq-widgets-button-model';\nimport { BookingService } from 'src/app/services/booking/booking.service';\nimport { CommonService } from 'src/app/services/common/common.service';\nimport { MonitorService } from 'src/app/services/monitor-service/monitor.service';\nimport { SettingsService } from 'src/app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-repair-type',\n  templateUrl: './repair-type.component.html',\n  styleUrls: [ './repair-type.component.scss' ]\n})\nexport class RepairTypeComponent {\n\n  public saveButtonModel: ChqWidgetsButtonModel = {\n    label: 'save',\n    type: 'disabled',\n    onclick: this.submitForm.bind(this)\n  }\n\n  public repairTypesData: any = [];\n  bookingRepairId: any;\n  checkedRepairTypes: number[] = []\n  showToast: boolean = true;\n\n  /**\n  Constructor for the class.\n  @constructor\n  @param {CommonService} commonService - Service for common operations.\n  @param {MonitorService} monitorService - Service for monitoring operations.\n  @param {ChangeDetectorRef} changeDetectorRef - Service to detect changes\n*/\n  constructor(\n    private bookingService: BookingService,\n    private commonService: CommonService,\n    public monitorService: MonitorService,\n    private settingsService: SettingsService,\n  ) { }\n\n  /**\n   * on init\n   */\n  async ngOnInit(): Promise<void> {\n    this.monitorService.logEvent('ngOnInit', [ 'RepairTypeComponent', 'addenda-repair' ]);\n    this.commonService.showLoading();\n    this.getRepairTypes();\n  }\n\n  /**\n   * get repair Types\n   */\n  getRepairTypes(): void {\n    this.bookingService.getRepairTypes().subscribe({\n      next: (result: any) => {\n        if (result) {\n          this.repairTypesData = result.data\n          this.getSettings();\n        }\n      },\n      error: (err: any) => {\n        this.commonService.hideLoading();\n        this.monitorService.logException(err);\n      }\n    });\n  }\n\n  /**\n   * get settings\n   */\n  getSettings(): void {\n    this.settingsService.getSettings().subscribe({\n      next: (result: any) => {\n        if (result && result.data && result.data.repairType && result.data.repairType.bookingRepairId) {\n          this.bookingRepairId = result.data.repairType.bookingRepairId\n        }\n        if (result && result.data && result.data.repairType && result.data.repairType.repairTypes) {\n          this.repairTypesData = this.repairTypesData.map((ele) => {\n            return {\n              ...ele, checked: result.data.repairType.repairTypes.includes(ele.id)\n            }\n          });\n          this.checkedRepairTypes = result.data.repairType.repairTypes;\n          this.settingsService.isJobTasksEnabled.emit(result.data.repairType.repairTypes.length > 0 ? true : false)\n        }\n        this.commonService.hideLoading();\n      },\n      error: (err: any) => {\n        this.commonService.hideLoading();\n        this.monitorService.logException(err);\n      }\n    });\n  }\n\n  /**\n   * on toggle change\n   */\n  onToggleChange(e): void {\n    if (e.checked && !this.checkedRepairTypes.includes(parseInt(e.name))) {\n      this.checkedRepairTypes.push(parseInt(e.name));\n    } else {\n      this.checkedRepairTypes = this.checkedRepairTypes.filter(id => id !== parseInt(e.name));\n    }\n    this.saveButtonModel.type = this.checkedRepairTypes.length ? 'primary' : 'disabled'\n  }\n\n  /**\n   * check for form validation\n   * @returns {void}\n   */\n  isRepairTypeFormValid(): boolean {\n    const isValid = this.checkedRepairTypes.length ? true : false;\n    return isValid;\n  }\n\n  /**\n     Submits the form data to the server.\n     @returns {void}\n   */\n  submitForm(): void {\n    if (!this.isRepairTypeFormValid() || this.saveButtonModel.type === 'disabled') {\n      return;\n    }\n    this.monitorService.logEvent('submitForm', [ 'RepairTypeComponent', 'addenda-repair' ]);\n    const repairTypeData: RepairTypeFormModel =\n    {\n      bookingRepairId: this.bookingRepairId,\n      repairtypes: this.checkedRepairTypes\n    }\n    this.commonService.showLoading();\n    this.settingsService.saveNewRepairType(repairTypeData).subscribe({\n      next: (result: any) => {\n        if(this.showToast){\n          this.commonService.showInfoToast(5000, 'New changes will be applied only to new bookings.');\n        }\n        this.settingsService.isJobTasksEnabled.emit(this.checkedRepairTypes.length > 0 ? true : false)\n        this.commonService.hideLoading();\n      },\n      error: (err: any) => {\n        this.commonService.hideLoading();\n        this.monitorService.logException(err);\n      }\n    });\n  }\n\n  /**\n * on Destroy\n */\n  ngOnDestroy(): void {\n    this.showToast = false;\n    this.submitForm()\n  }\n}\n","<div class=\"page-container-repair-type\">\n    <div class=\"repair-type-wrapper\">\n        <form>\n            <div class=\"main-div\">\n                <div class=\"repair-type-title\">\n                    {{ 'repair_type_msg' | translate }}\n                </div>\n                <div class=\"parent-control\">\n                    <div class=\"left-control\">\n                        <ng-container *ngFor=\"let item of repairTypesData\">\n                            <div class=\"toggle\">\n                                <label class=\"label-toggle\">{{item.name}}</label>\n                                <div class=\"toggle-button\"><chq-toggle [checked]=\"item.checked || false\"\n                                        [name]=\"item.id\" (ToggleChange)=\"onToggleChange($event)\"></chq-toggle></div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"footer-full-wrapper\">\n        <div class=\"footer-image-wrapper\">\n            <div class=\"image-wrapper\">\n                <img src=\"assets/img/addenda-repair.png\" />\n            </div>\n        </div>\n        <div>\n            <chq-button class=\"footer-save-button-wrapper\" [buttonModel]=\"saveButtonModel\"></chq-button>\n        </div>\n    </div>\n</div>","/* eslint-disable max-len */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as dayjs from 'dayjs';\nimport * as customParseFormat from 'dayjs/plugin/customParseFormat';\nimport * as utc from 'dayjs/plugin/utc';\nimport * as weekday from 'dayjs/plugin/weekday';\nimport { firstValueFrom } from 'rxjs';\nimport { CommonService } from 'src/app/services/common/common.service';\nimport { SettingsService } from 'src/app/services/settings/settings.service';\ndayjs.extend(customParseFormat)\ndayjs.extend(weekday)\ndayjs.extend(utc)\n\nconst timeSlotMin = 30;\n\n@Component({\n  selector: 'app-scheduling',\n  templateUrl: './scheduling.component.html',\n  styleUrls: [ './scheduling.component.scss' ]\n})\nexport class SchedulingComponent implements OnInit {\n  localTimeZoneString = dayjs('2023-01-01T00:00:00Z').format('HH:mm A')\n  dateTimeFormats = {\n    dateTimeUTC12h: 'YYYY-MM-DD hh:mm A Z',\n    dateTimeUTC24h: 'YYYY-MM-DD HH:mm Z',\n    dateTime12h: 'YYYY-MM-DD hh:mm A',\n    dateTime24h: 'YYYY-MM-DD HH:mm',\n    time12h: 'hh:mm A'\n  }\n  daysList = { 'MON': 'Monday', 'TUE': 'Tuesday', 'WED': 'Wednesday', 'THU': 'Thursday', 'FRI': 'Friday', 'SAT': 'Saturday', 'SUN': 'Sunday' }\n  calendarData: any[] = []\n  employee: any = { workSchedules: [], offTimes: [] };\n  public employeeInputModel = [];\n  employeeOffTimeType = [];\n\n  workDays = [\n    { day: 'MON', checked: true },\n    { day: 'TUE', checked: true },\n    { day: 'WED', checked: true },\n    { day: 'THU', checked: true },\n    { day: 'FRI', checked: true },\n    { day: 'SAT', checked: true },\n    { day: 'SUN', checked: false },\n  ]\n  offDays = [\n    { day: 'MON', date: '15', checked: true },\n    { day: 'TUE', date: '16', checked: true },\n    { day: 'WED', date: '17', checked: true },\n    { day: 'THU', date: '18', checked: true },\n    { day: 'FRI', date: '19', checked: true },\n    { day: 'SAT', date: '20', checked: true },\n    { day: 'SUN', date: '21', checked: false },\n  ]\n\n  scheduleType = 'work'\n  workStartDateInputModel = {\n    label: 'start_date',\n    type: 'date',\n    name: 'workStart',\n    class: 'col-1',\n    placeHolder: 'enter_start_date',\n    minDate: new Date(),\n    value: new Date()\n  }\n\n  offStartDateInputModel = {\n    label: 'start',\n    type: 'date',\n    name: 'offStart',\n    class: 'col-1',\n    placeHolder: 'enter_start_date',\n    minDate: new Date(),\n    value: new Date()\n  }\n\n  offEndDateInputModel = {\n    label: 'end',\n    type: 'date',\n    name: 'offEnd',\n    class: 'col-1',\n    placeHolder: 'enter_end_date',\n    minDate: new Date(),\n    value: new Date()\n  }\n\n  startTimePickerModel = {\n    label: 'job_start_time',\n    type: 'time',\n    name: 'jobStart',\n    class: 'col-6',\n    placeHolder: 'time',\n    value: dayjs('2023-01-01 08:00'),\n    interval: timeSlotMin\n  }\n\n  endTimePickerModel = {\n    label: 'job_end_time',\n    type: 'time',\n    name: 'jobStart',\n    class: 'col-6',\n    placeHolder: 'time',\n    value: dayjs('2023-01-01 18:00'),\n    interval: timeSlotMin\n  }\n\n  workStartTimePickerModels = []\n  workEndTimePickerModels = []\n  offStartTimePickerModels = []\n  offEndTimePickerModels = []\n\n  offTimeInputModels = {\n    breakType: {\n      label: 'break_type',\n      type: 'select',\n      name: 'breakType',\n      class: 'col-6',\n      placeHolder: 'select_break_type',\n      value: '',\n      displayValue: 'label',\n      fieldValue: 'value',\n      selectedOption: { durationUnit: '' },\n      options: [],\n      isMultiSelect: false\n    },\n    frequencyWeekly: {\n      label: 'frequency',\n      type: 'select',\n      name: 'frequency',\n      class: 'col-6',\n      placeHolder: 'select_repeat_frequency',\n      value: '',\n      displayValue: 'label',\n      fieldValue: 'value',\n      selectedOption: { label: 'Do Not Repeat' },\n      options: [ { label: 'Do Not Repeat' }, { label: 'Repeat Every Week' } ],\n      isMultiSelect: false\n    },\n    frequencyYearly: {\n      label: 'frequency',\n      type: 'select',\n      name: 'frequency',\n      class: 'col-6',\n      placeHolder: 'select_repeat_frequency',\n      value: '',\n      displayValue: 'label',\n      fieldValue: 'value',\n      selectedOption: { label: 'Do Not Repeat' },\n      options: [ { label: 'Do Not Repeat' }, { label: 'Repeat Every Year' } ],\n      isMultiSelect: false\n    },\n    start: {\n      label: 'start',\n      type: 'date',\n      name: 'offStart',\n      class: 'col-6',\n      placeHolder: 'enter_start_date',\n      minDate: new Date(),\n      maxDate: new Date(),\n      value: new Date()\n    },\n    end: {\n      label: 'end',\n      type: 'date',\n      name: 'offEnd',\n      class: 'col-6',\n      placeHolder: 'enter_end_date',\n      minDate: new Date(),\n      maxDate: new Date(),\n      value: new Date()\n    },\n  }\n\n  currentDate = new Date();\n  selectedCalendarDate;\n  editEmployeeFormValid: boolean = true;\n  timeSlotMin = timeSlotMin;\n  weekendDate = {};\n  holiday = {};\n  dinner = {};\n\n  /**\n   * Creates an instance of SchedulingComponent.\n   * @constructor\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private settingsService: SettingsService,\n    private commonService: CommonService\n  ) { }\n\n  /**\n   * ngOnInit\n   */\n  ngOnInit(): void {\n    this.commonService.userProfileData.subscribe({\n      next: (profileResult) => {\n        const employeeId = profileResult.data.userId;\n        this.commonService.showLoading();\n        firstValueFrom(this.settingsService.getEmployeeDetails(employeeId)).then((response) => {\n          this.employee = response.data;\n          this.employee.workSchedules = this.convertTimeToLocalTimeZone(this.employee.workSchedules, 'work');\n          this.employee.offTimes = this.convertTimeToLocalTimeZone(this.employee.offTimes, 'offtime');\n          this.commonService.hideLoading();\n        }).catch(() => {\n          this.commonService.hideLoading();\n        });\n        this.settingsService.getEmployeeOffTimeType().subscribe({\n          next: (result) => {\n            this.offTimeInputModels.breakType.options = result['data'].map((item) => {\n              item.type = item.description.indexOf('Days') != -1 ? 'Days' : 'Hours';\n              item.label = item.name;\n              return item;\n            }).filter(x => x.name.toLowerCase() != 'unpaid leave' && x.name.toLowerCase() != 'paid leave');\n\n            //this.offTimeInputModels.breakType.selectedOption = this.offTimeInputModels.breakType.options[0];\n          }\n        })\n\n        this.workDays.forEach((item) => {\n          this.workStartTimePickerModels.push({ ...this.startTimePickerModel })\n          this.workEndTimePickerModels.push({ ...this.endTimePickerModel })\n          this.offStartTimePickerModels.push({ ...this.startTimePickerModel, value: dayjs('2023-01-01 13:00 ') })\n          this.offEndTimePickerModels.push({ ...this.endTimePickerModel, value: dayjs('2023-01-01 14:00') })\n        })\n      }\n    })\n  }\n\n  /**\n   * toggleDays\n   * @param {*} index\n   */\n  toggleDays(type, index): void {\n    if (type == 'work') {\n      this.workDays[index].checked = !this.workDays[index].checked;\n    } else if (type == 'off') {\n      this.offDays[index].checked = !this.offDays[index].checked;\n    }\n  }\n\n  /**\n   * updateTimePickers\n   *\n   * @param {*} event\n   * @param {*} type\n   * @param {*} startOrEnd\n   * @param {*} index\n   */\n  updateTimePickers(event, type, startOrEnd, index): void {\n    console.log(event, type, startOrEnd, index);\n    if (type === 'work') {\n      if (startOrEnd === 'start') {\n        this.workStartTimePickerModels[index].value = event.value;\n      } else {\n        this.workEndTimePickerModels[index].value = event.value;\n      }\n    } else if (type === 'off') {\n      if (startOrEnd === 'start') {\n        this.offStartTimePickerModels[index].value = event.value;\n      } else {\n        this.offEndTimePickerModels[index].value = event.value;\n      }\n    }\n  }\n\n  /**\n   * updateDatePickers\n   * @param {*} event\n   * @param {*} type\n   * @param {*} startOrEnd\n   */\n  updateDatePickers(event, type, startOrEnd): void {\n    console.log(event, type, startOrEnd);\n    if (type === 'work') {\n      this.workStartDateInputModel.value = event.value;\n    } else if (type === 'off') {\n      if (startOrEnd === 'start') {\n        this.offStartDateInputModel.value = event.value;\n      } else {\n        this.offEndDateInputModel.value = event.value;\n      }\n    }\n  }\n\n  /**\n   * showConfirmApplyDialog\n   * @param {*} type\n   */\n  showConfirmApplyDialog(type): void {\n    const pheader = 'Apply to entire Team ?';\n    const message = 'Are you sure you want to apply this change to the entire team';\n    const dialogRef = this.commonService.openConfirmYesNoDialog(pheader, message);\n    dialogRef.afterClosed().subscribe((res: boolean) => {\n      if (res) {\n        if (type === 'work') {\n          this.addNewWorkHoursForTeam();\n        } else if (type === 'off') {\n          this.addNewOffTimeForTeam();\n        }\n      }\n    });\n  }\n\n  /**\n   * breakTypeChange\n   * @param {*} $event\n   */\n  offTimeInputChange($event, type): void {\n    console.log($event, type);\n    this.offTimeInputModels[type] = { ...this.offTimeInputModels[type], selectedOption: $event.value };\n    //    this.offTimeInputModels.breakType.selectedOption = $event.value;\n  }\n  \n  /**\n   * checkDayOverlapInUTCTime\n   * @param {*} dateTime\n   * @returns {boolean}\n   */\n  isDayOverlapInUTCTime(dateTime): boolean{\n    let returnFlag = false;\n    console.log(dayjs(dateTime).utc().format('HH:MM') > dayjs(dateTime).format('HH:MM'))\n    if(dayjs(dateTime).utc().format('HH:MM') > dayjs(dateTime).format('HH:MM')){\n      returnFlag = true;\n    }\n    return returnFlag;\n  }\n\n  /**\n   * addNewWorkHours\n   */\n  addNewWorkHours(): void {\n    if (this.employee.workSchedules.length >= 10) {\n      this.showErrorMessage('Max Work Hours Reached', 'Cannot Add more than 10 Work Hours');\n      return;\n    }\n    this.commonService.showLoading();\n    const data = {\n      'workDays': [],\n      'effectiveDate': dayjs(this.workStartDateInputModel.value).format('YYYY-MM-DD'),\n    }\n    for(const index in this.workDays) {\n      const item = this.workDays[index];\n      if (item.checked) {\n        if(this.isDayOverlapInUTCTime(this.workStartTimePickerModels[index].value)){\n          this.showErrorMessage('Error', 'Job Start Time should be '+ this.localTimeZoneString + ' and beyond');\n          this.commonService.hideLoading();\n          return;\n        }\n        if(this.isDayOverlapInUTCTime(this.workEndTimePickerModels[index].value)){\n          this.showErrorMessage('Error', 'Job End Time should be '+ this.localTimeZoneString + ' and beyond');\n          this.commonService.hideLoading();\n          return;\n        }\n        data.workDays.push({\n          day: this.daysList[item.day],\n          timeSlots: [ {\n            startTime: dayjs(this.workStartTimePickerModels[index].value).utc().format('HH:mm'),\n            endTime: dayjs(this.workEndTimePickerModels[index].value).utc().format('HH:mm')\n          } ]\n        })\n      }\n    }\n    this.settingsService.addNewWorkHours(this.employee.employeeGuid, data).subscribe({\n      next: (result) => {\n        this.commonService.hideLoading();\n        if (result.success) {\n          this.showSuccessMessage(result.message, result.message);\n          this.employee.workSchedules = this.convertTimeToLocalTimeZone(result.data.workSchedules, 'work');\n        } else if (result.errorMessages) {\n          this.showErrorMessage('Error', result.errorMessages);\n        } else {\n          this.showErrorMessage('Error', result.Message);\n        }\n      },\n      error: (error) => {\n        this.commonService.hideLoading();\n      }\n    })\n  }\n\n  /**\n   * addNewWorkHoursForTeam\n   */\n  addNewWorkHoursForTeam(): void {\n    this.commonService.showLoading();\n    const data = {\n      'workDays': [],\n      'effectiveDate': dayjs(this.workStartDateInputModel.value).format('YYYY-MM-DD'),\n    }\n    for(const index in this.workDays) {\n      const item = this.workDays[index];\n      if (item.checked) {\n        if(this.isDayOverlapInUTCTime(this.workStartTimePickerModels[index].value)){\n          this.showErrorMessage('Error', 'Job Start Time should be '+ this.localTimeZoneString + ' and beyond');\n          this.commonService.hideLoading();\n          return;\n        }\n        if(this.isDayOverlapInUTCTime(this.workEndTimePickerModels[index].value)){\n          this.showErrorMessage('Error', 'Job End Time should be '+ this.localTimeZoneString + ' and beyond');\n          this.commonService.hideLoading();\n          return;\n        }\n        data.workDays.push({\n          day: this.daysList[item.day],\n          timeSlots: [ {\n            startTime: dayjs(this.workStartTimePickerModels[index].value).utc().format('HH:mm'),\n            endTime: dayjs(this.workEndTimePickerModels[index].value).utc().format('HH:mm')\n          } ]\n        })\n      }\n    }\n\n    this.settingsService.addNewWorkHoursForTeam(this.employee.employeeGuid, data).subscribe({\n      next: (result) => {\n        this.commonService.hideLoading();\n        if (result.success) {\n          this.showSuccessMessage(result.message, result.data);\n        }\n      },\n      error: (error) => {\n        this.commonService.hideLoading();\n      }\n    })\n  }\n\n  /**\n   * checkAddOffTimeAllowed\n   */\n  checkAddOffTimeAllowed(): void {\n    console.log(this.offTimeInputModels.breakType.selectedOption.durationUnit);\n    let isOverlap = false;\n    this.employee.workSchedules.forEach((workSchedule, index) => {\n      if (this.employee.workSchedules[index + 1] == undefined) {\n        if (new Date(workSchedule['effectiveDate']) <= new Date(this.offStartDateInputModel['formControl'].value)) {\n          isOverlap = true;\n          return;\n        }\n      } else {\n        if (this.employee.workSchedules[index + 1] && new Date(workSchedule['effectiveDate']) <= new Date(this.offStartDateInputModel['formControl'].value) && new Date(this.employee.workSchedules[index + 1]['effectiveDate']) >= new Date(this.offEndDateInputModel['formControl'].value)) {\n          isOverlap = true;\n          return;\n        }\n      }\n    })\n    if (isOverlap) {\n      const dialogRef = this.commonService.openConfirmationOkDialog('Oops!', 'The employee selected is already allocated to a job in the selected period, please check again.')\n      dialogRef.afterClosed().subscribe((result) => {\n        if (result) {\n          this.addNewOffTime();\n        }\n      });\n    } else {\n      this.addNewOffTime();\n    }\n  }\n\n  /**\n   * addNewOffTime\n   */\n  addNewOffTime(): void {\n    this.commonService.showLoading();\n    const data = {\n      'offDays': [],\n      'offTimeTypeId': this.offTimeInputModels.breakType.selectedOption['id'],\n      'startDate': dayjs(this.offStartDateInputModel['formControl'].value).format('YYYY-MM-DD'),\n      'endDate': dayjs(this.offEndDateInputModel['formControl'].value).format('YYYY-MM-DD')\n    };\n    if (this.offTimeInputModels.breakType.selectedOption['durationUnit'] === 'Hours') {\n      for(const index in this.offDays) {\n        const item = this.offDays[index];\n        if (item.checked) {\n          if(this.isDayOverlapInUTCTime(this.offStartTimePickerModels[index].value)){\n            this.showErrorMessage('Error', 'Start Time should be '+ this.localTimeZoneString + ' and beyond');\n            this.commonService.hideLoading();\n            return;\n          }\n          if(this.isDayOverlapInUTCTime(this.offEndTimePickerModels[index].value)){\n            this.showErrorMessage('Error', 'End Time should be '+ this.localTimeZoneString+ ' and beyond');\n            this.commonService.hideLoading();\n            return;\n          }\n          data.offDays.push({\n            day: this.daysList[item.day],\n            startTime: dayjs(this.offStartTimePickerModels[index].value).utc().format('HH:mm'),\n            endTime: dayjs(this.offEndTimePickerModels[index].value).utc().format('HH:mm')\n          })\n        }\n      }\n    } else {\n      delete data['offDays'];\n    }\n    console.log(data, this.offStartDateInputModel, this.offEndDateInputModel, this.offTimeInputModels.breakType);\n    //return;\n    this.settingsService.addNewOffTime(this.employee.employeeGuid, data).subscribe({\n      next: (result) => {\n        this.commonService.hideLoading();\n        if (result.success) {\n          this.showSuccessMessage(result.message, result.message);\n          this.employee.offTimes = this.convertTimeToLocalTimeZone(result.data.offTimes, 'offtime');\n        } else if (result.errorMessages) {\n          this.showErrorMessage('Error', result.errorMessages);\n        } else {\n          this.showErrorMessage('Error', result.Message);\n        }\n      },\n      error: (error) => {\n        this.commonService.hideLoading();\n      }\n    })\n  }\n\n  /**\n   * addNewOffTime\n   */\n  addNewOffTimeForTeam(): void {\n    this.commonService.showLoading();\n    const data = {\n      'offDays': [],\n      'offTimeTypeId': this.offTimeInputModels.breakType.selectedOption['id'],\n      'startDate': dayjs(this.offStartDateInputModel['formControl'].value).format('YYYY-MM-DD'),\n      'endDate': dayjs(this.offEndDateInputModel['formControl'].value).format('YYYY-MM-DD')\n    };\n    if (this.offTimeInputModels.breakType.selectedOption['durationUnit'] === 'Hours') {\n      for(const index in this.offDays) {\n        const item = this.offDays[index];\n        if (item.checked) {\n          if(this.isDayOverlapInUTCTime(this.offStartTimePickerModels[index].value)){\n            this.showErrorMessage('Error', 'Start Time should be '+ this.localTimeZoneString + ' and beyond');\n            this.commonService.hideLoading();\n            return;\n          }\n          if(this.isDayOverlapInUTCTime(this.offEndTimePickerModels[index].value)){\n            this.showErrorMessage('Error', 'End Time should be '+ this.localTimeZoneString + ' and beyond');\n            this.commonService.hideLoading();\n            return;\n          }\n          data.offDays.push({\n            day: this.daysList[item.day],\n            startTime: dayjs(this.offStartTimePickerModels[index].value).utc().format('HH:mm'),\n            endTime: dayjs(this.offEndTimePickerModels[index].value).utc().format('HH:mm')\n          })\n        }\n      }\n    } else {\n      delete data['offDays'];\n    }\n    console.log(data, this.offStartDateInputModel, this.offEndDateInputModel, this.offTimeInputModels.breakType);\n    //return;\n    this.settingsService.addNewOffTimeForTeam(this.employee.employeeGuid, data).subscribe({\n      next: (result) => {\n        this.commonService.hideLoading();\n        if (result.success) {\n          this.showSuccessMessage(result.message, result.data);\n        } else if (result.errorMessages) {\n          this.showErrorMessage('Error', result.errorMessages);\n        } else {\n          this.showErrorMessage('Error', result.Message);\n        }\n      },\n      error: (error) => {\n        this.commonService.hideLoading();\n      }\n    })\n  }\n\n\n  /**\n   * deleteWorkHours\n   */\n  deleteWorkHours(workScheduleGuid: string): void {\n    this.commonService.showLoading();\n    this.settingsService.deleteWorkHours(this.employee.employeeGuid, workScheduleGuid).subscribe({\n      next: (result) => {\n        this.commonService.hideLoading();\n        if (result.success) {\n          this.showSuccessMessage(result.message, result.message);\n          this.employee.workSchedules = this.convertTimeToLocalTimeZone(result.data.workSchedules, 'work');\n        } else {\n          this.showErrorMessage('Error', result.Message);\n        }\n      },\n      error: (error) => {\n        this.commonService.hideLoading();\n      }\n    })\n  }\n\n  /**\n   * deleteOffTime\n   */\n  deleteOffTime(offTimeGuid: string): void {\n    this.commonService.showLoading();\n    this.settingsService.deleteOffTime(this.employee.employeeGuid, offTimeGuid).subscribe({\n      next: (result) => {\n        this.commonService.hideLoading();\n        if (result.success) {\n          this.showSuccessMessage(result.message, result.message);\n          this.employee.offTimes = this.convertTimeToLocalTimeZone(result.data.offTimes, 'offtime');\n        } else {\n          this.showErrorMessage('Error', result.Message);\n        }\n      },\n      error: (error) => {\n        this.commonService.hideLoading();\n      }\n    })\n  }\n\n  /**\n   * appointmentTimeFormat\n   *\n   * @param {string} dateTime\n   * @returns {string}\n   */\n  appointmentTimeFormat(dateTime: string): string {\n    return dayjs(dateTime).format('hh:mm A');\n  }\n\n  /**\n   * onOptionChanged Calendar\n   *\n   * @param {*} event\n   */\n  onOptionChanged(event): void {\n    console.log(event);\n    if (event.name === 'currentDate') {\n      const currentDate = dayjs(event.value).weekday(1).format('YYYY-MM-DD');\n      this.selectedCalendarDate = currentDate;\n    }\n  }\n\n  /**\n   * showErrorMessage\n   * @param {*} title\n   * @param {*} desc\n   */\n  showErrorMessage(title, desc): void {\n    this.commonService.showToast(400, desc);\n  }\n\n  /**\n   * showSuccessMessage\n   * @param {*} title\n   * @param {*} desc\n   */\n  showSuccessMessage(title, desc): void {\n    this.commonService.showInfoToast(5000, desc);\n  }\n\n  /**\n   * convertTimesToLocal\n   * @param {*} obj\n   * @param {*} type\n   */\n  convertTimeToLocalTimeZone(obj, type: string): any {\n    if (!obj) return null;\n    if (type === 'work') {\n      const data = obj.map((workSchedule) => {\n        return {\n          ...workSchedule, titles: workSchedule.titles?.map((title) => {\n            if (!title.hours || title.hours.indexOf(' - ') === -1) return title;\n            const hoursArray = title.hours.split(' - ');\n            hoursArray[0] = dayjs('2023-01-01 ' + hoursArray[0] + ' Z', this.dateTimeFormats.dateTimeUTC12h).format('hh:mm A');\n            hoursArray[1] = dayjs('2023-01-01 ' + hoursArray[1] + ' Z', this.dateTimeFormats.dateTimeUTC12h).format('hh:mm A');\n            return { ...title, hours: hoursArray.join(' - ') };\n          })\n        }\n      })\n      return data;\n    } else if (type === 'offtime') {\n      const data = obj.map((offTime) => {\n        if (offTime.titles && offTime.titles.length > 0) {\n          return {\n            ...offTime, titles: offTime.titles.map((title) => {\n              if (!title.hours || title.hours.indexOf(' - ') === -1) return title;\n              const hoursArray = title.hours.split(' - ');\n              hoursArray[0] = dayjs('2023-01-01 ' + hoursArray[0] + ' Z', this.dateTimeFormats.dateTimeUTC12h).format('hh:mm A');\n              hoursArray[1] = dayjs('2023-01-01 ' + hoursArray[1] + ' Z', this.dateTimeFormats.dateTimeUTC12h).format('hh:mm A');\n              return { ...title, hours: hoursArray.join(' - ') };\n            })\n          }\n        } else {\n          return offTime;\n        }\n      })\n      return data;\n    } else {\n      return obj;\n    }\n  }\n}\n","<div class=\"page-container-booking-type\">\n    <div class=\"title\">\n        {{'team_scheduling' | translate}}\n    </div>\n    <div class=\"booking-type-wrapper\">\n        <form class=\"form-container\">\n            <div class=\"row\">\n                <div class=\"col-12 radio\">\n                    <span class=\"radio-option\">\n                        <input type=\"radio\" name=\"scheduleType-work\" [(ngModel)]=\"scheduleType\" value=\"work\" />\n                        <label>{{'work_schedule' | translate}}</label>\n                    </span>\n                    <span class=\"radio-option\">\n                        <input type=\"radio\" name=\"scheduleType-off\" [(ngModel)]=\"scheduleType\" value=\"off\" />\n                        <label>{{'off_time' | translate}}</label>\n                    </span>\n\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"scheduleType === 'work'\">\n                <div class=\"mobile-width-100 col-12\">\n                    <div class=\"row\" style=\"margin-bottom: 12px;align-items: flex-end;\">\n                        <h3 class=\"col-7\" style=\"font-size: 14px;\">{{'add_edit_work_schedule' | translate}}</h3>\n                        <div class=\"col-5\">\n                            <chq-input [inputModel]=\"workStartDateInputModel\"\n                                (controlOutput)=\"updateDatePickers($event,'work','start')\"></chq-input>\n                        </div>\n                    </div>\n                    <table class=\"work-days-table\">\n                        <tr *ngFor=\"let item of workDays; let i = index\">\n                            <td><button type=\"button\" (click)=\"toggleDays('work',i)\" class=\"mat-icon toggle-days-button\"\n                                    [ngClass]=\"item.checked ? 'bg-primary text-white' : 'bg-white'\">{{item.day}}</button>\n                            </td>\n                            <td [hidden]=\"!item.checked\">\n                                <chq-input [inputModel]=\"workStartTimePickerModels[i]\"\n                                    (controlOutput)=\"updateTimePickers($event,'work','start',i)\"></chq-input>\n                            </td>\n                            <td [hidden]=\"!item.checked\">\n                                <chq-input [inputModel]=\"workEndTimePickerModels[i]\"\n                                    (controlOutput)=\"updateTimePickers($event,'work','end',i)\"></chq-input>\n                            </td>\n                        </tr>\n                    </table>\n                    <div class=\"row no-margin button-container\">\n                        <button type=\"button\" class=\"btn-primary d-none\"\n                        (click)=\"addNewWorkHours()\">{{'save' | translate}}</button>\n                        <button type=\"button\" class=\"btn-primary\"\n                        (click)=\"showConfirmApplyDialog('work')\">{{'apply_to_the_entire_team' | translate}}</button>\n                    </div>\n\n                </div>\n                <div class=\"mobile-width-100 col-6 work-days-details-table-container d-none\">\n                    <table class=\"work-days-details-table\" cellpadding=\"0\">\n                        <thead>\n                            <tr>\n                                <th>{{'creation_date' | translate}}</th>\n                                <th>{{'start_date' | translate}}</th>\n                                <th class=\"capitalize\">{{'days' | translate}}</th>\n                                <th>{{'hours' | translate}}</th>\n                                <th>{{'action' | translate}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let item of employee.workSchedules\">\n                                <td>{{ item.createdDate }}</td>\n                                <td>{{ item.effectiveDate }}</td>\n                                <td>\n                                    <div *ngFor=\"let title of item.titles\">{{title.days}}</div>\n                                </td>\n                                <td>\n                                    <div *ngFor=\"let title of item.titles\">{{title.hours}}</div>\n                                </td>\n                                <td><mat-icon color=\"red\" [svgIcon]=\"'trash'\"\n                                        (click)=\"deleteWorkHours(item.workScheduleGuid)\"></mat-icon></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"scheduleType === 'off'\">\n                <div class=\"mobile-width-100 col-12 no-padding\">\n                    <div class=\"row no-margin\">\n                        <div class=\"col-12\">\n                            <h3 style=\"font-size: 14px;\">{{'off_time' | translate}}</h3><br>\n                        </div>\n                    </div>\n                    <div class=\"row no-margin\">\n                        <div class=\"col-12\">\n                            <chq-input [inputModel]=\"offTimeInputModels.breakType\"\n                                (controlOutput)=\"offTimeInputChange($event,'breakType')\"></chq-input>\n                        </div>\n                    </div>\n                    <div class=\"row no-margin\" style=\"margin-top: 12px\">\n                        <div class=\"col-6\">\n                            <chq-input [inputModel]=\"offStartDateInputModel\"\n                                (controlOutput)=\"updateDatePickers($event,'off','start')\"></chq-input>\n                        </div>\n                        <div class=\"col-6\">\n                            <chq-input [inputModel]=\"offEndDateInputModel\"\n                                (controlOutput)=\"updateDatePickers($event,'off','end')\"></chq-input>\n                        </div>\n                    </div>\n                    <table class=\"work-days-table\"\n                        *ngIf=\"offTimeInputModels.breakType.selectedOption.durationUnit === 'Hours'\">\n                        <tr *ngFor=\"let item of offDays; let i = index\">\n                            <td><button type=\"button\" (click)=\"toggleDays('off',i)\" class=\"mat-icon toggle-days-button\"\n                                    [ngClass]=\"item.checked ? 'bg-primary text-white' : 'bg-white'\">{{item.day}}</button>\n                            </td>\n                            <td [hidden]=\"!item.checked\">\n                                <chq-input [inputModel]=\"offStartTimePickerModels[i]\"\n                                    (controlOutput)=\"updateTimePickers($event,'off','start',i)\"></chq-input>\n                            </td>\n                            <td [hidden]=\"!item.checked\">\n                                <chq-input [inputModel]=\"offEndTimePickerModels[i]\"\n                                    (controlOutput)=\"updateTimePickers($event,'off','end',i)\"></chq-input>\n                            </td>\n                        </tr>\n                    </table>\n                    <!-- <div class=\"row no-margin\">\n                    <div class=\"col-12\">\n                        <chq-input [inputModel]=\"offTimeInputModels.frequencyWeekly\" *ngIf=\"offTimeInputModels.breakType.selectedOption.durationUnit === 'Hours'\" (controlOutput)=\"offTimeInputChange($event,'frequencyWeekly')\"></chq-input>\n                        <chq-input [inputModel]=\"offTimeInputModels.frequencyYearly\" *ngIf=\"offTimeInputModels.breakType.selectedOption.durationUnit === 'Days'\" (controlOutput)=\"offTimeInputChange($event,'frequencyYearly')\"></chq-input>\n                    </div>\n                </div> -->\n                    <div class=\"row no-margin button-container\">\n                        <button type=\"button\" class=\"btn-primary d-none\"\n                            (click)=\"checkAddOffTimeAllowed()\"\n                            [disabled]=\"!offTimeInputModels.breakType.selectedOption || offTimeInputModels.breakType.selectedOption.durationUnit === ''\">{{'save' | translate}}</button>\n                        <button type=\"button\" class=\"btn-primary\"\n                            (click)=\"showConfirmApplyDialog('off')\" [disabled]=\"!offTimeInputModels.breakType.selectedOption || offTimeInputModels.breakType.selectedOption.durationUnit === ''\">{{'apply_to_the_entire_team' | translate}}</button>\n                    </div>\n                </div>\n                <div class=\"mobile-width-100 col-6 off-days-details-table-container d-none\">\n                    <table class=\"work-days-details-table \">\n                        <thead>\n\n                            <tr>\n                                <th>{{'creation_date' | translate}}</th>\n                                <th>{{'start_end_date' | translate}}</th>\n                                <th class=\"capitalize\">{{'days' | translate}}</th>\n                                <th>{{'type' | translate}}</th>\n                                <th>{{'hours' | translate}}</th>\n                                <th>{{'actions' | translate}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let item of employee.offTimes\">\n                                <td>{{ item.createdDate }}</td>\n                                <td>{{ item.startDate }}<br>{{ item.endDate }}</td>\n                                <td>\n                                    <div *ngFor=\"let item of item.titles\">{{item.days}}</div>\n                                </td>\n                                <td>{{ item.label }}</td>\n                                <td>\n                                    <div *ngFor=\"let item of item.titles\">{{item.hours}}</div>\n                                </td>\n                                <td><mat-icon color=\"red\" [svgIcon]=\"'trash'\"\n                                        (click)=\"deleteOffTime(item.offTimeGuid)\"></mat-icon></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"footer-full-wrapper\">\n        <div class=\"footer-image-wrapper\">\n            <div class=\"image-wrapper\">\n                <img src=\"assets/img/addenda-repair.png\" />\n            </div>\n        </div>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}