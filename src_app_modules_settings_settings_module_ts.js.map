{"version":3,"file":"src_app_modules_settings_settings_module_ts.js","mappings":"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","sources":["./src/app/modules/settings/operations/operations-layout/operations-layout.component.ts","./src/app/modules/settings/operations/operations-layout/operations-layout.component.html","./src/app/modules/settings/settings.module.ts","./src/app/resolvers/versionControl.resolver.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { menuItem, operationsMenus } from 'src/app/model/menu';\r\nimport { SettingsService } from 'src/app/services/settings/settings.service';\r\n\r\n@Component({\r\n  selector: 'app-operations-layout',\r\n  templateUrl: './operations-layout.component.html',\r\n  styleUrls: [ './operations-layout.component.scss' ]\r\n})\r\nexport class OperationsLayoutComponent implements OnInit {\r\n\r\n  menuItems = operationsMenus;\r\n  /**\r\n   * constructor\r\n   * @param router\r\n   */\r\n  constructor(\r\n    private router: Router,\r\n    private settingsService: SettingsService,\r\n  ) { }\r\n\r\n  /**\r\n   * on init\r\n   */\r\n  ngOnInit(): void {\r\n    this.settingsService.isRepairChange.subscribe((isRepair: boolean) => {\r\n      // this.menuItems =\r\n      //   operationsMenus.map((ele) => {\r\n      //     if (ele.url === '/settings/repair-type') ele.disabled = !isRepair;\r\n      //     return ele\r\n      //   })\r\n    });\r\n    this.settingsService.isJobTasksEnabled.subscribe((isEnabled: boolean) => {\r\n      this.menuItems =\r\n        operationsMenus.map((ele) => {\r\n          if (ele.url === '/settings/jobs-tasks') ele.disabled = !isEnabled;\r\n          return ele\r\n        })\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * navigate to selected route\r\n   * @param item\r\n   */\r\n  navigate(item: menuItem): void {\r\n    const url = item.url;\r\n    {\r\n      this.router.navigate([ url ]);\r\n    }\r\n  }\r\n}\r\n","<div class=\"layout-container\">\r\n    <div class=\"tab-header fx-0\">\r\n        <chq-tabs [menuItems]=\"menuItems\" (menuItemClick)=\"navigate($event);\" class=\"tabs\"></chq-tabs>\r\n    </div>\r\n    <div class=\"tab-content mh-0 fx-1\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { OperationsLayoutComponent } from './operations/operations-layout/operations-layout.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { VersionControlResolver } from 'src/app/resolvers/versionControl.resolver';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nconst settingsRoutes: Route[] = [\r\n  {\r\n    path: '',\r\n    component: OperationsLayoutComponent,\r\n    loadChildren: () =>\r\n      import('../settings/operations/operations.module').then(\r\n        m => m.OperationsModule\r\n      )\r\n  },\r\n  {\r\n    path: 'employees',\r\n    resolve: { version: VersionControlResolver },\r\n    loadChildren: () =>\r\n      import('../settings/employee/employee.module').then(\r\n        m => m.EmployeeModule\r\n      )\r\n  },\r\n]\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RouterModule.forChild(settingsRoutes),\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class SettingsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { catchError, map, Observable, of } from 'rxjs';\r\nimport { CommonService } from '../services/common/common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VersionControlResolver implements Resolve<Observable<any>> {\r\n  /**\r\n   * contructor\r\n   * @param commonService \r\n   */\r\n  constructor(private commonService: CommonService) { }\r\n  /**\r\n   * resolve the \r\n   * @returns \r\n   */\r\n  resolve(): Observable<any> {\r\n    this.commonService.showLoading();\r\n    return this.commonService.checkVersion().pipe(\r\n      map((res) => {\r\n        this.commonService.hideLoading();\r\n        const localVersion = localStorage.getItem('appVersion');\r\n        const appVersion = res.buildRevision;\r\n        if (localVersion && localVersion != appVersion) {\r\n          localStorage.setItem('appVersion', appVersion);\r\n          setTimeout(() => {\r\n            location.reload();\r\n          }, 10);\r\n          return of('new version available');\r\n        } else {\r\n          localStorage.setItem('appVersion', appVersion);\r\n          return of('new version is not available');\r\n        }\r\n      }),\r\n      catchError(() => {\r\n        this.commonService.hideLoading();\r\n        return of('data not available at this time');\r\n      })\r\n    )\r\n  }\r\n}"],"names":["operationsMenus","OperationsLayoutComponent","constructor","router","settingsService","ngOnInit","isRepairChange","subscribe","isRepair","isJobTasksEnabled","isEnabled","menuItems","map","ele","url","disabled","navigate","item","selectors","decls","vars","consts","template","i0","ctx","CommonModule","RouterModule","SharedModule","VersionControlResolver","TranslateModule","settingsRoutes","path","component","loadChildren","then","m","OperationsModule","resolve","version","EmployeeModule","SettingsModule","forChild","imports","catchError","of","commonService","showLoading","checkVersion","pipe","res","hideLoading","localVersion","localStorage","getItem","appVersion","buildRevision","setItem","setTimeout","location","reload","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}