{"version":3,"file":"src_app_modules_quote_chq-cases_chq-cases_module_ts-es2015.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAC+C;AACsC;AAC/B;AACa;AACZ;AACJ;AACgC;;;AAEnF,MAAM,WAAW,GAAY;IAC3B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8FAAsB;QACjC,OAAO,EAAE,EAAE,OAAO,EAAE,6FAAsB,EAAE;KAC7C;CACF,CAAC;AAYK,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;+GARhB;YACP,yDAAY;YACZ,iEAAa;YACb,6DAAW;YACX,kEAAqB,CAAC,WAAW,CAAC;YAClC,6EAAa;SACd;mIAEU,cAAc,mBATT,8FAAsB,aAEpC,yDAAY;QACZ,iEAAa;QACb,6DAAW,6DAEX,6EAAa;;;;;;;;;;;;;;;;;;;;ACrBsC;;;AAMhD,MAAM,sBAAsB;IACjC;;;OAGG;IACH,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IACrD;;;OAGG;IACH,OAAO;QACL,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,IAAI,CAC3C,yCAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YACjC,MAAM,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACxD,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC;YACrC,IAAI,YAAY,IAAI,YAAY,IAAI,UAAU,EAAE;gBAC9C,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAC/C,UAAU,CAAC,GAAG,EAAE;oBACd,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACpB,CAAC,EAAE,EAAE,CAAC,CAAC;gBACP,OAAO,wCAAE,CAAC,uBAAuB,CAAC,CAAC;aACpC;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAC/C,OAAO,wCAAE,CAAC,8BAA8B,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC,EACF,gDAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YACjC,OAAO,wCAAE,CAAC,iCAAiC,CAAC,CAAC;QAC/C,CAAC,CAAC,CACH;IACH,CAAC;;4FAjCU,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM","sources":["./src/app/modules/quote/chq-cases/chq-cases.module.ts","./src/app/resolvers/versionControl.resolver.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChqCasesTableComponent } from './chq-cases-table/chq-cases-table.component';\nimport { Route, RouterModule } from '@angular/router';\nimport { WidgetsModule } from 'src/app/widgets/chq-widgets.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { IconsModule } from 'src/app/icons.module';\nimport { VersionControlResolver } from 'src/app/resolvers/versionControl.resolver';\n\nconst casesRoutes: Route[] = [\n  { \n    path: '', \n    component: ChqCasesTableComponent,\n    resolve: { version: VersionControlResolver },\n  }\n];\n\n@NgModule({\n  declarations: [ ChqCasesTableComponent ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    IconsModule,\n    RouterModule.forChild(casesRoutes),\n    WidgetsModule,\n  ],\n})\nexport class ChqCasesModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { catchError, map, Observable, of } from 'rxjs';\nimport { CommonService } from '../services/common/common.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VersionControlResolver implements Resolve<Observable<any>> {\n  /**\n   * contructor\n   * @param commonService \n   */\n  constructor(private commonService: CommonService) { }\n  /**\n   * resolve the \n   * @returns \n   */\n  resolve(): Observable<any> {\n    this.commonService.showLoading();\n    return this.commonService.checkVersion().pipe(\n      map((res) => {\n        this.commonService.hideLoading();\n        const localVersion = localStorage.getItem('appVersion');\n        const appVersion = res.buildRevision;\n        if (localVersion && localVersion != appVersion) {\n          localStorage.setItem('appVersion', appVersion);\n          setTimeout(() => {\n            location.reload();\n          }, 10);\n          return of('new version available');\n        } else {\n          localStorage.setItem('appVersion', appVersion);\n          return of('new version is not available');\n        }\n      }),\n      catchError(() => {\n        this.commonService.hideLoading();\n        return of('data not available at this time');\n      })\n    )\n  }\n}"],"names":[],"sourceRoot":"webpack:///"}