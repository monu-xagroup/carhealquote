(function () {
  "use strict";

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }

  function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  (self["webpackChunkcar_heal_quote"] = self["webpackChunkcar_heal_quote"] || []).push([["default-node_modules_devextreme-angular_fesm2015_devextreme-angular-ui-scroll-view_js-src_app-0d14e2"], {
    /***/
    79561:
    /*!***************************************************************************************!*\
      !*** ./node_modules/devextreme-angular/fesm2015/devextreme-angular-ui-scroll-view.js ***!
      \***************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "DxScrollViewComponent": function DxScrollViewComponent() {
          return (
            /* binding */
            _DxScrollViewComponent
          );
        },

        /* harmony export */
        "DxScrollViewModule": function DxScrollViewModule() {
          return (
            /* binding */
            _DxScrollViewModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/platform-browser */
      71570);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      2316);
      /* harmony import */


      var devextreme_ui_scroll_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! devextreme/ui/scroll_view */
      89378);
      /* harmony import */


      var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! devextreme-angular/core */
      55643);
      /*!
       * devextreme-angular
       * Version: 22.2.9
       * Build date: Fri Oct 13 2023
       *
       * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
       *
       * This software may be modified and distributed under the terms
       * of the MIT license. See the LICENSE file in the root of the project for details.
       *
       * https://github.com/DevExpress/devextreme-angular
       */


      var _c0 = ["*"];
      /**
       * The ScrollView is a UI component that enables a user to scroll its content.
      
       */

      var _DxScrollViewComponent = /*#__PURE__*/function (_devextreme_angular_c) {
        _inherits(_DxScrollViewComponent, _devextreme_angular_c);

        var _super = _createSuper(_DxScrollViewComponent);

        function _DxScrollViewComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {
          var _this;

          _classCallCheck(this, _DxScrollViewComponent);

          _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);

          _this._createEventEmitters([{
            subscribe: 'disposing',
            emit: 'onDisposing'
          }, {
            subscribe: 'initialized',
            emit: 'onInitialized'
          }, {
            subscribe: 'optionChanged',
            emit: 'onOptionChanged'
          }, {
            subscribe: 'pullDown',
            emit: 'onPullDown'
          }, {
            subscribe: 'reachBottom',
            emit: 'onReachBottom'
          }, {
            subscribe: 'scroll',
            emit: 'onScroll'
          }, {
            subscribe: 'updated',
            emit: 'onUpdated'
          }, {
            emit: 'bounceEnabledChange'
          }, {
            emit: 'directionChange'
          }, {
            emit: 'disabledChange'
          }, {
            emit: 'elementAttrChange'
          }, {
            emit: 'heightChange'
          }, {
            emit: 'pulledDownTextChange'
          }, {
            emit: 'pullingDownTextChange'
          }, {
            emit: 'reachBottomTextChange'
          }, {
            emit: 'refreshingTextChange'
          }, {
            emit: 'rtlEnabledChange'
          }, {
            emit: 'scrollByContentChange'
          }, {
            emit: 'scrollByThumbChange'
          }, {
            emit: 'showScrollbarChange'
          }, {
            emit: 'useNativeChange'
          }, {
            emit: 'widthChange'
          }]);

          optionHost.setHost(_assertThisInitialized(_this));
          return _this;
        }
        /**
         * A Boolean value specifying whether to enable or disable the bounce-back effect.
        
         */


        _createClass(_DxScrollViewComponent, [{
          key: "bounceEnabled",
          get: function get() {
            return this._getOption('bounceEnabled');
          },
          set: function set(value) {
            this._setOption('bounceEnabled', value);
          }
          /**
           * A string value specifying the available scrolling directions.
          
           */

        }, {
          key: "direction",
          get: function get() {
            return this._getOption('direction');
          },
          set: function set(value) {
            this._setOption('direction', value);
          }
          /**
           * Specifies whether the UI component responds to user interaction.
          
           */

        }, {
          key: "disabled",
          get: function get() {
            return this._getOption('disabled');
          },
          set: function set(value) {
            this._setOption('disabled', value);
          }
          /**
           * Specifies the global attributes to be attached to the UI component&apos;s container element.
          
           */

        }, {
          key: "elementAttr",
          get: function get() {
            return this._getOption('elementAttr');
          },
          set: function set(value) {
            this._setOption('elementAttr', value);
          }
          /**
           * Specifies the UI component&apos;s height.
          
           */

        }, {
          key: "height",
          get: function get() {
            return this._getOption('height');
          },
          set: function set(value) {
            this._setOption('height', value);
          }
          /**
           * Specifies the text shown in the pullDown panel when pulling the content down lowers the refresh threshold.
          
           */

        }, {
          key: "pulledDownText",
          get: function get() {
            return this._getOption('pulledDownText');
          },
          set: function set(value) {
            this._setOption('pulledDownText', value);
          }
          /**
           * Specifies the text shown in the pullDown panel while pulling the content down to the refresh threshold.
          
           */

        }, {
          key: "pullingDownText",
          get: function get() {
            return this._getOption('pullingDownText');
          },
          set: function set(value) {
            this._setOption('pullingDownText', value);
          }
          /**
           * Specifies the text shown in the pullDown panel displayed when content is scrolled to the bottom.
          
           */

        }, {
          key: "reachBottomText",
          get: function get() {
            return this._getOption('reachBottomText');
          },
          set: function set(value) {
            this._setOption('reachBottomText', value);
          }
          /**
           * Specifies the text shown in the pullDown panel displayed when the content is being refreshed.
          
           */

        }, {
          key: "refreshingText",
          get: function get() {
            return this._getOption('refreshingText');
          },
          set: function set(value) {
            this._setOption('refreshingText', value);
          }
          /**
           * Switches the UI component to a right-to-left representation.
          
           */

        }, {
          key: "rtlEnabled",
          get: function get() {
            return this._getOption('rtlEnabled');
          },
          set: function set(value) {
            this._setOption('rtlEnabled', value);
          }
          /**
           * A Boolean value specifying whether or not an end user can scroll the UI component content swiping it up or down. Applies only if useNative is false
          
           */

        }, {
          key: "scrollByContent",
          get: function get() {
            return this._getOption('scrollByContent');
          },
          set: function set(value) {
            this._setOption('scrollByContent', value);
          }
          /**
           * Specifies whether a user can scroll the content with the scrollbar. Applies only if useNative is false.
          
           */

        }, {
          key: "scrollByThumb",
          get: function get() {
            return this._getOption('scrollByThumb');
          },
          set: function set(value) {
            this._setOption('scrollByThumb', value);
          }
          /**
           * Specifies when the UI component shows the scrollbar.
          
           */

        }, {
          key: "showScrollbar",
          get: function get() {
            return this._getOption('showScrollbar');
          },
          set: function set(value) {
            this._setOption('showScrollbar', value);
          }
          /**
           * Indicates whether to use native or simulated scrolling.
          
           */

        }, {
          key: "useNative",
          get: function get() {
            return this._getOption('useNative');
          },
          set: function set(value) {
            this._setOption('useNative', value);
          }
          /**
           * Specifies the UI component&apos;s width.
          
           */

        }, {
          key: "width",
          get: function get() {
            return this._getOption('width');
          },
          set: function set(value) {
            this._setOption('width', value);
          }
        }, {
          key: "_createInstance",
          value: function _createInstance(element, options) {
            return new devextreme_ui_scroll_view__WEBPACK_IMPORTED_MODULE_0__["default"](element, options);
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this._destroyWidget();
          }
        }]);

        return _DxScrollViewComponent;
      }(devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxComponent);
      /** @nocollapse */


      _DxScrollViewComponent.ɵfac = function DxScrollViewComponent_Factory(t) {
        return new (t || _DxScrollViewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.TransferState), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.PLATFORM_ID));
      };
      /** @nocollapse */


      _DxScrollViewComponent.ɵcmp =
      /** @pureOrBreakMyCode */
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({
        type: _DxScrollViewComponent,
        selectors: [["dx-scroll-view"]],
        inputs: {
          bounceEnabled: "bounceEnabled",
          direction: "direction",
          disabled: "disabled",
          elementAttr: "elementAttr",
          height: "height",
          pulledDownText: "pulledDownText",
          pullingDownText: "pullingDownText",
          reachBottomText: "reachBottomText",
          refreshingText: "refreshingText",
          rtlEnabled: "rtlEnabled",
          scrollByContent: "scrollByContent",
          scrollByThumb: "scrollByThumb",
          showScrollbar: "showScrollbar",
          useNative: "useNative",
          width: "width"
        },
        outputs: {
          onDisposing: "onDisposing",
          onInitialized: "onInitialized",
          onOptionChanged: "onOptionChanged",
          onPullDown: "onPullDown",
          onReachBottom: "onReachBottom",
          onScroll: "onScroll",
          onUpdated: "onUpdated",
          bounceEnabledChange: "bounceEnabledChange",
          directionChange: "directionChange",
          disabledChange: "disabledChange",
          elementAttrChange: "elementAttrChange",
          heightChange: "heightChange",
          pulledDownTextChange: "pulledDownTextChange",
          pullingDownTextChange: "pullingDownTextChange",
          reachBottomTextChange: "reachBottomTextChange",
          refreshingTextChange: "refreshingTextChange",
          rtlEnabledChange: "rtlEnabledChange",
          scrollByContentChange: "scrollByContentChange",
          scrollByThumbChange: "scrollByThumbChange",
          showScrollbarChange: "showScrollbarChange",
          useNativeChange: "useNativeChange",
          widthChange: "widthChange"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵProvidersFeature"]([devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]],
        ngContentSelectors: _c0,
        decls: 1,
        vars: 0,
        template: function DxScrollViewComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵprojectionDef"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵprojection"](0);
          }
        },
        encapsulation: 2
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](_DxScrollViewComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Component,
          args: [{
            selector: 'dx-scroll-view',
            template: '<ng-content></ng-content>',
            providers: [devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost]
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ElementRef
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone
          }, {
            type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost
          }, {
            type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper
          }, {
            type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost
          }, {
            type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.TransferState
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_2__.PLATFORM_ID]
            }]
          }];
        }, {
          bounceEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          direction: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          disabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          elementAttr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          height: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          pulledDownText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          pullingDownText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          reachBottomText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          refreshingText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          rtlEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          scrollByContent: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          scrollByThumb: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          showScrollbar: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          useNative: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          width: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          onDisposing: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onInitialized: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onOptionChanged: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onPullDown: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onReachBottom: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onScroll: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onUpdated: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          bounceEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          directionChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          disabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          elementAttrChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          heightChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          pulledDownTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          pullingDownTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          reachBottomTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          refreshingTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          rtlEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          scrollByContentChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          scrollByThumbChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          showScrollbarChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          useNativeChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          widthChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }]
        });
      })();

      var _DxScrollViewModule = /*#__PURE__*/_createClass(function _DxScrollViewModule() {
        _classCallCheck(this, _DxScrollViewModule);
      });
      /** @nocollapse */


      _DxScrollViewModule.ɵfac = function DxScrollViewModule_Factory(t) {
        return new (t || _DxScrollViewModule)();
      };
      /** @nocollapse */


      _DxScrollViewModule.ɵmod =
      /** @pureOrBreakMyCode */
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
        type: _DxScrollViewModule
      });
      /** @nocollapse */

      _DxScrollViewModule.ɵinj =
      /** @pureOrBreakMyCode */
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
        imports: [[devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule], devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](_DxScrollViewModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule,
          args: [{
            imports: [devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule],
            declarations: [_DxScrollViewComponent],
            exports: [_DxScrollViewComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule]
          }]
        }], null, null);
      })();

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](_DxScrollViewModule, {
          declarations: [_DxScrollViewComponent],
          imports: [devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule],
          exports: [_DxScrollViewComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule]
        });
      })();
      /**
       * Generated bundle index. Do not edit.
       */

      /***/

    },

    /***/
    74743:
    /*!******************************************************!*\
      !*** ./src/app/resolvers/versionControl.resolver.ts ***!
      \******************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "VersionControlResolver": function VersionControlResolver() {
          return (
            /* binding */
            _VersionControlResolver
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! rxjs */
      53399);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! rxjs */
      75249);
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs */
      82426);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/core */
      2316);
      /* harmony import */


      var _services_common_common_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ../services/common/common.service */
      69763);

      var _VersionControlResolver = /*#__PURE__*/function () {
        /**
         * contructor
         * @param commonService
         */
        function _VersionControlResolver(commonService) {
          _classCallCheck(this, _VersionControlResolver);

          this.commonService = commonService;
        }
        /**
         * resolve the
         * @returns
         */


        _createClass(_VersionControlResolver, [{
          key: "resolve",
          value: function resolve() {
            var _this2 = this;

            this.commonService.showLoading();
            return this.commonService.checkVersion().pipe((0, rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(function (res) {
              _this2.commonService.hideLoading();

              var localVersion = localStorage.getItem('appVersion');
              var appVersion = res.buildRevision;

              if (localVersion && localVersion != appVersion) {
                localStorage.setItem('appVersion', appVersion);
                setTimeout(function () {
                  location.reload();
                }, 10);
                return (0, rxjs__WEBPACK_IMPORTED_MODULE_2__.of)('new version available');
              } else {
                localStorage.setItem('appVersion', appVersion);
                return (0, rxjs__WEBPACK_IMPORTED_MODULE_2__.of)('new version is not available');
              }
            }), (0, rxjs__WEBPACK_IMPORTED_MODULE_3__.catchError)(function () {
              _this2.commonService.hideLoading();

              return (0, rxjs__WEBPACK_IMPORTED_MODULE_2__.of)('data not available at this time');
            }));
          }
        }]);

        return _VersionControlResolver;
      }();

      _VersionControlResolver.ɵfac = function VersionControlResolver_Factory(t) {
        return new (t || _VersionControlResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_services_common_common_service__WEBPACK_IMPORTED_MODULE_0__.CommonService));
      };

      _VersionControlResolver.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({
        token: _VersionControlResolver,
        factory: _VersionControlResolver.ɵfac,
        providedIn: 'root'
      });
      /***/
    }
  }]);
})();
//# sourceMappingURL=default-node_modules_devextreme-angular_fesm2015_devextreme-angular-ui-scroll-view_js-src_app-0d14e2-es5.js.map