"use strict";
(self["webpackChunkcar_heal_quote"] = self["webpackChunkcar_heal_quote"] || []).push([["default-node_modules_devextreme-angular_fesm2015_devextreme-angular-ui-scroll-view_js-src_app-0d14e2"],{

/***/ 79561:
/*!***************************************************************************************!*\
  !*** ./node_modules/devextreme-angular/fesm2015/devextreme-angular-ui-scroll-view.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DxScrollViewComponent": function() { return /* binding */ DxScrollViewComponent; },
/* harmony export */   "DxScrollViewModule": function() { return /* binding */ DxScrollViewModule; }
/* harmony export */ });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ 71570);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var devextreme_ui_scroll_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/ui/scroll_view */ 89378);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme-angular/core */ 55643);








/*!
 * devextreme-angular
 * Version: 22.2.11
 * Build date: Fri Feb 09 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
const _c0 = ["*"];
/**
 * The ScrollView is a UI component that enables a user to scroll its content.

 */
class DxScrollViewComponent extends devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxComponent {
    constructor(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {
        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);
        this._createEventEmitters([
            { subscribe: 'disposing', emit: 'onDisposing' },
            { subscribe: 'initialized', emit: 'onInitialized' },
            { subscribe: 'optionChanged', emit: 'onOptionChanged' },
            { subscribe: 'pullDown', emit: 'onPullDown' },
            { subscribe: 'reachBottom', emit: 'onReachBottom' },
            { subscribe: 'scroll', emit: 'onScroll' },
            { subscribe: 'updated', emit: 'onUpdated' },
            { emit: 'bounceEnabledChange' },
            { emit: 'directionChange' },
            { emit: 'disabledChange' },
            { emit: 'elementAttrChange' },
            { emit: 'heightChange' },
            { emit: 'pulledDownTextChange' },
            { emit: 'pullingDownTextChange' },
            { emit: 'reachBottomTextChange' },
            { emit: 'refreshingTextChange' },
            { emit: 'rtlEnabledChange' },
            { emit: 'scrollByContentChange' },
            { emit: 'scrollByThumbChange' },
            { emit: 'showScrollbarChange' },
            { emit: 'useNativeChange' },
            { emit: 'widthChange' }
        ]);
        optionHost.setHost(this);
    }
    /**
     * A Boolean value specifying whether to enable or disable the bounce-back effect.
    
     */
    get bounceEnabled() {
        return this._getOption('bounceEnabled');
    }
    set bounceEnabled(value) {
        this._setOption('bounceEnabled', value);
    }
    /**
     * A string value specifying the available scrolling directions.
    
     */
    get direction() {
        return this._getOption('direction');
    }
    set direction(value) {
        this._setOption('direction', value);
    }
    /**
     * Specifies whether the UI component responds to user interaction.
    
     */
    get disabled() {
        return this._getOption('disabled');
    }
    set disabled(value) {
        this._setOption('disabled', value);
    }
    /**
     * Specifies the global attributes to be attached to the UI component&apos;s container element.
    
     */
    get elementAttr() {
        return this._getOption('elementAttr');
    }
    set elementAttr(value) {
        this._setOption('elementAttr', value);
    }
    /**
     * Specifies the UI component&apos;s height.
    
     */
    get height() {
        return this._getOption('height');
    }
    set height(value) {
        this._setOption('height', value);
    }
    /**
     * Specifies the text shown in the pullDown panel when pulling the content down lowers the refresh threshold.
    
     */
    get pulledDownText() {
        return this._getOption('pulledDownText');
    }
    set pulledDownText(value) {
        this._setOption('pulledDownText', value);
    }
    /**
     * Specifies the text shown in the pullDown panel while pulling the content down to the refresh threshold.
    
     */
    get pullingDownText() {
        return this._getOption('pullingDownText');
    }
    set pullingDownText(value) {
        this._setOption('pullingDownText', value);
    }
    /**
     * Specifies the text shown in the pullDown panel displayed when content is scrolled to the bottom.
    
     */
    get reachBottomText() {
        return this._getOption('reachBottomText');
    }
    set reachBottomText(value) {
        this._setOption('reachBottomText', value);
    }
    /**
     * Specifies the text shown in the pullDown panel displayed when the content is being refreshed.
    
     */
    get refreshingText() {
        return this._getOption('refreshingText');
    }
    set refreshingText(value) {
        this._setOption('refreshingText', value);
    }
    /**
     * Switches the UI component to a right-to-left representation.
    
     */
    get rtlEnabled() {
        return this._getOption('rtlEnabled');
    }
    set rtlEnabled(value) {
        this._setOption('rtlEnabled', value);
    }
    /**
     * A Boolean value specifying whether or not an end user can scroll the UI component content swiping it up or down. Applies only if useNative is false
    
     */
    get scrollByContent() {
        return this._getOption('scrollByContent');
    }
    set scrollByContent(value) {
        this._setOption('scrollByContent', value);
    }
    /**
     * Specifies whether a user can scroll the content with the scrollbar. Applies only if useNative is false.
    
     */
    get scrollByThumb() {
        return this._getOption('scrollByThumb');
    }
    set scrollByThumb(value) {
        this._setOption('scrollByThumb', value);
    }
    /**
     * Specifies when the UI component shows the scrollbar.
    
     */
    get showScrollbar() {
        return this._getOption('showScrollbar');
    }
    set showScrollbar(value) {
        this._setOption('showScrollbar', value);
    }
    /**
     * Indicates whether to use native or simulated scrolling.
    
     */
    get useNative() {
        return this._getOption('useNative');
    }
    set useNative(value) {
        this._setOption('useNative', value);
    }
    /**
     * Specifies the UI component&apos;s width.
    
     */
    get width() {
        return this._getOption('width');
    }
    set width(value) {
        this._setOption('width', value);
    }
    _createInstance(element, options) {
        return new devextreme_ui_scroll_view__WEBPACK_IMPORTED_MODULE_0__.default(element, options);
    }
    ngOnDestroy() {
        this._destroyWidget();
    }
}
/** @nocollapse */ DxScrollViewComponent.ɵfac = function DxScrollViewComponent_Factory(t) { return new (t || DxScrollViewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.TransferState), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.PLATFORM_ID)); };
/** @nocollapse */ DxScrollViewComponent.ɵcmp = /** @pureOrBreakMyCode */ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: DxScrollViewComponent, selectors: [["dx-scroll-view"]], inputs: { bounceEnabled: "bounceEnabled", direction: "direction", disabled: "disabled", elementAttr: "elementAttr", height: "height", pulledDownText: "pulledDownText", pullingDownText: "pullingDownText", reachBottomText: "reachBottomText", refreshingText: "refreshingText", rtlEnabled: "rtlEnabled", scrollByContent: "scrollByContent", scrollByThumb: "scrollByThumb", showScrollbar: "showScrollbar", useNative: "useNative", width: "width" }, outputs: { onDisposing: "onDisposing", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onPullDown: "onPullDown", onReachBottom: "onReachBottom", onScroll: "onScroll", onUpdated: "onUpdated", bounceEnabledChange: "bounceEnabledChange", directionChange: "directionChange", disabledChange: "disabledChange", elementAttrChange: "elementAttrChange", heightChange: "heightChange", pulledDownTextChange: "pulledDownTextChange", pullingDownTextChange: "pullingDownTextChange", reachBottomTextChange: "reachBottomTextChange", refreshingTextChange: "refreshingTextChange", rtlEnabledChange: "rtlEnabledChange", scrollByContentChange: "scrollByContentChange", scrollByThumbChange: "scrollByThumbChange", showScrollbarChange: "showScrollbarChange", useNativeChange: "useNativeChange", widthChange: "widthChange" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵProvidersFeature"]([
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost,
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper,
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost
        ]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function DxScrollViewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵprojection"](0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](DxScrollViewComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Component,
        args: [{
                selector: 'dx-scroll-view',
                template: '<ng-content></ng-content>',
                providers: [
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost,
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper,
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost
                ]
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ElementRef }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone }, { type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost }, { type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper }, { type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost }, { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.TransferState }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Inject,
                args: [_angular_core__WEBPACK_IMPORTED_MODULE_2__.PLATFORM_ID]
            }] }]; }, { bounceEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], direction: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], disabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], elementAttr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], height: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], pulledDownText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], pullingDownText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], reachBottomText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], refreshingText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], rtlEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], scrollByContent: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], scrollByThumb: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], showScrollbar: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], useNative: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], width: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
        }], onDisposing: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onInitialized: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onOptionChanged: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onPullDown: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onReachBottom: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onScroll: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], onUpdated: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], bounceEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], directionChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], disabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], elementAttrChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], heightChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], pulledDownTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], pullingDownTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], reachBottomTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], refreshingTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], rtlEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], scrollByContentChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], scrollByThumbChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], showScrollbarChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], useNativeChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }], widthChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
        }] }); })();
class DxScrollViewModule {
}
/** @nocollapse */ DxScrollViewModule.ɵfac = function DxScrollViewModule_Factory(t) { return new (t || DxScrollViewModule)(); };
/** @nocollapse */ DxScrollViewModule.ɵmod = /** @pureOrBreakMyCode */ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({ type: DxScrollViewModule });
/** @nocollapse */ DxScrollViewModule.ɵinj = /** @pureOrBreakMyCode */ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({ imports: [[
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule,
            devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule,
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule
        ], devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](DxScrollViewModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule,
        args: [{
                imports: [
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule,
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule,
                    _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule
                ],
                declarations: [
                    DxScrollViewComponent
                ],
                exports: [
                    DxScrollViewComponent,
                    devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](DxScrollViewModule, { declarations: [DxScrollViewComponent], imports: [devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule,
        devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule,
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule], exports: [DxScrollViewComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule] }); })();

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ 74743:
/*!******************************************************!*\
  !*** ./src/app/resolvers/versionControl.resolver.ts ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VersionControlResolver": function() { return /* binding */ VersionControlResolver; }
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 53399);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 75249);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 82426);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _services_common_common_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services/common/common.service */ 69763);



class VersionControlResolver {
    /**
     * contructor
     * @param commonService
     */
    constructor(commonService) {
        this.commonService = commonService;
    }
    /**
     * resolve the
     * @returns
     */
    resolve() {
        this.commonService.showLoading();
        return this.commonService.checkVersion().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)((res) => {
            this.commonService.hideLoading();
            const localVersion = localStorage.getItem('appVersion');
            const appVersion = res.buildRevision;
            if (localVersion && localVersion != appVersion) {
                localStorage.setItem('appVersion', appVersion);
                setTimeout(() => {
                    location.reload();
                }, 10);
                return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)('new version available');
            }
            else {
                localStorage.setItem('appVersion', appVersion);
                return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)('new version is not available');
            }
        }), (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.catchError)(() => {
            this.commonService.hideLoading();
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)('data not available at this time');
        }));
    }
}
VersionControlResolver.ɵfac = function VersionControlResolver_Factory(t) { return new (t || VersionControlResolver)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_services_common_common_service__WEBPACK_IMPORTED_MODULE_0__.CommonService)); };
VersionControlResolver.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: VersionControlResolver, factory: VersionControlResolver.ɵfac, providedIn: 'root' });


/***/ })

}]);
//# sourceMappingURL=default-node_modules_devextreme-angular_fesm2015_devextreme-angular-ui-scroll-view_js-src_app-0d14e2-es2015.js.map