{"version":3,"file":"src_app_modules_quote_chq-cases_chq-cases_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAC+C;AACsC;AAC/B;AACa;AACZ;AACJ;AACgC;;;AAEnF,MAAM,WAAW,GAAY;IAC3B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8FAAsB;QACjC,OAAO,EAAE,EAAE,OAAO,EAAE,6FAAsB,EAAE;KAC7C;CACF,CAAC;AAYK,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;+GARhB;YACP,yDAAY;YACZ,iEAAa;YACb,6DAAW;YACX,kEAAqB,CAAC,WAAW,CAAC;YAClC,6EAAa;SACd;mIAEU,cAAc,mBATT,8FAAsB,aAEpC,yDAAY;QACZ,iEAAa;QACb,6DAAW,6DAEX,6EAAa;;;;;;;;;;;;;;;;;;;;ACrBsC;;;AAMhD,MAAM,sBAAsB;IACjC;;;OAGG;IACH,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IACrD;;;OAGG;IACH,OAAO;QACL,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,IAAI,CAC3C,yCAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YACjC,MAAM,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACxD,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC;YACrC,IAAI,YAAY,IAAI,YAAY,IAAI,UAAU,EAAE;gBAC9C,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAC/C,UAAU,CAAC,GAAG,EAAE;oBACd,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACpB,CAAC,EAAE,EAAE,CAAC,CAAC;gBACP,OAAO,wCAAE,CAAC,uBAAuB,CAAC,CAAC;aACpC;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAC/C,OAAO,wCAAE,CAAC,8BAA8B,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC,EACF,gDAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YACjC,OAAO,wCAAE,CAAC,iCAAiC,CAAC,CAAC;QAC/C,CAAC,CAAC,CACH;IACH,CAAC;;4FAjCU,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM","sources":["./src/app/modules/quote/chq-cases/chq-cases.module.ts","./src/app/resolvers/versionControl.resolver.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChqCasesTableComponent } from './chq-cases-table/chq-cases-table.component';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { WidgetsModule } from 'src/app/widgets/chq-widgets.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { IconsModule } from 'src/app/icons.module';\r\nimport { VersionControlResolver } from 'src/app/resolvers/versionControl.resolver';\r\n\r\nconst casesRoutes: Route[] = [\r\n  { \r\n    path: '', \r\n    component: ChqCasesTableComponent,\r\n    resolve: { version: VersionControlResolver },\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ ChqCasesTableComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    IconsModule,\r\n    RouterModule.forChild(casesRoutes),\r\n    WidgetsModule,\r\n  ],\r\n})\r\nexport class ChqCasesModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { catchError, map, Observable, of } from 'rxjs';\r\nimport { CommonService } from '../services/common/common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VersionControlResolver implements Resolve<Observable<any>> {\r\n  /**\r\n   * contructor\r\n   * @param commonService \r\n   */\r\n  constructor(private commonService: CommonService) { }\r\n  /**\r\n   * resolve the \r\n   * @returns \r\n   */\r\n  resolve(): Observable<any> {\r\n    this.commonService.showLoading();\r\n    return this.commonService.checkVersion().pipe(\r\n      map((res) => {\r\n        this.commonService.hideLoading();\r\n        const localVersion = localStorage.getItem('appVersion');\r\n        const appVersion = res.buildRevision;\r\n        if (localVersion && localVersion != appVersion) {\r\n          localStorage.setItem('appVersion', appVersion);\r\n          setTimeout(() => {\r\n            location.reload();\r\n          }, 10);\r\n          return of('new version available');\r\n        } else {\r\n          localStorage.setItem('appVersion', appVersion);\r\n          return of('new version is not available');\r\n        }\r\n      }),\r\n      catchError(() => {\r\n        this.commonService.hideLoading();\r\n        return of('data not available at this time');\r\n      })\r\n    )\r\n  }\r\n}"],"names":[],"sourceRoot":"webpack:///"}