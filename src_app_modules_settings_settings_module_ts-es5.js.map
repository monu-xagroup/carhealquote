{"version":3,"mappings":"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","names":["OperationsLayoutComponent","router","settingsService","src_app_model_menu__WEBPACK_IMPORTED_MODULE_0__","isRepairChange","subscribe","isRepair","menuItems","ele","url","disabled","isJobTasksEnabled","isEnabled","item","navigate","_angular_core__WEBPACK_IMPORTED_MODULE_3__","selectors","decls","vars","consts","template","ctx","settingsRoutes","path","component","_operations_operations_layout_operations_layout_component__WEBPACK_IMPORTED_MODULE_0__","loadChildren","Promise","then","m","OperationsModule","resolve","version","src_app_resolvers_versionControl_resolver__WEBPACK_IMPORTED_MODULE_2__","EmployeeModule","SettingsModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_1__","_angular_router__WEBPACK_IMPORTED_MODULE_5__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__","imports","VersionControlResolver","commonService","showLoading","checkVersion","pipe","res","hideLoading","localVersion","localStorage","getItem","appVersion","buildRevision","setItem","setTimeout","location","reload","_angular_core__WEBPACK_IMPORTED_MODULE_4__","factory","providedIn"],"sources":["webpack:///src/app/modules/settings/operations/operations-layout/operations-layout.component.ts","webpack:///src/app/modules/settings/operations/operations-layout/operations-layout.component.html","webpack:///src/app/modules/settings/settings.module.ts","webpack:///src/app/resolvers/versionControl.resolver.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { menuItem, operationsMenus } from 'src/app/model/menu';\r\nimport { SettingsService } from 'src/app/services/settings/settings.service';\r\n\r\n@Component({\r\n  selector: 'app-operations-layout',\r\n  templateUrl: './operations-layout.component.html',\r\n  styleUrls: [ './operations-layout.component.scss' ]\r\n})\r\nexport class OperationsLayoutComponent implements OnInit {\r\n\r\n  menuItems = operationsMenus;\r\n  /**\r\n   * constructor\r\n   * @param router \r\n   */\r\n  constructor(\r\n    private router: Router,\r\n    private settingsService: SettingsService,\r\n  ) { }\r\n\r\n  /**\r\n   * on init \r\n   */\r\n  ngOnInit(): void {\r\n    this.settingsService.isRepairChange.subscribe((isRepair: boolean) => {\r\n      this.menuItems =\r\n        operationsMenus.map((ele) => {\r\n          if (ele.url === '/settings/repair-type') ele.disabled = !isRepair;\r\n          return ele\r\n        })\r\n    });\r\n    this.settingsService.isJobTasksEnabled.subscribe((isEnabled: boolean) => {\r\n      this.menuItems =\r\n        operationsMenus.map((ele) => {\r\n          if (ele.url === '/settings/jobs-tasks') ele.disabled = !isEnabled;\r\n          return ele\r\n        })\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * navigate to selected route\r\n   * @param item \r\n   */\r\n  navigate(item: menuItem): void {\r\n    const url = item.url;\r\n    {\r\n      this.router.navigate([ url ]);\r\n    }\r\n  }\r\n}\r\n","<div class=\"layout-container\">\r\n    <div class=\"tab-header fx-0\">\r\n        <chq-tabs [menuItems]=\"menuItems\" (menuItemClick)=\"navigate($event);\" class=\"tabs\"></chq-tabs>\r\n    </div>\r\n    <div class=\"tab-content mh-0 fx-1\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { OperationsLayoutComponent } from './operations/operations-layout/operations-layout.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { VersionControlResolver } from 'src/app/resolvers/versionControl.resolver';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nconst settingsRoutes: Route[] = [\r\n  {\r\n    path: '',\r\n    component: OperationsLayoutComponent,\r\n    loadChildren: () =>\r\n      import('../settings/operations/operations.module').then(\r\n        m => m.OperationsModule\r\n      )\r\n  },\r\n  {\r\n    path: 'employees',\r\n    resolve: { version: VersionControlResolver },\r\n    loadChildren: () =>\r\n      import('../settings/employee/employee.module').then(\r\n        m => m.EmployeeModule\r\n      )\r\n  },\r\n]\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RouterModule.forChild(settingsRoutes),\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class SettingsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { catchError, map, Observable, of } from 'rxjs';\r\nimport { CommonService } from '../services/common/common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VersionControlResolver implements Resolve<Observable<any>> {\r\n  /**\r\n   * contructor\r\n   * @param commonService \r\n   */\r\n  constructor(private commonService: CommonService) { }\r\n  /**\r\n   * resolve the \r\n   * @returns \r\n   */\r\n  resolve(): Observable<any> {\r\n    this.commonService.showLoading();\r\n    return this.commonService.checkVersion().pipe(\r\n      map((res) => {\r\n        this.commonService.hideLoading();\r\n        const localVersion = localStorage.getItem('appVersion');\r\n        const appVersion = res.buildRevision;\r\n        if (localVersion && localVersion != appVersion) {\r\n          localStorage.setItem('appVersion', appVersion);\r\n          setTimeout(() => {\r\n            location.reload();\r\n          }, 10);\r\n          return of('new version available');\r\n        } else {\r\n          localStorage.setItem('appVersion', appVersion);\r\n          return of('new version is not available');\r\n        }\r\n      }),\r\n      catchError(() => {\r\n        this.commonService.hideLoading();\r\n        return of('data not available at this time');\r\n      })\r\n    )\r\n  }\r\n}"]}