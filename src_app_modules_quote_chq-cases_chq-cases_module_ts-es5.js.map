{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,UAAMA,WAAW,GAAY,CAC3B;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC,8FAFb;AAGEC,eAAO,EAAE;AAAEC,iBAAO,EAAEC;AAAX;AAHX,OAD2B,CAA7B;;UAkBaC;;;;;yBAAAA;AAAc;;;cAAdA;;;kBARF,CACPC,yDADO,EAEPC,iEAFO,EAGPC,6DAHO,EAIPC,mEAAsBX,WAAtB,CAJO,EAKPY,6EALO;;;;4HAQEL,iBAAc;AAAAM,yBATTV,8FASS;AATaW,oBAEpCN,yDAFoC,EAGpCC,iEAHoC,EAIpCC,6DAJoC,EAIzBC,yDAJyB,EAMpCC,6EANoC;AASb;AAHV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCfJG;AACX;;;;AAIA,yCAAoBC,aAApB,EAAgD;AAAA;;AAA5B;AAAiC;AACrD;;;;;;;;iBAIA,mBAAO;AAAA;;AACL,iBAAKA,aAAL,CAAmBC,WAAnB;AACA,mBAAO,KAAKD,aAAL,CAAmBE,YAAnB,GAAkCC,IAAlC,CACL,2CAAI,UAACC,GAAD,EAAQ;AACV,mBAAI,CAACJ,aAAL,CAAmBK,WAAnB;;AACA,kBAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAArB;AACA,kBAAMC,UAAU,GAAGL,GAAG,CAACM,aAAvB;;AACA,kBAAIJ,YAAY,IAAIA,YAAY,IAAIG,UAApC,EAAgD;AAC9CF,4BAAY,CAACI,OAAb,CAAqB,YAArB,EAAmCF,UAAnC;AACAG,0BAAU,CAAC,YAAK;AACdC,0BAAQ,CAACC,MAAT;AACD,iBAFS,EAEP,EAFO,CAAV;AAGA,uBAAO,0CAAG,uBAAH,CAAP;AACD,eAND,MAMO;AACLP,4BAAY,CAACI,OAAb,CAAqB,YAArB,EAAmCF,UAAnC;AACA,uBAAO,0CAAG,8BAAH,CAAP;AACD;AACF,aAdD,CADK,EAgBL,kDAAW,YAAK;AACd,mBAAI,CAACT,aAAL,CAAmBK,WAAnB;;AACA,qBAAO,0CAAG,iCAAH,CAAP;AACD,aAHD,CAhBK,CAAP;AAqBD;;;;;;;yBAjCUN,yBAAsBgB;AAAA;;;eAAtBhB;AAAsBiB,iBAAtBjB,uBAAsB;AAAAkB,oBAFrB;;;;","names":["casesRoutes","path","component","_chq_cases_table_chq_cases_table_component__WEBPACK_IMPORTED_MODULE_0__","resolve","version","src_app_resolvers_versionControl_resolver__WEBPACK_IMPORTED_MODULE_3__","ChqCasesModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_6__","src_app_icons_module__WEBPACK_IMPORTED_MODULE_2__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","src_app_widgets_chq_widgets_module__WEBPACK_IMPORTED_MODULE_1__","declarations","imports","VersionControlResolver","commonService","showLoading","checkVersion","pipe","res","hideLoading","localVersion","localStorage","getItem","appVersion","buildRevision","setItem","setTimeout","location","reload","_angular_core__WEBPACK_IMPORTED_MODULE_4__","factory","providedIn"],"sources":["webpack:///src/app/modules/quote/chq-cases/chq-cases.module.ts","webpack:///src/app/resolvers/versionControl.resolver.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChqCasesTableComponent } from './chq-cases-table/chq-cases-table.component';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { WidgetsModule } from 'src/app/widgets/chq-widgets.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { IconsModule } from 'src/app/icons.module';\r\nimport { VersionControlResolver } from 'src/app/resolvers/versionControl.resolver';\r\n\r\nconst casesRoutes: Route[] = [\r\n  { \r\n    path: '', \r\n    component: ChqCasesTableComponent,\r\n    resolve: { version: VersionControlResolver },\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ ChqCasesTableComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    IconsModule,\r\n    RouterModule.forChild(casesRoutes),\r\n    WidgetsModule,\r\n  ],\r\n})\r\nexport class ChqCasesModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { catchError, map, Observable, of } from 'rxjs';\r\nimport { CommonService } from '../services/common/common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VersionControlResolver implements Resolve<Observable<any>> {\r\n  /**\r\n   * contructor\r\n   * @param commonService \r\n   */\r\n  constructor(private commonService: CommonService) { }\r\n  /**\r\n   * resolve the \r\n   * @returns \r\n   */\r\n  resolve(): Observable<any> {\r\n    this.commonService.showLoading();\r\n    return this.commonService.checkVersion().pipe(\r\n      map((res) => {\r\n        this.commonService.hideLoading();\r\n        const localVersion = localStorage.getItem('appVersion');\r\n        const appVersion = res.buildRevision;\r\n        if (localVersion && localVersion != appVersion) {\r\n          localStorage.setItem('appVersion', appVersion);\r\n          setTimeout(() => {\r\n            location.reload();\r\n          }, 10);\r\n          return of('new version available');\r\n        } else {\r\n          localStorage.setItem('appVersion', appVersion);\r\n          return of('new version is not available');\r\n        }\r\n      }),\r\n      catchError(() => {\r\n        this.commonService.hideLoading();\r\n        return of('data not available at this time');\r\n      })\r\n    )\r\n  }\r\n}"]}