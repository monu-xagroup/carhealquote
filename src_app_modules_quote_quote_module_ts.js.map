{"version":3,"file":"src_app_modules_quote_quote_module_ts.js","mappings":"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","sources":["./src/app/guards/quote-guard/quote.guard.ts","./src/app/modules/quote/quote.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { MsalGuard } from '@azure/msal-angular';\r\nimport { catchError, map, Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { CommonService } from 'src/app/services/common/common.service';\r\nimport { CoreService } from 'src/app/services/core/core.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuoteGuard implements CanActivate {\r\n  /**\r\n   * constructor\r\n   * @param router\r\n   */\r\n  constructor(\r\n    private commonService: CommonService,\r\n    private msalGuard: MsalGuard,\r\n    private router: Router,\r\n    private coreService:CoreService\r\n  ) { }\r\n\r\n  /**\r\n   * canActivate\r\n   * @returns\r\n   */\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (this.msalGuard.canActivate(next, state)) {\r\n      return this.checkUserPermission(next, state);\r\n    } else {\r\n      this.router.navigate([ 'home' ]);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n  * checkUserPermission\r\n  * @returns\r\n  */\r\n  checkUserPermission(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.commonService.userProfileData.pipe(\r\n      switchMap((res: any) => {\r\n        if (res) {\r\n          const automotiveServices = res?.data?.userPermission?.automotiveServices;\r\n          this.commonService.setPermission(automotiveServices);\r\n          const automotiveService = automotiveServices?.find(x => x.automotiveServiceName.toLowerCase() === 'carheal quote');\r\n          if(automotiveService) {\r\n            const permissionList = automotiveService.permissions;\r\n            const createCase = this.commonService.hasPermission('case.create', permissionList);\r\n            const url = state.url;\r\n            const caseId = url.split('/case/')[1] ? url.split('/case/')[1].split('/')[0] : null;\r\n            if(!createCase && url !== '/cases' && (!caseId || caseId === '0') ) {\r\n              this.router.navigate([ 'cases' ]);\r\n              return of(false);\r\n            }\r\n            return of(true);\r\n          } else {\r\n            this.router.navigate([ 'quote' ]);\r\n            return of (false)\r\n          } \r\n        } else {\r\n          this.commonService.showLoading();\r\n          return this.coreService.getUserProfile().pipe(\r\n            switchMap((res) => {\r\n              if (res) {\r\n                this.commonService.hideLoading();\r\n                this.commonService.userProfileData.next(res);\r\n                if (res?.data.userProfileImageBlobUrl) {\r\n                  this.commonService.avatar.next({\r\n                    image: res?.data.userProfileImageBlobUrl\r\n                  });\r\n                }\r\n                if (res?.data?.userPermission?.automotiveServices) {\r\n                  const automotiveServices = res?.data?.userPermission?.automotiveServices;\r\n                  this.commonService.setPermission(automotiveServices);\r\n                  const automotiveService = automotiveServices?.find(x => x.automotiveServiceName.toLowerCase() === 'carheal quote');\r\n                  if(automotiveService) {\r\n                    const permissionList = automotiveService.permissions;\r\n                    const createCase = this.commonService.hasPermission('case.create', permissionList);\r\n                    const url = state.url;\r\n                    const caseId = url.split('/case/')[1] ? url.split('/case/')[1].split('/')[0] : null;\r\n                    if(!createCase && url !== '/cases' && (!caseId || caseId === '0') ) {\r\n                      this.router.navigate([ 'cases' ]);\r\n                      return of(false);\r\n                    }\r\n                    return of(true);\r\n                  } else {\r\n                    this.router.navigate([ 'quote' ]);\r\n                    return of (false)\r\n                  } \r\n                } else {                  \r\n                  this.router.navigate([ 'quote' ]);\r\n                  return of(true);\r\n                }\r\n              } else {\r\n                this.commonService.hideLoading();\r\n                this.router.navigate([ 'quote' ]);\r\n                return of(false);\r\n              }\r\n            })\r\n          )\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { MsalGuard } from '@azure/msal-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { QuoteGuard } from 'src/app/guards/quote-guard/quote.guard';\r\n\r\n\r\nconst quotesRoutes: Route[] = [\r\n  {\r\n    path: '',\r\n    canActivate: [ MsalGuard ],\r\n    loadChildren: () =>\r\n      import('../quote/chq-cases/chq-cases.module').then(\r\n        m => m.ChqCasesModule\r\n      )\r\n      \r\n  },\r\n  {\r\n    path: 'case/:id',\r\n    canActivate: [ QuoteGuard ],\r\n    loadChildren: () =>\r\n      import('../quote/chq-new-cases/chq-new-case.module').then(\r\n        m => m.ChqNewCaseModule\r\n      )\r\n  },\r\n  {\r\n    path: 'case',\r\n    canActivate: [ QuoteGuard ],\r\n    loadChildren: () =>\r\n      import('../quote/chq-new-cases/chq-new-case.module').then(\r\n        m => m.ChqNewCaseModule\r\n      )\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(quotesRoutes),\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class QuoteModule { }\r\n"],"names":["of","switchMap","QuoteGuard","constructor","commonService","msalGuard","router","coreService","canActivate","next","state","checkUserPermission","navigate","route","userProfileData","pipe","res","automotiveServices","data","userPermission","setPermission","automotiveService","find","x","automotiveServiceName","toLowerCase","permissionList","permissions","createCase","hasPermission","url","caseId","split","showLoading","getUserProfile","hideLoading","userProfileImageBlobUrl","avatar","image","factory","providedIn","CommonModule","RouterModule","MsalGuard","TranslateModule","quotesRoutes","path","loadChildren","then","m","ChqCasesModule","ChqNewCaseModule","QuoteModule","forChild","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}