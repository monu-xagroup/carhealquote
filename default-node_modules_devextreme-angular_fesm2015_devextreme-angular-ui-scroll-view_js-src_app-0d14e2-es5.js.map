{"version":3,"mappings":"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","names":["DxScrollViewComponent","subscribe","emit","optionHost","devextreme_ui_scroll_view__WEBPACK_IMPORTED_MODULE_0__","element","options","devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","type","selectors","inputs","bounceEnabled","direction","disabled","elementAttr","height","pulledDownText","pullingDownText","reachBottomText","refreshingText","rtlEnabled","scrollByContent","scrollByThumb","showScrollbar","useNative","width","outputs","onDisposing","onInitialized","onOptionChanged","onPullDown","onReachBottom","onScroll","onUpdated","bounceEnabledChange","directionChange","disabledChange","elementAttrChange","heightChange","pulledDownTextChange","pullingDownTextChange","reachBottomTextChange","refreshingTextChange","rtlEnabledChange","scrollByContentChange","scrollByThumbChange","showScrollbarChange","useNativeChange","widthChange","features","ngContentSelectors","decls","vars","template","encapsulation","args","selector","providers","decorators","DxScrollViewModule","imports","declarations","exports","VersionControlResolver","commonService","showLoading","checkVersion","pipe","res","hideLoading","localVersion","localStorage","getItem","appVersion","buildRevision","setItem","setTimeout","location","reload","_angular_core__WEBPACK_IMPORTED_MODULE_4__","factory","providedIn"],"sources":["webpack:///node_modules/devextreme-angular/fesm2015/devextreme-angular-ui-scroll-view.js","webpack:///src/app/resolvers/versionControl.resolver.ts"],"sourcesContent":["import * as i2 from '@angular/platform-browser';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, Inject, Input, Output, NgModule } from '@angular/core';\nimport DxScrollView from 'devextreme/ui/scroll_view';\nimport * as i1 from 'devextreme-angular/core';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\n\n/*!\r\n * devextreme-angular\r\n * Version: 22.2.8\r\n * Build date: Thu Aug 31 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nconst _c0 = [\"*\"];\r\n/**\r\n * The ScrollView is a UI component that enables a user to scroll its content.\r\n\r\n */\r\nclass DxScrollViewComponent extends DxComponent {\r\n    constructor(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n        this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'pullDown', emit: 'onPullDown' },\r\n            { subscribe: 'reachBottom', emit: 'onReachBottom' },\r\n            { subscribe: 'scroll', emit: 'onScroll' },\r\n            { subscribe: 'updated', emit: 'onUpdated' },\r\n            { emit: 'bounceEnabledChange' },\r\n            { emit: 'directionChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'pulledDownTextChange' },\r\n            { emit: 'pullingDownTextChange' },\r\n            { emit: 'reachBottomTextChange' },\r\n            { emit: 'refreshingTextChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollByContentChange' },\r\n            { emit: 'scrollByThumbChange' },\r\n            { emit: 'showScrollbarChange' },\r\n            { emit: 'useNativeChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(this);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether to enable or disable the bounce-back effect.\r\n    \r\n     */\r\n    get bounceEnabled() {\r\n        return this._getOption('bounceEnabled');\r\n    }\r\n    set bounceEnabled(value) {\r\n        this._setOption('bounceEnabled', value);\r\n    }\r\n    /**\r\n     * A string value specifying the available scrolling directions.\r\n    \r\n     */\r\n    get direction() {\r\n        return this._getOption('direction');\r\n    }\r\n    set direction(value) {\r\n        this._setOption('direction', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component responds to user interaction.\r\n    \r\n     */\r\n    get disabled() {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value) {\r\n        this._setOption('disabled', value);\r\n    }\r\n    /**\r\n     * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n    \r\n     */\r\n    get elementAttr() {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component&apos;s height.\r\n    \r\n     */\r\n    get height() {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value) {\r\n        this._setOption('height', value);\r\n    }\r\n    /**\r\n     * Specifies the text shown in the pullDown panel when pulling the content down lowers the refresh threshold.\r\n    \r\n     */\r\n    get pulledDownText() {\r\n        return this._getOption('pulledDownText');\r\n    }\r\n    set pulledDownText(value) {\r\n        this._setOption('pulledDownText', value);\r\n    }\r\n    /**\r\n     * Specifies the text shown in the pullDown panel while pulling the content down to the refresh threshold.\r\n    \r\n     */\r\n    get pullingDownText() {\r\n        return this._getOption('pullingDownText');\r\n    }\r\n    set pullingDownText(value) {\r\n        this._setOption('pullingDownText', value);\r\n    }\r\n    /**\r\n     * Specifies the text shown in the pullDown panel displayed when content is scrolled to the bottom.\r\n    \r\n     */\r\n    get reachBottomText() {\r\n        return this._getOption('reachBottomText');\r\n    }\r\n    set reachBottomText(value) {\r\n        this._setOption('reachBottomText', value);\r\n    }\r\n    /**\r\n     * Specifies the text shown in the pullDown panel displayed when the content is being refreshed.\r\n    \r\n     */\r\n    get refreshingText() {\r\n        return this._getOption('refreshingText');\r\n    }\r\n    set refreshingText(value) {\r\n        this._setOption('refreshingText', value);\r\n    }\r\n    /**\r\n     * Switches the UI component to a right-to-left representation.\r\n    \r\n     */\r\n    get rtlEnabled() {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether or not an end user can scroll the UI component content swiping it up or down. Applies only if useNative is false\r\n    \r\n     */\r\n    get scrollByContent() {\r\n        return this._getOption('scrollByContent');\r\n    }\r\n    set scrollByContent(value) {\r\n        this._setOption('scrollByContent', value);\r\n    }\r\n    /**\r\n     * Specifies whether a user can scroll the content with the scrollbar. Applies only if useNative is false.\r\n    \r\n     */\r\n    get scrollByThumb() {\r\n        return this._getOption('scrollByThumb');\r\n    }\r\n    set scrollByThumb(value) {\r\n        this._setOption('scrollByThumb', value);\r\n    }\r\n    /**\r\n     * Specifies when the UI component shows the scrollbar.\r\n    \r\n     */\r\n    get showScrollbar() {\r\n        return this._getOption('showScrollbar');\r\n    }\r\n    set showScrollbar(value) {\r\n        this._setOption('showScrollbar', value);\r\n    }\r\n    /**\r\n     * Indicates whether to use native or simulated scrolling.\r\n    \r\n     */\r\n    get useNative() {\r\n        return this._getOption('useNative');\r\n    }\r\n    set useNative(value) {\r\n        this._setOption('useNative', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component&apos;s width.\r\n    \r\n     */\r\n    get width() {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value) {\r\n        this._setOption('width', value);\r\n    }\r\n    _createInstance(element, options) {\r\n        return new DxScrollView(element, options);\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n}\r\n/** @nocollapse */ DxScrollViewComponent.ɵfac = function DxScrollViewComponent_Factory(t) { return new (t || DxScrollViewComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.DxTemplateHost), i0.ɵɵdirectiveInject(i1.WatcherHelper), i0.ɵɵdirectiveInject(i1.NestedOptionHost), i0.ɵɵdirectiveInject(i2.TransferState), i0.ɵɵdirectiveInject(PLATFORM_ID)); };\r\n/** @nocollapse */ DxScrollViewComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxScrollViewComponent, selectors: [[\"dx-scroll-view\"]], inputs: { bounceEnabled: \"bounceEnabled\", direction: \"direction\", disabled: \"disabled\", elementAttr: \"elementAttr\", height: \"height\", pulledDownText: \"pulledDownText\", pullingDownText: \"pullingDownText\", reachBottomText: \"reachBottomText\", refreshingText: \"refreshingText\", rtlEnabled: \"rtlEnabled\", scrollByContent: \"scrollByContent\", scrollByThumb: \"scrollByThumb\", showScrollbar: \"showScrollbar\", useNative: \"useNative\", width: \"width\" }, outputs: { onDisposing: \"onDisposing\", onInitialized: \"onInitialized\", onOptionChanged: \"onOptionChanged\", onPullDown: \"onPullDown\", onReachBottom: \"onReachBottom\", onScroll: \"onScroll\", onUpdated: \"onUpdated\", bounceEnabledChange: \"bounceEnabledChange\", directionChange: \"directionChange\", disabledChange: \"disabledChange\", elementAttrChange: \"elementAttrChange\", heightChange: \"heightChange\", pulledDownTextChange: \"pulledDownTextChange\", pullingDownTextChange: \"pullingDownTextChange\", reachBottomTextChange: \"reachBottomTextChange\", refreshingTextChange: \"refreshingTextChange\", rtlEnabledChange: \"rtlEnabledChange\", scrollByContentChange: \"scrollByContentChange\", scrollByThumbChange: \"scrollByThumbChange\", showScrollbarChange: \"showScrollbarChange\", useNativeChange: \"useNativeChange\", widthChange: \"widthChange\" }, features: [i0.ɵɵProvidersFeature([\r\n            DxTemplateHost,\r\n            WatcherHelper,\r\n            NestedOptionHost\r\n        ]), i0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function DxScrollViewComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵprojectionDef();\r\n        i0.ɵɵprojection(0);\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxScrollViewComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'dx-scroll-view',\r\n                template: '<ng-content></ng-content>',\r\n                providers: [\r\n                    DxTemplateHost,\r\n                    WatcherHelper,\r\n                    NestedOptionHost\r\n                ]\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.DxTemplateHost }, { type: i1.WatcherHelper }, { type: i1.NestedOptionHost }, { type: i2.TransferState }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }]; }, { bounceEnabled: [{\r\n            type: Input\r\n        }], direction: [{\r\n            type: Input\r\n        }], disabled: [{\r\n            type: Input\r\n        }], elementAttr: [{\r\n            type: Input\r\n        }], height: [{\r\n            type: Input\r\n        }], pulledDownText: [{\r\n            type: Input\r\n        }], pullingDownText: [{\r\n            type: Input\r\n        }], reachBottomText: [{\r\n            type: Input\r\n        }], refreshingText: [{\r\n            type: Input\r\n        }], rtlEnabled: [{\r\n            type: Input\r\n        }], scrollByContent: [{\r\n            type: Input\r\n        }], scrollByThumb: [{\r\n            type: Input\r\n        }], showScrollbar: [{\r\n            type: Input\r\n        }], useNative: [{\r\n            type: Input\r\n        }], width: [{\r\n            type: Input\r\n        }], onDisposing: [{\r\n            type: Output\r\n        }], onInitialized: [{\r\n            type: Output\r\n        }], onOptionChanged: [{\r\n            type: Output\r\n        }], onPullDown: [{\r\n            type: Output\r\n        }], onReachBottom: [{\r\n            type: Output\r\n        }], onScroll: [{\r\n            type: Output\r\n        }], onUpdated: [{\r\n            type: Output\r\n        }], bounceEnabledChange: [{\r\n            type: Output\r\n        }], directionChange: [{\r\n            type: Output\r\n        }], disabledChange: [{\r\n            type: Output\r\n        }], elementAttrChange: [{\r\n            type: Output\r\n        }], heightChange: [{\r\n            type: Output\r\n        }], pulledDownTextChange: [{\r\n            type: Output\r\n        }], pullingDownTextChange: [{\r\n            type: Output\r\n        }], reachBottomTextChange: [{\r\n            type: Output\r\n        }], refreshingTextChange: [{\r\n            type: Output\r\n        }], rtlEnabledChange: [{\r\n            type: Output\r\n        }], scrollByContentChange: [{\r\n            type: Output\r\n        }], scrollByThumbChange: [{\r\n            type: Output\r\n        }], showScrollbarChange: [{\r\n            type: Output\r\n        }], useNativeChange: [{\r\n            type: Output\r\n        }], widthChange: [{\r\n            type: Output\r\n        }] }); })();\r\nclass DxScrollViewModule {\r\n}\r\n/** @nocollapse */ DxScrollViewModule.ɵfac = function DxScrollViewModule_Factory(t) { return new (t || DxScrollViewModule)(); };\r\n/** @nocollapse */ DxScrollViewModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxScrollViewModule });\r\n/** @nocollapse */ DxScrollViewModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [[\r\n            DxIntegrationModule,\r\n            DxTemplateModule,\r\n            BrowserTransferStateModule\r\n        ], DxTemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxScrollViewModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    DxIntegrationModule,\r\n                    DxTemplateModule,\r\n                    BrowserTransferStateModule\r\n                ],\r\n                declarations: [\r\n                    DxScrollViewComponent\r\n                ],\r\n                exports: [\r\n                    DxScrollViewComponent,\r\n                    DxTemplateModule\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxScrollViewModule, { declarations: [DxScrollViewComponent], imports: [DxIntegrationModule,\r\n        DxTemplateModule,\r\n        BrowserTransferStateModule], exports: [DxScrollViewComponent, DxTemplateModule] }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxScrollViewComponent, DxScrollViewModule };\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { catchError, map, Observable, of } from 'rxjs';\r\nimport { CommonService } from '../services/common/common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VersionControlResolver implements Resolve<Observable<any>> {\r\n  /**\r\n   * contructor\r\n   * @param commonService \r\n   */\r\n  constructor(private commonService: CommonService) { }\r\n  /**\r\n   * resolve the \r\n   * @returns \r\n   */\r\n  resolve(): Observable<any> {\r\n    this.commonService.showLoading();\r\n    return this.commonService.checkVersion().pipe(\r\n      map((res) => {\r\n        this.commonService.hideLoading();\r\n        const localVersion = localStorage.getItem('appVersion');\r\n        const appVersion = res.buildRevision;\r\n        if (localVersion && localVersion != appVersion) {\r\n          localStorage.setItem('appVersion', appVersion);\r\n          setTimeout(() => {\r\n            location.reload();\r\n          }, 10);\r\n          return of('new version available');\r\n        } else {\r\n          localStorage.setItem('appVersion', appVersion);\r\n          return of('new version is not available');\r\n        }\r\n      }),\r\n      catchError(() => {\r\n        this.commonService.hideLoading();\r\n        return of('data not available at this time');\r\n      })\r\n    )\r\n  }\r\n}"]}