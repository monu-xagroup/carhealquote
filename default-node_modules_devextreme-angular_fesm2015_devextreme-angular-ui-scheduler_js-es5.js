(function () {
  "use strict";

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
  function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
  function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
  function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
  function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
  function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }
  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }
  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  (self["webpackChunkcar_heal_quote"] = self["webpackChunkcar_heal_quote"] || []).push([["default-node_modules_devextreme-angular_fesm2015_devextreme-angular-ui-scheduler_js"], {
    /***/20330: (
    /*!*************************************************************************************!*\
      !*** ./node_modules/devextreme-angular/fesm2015/devextreme-angular-ui-scheduler.js ***!
      \*************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"DxSchedulerComponent": function DxSchedulerComponent() {
          return /* binding */_DxSchedulerComponent;
        },
        /* harmony export */"DxSchedulerModule": function DxSchedulerModule() {
          return /* binding */_DxSchedulerModule;
        }
        /* harmony export */
      });
      /* harmony import */
      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @angular/platform-browser */71570);
      /* harmony import */
      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! @angular/core */2316);
      /* harmony import */
      var devextreme_ui_scheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! devextreme/ui/scheduler */70610);
      /* harmony import */
      var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! devextreme-angular/core */55643);
      /* harmony import */
      var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! devextreme-angular/ui/nested */83203);

      /*!
       * devextreme-angular
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       *
       * This software may be modified and distributed under the terms
       * of the MIT license. See the LICENSE file in the root of the project for details.
       *
       * https://github.com/DevExpress/devextreme-angular
       */
      /**
       * The Scheduler is a UI component that represents scheduled data and allows a user to manage and edit it.
      
       */
      var _DxSchedulerComponent = /*#__PURE__*/function (_devextreme_angular_c) {
        _inherits(_DxSchedulerComponent, _devextreme_angular_c);
        function _DxSchedulerComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {
          var _this2;
          _classCallCheck(this, _DxSchedulerComponent);
          _this2 = _callSuper(this, _DxSchedulerComponent, [elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId]);
          _this2._watcherHelper = _watcherHelper;
          _this2._idh = _idh;
          _this2._createEventEmitters([{
            subscribe: 'appointmentAdded',
            emit: 'onAppointmentAdded'
          }, {
            subscribe: 'appointmentAdding',
            emit: 'onAppointmentAdding'
          }, {
            subscribe: 'appointmentClick',
            emit: 'onAppointmentClick'
          }, {
            subscribe: 'appointmentContextMenu',
            emit: 'onAppointmentContextMenu'
          }, {
            subscribe: 'appointmentDblClick',
            emit: 'onAppointmentDblClick'
          }, {
            subscribe: 'appointmentDeleted',
            emit: 'onAppointmentDeleted'
          }, {
            subscribe: 'appointmentDeleting',
            emit: 'onAppointmentDeleting'
          }, {
            subscribe: 'appointmentFormOpening',
            emit: 'onAppointmentFormOpening'
          }, {
            subscribe: 'appointmentRendered',
            emit: 'onAppointmentRendered'
          }, {
            subscribe: 'appointmentTooltipShowing',
            emit: 'onAppointmentTooltipShowing'
          }, {
            subscribe: 'appointmentUpdated',
            emit: 'onAppointmentUpdated'
          }, {
            subscribe: 'appointmentUpdating',
            emit: 'onAppointmentUpdating'
          }, {
            subscribe: 'cellClick',
            emit: 'onCellClick'
          }, {
            subscribe: 'cellContextMenu',
            emit: 'onCellContextMenu'
          }, {
            subscribe: 'contentReady',
            emit: 'onContentReady'
          }, {
            subscribe: 'disposing',
            emit: 'onDisposing'
          }, {
            subscribe: 'initialized',
            emit: 'onInitialized'
          }, {
            subscribe: 'optionChanged',
            emit: 'onOptionChanged'
          }, {
            emit: 'accessKeyChange'
          }, {
            emit: 'adaptivityEnabledChange'
          }, {
            emit: 'allDayExprChange'
          }, {
            emit: 'allDayPanelModeChange'
          }, {
            emit: 'appointmentCollectorTemplateChange'
          }, {
            emit: 'appointmentDraggingChange'
          }, {
            emit: 'appointmentTemplateChange'
          }, {
            emit: 'appointmentTooltipTemplateChange'
          }, {
            emit: 'cellDurationChange'
          }, {
            emit: 'crossScrollingEnabledChange'
          }, {
            emit: 'currentDateChange'
          }, {
            emit: 'currentViewChange'
          }, {
            emit: 'customizeDateNavigatorTextChange'
          }, {
            emit: 'dataCellTemplateChange'
          }, {
            emit: 'dataSourceChange'
          }, {
            emit: 'dateCellTemplateChange'
          }, {
            emit: 'dateSerializationFormatChange'
          }, {
            emit: 'descriptionExprChange'
          }, {
            emit: 'disabledChange'
          }, {
            emit: 'dropDownAppointmentTemplateChange'
          }, {
            emit: 'editingChange'
          }, {
            emit: 'elementAttrChange'
          }, {
            emit: 'endDateExprChange'
          }, {
            emit: 'endDateTimeZoneExprChange'
          }, {
            emit: 'endDayHourChange'
          }, {
            emit: 'firstDayOfWeekChange'
          }, {
            emit: 'focusStateEnabledChange'
          }, {
            emit: 'groupByDateChange'
          }, {
            emit: 'groupsChange'
          }, {
            emit: 'heightChange'
          }, {
            emit: 'hintChange'
          }, {
            emit: 'indicatorUpdateIntervalChange'
          }, {
            emit: 'maxChange'
          }, {
            emit: 'maxAppointmentsPerCellChange'
          }, {
            emit: 'minChange'
          }, {
            emit: 'noDataTextChange'
          }, {
            emit: 'recurrenceEditModeChange'
          }, {
            emit: 'recurrenceExceptionExprChange'
          }, {
            emit: 'recurrenceRuleExprChange'
          }, {
            emit: 'remoteFilteringChange'
          }, {
            emit: 'resourceCellTemplateChange'
          }, {
            emit: 'resourcesChange'
          }, {
            emit: 'rtlEnabledChange'
          }, {
            emit: 'scrollingChange'
          }, {
            emit: 'selectedCellDataChange'
          }, {
            emit: 'shadeUntilCurrentTimeChange'
          }, {
            emit: 'showAllDayPanelChange'
          }, {
            emit: 'showCurrentTimeIndicatorChange'
          }, {
            emit: 'startDateExprChange'
          }, {
            emit: 'startDateTimeZoneExprChange'
          }, {
            emit: 'startDayHourChange'
          }, {
            emit: 'tabIndexChange'
          }, {
            emit: 'textExprChange'
          }, {
            emit: 'timeCellTemplateChange'
          }, {
            emit: 'timeZoneChange'
          }, {
            emit: 'useDropDownViewSwitcherChange'
          }, {
            emit: 'viewsChange'
          }, {
            emit: 'visibleChange'
          }, {
            emit: 'widthChange'
          }]);
          _this2._idh.setHost(_assertThisInitialized(_this2));
          optionHost.setHost(_assertThisInitialized(_this2));
          return _this2;
        }
        /**
         * Specifies the shortcut key that sets focus on the UI component.
        
         */
        _createClass(_DxSchedulerComponent, [{
          key: "accessKey",
          get: function get() {
            return this._getOption('accessKey');
          },
          set: function set(value) {
            this._setOption('accessKey', value);
          }
          /**
           * Specifies whether the UI component adapts to small screens.
          
           */
        }, {
          key: "adaptivityEnabled",
          get: function get() {
            return this._getOption('adaptivityEnabled');
          },
          set: function set(value) {
            this._setOption('adaptivityEnabled', value);
          }
          /**
           * Specifies the name of the data source item field whose value defines whether or not the corresponding appointment is an all-day appointment.
          
           */
        }, {
          key: "allDayExpr",
          get: function get() {
            return this._getOption('allDayExpr');
          },
          set: function set(value) {
            this._setOption('allDayExpr', value);
          }
          /**
           * Specifies the display mode for the All day panel.
          
           */
        }, {
          key: "allDayPanelMode",
          get: function get() {
            return this._getOption('allDayPanelMode');
          },
          set: function set(value) {
            this._setOption('allDayPanelMode', value);
          }
          /**
           * Specifies a custom template for cell overflow indicators.
          
           */
        }, {
          key: "appointmentCollectorTemplate",
          get: function get() {
            return this._getOption('appointmentCollectorTemplate');
          },
          set: function set(value) {
            this._setOption('appointmentCollectorTemplate', value);
          }
          /**
           * Configures appointment reordering using drag and drop gestures.
          
           */
        }, {
          key: "appointmentDragging",
          get: function get() {
            return this._getOption('appointmentDragging');
          },
          set: function set(value) {
            this._setOption('appointmentDragging', value);
          }
          /**
           * Specifies a custom template for appointments.
          
           */
        }, {
          key: "appointmentTemplate",
          get: function get() {
            return this._getOption('appointmentTemplate');
          },
          set: function set(value) {
            this._setOption('appointmentTemplate', value);
          }
          /**
           * Specifies a custom template for tooltips displayed when users click an appointment or cell overflow indicator.
          
           */
        }, {
          key: "appointmentTooltipTemplate",
          get: function get() {
            return this._getOption('appointmentTooltipTemplate');
          },
          set: function set(value) {
            this._setOption('appointmentTooltipTemplate', value);
          }
          /**
           * Specifies cell duration in minutes. This property&apos;s value should divide the interval between startDayHour and endDayHour into even parts.
          
           */
        }, {
          key: "cellDuration",
          get: function get() {
            return this._getOption('cellDuration');
          },
          set: function set(value) {
            this._setOption('cellDuration', value);
          }
          /**
           * Specifies whether or not an end user can scroll the view in both directions at the same time.
          
           */
        }, {
          key: "crossScrollingEnabled",
          get: function get() {
            return this._getOption('crossScrollingEnabled');
          },
          set: function set(value) {
            this._setOption('crossScrollingEnabled', value);
          }
          /**
           * Specifies the current date.
          
           */
        }, {
          key: "currentDate",
          get: function get() {
            return this._getOption('currentDate');
          },
          set: function set(value) {
            this._setOption('currentDate', value);
          }
          /**
           * Specifies the displayed view. Accepts name or type of a view available in the views array.
          
           */
        }, {
          key: "currentView",
          get: function get() {
            return this._getOption('currentView');
          },
          set: function set(value) {
            this._setOption('currentView', value);
          }
          /**
           * Customizes the date navigator&apos;s text.
          
           */
        }, {
          key: "customizeDateNavigatorText",
          get: function get() {
            return this._getOption('customizeDateNavigatorText');
          },
          set: function set(value) {
            this._setOption('customizeDateNavigatorText', value);
          }
          /**
           * Specifies a custom template for table cells.
          
           */
        }, {
          key: "dataCellTemplate",
          get: function get() {
            return this._getOption('dataCellTemplate');
          },
          set: function set(value) {
            this._setOption('dataCellTemplate', value);
          }
          /**
           * Binds the UI component to data.
          
           */
        }, {
          key: "dataSource",
          get: function get() {
            return this._getOption('dataSource');
          },
          set: function set(value) {
            this._setOption('dataSource', value);
          }
          /**
           * Specifies a custom template for day scale items.
          
           */
        }, {
          key: "dateCellTemplate",
          get: function get() {
            return this._getOption('dateCellTemplate');
          },
          set: function set(value) {
            this._setOption('dateCellTemplate', value);
          }
          /**
           * Specifies the format in which date-time values should be sent to the server.
          
           */
        }, {
          key: "dateSerializationFormat",
          get: function get() {
            return this._getOption('dateSerializationFormat');
          },
          set: function set(value) {
            this._setOption('dateSerializationFormat', value);
          }
          /**
           * Specifies the name of the data source item field whose value holds the description of the corresponding appointment.
          
           */
        }, {
          key: "descriptionExpr",
          get: function get() {
            return this._getOption('descriptionExpr');
          },
          set: function set(value) {
            this._setOption('descriptionExpr', value);
          }
          /**
           * Specifies whether the UI component responds to user interaction.
          
           */
        }, {
          key: "disabled",
          get: function get() {
            return this._getOption('disabled');
          },
          set: function set(value) {
            this._setOption('disabled', value);
          }
          /**
           * Specifies a custom template for tooltips displayed when users click a cell overflow indicator.
          
           * @deprecated Use the appointmentTooltipTemplate option instead.
          
           */
        }, {
          key: "dropDownAppointmentTemplate",
          get: function get() {
            return this._getOption('dropDownAppointmentTemplate');
          },
          set: function set(value) {
            this._setOption('dropDownAppointmentTemplate', value);
          }
          /**
           * Specifies which editing operations a user can perform on appointments.
          
           */
        }, {
          key: "editing",
          get: function get() {
            return this._getOption('editing');
          },
          set: function set(value) {
            this._setOption('editing', value);
          }
          /**
           * Specifies the global attributes to be attached to the UI component&apos;s container element.
          
           */
        }, {
          key: "elementAttr",
          get: function get() {
            return this._getOption('elementAttr');
          },
          set: function set(value) {
            this._setOption('elementAttr', value);
          }
          /**
           * Specifies the name of the data source item field that defines the ending of an appointment.
          
           */
        }, {
          key: "endDateExpr",
          get: function get() {
            return this._getOption('endDateExpr');
          },
          set: function set(value) {
            this._setOption('endDateExpr', value);
          }
          /**
           * Specifies the name of the data source item field that defines the timezone of the appointment end date.
          
           */
        }, {
          key: "endDateTimeZoneExpr",
          get: function get() {
            return this._getOption('endDateTimeZoneExpr');
          },
          set: function set(value) {
            this._setOption('endDateTimeZoneExpr', value);
          }
          /**
           * Specifies the last hour on the time scale. Accepts integer values from 0 to 24.
          
           */
        }, {
          key: "endDayHour",
          get: function get() {
            return this._getOption('endDayHour');
          },
          set: function set(value) {
            this._setOption('endDayHour', value);
          }
          /**
           * Specifies the first day of a week. Does not apply to the agenda view.
          
           */
        }, {
          key: "firstDayOfWeek",
          get: function get() {
            return this._getOption('firstDayOfWeek');
          },
          set: function set(value) {
            this._setOption('firstDayOfWeek', value);
          }
          /**
           * Specifies whether the UI component can be focused using keyboard navigation.
          
           */
        }, {
          key: "focusStateEnabled",
          get: function get() {
            return this._getOption('focusStateEnabled');
          },
          set: function set(value) {
            this._setOption('focusStateEnabled', value);
          }
          /**
           * If true, appointments are grouped by date first and then by resource; opposite if false. Applies only if appointments are grouped and groupOrientation is &apos;horizontal&apos;.
          
           */
        }, {
          key: "groupByDate",
          get: function get() {
            return this._getOption('groupByDate');
          },
          set: function set(value) {
            this._setOption('groupByDate', value);
          }
          /**
           * Specifies the resource kinds by which the scheduler&apos;s appointments are grouped in a timetable.
          
           */
        }, {
          key: "groups",
          get: function get() {
            return this._getOption('groups');
          },
          set: function set(value) {
            this._setOption('groups', value);
          }
          /**
           * Specifies the UI component&apos;s height.
          
           */
        }, {
          key: "height",
          get: function get() {
            return this._getOption('height');
          },
          set: function set(value) {
            this._setOption('height', value);
          }
          /**
           * Specifies text for a hint that appears when a user pauses on the UI component.
          
           */
        }, {
          key: "hint",
          get: function get() {
            return this._getOption('hint');
          },
          set: function set(value) {
            this._setOption('hint', value);
          }
          /**
           * Specifies the time interval between when the date-time indicator changes its position, in milliseconds.
          
           */
        }, {
          key: "indicatorUpdateInterval",
          get: function get() {
            return this._getOption('indicatorUpdateInterval');
          },
          set: function set(value) {
            this._setOption('indicatorUpdateInterval', value);
          }
          /**
           * The latest date the UI component allows you to select.
          
           */
        }, {
          key: "max",
          get: function get() {
            return this._getOption('max');
          },
          set: function set(value) {
            this._setOption('max', value);
          }
          /**
           * Specifies the limit of full-sized appointments displayed per cell. Applies to all views except &apos;agenda&apos;.
          
           */
        }, {
          key: "maxAppointmentsPerCell",
          get: function get() {
            return this._getOption('maxAppointmentsPerCell');
          },
          set: function set(value) {
            this._setOption('maxAppointmentsPerCell', value);
          }
          /**
           * The earliest date the UI component allows you to select.
          
           */
        }, {
          key: "min",
          get: function get() {
            return this._getOption('min');
          },
          set: function set(value) {
            this._setOption('min', value);
          }
          /**
           * Specifies the text or HTML markup displayed by the UI component if the item collection is empty. Available for the Agenda view only.
          
           */
        }, {
          key: "noDataText",
          get: function get() {
            return this._getOption('noDataText');
          },
          set: function set(value) {
            this._setOption('noDataText', value);
          }
          /**
           * Specifies the edit mode for recurring appointments.
          
           */
        }, {
          key: "recurrenceEditMode",
          get: function get() {
            return this._getOption('recurrenceEditMode');
          },
          set: function set(value) {
            this._setOption('recurrenceEditMode', value);
          }
          /**
           * Specifies the name of the data source item field that defines exceptions for the current recurring appointment.
          
           */
        }, {
          key: "recurrenceExceptionExpr",
          get: function get() {
            return this._getOption('recurrenceExceptionExpr');
          },
          set: function set(value) {
            this._setOption('recurrenceExceptionExpr', value);
          }
          /**
           * Specifies the name of the data source item field that defines a recurrence rule for generating recurring appointments.
          
           */
        }, {
          key: "recurrenceRuleExpr",
          get: function get() {
            return this._getOption('recurrenceRuleExpr');
          },
          set: function set(value) {
            this._setOption('recurrenceRuleExpr', value);
          }
          /**
           * Specifies whether filtering is performed on the server or client side.
          
           */
        }, {
          key: "remoteFiltering",
          get: function get() {
            return this._getOption('remoteFiltering');
          },
          set: function set(value) {
            this._setOption('remoteFiltering', value);
          }
          /**
           * Specifies a custom template for resource headers.
          
           */
        }, {
          key: "resourceCellTemplate",
          get: function get() {
            return this._getOption('resourceCellTemplate');
          },
          set: function set(value) {
            this._setOption('resourceCellTemplate', value);
          }
          /**
           * Specifies an array of resources available in the scheduler.
          
           */
        }, {
          key: "resources",
          get: function get() {
            return this._getOption('resources');
          },
          set: function set(value) {
            this._setOption('resources', value);
          }
          /**
           * Switches the UI component to a right-to-left representation.
          
           */
        }, {
          key: "rtlEnabled",
          get: function get() {
            return this._getOption('rtlEnabled');
          },
          set: function set(value) {
            this._setOption('rtlEnabled', value);
          }
          /**
           * Configures scrolling.
          
           */
        }, {
          key: "scrolling",
          get: function get() {
            return this._getOption('scrolling');
          },
          set: function set(value) {
            this._setOption('scrolling', value);
          }
          /**
           * The data of the currently selected cells.
          
           */
        }, {
          key: "selectedCellData",
          get: function get() {
            return this._getOption('selectedCellData');
          },
          set: function set(value) {
            this._setOption('selectedCellData', value);
          }
          /**
           * Specifies whether to apply shading to cover the timetable up to the current time.
          
           */
        }, {
          key: "shadeUntilCurrentTime",
          get: function get() {
            return this._getOption('shadeUntilCurrentTime');
          },
          set: function set(value) {
            this._setOption('shadeUntilCurrentTime', value);
          }
          /**
           * Specifies the &apos;All-day&apos; panel&apos;s visibility. Setting this property to false hides the panel along with the all-day appointments.
          
           */
        }, {
          key: "showAllDayPanel",
          get: function get() {
            return this._getOption('showAllDayPanel');
          },
          set: function set(value) {
            this._setOption('showAllDayPanel', value);
          }
          /**
           * Specifies the current date-time indicator&apos;s visibility.
          
           */
        }, {
          key: "showCurrentTimeIndicator",
          get: function get() {
            return this._getOption('showCurrentTimeIndicator');
          },
          set: function set(value) {
            this._setOption('showCurrentTimeIndicator', value);
          }
          /**
           * Specifies the name of the data source item field that defines the start of an appointment.
          
           */
        }, {
          key: "startDateExpr",
          get: function get() {
            return this._getOption('startDateExpr');
          },
          set: function set(value) {
            this._setOption('startDateExpr', value);
          }
          /**
           * Specifies the name of the data source item field that defines the timezone of the appointment start date.
          
           */
        }, {
          key: "startDateTimeZoneExpr",
          get: function get() {
            return this._getOption('startDateTimeZoneExpr');
          },
          set: function set(value) {
            this._setOption('startDateTimeZoneExpr', value);
          }
          /**
           * Specifies the first hour on the time scale. Accepts integer values from 0 to 24.
          
           */
        }, {
          key: "startDayHour",
          get: function get() {
            return this._getOption('startDayHour');
          },
          set: function set(value) {
            this._setOption('startDayHour', value);
          }
          /**
           * Specifies the number of the element when the Tab key is used for navigating.
          
           */
        }, {
          key: "tabIndex",
          get: function get() {
            return this._getOption('tabIndex');
          },
          set: function set(value) {
            this._setOption('tabIndex', value);
          }
          /**
           * Specifies the name of the data source item field that holds the subject of an appointment.
          
           */
        }, {
          key: "textExpr",
          get: function get() {
            return this._getOption('textExpr');
          },
          set: function set(value) {
            this._setOption('textExpr', value);
          }
          /**
           * Specifies a custom template for time scale items.
          
           */
        }, {
          key: "timeCellTemplate",
          get: function get() {
            return this._getOption('timeCellTemplate');
          },
          set: function set(value) {
            this._setOption('timeCellTemplate', value);
          }
          /**
           * Specifies the time zone for the Scheduler&apos;s grid. Accepts values from the IANA time zone database.
          
           */
        }, {
          key: "timeZone",
          get: function get() {
            return this._getOption('timeZone');
          },
          set: function set(value) {
            this._setOption('timeZone', value);
          }
          /**
           * Specifies whether a user can switch views using tabs or a drop-down menu.
          
           */
        }, {
          key: "useDropDownViewSwitcher",
          get: function get() {
            return this._getOption('useDropDownViewSwitcher');
          },
          set: function set(value) {
            this._setOption('useDropDownViewSwitcher', value);
          }
          /**
           * Specifies and configures the views to be available in the view switcher.
          
           */
        }, {
          key: "views",
          get: function get() {
            return this._getOption('views');
          },
          set: function set(value) {
            this._setOption('views', value);
          }
          /**
           * Specifies whether the UI component is visible.
          
           */
        }, {
          key: "visible",
          get: function get() {
            return this._getOption('visible');
          },
          set: function set(value) {
            this._setOption('visible', value);
          }
          /**
           * Specifies the UI component&apos;s width.
          
           */
        }, {
          key: "width",
          get: function get() {
            return this._getOption('width');
          },
          set: function set(value) {
            this._setOption('width', value);
          }
        }, {
          key: "resourcesChildren",
          get: function get() {
            return this._getOption('resources');
          },
          set: function set(value) {
            this.setChildren('resources', value);
          }
        }, {
          key: "viewsChildren",
          get: function get() {
            return this._getOption('views');
          },
          set: function set(value) {
            this.setChildren('views', value);
          }
        }, {
          key: "_createInstance",
          value: function _createInstance(element, options) {
            return new devextreme_ui_scheduler__WEBPACK_IMPORTED_MODULE_0__["default"](element, options);
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this._destroyWidget();
          }
        }, {
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            _get(_getPrototypeOf(_DxSchedulerComponent.prototype), "ngOnChanges", this).call(this, changes);
            this.setupChanges('dataSource', changes);
            this.setupChanges('groups', changes);
            this.setupChanges('resources', changes);
            this.setupChanges('selectedCellData', changes);
            this.setupChanges('views', changes);
          }
        }, {
          key: "setupChanges",
          value: function setupChanges(prop, changes) {
            if (!(prop in this._optionsToUpdate)) {
              this._idh.setup(prop, changes);
            }
          }
        }, {
          key: "ngDoCheck",
          value: function ngDoCheck() {
            this._idh.doCheck('dataSource');
            this._idh.doCheck('groups');
            this._idh.doCheck('resources');
            this._idh.doCheck('selectedCellData');
            this._idh.doCheck('views');
            this._watcherHelper.checkWatchers();
            _get(_getPrototypeOf(_DxSchedulerComponent.prototype), "ngDoCheck", this).call(this);
            _get(_getPrototypeOf(_DxSchedulerComponent.prototype), "clearChangedOptions", this).call(this);
          }
        }, {
          key: "_setOption",
          value: function _setOption(name, value) {
            var isSetup = this._idh.setupSingle(name, value);
            var isChanged = this._idh.getChanges(name, value) !== null;
            if (isSetup || isChanged) {
              _get(_getPrototypeOf(_DxSchedulerComponent.prototype), "_setOption", this).call(this, name, value);
            }
          }
        }]);
        return _DxSchedulerComponent;
      }(devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxComponent);
      /** @nocollapse */
      _DxSchedulerComponent.ɵfac = function DxSchedulerComponent_Factory(t) {
        return new (t || _DxSchedulerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDifferHelper), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.TransferState), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.PLATFORM_ID));
      };
      /** @nocollapse */
      _DxSchedulerComponent.ɵcmp = /** @pureOrBreakMyCode */_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({
        type: _DxSchedulerComponent,
        selectors: [["dx-scheduler"]],
        contentQueries: function DxSchedulerComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵcontentQuery"](dirIndex, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceComponent, 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵcontentQuery"](dirIndex, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewComponent, 4);
          }
          if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.resourcesChildren = _t);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.viewsChildren = _t);
          }
        },
        inputs: {
          accessKey: "accessKey",
          adaptivityEnabled: "adaptivityEnabled",
          allDayExpr: "allDayExpr",
          allDayPanelMode: "allDayPanelMode",
          appointmentCollectorTemplate: "appointmentCollectorTemplate",
          appointmentDragging: "appointmentDragging",
          appointmentTemplate: "appointmentTemplate",
          appointmentTooltipTemplate: "appointmentTooltipTemplate",
          cellDuration: "cellDuration",
          crossScrollingEnabled: "crossScrollingEnabled",
          currentDate: "currentDate",
          currentView: "currentView",
          customizeDateNavigatorText: "customizeDateNavigatorText",
          dataCellTemplate: "dataCellTemplate",
          dataSource: "dataSource",
          dateCellTemplate: "dateCellTemplate",
          dateSerializationFormat: "dateSerializationFormat",
          descriptionExpr: "descriptionExpr",
          disabled: "disabled",
          dropDownAppointmentTemplate: "dropDownAppointmentTemplate",
          editing: "editing",
          elementAttr: "elementAttr",
          endDateExpr: "endDateExpr",
          endDateTimeZoneExpr: "endDateTimeZoneExpr",
          endDayHour: "endDayHour",
          firstDayOfWeek: "firstDayOfWeek",
          focusStateEnabled: "focusStateEnabled",
          groupByDate: "groupByDate",
          groups: "groups",
          height: "height",
          hint: "hint",
          indicatorUpdateInterval: "indicatorUpdateInterval",
          max: "max",
          maxAppointmentsPerCell: "maxAppointmentsPerCell",
          min: "min",
          noDataText: "noDataText",
          recurrenceEditMode: "recurrenceEditMode",
          recurrenceExceptionExpr: "recurrenceExceptionExpr",
          recurrenceRuleExpr: "recurrenceRuleExpr",
          remoteFiltering: "remoteFiltering",
          resourceCellTemplate: "resourceCellTemplate",
          resources: "resources",
          rtlEnabled: "rtlEnabled",
          scrolling: "scrolling",
          selectedCellData: "selectedCellData",
          shadeUntilCurrentTime: "shadeUntilCurrentTime",
          showAllDayPanel: "showAllDayPanel",
          showCurrentTimeIndicator: "showCurrentTimeIndicator",
          startDateExpr: "startDateExpr",
          startDateTimeZoneExpr: "startDateTimeZoneExpr",
          startDayHour: "startDayHour",
          tabIndex: "tabIndex",
          textExpr: "textExpr",
          timeCellTemplate: "timeCellTemplate",
          timeZone: "timeZone",
          useDropDownViewSwitcher: "useDropDownViewSwitcher",
          views: "views",
          visible: "visible",
          width: "width"
        },
        outputs: {
          onAppointmentAdded: "onAppointmentAdded",
          onAppointmentAdding: "onAppointmentAdding",
          onAppointmentClick: "onAppointmentClick",
          onAppointmentContextMenu: "onAppointmentContextMenu",
          onAppointmentDblClick: "onAppointmentDblClick",
          onAppointmentDeleted: "onAppointmentDeleted",
          onAppointmentDeleting: "onAppointmentDeleting",
          onAppointmentFormOpening: "onAppointmentFormOpening",
          onAppointmentRendered: "onAppointmentRendered",
          onAppointmentTooltipShowing: "onAppointmentTooltipShowing",
          onAppointmentUpdated: "onAppointmentUpdated",
          onAppointmentUpdating: "onAppointmentUpdating",
          onCellClick: "onCellClick",
          onCellContextMenu: "onCellContextMenu",
          onContentReady: "onContentReady",
          onDisposing: "onDisposing",
          onInitialized: "onInitialized",
          onOptionChanged: "onOptionChanged",
          accessKeyChange: "accessKeyChange",
          adaptivityEnabledChange: "adaptivityEnabledChange",
          allDayExprChange: "allDayExprChange",
          allDayPanelModeChange: "allDayPanelModeChange",
          appointmentCollectorTemplateChange: "appointmentCollectorTemplateChange",
          appointmentDraggingChange: "appointmentDraggingChange",
          appointmentTemplateChange: "appointmentTemplateChange",
          appointmentTooltipTemplateChange: "appointmentTooltipTemplateChange",
          cellDurationChange: "cellDurationChange",
          crossScrollingEnabledChange: "crossScrollingEnabledChange",
          currentDateChange: "currentDateChange",
          currentViewChange: "currentViewChange",
          customizeDateNavigatorTextChange: "customizeDateNavigatorTextChange",
          dataCellTemplateChange: "dataCellTemplateChange",
          dataSourceChange: "dataSourceChange",
          dateCellTemplateChange: "dateCellTemplateChange",
          dateSerializationFormatChange: "dateSerializationFormatChange",
          descriptionExprChange: "descriptionExprChange",
          disabledChange: "disabledChange",
          dropDownAppointmentTemplateChange: "dropDownAppointmentTemplateChange",
          editingChange: "editingChange",
          elementAttrChange: "elementAttrChange",
          endDateExprChange: "endDateExprChange",
          endDateTimeZoneExprChange: "endDateTimeZoneExprChange",
          endDayHourChange: "endDayHourChange",
          firstDayOfWeekChange: "firstDayOfWeekChange",
          focusStateEnabledChange: "focusStateEnabledChange",
          groupByDateChange: "groupByDateChange",
          groupsChange: "groupsChange",
          heightChange: "heightChange",
          hintChange: "hintChange",
          indicatorUpdateIntervalChange: "indicatorUpdateIntervalChange",
          maxChange: "maxChange",
          maxAppointmentsPerCellChange: "maxAppointmentsPerCellChange",
          minChange: "minChange",
          noDataTextChange: "noDataTextChange",
          recurrenceEditModeChange: "recurrenceEditModeChange",
          recurrenceExceptionExprChange: "recurrenceExceptionExprChange",
          recurrenceRuleExprChange: "recurrenceRuleExprChange",
          remoteFilteringChange: "remoteFilteringChange",
          resourceCellTemplateChange: "resourceCellTemplateChange",
          resourcesChange: "resourcesChange",
          rtlEnabledChange: "rtlEnabledChange",
          scrollingChange: "scrollingChange",
          selectedCellDataChange: "selectedCellDataChange",
          shadeUntilCurrentTimeChange: "shadeUntilCurrentTimeChange",
          showAllDayPanelChange: "showAllDayPanelChange",
          showCurrentTimeIndicatorChange: "showCurrentTimeIndicatorChange",
          startDateExprChange: "startDateExprChange",
          startDateTimeZoneExprChange: "startDateTimeZoneExprChange",
          startDayHourChange: "startDayHourChange",
          tabIndexChange: "tabIndexChange",
          textExprChange: "textExprChange",
          timeCellTemplateChange: "timeCellTemplateChange",
          timeZoneChange: "timeZoneChange",
          useDropDownViewSwitcherChange: "useDropDownViewSwitcherChange",
          viewsChange: "viewsChange",
          visibleChange: "visibleChange",
          widthChange: "widthChange"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵProvidersFeature"]([devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDifferHelper]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵNgOnChangesFeature"]],
        decls: 0,
        vars: 0,
        template: function DxSchedulerComponent_Template(rf, ctx) {},
        encapsulation: 2
      });
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](_DxSchedulerComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Component,
          args: [{
            selector: 'dx-scheduler',
            template: '',
            providers: [devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDifferHelper]
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ElementRef
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone
          }, {
            type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateHost
          }, {
            type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.WatcherHelper
          }, {
            type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.IterableDifferHelper
          }, {
            type: devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.NestedOptionHost
          }, {
            type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.TransferState
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_2__.PLATFORM_ID]
            }]
          }];
        }, {
          accessKey: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          adaptivityEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          allDayExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          allDayPanelMode: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          appointmentCollectorTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          appointmentDragging: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          appointmentTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          appointmentTooltipTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          cellDuration: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          crossScrollingEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          currentDate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          currentView: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          customizeDateNavigatorText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          dataCellTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          dataSource: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          dateCellTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          dateSerializationFormat: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          descriptionExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          disabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          dropDownAppointmentTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          editing: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          elementAttr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          endDateExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          endDateTimeZoneExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          endDayHour: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          firstDayOfWeek: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          focusStateEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          groupByDate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          groups: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          height: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          hint: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          indicatorUpdateInterval: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          max: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          maxAppointmentsPerCell: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          min: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          noDataText: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          recurrenceEditMode: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          recurrenceExceptionExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          recurrenceRuleExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          remoteFiltering: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          resourceCellTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          resources: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          rtlEnabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          scrolling: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          selectedCellData: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          shadeUntilCurrentTime: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          showAllDayPanel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          showCurrentTimeIndicator: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          startDateExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          startDateTimeZoneExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          startDayHour: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          tabIndex: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          textExpr: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          timeCellTemplate: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          timeZone: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          useDropDownViewSwitcher: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          views: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          visible: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          width: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
          }],
          onAppointmentAdded: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentAdding: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentContextMenu: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentDblClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentDeleted: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentDeleting: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentFormOpening: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentRendered: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentTooltipShowing: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentUpdated: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onAppointmentUpdating: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onCellClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onCellContextMenu: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onContentReady: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onDisposing: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onInitialized: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          onOptionChanged: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          accessKeyChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          adaptivityEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          allDayExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          allDayPanelModeChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          appointmentCollectorTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          appointmentDraggingChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          appointmentTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          appointmentTooltipTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          cellDurationChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          crossScrollingEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          currentDateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          currentViewChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          customizeDateNavigatorTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          dataCellTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          dataSourceChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          dateCellTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          dateSerializationFormatChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          descriptionExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          disabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          dropDownAppointmentTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          editingChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          elementAttrChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          endDateExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          endDateTimeZoneExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          endDayHourChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          firstDayOfWeekChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          focusStateEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          groupByDateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          groupsChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          heightChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          hintChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          indicatorUpdateIntervalChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          maxChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          maxAppointmentsPerCellChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          minChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          noDataTextChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          recurrenceEditModeChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          recurrenceExceptionExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          recurrenceRuleExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          remoteFilteringChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          resourceCellTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          resourcesChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          rtlEnabledChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          scrollingChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          selectedCellDataChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          shadeUntilCurrentTimeChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          showAllDayPanelChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          showCurrentTimeIndicatorChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          startDateExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          startDateTimeZoneExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          startDayHourChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          tabIndexChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          textExprChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          timeCellTemplateChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          timeZoneChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          useDropDownViewSwitcherChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          viewsChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          visibleChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          widthChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
          }],
          resourcesChildren: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChildren,
            args: [devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceComponent]
          }],
          viewsChildren: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChildren,
            args: [devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewComponent]
          }]
        });
      })();
      var _DxSchedulerModule = /*#__PURE__*/_createClass(function _DxSchedulerModule() {
        _classCallCheck(this, _DxSchedulerModule);
      });
      /** @nocollapse */
      _DxSchedulerModule.ɵfac = function DxSchedulerModule_Factory(t) {
        return new (t || _DxSchedulerModule)();
      };
      /** @nocollapse */
      _DxSchedulerModule.ɵmod = /** @pureOrBreakMyCode */_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
        type: _DxSchedulerModule
      });
      /** @nocollapse */
      _DxSchedulerModule.ɵinj = /** @pureOrBreakMyCode */_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
        imports: [[devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule], devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule]
      });
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](_DxSchedulerModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule,
          args: [{
            imports: [devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule],
            declarations: [_DxSchedulerComponent],
            exports: [_DxSchedulerComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule]
          }]
        }], null, null);
      })();
      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](_DxSchedulerModule, {
          declarations: [_DxSchedulerComponent],
          imports: [devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxIntegrationModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserTransferStateModule],
          exports: [_DxSchedulerComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoAppointmentDraggingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoEditingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiResourceModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoScrollingModule, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxiViewModule, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_1__.DxTemplateModule]
        });
      })();

      /**
       * Generated bundle index. Do not edit.
       */

      /***/
    }),
    /***/5946: (
    /*!*******************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/core/utils/math.js ***!
      \*******************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"shiftIntegerByModule": function shiftIntegerByModule() {
          return /* binding */_shiftIntegerByModule;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/__internal/core/utils/math.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _shiftIntegerByModule = function _shiftIntegerByModule(integerValue, moduleValue) {
        if (!Number.isInteger(integerValue)) {
          throw Error("Passed integer value ".concat(integerValue, " is not an integer."));
        }
        if (!Number.isInteger(moduleValue)) {
          throw Error("Passed module value ".concat(moduleValue, " is not an integer."));
        }
        if (moduleValue <= 0) {
          throw Error("Passed module value ".concat(moduleValue, " must be > 0."));
        }
        var normalizedInteger = integerValue % moduleValue;
        switch (true) {
          case 0 === normalizedInteger:
            return 0;
          case normalizedInteger > 0:
            return normalizedInteger;
          case normalizedInteger < 0:
            return moduleValue + normalizedInteger;
          default:
            throw Error("Unexpected division (".concat(integerValue, " % ").concat(moduleValue, ") occurred."));
        }
      };

      /***/
    }),
    /***/39348: (
    /*!***************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/m_draggable.js ***!
      \***************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _animation_position__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../animation/position */85094);
      /* harmony import */
      var _animation_translator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../animation/translator */10829);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../core/dom_adapter */81113);
      /* harmony import */
      var _core_dom_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../core/dom_component */530);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../core/element */60213);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _core_templates_empty_template__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../core/templates/empty_template */3896);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../core/utils/common */37552);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_inflector__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../core/utils/inflector */75102);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../core/utils/position */9622);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../core/utils/size */84167);
      /* harmony import */
      var _core_utils_string__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../core/utils/string */13089);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ../core/utils/type */33275);
      /* harmony import */
      var _core_utils_view_port__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__( /*! ../core/utils/view_port */30228);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__( /*! ../core/utils/window */88684);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__( /*! ../events/core/events_engine */99064);
      /* harmony import */
      var _events_drag__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__( /*! ../events/drag */85970);
      /* harmony import */
      var _events_pointer__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__( /*! ../events/pointer */24842);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__( /*! ../events/utils/index */3151);
      /* harmony import */
      var _ui_scroll_view_animator__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__( /*! ../ui/scroll_view/animator */10795);
      /**
       * DevExtreme (esm/__internal/m_draggable.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var window = (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_18__.getWindow)();
      var KEYDOWN_EVENT = "keydown";
      var DRAGGABLE = "dxDraggable";
      var DRAGSTART_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_20__.start, DRAGGABLE);
      var DRAG_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_20__.move, DRAGGABLE);
      var DRAGEND_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_20__.end, DRAGGABLE);
      var DRAG_ENTER_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_20__.enter, DRAGGABLE);
      var DRAGEND_LEAVE_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_20__.leave, DRAGGABLE);
      var POINTERDOWN_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_21__["default"].down, DRAGGABLE);
      var KEYDOWN_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_22__.addNamespace)(KEYDOWN_EVENT, DRAGGABLE);
      var CLONE_CLASS = "clone";
      var targetDraggable;
      var sourceDraggable;
      var ANONYMOUS_TEMPLATE_NAME = "content";
      var getMousePosition = function getMousePosition(event) {
        return {
          x: event.pageX - (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(window).scrollLeft(),
          y: event.pageY - (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(window).scrollTop()
        };
      };
      var GESTURE_COVER_CLASS = "dx-gesture-cover";
      var OVERLAY_WRAPPER_CLASS = "dx-overlay-wrapper";
      var OVERLAY_CONTENT_CLASS = "dx-overlay-content";
      var ScrollHelper = /*#__PURE__*/function () {
        function ScrollHelper(orientation, component) {
          _classCallCheck(this, ScrollHelper);
          this._$scrollableAtPointer = null;
          this._preventScroll = true;
          this._component = component;
          if ("vertical" === orientation) {
            this._scrollValue = "scrollTop";
            this._overFlowAttr = "overflowY";
            this._sizeAttr = "height";
            this._scrollSizeProp = "scrollHeight";
            this._clientSizeProp = "clientHeight";
            this._limitProps = {
              start: "top",
              end: "bottom"
            };
          } else {
            this._scrollValue = "scrollLeft";
            this._overFlowAttr = "overflowX";
            this._sizeAttr = "width";
            this._scrollSizeProp = "scrollWidth";
            this._clientSizeProp = "clientWidth";
            this._limitProps = {
              start: "left",
              end: "right"
            };
          }
        }
        _createClass(ScrollHelper, [{
          key: "updateScrollable",
          value: function updateScrollable(elements, mousePosition) {
            var _this3 = this;
            var isScrollableFound = false;
            elements.some(function (element) {
              var $element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(element);
              var isTargetOverOverlayWrapper = $element.hasClass(OVERLAY_WRAPPER_CLASS);
              var isTargetOverOverlayContent = $element.hasClass(OVERLAY_CONTENT_CLASS);
              if (isTargetOverOverlayWrapper || isTargetOverOverlayContent) {
                return true;
              }
              isScrollableFound = _this3._trySetScrollable(element, mousePosition);
              return isScrollableFound;
            });
            if (!isScrollableFound) {
              this._$scrollableAtPointer = null;
              this._scrollSpeed = 0;
            }
          }
        }, {
          key: "isScrolling",
          value: function isScrolling() {
            return !!this._scrollSpeed;
          }
        }, {
          key: "isScrollable",
          value: function isScrollable($element) {
            return ("auto" === $element.css(this._overFlowAttr) || $element.hasClass("dx-scrollable-container")) && $element.prop(this._scrollSizeProp) > Math.ceil("width" === this._sizeAttr ? (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getWidth)($element) : (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getHeight)($element));
          }
        }, {
          key: "_trySetScrollable",
          value: function _trySetScrollable(element, mousePosition) {
            var $element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(element);
            var distanceToBorders;
            var sensitivity = this._component.option("scrollSensitivity");
            var isScrollable = this.isScrollable($element);
            if (isScrollable) {
              distanceToBorders = this._calculateDistanceToBorders($element, mousePosition);
              if (sensitivity > distanceToBorders[this._limitProps.start]) {
                if (!this._preventScroll) {
                  this._scrollSpeed = -this._calculateScrollSpeed(distanceToBorders[this._limitProps.start]);
                  this._$scrollableAtPointer = $element;
                }
              } else if (sensitivity > distanceToBorders[this._limitProps.end]) {
                if (!this._preventScroll) {
                  this._scrollSpeed = this._calculateScrollSpeed(distanceToBorders[this._limitProps.end]);
                  this._$scrollableAtPointer = $element;
                }
              } else {
                isScrollable = false;
                this._preventScroll = false;
              }
            }
            return isScrollable;
          }
        }, {
          key: "_calculateDistanceToBorders",
          value: function _calculateDistanceToBorders($area, mousePosition) {
            var area = $area.get(0);
            var areaBoundingRect;
            if (area) {
              areaBoundingRect = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_13__.getBoundingRect)(area);
              return {
                left: mousePosition.x - areaBoundingRect.left,
                top: mousePosition.y - areaBoundingRect.top,
                right: areaBoundingRect.right - mousePosition.x,
                bottom: areaBoundingRect.bottom - mousePosition.y
              };
            }
            return {};
          }
        }, {
          key: "_calculateScrollSpeed",
          value: function _calculateScrollSpeed(distance) {
            var component = this._component;
            var sensitivity = component.option("scrollSensitivity");
            var maxSpeed = component.option("scrollSpeed");
            return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed);
          }
        }, {
          key: "scrollByStep",
          value: function scrollByStep() {
            if (this._$scrollableAtPointer && this._scrollSpeed) {
              if (this._$scrollableAtPointer.hasClass("dx-scrollable-container")) {
                var $scrollable = this._$scrollableAtPointer.closest(".dx-scrollable");
                var scrollableInstance = $scrollable.data("dxScrollable") || $scrollable.data("dxScrollView");
                if (scrollableInstance) {
                  var nextScrollPosition = scrollableInstance.scrollOffset()[this._limitProps.start] + this._scrollSpeed;
                  scrollableInstance.scrollTo(_defineProperty({}, this._limitProps.start, nextScrollPosition));
                }
              } else {
                var _nextScrollPosition = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;
                this._$scrollableAtPointer[this._scrollValue](_nextScrollPosition);
              }
              var dragMoveArgs = this._component._dragMoveArgs;
              if (dragMoveArgs) {
                this._component._dragMoveHandler(dragMoveArgs);
              }
            }
          }
        }, {
          key: "reset",
          value: function reset() {
            this._$scrollableAtPointer = null;
            this._scrollSpeed = 0;
            this._preventScroll = true;
          }
        }, {
          key: "isOutsideScrollable",
          value: function isOutsideScrollable($scrollable, event) {
            if (!$scrollable) {
              return false;
            }
            var scrollableSize = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_13__.getBoundingRect)($scrollable.get(0));
            var start = scrollableSize[this._limitProps.start];
            var size = scrollableSize[this._sizeAttr];
            var mousePosition = getMousePosition(event);
            var location = "width" === this._sizeAttr ? mousePosition.x : mousePosition.y;
            return location < start || location > start + size;
          }
        }]);
        return ScrollHelper;
      }();
      var ScrollAnimator = _ui_scroll_view_animator__WEBPACK_IMPORTED_MODULE_23__["default"].inherit({
        ctor: function ctor(strategy) {
          this.callBase();
          this._strategy = strategy;
        },
        _step: function _step() {
          var horizontalScrollHelper = this._strategy._horizontalScrollHelper;
          var verticalScrollHelper = this._strategy._verticalScrollHelper;
          horizontalScrollHelper && horizontalScrollHelper.scrollByStep();
          verticalScrollHelper && verticalScrollHelper.scrollByStep();
        }
      });
      var Draggable = _core_dom_component__WEBPACK_IMPORTED_MODULE_5__["default"].inherit({
        reset: _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.noop,
        dragMove: _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.noop,
        dragEnter: _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.noop,
        dragLeave: _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.noop,
        dragEnd: function dragEnd(sourceEvent) {
          var sourceDraggable = this._getSourceDraggable();
          sourceDraggable._fireRemoveEvent(sourceEvent);
          return (0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.Deferred)().resolve();
        },
        _fireRemoveEvent: _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.noop,
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_11__.extend)(this.callBase(), {
            onDragStart: null,
            onDragMove: null,
            onDragEnd: null,
            onDragEnter: null,
            onDragLeave: null,
            onDragCancel: null,
            onCancelByEsc: false,
            onDrop: null,
            immediate: true,
            dragDirection: "both",
            boundary: void 0,
            boundOffset: 0,
            allowMoveByClick: false,
            itemData: null,
            container: void 0,
            dragTemplate: void 0,
            contentTemplate: "content",
            handle: "",
            filter: "",
            clone: false,
            autoScroll: true,
            scrollSpeed: 30,
            scrollSensitivity: 60,
            group: void 0,
            data: void 0
          });
        },
        _setOptionsByReference: function _setOptionsByReference() {
          this.callBase.apply(this, arguments);
          (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_11__.extend)(this._optionsByReference, {
            component: true,
            group: true,
            itemData: true,
            data: true
          });
        },
        _init: function _init() {
          this.callBase();
          this._attachEventHandlers();
          this._scrollAnimator = new ScrollAnimator(this);
          this._horizontalScrollHelper = new ScrollHelper("horizontal", this);
          this._verticalScrollHelper = new ScrollHelper("vertical", this);
          this._initScrollTop = 0;
          this._initScrollLeft = 0;
        },
        _normalizeCursorOffset: function _normalizeCursorOffset(offset) {
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isObject)(offset)) {
            offset = {
              h: offset.x,
              v: offset.y
            };
          }
          offset = (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_9__.splitPair)(offset).map(function (value) {
            return parseFloat(value);
          });
          return {
            left: offset[0],
            top: 1 === offset.length ? offset[0] : offset[1]
          };
        },
        _getNormalizedCursorOffset: function _getNormalizedCursorOffset(offset, options) {
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isFunction)(offset)) {
            offset = offset.call(this, options);
          }
          return this._normalizeCursorOffset(offset);
        },
        _calculateElementOffset: function _calculateElementOffset(options) {
          var elementOffset;
          var dragElementOffset;
          var event = options.event;
          var $element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(options.itemElement);
          var $dragElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(options.dragElement);
          var isCloned = this._dragElementIsCloned();
          var cursorOffset = this.option("cursorOffset");
          var normalizedCursorOffset = {
            left: 0,
            top: 0
          };
          var currentLocate = this._initialLocate = (0, _animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($dragElement);
          if (isCloned || options.initialOffset || cursorOffset) {
            elementOffset = options.initialOffset || $element.offset();
            if (cursorOffset) {
              normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);
              if (isFinite(normalizedCursorOffset.left)) {
                elementOffset.left = event.pageX;
              }
              if (isFinite(normalizedCursorOffset.top)) {
                elementOffset.top = event.pageY;
              }
            }
            dragElementOffset = $dragElement.offset();
            elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;
            elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left;
          }
          return elementOffset;
        },
        _initPosition: function _initPosition(options) {
          var $dragElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(options.dragElement);
          var elementOffset = this._calculateElementOffset(options);
          if (elementOffset) {
            this._move(elementOffset, $dragElement);
          }
          this._startPosition = (0, _animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($dragElement);
        },
        _startAnimator: function _startAnimator() {
          if (!this._scrollAnimator.inProgress()) {
            this._scrollAnimator.start();
          }
        },
        _stopAnimator: function _stopAnimator() {
          this._scrollAnimator.stop();
        },
        _addWidgetPrefix: function _addWidgetPrefix(className) {
          var componentName = this.NAME;
          return (0, _core_utils_inflector__WEBPACK_IMPORTED_MODULE_12__.dasherize)(componentName) + (className ? "-".concat(className) : "");
        },
        _getItemsSelector: function _getItemsSelector() {
          return this.option("filter") || "";
        },
        _$content: function _$content() {
          var $element = this.$element();
          var $wrapper = $element.children(".dx-template-wrapper");
          return $wrapper.length ? $wrapper : $element;
        },
        _attachEventHandlers: function _attachEventHandlers() {
          var _this4 = this;
          if (this.option("disabled")) {
            return;
          }
          var $element = this._$content();
          var itemsSelector = this._getItemsSelector();
          var allowMoveByClick = this.option("allowMoveByClick");
          var data = {
            direction: this.option("dragDirection"),
            immediate: this.option("immediate"),
            checkDropTarget: function checkDropTarget($target, event) {
              var targetGroup = _this4.option("group");
              var sourceGroup = _this4._getSourceDraggable().option("group");
              var $scrollable = _this4._getScrollable($target);
              if (_this4._verticalScrollHelper.isOutsideScrollable($scrollable, event) || _this4._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {
                return false;
              }
              return sourceGroup && sourceGroup === targetGroup;
            }
          };
          if (allowMoveByClick) {
            $element = this._getArea();
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__["default"].on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this));
          }
          if (">" === itemsSelector[0]) {
            itemsSelector = itemsSelector.slice(1);
          }
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__["default"].on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__["default"].on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__["default"].on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__["default"].on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__["default"].on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this));
          if (this.option("onCancelByEsc")) {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__["default"].on($element, KEYDOWN_EVENT_NAME, this._keydownHandler.bind(this));
          }
        },
        _dragElementIsCloned: function _dragElementIsCloned() {
          return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS));
        },
        _getDragTemplateArgs: function _getDragTemplateArgs($element, $container) {
          return {
            container: (0, _core_element__WEBPACK_IMPORTED_MODULE_6__.getPublicElement)($container),
            model: {
              itemData: this.option("itemData"),
              itemElement: (0, _core_element__WEBPACK_IMPORTED_MODULE_6__.getPublicElement)($element)
            }
          };
        },
        _createDragElement: function _createDragElement($element) {
          var result = $element;
          var clone = this.option("clone");
          var $container = this._getContainer();
          var template = this.option("dragTemplate");
          if (template) {
            template = this._getTemplate(template);
            result = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])("<div>").appendTo($container);
            template.render(this._getDragTemplateArgs($element, result));
          } else if (clone) {
            result = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])("<div>").appendTo($container);
            $element.clone().css({
              width: $element.css("width"),
              height: $element.css("height")
            }).appendTo(result);
          }
          return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass("dx-rtl", this.option("rtlEnabled"));
        },
        _resetDragElement: function _resetDragElement() {
          if (this._dragElementIsCloned()) {
            this._$dragElement.remove();
          } else {
            this._toggleDraggingClass(false);
          }
          this._$dragElement = null;
        },
        _resetSourceElement: function _resetSourceElement() {
          this._toggleDragSourceClass(false);
          this._$sourceElement = null;
        },
        _detachEventHandlers: function _detachEventHandlers() {
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__["default"].off(this._$content(), ".".concat(DRAGGABLE));
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_19__["default"].off(this._getArea(), ".".concat(DRAGGABLE));
        },
        _move: function _move(position, $element) {
          (0, _animation_translator__WEBPACK_IMPORTED_MODULE_2__.move)($element || this._$dragElement, position);
        },
        _getDraggableElement: function _getDraggableElement(e) {
          var $sourceElement = this._getSourceElement();
          if ($sourceElement) {
            return $sourceElement;
          }
          var allowMoveByClick = this.option("allowMoveByClick");
          if (allowMoveByClick) {
            return this.$element();
          }
          var $target = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(e && e.target);
          var itemsSelector = this._getItemsSelector();
          if (">" === itemsSelector[0]) {
            var $items = this._$content().find(itemsSelector);
            if (!$items.is($target)) {
              $target = $target.closest($items);
            }
          }
          return $target;
        },
        _getSourceElement: function _getSourceElement() {
          var draggable = this._getSourceDraggable();
          return draggable._$sourceElement;
        },
        _pointerDownHandler: function _pointerDownHandler(e) {
          if ((0, _events_utils_index__WEBPACK_IMPORTED_MODULE_22__.needSkipEvent)(e)) {
            return;
          }
          var position = {};
          var $element = this.$element();
          var dragDirection = this.option("dragDirection");
          if ("horizontal" === dragDirection || "both" === dragDirection) {
            position.left = e.pageX - $element.offset().left + (0, _animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($element).left - (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getWidth)($element) / 2;
          }
          if ("vertical" === dragDirection || "both" === dragDirection) {
            position.top = e.pageY - $element.offset().top + (0, _animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($element).top - (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getHeight)($element) / 2;
          }
          this._move(position, $element);
          this._getAction("onDragMove")(this._getEventArgs(e));
        },
        _isValidElement: function _isValidElement(event, $element) {
          var handle = this.option("handle");
          var $target = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(event.originalEvent && event.originalEvent.target);
          if (handle && !$target.closest(handle).length) {
            return false;
          }
          if (!$element.length) {
            return false;
          }
          return !$element.is(".dx-state-disabled, .dx-state-disabled *");
        },
        _dragStartHandler: function _dragStartHandler(e) {
          var $element = this._getDraggableElement(e);
          this.dragInProgress = true;
          if (!this._isValidElement(e, $element)) {
            e.cancel = true;
            return;
          }
          if (this._$sourceElement) {
            return;
          }
          var dragStartArgs = this._getDragStartArgs(e, $element);
          this._getAction("onDragStart")(dragStartArgs);
          if (dragStartArgs.cancel) {
            e.cancel = true;
            return;
          }
          this.option("itemData", dragStartArgs.itemData);
          this._setSourceDraggable();
          this._$sourceElement = $element;
          var initialOffset = $element.offset();
          if (!this._hasClonedDraggable() && this.option("autoScroll")) {
            this._initScrollTop = this._getScrollableScrollTop();
            this._initScrollLeft = this._getScrollableScrollLeft();
            initialOffset = this._getDraggableElementOffset(initialOffset.left, initialOffset.top);
          }
          var $dragElement = this._$dragElement = this._createDragElement($element);
          this._toggleDraggingClass(true);
          this._toggleDragSourceClass(true);
          this._setGestureCoverCursor($dragElement.children());
          var isFixedPosition = "fixed" === $dragElement.css("position");
          this._initPosition((0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_11__.extend)({}, dragStartArgs, {
            dragElement: $dragElement.get(0),
            initialOffset: isFixedPosition && initialOffset
          }));
          this._getAction("onDraggableElementShown")((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, dragStartArgs), {
            dragElement: $dragElement
          }));
          var $area = this._getArea();
          var areaOffset = this._getAreaOffset($area);
          var boundOffset = this._getBoundOffset();
          var areaWidth = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getOuterWidth)($area);
          var areaHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getOuterHeight)($area);
          var elementWidth = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getWidth)($dragElement);
          var elementHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_14__.getHeight)($dragElement);
          var startOffset_left = $dragElement.offset().left - areaOffset.left,
            startOffset_top = $dragElement.offset().top - areaOffset.top;
          if ($area.length) {
            e.maxLeftOffset = startOffset_left - boundOffset.left;
            e.maxRightOffset = areaWidth - startOffset_left - elementWidth - boundOffset.right;
            e.maxTopOffset = startOffset_top - boundOffset.top;
            e.maxBottomOffset = areaHeight - startOffset_top - elementHeight - boundOffset.bottom;
          }
          if (this.option("autoScroll")) {
            this._startAnimator();
          }
        },
        _getAreaOffset: function _getAreaOffset($area) {
          var offset = $area && _animation_position__WEBPACK_IMPORTED_MODULE_1__["default"].offset($area);
          return offset || {
            left: 0,
            top: 0
          };
        },
        _toggleDraggingClass: function _toggleDraggingClass(value) {
          this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix("dragging"), value);
        },
        _toggleDragSourceClass: function _toggleDragSourceClass(value, $element) {
          var $sourceElement = $element || this._$sourceElement;
          $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix("source"), value);
        },
        _setGestureCoverCursor: function _setGestureCoverCursor($element) {
          (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(".".concat(GESTURE_COVER_CLASS)).css("cursor", $element.css("cursor"));
        },
        _getBoundOffset: function _getBoundOffset() {
          var boundOffset = this.option("boundOffset");
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isFunction)(boundOffset)) {
            boundOffset = boundOffset.call(this);
          }
          return (0, _core_utils_string__WEBPACK_IMPORTED_MODULE_15__.quadToObject)(boundOffset);
        },
        _getArea: function _getArea() {
          var area = this.option("boundary");
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isFunction)(area)) {
            area = area.call(this);
          }
          return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(area);
        },
        _getContainer: function _getContainer() {
          var container = this.option("container");
          if (void 0 === container) {
            container = (0, _core_utils_view_port__WEBPACK_IMPORTED_MODULE_17__.value)();
          }
          return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(container);
        },
        _getDraggableElementOffset: function _getDraggableElementOffset(initialOffsetX, initialOffsetY) {
          var _a, _b, _c, _d;
          var initScrollTop = this._initScrollTop;
          var initScrollLeft = this._initScrollLeft;
          var scrollTop = this._getScrollableScrollTop();
          var scrollLeft = this._getScrollableScrollLeft();
          var elementPosition = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(this.element()).css("position");
          var isFixedPosition = "fixed" === elementPosition;
          var result = {
            left: (null !== (_b = null === (_a = this._startPosition) || void 0 === _a ? void 0 : _a.left) && void 0 !== _b ? _b : 0) + initialOffsetX,
            top: (null !== (_d = null === (_c = this._startPosition) || void 0 === _c ? void 0 : _c.top) && void 0 !== _d ? _d : 0) + initialOffsetY
          };
          if (isFixedPosition || this._hasClonedDraggable()) {
            return result;
          }
          return {
            left: (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isNumeric)(scrollLeft) ? result.left + scrollLeft - initScrollLeft : result.left,
            top: (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isNumeric)(scrollTop) ? result.top + scrollTop - initScrollTop : result.top
          };
        },
        _hasClonedDraggable: function _hasClonedDraggable() {
          return this.option("clone") || this.option("dragTemplate");
        },
        _dragMoveHandler: function _dragMoveHandler(e) {
          this._dragMoveArgs = e;
          if (!this._$dragElement) {
            e.cancel = true;
            return;
          }
          var offset = this._getDraggableElementOffset(e.offset.x, e.offset.y);
          this._move(offset);
          this._updateScrollable(e);
          var eventArgs = this._getEventArgs(e);
          this._getAction("onDragMove")(eventArgs);
          if (true === eventArgs.cancel) {
            return;
          }
          var targetDraggable = this._getTargetDraggable();
          targetDraggable.dragMove(e, scrollBy);
        },
        _updateScrollable: function _updateScrollable(e) {
          if (this.option("autoScroll")) {
            var mousePosition = getMousePosition(e);
            var allObjects = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__["default"].elementsFromPoint(mousePosition.x, mousePosition.y, this.$element().get(0));
            this._verticalScrollHelper.updateScrollable(allObjects, mousePosition);
            this._horizontalScrollHelper.updateScrollable(allObjects, mousePosition);
          }
        },
        _getScrollable: function _getScrollable($element) {
          var _this5 = this;
          var $scrollable;
          $element.parents().toArray().some(function (parent) {
            var $parent = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(parent);
            if (_this5._horizontalScrollHelper.isScrollable($parent) || _this5._verticalScrollHelper.isScrollable($parent)) {
              $scrollable = $parent;
              return true;
            }
            return false;
          });
          return $scrollable;
        },
        _getScrollableScrollTop: function _getScrollableScrollTop() {
          var _a, _b;
          return null !== (_b = null === (_a = this._getScrollable((0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(this.element()))) || void 0 === _a ? void 0 : _a.scrollTop()) && void 0 !== _b ? _b : 0;
        },
        _getScrollableScrollLeft: function _getScrollableScrollLeft() {
          var _a, _b;
          return null !== (_b = null === (_a = this._getScrollable((0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(this.element()))) || void 0 === _a ? void 0 : _a.scrollLeft()) && void 0 !== _b ? _b : 0;
        },
        _defaultActionArgs: function _defaultActionArgs() {
          var args = this.callBase.apply(this, arguments);
          var component = this.option("component");
          if (component) {
            args.component = component;
            args.element = component.element();
          }
          return args;
        },
        _getEventArgs: function _getEventArgs(e) {
          var sourceDraggable = this._getSourceDraggable();
          var targetDraggable = this._getTargetDraggable();
          return {
            event: e,
            itemData: sourceDraggable.option("itemData"),
            itemElement: (0, _core_element__WEBPACK_IMPORTED_MODULE_6__.getPublicElement)(sourceDraggable._$sourceElement),
            fromComponent: sourceDraggable.option("component") || sourceDraggable,
            toComponent: targetDraggable.option("component") || targetDraggable,
            fromData: sourceDraggable.option("data"),
            toData: targetDraggable.option("data")
          };
        },
        _getDragStartArgs: function _getDragStartArgs(e, $itemElement) {
          var args = this._getEventArgs(e);
          return {
            event: args.event,
            itemData: args.itemData,
            itemElement: $itemElement,
            fromData: args.fromData
          };
        },
        _revertItemToInitialPosition: function _revertItemToInitialPosition() {
          !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement);
        },
        _dragEndHandler: function _dragEndHandler(e) {
          var _this6 = this;
          var d = (0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.Deferred)();
          var dragEndEventArgs = this._getEventArgs(e);
          var dropEventArgs = this._getEventArgs(e);
          var targetDraggable = this._getTargetDraggable();
          var needRevertPosition = true;
          this.dragInProgress = false;
          try {
            this._getAction("onDragEnd")(dragEndEventArgs);
          } finally {
            (0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.when)((0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.fromPromise)(dragEndEventArgs.cancel)).done(function (cancel) {
              if (!cancel) {
                if (targetDraggable !== _this6) {
                  targetDraggable._getAction("onDrop")(dropEventArgs);
                }
                if (!dropEventArgs.cancel) {
                  needRevertPosition = false;
                  (0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.when)((0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_10__.fromPromise)(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);
                  return;
                }
              }
              d.resolve();
            }).fail(d.resolve);
            d.done(function () {
              if (needRevertPosition) {
                _this6._revertItemToInitialPosition();
              }
              _this6._resetDragOptions(targetDraggable);
            });
          }
        },
        _isTargetOverAnotherDraggable: function _isTargetOverAnotherDraggable(e) {
          var _this7 = this;
          var sourceDraggable = this._getSourceDraggable();
          if (this === sourceDraggable) {
            return false;
          }
          var $dragElement = sourceDraggable._$dragElement;
          var $sourceDraggableElement = sourceDraggable.$element();
          var $targetDraggableElement = this.$element();
          var mousePosition = getMousePosition(e);
          var elements = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__["default"].elementsFromPoint(mousePosition.x, mousePosition.y, this.element());
          var firstWidgetElement = elements.filter(function (element) {
            var $element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(element);
            if ($element.hasClass(_this7._addWidgetPrefix())) {
              return !$element.closest($dragElement).length;
            }
            return false;
          })[0];
          var $sourceElement = this._getSourceElement();
          var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);
          var isTargetOverNestedDraggable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(firstWidgetElement).closest($sourceElement).length;
          return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable;
        },
        _dragEnterHandler: function _dragEnterHandler(e) {
          this._fireDragEnterEvent(e);
          if (this._isTargetOverAnotherDraggable(e)) {
            this._setTargetDraggable();
          }
          var sourceDraggable = this._getSourceDraggable();
          sourceDraggable.dragEnter(e);
        },
        _dragLeaveHandler: function _dragLeaveHandler(e) {
          this._fireDragLeaveEvent(e);
          this._resetTargetDraggable();
          if (this !== this._getSourceDraggable()) {
            this.reset();
          }
          var sourceDraggable = this._getSourceDraggable();
          sourceDraggable.dragLeave(e);
        },
        _keydownHandler: function _keydownHandler(e) {
          if (this.dragInProgress && "Escape" === e.key) {
            this._keydownEscapeHandler(e);
          }
        },
        _keydownEscapeHandler: function _keydownEscapeHandler(e) {
          var $sourceElement = this._getSourceElement();
          if (!$sourceElement) {
            return;
          }
          var dragCancelEventArgs = this._getEventArgs(e);
          this._getAction("onDragCancel")(dragCancelEventArgs);
          if (dragCancelEventArgs.cancel) {
            return;
          }
          this.dragInProgress = false;
          null === sourceDraggable || void 0 === sourceDraggable ? void 0 : sourceDraggable._toggleDraggingClass(false);
          this._detachEventHandlers();
          this._revertItemToInitialPosition();
          var targetDraggable = this._getTargetDraggable();
          this._resetDragOptions(targetDraggable);
          this._attachEventHandlers();
        },
        _getAction: function _getAction(name) {
          return this["_".concat(name, "Action")] || this._createActionByOption(name);
        },
        _getAnonymousTemplateName: function _getAnonymousTemplateName() {
          return ANONYMOUS_TEMPLATE_NAME;
        },
        _initTemplates: function _initTemplates() {
          if (!this.option("contentTemplate")) {
            return;
          }
          this._templateManager.addDefaultTemplates({
            content: new _core_templates_empty_template__WEBPACK_IMPORTED_MODULE_8__.EmptyTemplate()
          });
          this.callBase.apply(this, arguments);
        },
        _render: function _render() {
          this.callBase();
          this.$element().addClass(this._addWidgetPrefix());
          var transclude = this._templateManager.anonymousTemplateName === this.option("contentTemplate");
          var template = this._getTemplateByOption("contentTemplate");
          if (template) {
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])(template.render({
              container: this.element(),
              transclude: transclude
            }));
          }
        },
        _optionChanged: function _optionChanged(args) {
          var name = args.name;
          switch (name) {
            case "onDragStart":
            case "onDragMove":
            case "onDragEnd":
            case "onDrop":
            case "onDragEnter":
            case "onDragLeave":
            case "onDragCancel":
            case "onDraggableElementShown":
              this["_".concat(name, "Action")] = this._createActionByOption(name);
              break;
            case "dragTemplate":
            case "contentTemplate":
            case "container":
            case "clone":
              break;
            case "allowMoveByClick":
            case "dragDirection":
            case "disabled":
            case "boundary":
            case "filter":
            case "immediate":
              this._resetDragElement();
              this._detachEventHandlers();
              this._attachEventHandlers();
              break;
            case "onCancelByEsc":
              this._keydownHandler();
              break;
            case "autoScroll":
              this._verticalScrollHelper.reset();
              this._horizontalScrollHelper.reset();
              break;
            case "scrollSensitivity":
            case "scrollSpeed":
            case "boundOffset":
            case "handle":
            case "group":
            case "data":
            case "itemData":
              break;
            default:
              this.callBase(args);
          }
        },
        _getTargetDraggable: function _getTargetDraggable() {
          return targetDraggable || this;
        },
        _getSourceDraggable: function _getSourceDraggable() {
          return sourceDraggable || this;
        },
        _setTargetDraggable: function _setTargetDraggable() {
          var currentGroup = this.option("group");
          var sourceDraggable = this._getSourceDraggable();
          if (currentGroup && currentGroup === sourceDraggable.option("group")) {
            targetDraggable = this;
          }
        },
        _setSourceDraggable: function _setSourceDraggable() {
          sourceDraggable = this;
        },
        _resetSourceDraggable: function _resetSourceDraggable() {
          sourceDraggable = null;
        },
        _resetTargetDraggable: function _resetTargetDraggable() {
          targetDraggable = null;
        },
        _resetDragOptions: function _resetDragOptions(targetDraggable) {
          this.reset();
          targetDraggable.reset();
          this._stopAnimator();
          this._horizontalScrollHelper.reset();
          this._verticalScrollHelper.reset();
          this._resetDragElement();
          this._resetSourceElement();
          this._resetTargetDraggable();
          this._resetSourceDraggable();
        },
        _dispose: function _dispose() {
          this.callBase();
          this._detachEventHandlers();
          this._resetDragElement();
          this._resetTargetDraggable();
          this._resetSourceDraggable();
          this._$sourceElement = null;
          this._stopAnimator();
        },
        _fireDragEnterEvent: function _fireDragEnterEvent(sourceEvent) {
          var args = this._getEventArgs(sourceEvent);
          this._getAction("onDragEnter")(args);
        },
        _fireDragLeaveEvent: function _fireDragLeaveEvent(sourceEvent) {
          var args = this._getEventArgs(sourceEvent);
          this._getAction("onDragLeave")(args);
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__["default"])(DRAGGABLE, Draggable);
      /* harmony default export */
      __webpack_exports__["default"] = Draggable;

      /***/
    }),
    /***/30892: (
    /*!**************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointment_popup/m_form.js ***!
      \**************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"APPOINTMENT_FORM_GROUP_NAMES": function APPOINTMENT_FORM_GROUP_NAMES() {
          return /* binding */_APPOINTMENT_FORM_GROUP_NAMES;
        },
        /* harmony export */"AppointmentForm": function AppointmentForm() {
          return /* binding */_AppointmentForm;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _m_recurrence_editor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../m_recurrence_editor */69711);
      /* harmony import */
      var _ui_text_area__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../ui/text_area */46740);
      /* harmony import */
      var _ui_tag_box__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../ui/tag_box */77100);
      /* harmony import */
      var _ui_switch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../ui/switch */98222);
      /* harmony import */
      var _ui_select_box__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../ui/select_box */67373);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../core/devices */41881);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../../core/utils/date_serialization */37043);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _data_data_source__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../../data/data_source */69379);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../../../localization/message */19336);
      /* harmony import */
      var _renovation_ui_scheduler_utils_semaphore_semaphore__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/utils/semaphore/semaphore */26571);
      /* harmony import */
      var _ui_form__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../../../ui/form */19128);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../m_appointment_adapter */91634);
      /* harmony import */
      var _timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ../timezones/m_utils_timezones_data */78514);
      /**
       * DevExtreme (esm/__internal/scheduler/appointment_popup/m_form.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var SCREEN_SIZE_OF_SINGLE_COLUMN = 600;
      var _APPOINTMENT_FORM_GROUP_NAMES = {
        Main: "mainGroup",
        Recurrence: "recurrenceGroup"
      };
      var getStartDateWithStartHour = function getStartDateWithStartHour(startDate, startDayHour) {
        return new Date(new Date(startDate).setHours(startDayHour));
      };
      var validateAppointmentFormDate = function validateAppointmentFormDate(editor, value, previousValue) {
        var isCurrentDateCorrect = null === value || !!value;
        var isPreviousDateCorrect = null === previousValue || !!previousValue;
        if (!isCurrentDateCorrect && isPreviousDateCorrect) {
          editor.option("value", previousValue);
        }
      };
      var updateRecurrenceItemVisibility = function updateRecurrenceItemVisibility(recurrenceRuleExpr, value, form) {
        var _a;
        form.itemOption(_APPOINTMENT_FORM_GROUP_NAMES.Recurrence, "visible", value);
        !value && form.updateData(recurrenceRuleExpr, "");
        null === (_a = form.getEditor(recurrenceRuleExpr)) || void 0 === _a ? void 0 : _a.changeValueByVisibility(value);
      };
      var createDateBoxEditor = function createDateBoxEditor(dataField, colSpan, firstDayOfWeek, label, onValueChanged) {
        return {
          editorType: "dxDateBox",
          dataField: dataField,
          colSpan: colSpan,
          label: {
            text: _localization_message__WEBPACK_IMPORTED_MODULE_12__["default"].format(label)
          },
          validationRules: [{
            type: "required"
          }],
          editorOptions: {
            width: "100%",
            calendarOptions: {
              firstDayOfWeek: firstDayOfWeek
            },
            onValueChanged: onValueChanged,
            useMaskBehavior: true
          }
        };
      };
      var _AppointmentForm = /*#__PURE__*/function () {
        function _AppointmentForm(scheduler) {
          _classCallCheck(this, _AppointmentForm);
          this.scheduler = scheduler;
          this.form = null;
          this.semaphore = new _renovation_ui_scheduler_utils_semaphore_semaphore__WEBPACK_IMPORTED_MODULE_13__.Semaphore();
        }
        _createClass(_AppointmentForm, [{
          key: "dxForm",
          get: function get() {
            return this.form;
          }
        }, {
          key: "readOnly",
          set: function set(value) {
            this.form.option("readOnly", value);
            var recurrenceRuleExpr = this.scheduler.getDataAccessors().expr.recurrenceRuleExpr;
            var recurrenceEditor = this.form.getEditor(recurrenceRuleExpr);
            null === recurrenceEditor || void 0 === recurrenceEditor ? void 0 : recurrenceEditor.option("readOnly", value);
          }
        }, {
          key: "formData",
          get: function get() {
            return this.form.option("formData");
          },
          set: function set(value) {
            this.form.option("formData", value);
          }
        }, {
          key: "create",
          value: function create(triggerResize, changeSize, formData) {
            var _this8 = this;
            var _this$scheduler$getEd = this.scheduler.getEditingConfig(),
              allowTimeZoneEditing = _this$scheduler$getEd.allowTimeZoneEditing;
            var _this$scheduler$getDa = this.scheduler.getDataAccessors(),
              expr = _this$scheduler$getDa.expr;
            var recurrenceEditorVisibility = !!formData[expr.recurrenceRuleExpr];
            var colSpan = recurrenceEditorVisibility ? 1 : 2;
            var mainItems = [].concat(_toConsumableArray(this._createMainItems(expr, triggerResize, changeSize, allowTimeZoneEditing)), _toConsumableArray(this.scheduler.createResourceEditorModel()));
            changeSize(recurrenceEditorVisibility);
            var items = [{
              itemType: "group",
              name: _APPOINTMENT_FORM_GROUP_NAMES.Main,
              colCountByScreen: {
                lg: 2,
                xs: 1
              },
              colSpan: colSpan,
              items: mainItems
            }, {
              itemType: "group",
              name: _APPOINTMENT_FORM_GROUP_NAMES.Recurrence,
              visible: recurrenceEditorVisibility,
              colSpan: colSpan,
              items: this._createRecurrenceEditor(expr)
            }];
            var element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_7__["default"])("<div>");
            this.scheduler.createComponent(element, _ui_form__WEBPACK_IMPORTED_MODULE_14__["default"], {
              items: items,
              showValidationSummary: true,
              scrollingEnabled: true,
              colCount: "auto",
              colCountByScreen: {
                lg: 2,
                xs: 1
              },
              formData: formData,
              showColonAfterLabel: false,
              labelLocation: "top",
              onInitialized: function onInitialized(e) {
                _this8.form = e.component;
              },
              customizeItem: function customizeItem(e) {
                if (_this8.form && "group" === e.itemType) {
                  var dataExprs = _this8.scheduler.getDataAccessors().expr;
                  var startDate = new Date(_this8.formData[dataExprs.startDateExpr]);
                  var endDate = new Date(_this8.formData[dataExprs.endDateExpr]);
                  var startTimeZoneEditor = e.items.find(function (i) {
                    return i.dataField === dataExprs.startDateTimeZoneExpr;
                  });
                  var endTimeZoneEditor = e.items.find(function (i) {
                    return i.dataField === dataExprs.endDateTimeZoneExpr;
                  });
                  if (startTimeZoneEditor) {
                    startTimeZoneEditor.editorOptions.dataSource = _this8.createTimeZoneDataSource(startDate);
                  }
                  if (endTimeZoneEditor) {
                    endTimeZoneEditor.editorOptions.dataSource = _this8.createTimeZoneDataSource(endDate);
                  }
                }
              },
              screenByWidth: function screenByWidth(width) {
                return width < SCREEN_SIZE_OF_SINGLE_COLUMN || "desktop" !== _core_devices__WEBPACK_IMPORTED_MODULE_6__["default"].current().deviceType ? "xs" : "lg";
              }
            });
          }
        }, {
          key: "createTimeZoneDataSource",
          value: function createTimeZoneDataSource(date) {
            return new _data_data_source__WEBPACK_IMPORTED_MODULE_11__["default"]({
              store: _timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_16__["default"].getDisplayedTimeZones(date),
              paginate: true,
              pageSize: 10
            });
          }
        }, {
          key: "_createAppointmentAdapter",
          value: function _createAppointmentAdapter(rawAppointment) {
            return (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_15__.createAppointmentAdapter)(rawAppointment, this.scheduler.getDataAccessors());
          }
        }, {
          key: "_dateBoxValueChanged",
          value: function _dateBoxValueChanged(args, dateExpr, isNeedCorrect) {
            validateAppointmentFormDate(args.component, args.value, args.previousValue);
            var value = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_9__["default"].deserializeDate(args.value);
            var previousValue = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_9__["default"].deserializeDate(args.previousValue);
            var dateEditor = this.form.getEditor(dateExpr);
            var dateValue = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_9__["default"].deserializeDate(dateEditor.option("value"));
            if (this.semaphore.isFree() && dateValue && value && isNeedCorrect(dateValue, value)) {
              var duration = previousValue ? dateValue.getTime() - previousValue.getTime() : 0;
              dateEditor.option("value", new Date(value.getTime() + duration));
            }
          }
        }, {
          key: "_createTimezoneEditor",
          value: function _createTimezoneEditor(timeZoneExpr, secondTimeZoneExpr, visibleIndex, colSpan, isMainTimeZone) {
            var _this9 = this;
            var visible = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : false;
            var noTzTitle = _localization_message__WEBPACK_IMPORTED_MODULE_12__["default"].format("dxScheduler-noTimezoneTitle");
            return {
              dataField: timeZoneExpr,
              editorType: "dxSelectBox",
              visibleIndex: visibleIndex,
              colSpan: colSpan,
              label: {
                text: " "
              },
              editorOptions: {
                displayExpr: "title",
                valueExpr: "id",
                placeholder: noTzTitle,
                searchEnabled: true,
                onValueChanged: function onValueChanged(args) {
                  var form = _this9.form;
                  var secondTimezoneEditor = form.getEditor(secondTimeZoneExpr);
                  if (isMainTimeZone) {
                    secondTimezoneEditor.option("value", args.value);
                  }
                }
              },
              visible: visible
            };
          }
        }, {
          key: "_createDateBoxItems",
          value: function _createDateBoxItems(dataExprs, allowTimeZoneEditing) {
            var _this10 = this;
            var colSpan = allowTimeZoneEditing ? 2 : 1;
            var firstDayOfWeek = this.scheduler.getFirstDayOfWeek();
            return [createDateBoxEditor(dataExprs.startDateExpr, colSpan, firstDayOfWeek, "dxScheduler-editorLabelStartDate", function (args) {
              _this10._dateBoxValueChanged(args, dataExprs.endDateExpr, function (endValue, startValue) {
                return endValue < startValue;
              });
            }), this._createTimezoneEditor(dataExprs.startDateTimeZoneExpr, dataExprs.endDateTimeZoneExpr, 1, colSpan, true, allowTimeZoneEditing), createDateBoxEditor(dataExprs.endDateExpr, colSpan, firstDayOfWeek, "dxScheduler-editorLabelEndDate", function (args) {
              _this10._dateBoxValueChanged(args, dataExprs.startDateExpr, function (startValue, endValue) {
                return endValue < startValue;
              });
            }), this._createTimezoneEditor(dataExprs.endDateTimeZoneExpr, dataExprs.startDateTimeZoneExpr, 3, colSpan, false, allowTimeZoneEditing)];
          }
        }, {
          key: "_changeFormItemDateType",
          value: function _changeFormItemDateType(itemPath, isAllDay) {
            var itemEditorOptions = this.form.itemOption(itemPath).editorOptions;
            var type = isAllDay ? "date" : "datetime";
            var newEditorOption = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, itemEditorOptions), {
              type: type
            });
            this.form.itemOption(itemPath, "editorOptions", newEditorOption);
          }
        }, {
          key: "_createMainItems",
          value: function _createMainItems(dataExprs, triggerResize, changeSize, allowTimeZoneEditing) {
            var _this11 = this;
            return [{
              dataField: dataExprs.textExpr,
              editorType: "dxTextBox",
              colSpan: 2,
              label: {
                text: _localization_message__WEBPACK_IMPORTED_MODULE_12__["default"].format("dxScheduler-editorLabelTitle")
              }
            }, {
              itemType: "group",
              colSpan: 2,
              colCountByScreen: {
                lg: 2,
                xs: 1
              },
              items: this._createDateBoxItems(dataExprs, allowTimeZoneEditing)
            }, {
              itemType: "group",
              colSpan: 2,
              colCountByScreen: {
                lg: 2,
                xs: 2
              },
              items: [{
                dataField: dataExprs.allDayExpr,
                cssClass: "dx-appointment-form-switch",
                editorType: "dxSwitch",
                label: {
                  text: _localization_message__WEBPACK_IMPORTED_MODULE_12__["default"].format("dxScheduler-allDay"),
                  location: "right"
                },
                editorOptions: {
                  onValueChanged: function onValueChanged(args) {
                    var value = args.value;
                    var startDateEditor = _this11.form.getEditor(dataExprs.startDateExpr);
                    var endDateEditor = _this11.form.getEditor(dataExprs.endDateExpr);
                    var startDate = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_9__["default"].deserializeDate(startDateEditor.option("value"));
                    if (_this11.semaphore.isFree() && startDate) {
                      if (value) {
                        var allDayStartDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_8__["default"].trimTime(startDate);
                        startDateEditor.option("value", new Date(allDayStartDate));
                        endDateEditor.option("value", new Date(allDayStartDate));
                      } else {
                        var startDateWithStartHour = getStartDateWithStartHour(startDate, _this11.scheduler.getStartDayHour());
                        var endDate = _this11.scheduler.getCalculatedEndDate(startDateWithStartHour);
                        startDateEditor.option("value", startDateWithStartHour);
                        endDateEditor.option("value", endDate);
                      }
                    }
                    var startDateItemPath = "".concat(_APPOINTMENT_FORM_GROUP_NAMES.Main, ".").concat(dataExprs.startDateExpr);
                    var endDateItemPath = "".concat(_APPOINTMENT_FORM_GROUP_NAMES.Main, ".").concat(dataExprs.endDateExpr);
                    _this11._changeFormItemDateType(startDateItemPath, value);
                    _this11._changeFormItemDateType(endDateItemPath, value);
                  }
                }
              }, {
                editorType: "dxSwitch",
                dataField: "repeat",
                cssClass: "dx-appointment-form-switch",
                name: "visibilityChanged",
                label: {
                  text: _localization_message__WEBPACK_IMPORTED_MODULE_12__["default"].format("dxScheduler-editorLabelRecurrence"),
                  location: "right"
                },
                editorOptions: {
                  onValueChanged: function onValueChanged(args) {
                    var form = _this11.form;
                    var colSpan = args.value ? 1 : 2;
                    form.itemOption(_APPOINTMENT_FORM_GROUP_NAMES.Main, "colSpan", colSpan);
                    form.itemOption(_APPOINTMENT_FORM_GROUP_NAMES.Recurrence, "colSpan", colSpan);
                    updateRecurrenceItemVisibility(dataExprs.recurrenceRuleExpr, args.value, form);
                    changeSize(args.value);
                    triggerResize();
                  }
                }
              }]
            }, {
              itemType: "empty",
              colSpan: 2
            }, {
              dataField: dataExprs.descriptionExpr,
              editorType: "dxTextArea",
              colSpan: 2,
              label: {
                text: _localization_message__WEBPACK_IMPORTED_MODULE_12__["default"].format("dxScheduler-editorLabelDescription")
              }
            }, {
              itemType: "empty",
              colSpan: 2
            }];
          }
        }, {
          key: "_createRecurrenceEditor",
          value: function _createRecurrenceEditor(dataExprs) {
            var _this12 = this;
            return [{
              dataField: dataExprs.recurrenceRuleExpr,
              editorType: "dxRecurrenceEditor",
              editorOptions: {
                firstDayOfWeek: this.scheduler.getFirstDayOfWeek(),
                timeZoneCalculator: this.scheduler.getTimeZoneCalculator(),
                getStartDateTimeZone: function getStartDateTimeZone() {
                  return _this12._createAppointmentAdapter(_this12.formData).startDateTimeZone;
                }
              },
              label: {
                text: " ",
                visible: false
              }
            }];
          }
        }, {
          key: "setEditorsType",
          value: function setEditorsType(allDay) {
            var _this$scheduler$getDa2 = this.scheduler.getDataAccessors().expr,
              startDateExpr = _this$scheduler$getDa2.startDateExpr,
              endDateExpr = _this$scheduler$getDa2.endDateExpr;
            var startDateItemPath = "".concat(_APPOINTMENT_FORM_GROUP_NAMES.Main, ".").concat(startDateExpr);
            var endDateItemPath = "".concat(_APPOINTMENT_FORM_GROUP_NAMES.Main, ".").concat(endDateExpr);
            var startDateFormItem = this.form.itemOption(startDateItemPath);
            var endDateFormItem = this.form.itemOption(endDateItemPath);
            if (startDateFormItem && endDateFormItem) {
              var startDateEditorOptions = startDateFormItem.editorOptions;
              var endDateEditorOptions = endDateFormItem.editorOptions;
              startDateEditorOptions.type = endDateEditorOptions.type = allDay ? "date" : "datetime";
              this.form.itemOption(startDateItemPath, "editorOptions", startDateEditorOptions);
              this.form.itemOption(endDateItemPath, "editorOptions", endDateEditorOptions);
            }
          }
        }, {
          key: "updateRecurrenceEditorStartDate",
          value: function updateRecurrenceEditorStartDate(date, expression) {
            var options = {
              startDate: date
            };
            this.setEditorOptions(expression, "Recurrence", options);
          }
        }, {
          key: "setEditorOptions",
          value: function setEditorOptions(name, groupName, options) {
            var editorPath = "".concat(_APPOINTMENT_FORM_GROUP_NAMES[groupName], ".").concat(name);
            var editor = this.form.itemOption(editorPath);
            editor && this.form.itemOption(editorPath, "editorOptions", (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)({}, editor.editorOptions, options));
          }
        }, {
          key: "setTimeZoneEditorDataSource",
          value: function setTimeZoneEditorDataSource(date, path) {
            var dataSource = this.createTimeZoneDataSource(date);
            this.setEditorOptions(path, "Main", {
              dataSource: dataSource
            });
          }
        }, {
          key: "updateFormData",
          value: function updateFormData(formData) {
            this.semaphore.take();
            this.form.option("formData", formData);
            var dataExprs = this.scheduler.getDataAccessors().expr;
            var allDay = formData[dataExprs.allDayExpr];
            var startDate = new Date(formData[dataExprs.startDateExpr]);
            var endDate = new Date(formData[dataExprs.endDateExpr]);
            this.setTimeZoneEditorDataSource(startDate, dataExprs.startDateTimeZoneExpr);
            this.setTimeZoneEditorDataSource(endDate, dataExprs.endDateTimeZoneExpr);
            this.updateRecurrenceEditorStartDate(startDate, dataExprs.recurrenceRuleExpr);
            this.setEditorsType(allDay);
            this.semaphore.release();
          }
        }]);
        return _AppointmentForm;
      }();
      /***/
    }),
    /***/80619: (
    /*!***************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointment_popup/m_popup.js ***!
      \***************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"ACTION_TO_APPOINTMENT": function ACTION_TO_APPOINTMENT() {
          return /* binding */_ACTION_TO_APPOINTMENT;
        },
        /* harmony export */"AppointmentPopup": function AppointmentPopup() {
          return /* binding */_AppointmentPopup;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/devices */41881);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/utils/deferred */97233);
      /* harmony import */
      var _events_visibility_change__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../events/visibility_change */23495);
      /* harmony import */
      var _renovation_ui_scheduler_appointment_edit_form_popup_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/appointment_edit_form/popup_config */72930);
      /* harmony import */
      var _ui_popup_ui_popup__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../ui/popup/ui.popup */23772);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../m_appointment_adapter */91634);
      /* harmony import */
      var _m_loading__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../m_loading */27122);
      /* harmony import */
      var _resources_m_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../resources/m_utils */48025);
      /**
       * DevExtreme (esm/__internal/scheduler/appointment_popup/m_popup.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_3__["default"].dateToMilliseconds;
      var APPOINTMENT_POPUP_CLASS = "dx-scheduler-appointment-popup";
      var DAY_IN_MS = toMs("day");
      var POPUP_CONFIG = {
        height: "auto",
        maxHeight: "100%",
        showCloseButton: false,
        showTitle: false,
        defaultOptionsRules: [{
          device: function device() {
            return _core_devices__WEBPACK_IMPORTED_MODULE_1__["default"].current().android;
          },
          options: {
            showTitle: false
          }
        }]
      };
      var _ACTION_TO_APPOINTMENT = {
        CREATE: 0,
        UPDATE: 1,
        EXCLUDE_FROM_SERIES: 2
      };
      var _AppointmentPopup = /*#__PURE__*/function () {
        function _AppointmentPopup(scheduler, form) {
          _classCallCheck(this, _AppointmentPopup);
          this.scheduler = scheduler;
          this.form = form;
          this.popup = null;
          this.state = {
            action: null,
            lastEditData: null,
            saveChangesLocker: false,
            appointment: {
              data: null
            }
          };
        }
        _createClass(_AppointmentPopup, [{
          key: "visible",
          get: function get() {
            return this.popup ? this.popup.option("visible") : false;
          }
        }, {
          key: "show",
          value: function show(appointment, config) {
            var _this13 = this;
            this.state.appointment.data = appointment;
            this.state.action = config.action;
            this.state.excludeInfo = config.excludeInfo;
            if (!this.popup) {
              var popupConfig = this._createPopupConfig();
              this.popup = this._createPopup(popupConfig);
            }
            this.popup.option("toolbarItems", (0, _renovation_ui_scheduler_appointment_edit_form_popup_config__WEBPACK_IMPORTED_MODULE_6__.getPopupToolbarItems)(config.isToolbarVisible, function (e) {
              return _this13._doneButtonClickHandler(e);
            }));
            this.popup.show();
          }
        }, {
          key: "hide",
          value: function hide() {
            this.popup.hide();
          }
        }, {
          key: "dispose",
          value: function dispose() {
            var _a;
            null === (_a = this.popup) || void 0 === _a ? void 0 : _a.$element().remove();
          }
        }, {
          key: "_createPopup",
          value: function _createPopup(options) {
            var popupElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_2__["default"])("<div>").addClass(APPOINTMENT_POPUP_CLASS).appendTo(this.scheduler.getElement());
            return this.scheduler.createComponent(popupElement, _ui_popup_ui_popup__WEBPACK_IMPORTED_MODULE_7__["default"], options);
          }
        }, {
          key: "_createPopupConfig",
          value: function _createPopupConfig() {
            var _this14 = this;
            return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, POPUP_CONFIG), {
              onHiding: function onHiding() {
                return _this14.scheduler.focus();
              },
              contentTemplate: function contentTemplate() {
                return _this14._createPopupContent();
              },
              onShowing: function onShowing(e) {
                return _this14._onShowing(e);
              },
              wrapperAttr: {
                "class": APPOINTMENT_POPUP_CLASS
              }
            });
          }
        }, {
          key: "_onShowing",
          value: function _onShowing(e) {
            var _this15 = this;
            this._updateForm();
            var arg = {
              form: this.form.dxForm,
              popup: this.popup,
              appointmentData: this.state.appointment.data,
              cancel: false
            };
            this.scheduler.getAppointmentFormOpening()(arg);
            this.scheduler.processActionResult(arg, function (canceled) {
              if (canceled) {
                e.cancel = true;
              } else {
                _this15.updatePopupFullScreenMode();
              }
            });
          }
        }, {
          key: "_createPopupContent",
          value: function _createPopupContent() {
            this._createForm();
            return this.form.dxForm.$element();
          }
        }, {
          key: "_createFormData",
          value: function _createFormData(rawAppointment) {
            var appointment = this._createAppointmentAdapter(rawAppointment);
            var dataAccessors = this.scheduler.getDataAccessors();
            var resources = this.scheduler.getResources();
            var normalizedResources = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_10__.getNormalizedResources)(rawAppointment, dataAccessors, resources);
            return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, rawAppointment), normalizedResources), {
              repeat: !!appointment.recurrenceRule
            });
          }
        }, {
          key: "_createForm",
          value: function _createForm() {
            var rawAppointment = this.state.appointment.data;
            var formData = this._createFormData(rawAppointment);
            this.form.create(this.triggerResize.bind(this), this.changeSize.bind(this), formData);
          }
        }, {
          key: "_isReadOnly",
          value: function _isReadOnly(rawAppointment) {
            var appointment = this._createAppointmentAdapter(rawAppointment);
            if (rawAppointment && appointment.disabled) {
              return true;
            }
            if (this.state.action === _ACTION_TO_APPOINTMENT.CREATE) {
              return false;
            }
            return !this.scheduler.getEditingConfig().allowUpdating;
          }
        }, {
          key: "_createAppointmentAdapter",
          value: function _createAppointmentAdapter(rawAppointment) {
            return (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_8__.createAppointmentAdapter)(rawAppointment, this.scheduler.getDataAccessors(), this.scheduler.getTimeZoneCalculator());
          }
        }, {
          key: "_updateForm",
          value: function _updateForm() {
            var data = this.state.appointment.data;
            var appointment = this._createAppointmentAdapter(this._createFormData(data));
            if (appointment.startDate) {
              appointment.startDate = appointment.calculateStartDate("toAppointment");
            }
            if (appointment.endDate) {
              appointment.endDate = appointment.calculateEndDate("toAppointment");
            }
            var formData = appointment.source();
            this.form.readOnly = this._isReadOnly(formData);
            this.form.updateFormData(formData);
          }
        }, {
          key: "triggerResize",
          value: function triggerResize() {
            if (this.popup) {
              (0, _events_visibility_change__WEBPACK_IMPORTED_MODULE_5__.triggerResizeEvent)(this.popup.$element());
            }
          }
        }, {
          key: "changeSize",
          value: function changeSize(isRecurrence) {
            if (this.popup) {
              var isFullScreen = (0, _renovation_ui_scheduler_appointment_edit_form_popup_config__WEBPACK_IMPORTED_MODULE_6__.isPopupFullScreenNeeded)();
              var maxWidth = isFullScreen ? "100%" : (0, _renovation_ui_scheduler_appointment_edit_form_popup_config__WEBPACK_IMPORTED_MODULE_6__.getMaxWidth)(isRecurrence);
              this.popup.option("fullScreen", isFullScreen);
              this.popup.option("maxWidth", maxWidth);
            }
          }
        }, {
          key: "updatePopupFullScreenMode",
          value: function updatePopupFullScreenMode() {
            if (this.form.dxForm) {
              var formData = this.form.formData;
              var isRecurrence = formData[this.scheduler.getDataAccessors().expr.recurrenceRuleExpr];
              if (this.visible) {
                this.changeSize(isRecurrence);
              }
            }
          }
        }, {
          key: "saveChangesAsync",
          value: function saveChangesAsync(isShowLoadPanel) {
            var _this16 = this;
            var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred();
            var validation = this.form.dxForm.validate();
            isShowLoadPanel && this._showLoadPanel();
            (0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.when)(validation && validation.complete || validation).done(function (validation) {
              if (validation && !validation.isValid) {
                (0, _m_loading__WEBPACK_IMPORTED_MODULE_9__.hide)();
                deferred.resolve(false);
                return;
              }
              var adapter = _this16._createAppointmentAdapter(_this16.form.formData);
              var clonedAdapter = adapter.clone({
                pathTimeZone: "fromAppointment"
              });
              _this16._addMissingDSTTime(adapter, clonedAdapter);
              var appointment = clonedAdapter.source();
              delete appointment.repeat;
              switch (_this16.state.action) {
                case _ACTION_TO_APPOINTMENT.CREATE:
                  _this16.scheduler.addAppointment(appointment).done(deferred.resolve);
                  break;
                case _ACTION_TO_APPOINTMENT.UPDATE:
                  _this16.scheduler.updateAppointment(_this16.state.appointment.data, appointment).done(deferred.resolve);
                  break;
                case _ACTION_TO_APPOINTMENT.EXCLUDE_FROM_SERIES:
                  _this16.scheduler.updateAppointment(_this16.state.excludeInfo.sourceAppointment, _this16.state.excludeInfo.updatedAppointment);
                  _this16.scheduler.addAppointment(appointment).done(deferred.resolve);
              }
              deferred.done(function () {
                (0, _m_loading__WEBPACK_IMPORTED_MODULE_9__.hide)();
                _this16.state.lastEditData = appointment;
              });
            });
            return deferred.promise();
          }
        }, {
          key: "_doneButtonClickHandler",
          value: function _doneButtonClickHandler(e) {
            e.cancel = true;
            this.saveEditDataAsync();
          }
        }, {
          key: "saveEditDataAsync",
          value: function saveEditDataAsync() {
            var _this17 = this;
            var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred();
            if (this._tryLockSaveChanges()) {
              (0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.when)(this.saveChangesAsync(true)).done(function () {
                if (_this17.state.lastEditData) {
                  var adapter = _this17._createAppointmentAdapter(_this17.state.lastEditData);
                  var startDate = adapter.startDate,
                    endDate = adapter.endDate,
                    allDay = adapter.allDay;
                  var startTime = startDate.getTime();
                  var endTime = endDate.getTime();
                  var inAllDayRow = allDay || endTime - startTime >= DAY_IN_MS;
                  var dataAccessors = _this17.scheduler.getDataAccessors();
                  var resourceList = _this17.scheduler.getResources();
                  var normalizedResources = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_10__.getNormalizedResources)(_this17.state.lastEditData, dataAccessors, resourceList);
                  _this17.scheduler.updateScrollPosition(startDate, normalizedResources, inAllDayRow);
                  _this17.state.lastEditData = null;
                }
                _this17._unlockSaveChanges();
                deferred.resolve();
              });
            }
            return deferred.promise();
          }
        }, {
          key: "_showLoadPanel",
          value: function _showLoadPanel() {
            var container = this.popup.$overlayContent();
            (0, _m_loading__WEBPACK_IMPORTED_MODULE_9__.show)({
              container: container,
              position: {
                of: container
              }
            });
          }
        }, {
          key: "_tryLockSaveChanges",
          value: function _tryLockSaveChanges() {
            if (false === this.state.saveChangesLocker) {
              this.state.saveChangesLocker = true;
              return true;
            }
            return false;
          }
        }, {
          key: "_unlockSaveChanges",
          value: function _unlockSaveChanges() {
            this.state.saveChangesLocker = false;
          }
        }, {
          key: "_addMissingDSTTime",
          value: function _addMissingDSTTime(formAppointmentAdapter, clonedAppointmentAdapter) {
            var timeZoneCalculator = this.scheduler.getTimeZoneCalculator();
            clonedAppointmentAdapter.startDate = this._addMissingDSTShiftToDate(timeZoneCalculator, formAppointmentAdapter.startDate, clonedAppointmentAdapter.startDate);
            if (clonedAppointmentAdapter.endDate) {
              clonedAppointmentAdapter.endDate = this._addMissingDSTShiftToDate(timeZoneCalculator, formAppointmentAdapter.endDate, clonedAppointmentAdapter.endDate);
            }
          }
        }, {
          key: "_addMissingDSTShiftToDate",
          value: function _addMissingDSTShiftToDate(timeZoneCalculator, originFormDate, clonedDate) {
            var _a, _b;
            var originTimezoneShift = null === (_a = timeZoneCalculator.getOffsets(originFormDate)) || void 0 === _a ? void 0 : _a.common;
            var clonedTimezoneShift = null === (_b = timeZoneCalculator.getOffsets(clonedDate)) || void 0 === _b ? void 0 : _b.common;
            var shiftDifference = originTimezoneShift - clonedTimezoneShift;
            return shiftDifference ? new Date(clonedDate.getTime() + shiftDifference * toMs("hour")) : clonedDate;
          }
        }]);
        return _AppointmentPopup;
      }();
      /***/
    }),
    /***/33845: (
    /*!********************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/data_provider/m_appointment_data_provider.js ***!
      \********************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"AppointmentDataProvider": function AppointmentDataProvider() {
          return /* binding */_AppointmentDataProvider;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/config */99284);
      /* harmony import */
      var _renovation_ui_scheduler_utils_filtering_remote__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/utils/filtering/remote */57285);
      /* harmony import */
      var _m_appointment_data_source__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./m_appointment_data_source */11811);
      /* harmony import */
      var _m_appointment_filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_appointment_filter */61965);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/data_provider/m_appointment_data_provider.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var FilterStrategies = {
        virtual: "virtual",
        standard: "standard"
      };
      var _AppointmentDataProvider = /*#__PURE__*/function () {
        function _AppointmentDataProvider(options) {
          _classCallCheck(this, _AppointmentDataProvider);
          this.options = options;
          this.dataSource = this.options.dataSource;
          this.dataAccessors = this.options.dataAccessors;
          this.timeZoneCalculator = this.options.timeZoneCalculator;
          this.appointmentDataSource = new _m_appointment_data_source__WEBPACK_IMPORTED_MODULE_2__.AppointmentDataSource(this.dataSource);
          this.initFilterStrategy();
        }
        _createClass(_AppointmentDataProvider, [{
          key: "keyName",
          get: function get() {
            return this.appointmentDataSource.keyName;
          }
        }, {
          key: "isDataSourceInit",
          get: function get() {
            return !!this.dataSource;
          }
        }, {
          key: "filterStrategyName",
          get: function get() {
            return this.options.getIsVirtualScrolling() ? FilterStrategies.virtual : FilterStrategies.standard;
          }
        }, {
          key: "getFilterStrategy",
          value: function getFilterStrategy() {
            if (!this.filterStrategy || this.filterStrategy.strategyName !== this.filterStrategyName) {
              this.initFilterStrategy();
            }
            return this.filterStrategy;
          }
        }, {
          key: "initFilterStrategy",
          value: function initFilterStrategy() {
            var filterOptions = {
              resources: this.options.resources,
              dataAccessors: this.dataAccessors,
              startDayHour: this.options.startDayHour,
              endDayHour: this.options.endDayHour,
              showAllDayPanel: this.options.showAllDayPanel,
              timeZoneCalculator: this.options.timeZoneCalculator,
              loadedResources: this.options.getLoadedResources,
              supportAllDayRow: this.options.getSupportAllDayRow,
              viewType: this.options.getViewType,
              viewDirection: this.options.getViewDirection,
              dateRange: this.options.getDateRange,
              groupCount: this.options.getGroupCount,
              viewDataProvider: this.options.getViewDataProvider,
              allDayPanelMode: this.options.allDayPanelMode
            };
            this.filterStrategy = this.filterStrategyName === FilterStrategies.virtual ? new _m_appointment_filter__WEBPACK_IMPORTED_MODULE_3__.AppointmentFilterVirtualStrategy(filterOptions) : new _m_appointment_filter__WEBPACK_IMPORTED_MODULE_3__.AppointmentFilterBaseStrategy(filterOptions);
          }
        }, {
          key: "setDataSource",
          value: function setDataSource(dataSource) {
            this.dataSource = dataSource;
            this.initFilterStrategy();
            this.appointmentDataSource.setDataSource(this.dataSource);
          }
        }, {
          key: "updateDataAccessors",
          value: function updateDataAccessors(dataAccessors) {
            this.dataAccessors = dataAccessors;
            this.initFilterStrategy();
          }
        }, {
          key: "filter",
          value: function filter(preparedItems) {
            return this.getFilterStrategy().filter(preparedItems);
          }
        }, {
          key: "filterByDate",
          value: function filterByDate(min, max, remoteFiltering, dateSerializationFormat) {
            if (!this.dataSource || !remoteFiltering) {
              return;
            }
            var dataSourceFilter = this.dataSource.filter();
            var filter = (0, _renovation_ui_scheduler_utils_filtering_remote__WEBPACK_IMPORTED_MODULE_1__["default"])({
              dataSourceFilter: dataSourceFilter,
              dataAccessors: this.dataAccessors,
              min: min,
              max: max,
              dateSerializationFormat: dateSerializationFormat,
              forceIsoDateParsing: (0, _core_config__WEBPACK_IMPORTED_MODULE_0__["default"])().forceIsoDateParsing
            });
            this.dataSource.filter(filter);
          }
        }, {
          key: "hasAllDayAppointments",
          value: function hasAllDayAppointments(filteredItems, preparedItems) {
            return this.getFilterStrategy().hasAllDayAppointments(filteredItems, preparedItems);
          }
        }, {
          key: "filterLoadedAppointments",
          value: function filterLoadedAppointments(filterOption, preparedItems) {
            return this.getFilterStrategy().filterLoadedAppointments(filterOption, preparedItems);
          }
        }, {
          key: "calculateAppointmentEndDate",
          value: function calculateAppointmentEndDate(isAllDay, startDate) {
            return this.getFilterStrategy().calculateAppointmentEndDate(isAllDay, startDate);
          }
        }, {
          key: "cleanState",
          value: function cleanState() {
            this.appointmentDataSource.cleanState();
          }
        }, {
          key: "getUpdatedAppointment",
          value: function getUpdatedAppointment() {
            return this.appointmentDataSource._updatedAppointment;
          }
        }, {
          key: "getUpdatedAppointmentKeys",
          value: function getUpdatedAppointmentKeys() {
            return this.appointmentDataSource._updatedAppointmentKeys;
          }
        }, {
          key: "add",
          value: function add(rawAppointment) {
            return this.appointmentDataSource.add(rawAppointment);
          }
        }, {
          key: "update",
          value: function update(target, rawAppointment) {
            return this.appointmentDataSource.update(target, rawAppointment);
          }
        }, {
          key: "remove",
          value: function remove(rawAppointment) {
            return this.appointmentDataSource.remove(rawAppointment);
          }
        }, {
          key: "destroy",
          value: function destroy() {
            this.appointmentDataSource.destroy();
          }
        }]);
        return _AppointmentDataProvider;
      }();
      /***/
    }),
    /***/11811: (
    /*!******************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/data_provider/m_appointment_data_source.js ***!
      \******************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"AppointmentDataSource": function AppointmentDataSource() {
          return /* binding */_AppointmentDataSource;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/deferred */97233);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/data_provider/m_appointment_data_source.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var STORE_EVENTS = {
        updating: "updating",
        push: "push"
      };
      var _AppointmentDataSource = /*#__PURE__*/function () {
        function _AppointmentDataSource(dataSource) {
          _classCallCheck(this, _AppointmentDataSource);
          this.setDataSource(dataSource);
          this._updatedAppointmentKeys = [];
        }
        _createClass(_AppointmentDataSource, [{
          key: "keyName",
          get: function get() {
            var store = this._dataSource.store();
            return store.key();
          }
        }, {
          key: "isDataSourceInit",
          get: function get() {
            return !!this._dataSource;
          }
        }, {
          key: "_getStoreKey",
          value: function _getStoreKey(target) {
            var store = this._dataSource.store();
            return store.keyOf(target);
          }
        }, {
          key: "setDataSource",
          value: function setDataSource(dataSource) {
            this._dataSource = dataSource;
            this.cleanState();
            this._initStoreChangeHandlers();
          }
        }, {
          key: "_initStoreChangeHandlers",
          value: function _initStoreChangeHandlers() {
            var _this18 = this;
            var dataSource = this._dataSource;
            var store = null === dataSource || void 0 === dataSource ? void 0 : dataSource.store();
            if (store) {
              store.on(STORE_EVENTS.updating, function (key) {
                var keyName = store.key();
                if (keyName) {
                  _this18._updatedAppointmentKeys.push({
                    key: keyName,
                    value: key
                  });
                } else {
                  _this18._updatedAppointment = key;
                }
              });
              store.on(STORE_EVENTS.push, function (pushItems) {
                var items = dataSource.items();
                var keyName = store.key();
                pushItems.forEach(function (pushItem) {
                  var itemExists = 0 !== items.filter(function (item) {
                    return item[keyName] === pushItem.key;
                  }).length;
                  if (itemExists) {
                    _this18._updatedAppointmentKeys.push({
                      key: keyName,
                      value: pushItem.key
                    });
                  } else {
                    var data = pushItem.data;
                    data && items.push(data);
                  }
                });
                dataSource.load();
              });
            }
          }
        }, {
          key: "getUpdatedAppointment",
          value: function getUpdatedAppointment() {
            return this._updatedAppointment;
          }
        }, {
          key: "getUpdatedAppointmentKeys",
          value: function getUpdatedAppointmentKeys() {
            return this._updatedAppointmentKeys;
          }
        }, {
          key: "cleanState",
          value: function cleanState() {
            this._updatedAppointment = null;
            this._updatedAppointmentKeys = [];
          }
        }, {
          key: "add",
          value: function add(rawAppointment) {
            var _this19 = this;
            return this._dataSource.store().insert(rawAppointment).done(function () {
              return _this19._dataSource.load();
            });
          }
        }, {
          key: "update",
          value: function update(target, data) {
            var _this20 = this;
            var key = this._getStoreKey(target);
            var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_0__.Deferred();
            this._dataSource.store().update(key, data).done(function (result) {
              return _this20._dataSource.load().done(function () {
                return d.resolve(result);
              }).fail(d.reject);
            }).fail(d.reject);
            return d.promise();
          }
        }, {
          key: "remove",
          value: function remove(rawAppointment) {
            var _this21 = this;
            var key = this._getStoreKey(rawAppointment);
            return this._dataSource.store().remove(key).done(function () {
              return _this21._dataSource.load();
            });
          }
        }, {
          key: "destroy",
          value: function destroy() {
            var _a;
            var store = null === (_a = this._dataSource) || void 0 === _a ? void 0 : _a.store();
            if (store) {
              store.off(STORE_EVENTS.updating);
              store.off(STORE_EVENTS.push);
            }
          }
        }]);
        return _AppointmentDataSource;
      }();
      /***/
    }),
    /***/61965: (
    /*!*************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/data_provider/m_appointment_filter.js ***!
      \*************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"AppointmentFilterBaseStrategy": function AppointmentFilterBaseStrategy() {
          return /* binding */_AppointmentFilterBaseStrategy;
        },
        /* harmony export */"AppointmentFilterVirtualStrategy": function AppointmentFilterVirtualStrategy() {
          return /* binding */_AppointmentFilterVirtualStrategy;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/array */36959);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../core/utils/type */33275);
      /* harmony import */
      var _data_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../../data/query */3398);
      /* harmony import */
      var _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay */89448);
      /* harmony import */
      var _renovation_ui_scheduler_resources_hasResourceValue__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/resources/hasResourceValue */78993);
      /* harmony import */
      var _renovation_ui_scheduler_utils_filtering_getDatesWithoutTime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/utils/filtering/getDatesWithoutTime */31424);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../m_appointment_adapter */91634);
      /* harmony import */
      var _m_recurrence__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../m_recurrence */33746);
      /* harmony import */
      var _resources_m_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../../resources/m_utils */48025);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ./m_utils */57534);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/data_provider/m_appointment_filter.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].dateToMilliseconds;
      var FilterStrategies = {
        virtual: "virtual",
        standard: "standard"
      };
      var _AppointmentFilterBaseStrategy = /*#__PURE__*/function () {
        function _AppointmentFilterBaseStrategy(options) {
          _classCallCheck(this, _AppointmentFilterBaseStrategy);
          this.options = options;
          this.dataAccessors = this.options.dataAccessors;
          this._init();
        }
        _createClass(_AppointmentFilterBaseStrategy, [{
          key: "strategyName",
          get: function get() {
            return FilterStrategies.standard;
          }
        }, {
          key: "timeZoneCalculator",
          get: function get() {
            return this.options.timeZoneCalculator;
          }
        }, {
          key: "viewStartDayHour",
          get: function get() {
            return this.options.startDayHour;
          }
        }, {
          key: "viewEndDayHour",
          get: function get() {
            return this.options.endDayHour;
          }
        }, {
          key: "timezone",
          get: function get() {
            return this.options.timezone;
          }
        }, {
          key: "firstDayOfWeek",
          get: function get() {
            return this.options.firstDayOfWeek;
          }
        }, {
          key: "showAllDayPanel",
          get: function get() {
            return this.options.showAllDayPanel;
          }
        }, {
          key: "loadedResources",
          get: function get() {
            return this._resolveOption("loadedResources");
          }
        }, {
          key: "supportAllDayRow",
          get: function get() {
            return this._resolveOption("supportAllDayRow");
          }
        }, {
          key: "viewType",
          get: function get() {
            return this._resolveOption("viewType");
          }
        }, {
          key: "viewDirection",
          get: function get() {
            return this._resolveOption("viewDirection");
          }
        }, {
          key: "dateRange",
          get: function get() {
            return this._resolveOption("dateRange");
          }
        }, {
          key: "groupCount",
          get: function get() {
            return this._resolveOption("groupCount");
          }
        }, {
          key: "viewDataProvider",
          get: function get() {
            return this._resolveOption("viewDataProvider");
          }
        }, {
          key: "allDayPanelMode",
          get: function get() {
            return this._resolveOption("allDayPanelMode");
          }
        }, {
          key: "_resolveOption",
          value: function _resolveOption(name) {
            var result = this.options[name];
            return "function" === typeof result ? result() : result;
          }
        }, {
          key: "_init",
          value: function _init() {
            this.setDataAccessors(this.dataAccessors);
          }
        }, {
          key: "filter",
          value: function filter(preparedItems) {
            var dateRange = this.dateRange;
            var allDay;
            if (!this.showAllDayPanel && this.supportAllDayRow) {
              allDay = false;
            }
            return this.filterLoadedAppointments({
              startDayHour: this.viewStartDayHour,
              endDayHour: this.viewEndDayHour,
              viewStartDayHour: this.viewStartDayHour,
              viewEndDayHour: this.viewEndDayHour,
              min: dateRange[0],
              max: dateRange[1],
              resources: this.loadedResources,
              allDay: allDay,
              supportMultiDayAppointments: (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__.isTimelineView)(this.viewType),
              firstDayOfWeek: this.firstDayOfWeek
            }, preparedItems);
          }
        }, {
          key: "hasAllDayAppointments",
          value: function hasAllDayAppointments(filteredItems, preparedItems) {
            var _this22 = this;
            var adapters = filteredItems.map(function (item) {
              return (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_10__.createAppointmentAdapter)(item, _this22.dataAccessors, _this22.timeZoneCalculator);
            });
            var result = false;
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__.each)(adapters, function (_, item) {
              if ((0, _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_6__.getAppointmentTakesAllDay)(item, _this22.viewStartDayHour, _this22.viewEndDayHour, _this22.allDayPanelMode)) {
                result = true;
                return false;
              }
            });
            return result;
          }
        }, {
          key: "setDataAccessors",
          value: function setDataAccessors(dataAccessors) {
            this.dataAccessors = dataAccessors;
          }
        }, {
          key: "_createAllDayAppointmentFilter",
          value: function _createAllDayAppointmentFilter(filterOptions) {
            var _this23 = this;
            var viewStartDayHour = filterOptions.viewStartDayHour,
              viewEndDayHour = filterOptions.viewEndDayHour;
            return [[function (appointment) {
              return (0, _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_6__.getAppointmentTakesAllDay)(appointment, viewStartDayHour, viewEndDayHour, _this23.allDayPanelMode);
            }]];
          }
        }, {
          key: "_createCombinedFilter",
          value: function _createCombinedFilter(filterOptions) {
            var _this24 = this;
            var min = new Date(filterOptions.min);
            var max = new Date(filterOptions.max);
            var startDayHour = filterOptions.startDayHour,
              endDayHour = filterOptions.endDayHour,
              viewStartDayHour = filterOptions.viewStartDayHour,
              viewEndDayHour = filterOptions.viewEndDayHour,
              resources = filterOptions.resources,
              firstDayOfWeek = filterOptions.firstDayOfWeek,
              checkIntersectViewport = filterOptions.checkIntersectViewport,
              supportMultiDayAppointments = filterOptions.supportMultiDayAppointments;
            var _ref6 = (0, _renovation_ui_scheduler_utils_filtering_getDatesWithoutTime__WEBPACK_IMPORTED_MODULE_8__["default"])(min, max),
              _ref7 = _slicedToArray(_ref6, 2),
              trimMin = _ref7[0],
              trimMax = _ref7[1];
            var useRecurrence = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isDefined)(this.dataAccessors.getter.recurrenceRule);
            return [[function (appointment) {
              var _a;
              var appointmentVisible = null !== (_a = appointment.visible) && void 0 !== _a ? _a : true;
              if (!appointmentVisible) {
                return false;
              }
              var startDate = appointment.startDate,
                endDate = appointment.endDate,
                hasRecurrenceRule = appointment.hasRecurrenceRule;
              if (!hasRecurrenceRule) {
                if (!(endDate >= trimMin && startDate < trimMax || _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].sameDate(endDate, trimMin) && _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].sameDate(startDate, trimMin))) {
                  return false;
                }
              }
              var appointmentTakesAllDay = (0, _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_6__.getAppointmentTakesAllDay)(appointment, viewStartDayHour, viewEndDayHour, _this24.allDayPanelMode);
              var appointmentTakesSeveralDays = (0, _m_utils__WEBPACK_IMPORTED_MODULE_13__.getAppointmentTakesSeveralDays)(appointment);
              var isAllDay = appointment.allDay;
              var isLongAppointment = appointmentTakesSeveralDays || appointmentTakesAllDay;
              if ((null === resources || void 0 === resources ? void 0 : resources.length) && !_this24._filterAppointmentByResources(appointment.rawAppointment, resources)) {
                return false;
              }
              if (appointmentTakesAllDay && false === filterOptions.allDay) {
                return false;
              }
              if (hasRecurrenceRule) {
                var recurrenceException = (0, _m_utils__WEBPACK_IMPORTED_MODULE_13__.getRecurrenceException)(appointment, _this24.timeZoneCalculator, _this24.timezone);
                if (!_this24._filterAppointmentByRRule((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, appointment), {
                  recurrenceException: recurrenceException,
                  allDay: appointmentTakesAllDay
                }), min, max, startDayHour, endDayHour, firstDayOfWeek)) {
                  return false;
                }
              }
              if (!isAllDay && supportMultiDayAppointments && isLongAppointment) {
                if (endDate < min && (!useRecurrence || useRecurrence && !hasRecurrenceRule)) {
                  return false;
                }
              }
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isDefined)(startDayHour) && (!useRecurrence || !filterOptions.isVirtualScrolling)) {
                if (!(0, _m_utils__WEBPACK_IMPORTED_MODULE_13__.compareDateWithStartDayHour)(startDate, endDate, startDayHour, appointmentTakesAllDay, appointmentTakesSeveralDays)) {
                  return false;
                }
              }
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isDefined)(endDayHour)) {
                if (!(0, _m_utils__WEBPACK_IMPORTED_MODULE_13__.compareDateWithEndDayHour)({
                  startDate: startDate,
                  endDate: endDate,
                  startDayHour: startDayHour,
                  endDayHour: endDayHour,
                  viewStartDayHour: viewStartDayHour,
                  viewEndDayHour: viewEndDayHour,
                  allDay: appointmentTakesAllDay,
                  severalDays: appointmentTakesSeveralDays,
                  min: min,
                  max: max,
                  checkIntersectViewport: checkIntersectViewport
                })) {
                  return false;
                }
              }
              if (!isAllDay && (!isLongAppointment || supportMultiDayAppointments)) {
                if (endDate < min && useRecurrence && !hasRecurrenceRule) {
                  return false;
                }
              }
              return true;
            }]];
          }
        }, {
          key: "_createAppointmentFilter",
          value: function _createAppointmentFilter(filterOptions) {
            return this._createCombinedFilter(filterOptions);
          }
        }, {
          key: "_filterAppointmentByResources",
          value: function _filterAppointmentByResources(appointment, resources) {
            var _this25 = this;
            var checkAppointmentResourceValues = function checkAppointmentResourceValues(resourceName, resourceIndex) {
              var resourceGetter = _this25.dataAccessors.resources.getter[resourceName];
              var resource;
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isFunction)(resourceGetter)) {
                resource = resourceGetter(appointment);
              }
              var appointmentResourceValues = (0, _core_utils_array__WEBPACK_IMPORTED_MODULE_1__.wrapToArray)(resource);
              var resourceData = (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__.map)(resources[resourceIndex].items, function (_ref) {
                var id = _ref.id;
                return id;
              });
              for (var i = 0; i < appointmentResourceValues.length; i++) {
                if ((0, _renovation_ui_scheduler_resources_hasResourceValue__WEBPACK_IMPORTED_MODULE_7__.hasResourceValue)(resourceData, appointmentResourceValues[i])) {
                  return true;
                }
              }
              return false;
            };
            var result = false;
            for (var i = 0; i < resources.length; i++) {
              var resourceName = resources[i].name;
              result = checkAppointmentResourceValues(resourceName, i);
              if (!result) {
                return false;
              }
            }
            return result;
          }
        }, {
          key: "_filterAppointmentByRRule",
          value: function _filterAppointmentByRRule(appointment, min, max, startDayHour, endDayHour, firstDayOfWeek) {
            var recurrenceRule = appointment.recurrenceRule;
            var recurrenceException = appointment.recurrenceException;
            var allDay = appointment.allDay;
            var result = true;
            var appointmentStartDate = appointment.startDate;
            var appointmentEndDate = appointment.endDate;
            var recurrenceProcessor = (0, _m_recurrence__WEBPACK_IMPORTED_MODULE_11__.getRecurrenceProcessor)();
            if (allDay || (0, _m_utils__WEBPACK_IMPORTED_MODULE_13__._appointmentPartInInterval)(appointmentStartDate, appointmentEndDate, startDayHour, endDayHour)) {
              var _ref8 = (0, _renovation_ui_scheduler_utils_filtering_getDatesWithoutTime__WEBPACK_IMPORTED_MODULE_8__["default"])(min, max),
                _ref9 = _slicedToArray(_ref8, 2),
                trimMin = _ref9[0],
                trimMax = _ref9[1];
              min = trimMin;
              max = new Date(trimMax.getTime() - toMs("minute"));
            }
            if (recurrenceRule && !recurrenceProcessor.isValidRecurrenceRule(recurrenceRule)) {
              result = appointmentEndDate > min && appointmentStartDate <= max;
            }
            if (result && recurrenceProcessor.isValidRecurrenceRule(recurrenceRule)) {
              result = recurrenceProcessor.hasRecurrence({
                rule: recurrenceRule,
                exception: recurrenceException,
                start: appointmentStartDate,
                end: appointmentEndDate,
                min: min,
                max: max,
                firstDayOfWeek: firstDayOfWeek,
                appointmentTimezoneOffset: this.timeZoneCalculator.getOriginStartDateOffsetInMs(appointmentStartDate, appointment.startDateTimeZone, false)
              });
            }
            return result;
          }
        }, {
          key: "filterLoadedAppointments",
          value: function filterLoadedAppointments(filterOptions, preparedItems) {
            var filteredItems = this.filterPreparedItems(filterOptions, preparedItems);
            return filteredItems.map(function (_ref2) {
              var rawAppointment = _ref2.rawAppointment;
              return rawAppointment;
            });
          }
        }, {
          key: "filterPreparedItems",
          value: function filterPreparedItems(filterOptions, preparedItems) {
            var combinedFilter = this._createAppointmentFilter(filterOptions);
            return (0, _data_query__WEBPACK_IMPORTED_MODULE_5__["default"])(preparedItems).filter(combinedFilter).toArray();
          }
        }, {
          key: "filterAllDayAppointments",
          value: function filterAllDayAppointments(filterOptions, preparedItems) {
            var combinedFilter = this._createAllDayAppointmentFilter(filterOptions);
            return (0, _data_query__WEBPACK_IMPORTED_MODULE_5__["default"])(preparedItems).filter(combinedFilter).toArray().map(function (_ref3) {
              var rawAppointment = _ref3.rawAppointment;
              return rawAppointment;
            });
          }
        }]);
        return _AppointmentFilterBaseStrategy;
      }();
      var _AppointmentFilterVirtualStrategy = /*#__PURE__*/function (_AppointmentFilterBas) {
        _inherits(_AppointmentFilterVirtualStrategy, _AppointmentFilterBas);
        function _AppointmentFilterVirtualStrategy() {
          _classCallCheck(this, _AppointmentFilterVirtualStrategy);
          return _callSuper(this, _AppointmentFilterVirtualStrategy, arguments);
        }
        _createClass(_AppointmentFilterVirtualStrategy, [{
          key: "strategyName",
          get: function get() {
            return FilterStrategies.virtual;
          }
        }, {
          key: "resources",
          get: function get() {
            return this.options.resources;
          }
        }, {
          key: "filter",
          value: function filter(preparedItems) {
            var _this26 = this;
            var hourMs = toMs("hour");
            var isCalculateStartAndEndDayHour = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__.isDateAndTimeView)(this.viewType);
            var checkIntersectViewport = isCalculateStartAndEndDayHour && "horizontal" === this.viewDirection;
            var isAllDayWorkspace = !this.supportAllDayRow;
            var showAllDayAppointments = this.showAllDayPanel || isAllDayWorkspace;
            var endViewDate = this.viewDataProvider.getLastViewDateByEndDayHour(this.viewEndDayHour);
            var filterOptions = [];
            var groupsInfo = this.viewDataProvider.getCompletedGroupsInfo();
            groupsInfo.forEach(function (item) {
              var groupIndex = item.groupIndex;
              var groupStartDate = item.startDate;
              var groupEndDate = new Date(Math.min(item.endDate, endViewDate));
              var startDayHour = isCalculateStartAndEndDayHour ? groupStartDate.getHours() : _this26.viewStartDayHour;
              var endDayHour = isCalculateStartAndEndDayHour ? startDayHour + groupStartDate.getMinutes() / 60 + (groupEndDate - groupStartDate) / hourMs : _this26.viewEndDayHour;
              var resources = _this26._getPrerenderFilterResources(groupIndex);
              var hasAllDayPanel = _this26.viewDataProvider.hasGroupAllDayPanel(groupIndex);
              var supportAllDayAppointment = isAllDayWorkspace || !!showAllDayAppointments && hasAllDayPanel;
              filterOptions.push({
                isVirtualScrolling: true,
                startDayHour: startDayHour,
                endDayHour: endDayHour,
                viewStartDayHour: _this26.viewStartDayHour,
                viewEndDayHour: _this26.viewEndDayHour,
                min: groupStartDate,
                max: groupEndDate,
                supportMultiDayAppointments: (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__.isTimelineView)(_this26.viewType),
                allDay: supportAllDayAppointment,
                resources: resources,
                firstDayOfWeek: _this26.firstDayOfWeek,
                checkIntersectViewport: checkIntersectViewport
              });
            });
            return this.filterLoadedAppointments({
              filterOptions: filterOptions,
              groupCount: this.groupCount
            }, preparedItems);
          }
        }, {
          key: "filterPreparedItems",
          value: function filterPreparedItems(_ref4, preparedItems) {
            var _this27 = this;
            var filterOptions = _ref4.filterOptions,
              groupCount = _ref4.groupCount;
            var combinedFilters = [];
            var itemsToFilter = preparedItems;
            var needPreFilter = groupCount > 0;
            if (needPreFilter) {
              itemsToFilter = itemsToFilter.filter(function (_ref5) {
                var rawAppointment = _ref5.rawAppointment;
                for (var i = 0; i < filterOptions.length; ++i) {
                  var resources = filterOptions[i].resources;
                  if (_this27._filterAppointmentByResources(rawAppointment, resources)) {
                    return true;
                  }
                }
              });
            }
            filterOptions.forEach(function (option) {
              combinedFilters.length && combinedFilters.push("or");
              var filter = _this27._createAppointmentFilter(option);
              combinedFilters.push(filter);
            });
            return (0, _data_query__WEBPACK_IMPORTED_MODULE_5__["default"])(itemsToFilter).filter(combinedFilters).toArray();
          }
        }, {
          key: "hasAllDayAppointments",
          value: function hasAllDayAppointments(adapters, preparedItems) {
            return this.filterAllDayAppointments({
              viewStartDayHour: this.viewStartDayHour,
              viewEndDayHour: this.viewEndDayHour
            }, preparedItems).length > 0;
          }
        }, {
          key: "_getPrerenderFilterResources",
          value: function _getPrerenderFilterResources(groupIndex) {
            var cellGroup = this.viewDataProvider.getCellsGroup(groupIndex);
            return (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_12__.getResourcesDataByGroups)(this.loadedResources, this.resources, [cellGroup]);
          }
        }]);
        return _AppointmentFilterVirtualStrategy;
      }(_AppointmentFilterBaseStrategy);
      /***/
    }),
    /***/57534: (
    /*!************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/data_provider/m_utils.js ***!
      \************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"compareDateWithStartDayHour": function compareDateWithStartDayHour() {
          return /* binding */_compareDateWithStartDayHour;
        },
        /* harmony export */"compareDateWithEndDayHour": function compareDateWithEndDayHour() {
          return /* binding */_compareDateWithEndDayHour;
        },
        /* harmony export */"getAppointmentTakesSeveralDays": function getAppointmentTakesSeveralDays() {
          return /* binding */_getAppointmentTakesSeveralDays;
        },
        /* harmony export */"_isEndDateWrong": function _isEndDateWrong() {
          return /* binding */_isEndDateWrong2;
        },
        /* harmony export */"_appointmentPartInInterval": function _appointmentPartInInterval() {
          return /* binding */_appointmentPartInInterval2;
        },
        /* harmony export */"getRecurrenceException": function getRecurrenceException() {
          return /* binding */_getRecurrenceException;
        },
        /* harmony export */"_convertRecurrenceException": function _convertRecurrenceException() {
          return /* binding */_convertRecurrenceException2;
        },
        /* harmony export */"replaceWrongEndDate": function replaceWrongEndDate() {
          return /* binding */_replaceWrongEndDate;
        },
        /* harmony export */"sortAppointmentsByStartDate": function sortAppointmentsByStartDate() {
          return /* binding */_sortAppointmentsByStartDate;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/date_serialization */37043);
      /* harmony import */
      var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../ui/scheduler/utils.timeZone */53374);
      /* harmony import */
      var _m_expression_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../m_expression_utils */31363);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/data_provider/m_utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds;
      var FULL_DATE_FORMAT = "yyyyMMddTHHmmss";
      var _compareDateWithStartDayHour = function _compareDateWithStartDayHour(startDate, endDate, startDayHour, allDay, severalDays) {
        var startTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateTimeFromDecimal(startDayHour);
        var result = startDate.getHours() >= startTime.hours && startDate.getMinutes() >= startTime.minutes || endDate.getHours() === startTime.hours && endDate.getMinutes() > startTime.minutes || endDate.getHours() > startTime.hours || severalDays || allDay;
        return result;
      };
      var _compareDateWithEndDayHour = function _compareDateWithEndDayHour(options) {
        var startDate = options.startDate,
          endDate = options.endDate,
          startDayHour = options.startDayHour,
          endDayHour = options.endDayHour,
          viewStartDayHour = options.viewStartDayHour,
          viewEndDayHour = options.viewEndDayHour,
          allDay = options.allDay,
          severalDays = options.severalDays,
          min = options.min,
          max = options.max,
          checkIntersectViewport = options.checkIntersectViewport;
        var hiddenInterval = (24 - viewEndDayHour + viewStartDayHour) * toMs("hour");
        var apptDuration = endDate.getTime() - startDate.getTime();
        var delta = (hiddenInterval - apptDuration) / toMs("hour");
        var apptStartHour = startDate.getHours();
        var apptStartMinutes = startDate.getMinutes();
        var result;
        var endTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateTimeFromDecimal(endDayHour);
        var startTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateTimeFromDecimal(startDayHour);
        var apptIntersectViewport = startDate < max && endDate > min;
        result = checkIntersectViewport && apptIntersectViewport || apptStartHour < endTime.hours || apptStartHour === endTime.hours && apptStartMinutes < endTime.minutes || allDay && startDate <= max || severalDays && apptIntersectViewport && (apptStartHour < endTime.hours || 60 * endDate.getHours() + endDate.getMinutes() > 60 * startTime.hours);
        if (apptDuration < hiddenInterval) {
          if (apptStartHour > endTime.hours && apptStartMinutes > endTime.minutes && delta <= apptStartHour - endDayHour) {
            result = false;
          }
        }
        return result;
      };
      var _getAppointmentTakesSeveralDays = function _getAppointmentTakesSeveralDays(adapter) {
        return !_core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].sameDate(adapter.startDate, adapter.endDate);
      };
      var _isEndDateWrong2 = function _isEndDateWrong2(startDate, endDate) {
        return !endDate || isNaN(endDate.getTime()) || startDate.getTime() > endDate.getTime();
      };
      var _appointmentPartInInterval2 = function _appointmentPartInInterval2(startDate, endDate, startDayHour, endDayHour) {
        var apptStartDayHour = startDate.getHours();
        var apptEndDayHour = endDate.getHours();
        return apptStartDayHour <= startDayHour && apptEndDayHour <= endDayHour && apptEndDayHour >= startDayHour || apptEndDayHour >= endDayHour && apptStartDayHour <= endDayHour && apptStartDayHour >= startDayHour;
      };
      var _getRecurrenceException = function _getRecurrenceException(appointmentAdapter, timeZoneCalculator, timeZone) {
        var recurrenceException = appointmentAdapter.recurrenceException;
        if (recurrenceException) {
          var exceptions = recurrenceException.split(",");
          for (var i = 0; i < exceptions.length; i++) {
            exceptions[i] = _convertRecurrenceException2(exceptions[i], appointmentAdapter.startDate, timeZoneCalculator, timeZone);
          }
          return exceptions.join();
        }
        return recurrenceException;
      };
      var _convertRecurrenceException2 = function _convertRecurrenceException2(exceptionString, startDate, timeZoneCalculator, timeZone) {
        exceptionString = exceptionString.replace(/\s/g, "");
        var getConvertedToTimeZone = function getConvertedToTimeZone(date) {
          return timeZoneCalculator.createDate(date, {
            path: "toGrid"
          });
        };
        var exceptionDate = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_1__["default"].deserializeDate(exceptionString);
        var convertedStartDate = getConvertedToTimeZone(startDate);
        var convertedExceptionDate = getConvertedToTimeZone(exceptionDate);
        convertedExceptionDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_2__["default"].correctRecurrenceExceptionByTimezone(convertedExceptionDate, convertedStartDate, timeZone);
        exceptionString = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_1__["default"].serializeDate(convertedExceptionDate, FULL_DATE_FORMAT);
        return exceptionString;
      };
      var _replaceWrongEndDate = function _replaceWrongEndDate(rawAppointment, startDate, endDate, appointmentDuration, dataAccessors) {
        if (_isEndDateWrong2(startDate, endDate)) {
          var isAllDay = _m_expression_utils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.getField(dataAccessors, "allDay", rawAppointment);
          var calculatedEndDate = function (isAllDay, startDate) {
            if (isAllDay) {
              return _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].setToDayEnd(new Date(startDate));
            }
            return new Date(startDate.getTime() + appointmentDuration * toMs("minute"));
          }(isAllDay, startDate);
          dataAccessors.setter.endDate(rawAppointment, calculatedEndDate);
        }
      };
      var _sortAppointmentsByStartDate = function _sortAppointmentsByStartDate(appointments, dataAccessors) {
        appointments.sort(function (a, b) {
          var firstDate = new Date(_m_expression_utils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.getField(dataAccessors, "startDate", a.settings || a));
          var secondDate = new Date(_m_expression_utils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.getField(dataAccessors, "startDate", b.settings || b));
          return Math.sign(firstDate.getTime() - secondDate.getTime());
        });
      };

      /***/
    }),
    /***/5331: (
    /*!****************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_appointment.js ***!
      \****************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Appointment": function Appointment() {
          return /* binding */_Appointment;
        },
        /* harmony export */"AgendaAppointment": function AgendaAppointment() {
          return /* binding */_AgendaAppointment;
        }
        /* harmony export */
      });
      /* harmony import */
      var _animation_translator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../animation/translator */10829);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _core_dom_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/dom_component */530);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../events/core/events_engine */99064);
      /* harmony import */
      var _events_pointer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../events/pointer */24842);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../events/utils/index */3151);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../../localization/date */83881);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../../localization/message */19336);
      /* harmony import */
      var _ui_resizable__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../../ui/resizable */511);
      /* harmony import */
      var _ui_tooltip_ui_tooltip__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../../../ui/tooltip/ui.tooltip */75934);
      /* harmony import */
      var _m_classes__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../m_classes */16874);
      /* harmony import */
      var _m_expression_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../m_expression_utils */31363);
      /* harmony import */
      var _m_recurrence__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../m_recurrence */33746);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/m_appointment.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DEFAULT_HORIZONTAL_HANDLES = "left right";
      var DEFAULT_VERTICAL_HANDLES = "top bottom";
      var REDUCED_APPOINTMENT_POINTERENTER_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_8__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_7__["default"].enter, "dxSchedulerAppointment");
      var REDUCED_APPOINTMENT_POINTERLEAVE_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_8__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_7__["default"].leave, "dxSchedulerAppointment");
      var _Appointment = /*#__PURE__*/function (_core_dom_component__) {
        _inherits(_Appointment, _core_dom_component__);
        function _Appointment() {
          _classCallCheck(this, _Appointment);
          return _callSuper(this, _Appointment, arguments);
        }
        _createClass(_Appointment, [{
          key: "coloredElement",
          get: function get() {
            return this.$element();
          }
        }, {
          key: "rawAppointment",
          get: function get() {
            return this.option("data");
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(_get(_getPrototypeOf(_Appointment.prototype), "_getDefaultOptions", this).call(this), {
              data: {},
              groupIndex: -1,
              groups: [],
              geometry: {
                top: 0,
                left: 0,
                width: 0,
                height: 0
              },
              allowDrag: true,
              allowResize: true,
              reduced: null,
              isCompact: false,
              direction: "vertical",
              resizableConfig: {
                keepAspectRatio: false
              },
              cellHeight: 0,
              cellWidth: 0,
              isDragSource: false
            });
          }
        }, {
          key: "notifyObserver",
          value: function notifyObserver(subject, args) {
            var observer = this.option("observer");
            if (observer) {
              observer.fire(subject, args);
            }
          }
        }, {
          key: "invoke",
          value: function invoke(funcName) {
            var observer = this.option("observer");
            if (observer) {
              return observer.fire.apply(observer, arguments);
            }
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(args) {
            switch (args.name) {
              case "data":
              case "groupIndex":
              case "geometry":
              case "allowDrag":
              case "allowResize":
              case "reduced":
              case "sortedIndex":
              case "isCompact":
              case "direction":
              case "resizableConfig":
              case "cellHeight":
              case "cellWidth":
                this._invalidate();
                break;
              case "isDragSource":
                this._renderDragSourceClass();
                break;
              default:
                _get(_getPrototypeOf(_Appointment.prototype), "_optionChanged", this).call(this, args);
            }
          }
        }, {
          key: "_getHorizontalResizingRule",
          value: function _getHorizontalResizingRule() {
            var reducedHandles = {
              head: this.option("rtlEnabled") ? "right" : "left",
              body: "",
              tail: this.option("rtlEnabled") ? "left" : "right"
            };
            var getResizableStep = this.option("getResizableStep");
            var step = getResizableStep ? getResizableStep() : 0;
            return {
              handles: this.option("reduced") ? reducedHandles[this.option("reduced")] : DEFAULT_HORIZONTAL_HANDLES,
              minHeight: 0,
              minWidth: this.invoke("getCellWidth"),
              step: step,
              roundStepValue: false
            };
          }
        }, {
          key: "_getVerticalResizingRule",
          value: function _getVerticalResizingRule() {
            var height = Math.round(this.invoke("getCellHeight"));
            return {
              handles: DEFAULT_VERTICAL_HANDLES,
              minWidth: 0,
              minHeight: height,
              step: height,
              roundStepValue: true
            };
          }
        }, {
          key: "_render",
          value: function _render() {
            _get(_getPrototypeOf(_Appointment.prototype), "_render", this).call(this);
            this._renderAppointmentGeometry();
            this._renderEmptyClass();
            this._renderReducedAppointment();
            this._renderAllDayClass();
            this._renderDragSourceClass();
            this._renderDirection();
            this.$element().data("dxAppointmentStartDate", this.option("startDate"));
            var text = _m_expression_utils__WEBPACK_IMPORTED_MODULE_14__.ExpressionUtils.getField(this.option("dataAccessors"), "text", this.rawAppointment);
            this.$element().attr("title", text);
            this.$element().attr("role", "button");
            this._renderRecurrenceClass();
            this._renderResizable();
            this._setResourceColor();
          }
        }, {
          key: "_setResourceColor",
          value: function _setResourceColor() {
            var _this28 = this;
            var appointmentConfig = {
              itemData: this.rawAppointment,
              groupIndex: this.option("groupIndex"),
              groups: this.option("groups")
            };
            var deferredColor = this.option("getAppointmentColor")(appointmentConfig);
            deferredColor.done(function (color) {
              return color && _this28.coloredElement.css("backgroundColor", color);
            });
          }
        }, {
          key: "_renderAppointmentGeometry",
          value: function _renderAppointmentGeometry() {
            var geometry = this.option("geometry");
            var $element = this.$element();
            (0, _animation_translator__WEBPACK_IMPORTED_MODULE_0__.move)($element, {
              top: geometry.top,
              left: geometry.left
            });
            $element.css({
              width: geometry.width < 0 ? 0 : geometry.width,
              height: geometry.height < 0 ? 0 : geometry.height
            });
          }
        }, {
          key: "_renderEmptyClass",
          value: function _renderEmptyClass() {
            var geometry = this.option("geometry");
            if (geometry.empty || this.option("isCompact")) {
              this.$element().addClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.EMPTY_APPOINTMENT_CLASS);
            }
          }
        }, {
          key: "_renderReducedAppointment",
          value: function _renderReducedAppointment() {
            var reducedPart = this.option("reduced");
            if (!reducedPart) {
              return;
            }
            this.$element().toggleClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.REDUCED_APPOINTMENT_CLASS, true).toggleClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.REDUCED_APPOINTMENT_PARTS_CLASSES[reducedPart], true);
            this._renderAppointmentReducedIcon();
          }
        }, {
          key: "_renderAppointmentReducedIcon",
          value: function _renderAppointmentReducedIcon() {
            var $icon = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.REDUCED_APPOINTMENT_ICON).appendTo(this.$element());
            var endDate = this._getEndDate();
            var tooltipLabel = _localization_message__WEBPACK_IMPORTED_MODULE_10__["default"].format("dxScheduler-editorLabelEndDate");
            var tooltipText = [tooltipLabel, ": ", _localization_date__WEBPACK_IMPORTED_MODULE_9__["default"].format(endDate, "monthAndDay"), ", ", _localization_date__WEBPACK_IMPORTED_MODULE_9__["default"].format(endDate, "year")].join("");
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_6__["default"].off($icon, REDUCED_APPOINTMENT_POINTERENTER_EVENT_NAME);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_6__["default"].on($icon, REDUCED_APPOINTMENT_POINTERENTER_EVENT_NAME, function () {
              (0, _ui_tooltip_ui_tooltip__WEBPACK_IMPORTED_MODULE_12__.show)({
                target: $icon,
                content: tooltipText
              });
            });
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_6__["default"].off($icon, REDUCED_APPOINTMENT_POINTERLEAVE_EVENT_NAME);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_6__["default"].on($icon, REDUCED_APPOINTMENT_POINTERLEAVE_EVENT_NAME, function () {
              (0, _ui_tooltip_ui_tooltip__WEBPACK_IMPORTED_MODULE_12__.hide)();
            });
          }
        }, {
          key: "_getEndDate",
          value: function _getEndDate() {
            var result = _m_expression_utils__WEBPACK_IMPORTED_MODULE_14__.ExpressionUtils.getField(this.option("dataAccessors"), "endDate", this.rawAppointment);
            if (result) {
              return new Date(result);
            }
            return result;
          }
        }, {
          key: "_renderAllDayClass",
          value: function _renderAllDayClass() {
            this.$element().toggleClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.ALL_DAY_APPOINTMENT_CLASS, !!this.option("allDay"));
          }
        }, {
          key: "_renderDragSourceClass",
          value: function _renderDragSourceClass() {
            this.$element().toggleClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.APPOINTMENT_DRAG_SOURCE_CLASS, !!this.option("isDragSource"));
          }
        }, {
          key: "_renderRecurrenceClass",
          value: function _renderRecurrenceClass() {
            var rule = _m_expression_utils__WEBPACK_IMPORTED_MODULE_14__.ExpressionUtils.getField(this.option("dataAccessors"), "recurrenceRule", this.rawAppointment);
            if ((0, _m_recurrence__WEBPACK_IMPORTED_MODULE_15__.getRecurrenceProcessor)().isValidRecurrenceRule(rule)) {
              this.$element().addClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.RECURRENCE_APPOINTMENT_CLASS);
            }
          }
        }, {
          key: "_renderDirection",
          value: function _renderDirection() {
            this.$element().addClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.DIRECTION_APPOINTMENT_CLASSES[this.option("direction")]);
          }
        }, {
          key: "_createResizingConfig",
          value: function _createResizingConfig() {
            var config = "vertical" === this.option("direction") ? this._getVerticalResizingRule() : this._getHorizontalResizingRule();
            if (!this.invoke("isGroupedByDate")) {
              config.stepPrecision = "strict";
            }
            return config;
          }
        }, {
          key: "_renderResizable",
          value: function _renderResizable() {
            if (this.option("allowResize")) {
              this._createComponent(this.$element(), _ui_resizable__WEBPACK_IMPORTED_MODULE_11__["default"], (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this._createResizingConfig(), this.option("resizableConfig")));
            }
          }
        }, {
          key: "_useTemplates",
          value: function _useTemplates() {
            return false;
          }
        }]);
        return _Appointment;
      }(_core_dom_component__WEBPACK_IMPORTED_MODULE_2__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__["default"])("dxSchedulerAppointment", _Appointment);
      var _AgendaAppointment = /*#__PURE__*/function (_Appointment2) {
        _inherits(_AgendaAppointment, _Appointment2);
        function _AgendaAppointment() {
          _classCallCheck(this, _AgendaAppointment);
          return _callSuper(this, _AgendaAppointment, arguments);
        }
        _createClass(_AgendaAppointment, [{
          key: "coloredElement",
          get: function get() {
            return this.$element().find(".".concat(_m_classes__WEBPACK_IMPORTED_MODULE_13__.APPOINTMENT_CONTENT_CLASSES.AGENDA_MARKER));
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(_get(_getPrototypeOf(_AgendaAppointment.prototype), "_getDefaultOptions", this).call(this), {
              createPlainResourceListAsync: new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred()
            });
          }
        }, {
          key: "_renderResourceList",
          value: function _renderResourceList(container, list) {
            list.forEach(function (item) {
              var itemContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.APPOINTMENT_CONTENT_CLASSES.AGENDA_RESOURCE_LIST_ITEM).appendTo(container);
              (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").text("".concat(item.label, ":")).appendTo(itemContainer);
              (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.APPOINTMENT_CONTENT_CLASSES.AGENDA_RESOURCE_LIST_ITEM_VALUE).text(item.values.join(", ")).appendTo(itemContainer);
            });
          }
        }, {
          key: "_render",
          value: function _render() {
            var _this29 = this;
            _get(_getPrototypeOf(_AgendaAppointment.prototype), "_render", this).call(this);
            var createPlainResourceListAsync = this.option("createPlainResourceListAsync");
            createPlainResourceListAsync(this.rawAppointment).done(function (list) {
              var parent = _this29.$element().find(".".concat(_m_classes__WEBPACK_IMPORTED_MODULE_13__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_CONTENT_DETAILS));
              var container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_13__.APPOINTMENT_CONTENT_CLASSES.AGENDA_RESOURCE_LIST).appendTo(parent);
              _this29._renderResourceList(container, list);
            });
          }
        }]);
        return _AgendaAppointment;
      }(_Appointment);
      /***/
    }),
    /***/13216: (
    /*!***************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_appointment_collection.js ***!
      \***************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _animation_translator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../animation/translator */10829);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/dom_adapter */81113);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/element */60213);
      /* harmony import */
      var _core_element_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/element_data */25694);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../core/utils/array */36959);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../core/utils/common */37552);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_object__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../../../core/utils/object */163);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../../../core/utils/position */9622);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ../../../events/core/events_engine */99064);
      /* harmony import */
      var _events_double_click__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__( /*! ../../../events/double_click */66368);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__( /*! ../../../events/utils/index */3151);
      /* harmony import */
      var _ui_collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__( /*! ../../../ui/collection/ui.collection_widget.edit */2076);
      /* harmony import */
      var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__( /*! ../../../ui/scheduler/utils.timeZone */53374);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__( /*! ../m_appointment_adapter */91634);
      /* harmony import */
      var _m_classes__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__( /*! ../m_classes */16874);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_expression_utils__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__( /*! ../m_expression_utils */31363);
      /* harmony import */
      var _m_recurrence__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__( /*! ../m_recurrence */33746);
      /* harmony import */
      var _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__( /*! ./data_provider/m_utils */57534);
      /* harmony import */
      var _m_appointment__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__( /*! ./m_appointment */5331);
      /* harmony import */
      var _m_appointment_layout__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__( /*! ./m_appointment_layout */61865);
      /* harmony import */
      var _resizing_m_core__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__( /*! ./resizing/m_core */4937);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/m_appointment_collection.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var COMPONENT_CLASS = "dx-scheduler-scrollable-appointments";
      var DBLCLICK_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_double_click__WEBPACK_IMPORTED_MODULE_17__.name, "dxSchedulerAppointment");
      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_9__["default"].dateToMilliseconds;
      var SchedulerAppointments = /*#__PURE__*/function (_ui_collection_ui_col) {
        _inherits(SchedulerAppointments, _ui_collection_ui_col);
        function SchedulerAppointments(element, options) {
          var _this30;
          _classCallCheck(this, SchedulerAppointments);
          _this30 = _callSuper(this, SchedulerAppointments, [element, options]);
          _this30._virtualAppointments = {};
          return _this30;
        }
        _createClass(SchedulerAppointments, [{
          key: "isAgendaView",
          get: function get() {
            return this.invoke("isCurrentViewAgenda");
          }
        }, {
          key: "isVirtualScrolling",
          get: function get() {
            return this.invoke("isVirtualScrolling");
          }
        }, {
          key: "appointmentDataProvider",
          get: function get() {
            return this.option("getAppointmentDataProvider")();
          }
        }, {
          key: "option",
          value: function option(optionName, value) {
            return _get(_getPrototypeOf(SchedulerAppointments.prototype), "option", this).apply(this, arguments);
          }
        }, {
          key: "notifyObserver",
          value: function notifyObserver(subject, args) {
            var observer = this.option("observer");
            if (observer) {
              observer.fire(subject, args);
            }
          }
        }, {
          key: "invoke",
          value: function invoke(funcName) {
            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            var observer = this.option("observer");
            if (observer) {
              return observer.fire.apply(observer, arguments);
            }
          }
        }, {
          key: "_dispose",
          value: function _dispose() {
            clearTimeout(this._appointmentClickTimeout);
            _get(_getPrototypeOf(SchedulerAppointments.prototype), "_dispose", this).call(this);
          }
        }, {
          key: "_supportedKeys",
          value: function _supportedKeys() {
            var parent = _get(_getPrototypeOf(SchedulerAppointments.prototype), "_supportedKeys", this).call(this);
            var currentAppointment = this._$currentAppointment;
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(parent, {
              escape: function () {
                var _a, _b, _c;
                if (this.resizeOccur) {
                  this.moveAppointmentBack();
                  this.resizeOccur = false;
                  null === (_a = currentAppointment.dxResizable("instance")) || void 0 === _a ? void 0 : _a._detachEventHandlers();
                  null === (_b = currentAppointment.dxResizable("instance")) || void 0 === _b ? void 0 : _b._attachEventHandlers();
                  null === (_c = currentAppointment.dxResizable("instance")) || void 0 === _c ? void 0 : _c._toggleResizingClass(false);
                }
              }.bind(this),
              del: function (e) {
                if (this.option("allowDelete")) {
                  e.preventDefault();
                  var data = this._getItemData(e.target);
                  this.notifyObserver("onDeleteButtonPress", {
                    data: data,
                    target: e.target
                  });
                }
              }.bind(this),
              tab: function tab(e) {
                var appointments = this._getAccessAppointments();
                var focusedAppointment = appointments.filter(".dx-state-focused");
                var index = focusedAppointment.data(_m_constants__WEBPACK_IMPORTED_MODULE_23__.APPOINTMENT_SETTINGS_KEY).sortedIndex;
                var lastIndex = appointments.length - 1;
                if (index > 0 && e.shiftKey || index < lastIndex && !e.shiftKey) {
                  e.preventDefault();
                  e.shiftKey ? index-- : index++;
                  var $nextAppointment = this._getAppointmentByIndex(index);
                  this._resetTabIndex($nextAppointment);
                  _events_core_events_engine__WEBPACK_IMPORTED_MODULE_16__["default"].trigger($nextAppointment, "focus");
                }
              }
            });
          }
        }, {
          key: "_getAppointmentByIndex",
          value: function _getAppointmentByIndex(sortedIndex) {
            var appointments = this._getAccessAppointments();
            return appointments.filter(function (_, $item) {
              return (0, _core_element_data__WEBPACK_IMPORTED_MODULE_5__.data)($item, _m_constants__WEBPACK_IMPORTED_MODULE_23__.APPOINTMENT_SETTINGS_KEY).sortedIndex === sortedIndex;
            }).eq(0);
          }
        }, {
          key: "_getAccessAppointments",
          value: function _getAccessAppointments() {
            return this._itemElements().filter(":visible").not(".dx-state-disabled");
          }
        }, {
          key: "_resetTabIndex",
          value: function _resetTabIndex($appointment) {
            this._focusTarget().attr("tabIndex", -1);
            $appointment.attr("tabIndex", this.option("tabIndex"));
          }
        }, {
          key: "_moveFocus",
          value: function _moveFocus() {}
        }, {
          key: "_focusTarget",
          value: function _focusTarget() {
            return this._itemElements();
          }
        }, {
          key: "_renderFocusTarget",
          value: function _renderFocusTarget() {
            var $appointment = this._getAppointmentByIndex(0);
            this._resetTabIndex($appointment);
          }
        }, {
          key: "_focusInHandler",
          value: function _focusInHandler(e) {
            _get(_getPrototypeOf(SchedulerAppointments.prototype), "_focusInHandler", this).call(this, e);
            this._$currentAppointment = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(e.target);
            this.option("focusedElement", (0, _core_element__WEBPACK_IMPORTED_MODULE_4__.getPublicElement)((0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(e.target)));
          }
        }, {
          key: "_focusOutHandler",
          value: function _focusOutHandler(e) {
            var $appointment = this._getAppointmentByIndex(0);
            this.option("focusedElement", (0, _core_element__WEBPACK_IMPORTED_MODULE_4__.getPublicElement)($appointment));
            _get(_getPrototypeOf(SchedulerAppointments.prototype), "_focusOutHandler", this).call(this, e);
          }
        }, {
          key: "_eventBindingTarget",
          value: function _eventBindingTarget() {
            return this._itemContainer();
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(_get(_getPrototypeOf(SchedulerAppointments.prototype), "_getDefaultOptions", this).call(this), {
              noDataText: null,
              activeStateEnabled: true,
              hoverStateEnabled: true,
              tabIndex: 0,
              fixedContainer: null,
              allDayContainer: null,
              allowDrag: true,
              allowResize: true,
              allowAllDayResize: true,
              onAppointmentDblClick: null,
              _collectorOffset: 0,
              groups: [],
              resources: []
            });
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(args) {
            if (this.option("isRenovatedAppointments")) {
              return;
            }
            switch (args.name) {
              case "items":
                this._cleanFocusState();
                this._clearDropDownItems();
                this._clearDropDownItemsElements();
                this._repaintAppointments(args.value);
                this._renderDropDownAppointments();
                this._attachAppointmentsEvents();
                break;
              case "fixedContainer":
              case "allDayContainer":
              case "onAppointmentDblClick":
                break;
              case "allowDrag":
              case "allowResize":
              case "allowAllDayResize":
                this._invalidate();
                break;
              case "focusedElement":
                this._resetTabIndex((0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(args.value));
                _get(_getPrototypeOf(SchedulerAppointments.prototype), "_optionChanged", this).call(this, args);
                break;
              case "allowDelete":
                break;
              case "focusStateEnabled":
                this._clearDropDownItemsElements();
                this._renderDropDownAppointments();
                _get(_getPrototypeOf(SchedulerAppointments.prototype), "_optionChanged", this).call(this, args);
                break;
              default:
                _get(_getPrototypeOf(SchedulerAppointments.prototype), "_optionChanged", this).call(this, args);
            }
          }
        }, {
          key: "_isAllDayAppointment",
          value: function _isAllDayAppointment(appointment) {
            return appointment.settings.length && appointment.settings[0].allDay || false;
          }
        }, {
          key: "_isRepaintAppointment",
          value: function _isRepaintAppointment(appointment) {
            return !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(appointment.needRepaint) || true === appointment.needRepaint;
          }
        }, {
          key: "_isRepaintAll",
          value: function _isRepaintAll(appointments) {
            if (this.isAgendaView) {
              return true;
            }
            for (var i = 0; i < appointments.length; i++) {
              if (!this._isRepaintAppointment(appointments[i])) {
                return false;
              }
            }
            return true;
          }
        }, {
          key: "_applyFragment",
          value: function _applyFragment(fragment, allDay) {
            if (fragment.children().length > 0) {
              this._getAppointmentContainer(allDay).append(fragment);
            }
          }
        }, {
          key: "_onEachAppointment",
          value: function _onEachAppointment(appointment, index, container, isRepaintAll) {
            var _this31 = this;
            if (true === (null === appointment || void 0 === appointment ? void 0 : appointment.needRemove)) {
              this._clearItem(appointment);
            } else if (isRepaintAll || this._isRepaintAppointment(appointment)) {
              (function () {
                appointment.needRepaint = false;
                _this31._clearItem(appointment);
                _this31._renderItem(index, appointment, container);
              })();
            }
          }
        }, {
          key: "_repaintAppointments",
          value: function _repaintAppointments(appointments) {
            var _this32 = this;
            this._renderByFragments(function ($commonFragment, $allDayFragment) {
              var isRepaintAll = _this32._isRepaintAll(appointments);
              if (isRepaintAll) {
                _this32._getAppointmentContainer(true).html("");
                _this32._getAppointmentContainer(false).html("");
              }
              !appointments.length && _this32._cleanItemContainer();
              appointments.forEach(function (appointment, index) {
                var container = _this32._isAllDayAppointment(appointment) ? $allDayFragment : $commonFragment;
                _this32._onEachAppointment(appointment, index, container, isRepaintAll);
              });
            });
          }
        }, {
          key: "_renderByFragments",
          value: function _renderByFragments(renderFunction) {
            if (this.isVirtualScrolling) {
              var $commonFragment = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__["default"].createDocumentFragment());
              var $allDayFragment = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__["default"].createDocumentFragment());
              renderFunction($commonFragment, $allDayFragment);
              this._applyFragment($commonFragment, false);
              this._applyFragment($allDayFragment, true);
            } else {
              renderFunction(this._getAppointmentContainer(false), this._getAppointmentContainer(true));
            }
          }
        }, {
          key: "_attachAppointmentsEvents",
          value: function _attachAppointmentsEvents() {
            this._attachClickEvent();
            this._attachHoldEvent();
            this._attachContextMenuEvent();
            this._attachAppointmentDblClick();
            this._renderFocusState();
            this._attachFeedbackEvents();
            this._attachHoverEvents();
          }
        }, {
          key: "_clearItem",
          value: function _clearItem(item) {
            var $items = this._findItemElementByItem(item.itemData);
            if (!$items.length) {
              return;
            }
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)($items, function (_, $item) {
              $item.detach();
              $item.remove();
            });
          }
        }, {
          key: "_clearDropDownItems",
          value: function _clearDropDownItems() {
            this._virtualAppointments = {};
          }
        }, {
          key: "_clearDropDownItemsElements",
          value: function _clearDropDownItemsElements() {
            this.invoke("clearCompactAppointments");
          }
        }, {
          key: "_findItemElementByItem",
          value: function _findItemElementByItem(item) {
            var result = [];
            var that = this;
            this.itemElements().each(function () {
              var $item = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(this);
              if ($item.data(that._itemDataKey()) === item) {
                result.push($item);
              }
            });
            return result;
          }
        }, {
          key: "_itemClass",
          value: function _itemClass() {
            return _m_classes__WEBPACK_IMPORTED_MODULE_22__.APPOINTMENT_ITEM_CLASS;
          }
        }, {
          key: "_itemContainer",
          value: function _itemContainer() {
            var $container = _get(_getPrototypeOf(SchedulerAppointments.prototype), "_itemContainer", this).call(this);
            var $result = $container;
            var $allDayContainer = this.option("allDayContainer");
            if ($allDayContainer) {
              $result = $container.add($allDayContainer);
            }
            return $result;
          }
        }, {
          key: "_cleanItemContainer",
          value: function _cleanItemContainer() {
            _get(_getPrototypeOf(SchedulerAppointments.prototype), "_cleanItemContainer", this).call(this);
            var $allDayContainer = this.option("allDayContainer");
            if ($allDayContainer) {
              $allDayContainer.empty();
            }
            this._virtualAppointments = {};
          }
        }, {
          key: "_clean",
          value: function _clean() {
            _get(_getPrototypeOf(SchedulerAppointments.prototype), "_clean", this).call(this);
            delete this._$currentAppointment;
            delete this._initialSize;
            delete this._initialCoordinates;
          }
        }, {
          key: "_init",
          value: function _init() {
            _get(_getPrototypeOf(SchedulerAppointments.prototype), "_init", this).call(this);
            this.$element().addClass(COMPONENT_CLASS);
            this._preventSingleAppointmentClick = false;
          }
        }, {
          key: "_renderAppointmentTemplate",
          value: function _renderAppointmentTemplate($container, appointment, model) {
            var config = {
              isAllDay: appointment.allDay,
              isRecurrence: appointment.recurrenceRule,
              html: (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isPlainObject)(appointment) && appointment.html ? appointment.html : void 0
            };
            var formatText = this.invoke("getTextAndFormatDate", model.appointmentData, this._currentAppointmentSettings.agendaSettings || model.targetedAppointmentData, "TIME");
            $container.append(this.isAgendaView ? (0, _m_appointment_layout__WEBPACK_IMPORTED_MODULE_28__.createAgendaAppointmentLayout)(formatText, config) : (0, _m_appointment_layout__WEBPACK_IMPORTED_MODULE_28__.createAppointmentLayout)(formatText, config));
          }
        }, {
          key: "_executeItemRenderAction",
          value: function _executeItemRenderAction(index, itemData, itemElement) {
            var action = this._getItemRenderAction();
            if (action) {
              action(this.invoke("mapAppointmentFields", {
                itemData: itemData,
                itemElement: itemElement
              }));
            }
            delete this._currentAppointmentSettings;
          }
        }, {
          key: "_itemClickHandler",
          value: function _itemClickHandler(e) {
            _get(_getPrototypeOf(SchedulerAppointments.prototype), "_itemClickHandler", this).call(this, e, {}, {
              afterExecute: function (e) {
                this._processItemClick(e.args[0].event);
              }.bind(this)
            });
          }
        }, {
          key: "_processItemClick",
          value: function _processItemClick(e) {
            var _this33 = this;
            var $target = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(e.currentTarget);
            var data = this._getItemData($target);
            if ("keydown" === e.type || (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.isFakeClickEvent)(e)) {
              this.notifyObserver("showEditAppointmentPopup", {
                data: data,
                target: $target
              });
              return;
            }
            this._appointmentClickTimeout = setTimeout(function () {
              if (!_this33._preventSingleAppointmentClick && _core_dom_adapter__WEBPACK_IMPORTED_MODULE_3__["default"].getBody().contains($target[0])) {
                _this33.notifyObserver("showAppointmentTooltip", {
                  data: data,
                  target: $target
                });
              }
              _this33._preventSingleAppointmentClick = false;
            }, 300);
          }
        }, {
          key: "_extendActionArgs",
          value: function _extendActionArgs($itemElement) {
            var args = _get(_getPrototypeOf(SchedulerAppointments.prototype), "_extendActionArgs", this).call(this, $itemElement);
            return this.invoke("mapAppointmentFields", args);
          }
        }, {
          key: "_render",
          value: function _render() {
            _get(_getPrototypeOf(SchedulerAppointments.prototype), "_render", this).call(this);
            this._attachAppointmentDblClick();
          }
        }, {
          key: "_attachAppointmentDblClick",
          value: function _attachAppointmentDblClick() {
            var that = this;
            var itemSelector = that._itemSelector();
            var itemContainer = this._itemContainer();
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_16__["default"].off(itemContainer, DBLCLICK_EVENT_NAME, itemSelector);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_16__["default"].on(itemContainer, DBLCLICK_EVENT_NAME, itemSelector, function (e) {
              that._itemDXEventHandler(e, "onAppointmentDblClick", {}, {
                afterExecute: function afterExecute(e) {
                  that._dblClickHandler(e.args[0].event);
                }
              });
            });
          }
        }, {
          key: "_dblClickHandler",
          value: function _dblClickHandler(e) {
            var $targetAppointment = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(e.currentTarget);
            var appointmentData = this._getItemData($targetAppointment);
            clearTimeout(this._appointmentClickTimeout);
            this._preventSingleAppointmentClick = true;
            this.notifyObserver("showEditAppointmentPopup", {
              data: appointmentData,
              target: $targetAppointment
            });
          }
        }, {
          key: "_renderItem",
          value: function _renderItem(index, item, container) {
            var itemData = item.itemData;
            var $items = [];
            for (var i = 0; i < item.settings.length; i++) {
              var setting = item.settings[i];
              this._currentAppointmentSettings = setting;
              var $item = _get(_getPrototypeOf(SchedulerAppointments.prototype), "_renderItem", this).call(this, index, itemData, container);
              $item.data(_m_constants__WEBPACK_IMPORTED_MODULE_23__.APPOINTMENT_SETTINGS_KEY, setting);
              $items.push($item);
            }
            return $items;
          }
        }, {
          key: "_getItemContent",
          value: function _getItemContent($itemFrame) {
            $itemFrame.data(_m_constants__WEBPACK_IMPORTED_MODULE_23__.APPOINTMENT_SETTINGS_KEY, this._currentAppointmentSettings);
            var $itemContent = _get(_getPrototypeOf(SchedulerAppointments.prototype), "_getItemContent", this).call(this, $itemFrame);
            return $itemContent;
          }
        }, {
          key: "_createItemByTemplate",
          value: function _createItemByTemplate(itemTemplate, renderArgs) {
            var itemData = renderArgs.itemData,
              container = renderArgs.container,
              index = renderArgs.index;
            return itemTemplate.render({
              model: {
                appointmentData: itemData,
                targetedAppointmentData: this.invoke("getTargetedAppointmentData", itemData, (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(container).parent())
              },
              container: container,
              index: index
            });
          }
        }, {
          key: "_getAppointmentContainer",
          value: function _getAppointmentContainer(allDay) {
            var $allDayContainer = this.option("allDayContainer");
            var $container = this.itemsContainer().not($allDayContainer);
            if (allDay && $allDayContainer) {
              $container = $allDayContainer;
            }
            return $container;
          }
        }, {
          key: "_postprocessRenderItem",
          value: function _postprocessRenderItem(args) {
            this._renderAppointment(args.itemElement, this._currentAppointmentSettings);
          }
        }, {
          key: "_renderAppointment",
          value: function _renderAppointment(element, settings) {
            var _a;
            element.data(_m_constants__WEBPACK_IMPORTED_MODULE_23__.APPOINTMENT_SETTINGS_KEY, settings);
            this._applyResourceDataAttr(element);
            var rawAppointment = this._getItemData(element);
            var geometry = this.invoke("getAppointmentGeometry", settings);
            var allowResize = this.option("allowResize") && (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(settings.skipResizing) || (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isString)(settings.skipResizing));
            var allowDrag = this.option("allowDrag");
            var allDay = settings.allDay;
            this.invoke("setCellDataCacheAlias", this._currentAppointmentSettings, geometry);
            if (settings.virtual) {
              var appointmentConfig = {
                itemData: rawAppointment,
                groupIndex: settings.groupIndex,
                groups: this.option("groups")
              };
              var deferredColor = this.option("getAppointmentColor")(appointmentConfig);
              this._processVirtualAppointment(settings, element, rawAppointment, deferredColor);
            } else {
              var config = {
                data: rawAppointment,
                groupIndex: settings.groupIndex,
                observer: this.option("observer"),
                geometry: geometry,
                direction: settings.direction || "vertical",
                allowResize: allowResize,
                allowDrag: allowDrag,
                allDay: allDay,
                reduced: settings.appointmentReduced,
                isCompact: settings.isCompact,
                startDate: new Date(null === (_a = settings.info) || void 0 === _a ? void 0 : _a.appointment.startDate),
                cellWidth: this.invoke("getCellWidth"),
                cellHeight: this.invoke("getCellHeight"),
                resizableConfig: this._resizableConfig(rawAppointment, settings),
                groups: this.option("groups"),
                getAppointmentColor: this.option("getAppointmentColor"),
                getResourceDataAccessors: this.option("getResourceDataAccessors")
              };
              if (this.isAgendaView) {
                var agendaResourceProcessor = this.option("getAgendaResourceProcessor")();
                config.createPlainResourceListAsync = function (rawAppointment) {
                  return agendaResourceProcessor.createListAsync(rawAppointment);
                };
              }
              this._createComponent(element, this.isAgendaView ? _m_appointment__WEBPACK_IMPORTED_MODULE_27__.AgendaAppointment : _m_appointment__WEBPACK_IMPORTED_MODULE_27__.Appointment, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, config), {
                dataAccessors: this.option("dataAccessors"),
                getResizableStep: this.option("getResizableStep")
              }));
            }
          }
        }, {
          key: "_applyResourceDataAttr",
          value: function _applyResourceDataAttr($appointment) {
            var dataAccessors = this.option("getResourceDataAccessors")();
            var rawAppointment = this._getItemData($appointment);
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)(dataAccessors.getter, function (key) {
              var value = dataAccessors.getter[key](rawAppointment);
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(value)) {
                var prefix = "data-".concat((0, _core_utils_common__WEBPACK_IMPORTED_MODULE_8__.normalizeKey)(key.toLowerCase()), "-");
                (0, _core_utils_array__WEBPACK_IMPORTED_MODULE_7__.wrapToArray)(value).forEach(function (value) {
                  return $appointment.attr(prefix + (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_8__.normalizeKey)(value), true);
                });
              }
            });
          }
        }, {
          key: "_resizableConfig",
          value: function _resizableConfig(appointmentData, itemSetting) {
            return {
              area: this._calculateResizableArea(itemSetting, appointmentData),
              onResizeStart: function (e) {
                this.resizeOccur = true;
                this._$currentAppointment = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(e.element);
                if (this.invoke("needRecalculateResizableArea")) {
                  var updatedArea = this._calculateResizableArea(this._$currentAppointment.data(_m_constants__WEBPACK_IMPORTED_MODULE_23__.APPOINTMENT_SETTINGS_KEY), this._$currentAppointment.data("dxItemData"));
                  e.component.option("area", updatedArea);
                  e.component._renderDragOffsets(e.event);
                }
                this._initialSize = {
                  width: e.width,
                  height: e.height
                };
                this._initialCoordinates = (0, _animation_translator__WEBPACK_IMPORTED_MODULE_1__.locate)(this._$currentAppointment);
              }.bind(this),
              onResizeEnd: function (e) {
                this.resizeOccur = false;
                this._resizeEndHandler(e);
              }.bind(this)
            };
          }
        }, {
          key: "_calculateResizableArea",
          value: function _calculateResizableArea(itemSetting, appointmentData) {
            var area = this.$element().closest(".dx-scrollable-content");
            return this.invoke("getResizableAppointmentArea", {
              coordinates: {
                left: itemSetting.left,
                top: 0,
                groupIndex: itemSetting.groupIndex
              },
              allDay: itemSetting.allDay
            }) || area;
          }
        }, {
          key: "_resizeEndHandler",
          value: function _resizeEndHandler(e) {
            var $element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(e.element);
            var _$element$data = $element.data("dxAppointmentSettings"),
              allDay = _$element$data.allDay,
              info = _$element$data.info;
            var sourceAppointment = this._getItemData($element);
            var dateRange = {};
            if (allDay) {
              dateRange = this.resizeAllDay(e);
            } else {
              var startDate = this._getEndResizeAppointmentStartDate(e, sourceAppointment, info.appointment);
              var endDate = info.appointment.endDate;
              dateRange = this._getDateRange(e, startDate, endDate);
            }
            this.updateResizedAppointment($element, dateRange, this.option("dataAccessors"), this.option("timeZoneCalculator"));
          }
        }, {
          key: "resizeAllDay",
          value: function resizeAllDay(e) {
            var $element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(e.element);
            var timeZoneCalculator = this.option("timeZoneCalculator");
            var dataAccessors = this.option("dataAccessors");
            return (0, _resizing_m_core__WEBPACK_IMPORTED_MODULE_29__.getAppointmentDateRange)({
              handles: e.handles,
              appointmentSettings: $element.data("dxAppointmentSettings"),
              isVerticalViewDirection: this.option("isVerticalViewDirection")(),
              isVerticalGroupedWorkSpace: this.option("isVerticalGroupedWorkSpace")(),
              appointmentRect: (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_13__.getBoundingRect)($element[0]),
              parentAppointmentRect: (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_13__.getBoundingRect)($element.parent()[0]),
              viewDataProvider: this.option("getViewDataProvider")(),
              isDateAndTimeView: this.option("isDateAndTimeView")(),
              startDayHour: this.invoke("getStartDayHour"),
              endDayHour: this.invoke("getEndDayHour"),
              timeZoneCalculator: timeZoneCalculator,
              dataAccessors: dataAccessors,
              rtlEnabled: this.option("rtlEnabled"),
              DOMMetaData: this.option("getDOMElementsMetaData")()
            });
          }
        }, {
          key: "updateResizedAppointment",
          value: function updateResizedAppointment($element, dateRange, dataAccessors, timeZoneCalculator) {
            var sourceAppointment = this._getItemData($element);
            var modifiedAppointmentAdapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_21__.createAppointmentAdapter)(sourceAppointment, dataAccessors, timeZoneCalculator).clone();
            modifiedAppointmentAdapter.startDate = new Date(dateRange.startDate);
            modifiedAppointmentAdapter.endDate = new Date(dateRange.endDate);
            this.notifyObserver("updateAppointmentAfterResize", {
              target: sourceAppointment,
              data: modifiedAppointmentAdapter.clone({
                pathTimeZone: "fromGrid"
              }).source(),
              $appointment: $element
            });
          }
        }, {
          key: "_getEndResizeAppointmentStartDate",
          value: function _getEndResizeAppointmentStartDate(e, rawAppointment, appointmentInfo) {
            var timeZoneCalculator = this.option("timeZoneCalculator");
            var appointmentAdapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_21__.createAppointmentAdapter)(rawAppointment, this.option("dataAccessors"), timeZoneCalculator);
            var startDate = appointmentInfo.startDate;
            var recurrenceProcessor = (0, _m_recurrence__WEBPACK_IMPORTED_MODULE_25__.getRecurrenceProcessor)();
            var recurrenceRule = appointmentAdapter.recurrenceRule,
              startDateTimeZone = appointmentAdapter.startDateTimeZone;
            var isAllDay = this.invoke("isAllDay", rawAppointment);
            var isRecurrent = recurrenceProcessor.isValidRecurrenceRule(recurrenceRule);
            if (!e.handles.top && !isRecurrent && !isAllDay) {
              startDate = timeZoneCalculator.createDate(appointmentAdapter.startDate, {
                appointmentTimeZone: startDateTimeZone,
                path: "toGrid"
              });
            }
            return startDate;
          }
        }, {
          key: "_getDateRange",
          value: function _getDateRange(e, startDate, endDate) {
            var itemData = this._getItemData(e.element);
            var deltaTime = this.invoke("getDeltaTime", e, this._initialSize, itemData);
            var renderingStrategyDirection = this.invoke("getRenderingStrategyDirection");
            var isStartDateChanged = false;
            var isAllDay = this.invoke("isAllDay", itemData);
            var needCorrectDates = this.invoke("needCorrectAppointmentDates") && !isAllDay;
            var startTime;
            var endTime;
            if ("vertical" !== renderingStrategyDirection || isAllDay) {
              isStartDateChanged = this.option("rtlEnabled") ? e.handles.right : e.handles.left;
            } else {
              isStartDateChanged = e.handles.top;
            }
            if (isStartDateChanged) {
              startTime = needCorrectDates ? this._correctStartDateByDelta(startDate, deltaTime) : startDate.getTime() - deltaTime;
              startTime += _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_20__["default"].getTimezoneOffsetChangeInMs(startDate, endDate, startTime, endDate);
              endTime = endDate.getTime();
            } else {
              startTime = startDate.getTime();
              endTime = needCorrectDates ? this._correctEndDateByDelta(endDate, deltaTime) : endDate.getTime() + deltaTime;
              endTime -= _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_20__["default"].getTimezoneOffsetChangeInMs(startDate, endDate, startDate, endTime);
            }
            return {
              startDate: new Date(startTime),
              endDate: new Date(endTime)
            };
          }
        }, {
          key: "_correctEndDateByDelta",
          value: function _correctEndDateByDelta(endDate, deltaTime) {
            var endDayHour = this.invoke("getEndDayHour");
            var startDayHour = this.invoke("getStartDayHour");
            var result = endDate.getTime() + deltaTime;
            var visibleDayDuration = (endDayHour - startDayHour) * toMs("hour");
            var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);
            var maxDate = new Date(endDate);
            var minDate = new Date(endDate);
            minDate.setHours(startDayHour, 0, 0, 0);
            maxDate.setHours(endDayHour, 0, 0, 0);
            if (result > maxDate.getTime() || result <= minDate.getTime()) {
              var tailOfCurrentDay = maxDate.getTime() - endDate.getTime();
              var tailOfPrevDays = deltaTime - tailOfCurrentDay;
              var correctedEndDate = new Date(endDate).setDate(endDate.getDate() + daysCount);
              var lastDay = new Date(correctedEndDate);
              lastDay.setHours(startDayHour, 0, 0, 0);
              result = lastDay.getTime() + tailOfPrevDays - visibleDayDuration * (daysCount - 1);
            }
            return result;
          }
        }, {
          key: "_correctStartDateByDelta",
          value: function _correctStartDateByDelta(startDate, deltaTime) {
            var endDayHour = this.invoke("getEndDayHour");
            var startDayHour = this.invoke("getStartDayHour");
            var result = startDate.getTime() - deltaTime;
            var visibleDayDuration = (endDayHour - startDayHour) * toMs("hour");
            var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);
            var maxDate = new Date(startDate);
            var minDate = new Date(startDate);
            minDate.setHours(startDayHour, 0, 0, 0);
            maxDate.setHours(endDayHour, 0, 0, 0);
            if (result < minDate.getTime() || result >= maxDate.getTime()) {
              var tailOfCurrentDay = startDate.getTime() - minDate.getTime();
              var tailOfPrevDays = deltaTime - tailOfCurrentDay;
              var firstDay = new Date(startDate.setDate(startDate.getDate() - daysCount));
              firstDay.setHours(endDayHour, 0, 0, 0);
              result = firstDay.getTime() - tailOfPrevDays + visibleDayDuration * (daysCount - 1);
            }
            return result;
          }
        }, {
          key: "_processVirtualAppointment",
          value: function _processVirtualAppointment(appointmentSetting, $appointment, appointmentData, color) {
            var virtualAppointment = appointmentSetting.virtual;
            var virtualGroupIndex = virtualAppointment.index;
            if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(this._virtualAppointments[virtualGroupIndex])) {
              this._virtualAppointments[virtualGroupIndex] = {
                coordinates: {
                  top: virtualAppointment.top,
                  left: virtualAppointment.left
                },
                items: {
                  data: [],
                  colors: [],
                  settings: []
                },
                isAllDay: !!virtualAppointment.isAllDay,
                buttonColor: color
              };
            }
            appointmentSetting.targetedAppointmentData = this.invoke("getTargetedAppointmentData", appointmentData, $appointment);
            this._virtualAppointments[virtualGroupIndex].items.settings.push(appointmentSetting);
            this._virtualAppointments[virtualGroupIndex].items.data.push(appointmentData);
            this._virtualAppointments[virtualGroupIndex].items.colors.push(color);
            $appointment.remove();
          }
        }, {
          key: "_renderContentImpl",
          value: function _renderContentImpl() {
            _get(_getPrototypeOf(SchedulerAppointments.prototype), "_renderContentImpl", this).call(this);
            this._renderDropDownAppointments();
          }
        }, {
          key: "_renderDropDownAppointments",
          value: function _renderDropDownAppointments() {
            var _this34 = this;
            this._renderByFragments(function ($commonFragment, $allDayFragment) {
              (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)(_this34._virtualAppointments, function (groupIndex) {
                var virtualGroup = _this34._virtualAppointments[groupIndex];
                var virtualItems = virtualGroup.items;
                var virtualCoordinates = virtualGroup.coordinates;
                var $fragment = virtualGroup.isAllDay ? $allDayFragment : $commonFragment;
                var left = virtualCoordinates.left;
                var buttonWidth = _this34.invoke("getDropDownAppointmentWidth", virtualGroup.isAllDay);
                var buttonHeight = _this34.invoke("getDropDownAppointmentHeight");
                var rtlOffset = _this34.option("rtlEnabled") ? buttonWidth : 0;
                _this34.notifyObserver("renderCompactAppointments", {
                  $container: $fragment,
                  coordinates: {
                    top: virtualCoordinates.top,
                    left: left + rtlOffset
                  },
                  items: virtualItems,
                  buttonColor: virtualGroup.buttonColor,
                  width: buttonWidth - _this34.option("_collectorOffset"),
                  height: buttonHeight,
                  onAppointmentClick: _this34.option("onItemClick"),
                  allowDrag: _this34.option("allowDrag"),
                  cellWidth: _this34.invoke("getCellWidth"),
                  isCompact: _this34.invoke("isAdaptive") || _this34._isGroupCompact(virtualGroup)
                });
              });
            });
          }
        }, {
          key: "_isGroupCompact",
          value: function _isGroupCompact(virtualGroup) {
            return !virtualGroup.isAllDay && this.invoke("supportCompactDropDownAppointments");
          }
        }, {
          key: "_sortAppointmentsByStartDate",
          value: function _sortAppointmentsByStartDate(appointments) {
            return (0, _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_26__.sortAppointmentsByStartDate)(appointments, this.option("dataAccessors"));
          }
        }, {
          key: "_processRecurrenceAppointment",
          value: function _processRecurrenceAppointment(appointment, index, skipLongAppointments) {
            var recurrenceRule = _m_expression_utils__WEBPACK_IMPORTED_MODULE_24__.ExpressionUtils.getField(this.option("dataAccessors"), "recurrenceRule", appointment);
            var result = {
              parts: [],
              indexes: []
            };
            if (recurrenceRule) {
              var dates = appointment.settings || appointment;
              var startDate = new Date(_m_expression_utils__WEBPACK_IMPORTED_MODULE_24__.ExpressionUtils.getField(this.option("dataAccessors"), "startDate", dates));
              var startDateTimeZone = _m_expression_utils__WEBPACK_IMPORTED_MODULE_24__.ExpressionUtils.getField(this.option("dataAccessors"), "startDateTimeZone", appointment);
              var endDate = new Date(_m_expression_utils__WEBPACK_IMPORTED_MODULE_24__.ExpressionUtils.getField(this.option("dataAccessors"), "endDate", dates));
              var appointmentDuration = endDate.getTime() - startDate.getTime();
              var recurrenceException = _m_expression_utils__WEBPACK_IMPORTED_MODULE_24__.ExpressionUtils.getField(this.option("dataAccessors"), "recurrenceException", appointment);
              var startViewDate = this.invoke("getStartViewDate");
              var endViewDate = this.invoke("getEndViewDate");
              var timezoneCalculator = this.option("timeZoneCalculator");
              var recurrentDates = (0, _m_recurrence__WEBPACK_IMPORTED_MODULE_25__.getRecurrenceProcessor)().generateDates({
                rule: recurrenceRule,
                exception: recurrenceException,
                start: startDate,
                end: endDate,
                min: startViewDate,
                max: endViewDate,
                appointmentTimezoneOffset: timezoneCalculator.getOriginStartDateOffsetInMs(startDate, startDateTimeZone, false)
              });
              var recurrentDateCount = appointment.settings ? 1 : recurrentDates.length;
              for (var i = 0; i < recurrentDateCount; i++) {
                var appointmentPart = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)({}, appointment, true);
                if (recurrentDates[i]) {
                  var appointmentSettings = this._applyStartDateToObj(recurrentDates[i], {});
                  this._applyEndDateToObj(new Date(recurrentDates[i].getTime() + appointmentDuration), appointmentSettings);
                  appointmentPart.settings = appointmentSettings;
                } else {
                  appointmentPart.settings = dates;
                }
                result.parts.push(appointmentPart);
                if (!skipLongAppointments) {
                  this._processLongAppointment(appointmentPart, result);
                }
              }
              result.indexes.push(index);
            }
            return result;
          }
        }, {
          key: "_processLongAppointment",
          value: function _processLongAppointment(appointment, result) {
            var parts = this.splitAppointmentByDay(appointment);
            var partCount = parts.length;
            var endViewDate = this.invoke("getEndViewDate").getTime();
            var startViewDate = this.invoke("getStartViewDate").getTime();
            var timeZoneCalculator = this.option("timeZoneCalculator");
            result = result || {
              parts: []
            };
            if (partCount > 1) {
              (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(appointment, parts[0]);
              for (var i = 1; i < partCount; i++) {
                var startDate = _m_expression_utils__WEBPACK_IMPORTED_MODULE_24__.ExpressionUtils.getField(this.option("dataAccessors"), "startDate", parts[i].settings).getTime();
                startDate = timeZoneCalculator.createDate(startDate, {
                  path: "toGrid"
                });
                if (startDate < endViewDate && startDate > startViewDate) {
                  result.parts.push(parts[i]);
                }
              }
            }
            return result;
          }
        }, {
          key: "_reduceRecurrenceAppointments",
          value: function _reduceRecurrenceAppointments(recurrenceIndexes, appointments) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)(recurrenceIndexes, function (i, index) {
              appointments.splice(index - i, 1);
            });
          }
        }, {
          key: "_combineAppointments",
          value: function _combineAppointments(appointments, additionalAppointments) {
            if (additionalAppointments.length) {
              appointments.push.apply(appointments, _toConsumableArray(additionalAppointments));
            }
            this._sortAppointmentsByStartDate(appointments);
          }
        }, {
          key: "_applyStartDateToObj",
          value: function _applyStartDateToObj(startDate, obj) {
            _m_expression_utils__WEBPACK_IMPORTED_MODULE_24__.ExpressionUtils.setField(this.option("dataAccessors"), "startDate", obj, startDate);
            return obj;
          }
        }, {
          key: "_applyEndDateToObj",
          value: function _applyEndDateToObj(endDate, obj) {
            _m_expression_utils__WEBPACK_IMPORTED_MODULE_24__.ExpressionUtils.setField(this.option("dataAccessors"), "endDate", obj, endDate);
            return obj;
          }
        }, {
          key: "moveAppointmentBack",
          value: function moveAppointmentBack(dragEvent) {
            var $appointment = this._$currentAppointment;
            var size = this._initialSize;
            var coords = this._initialCoordinates;
            if (dragEvent) {
              this._removeDragSourceClassFromDraggedAppointment();
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDeferred)(dragEvent.cancel)) {
                dragEvent.cancel.resolve(true);
              } else {
                dragEvent.cancel = true;
              }
            }
            if ($appointment && !dragEvent) {
              if (coords) {
                (0, _animation_translator__WEBPACK_IMPORTED_MODULE_1__.move)($appointment, coords);
                delete this._initialSize;
              }
              if (size) {
                (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_14__.setOuterWidth)($appointment, size.width);
                (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_14__.setOuterHeight)($appointment, size.height);
                delete this._initialCoordinates;
              }
            }
          }
        }, {
          key: "focus",
          value: function focus() {
            if (this._$currentAppointment) {
              var focusedElement = (0, _core_element__WEBPACK_IMPORTED_MODULE_4__.getPublicElement)(this._$currentAppointment);
              this.option("focusedElement", focusedElement);
              _events_core_events_engine__WEBPACK_IMPORTED_MODULE_16__["default"].trigger(focusedElement, "focus");
            }
          }
        }, {
          key: "splitAppointmentByDay",
          value: function splitAppointmentByDay(appointment) {
            var dates = appointment.settings || appointment;
            var dataAccessors = this.option("dataAccessors");
            var originalStartDate = new Date(_m_expression_utils__WEBPACK_IMPORTED_MODULE_24__.ExpressionUtils.getField(dataAccessors, "startDate", dates));
            var startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_9__["default"].makeDate(originalStartDate);
            var endDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_9__["default"].makeDate(_m_expression_utils__WEBPACK_IMPORTED_MODULE_24__.ExpressionUtils.getField(dataAccessors, "endDate", dates));
            var maxAllowedDate = this.invoke("getEndViewDate");
            var startDayHour = this.invoke("getStartDayHour");
            var endDayHour = this.invoke("getEndDayHour");
            var timeZoneCalculator = this.option("timeZoneCalculator");
            var adapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_21__.createAppointmentAdapter)(appointment, dataAccessors, timeZoneCalculator);
            var appointmentIsLong = (0, _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_26__.getAppointmentTakesSeveralDays)(adapter);
            var result = [];
            startDate = timeZoneCalculator.createDate(startDate, {
              path: "toGrid"
            });
            endDate = timeZoneCalculator.createDate(endDate, {
              path: "toGrid"
            });
            if (startDate.getHours() <= endDayHour && startDate.getHours() >= startDayHour && !appointmentIsLong) {
              result.push(this._applyStartDateToObj(new Date(startDate), {
                appointmentData: appointment
              }));
              startDate.setDate(startDate.getDate() + 1);
            }
            while (appointmentIsLong && startDate.getTime() < endDate.getTime() && startDate < maxAllowedDate) {
              var currentStartDate = new Date(startDate);
              var currentEndDate = new Date(startDate);
              this._checkStartDate(currentStartDate, originalStartDate, startDayHour);
              this._checkEndDate(currentEndDate, endDate, endDayHour);
              var appointmentData = (0, _core_utils_object__WEBPACK_IMPORTED_MODULE_12__.deepExtendArraySafe)({}, appointment, true);
              var appointmentSettings = {};
              this._applyStartDateToObj(currentStartDate, appointmentSettings);
              this._applyEndDateToObj(currentEndDate, appointmentSettings);
              appointmentData.settings = appointmentSettings;
              result.push(appointmentData);
              startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_9__["default"].trimTime(startDate);
              startDate.setDate(startDate.getDate() + 1);
              startDate.setHours(startDayHour);
            }
            return result;
          }
        }, {
          key: "_checkStartDate",
          value: function _checkStartDate(currentDate, originalDate, startDayHour) {
            if (!_core_utils_date__WEBPACK_IMPORTED_MODULE_9__["default"].sameDate(currentDate, originalDate) || currentDate.getHours() <= startDayHour) {
              currentDate.setHours(startDayHour, 0, 0, 0);
            } else {
              currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds());
            }
          }
        }, {
          key: "_checkEndDate",
          value: function _checkEndDate(currentDate, originalDate, endDayHour) {
            if (!_core_utils_date__WEBPACK_IMPORTED_MODULE_9__["default"].sameDate(currentDate, originalDate) || currentDate.getHours() > endDayHour) {
              currentDate.setHours(endDayHour, 0, 0, 0);
            } else {
              currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds());
            }
          }
        }, {
          key: "_removeDragSourceClassFromDraggedAppointment",
          value: function _removeDragSourceClassFromDraggedAppointment() {
            var $appointments = this._itemElements().filter(".".concat(_m_classes__WEBPACK_IMPORTED_MODULE_22__.APPOINTMENT_DRAG_SOURCE_CLASS));
            $appointments.each(function (_, element) {
              var appointmentInstance = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(element).dxSchedulerAppointment("instance");
              appointmentInstance.option("isDragSource", false);
            });
          }
        }, {
          key: "_setDragSourceAppointment",
          value: function _setDragSourceAppointment(appointment, settings) {
            var $appointments = this._findItemElementByItem(appointment);
            var _settings$info$source = settings.info.sourceAppointment,
              startDate = _settings$info$source.startDate,
              endDate = _settings$info$source.endDate;
            var groupIndex = settings.groupIndex;
            $appointments.forEach(function ($item) {
              var _$item$data = $item.data(_m_constants__WEBPACK_IMPORTED_MODULE_23__.APPOINTMENT_SETTINGS_KEY),
                itemInfo = _$item$data.info,
                itemGroupIndex = _$item$data.groupIndex;
              var _itemInfo$sourceAppoi = itemInfo.sourceAppointment,
                itemStartDate = _itemInfo$sourceAppoi.startDate,
                itemEndDate = _itemInfo$sourceAppoi.endDate;
              var appointmentInstance = $item.dxSchedulerAppointment("instance");
              var isDragSource = startDate.getTime() === itemStartDate.getTime() && endDate.getTime() === itemEndDate.getTime() && groupIndex === itemGroupIndex;
              appointmentInstance.option("isDragSource", isDragSource);
            });
          }
        }, {
          key: "updateResizableArea",
          value: function updateResizableArea() {
            var _this35 = this;
            var $allResizableElements = this.$element().find(".dx-scheduler-appointment.dx-resizable");
            var horizontalResizables = (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_8__.grep)($allResizableElements, function (el) {
              var $el = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(el);
              var resizableInst = $el.dxResizable("instance");
              var _resizableInst$option = resizableInst.option(),
                area = _resizableInst$option.area,
                handles = _resizableInst$option.handles;
              return ("right left" === handles || "left right" === handles) && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isPlainObject)(area);
            });
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)(horizontalResizables, function (_, el) {
              var $el = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])(el);
              var position = (0, _animation_translator__WEBPACK_IMPORTED_MODULE_1__.locate)($el);
              var appointmentData = _this35._getItemData($el);
              var area = _this35._calculateResizableArea({
                left: position.left
              }, appointmentData);
              $el.dxResizable("instance").option("area", area);
            });
          }
        }]);
        return SchedulerAppointments;
      }(_ui_collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_19__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_2__["default"])("dxSchedulerAppointments", SchedulerAppointments);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerAppointments;

      /***/
    }),
    /***/61865: (
    /*!***********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_appointment_layout.js ***!
      \***********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"createAppointmentLayout": function createAppointmentLayout() {
          return /* binding */_createAppointmentLayout;
        },
        /* harmony export */"createAgendaAppointmentLayout": function createAgendaAppointmentLayout() {
          return /* binding */_createAgendaAppointmentLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/dom_adapter */81113);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../localization/message */19336);
      /* harmony import */
      var _m_classes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../m_classes */16874);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/m_appointment_layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var allDayText = " ".concat(_localization_message__WEBPACK_IMPORTED_MODULE_2__["default"].format("dxScheduler-allDay"), ": ");
      var _createAppointmentLayout = function _createAppointmentLayout(formatText, config) {
        var result = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_0__["default"].createDocumentFragment());
        (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").text(formatText.text).addClass(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_TITLE).appendTo(result);
        if (config.html) {
          result.html(config.html);
        }
        var $contentDetails = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_CONTENT_DETAILS).appendTo(result);
        (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_DATE).text(formatText.formatDate).appendTo($contentDetails);
        config.isRecurrence && (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<span>").addClass("".concat(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.RECURRING_ICON, " dx-icon-repeat")).appendTo(result);
        config.isAllDay && (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").text(allDayText).addClass(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.ALL_DAY_CONTENT).prependTo($contentDetails);
        return result;
      };
      var _createAgendaAppointmentLayout = function _createAgendaAppointmentLayout(formatText, config) {
        var result = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_0__["default"].createDocumentFragment());
        var leftLayoutContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass("dx-scheduler-agenda-appointment-left-layout").appendTo(result);
        var rightLayoutContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass("dx-scheduler-agenda-appointment-right-layout").appendTo(result);
        var marker = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.AGENDA_MARKER).appendTo(leftLayoutContainer);
        config.isRecurrence && (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<span>").addClass("".concat(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.RECURRING_ICON, " dx-icon-repeat")).appendTo(marker);
        (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_TITLE).text(formatText.text).appendTo(rightLayoutContainer);
        var additionalContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_CONTENT_DETAILS).appendTo(rightLayoutContainer);
        (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.APPOINTMENT_DATE).text(formatText.formatDate).appendTo(additionalContainer);
        if (config.isAllDay) {
          (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").text(allDayText).addClass(_m_classes__WEBPACK_IMPORTED_MODULE_3__.APPOINTMENT_CONTENT_CLASSES.ALL_DAY_CONTENT).prependTo(additionalContainer);
        }
        return result;
      };

      /***/
    }),
    /***/34290: (
    /*!*****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_cell_position_calculator.js ***!
      \*****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"CellPositionCalculator": function CellPositionCalculator() {
          return /* binding */_CellPositionCalculator;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/m_cell_position_calculator.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var BaseStrategy = /*#__PURE__*/function () {
        function BaseStrategy(options) {
          _classCallCheck(this, BaseStrategy);
          this.isVirtualScrolling = false;
          this.options = options;
        }
        _createClass(BaseStrategy, [{
          key: "DOMMetaData",
          get: function get() {
            return this.options.DOMMetaData;
          }
        }, {
          key: "appointments",
          get: function get() {
            return this.options.dateSettings;
          }
        }, {
          key: "viewDataProvider",
          get: function get() {
            return this.options.viewDataProvider;
          }
        }, {
          key: "positionHelper",
          get: function get() {
            return this.options.positionHelper;
          }
        }, {
          key: "startViewDate",
          get: function get() {
            return this.options.startViewDate;
          }
        }, {
          key: "viewStartDayHour",
          get: function get() {
            return this.options.viewStartDayHour;
          }
        }, {
          key: "viewEndDayHour",
          get: function get() {
            return this.options.viewEndDayHour;
          }
        }, {
          key: "cellDuration",
          get: function get() {
            return this.options.cellDuration;
          }
        }, {
          key: "getPositionShift",
          get: function get() {
            return this.options.getPositionShiftCallback;
          }
        }, {
          key: "groupCount",
          get: function get() {
            return this.options.groupCount;
          }
        }, {
          key: "rtlEnabled",
          get: function get() {
            return this.options.rtlEnabled;
          }
        }, {
          key: "isVerticalGrouping",
          get: function get() {
            return this.options.isVerticalGroupOrientation;
          }
        }, {
          key: "showAllDayPanel",
          get: function get() {
            return this.options.showAllDayPanel;
          }
        }, {
          key: "supportAllDayRow",
          get: function get() {
            return this.options.supportAllDayRow;
          }
        }, {
          key: "isGroupedAllDayPanel",
          get: function get() {
            return this.options.isGroupedAllDayPanel;
          }
        }, {
          key: "calculateCellPositions",
          value: function calculateCellPositions(groupIndices, isAllDayRowAppointment, isRecurrentAppointment) {
            var _this36 = this;
            var result = [];
            this.appointments.forEach(function (dateSetting, index) {
              var coordinates = _this36.getCoordinateInfos({
                appointment: dateSetting,
                groupIndices: groupIndices,
                isAllDayRowAppointment: isAllDayRowAppointment,
                isRecurrentAppointment: isRecurrentAppointment
              });
              coordinates.forEach(function (item) {
                !!item && result.push(_this36._prepareObject(item, index));
              });
            });
            return result;
          }
        }, {
          key: "getCoordinateInfos",
          value: function getCoordinateInfos(options) {
            var appointment = options.appointment,
              isAllDayRowAppointment = options.isAllDayRowAppointment,
              groupIndices = options.groupIndices,
              recurrent = options.recurrent;
            var startDate = appointment.startDate;
            var groupIndex = !recurrent ? appointment.source.groupIndex : void 0;
            return this.getCoordinatesByDateInGroup(startDate, groupIndices, isAllDayRowAppointment, groupIndex);
          }
        }, {
          key: "_prepareObject",
          value: function _prepareObject(position, dateSettingIndex) {
            position.dateSettingIndex = dateSettingIndex;
            return {
              coordinates: position,
              dateSettingIndex: dateSettingIndex
            };
          }
        }, {
          key: "getCoordinatesByDate",
          value: function getCoordinatesByDate(date, groupIndex, inAllDayRow) {
            var validGroupIndex = groupIndex || 0;
            var cellInfo = {
              groupIndex: validGroupIndex,
              startDate: date,
              isAllDay: inAllDayRow
            };
            var positionByMap = this.viewDataProvider.findCellPositionInMap(cellInfo);
            if (!positionByMap) {
              return;
            }
            var position = this.getCellPosition(positionByMap, inAllDayRow && !this.isVerticalGrouping);
            var timeShift = inAllDayRow ? 0 : this.getTimeShift(date);
            var shift = this.getPositionShift(timeShift, inAllDayRow);
            var horizontalHMax = this.positionHelper.getHorizontalMax(validGroupIndex, date);
            var verticalMax = this.positionHelper.getVerticalMax({
              groupIndex: validGroupIndex,
              isVirtualScrolling: this.isVirtualScrolling,
              showAllDayPanel: this.showAllDayPanel,
              supportAllDayRow: this.supportAllDayRow,
              isGroupedAllDayPanel: this.isGroupedAllDayPanel,
              isVerticalGrouping: this.isVerticalGrouping
            });
            return {
              positionByMap: positionByMap,
              cellPosition: position.left + shift.cellPosition,
              top: position.top + shift.top,
              left: position.left + shift.left,
              rowIndex: position.rowIndex,
              columnIndex: position.columnIndex,
              hMax: horizontalHMax,
              vMax: verticalMax,
              groupIndex: validGroupIndex
            };
          }
        }, {
          key: "getCoordinatesByDateInGroup",
          value: function getCoordinatesByDateInGroup(startDate, groupIndices, inAllDayRow, groupIndex) {
            var _this37 = this;
            var result = [];
            if (this.viewDataProvider.isSkippedDate(startDate)) {
              return result;
            }
            var validGroupIndices = [groupIndex];
            if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(groupIndex)) {
              validGroupIndices = this.groupCount ? groupIndices : [0];
            }
            validGroupIndices.forEach(function (groupIndex) {
              var coordinates = _this37.getCoordinatesByDate(startDate, groupIndex, inAllDayRow);
              if (coordinates) {
                result.push(coordinates);
              }
            });
            return result;
          }
        }, {
          key: "getCellPosition",
          value: function getCellPosition(cellCoordinates, isAllDayPanel) {
            var _this$DOMMetaData = this.DOMMetaData,
              dateTableCellsMeta = _this$DOMMetaData.dateTableCellsMeta,
              allDayPanelCellsMeta = _this$DOMMetaData.allDayPanelCellsMeta;
            var columnIndex = cellCoordinates.columnIndex,
              rowIndex = cellCoordinates.rowIndex;
            var position = isAllDayPanel ? allDayPanelCellsMeta[columnIndex] : dateTableCellsMeta[rowIndex][columnIndex];
            var validPosition = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, position);
            if (this.rtlEnabled) {
              validPosition.left += position.width;
            }
            if (validPosition) {
              validPosition.rowIndex = cellCoordinates.rowIndex;
              validPosition.columnIndex = cellCoordinates.columnIndex;
            }
            return validPosition;
          }
        }, {
          key: "getTimeShift",
          value: function getTimeShift(date) {
            var currentDayStart = new Date(date);
            var currentDayEndHour = new Date(new Date(date).setHours(this.viewEndDayHour, 0, 0));
            if (date.getTime() <= currentDayEndHour.getTime()) {
              currentDayStart.setHours(this.viewStartDayHour, 0, 0, 0);
            }
            var timeZoneDifference = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].getTimezonesDifference(date, currentDayStart);
            var currentDateTime = date.getTime();
            var currentDayStartTime = currentDayStart.getTime();
            var minTime = this.startViewDate.getTime();
            return currentDateTime > minTime ? (currentDateTime - currentDayStartTime + timeZoneDifference) % this.cellDuration / this.cellDuration : 0;
          }
        }]);
        return BaseStrategy;
      }();
      var VirtualStrategy = /*#__PURE__*/function (_BaseStrategy) {
        _inherits(VirtualStrategy, _BaseStrategy);
        function VirtualStrategy() {
          var _this38;
          _classCallCheck(this, VirtualStrategy);
          _this38 = _callSuper(this, VirtualStrategy, arguments);
          _this38.isVirtualScrolling = true;
          return _this38;
        }
        _createClass(VirtualStrategy, [{
          key: "calculateCellPositions",
          value: function calculateCellPositions(groupIndices, isAllDayRowAppointment, isRecurrentAppointment) {
            var _this39 = this;
            var appointments = isAllDayRowAppointment ? this.appointments : this.appointments.filter(function (_ref) {
              var source = _ref.source,
                startDate = _ref.startDate,
                endDate = _ref.endDate;
              return _this39.viewDataProvider.isGroupIntersectDateInterval(source.groupIndex, startDate, endDate);
            });
            if (isRecurrentAppointment) {
              return this.createRecurrentAppointmentInfos(appointments, isAllDayRowAppointment);
            }
            return _get(_getPrototypeOf(VirtualStrategy.prototype), "calculateCellPositions", this).call(this, groupIndices, isAllDayRowAppointment, isRecurrentAppointment);
          }
        }, {
          key: "createRecurrentAppointmentInfos",
          value: function createRecurrentAppointmentInfos(dateSettings, isAllDayRowAppointment) {
            var _this40 = this;
            var result = [];
            dateSettings.forEach(function (_ref2, index) {
              var source = _ref2.source,
                startDate = _ref2.startDate;
              var coordinate = _this40.getCoordinatesByDate(startDate, source.groupIndex, isAllDayRowAppointment);
              if (coordinate) {
                result.push(_this40._prepareObject(coordinate, index));
              }
            });
            return result;
          }
        }]);
        return VirtualStrategy;
      }(BaseStrategy);
      var _CellPositionCalculator = /*#__PURE__*/function () {
        function _CellPositionCalculator(options) {
          _classCallCheck(this, _CellPositionCalculator);
          this.options = options;
        }
        _createClass(_CellPositionCalculator, [{
          key: "calculateCellPositions",
          value: function calculateCellPositions(groupIndices, isAllDayRowAppointment, isRecurrentAppointment) {
            var strategy = this.options.isVirtualScrolling ? new VirtualStrategy(this.options) : new BaseStrategy(this.options);
            return strategy.calculateCellPositions(groupIndices, isAllDayRowAppointment, isRecurrentAppointment);
          }
        }]);
        return _CellPositionCalculator;
      }();
      /***/
    }),
    /***/95126: (
    /*!***********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_render.js ***!
      \***********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"renderAppointments": function renderAppointments() {
          return /* binding */_renderAppointments;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _renovation_ui_scheduler_appointment_layout_j__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/appointment/layout.j */13812);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../m_utils */8392);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/m_render.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _renderAppointments = function _renderAppointments(options) {
        var instance = options.instance,
          $dateTable = options.$dateTable,
          viewModel = options.viewModel;
        var container = getAppointmentsContainer($dateTable);
        _m_utils__WEBPACK_IMPORTED_MODULE_2__.utils.renovation.renderComponent(instance, container, _renovation_ui_scheduler_appointment_layout_j__WEBPACK_IMPORTED_MODULE_1__["default"], "renovatedAppointments", viewModel);
      };
      var getAppointmentsContainer = function getAppointmentsContainer($dateTable) {
        var container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(".dx-appointments-container");
        if (0 === container.length) {
          container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass("dx-appointments-container").appendTo($dateTable);
        }
        return container;
      };

      /***/
    }),
    /***/66767: (
    /*!***********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_settings_generator.js ***!
      \***********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"DateGeneratorBaseStrategy": function DateGeneratorBaseStrategy() {
          return /* binding */_DateGeneratorBaseStrategy;
        },
        /* harmony export */"DateGeneratorVirtualStrategy": function DateGeneratorVirtualStrategy() {
          return /* binding */_DateGeneratorVirtualStrategy;
        },
        /* harmony export */"AppointmentSettingsGenerator": function AppointmentSettingsGenerator() {
          return /* binding */_AppointmentSettingsGenerator;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../ui/scheduler/utils.timeZone */53374);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../m_appointment_adapter */91634);
      /* harmony import */
      var _m_expression_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../m_expression_utils */31363);
      /* harmony import */
      var _m_recurrence__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../m_recurrence */33746);
      /* harmony import */
      var _resources_m_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../resources/m_utils */48025);
      /* harmony import */
      var _m_cell_position_calculator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ./m_cell_position_calculator */34290);
      /* harmony import */
      var _m_text_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ./m_text_utils */3092);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/m_settings_generator.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds;
      var APPOINTMENT_DATE_TEXT_FORMAT = "TIME";
      var _DateGeneratorBaseStrategy = /*#__PURE__*/function () {
        function _DateGeneratorBaseStrategy(options) {
          _classCallCheck(this, _DateGeneratorBaseStrategy);
          this.options = options;
        }
        _createClass(_DateGeneratorBaseStrategy, [{
          key: "rawAppointment",
          get: function get() {
            return this.options.rawAppointment;
          }
        }, {
          key: "timeZoneCalculator",
          get: function get() {
            return this.options.timeZoneCalculator;
          }
        }, {
          key: "viewDataProvider",
          get: function get() {
            return this.options.viewDataProvider;
          }
        }, {
          key: "appointmentTakesAllDay",
          get: function get() {
            return this.options.appointmentTakesAllDay;
          }
        }, {
          key: "supportAllDayRow",
          get: function get() {
            return this.options.supportAllDayRow;
          }
        }, {
          key: "isAllDayRowAppointment",
          get: function get() {
            return this.options.isAllDayRowAppointment;
          }
        }, {
          key: "timeZone",
          get: function get() {
            return this.options.timeZone;
          }
        }, {
          key: "dateRange",
          get: function get() {
            return this.options.dateRange;
          }
        }, {
          key: "firstDayOfWeek",
          get: function get() {
            return this.options.firstDayOfWeek;
          }
        }, {
          key: "viewStartDayHour",
          get: function get() {
            return this.options.viewStartDayHour;
          }
        }, {
          key: "viewEndDayHour",
          get: function get() {
            return this.options.viewEndDayHour;
          }
        }, {
          key: "endViewDate",
          get: function get() {
            return this.options.endViewDate;
          }
        }, {
          key: "viewType",
          get: function get() {
            return this.options.viewType;
          }
        }, {
          key: "isGroupedByDate",
          get: function get() {
            return this.options.isGroupedByDate;
          }
        }, {
          key: "isVerticalOrientation",
          get: function get() {
            return this.options.isVerticalGroupOrientation;
          }
        }, {
          key: "dataAccessors",
          get: function get() {
            return this.options.dataAccessors;
          }
        }, {
          key: "loadedResources",
          get: function get() {
            return this.options.loadedResources;
          }
        }, {
          key: "isDateAppointment",
          get: function get() {
            return !(0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.isDateAndTimeView)(this.viewType) && this.appointmentTakesAllDay;
          }
        }, {
          key: "getIntervalDuration",
          value: function getIntervalDuration() {
            return this.appointmentTakesAllDay ? this.options.allDayIntervalDuration : this.options.intervalDuration;
          }
        }, {
          key: "generate",
          value: function generate(appointmentAdapter) {
            var itemGroupIndices = this._getGroupIndices(this.rawAppointment);
            var appointmentList = this._createAppointments(appointmentAdapter, itemGroupIndices);
            appointmentList = this._getProcessedByAppointmentTimeZone(appointmentList, appointmentAdapter);
            if (this._canProcessNotNativeTimezoneDates(appointmentAdapter)) {
              appointmentList = this._getProcessedNotNativeTimezoneDates(appointmentList, appointmentAdapter);
            }
            var dateSettings = this._createGridAppointmentList(appointmentList, appointmentAdapter);
            var firstViewDates = this._getAppointmentsFirstViewDate(dateSettings);
            this._fillNormalizedStartDate(dateSettings, firstViewDates);
            dateSettings = this._cropAppointmentsByStartDayHour(dateSettings, firstViewDates);
            dateSettings = this._fillNormalizedEndDate(dateSettings, this.rawAppointment);
            if (this._needSeparateLongParts()) {
              dateSettings = this._separateLongParts(dateSettings, appointmentAdapter);
            }
            var isRecurrent = appointmentAdapter.isRecurrent;
            return {
              dateSettings: dateSettings,
              itemGroupIndices: itemGroupIndices,
              isRecurrent: isRecurrent
            };
          }
        }, {
          key: "_getProcessedByAppointmentTimeZone",
          value: function _getProcessedByAppointmentTimeZone(appointmentList, appointment) {
            var _this41 = this;
            var hasAppointmentTimeZone = !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(appointment.startDateTimeZone) || !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(appointment.endDateTimeZone);
            if (hasAppointmentTimeZone) {
              var appointmentOffsets = {
                startDate: this.timeZoneCalculator.getOffsets(appointment.startDate, appointment.startDateTimeZone),
                endDate: this.timeZoneCalculator.getOffsets(appointment.endDate, appointment.endDateTimeZone)
              };
              appointmentList.forEach(function (a) {
                var sourceOffsets_startDate = _this41.timeZoneCalculator.getOffsets(a.startDate, appointment.startDateTimeZone),
                  sourceOffsets_endDate = _this41.timeZoneCalculator.getOffsets(a.endDate, appointment.endDateTimeZone);
                var startDateOffsetDiff = appointmentOffsets.startDate.appointment - sourceOffsets_startDate.appointment;
                var endDateOffsetDiff = appointmentOffsets.endDate.appointment - sourceOffsets_endDate.appointment;
                if (sourceOffsets_startDate.appointment !== sourceOffsets_startDate.common) {
                  a.startDate = new Date(a.startDate.getTime() + startDateOffsetDiff * toMs("hour"));
                }
                if (sourceOffsets_endDate.appointment !== sourceOffsets_endDate.common) {
                  a.endDate = new Date(a.endDate.getTime() + endDateOffsetDiff * toMs("hour"));
                }
              });
            }
            return appointmentList;
          }
        }, {
          key: "_createAppointments",
          value: function _createAppointments(appointment, groupIndices) {
            var appointments = this._createRecurrenceAppointments(appointment, groupIndices);
            if (!appointment.isRecurrent && 0 === appointments.length) {
              appointments.push({
                startDate: appointment.startDate,
                endDate: appointment.endDate
              });
            }
            appointments = appointments.map(function (item) {
              var _a;
              var resultEndTime = null === (_a = item.endDate) || void 0 === _a ? void 0 : _a.getTime();
              if (item.startDate.getTime() === resultEndTime) {
                item.endDate.setTime(resultEndTime + toMs("minute"));
              }
              return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, item), {
                exceptionDate: new Date(item.startDate)
              });
            });
            return appointments;
          }
        }, {
          key: "_canProcessNotNativeTimezoneDates",
          value: function _canProcessNotNativeTimezoneDates(appointment) {
            var isTimeZoneSet = !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(this.timeZone);
            if (!isTimeZoneSet) {
              return false;
            }
            if (!appointment.isRecurrent) {
              return false;
            }
            return !_ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_5__["default"].isEqualLocalTimeZone(this.timeZone, appointment.startDate);
          }
        }, {
          key: "_getProcessedNotNativeDateIfCrossDST",
          value: function _getProcessedNotNativeDateIfCrossDST(date, offset) {
            if (offset < 0) {
              var newDate = new Date(date);
              var newDateMinusOneHour = new Date(newDate);
              newDateMinusOneHour.setHours(newDateMinusOneHour.getHours() - 1);
              var newDateOffset = this.timeZoneCalculator.getOffsets(newDate).common;
              var newDateMinusOneHourOffset = this.timeZoneCalculator.getOffsets(newDateMinusOneHour).common;
              if (newDateOffset !== newDateMinusOneHourOffset) {
                return 0;
              }
            }
            return offset;
          }
        }, {
          key: "_getCommonOffset",
          value: function _getCommonOffset(date) {
            return this.timeZoneCalculator.getOffsets(date).common;
          }
        }, {
          key: "_getProcessedNotNativeTimezoneDates",
          value: function _getProcessedNotNativeTimezoneDates(appointmentList, appointment) {
            var _this42 = this;
            return appointmentList.map(function (item) {
              var diffStartDateOffset = _this42._getCommonOffset(appointment.startDate) - _this42._getCommonOffset(item.startDate);
              var diffEndDateOffset = _this42._getCommonOffset(appointment.endDate) - _this42._getCommonOffset(item.endDate);
              if (0 === diffStartDateOffset && 0 === diffEndDateOffset) {
                return item;
              }
              diffStartDateOffset = _this42._getProcessedNotNativeDateIfCrossDST(item.startDate, diffStartDateOffset);
              diffEndDateOffset = _this42._getProcessedNotNativeDateIfCrossDST(item.endDate, diffEndDateOffset);
              var newStartDate = new Date(item.startDate.getTime() + diffStartDateOffset * toMs("hour"));
              var newEndDate = new Date(item.endDate.getTime() + diffEndDateOffset * toMs("hour"));
              var testNewStartDate = _this42.timeZoneCalculator.createDate(newStartDate, {
                path: "toGrid"
              });
              var testNewEndDate = _this42.timeZoneCalculator.createDate(newEndDate, {
                path: "toGrid"
              });
              if (appointment.duration > testNewEndDate.getTime() - testNewStartDate.getTime()) {
                newEndDate = new Date(newStartDate.getTime() + appointment.duration);
              }
              return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, item), {
                startDate: newStartDate,
                endDate: newEndDate,
                exceptionDate: new Date(newStartDate)
              });
            });
          }
        }, {
          key: "_needSeparateLongParts",
          value: function _needSeparateLongParts() {
            return this.isVerticalOrientation ? this.isGroupedByDate : this.isGroupedByDate && this.appointmentTakesAllDay;
          }
        }, {
          key: "normalizeEndDateByViewEnd",
          value: function normalizeEndDateByViewEnd(rawAppointment, endDate) {
            var result = new Date(endDate.getTime());
            var isAllDay = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_4__.isDateAndTimeView)(this.viewType) && this.appointmentTakesAllDay;
            if (!isAllDay) {
              var roundedEndViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].roundToHour(this.endViewDate);
              if (result > roundedEndViewDate) {
                result = roundedEndViewDate;
              }
            }
            var endDayHour = this.viewEndDayHour;
            var allDay = _m_expression_utils__WEBPACK_IMPORTED_MODULE_7__.ExpressionUtils.getField(this.dataAccessors, "allDay", rawAppointment);
            var currentViewEndTime = new Date(new Date(endDate.getTime()).setHours(endDayHour, 0, 0, 0));
            if (result.getTime() > currentViewEndTime.getTime() || allDay && result.getHours() < endDayHour) {
              result = currentViewEndTime;
            }
            return result;
          }
        }, {
          key: "_fillNormalizedEndDate",
          value: function _fillNormalizedEndDate(dateSettings, rawAppointment) {
            var _this43 = this;
            return dateSettings.map(function (item) {
              var endDate = item.endDate;
              var normalizedEndDate = _this43.normalizeEndDateByViewEnd(rawAppointment, endDate);
              return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, item), {
                normalizedEndDate: normalizedEndDate
              });
            });
          }
        }, {
          key: "_separateLongParts",
          value: function _separateLongParts(gridAppointmentList, appointmentAdapter) {
            var _this44 = this;
            var result = [];
            gridAppointmentList.forEach(function (gridAppointment) {
              var maxDate = new Date(_this44.dateRange[1]);
              var endDateOfPart = gridAppointment.normalizedEndDate;
              var longStartDateParts = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].getDatesOfInterval(gridAppointment.startDate, endDateOfPart, {
                milliseconds: _this44.getIntervalDuration()
              });
              var list = longStartDateParts.filter(function (startDatePart) {
                return new Date(startDatePart) < maxDate;
              }).map(function (date) {
                var endDate = new Date(new Date(date).setMilliseconds(appointmentAdapter.duration));
                var normalizedEndDate = _this44.normalizeEndDateByViewEnd(_this44.rawAppointment, endDate);
                return {
                  startDate: date,
                  endDate: endDate,
                  normalizedEndDate: normalizedEndDate,
                  source: gridAppointment.source
                };
              });
              result = result.concat(list);
            });
            return result;
          }
        }, {
          key: "_createGridAppointmentList",
          value: function _createGridAppointmentList(appointmentList, appointmentAdapter) {
            var _this45 = this;
            return appointmentList.map(function (source) {
              var offsetDifference = appointmentAdapter.startDate.getTimezoneOffset() - source.startDate.getTimezoneOffset();
              if (0 !== offsetDifference && _this45._canProcessNotNativeTimezoneDates(appointmentAdapter)) {
                source.startDate = new Date(source.startDate.getTime() + offsetDifference * toMs("minute"));
                source.endDate = new Date(source.endDate.getTime() + offsetDifference * toMs("minute"));
                source.exceptionDate = new Date(source.startDate);
              }
              var startDate = _this45.timeZoneCalculator.createDate(source.startDate, {
                path: "toGrid"
              });
              var endDate = _this45.timeZoneCalculator.createDate(source.endDate, {
                path: "toGrid"
              });
              return {
                startDate: startDate,
                endDate: endDate,
                allDay: appointmentAdapter.allDay || false,
                source: source
              };
            });
          }
        }, {
          key: "_createExtremeRecurrenceDates",
          value: function _createExtremeRecurrenceDates(groupIndex) {
            var startViewDate = this.appointmentTakesAllDay ? _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime(this.dateRange[0]) : this.dateRange[0];
            var endViewDateByEndDayHour = this.dateRange[1];
            if (this.timeZone) {
              startViewDate = this.timeZoneCalculator.createDate(startViewDate, {
                path: "fromGrid"
              });
              endViewDateByEndDayHour = this.timeZoneCalculator.createDate(endViewDateByEndDayHour, {
                path: "fromGrid"
              });
              var daylightOffset = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_5__["default"].getDaylightOffsetInMs(startViewDate, endViewDateByEndDayHour);
              if (daylightOffset) {
                endViewDateByEndDayHour = new Date(endViewDateByEndDayHour.getTime() + daylightOffset);
              }
            }
            return [startViewDate, endViewDateByEndDayHour];
          }
        }, {
          key: "_createRecurrenceOptions",
          value: function _createRecurrenceOptions(appointment, groupIndex) {
            var _this46 = this;
            var _this$_createExtremeR = this._createExtremeRecurrenceDates(groupIndex),
              _this$_createExtremeR2 = _slicedToArray(_this$_createExtremeR, 2),
              minRecurrenceDate = _this$_createExtremeR2[0],
              maxRecurrenceDate = _this$_createExtremeR2[1];
            return {
              rule: appointment.recurrenceRule,
              exception: appointment.recurrenceException,
              min: minRecurrenceDate,
              max: maxRecurrenceDate,
              firstDayOfWeek: this.firstDayOfWeek,
              start: appointment.startDate,
              end: appointment.endDate,
              appointmentTimezoneOffset: this.timeZoneCalculator.getOriginStartDateOffsetInMs(appointment.startDate, appointment.rawAppointment.startDateTimeZone, true),
              getPostProcessedException: function getPostProcessedException(date) {
                if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(_this46.timeZone) || _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_5__["default"].isEqualLocalTimeZone(_this46.timeZone, date)) {
                  return date;
                }
                var appointmentOffset = _this46.timeZoneCalculator.getOffsets(appointment.startDate).common;
                var exceptionAppointmentOffset = _this46.timeZoneCalculator.getOffsets(date).common;
                var diff = appointmentOffset - exceptionAppointmentOffset;
                diff = _this46._getProcessedNotNativeDateIfCrossDST(date, diff);
                return new Date(date.getTime() - diff * _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("hour"));
              }
            };
          }
        }, {
          key: "_createRecurrenceAppointments",
          value: function _createRecurrenceAppointments(appointment, groupIndices) {
            var duration = appointment.duration;
            var option = this._createRecurrenceOptions(appointment);
            var generatedStartDates = (0, _m_recurrence__WEBPACK_IMPORTED_MODULE_8__.getRecurrenceProcessor)().generateDates(option);
            return generatedStartDates.map(function (date) {
              var utcDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_5__["default"].createUTCDateWithLocalOffset(date);
              utcDate.setTime(utcDate.getTime() + duration);
              var endDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_5__["default"].createDateFromUTCWithLocalOffset(utcDate);
              return {
                startDate: new Date(date),
                endDate: endDate
              };
            });
          }
        }, {
          key: "_getAppointmentsFirstViewDate",
          value: function _getAppointmentsFirstViewDate(appointments) {
            var _this47 = this;
            return appointments.map(function (appointment) {
              return _this47._getAppointmentFirstViewDate(appointment);
            });
          }
        }, {
          key: "_fillNormalizedStartDate",
          value: function _fillNormalizedStartDate(appointments, firstViewDates, rawAppointment) {
            var _this48 = this;
            appointments.forEach(function (appointment, idx) {
              appointment.startDate = _this48._getAppointmentResultDate({
                appointment: appointment,
                rawAppointment: rawAppointment,
                startDate: new Date(appointment.startDate),
                startDayHour: _this48.viewStartDayHour,
                firstViewDate: firstViewDates[idx]
              });
            });
          }
        }, {
          key: "_cropAppointmentsByStartDayHour",
          value: function _cropAppointmentsByStartDayHour(appointments, firstViewDates) {
            var _this49 = this;
            return appointments.filter(function (appointment, idx) {
              if (!firstViewDates[idx]) {
                return false;
              }
              if (_this49.appointmentTakesAllDay) {
                return true;
              }
              return appointment.endDate > appointment.startDate;
            });
          }
        }, {
          key: "_getAppointmentResultDate",
          value: function _getAppointmentResultDate(options) {
            var appointment = options.appointment,
              startDayHour = options.startDayHour,
              firstViewDate = options.firstViewDate;
            var startDate = options.startDate;
            var resultDate;
            if (this.appointmentTakesAllDay) {
              resultDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].normalizeDate(startDate, firstViewDate);
            } else {
              if (startDate < firstViewDate) {
                startDate = firstViewDate;
              }
              resultDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].normalizeDate(appointment.startDate, startDate);
            }
            return !this.isDateAppointment ? _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].roundDateByStartDayHour(resultDate, startDayHour) : resultDate;
          }
        }, {
          key: "_getAppointmentFirstViewDate",
          value: function _getAppointmentFirstViewDate(appointment) {
            var groupIndex = appointment.source.groupIndex || 0;
            var startDate = appointment.startDate,
              endDate = appointment.endDate;
            if (this.isAllDayRowAppointment || appointment.allDay) {
              return this.viewDataProvider.findAllDayGroupCellStartDate(groupIndex, startDate);
            }
            return this.viewDataProvider.findGroupCellStartDate(groupIndex, startDate, endDate, this.isDateAppointment);
          }
        }, {
          key: "_getGroupIndices",
          value: function _getGroupIndices(rawAppointment) {
            var _this50 = this;
            var result = [];
            if (rawAppointment && this.loadedResources.length) {
              var tree = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_9__.createResourcesTree)(this.loadedResources);
              result = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_9__.getResourceTreeLeaves)(function (field, action) {
                return (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_9__.getDataAccessors)(_this50.options.dataAccessors.resources, field, action);
              }, tree, rawAppointment);
            }
            return result;
          }
        }]);
        return _DateGeneratorBaseStrategy;
      }();
      var _DateGeneratorVirtualStrategy = /*#__PURE__*/function (_DateGeneratorBaseStr) {
        _inherits(_DateGeneratorVirtualStrategy, _DateGeneratorBaseStr);
        function _DateGeneratorVirtualStrategy() {
          _classCallCheck(this, _DateGeneratorVirtualStrategy);
          return _callSuper(this, _DateGeneratorVirtualStrategy, arguments);
        }
        _createClass(_DateGeneratorVirtualStrategy, [{
          key: "groupCount",
          get: function get() {
            return (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_9__.getGroupCount)(this.loadedResources);
          }
        }, {
          key: "_createRecurrenceAppointments",
          value: function _createRecurrenceAppointments(appointment, groupIndices) {
            var _this51 = this;
            var duration = appointment.duration;
            var result = [];
            var validGroupIndices = this.groupCount ? groupIndices : [0];
            validGroupIndices.forEach(function (groupIndex) {
              var option = _this51._createRecurrenceOptions(appointment, groupIndex);
              var generatedStartDates = (0, _m_recurrence__WEBPACK_IMPORTED_MODULE_8__.getRecurrenceProcessor)().generateDates(option);
              var recurrentInfo = generatedStartDates.map(function (date) {
                var startDate = new Date(date);
                var utcDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_5__["default"].createUTCDateWithLocalOffset(date);
                utcDate.setTime(utcDate.getTime() + duration);
                var endDate = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_5__["default"].createDateFromUTCWithLocalOffset(utcDate);
                return {
                  startDate: startDate,
                  endDate: endDate,
                  groupIndex: groupIndex
                };
              });
              result.push.apply(result, _toConsumableArray(recurrentInfo));
            });
            return result;
          }
        }, {
          key: "_updateGroupIndices",
          value: function _updateGroupIndices(appointments, groupIndices) {
            var _this52 = this;
            var result = [];
            groupIndices.forEach(function (groupIndex) {
              var groupStartDate = _this52.viewDataProvider.getGroupStartDate(groupIndex);
              if (groupStartDate) {
                appointments.forEach(function (appointment) {
                  var appointmentCopy = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({}, appointment);
                  appointmentCopy.groupIndex = groupIndex;
                  result.push(appointmentCopy);
                });
              }
            });
            return result;
          }
        }, {
          key: "_getGroupIndices",
          value: function _getGroupIndices(resources) {
            var groupIndices = _get(_getPrototypeOf(_DateGeneratorVirtualStrategy.prototype), "_getGroupIndices", this).call(this, resources);
            var viewDataGroupIndices = this.viewDataProvider.getGroupIndices();
            if (!(null === groupIndices || void 0 === groupIndices ? void 0 : groupIndices.length)) {
              groupIndices = [0];
            }
            return groupIndices.filter(function (groupIndex) {
              return -1 !== viewDataGroupIndices.indexOf(groupIndex);
            });
          }
        }, {
          key: "_createAppointments",
          value: function _createAppointments(appointment, groupIndices) {
            var appointments = _get(_getPrototypeOf(_DateGeneratorVirtualStrategy.prototype), "_createAppointments", this).call(this, appointment, groupIndices);
            return !appointment.isRecurrent ? this._updateGroupIndices(appointments, groupIndices) : appointments;
          }
        }]);
        return _DateGeneratorVirtualStrategy;
      }(_DateGeneratorBaseStrategy);
      var _AppointmentSettingsGenerator = /*#__PURE__*/function () {
        function _AppointmentSettingsGenerator(options) {
          _classCallCheck(this, _AppointmentSettingsGenerator);
          this.options = options;
          this.appointmentAdapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_6__.createAppointmentAdapter)(this.rawAppointment, this.dataAccessors, this.timeZoneCalculator);
        }
        _createClass(_AppointmentSettingsGenerator, [{
          key: "rawAppointment",
          get: function get() {
            return this.options.rawAppointment;
          }
        }, {
          key: "dataAccessors",
          get: function get() {
            return this.options.dataAccessors;
          }
        }, {
          key: "timeZoneCalculator",
          get: function get() {
            return this.options.timeZoneCalculator;
          }
        }, {
          key: "isAllDayRowAppointment",
          get: function get() {
            return this.options.appointmentTakesAllDay && this.options.supportAllDayRow;
          }
        }, {
          key: "groups",
          get: function get() {
            return this.options.groups;
          }
        }, {
          key: "dateSettingsStrategy",
          get: function get() {
            var options = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.options), {
              isAllDayRowAppointment: this.isAllDayRowAppointment
            });
            return this.options.isVirtualScrolling ? new _DateGeneratorVirtualStrategy(options) : new _DateGeneratorBaseStrategy(options);
          }
        }, {
          key: "create",
          value: function create() {
            var _this$_generateDateSe = this._generateDateSettings(),
              dateSettings = _this$_generateDateSe.dateSettings,
              itemGroupIndices = _this$_generateDateSe.itemGroupIndices,
              isRecurrent = _this$_generateDateSe.isRecurrent;
            var cellPositions = this._calculateCellPositions(dateSettings, itemGroupIndices);
            var result = this._prepareAppointmentInfos(dateSettings, cellPositions, isRecurrent);
            return result;
          }
        }, {
          key: "_generateDateSettings",
          value: function _generateDateSettings() {
            return this.dateSettingsStrategy.generate(this.appointmentAdapter);
          }
        }, {
          key: "_calculateCellPositions",
          value: function _calculateCellPositions(dateSettings, itemGroupIndices) {
            var cellPositionCalculator = new _m_cell_position_calculator__WEBPACK_IMPORTED_MODULE_10__.CellPositionCalculator((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.options), {
              dateSettings: dateSettings
            }));
            return cellPositionCalculator.calculateCellPositions(itemGroupIndices, this.isAllDayRowAppointment, this.appointmentAdapter.isRecurrent);
          }
        }, {
          key: "_prepareAppointmentInfos",
          value: function _prepareAppointmentInfos(dateSettings, cellPositions, isRecurrent) {
            var _this53 = this;
            var infos = [];
            cellPositions.forEach(function (_ref) {
              var coordinates = _ref.coordinates,
                dateSettingIndex = _ref.dateSettingIndex;
              var dateSetting = dateSettings[dateSettingIndex];
              var dateText = _this53._getAppointmentDateText(dateSetting);
              var info = {
                appointment: dateSetting,
                sourceAppointment: dateSetting.source,
                dateText: dateText,
                isRecurrent: isRecurrent
              };
              infos.push((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, coordinates), {
                info: info
              }));
            });
            return infos;
          }
        }, {
          key: "_getAppointmentDateText",
          value: function _getAppointmentDateText(sourceAppointment) {
            var startDate = sourceAppointment.startDate,
              endDate = sourceAppointment.endDate,
              allDay = sourceAppointment.allDay;
            return (0, _m_text_utils__WEBPACK_IMPORTED_MODULE_11__.createFormattedDateText)({
              startDate: startDate,
              endDate: endDate,
              allDay: allDay,
              format: APPOINTMENT_DATE_TEXT_FORMAT
            });
          }
        }]);
        return _AppointmentSettingsGenerator;
      }();
      /***/
    }),
    /***/3092: (
    /*!***************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_text_utils.js ***!
      \***************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"createFormattedDateText": function createFormattedDateText() {
          return /* binding */_createFormattedDateText;
        },
        /* harmony export */"getFormatType": function getFormatType() {
          return /* binding */_getFormatType;
        },
        /* harmony export */"formatDates": function formatDates() {
          return /* binding */_formatDates;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../localization/date */83881);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/m_text_utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _createFormattedDateText = function _createFormattedDateText(options) {
        var startDate = options.startDate,
          endDate = options.endDate,
          allDay = options.allDay,
          format = options.format;
        var formatType = format || _getFormatType(startDate, endDate, allDay);
        return _formatDates(startDate, endDate, formatType);
      };
      var _getFormatType = function _getFormatType(startDate, endDate, isAllDay, isDateAndTimeView) {
        if (isAllDay) {
          return "DATE";
        }
        if (isDateAndTimeView && _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].sameDate(startDate, endDate)) {
          return "TIME";
        }
        return "DATETIME";
      };
      var _formatDates = function _formatDates(startDate, endDate, formatType) {
        var isSameDate = startDate.getDate() === endDate.getDate();
        switch (formatType) {
          case "DATETIME":
            return [_localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(startDate, "monthandday"), " ", _localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(startDate, "shorttime"), " - ", isSameDate ? "" : "".concat(_localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(endDate, "monthandday"), " "), _localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(endDate, "shorttime")].join("");
          case "TIME":
            return "".concat(_localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(startDate, "shorttime"), " - ").concat(_localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(endDate, "shorttime"));
          case "DATE":
            return "".concat(_localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(startDate, "monthandday")).concat(isSameDate ? "" : " - ".concat(_localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(endDate, "monthandday")));
        }
      };

      /***/
    }),
    /***/69929: (
    /*!*************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/m_view_model_generator.js ***!
      \*************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"AppointmentViewModelGenerator": function AppointmentViewModelGenerator() {
          return /* binding */_AppointmentViewModelGenerator;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _renovation_ui_scheduler_appointment_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/appointment/utils */259);
      /* harmony import */
      var _rendering_strategies_m_strategy_agenda__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./rendering_strategies/m_strategy_agenda */92323);
      /* harmony import */
      var _rendering_strategies_m_strategy_horizontal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./rendering_strategies/m_strategy_horizontal */61061);
      /* harmony import */
      var _rendering_strategies_m_strategy_horizontal_month__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./rendering_strategies/m_strategy_horizontal_month */74812);
      /* harmony import */
      var _rendering_strategies_m_strategy_horizontal_month_line__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./rendering_strategies/m_strategy_horizontal_month_line */69254);
      /* harmony import */
      var _rendering_strategies_m_strategy_vertical__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./rendering_strategies/m_strategy_vertical */21163);
      /* harmony import */
      var _rendering_strategies_m_strategy_week__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./rendering_strategies/m_strategy_week */48926);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/m_view_model_generator.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var RENDERING_STRATEGIES = {
        horizontal: _rendering_strategies_m_strategy_horizontal__WEBPACK_IMPORTED_MODULE_3__["default"],
        horizontalMonth: _rendering_strategies_m_strategy_horizontal_month__WEBPACK_IMPORTED_MODULE_4__["default"],
        horizontalMonthLine: _rendering_strategies_m_strategy_horizontal_month_line__WEBPACK_IMPORTED_MODULE_5__["default"],
        vertical: _rendering_strategies_m_strategy_vertical__WEBPACK_IMPORTED_MODULE_6__["default"],
        week: _rendering_strategies_m_strategy_week__WEBPACK_IMPORTED_MODULE_7__["default"],
        agenda: _rendering_strategies_m_strategy_agenda__WEBPACK_IMPORTED_MODULE_2__["default"]
      };
      var _AppointmentViewModelGenerator = /*#__PURE__*/function () {
        function _AppointmentViewModelGenerator() {
          _classCallCheck(this, _AppointmentViewModelGenerator);
        }
        _createClass(_AppointmentViewModelGenerator, [{
          key: "initRenderingStrategy",
          value: function initRenderingStrategy(options) {
            var RenderingStrategy = RENDERING_STRATEGIES[options.appointmentRenderingStrategyName];
            this.renderingStrategy = new RenderingStrategy(options);
          }
        }, {
          key: "generate",
          value: function generate(filteredItems, options) {
            var isRenovatedAppointments = options.isRenovatedAppointments;
            var appointments = filteredItems ? filteredItems.slice() : [];
            this.initRenderingStrategy(options);
            var renderingStrategy = this.getRenderingStrategy();
            var positionMap = renderingStrategy.createTaskPositionMap(appointments);
            var viewModel = this.postProcess(appointments, positionMap, isRenovatedAppointments);
            if (isRenovatedAppointments) {
              return this.makeRenovatedViewModels(viewModel, options.supportAllDayRow, options.isVerticalGroupOrientation);
            }
            return {
              positionMap: positionMap,
              viewModel: viewModel
            };
          }
        }, {
          key: "postProcess",
          value: function postProcess(filteredItems, positionMap, isRenovatedAppointments) {
            var renderingStrategy = this.getRenderingStrategy();
            return filteredItems.map(function (data, index) {
              if (!renderingStrategy.keepAppointmentSettings()) {
                delete data.settings;
              }
              var appointmentSettings = positionMap[index];
              appointmentSettings.forEach(function (item) {
                item.direction = "vertical" === renderingStrategy.getDirection() && !item.allDay ? "vertical" : "horizontal";
              });
              var item = {
                itemData: data,
                settings: appointmentSettings
              };
              if (!isRenovatedAppointments) {
                item.needRepaint = true;
                item.needRemove = false;
              }
              return item;
            });
          }
        }, {
          key: "makeRenovatedViewModels",
          value: function makeRenovatedViewModels(viewModel, supportAllDayRow, isVerticalGrouping) {
            var _this54 = this;
            var strategy = this.getRenderingStrategy();
            var regularViewModels = [];
            var allDayViewModels = [];
            var compactOptions = [];
            var isAllDayPanel = supportAllDayRow && !isVerticalGrouping;
            viewModel.forEach(function (_ref) {
              var itemData = _ref.itemData,
                settings = _ref.settings;
              settings.forEach(function (options) {
                var item = _this54.prepareViewModel(options, strategy, itemData);
                if (options.isCompact) {
                  compactOptions.push({
                    compactViewModel: options.virtual,
                    appointmentViewModel: item
                  });
                } else if (options.allDay && isAllDayPanel) {
                  allDayViewModels.push(item);
                } else {
                  regularViewModels.push(item);
                }
              });
            });
            var compactViewModels = this.prepareCompactViewModels(compactOptions, supportAllDayRow);
            var result = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
              allDay: allDayViewModels,
              regular: regularViewModels
            }, compactViewModels);
            return result;
          }
        }, {
          key: "prepareViewModel",
          value: function prepareViewModel(options, strategy, itemData) {
            var geometry = strategy.getAppointmentGeometry(options);
            var viewModel = {
              key: (0, _renovation_ui_scheduler_appointment_utils__WEBPACK_IMPORTED_MODULE_1__.getAppointmentKey)(geometry),
              appointment: itemData,
              geometry: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, geometry), {
                leftVirtualWidth: options.leftVirtualWidth,
                topVirtualHeight: options.topVirtualHeight
              }),
              info: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options.info), {
                allDay: options.allDay,
                direction: options.direction,
                appointmentReduced: options.appointmentReduced,
                groupIndex: options.groupIndex
              })
            };
            return viewModel;
          }
        }, {
          key: "getCompactViewModelFrame",
          value: function getCompactViewModelFrame(compactViewModel) {
            return {
              isAllDay: !!compactViewModel.isAllDay,
              isCompact: compactViewModel.isCompact,
              groupIndex: compactViewModel.groupIndex,
              geometry: {
                left: compactViewModel.left,
                top: compactViewModel.top,
                width: compactViewModel.width,
                height: compactViewModel.height
              },
              items: {
                colors: [],
                data: [],
                settings: []
              }
            };
          }
        }, {
          key: "prepareCompactViewModels",
          value: function prepareCompactViewModels(compactOptions, supportAllDayRow) {
            var _this55 = this;
            var regularCompact = {};
            var allDayCompact = {};
            compactOptions.forEach(function (_ref2) {
              var compactViewModel = _ref2.compactViewModel,
                appointmentViewModel = _ref2.appointmentViewModel;
              var index = compactViewModel.index,
                isAllDay = compactViewModel.isAllDay;
              var viewModel = isAllDay && supportAllDayRow ? allDayCompact : regularCompact;
              if (!viewModel[index]) {
                viewModel[index] = _this55.getCompactViewModelFrame(compactViewModel);
              }
              var _viewModel$index$item = viewModel[index].items,
                settings = _viewModel$index$item.settings,
                data = _viewModel$index$item.data,
                colors = _viewModel$index$item.colors;
              settings.push(appointmentViewModel);
              data.push(appointmentViewModel.appointment);
              colors.push(appointmentViewModel.info.resourceColor);
            });
            var toArray = function toArray(items) {
              return Object.keys(items).map(function (key) {
                return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
                  key: key
                }, items[key]);
              });
            };
            var allDayViewModels = toArray(allDayCompact);
            var regularViewModels = toArray(regularCompact);
            return {
              allDayCompact: allDayViewModels,
              regularCompact: regularViewModels
            };
          }
        }, {
          key: "getRenderingStrategy",
          value: function getRenderingStrategy() {
            return this.renderingStrategy;
          }
        }]);
        return _AppointmentViewModelGenerator;
      }();
      /***/
    }),
    /***/46498: (
    /*!********************************************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_adaptive.js ***!
      \********************************************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _m_appointments_positioning_strategy_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./m_appointments_positioning_strategy_base */82114);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_adaptive.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var COLLECTOR_ADAPTIVE_SIZE = 28;
      var COLLECTOR_ADAPTIVE_BOTTOM_OFFSET = 40;
      var ADAPTIVE_APPOINTMENT_DEFAULT_OFFSET = 35;
      var ADAPTIVE_APPOINTMENT_DEFAULT_WIDTH = 30;
      var AdaptivePositioningStrategy = /*#__PURE__*/function (_m_appointments_posit) {
        _inherits(AdaptivePositioningStrategy, _m_appointments_posit);
        function AdaptivePositioningStrategy() {
          _classCallCheck(this, AdaptivePositioningStrategy);
          return _callSuper(this, AdaptivePositioningStrategy, arguments);
        }
        _createClass(AdaptivePositioningStrategy, [{
          key: "getDropDownAppointmentWidth",
          value: function getDropDownAppointmentWidth(intervalCount, isAllDay) {
            return this.getDropDownButtonAdaptiveSize();
          }
        }, {
          key: "getDropDownButtonAdaptiveSize",
          value: function getDropDownButtonAdaptiveSize() {
            return COLLECTOR_ADAPTIVE_SIZE;
          }
        }, {
          key: "getCollectorTopOffset",
          value: function getCollectorTopOffset(allDay) {
            var renderingStrategy = this._renderingStrategy;
            if (renderingStrategy.allDaySupported() && allDay) {
              return (renderingStrategy.allDayHeight - renderingStrategy.getDropDownButtonAdaptiveSize()) / 2;
            }
            return this._renderingStrategy.cellHeight - COLLECTOR_ADAPTIVE_BOTTOM_OFFSET;
          }
        }, {
          key: "getCollectorLeftOffset",
          value: function getCollectorLeftOffset() {
            var collectorWidth = this._renderingStrategy.getDropDownAppointmentWidth();
            return (this._renderingStrategy.cellWidth - collectorWidth) / 2;
          }
        }, {
          key: "getAppointmentDefaultOffset",
          value: function getAppointmentDefaultOffset() {
            return ADAPTIVE_APPOINTMENT_DEFAULT_OFFSET;
          }
        }, {
          key: "getDynamicAppointmentCountPerCell",
          value: function getDynamicAppointmentCountPerCell() {
            var renderingStrategy = this._renderingStrategy;
            if (renderingStrategy.allDaySupported()) {
              return {
                allDay: 0,
                simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()
              };
            }
            return 0;
          }
        }, {
          key: "getDropDownAppointmentHeight",
          value: function getDropDownAppointmentHeight() {
            return COLLECTOR_ADAPTIVE_SIZE;
          }
        }, {
          key: "_getAppointmentMinCount",
          value: function _getAppointmentMinCount() {
            return 0;
          }
        }, {
          key: "_getAppointmentDefaultWidth",
          value: function _getAppointmentDefaultWidth() {
            var renderingStrategy = this._renderingStrategy;
            if (renderingStrategy.allDaySupported()) {
              return ADAPTIVE_APPOINTMENT_DEFAULT_WIDTH;
            }
            return _get(_getPrototypeOf(AdaptivePositioningStrategy.prototype), "_getAppointmentDefaultWidth", this).call(this);
          }
        }, {
          key: "_calculateDynamicAppointmentCountPerCell",
          value: function _calculateDynamicAppointmentCountPerCell() {
            return Math.floor(this._renderingStrategy._getAppointmentMaxWidth() / this._renderingStrategy._getAppointmentDefaultWidth());
          }
        }]);
        return AdaptivePositioningStrategy;
      }(_m_appointments_positioning_strategy_base__WEBPACK_IMPORTED_MODULE_0__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = AdaptivePositioningStrategy;

      /***/
    }),
    /***/82114: (
    /*!****************************************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_base.js ***!
      \****************************************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/type */33275);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_base.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var COLLECTOR_DEFAULT_WIDTH = 24;
      var COLLECTOR_DEFAULT_OFFSET = 3;
      var COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET = 22;
      var APPOINTMENT_MIN_COUNT = 1;
      var APPOINTMENT_DEFAULT_WIDTH = 40;
      var COLLECTOR_WIDTH_IN_PERCENTS = 75;
      var APPOINTMENT_INCREASED_WIDTH = 50;
      var AppointmentPositioningStrategy = /*#__PURE__*/function () {
        function AppointmentPositioningStrategy(renderingStrategy) {
          _classCallCheck(this, AppointmentPositioningStrategy);
          this._renderingStrategy = renderingStrategy;
        }
        _createClass(AppointmentPositioningStrategy, [{
          key: "getDropDownAppointmentWidth",
          value: function getDropDownAppointmentWidth(intervalCount, isAllDay) {
            if (isAllDay || !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(isAllDay)) {
              return COLLECTOR_WIDTH_IN_PERCENTS * this._renderingStrategy.cellWidth / 100;
            }
            return COLLECTOR_DEFAULT_WIDTH;
          }
        }, {
          key: "getCollectorTopOffset",
          value: function getCollectorTopOffset(allDay) {
            return COLLECTOR_DEFAULT_OFFSET;
          }
        }, {
          key: "getCollectorLeftOffset",
          value: function getCollectorLeftOffset() {
            return COLLECTOR_DEFAULT_OFFSET;
          }
        }, {
          key: "getAppointmentDefaultOffset",
          value: function getAppointmentDefaultOffset() {
            if (this._renderingStrategy._isCompactTheme()) {
              return COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET;
            }
            return this._renderingStrategy.appointmentOffset;
          }
        }, {
          key: "getDynamicAppointmentCountPerCell",
          value: function getDynamicAppointmentCountPerCell() {
            var renderingStrategy = this._renderingStrategy;
            var cellHeight = renderingStrategy.cellHeight;
            var allDayCount = Math.floor((cellHeight - renderingStrategy._getAppointmentDefaultOffset()) / renderingStrategy._getAppointmentDefaultHeight()) || this._getAppointmentMinCount();
            if (renderingStrategy.allDaySupported()) {
              return {
                allDay: "vertical" === renderingStrategy.groupOrientation ? allDayCount : this._renderingStrategy.appointmentCountPerCell,
                simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()
              };
            }
            return allDayCount;
          }
        }, {
          key: "getDropDownAppointmentHeight",
          value: function getDropDownAppointmentHeight() {
            return;
          }
        }, {
          key: "_getAppointmentMinCount",
          value: function _getAppointmentMinCount() {
            return APPOINTMENT_MIN_COUNT;
          }
        }, {
          key: "_calculateDynamicAppointmentCountPerCell",
          value: function _calculateDynamicAppointmentCountPerCell() {
            return Math.floor(this._renderingStrategy._getAppointmentMaxWidth() / APPOINTMENT_INCREASED_WIDTH);
          }
        }, {
          key: "_getAppointmentDefaultWidth",
          value: function _getAppointmentDefaultWidth() {
            return APPOINTMENT_DEFAULT_WIDTH;
          }
        }]);
        return AppointmentPositioningStrategy;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = AppointmentPositioningStrategy;

      /***/
    }),
    /***/92323: (
    /*!*****************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_agenda.js ***!
      \*****************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/iterator */14975);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../m_appointment_adapter */91634);
      /* harmony import */
      var _m_expression_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../m_expression_utils */31363);
      /* harmony import */
      var _resources_m_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../resources/m_utils */48025);
      /* harmony import */
      var _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../data_provider/m_utils */57534);
      /* harmony import */
      var _m_strategy_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./m_strategy_base */5136);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_agenda.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var AgendaRenderingStrategy = /*#__PURE__*/function (_m_strategy_base__WEB) {
        _inherits(AgendaRenderingStrategy, _m_strategy_base__WEB);
        function AgendaRenderingStrategy() {
          _classCallCheck(this, AgendaRenderingStrategy);
          return _callSuper(this, AgendaRenderingStrategy, arguments);
        }
        _createClass(AgendaRenderingStrategy, [{
          key: "instance",
          get: function get() {
            return this.options.instance;
          }
        }, {
          key: "agendaDuration",
          get: function get() {
            return this.options.agendaDuration;
          }
        }, {
          key: "getAppointmentMinSize",
          value: function getAppointmentMinSize() {}
        }, {
          key: "getDeltaTime",
          value: function getDeltaTime() {}
        }, {
          key: "keepAppointmentSettings",
          value: function keepAppointmentSettings() {
            return true;
          }
        }, {
          key: "getAppointmentGeometry",
          value: function getAppointmentGeometry(geometry) {
            return geometry;
          }
        }, {
          key: "groupAppointmentByResources",
          value: function groupAppointmentByResources(appointments) {
            var groups = this.instance._getCurrentViewOption("groups");
            var config = {
              loadedResources: this.options.loadedResources,
              resources: this.options.resources,
              dataAccessors: this.dataAccessors.resources
            };
            return (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_4__.groupAppointmentsByResources)(config, appointments, groups);
          }
        }, {
          key: "createTaskPositionMap",
          value: function createTaskPositionMap(appointments) {
            var _this56 = this;
            var height;
            var appointmentsByResources;
            this.calculateRows(appointments, this.agendaDuration, this.currentDate);
            if (appointments.length) {
              height = this.instance.fire("getAgendaVerticalStepHeight");
              appointmentsByResources = this.groupAppointmentByResources(appointments);
              var groupedAppts = [];
              (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(appointmentsByResources, function (i, appts) {
                var additionalAppointments = [];
                var recurrentIndexes = [];
                (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(appts, function (index, appointment) {
                  var recurrenceBatch = _this56.instance.getAppointmentsInstance()._processRecurrenceAppointment(appointment, index);
                  var appointmentBatch = null;
                  if (!recurrenceBatch.indexes.length) {
                    appointmentBatch = _this56.instance.getAppointmentsInstance()._processLongAppointment(appointment);
                    additionalAppointments = additionalAppointments.concat(appointmentBatch.parts);
                  }
                  additionalAppointments = additionalAppointments.concat(recurrenceBatch.parts);
                  recurrentIndexes = recurrentIndexes.concat(recurrenceBatch.indexes);
                });
                _this56.instance.getAppointmentsInstance()._reduceRecurrenceAppointments(recurrentIndexes, appts);
                _this56.instance.getAppointmentsInstance()._combineAppointments(appts, additionalAppointments);
                groupedAppts = groupedAppts.concat(appts);
              });
              Array.prototype.splice.apply(appointments, [0, appointments.length].concat(groupedAppts));
            }
            var result = [];
            var sortedIndex = 0;
            appointments.forEach(function (appt, index) {
              result.push([{
                height: height,
                width: "100%",
                sortedIndex: sortedIndex++,
                groupIndex: _this56._calculateGroupIndex(index, appointmentsByResources),
                agendaSettings: appt.settings
              }]);
              delete appt.settings;
            });
            return result;
          }
        }, {
          key: "_calculateGroupIndex",
          value: function _calculateGroupIndex(apptIndex, appointmentsByResources) {
            var resultInd;
            var counter = 0;
            for (var i in appointmentsByResources) {
              var countApptInGroup = appointmentsByResources[i].length;
              if (apptIndex >= counter && apptIndex < counter + countApptInGroup) {
                resultInd = Number(i);
                break;
              }
              counter += countApptInGroup;
            }
            return resultInd;
          }
        }, {
          key: "_getDeltaWidth",
          value: function _getDeltaWidth(args, initialSize) {}
        }, {
          key: "_getAppointmentMaxWidth",
          value: function _getAppointmentMaxWidth() {
            return this.cellWidth;
          }
        }, {
          key: "_needVerifyItemSize",
          value: function _needVerifyItemSize() {
            return false;
          }
        }, {
          key: "_getAppointmentParts",
          value: function _getAppointmentParts(geometry, settings) {}
        }, {
          key: "_reduceMultiWeekAppointment",
          value: function _reduceMultiWeekAppointment() {}
        }, {
          key: "calculateAppointmentHeight",
          value: function calculateAppointmentHeight() {
            return 0;
          }
        }, {
          key: "calculateAppointmentWidth",
          value: function calculateAppointmentWidth() {
            return 0;
          }
        }, {
          key: "isAppointmentGreaterThan",
          value: function isAppointmentGreaterThan(etalon, comparisonParameters) {}
        }, {
          key: "isAllDay",
          value: function isAllDay() {
            return false;
          }
        }, {
          key: "_sortCondition",
          value: function _sortCondition() {}
        }, {
          key: "_rowCondition",
          value: function _rowCondition(a, b) {}
        }, {
          key: "_columnCondition",
          value: function _columnCondition(a, b) {}
        }, {
          key: "_findIndexByKey",
          value: function _findIndexByKey(arr, iKey, jKey, iValue, jValue) {}
        }, {
          key: "_markAppointmentAsVirtual",
          value: function _markAppointmentAsVirtual() {}
        }, {
          key: "getDropDownAppointmentWidth",
          value: function getDropDownAppointmentWidth() {}
        }, {
          key: "getCollectorLeftOffset",
          value: function getCollectorLeftOffset() {}
        }, {
          key: "getCollectorTopOffset",
          value: function getCollectorTopOffset() {}
        }, {
          key: "replaceWrongAppointmentEndDate",
          value: function replaceWrongAppointmentEndDate(rawAppointment, startDate, endDate) {
            var adapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_2__.createAppointmentAdapter)(rawAppointment, this.dataAccessors, this.timeZoneCalculator);
            (0, _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_5__.replaceWrongEndDate)(adapter, startDate, endDate, this.cellDuration, this.dataAccessors);
          }
        }, {
          key: "calculateRows",
          value: function calculateRows(appointments, agendaDuration, currentDate, needClearSettings) {
            var _this57 = this;
            this._rows = [];
            currentDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(new Date(currentDate));
            var groupedAppointments = this.groupAppointmentByResources(appointments);
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(groupedAppointments, function (_, currentAppointments) {
              var groupResult = [];
              var appts = {
                indexes: [],
                parts: []
              };
              if (!currentAppointments.length) {
                _this57._rows.push([]);
                return true;
              }
              (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(currentAppointments, function (index, appointment) {
                var startDate = _m_expression_utils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.getField(_this57.dataAccessors, "startDate", appointment);
                var endDate = _m_expression_utils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.getField(_this57.dataAccessors, "endDate", appointment);
                _this57.replaceWrongAppointmentEndDate(appointment, startDate, endDate);
                needClearSettings && delete appointment.settings;
                var result = _this57.instance.getAppointmentsInstance()._processRecurrenceAppointment(appointment, index, false);
                appts.parts = appts.parts.concat(result.parts);
                appts.indexes = appts.indexes.concat(result.indexes);
              });
              _this57.instance.getAppointmentsInstance()._reduceRecurrenceAppointments(appts.indexes, currentAppointments);
              currentAppointments.push.apply(currentAppointments, _toConsumableArray(appts.parts));
              var appointmentCount = currentAppointments.length;
              for (var i = 0; i < agendaDuration; i++) {
                var day = new Date(currentDate);
                day.setMilliseconds(day.getMilliseconds() + 864e5 * i);
                if (void 0 === groupResult[i]) {
                  groupResult[i] = 0;
                }
                for (var j = 0; j < appointmentCount; j++) {
                  var appointmentData = currentAppointments[j].settings || currentAppointments[j];
                  var adapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_2__.createAppointmentAdapter)(currentAppointments[j], _this57.dataAccessors, _this57.timeZoneCalculator);
                  var appointmentIsLong = (0, _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_5__.getAppointmentTakesSeveralDays)(adapter);
                  var appointmentIsRecurrence = _m_expression_utils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.getField(_this57.dataAccessors, "recurrenceRule", currentAppointments[j]);
                  if (_this57.instance.fire("dayHasAppointment", day, appointmentData, true) || !appointmentIsRecurrence && appointmentIsLong && _this57.instance.fire("dayHasAppointment", day, currentAppointments[j], true)) {
                    groupResult[i] += 1;
                  }
                }
              }
              _this57._rows.push(groupResult);
            });
            return this._rows;
          }
        }, {
          key: "_iterateRow",
          value: function _iterateRow(row, obj, index) {
            for (var i = 0; i < row.length; i++) {
              obj.counter += row[i];
              if (obj.counter >= index) {
                obj.indexInRow = i;
                break;
              }
            }
          }
        }, {
          key: "getDateByIndex",
          value: function getDateByIndex(index, rows, startViewDate) {
            var obj = {
              counter: 0,
              indexInRow: 0
            };
            index++;
            for (var i = 0; i < rows.length; i++) {
              this._iterateRow(rows[i], obj, index);
              if (obj.indexInRow) {
                break;
              }
            }
            return new Date(new Date(startViewDate).setDate(startViewDate.getDate() + obj.indexInRow));
          }
        }, {
          key: "getAppointmentDataCalculator",
          value: function getAppointmentDataCalculator() {
            var _this58 = this;
            return function ($appointment, originalStartDate) {
              var apptIndex = $appointment.index();
              var startViewDate = _this58.instance.getStartViewDate();
              var calculatedStartDate = _this58.getDateByIndex(apptIndex, _this58._rows, startViewDate);
              var wrappedOriginalStartDate = new Date(originalStartDate);
              return {
                startDate: new Date(calculatedStartDate.setHours(wrappedOriginalStartDate.getHours(), wrappedOriginalStartDate.getMinutes(), wrappedOriginalStartDate.getSeconds(), wrappedOriginalStartDate.getMilliseconds()))
              };
            };
          }
        }]);
        return AgendaRenderingStrategy;
      }(_m_strategy_base__WEBPACK_IMPORTED_MODULE_6__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = AgendaRenderingStrategy;

      /***/
    }),
    /***/5136: (
    /*!***************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_base.js ***!
      \***************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../core/utils/type */33275);
      /* harmony import */
      var _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay */89448);
      /* harmony import */
      var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../../ui/scheduler/utils.timeZone */53374);
      /* harmony import */
      var _ui_themes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../../ui/themes */78279);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../m_appointment_adapter */91634);
      /* harmony import */
      var _m_settings_generator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../m_settings_generator */66767);
      /* harmony import */
      var _m_appointments_positioning_strategy_adaptive__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ./m_appointments_positioning_strategy_adaptive */46498);
      /* harmony import */
      var _m_appointments_positioning_strategy_base__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ./m_appointments_positioning_strategy_base */82114);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_base.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds;
      var APPOINTMENT_MIN_SIZE = 2;
      var APPOINTMENT_DEFAULT_HEIGHT = 20;
      var COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT = 18;
      var DROP_DOWN_BUTTON_ADAPTIVE_SIZE = 28;
      var WEEK_VIEW_COLLECTOR_OFFSET = 5;
      var COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET = 1;
      var BaseRenderingStrategy = /*#__PURE__*/function () {
        function BaseRenderingStrategy(options) {
          _classCallCheck(this, BaseRenderingStrategy);
          this.options = options;
          this._initPositioningStrategy();
        }
        _createClass(BaseRenderingStrategy, [{
          key: "isAdaptive",
          get: function get() {
            return this.options.adaptivityEnabled;
          }
        }, {
          key: "rtlEnabled",
          get: function get() {
            return this.options.rtlEnabled;
          }
        }, {
          key: "startDayHour",
          get: function get() {
            return this.options.startDayHour;
          }
        }, {
          key: "endDayHour",
          get: function get() {
            return this.options.endDayHour;
          }
        }, {
          key: "maxAppointmentsPerCell",
          get: function get() {
            return this.options.maxAppointmentsPerCell;
          }
        }, {
          key: "cellWidth",
          get: function get() {
            return this.options.cellWidth;
          }
        }, {
          key: "cellHeight",
          get: function get() {
            return this.options.cellHeight;
          }
        }, {
          key: "allDayHeight",
          get: function get() {
            return this.options.allDayHeight;
          }
        }, {
          key: "resizableStep",
          get: function get() {
            return this.options.resizableStep;
          }
        }, {
          key: "isGroupedByDate",
          get: function get() {
            return this.options.isGroupedByDate;
          }
        }, {
          key: "visibleDayDuration",
          get: function get() {
            return this.options.visibleDayDuration;
          }
        }, {
          key: "viewStartDayHour",
          get: function get() {
            return this.options.viewStartDayHour;
          }
        }, {
          key: "viewEndDayHour",
          get: function get() {
            return this.options.viewEndDayHour;
          }
        }, {
          key: "cellDuration",
          get: function get() {
            return this.options.cellDuration;
          }
        }, {
          key: "cellDurationInMinutes",
          get: function get() {
            return this.options.cellDurationInMinutes;
          }
        }, {
          key: "leftVirtualCellCount",
          get: function get() {
            return this.options.leftVirtualCellCount;
          }
        }, {
          key: "topVirtualCellCount",
          get: function get() {
            return this.options.topVirtualCellCount;
          }
        }, {
          key: "positionHelper",
          get: function get() {
            return this.options.positionHelper;
          }
        }, {
          key: "showAllDayPanel",
          get: function get() {
            return this.options.showAllDayPanel;
          }
        }, {
          key: "isGroupedAllDayPanel",
          get: function get() {
            return this.options.isGroupedAllDayPanel;
          }
        }, {
          key: "groupOrientation",
          get: function get() {
            return this.options.groupOrientation;
          }
        }, {
          key: "rowCount",
          get: function get() {
            return this.options.rowCount;
          }
        }, {
          key: "groupCount",
          get: function get() {
            return this.options.groupCount;
          }
        }, {
          key: "currentDate",
          get: function get() {
            return this.options.currentDate;
          }
        }, {
          key: "appointmentCountPerCell",
          get: function get() {
            return this.options.appointmentCountPerCell;
          }
        }, {
          key: "appointmentOffset",
          get: function get() {
            return this.options.appointmentOffset;
          }
        }, {
          key: "allowResizing",
          get: function get() {
            return this.options.allowResizing;
          }
        }, {
          key: "allowAllDayResizing",
          get: function get() {
            return this.options.allowAllDayResizing;
          }
        }, {
          key: "viewDataProvider",
          get: function get() {
            return this.options.viewDataProvider;
          }
        }, {
          key: "dataAccessors",
          get: function get() {
            return this.options.dataAccessors;
          }
        }, {
          key: "timeZoneCalculator",
          get: function get() {
            return this.options.timeZoneCalculator;
          }
        }, {
          key: "intervalCount",
          get: function get() {
            return this.options.intervalCount;
          }
        }, {
          key: "allDayPanelMode",
          get: function get() {
            return this.options.allDayPanelMode;
          }
        }, {
          key: "isVirtualScrolling",
          get: function get() {
            return this.options.isVirtualScrolling;
          }
        }, {
          key: "_correctCollectorCoordinatesInAdaptive",
          value: function _correctCollectorCoordinatesInAdaptive(coordinates, isAllDay) {
            coordinates.top += this.getCollectorTopOffset(isAllDay);
            coordinates.left += this.getCollectorLeftOffset();
          }
        }, {
          key: "_initPositioningStrategy",
          value: function _initPositioningStrategy() {
            this._positioningStrategy = this.isAdaptive ? new _m_appointments_positioning_strategy_adaptive__WEBPACK_IMPORTED_MODULE_9__["default"](this) : new _m_appointments_positioning_strategy_base__WEBPACK_IMPORTED_MODULE_10__["default"](this);
          }
        }, {
          key: "getPositioningStrategy",
          value: function getPositioningStrategy() {
            return this._positioningStrategy;
          }
        }, {
          key: "getAppointmentMinSize",
          value: function getAppointmentMinSize() {
            return APPOINTMENT_MIN_SIZE;
          }
        }, {
          key: "keepAppointmentSettings",
          value: function keepAppointmentSettings() {
            return false;
          }
        }, {
          key: "getDeltaTime",
          value: function getDeltaTime(args, initialSize, appointment) {}
        }, {
          key: "getAppointmentGeometry",
          value: function getAppointmentGeometry(coordinates) {
            return coordinates;
          }
        }, {
          key: "needCorrectAppointmentDates",
          value: function needCorrectAppointmentDates() {
            return true;
          }
        }, {
          key: "getDirection",
          value: function getDirection() {
            return "horizontal";
          }
        }, {
          key: "createTaskPositionMap",
          value: function createTaskPositionMap(items, skipSorting) {
            var _this59 = this;
            delete this._maxAppointmentCountPerCell;
            var length = null === items || void 0 === items ? void 0 : items.length;
            if (!length) {
              return;
            }
            var map = [];
            for (var i = 0; i < length; i++) {
              var coordinates = this._getItemPosition(items[i]);
              if (coordinates.length && this.rtlEnabled) {
                coordinates = this._correctRtlCoordinates(coordinates);
              }
              coordinates.forEach(function (item) {
                item.leftVirtualCellCount = _this59.leftVirtualCellCount;
                item.topVirtualCellCount = _this59.topVirtualCellCount;
                item.leftVirtualWidth = _this59.leftVirtualCellCount * _this59.cellWidth;
                item.topVirtualHeight = _this59.topVirtualCellCount * _this59.cellHeight;
              });
              map.push(coordinates);
            }
            var positionArray = this._getSortedPositions(map);
            var resultPositions = this._getResultPositions(positionArray);
            return this._getExtendedPositionMap(map, resultPositions);
          }
        }, {
          key: "_getDeltaWidth",
          value: function _getDeltaWidth(args, initialSize) {
            var intervalWidth = this.resizableStep || this.getAppointmentMinSize();
            var initialWidth = initialSize.width;
            return Math.round((args.width - initialWidth) / intervalWidth);
          }
        }, {
          key: "_correctRtlCoordinates",
          value: function _correctRtlCoordinates(coordinates) {
            var width = coordinates[0].width || this._getAppointmentMaxWidth();
            coordinates.forEach(function (coordinate) {
              if (!coordinate.appointmentReduced) {
                coordinate.left -= width;
              }
            });
            return coordinates;
          }
        }, {
          key: "_getAppointmentMaxWidth",
          value: function _getAppointmentMaxWidth() {
            return this.cellWidth;
          }
        }, {
          key: "_getItemPosition",
          value: function _getItemPosition(appointment) {
            var position = this.generateAppointmentSettings(appointment);
            var allDay = this.isAllDay(appointment);
            var result = [];
            for (var j = 0; j < position.length; j++) {
              var height = this.calculateAppointmentHeight(appointment, position[j]);
              var width = this.calculateAppointmentWidth(appointment, position[j]);
              var resultWidth = width;
              var appointmentReduced = null;
              var multiWeekAppointmentParts = [];
              var initialRowIndex = position[j].rowIndex;
              var initialColumnIndex = position[j].columnIndex;
              if (this._needVerifyItemSize() || allDay) {
                var currentMaxAllowedPosition = position[j].hMax;
                if (this.isAppointmentGreaterThan(currentMaxAllowedPosition, {
                  left: position[j].left,
                  width: width
                })) {
                  appointmentReduced = "head";
                  initialRowIndex = position[j].rowIndex;
                  initialColumnIndex = position[j].columnIndex;
                  resultWidth = this._reduceMultiWeekAppointment(width, {
                    left: position[j].left,
                    right: currentMaxAllowedPosition
                  });
                  multiWeekAppointmentParts = this._getAppointmentParts({
                    sourceAppointmentWidth: width,
                    reducedWidth: resultWidth,
                    height: height
                  }, position[j]);
                  if (this.rtlEnabled) {
                    position[j].left = currentMaxAllowedPosition;
                  }
                }
              }
              (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(position[j], {
                height: height,
                width: resultWidth,
                allDay: allDay,
                rowIndex: initialRowIndex,
                columnIndex: initialColumnIndex,
                appointmentReduced: appointmentReduced
              });
              result = this._getAppointmentPartsPosition(multiWeekAppointmentParts, position[j], result);
            }
            return result;
          }
        }, {
          key: "_getAppointmentPartsPosition",
          value: function _getAppointmentPartsPosition(appointmentParts, position, result) {
            if (appointmentParts.length) {
              appointmentParts.unshift(position);
              result = result.concat(appointmentParts);
            } else {
              result.push(position);
            }
            return result;
          }
        }, {
          key: "getAppointmentSettingsGenerator",
          value: function getAppointmentSettingsGenerator(rawAppointment) {
            return new _m_settings_generator__WEBPACK_IMPORTED_MODULE_8__.AppointmentSettingsGenerator((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
              rawAppointment: rawAppointment,
              appointmentTakesAllDay: this.isAppointmentTakesAllDay(rawAppointment),
              getPositionShiftCallback: this.getPositionShift.bind(this)
            }, this.options));
          }
        }, {
          key: "generateAppointmentSettings",
          value: function generateAppointmentSettings(rawAppointment) {
            return this.getAppointmentSettingsGenerator(rawAppointment).create();
          }
        }, {
          key: "isAppointmentTakesAllDay",
          value: function isAppointmentTakesAllDay(rawAppointment) {
            var adapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_7__.createAppointmentAdapter)(rawAppointment, this.dataAccessors, this.timeZoneCalculator);
            return (0, _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_4__.getAppointmentTakesAllDay)(adapter, this.viewStartDayHour, this.viewEndDayHour, this.allDayPanelMode);
          }
        }, {
          key: "_getAppointmentParts",
          value: function _getAppointmentParts(geometry, settings) {
            return [];
          }
        }, {
          key: "_getCompactAppointmentParts",
          value: function _getCompactAppointmentParts(appointmentWidth) {
            var cellWidth = this.cellWidth || this.getAppointmentMinSize();
            return Math.round(appointmentWidth / cellWidth);
          }
        }, {
          key: "_reduceMultiWeekAppointment",
          value: function _reduceMultiWeekAppointment(sourceAppointmentWidth, bound) {
            if (this.rtlEnabled) {
              sourceAppointmentWidth = Math.floor(bound.left - bound.right);
            } else {
              sourceAppointmentWidth = bound.right - Math.floor(bound.left);
            }
            return sourceAppointmentWidth;
          }
        }, {
          key: "calculateAppointmentHeight",
          value: function calculateAppointmentHeight(appointment, position) {
            return 0;
          }
        }, {
          key: "calculateAppointmentWidth",
          value: function calculateAppointmentWidth(appointment, position) {
            return 0;
          }
        }, {
          key: "isAppointmentGreaterThan",
          value: function isAppointmentGreaterThan(etalon, comparisonParameters) {
            var result = comparisonParameters.left + comparisonParameters.width - etalon;
            if (this.rtlEnabled) {
              result = etalon + comparisonParameters.width - comparisonParameters.left;
            }
            return result > this.cellWidth / 2;
          }
        }, {
          key: "isAllDay",
          value: function isAllDay(appointment) {
            return false;
          }
        }, {
          key: "cropAppointmentWidth",
          value: function cropAppointmentWidth(width, cellWidth) {
            return this.isGroupedByDate ? cellWidth : width;
          }
        }, {
          key: "_getSortedPositions",
          value: function _getSortedPositions(positionList, skipSorting) {
            var _this60 = this;
            var result = [];
            var round = function round(value) {
              return Math.round(100 * value) / 100;
            };
            var createItem = function createItem(rowIndex, columnIndex, top, left, bottom, right, position, allDay) {
              return {
                i: rowIndex,
                j: columnIndex,
                top: round(top),
                left: round(left),
                bottom: round(bottom),
                right: round(right),
                cellPosition: position,
                allDay: allDay
              };
            };
            for (var rowIndex = 0, rowCount = positionList.length; rowIndex < rowCount; rowIndex++) {
              for (var columnIndex = 0, cellCount = positionList[rowIndex].length; columnIndex < cellCount; columnIndex++) {
                var _positionList$rowInde = positionList[rowIndex][columnIndex],
                  top = _positionList$rowInde.top,
                  left = _positionList$rowInde.left,
                  height = _positionList$rowInde.height,
                  width = _positionList$rowInde.width,
                  cellPosition = _positionList$rowInde.cellPosition,
                  allDay = _positionList$rowInde.allDay;
                result.push(createItem(rowIndex, columnIndex, top, left, top + height, left + width, cellPosition, allDay));
              }
            }
            return result.sort(function (a, b) {
              return _this60._sortCondition(a, b);
            });
          }
        }, {
          key: "_sortCondition",
          value: function _sortCondition(a, b) {}
        }, {
          key: "_getConditions",
          value: function _getConditions(a, b) {
            var isSomeEdge = this._isSomeEdge(a, b);
            return {
              columnCondition: isSomeEdge || this._normalizeCondition(a.left, b.left),
              rowCondition: isSomeEdge || this._normalizeCondition(a.top, b.top),
              cellPositionCondition: isSomeEdge || this._normalizeCondition(a.cellPosition, b.cellPosition)
            };
          }
        }, {
          key: "_rowCondition",
          value: function _rowCondition(a, b) {
            var conditions = this._getConditions(a, b);
            return conditions.columnCondition || conditions.rowCondition;
          }
        }, {
          key: "_columnCondition",
          value: function _columnCondition(a, b) {
            var conditions = this._getConditions(a, b);
            return conditions.rowCondition || conditions.columnCondition;
          }
        }, {
          key: "_isSomeEdge",
          value: function _isSomeEdge(a, b) {
            return a.i === b.i && a.j === b.j;
          }
        }, {
          key: "_normalizeCondition",
          value: function _normalizeCondition(first, second) {
            var result = first - second;
            return Math.abs(result) > 1 ? result : 0;
          }
        }, {
          key: "_isItemsCross",
          value: function _isItemsCross(firstItem, secondItem) {
            var areItemsInTheSameTable = !!firstItem.allDay === !!secondItem.allDay;
            var areItemsAllDay = firstItem.allDay && secondItem.allDay;
            if (areItemsInTheSameTable) {
              var orientation = this._getOrientation(areItemsAllDay);
              return this._checkItemsCrossing(firstItem, secondItem, orientation);
            }
            return false;
          }
        }, {
          key: "_checkItemsCrossing",
          value: function _checkItemsCrossing(firstItem, secondItem, orientation) {
            var firstItemSide1 = Math.floor(firstItem[orientation[0]]);
            var firstItemSide2 = Math.floor(firstItem[orientation[1]]);
            var secondItemSide1 = Math.ceil(secondItem[orientation[0]]);
            var secondItemSide2 = Math.ceil(secondItem[orientation[1]]);
            var isItemCross = Math.abs(firstItem[orientation[2]] - secondItem[orientation[2]]) <= 1;
            return isItemCross && (firstItemSide1 <= secondItemSide1 && firstItemSide2 > secondItemSide1 || firstItemSide1 < secondItemSide2 && firstItemSide2 >= secondItemSide2 || firstItemSide1 === secondItemSide1 && firstItemSide2 === secondItemSide2);
          }
        }, {
          key: "_getOrientation",
          value: function _getOrientation(isAllDay) {
            return isAllDay ? ["left", "right", "top"] : ["top", "bottom", "left"];
          }
        }, {
          key: "_getResultPositions",
          value: function _getResultPositions(sortedArray) {
            var _this61 = this;
            var result = [];
            var i;
            var sortedIndex = 0;
            var currentItem;
            var indexes;
            var itemIndex;
            var maxIndexInStack = 0;
            var stack = {};
            var findFreeIndex = function findFreeIndex(indexes, index) {
              var isFind = indexes.some(function (item) {
                return item === index;
              });
              if (isFind) {
                return findFreeIndex(indexes, ++index);
              }
              return index;
            };
            var createItem = function createItem(currentItem, index) {
              var currentIndex = index || 0;
              return {
                index: currentIndex,
                i: currentItem.i,
                j: currentItem.j,
                left: currentItem.left,
                right: currentItem.right,
                top: currentItem.top,
                bottom: currentItem.bottom,
                allDay: currentItem.allDay,
                sortedIndex: _this61._skipSortedIndex(currentIndex) ? null : sortedIndex++
              };
            };
            var startNewStack = function startNewStack(currentItem) {
              stack.items = [createItem(currentItem)];
              stack.left = currentItem.left;
              stack.right = currentItem.right;
              stack.top = currentItem.top;
              stack.bottom = currentItem.bottom;
              stack.allDay = currentItem.allDay;
            };
            var pushItemsInResult = function pushItemsInResult(items) {
              items.forEach(function (item) {
                result.push({
                  index: item.index,
                  count: maxIndexInStack + 1,
                  i: item.i,
                  j: item.j,
                  sortedIndex: item.sortedIndex
                });
              });
            };
            for (i = 0; i < sortedArray.length; i++) {
              currentItem = sortedArray[i];
              indexes = [];
              if (!stack.items) {
                startNewStack(currentItem);
              } else if (this._isItemsCross(stack, currentItem)) {
                stack.items.forEach(function (item) {
                  if (_this61._isItemsCross(item, currentItem)) {
                    indexes.push(item.index);
                  }
                });
                itemIndex = indexes.length ? findFreeIndex(indexes, 0) : 0;
                stack.items.push(createItem(currentItem, itemIndex));
                maxIndexInStack = Math.max(itemIndex, maxIndexInStack);
                stack.left = Math.min(stack.left, currentItem.left);
                stack.right = Math.max(stack.right, currentItem.right);
                stack.top = Math.min(stack.top, currentItem.top);
                stack.bottom = Math.max(stack.bottom, currentItem.bottom);
                stack.allDay = currentItem.allDay;
              } else {
                pushItemsInResult(stack.items);
                stack = {};
                startNewStack(currentItem);
                maxIndexInStack = 0;
              }
            }
            if (stack.items) {
              pushItemsInResult(stack.items);
            }
            return result.sort(function (a, b) {
              var columnCondition = a.j - b.j;
              var rowCondition = a.i - b.i;
              return rowCondition || columnCondition;
            });
          }
        }, {
          key: "_skipSortedIndex",
          value: function _skipSortedIndex(index) {
            return index > this._getMaxAppointmentCountPerCell() - 1;
          }
        }, {
          key: "_findIndexByKey",
          value: function _findIndexByKey(arr, iKey, jKey, iValue, jValue) {
            var result = 0;
            for (var i = 0, len = arr.length; i < len; i++) {
              if (arr[i][iKey] === iValue && arr[i][jKey] === jValue) {
                result = i;
                break;
              }
            }
            return result;
          }
        }, {
          key: "_getExtendedPositionMap",
          value: function _getExtendedPositionMap(map, positions) {
            var positionCounter = 0;
            var result = [];
            for (var i = 0, mapLength = map.length; i < mapLength; i++) {
              var resultString = [];
              for (var j = 0, itemLength = map[i].length; j < itemLength; j++) {
                map[i][j].index = positions[positionCounter].index;
                map[i][j].sortedIndex = positions[positionCounter].sortedIndex;
                map[i][j].count = positions[positionCounter++].count;
                resultString.push(map[i][j]);
                this._checkLongCompactAppointment(map[i][j], resultString);
              }
              result.push(resultString);
            }
            return result;
          }
        }, {
          key: "_checkLongCompactAppointment",
          value: function _checkLongCompactAppointment(item, result) {
            this._splitLongCompactAppointment(item, result);
            return result;
          }
        }, {
          key: "_splitLongCompactAppointment",
          value: function _splitLongCompactAppointment(item, result) {
            var appointmentCountPerCell = this._getMaxAppointmentCountPerCellByType(item.allDay);
            var compactCount = 0;
            if (void 0 !== appointmentCountPerCell && item.index > appointmentCountPerCell - 1) {
              item.isCompact = true;
              compactCount = this._getCompactAppointmentParts(item.width);
              for (var k = 1; k < compactCount; k++) {
                var compactPart = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(true, {}, item);
                compactPart.left = this._getCompactLeftCoordinate(item.left, k);
                compactPart.columnIndex += k;
                compactPart.sortedIndex = null;
                result.push(compactPart);
              }
            }
            return result;
          }
        }, {
          key: "_adjustDurationByDaylightDiff",
          value: function _adjustDurationByDaylightDiff(duration, startDate, endDate) {
            var daylightDiff = _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_5__["default"].getDaylightOffset(startDate, endDate);
            return this._needAdjustDuration(daylightDiff) ? this._calculateDurationByDaylightDiff(duration, daylightDiff) : duration;
          }
        }, {
          key: "_needAdjustDuration",
          value: function _needAdjustDuration(diff) {
            return 0 !== diff;
          }
        }, {
          key: "_calculateDurationByDaylightDiff",
          value: function _calculateDurationByDaylightDiff(duration, diff) {
            return duration + diff * toMs("minute");
          }
        }, {
          key: "_getCollectorLeftOffset",
          value: function _getCollectorLeftOffset(isAllDay) {
            if (isAllDay || !this.isApplyCompactAppointmentOffset()) {
              return 0;
            }
            var dropDownButtonWidth = this.getDropDownAppointmentWidth(this.intervalCount, isAllDay);
            var rightOffset = this._isCompactTheme() ? COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET : WEEK_VIEW_COLLECTOR_OFFSET;
            return this.cellWidth - dropDownButtonWidth - rightOffset;
          }
        }, {
          key: "_markAppointmentAsVirtual",
          value: function _markAppointmentAsVirtual(coordinates) {
            var isAllDay = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
            var countFullWidthAppointmentInCell = this._getMaxAppointmentCountPerCellByType(isAllDay);
            if (coordinates.count - countFullWidthAppointmentInCell > 0) {
              var top = coordinates.top,
                left = coordinates.left;
              var compactRender = this.isAdaptive || !isAllDay && this.supportCompactDropDownAppointments();
              coordinates.virtual = {
                left: left + this._getCollectorLeftOffset(isAllDay),
                top: top,
                width: this.getDropDownAppointmentWidth(this.intervalCount, isAllDay),
                height: this.getDropDownAppointmentHeight(),
                index: this._generateAppointmentCollectorIndex(coordinates, isAllDay),
                isAllDay: isAllDay,
                groupIndex: coordinates.groupIndex,
                isCompact: compactRender
              };
            }
          }
        }, {
          key: "isApplyCompactAppointmentOffset",
          value: function isApplyCompactAppointmentOffset() {
            return this.supportCompactDropDownAppointments();
          }
        }, {
          key: "supportCompactDropDownAppointments",
          value: function supportCompactDropDownAppointments() {
            return true;
          }
        }, {
          key: "_generateAppointmentCollectorIndex",
          value: function _generateAppointmentCollectorIndex(_ref, isAllDay) {
            var groupIndex = _ref.groupIndex,
              rowIndex = _ref.rowIndex,
              columnIndex = _ref.columnIndex;
            return "".concat(groupIndex, "-").concat(rowIndex, "-").concat(columnIndex, "-").concat(isAllDay);
          }
        }, {
          key: "_getMaxAppointmentCountPerCellByType",
          value: function _getMaxAppointmentCountPerCellByType(isAllDay) {
            var appointmentCountPerCell = this._getMaxAppointmentCountPerCell();
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isObject)(appointmentCountPerCell)) {
              return isAllDay ? appointmentCountPerCell.allDay : appointmentCountPerCell.simple;
            }
            return appointmentCountPerCell;
          }
        }, {
          key: "getDropDownAppointmentWidth",
          value: function getDropDownAppointmentWidth(intervalCount, isAllDay) {
            return this.getPositioningStrategy().getDropDownAppointmentWidth(intervalCount, isAllDay);
          }
        }, {
          key: "getDropDownAppointmentHeight",
          value: function getDropDownAppointmentHeight() {
            return this.getPositioningStrategy().getDropDownAppointmentHeight();
          }
        }, {
          key: "getDropDownButtonAdaptiveSize",
          value: function getDropDownButtonAdaptiveSize() {
            return DROP_DOWN_BUTTON_ADAPTIVE_SIZE;
          }
        }, {
          key: "getCollectorTopOffset",
          value: function getCollectorTopOffset(allDay) {
            return this.getPositioningStrategy().getCollectorTopOffset(allDay);
          }
        }, {
          key: "getCollectorLeftOffset",
          value: function getCollectorLeftOffset() {
            return this.getPositioningStrategy().getCollectorLeftOffset();
          }
        }, {
          key: "getAppointmentDataCalculator",
          value: function getAppointmentDataCalculator() {}
        }, {
          key: "getVerticalAppointmentHeight",
          value: function getVerticalAppointmentHeight(cellHeight, currentAppointmentCountInCell, maxAppointmentsPerCell) {
            var resultMaxAppointmentsPerCell = maxAppointmentsPerCell;
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isNumeric)(this.maxAppointmentsPerCell)) {
              var dynamicAppointmentCountPerCell = this._getDynamicAppointmentCountPerCell();
              var maxAppointmentCountDisplayedInCell = dynamicAppointmentCountPerCell.allDay || dynamicAppointmentCountPerCell;
              var maxAppointmentsCount = Math.max(currentAppointmentCountInCell, maxAppointmentCountDisplayedInCell);
              resultMaxAppointmentsPerCell = Math.min(maxAppointmentsCount, maxAppointmentsPerCell);
            }
            return cellHeight / resultMaxAppointmentsPerCell;
          }
        }, {
          key: "_customizeCoordinates",
          value: function _customizeCoordinates(coordinates, cellHeight, appointmentCountPerCell, topOffset, isAllDay) {
            var index = coordinates.index,
              count = coordinates.count;
            var appointmentHeight = this.getVerticalAppointmentHeight(cellHeight, count, appointmentCountPerCell);
            var appointmentTop = coordinates.top + index * appointmentHeight;
            var top = appointmentTop + topOffset;
            var width = coordinates.width;
            var left = coordinates.left;
            if (coordinates.isCompact) {
              this.isAdaptive && this._correctCollectorCoordinatesInAdaptive(coordinates, isAllDay);
              this._markAppointmentAsVirtual(coordinates, isAllDay);
            }
            return {
              height: appointmentHeight,
              width: width,
              top: top,
              left: left,
              empty: this._isAppointmentEmpty(cellHeight, width)
            };
          }
        }, {
          key: "_isAppointmentEmpty",
          value: function _isAppointmentEmpty(height, width) {
            return height < this._getAppointmentMinHeight() || width < this._getAppointmentMinWidth();
          }
        }, {
          key: "_calculateGeometryConfig",
          value: function _calculateGeometryConfig(coordinates) {
            var overlappingMode = this.maxAppointmentsPerCell;
            var offsets = this._getOffsets();
            var appointmentDefaultOffset = this._getAppointmentDefaultOffset();
            var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);
            var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);
            var maxHeight = this._getMaxHeight();
            if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isNumeric)(appointmentCountPerCell)) {
              appointmentCountPerCell = coordinates.count;
              ratio = (maxHeight - offsets.unlimited) / maxHeight;
            }
            var topOffset = (1 - ratio) * maxHeight;
            if ("auto" === overlappingMode || (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isNumeric)(overlappingMode)) {
              ratio = 1;
              maxHeight -= appointmentDefaultOffset;
              topOffset = appointmentDefaultOffset;
            }
            return {
              height: ratio * maxHeight,
              appointmentCountPerCell: appointmentCountPerCell,
              offset: topOffset
            };
          }
        }, {
          key: "_getAppointmentCount",
          value: function _getAppointmentCount(overlappingMode, coordinates) {}
        }, {
          key: "_getDefaultRatio",
          value: function _getDefaultRatio(coordinates, appointmentCountPerCell) {}
        }, {
          key: "_getOffsets",
          value: function _getOffsets() {}
        }, {
          key: "_getMaxHeight",
          value: function _getMaxHeight() {}
        }, {
          key: "_needVerifyItemSize",
          value: function _needVerifyItemSize() {
            return false;
          }
        }, {
          key: "_getMaxAppointmentCountPerCell",
          value: function _getMaxAppointmentCountPerCell() {
            if (!this._maxAppointmentCountPerCell) {
              var overlappingMode = this.maxAppointmentsPerCell;
              var appointmentCountPerCell;
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isNumeric)(overlappingMode)) {
                appointmentCountPerCell = overlappingMode;
              }
              if ("auto" === overlappingMode) {
                appointmentCountPerCell = this._getDynamicAppointmentCountPerCell();
              }
              if ("unlimited" === overlappingMode) {
                appointmentCountPerCell = void 0;
              }
              this._maxAppointmentCountPerCell = appointmentCountPerCell;
            }
            return this._maxAppointmentCountPerCell;
          }
        }, {
          key: "_getDynamicAppointmentCountPerCell",
          value: function _getDynamicAppointmentCountPerCell() {
            return this.getPositioningStrategy().getDynamicAppointmentCountPerCell();
          }
        }, {
          key: "allDaySupported",
          value: function allDaySupported() {
            return false;
          }
        }, {
          key: "_isCompactTheme",
          value: function _isCompactTheme() {
            return "compact" === ((0, _ui_themes__WEBPACK_IMPORTED_MODULE_6__.current)() || "").split(".").pop();
          }
        }, {
          key: "_getAppointmentDefaultOffset",
          value: function _getAppointmentDefaultOffset() {
            return this.getPositioningStrategy().getAppointmentDefaultOffset();
          }
        }, {
          key: "_getAppointmentDefaultHeight",
          value: function _getAppointmentDefaultHeight() {
            return this._getAppointmentHeightByTheme();
          }
        }, {
          key: "_getAppointmentMinHeight",
          value: function _getAppointmentMinHeight() {
            return this._getAppointmentDefaultHeight();
          }
        }, {
          key: "_getAppointmentHeightByTheme",
          value: function _getAppointmentHeightByTheme() {
            return this._isCompactTheme() ? COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT : APPOINTMENT_DEFAULT_HEIGHT;
          }
        }, {
          key: "_getAppointmentDefaultWidth",
          value: function _getAppointmentDefaultWidth() {
            return this.getPositioningStrategy()._getAppointmentDefaultWidth();
          }
        }, {
          key: "_getAppointmentMinWidth",
          value: function _getAppointmentMinWidth() {
            return this._getAppointmentDefaultWidth();
          }
        }, {
          key: "_needVerticalGroupBounds",
          value: function _needVerticalGroupBounds(allDay) {
            return false;
          }
        }, {
          key: "_needHorizontalGroupBounds",
          value: function _needHorizontalGroupBounds() {
            return false;
          }
        }, {
          key: "getAppointmentDurationInMs",
          value: function getAppointmentDurationInMs(apptStartDate, apptEndDate, allDay) {
            if (allDay) {
              var appointmentDuration = apptEndDate.getTime() - apptStartDate.getTime();
              var ceilQuantityOfDays = Math.ceil(appointmentDuration / toMs("day"));
              return ceilQuantityOfDays * this.visibleDayDuration;
            }
            var msInHour = toMs("hour");
            var trimmedStartDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime(apptStartDate);
            var trimmedEndDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime(apptEndDate);
            var deltaDate = trimmedEndDate - trimmedStartDate;
            var quantityOfDays = deltaDate / toMs("day") + 1;
            var dayVisibleHours = this.endDayHour - this.startDayHour;
            var appointmentDayHours = dayVisibleHours * quantityOfDays;
            var startHours = (apptStartDate - trimmedStartDate) / msInHour;
            var apptStartDelta = Math.max(0, startHours - this.startDayHour);
            var endHours = Math.max(0, (apptEndDate - trimmedEndDate) / msInHour - this.startDayHour);
            var apptEndDelta = Math.max(0, dayVisibleHours - endHours);
            var result = (appointmentDayHours - (apptStartDelta + apptEndDelta)) * msInHour;
            return result;
          }
        }, {
          key: "getPositionShift",
          value: function getPositionShift(timeShift, isAllDay) {
            return {
              top: timeShift * this.cellHeight,
              left: 0,
              cellPosition: 0
            };
          }
        }]);
        return BaseRenderingStrategy;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = BaseRenderingStrategy;

      /***/
    }),
    /***/61061: (
    /*!*********************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal.js ***!
      \*********************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_appointments_utils_getSkippedHoursInRange__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange */74418);
      /* harmony import */
      var _m_expression_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../m_expression_utils */31363);
      /* harmony import */
      var _m_strategy_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_strategy_base */5136);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DEFAULT_APPOINTMENT_HEIGHT = 60;
      var MIN_APPOINTMENT_HEIGHT = 35;
      var DROP_DOWN_BUTTON_OFFSET = 2;
      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds;
      var HorizontalRenderingStrategy = /*#__PURE__*/function (_m_strategy_base__WEB2) {
        _inherits(HorizontalRenderingStrategy, _m_strategy_base__WEB2);
        function HorizontalRenderingStrategy() {
          _classCallCheck(this, HorizontalRenderingStrategy);
          return _callSuper(this, HorizontalRenderingStrategy, arguments);
        }
        _createClass(HorizontalRenderingStrategy, [{
          key: "_needVerifyItemSize",
          value: function _needVerifyItemSize() {
            return true;
          }
        }, {
          key: "calculateAppointmentWidth",
          value: function calculateAppointmentWidth(appointment, position) {
            var cellWidth = this.cellWidth || this.getAppointmentMinSize();
            var allDay = _m_expression_utils__WEBPACK_IMPORTED_MODULE_2__.ExpressionUtils.getField(this.dataAccessors, "allDay", appointment);
            var startDate = position.info.appointment.startDate;
            var endDate = position.info.appointment.endDate;
            var normalizedEndDate = position.info.appointment.normalizedEndDate;
            var duration = this.getAppointmentDurationInMs(startDate, normalizedEndDate, allDay);
            duration = this._adjustDurationByDaylightDiff(duration, startDate, normalizedEndDate);
            var cellDuration = this.cellDurationInMinutes * toMs("minute");
            var skippedHours = (0, _renovation_ui_scheduler_view_model_appointments_utils_getSkippedHoursInRange__WEBPACK_IMPORTED_MODULE_1__["default"])(startDate, endDate, this.viewDataProvider);
            var durationInCells = (duration - skippedHours * toMs("hour")) / cellDuration;
            var width = this.cropAppointmentWidth(durationInCells * cellWidth, cellWidth);
            return width;
          }
        }, {
          key: "_needAdjustDuration",
          value: function _needAdjustDuration(diff) {
            return diff < 0;
          }
        }, {
          key: "getAppointmentGeometry",
          value: function getAppointmentGeometry(coordinates) {
            var result = this._customizeAppointmentGeometry(coordinates);
            return _get(_getPrototypeOf(HorizontalRenderingStrategy.prototype), "getAppointmentGeometry", this).call(this, result);
          }
        }, {
          key: "_customizeAppointmentGeometry",
          value: function _customizeAppointmentGeometry(coordinates) {
            var config = this._calculateGeometryConfig(coordinates);
            return this._customizeCoordinates(coordinates, config.height, config.appointmentCountPerCell, config.offset);
          }
        }, {
          key: "_getOffsets",
          value: function _getOffsets() {
            return {
              unlimited: 0,
              auto: 0
            };
          }
        }, {
          key: "_getCompactLeftCoordinate",
          value: function _getCompactLeftCoordinate(itemLeft, index) {
            var cellWidth = this.cellWidth || this.getAppointmentMinSize();
            return itemLeft + cellWidth * index;
          }
        }, {
          key: "_getMaxHeight",
          value: function _getMaxHeight() {
            return this.cellHeight || this.getAppointmentMinSize();
          }
        }, {
          key: "_getAppointmentCount",
          value: function _getAppointmentCount(overlappingMode, coordinates) {
            return this._getMaxAppointmentCountPerCellByType(false);
          }
        }, {
          key: "_getAppointmentDefaultHeight",
          value: function _getAppointmentDefaultHeight() {
            return DEFAULT_APPOINTMENT_HEIGHT;
          }
        }, {
          key: "_getAppointmentMinHeight",
          value: function _getAppointmentMinHeight() {
            return MIN_APPOINTMENT_HEIGHT;
          }
        }, {
          key: "_sortCondition",
          value: function _sortCondition(a, b) {
            return this._columnCondition(a, b);
          }
        }, {
          key: "_getOrientation",
          value: function _getOrientation() {
            return ["left", "right", "top"];
          }
        }, {
          key: "getDropDownAppointmentWidth",
          value: function getDropDownAppointmentWidth(intervalCount, isAllDay) {
            return this.cellWidth - 2 * DROP_DOWN_BUTTON_OFFSET;
          }
        }, {
          key: "getDeltaTime",
          value: function getDeltaTime(args, initialSize) {
            var deltaTime;
            var deltaWidth = args.width - initialSize.width;
            deltaTime = toMs("minute") * Math.round(deltaWidth / this.cellWidth * this.cellDurationInMinutes);
            return deltaTime;
          }
        }, {
          key: "isAllDay",
          value: function isAllDay(appointmentData) {
            return _m_expression_utils__WEBPACK_IMPORTED_MODULE_2__.ExpressionUtils.getField(this.dataAccessors, "allDay", appointmentData);
          }
        }, {
          key: "_isItemsCross",
          value: function _isItemsCross(firstItem, secondItem) {
            var orientation = this._getOrientation();
            return this._checkItemsCrossing(firstItem, secondItem, orientation);
          }
        }, {
          key: "getPositionShift",
          value: function getPositionShift(timeShift) {
            var positionShift = _get(_getPrototypeOf(HorizontalRenderingStrategy.prototype), "getPositionShift", this).call(this, timeShift);
            var left = this.cellWidth * timeShift;
            if (this.rtlEnabled) {
              left *= -1;
            }
            left += positionShift.left;
            return {
              top: 0,
              left: left,
              cellPosition: left
            };
          }
        }, {
          key: "supportCompactDropDownAppointments",
          value: function supportCompactDropDownAppointments() {
            return false;
          }
        }]);
        return HorizontalRenderingStrategy;
      }(_m_strategy_base__WEBPACK_IMPORTED_MODULE_3__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = HorizontalRenderingStrategy;

      /***/
    }),
    /***/74812: (
    /*!***************************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal_month.js ***!
      \***************************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _workspaces_helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../workspaces/helpers/m_position_helper */33901);
      /* harmony import */
      var _m_strategy_horizontal_month_line__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_strategy_horizontal_month_line */69254);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal_month.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var MONTH_APPOINTMENT_HEIGHT_RATIO = .6;
      var MONTH_APPOINTMENT_MIN_OFFSET = 26;
      var MONTH_APPOINTMENT_MAX_OFFSET = 30;
      var MONTH_DROPDOWN_APPOINTMENT_MIN_RIGHT_OFFSET = 36;
      var MONTH_DROPDOWN_APPOINTMENT_MAX_RIGHT_OFFSET = 60;
      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds;
      var HorizontalMonthRenderingStrategy = /*#__PURE__*/function (_m_strategy_horizonta) {
        _inherits(HorizontalMonthRenderingStrategy, _m_strategy_horizonta);
        function HorizontalMonthRenderingStrategy() {
          _classCallCheck(this, HorizontalMonthRenderingStrategy);
          return _callSuper(this, HorizontalMonthRenderingStrategy, arguments);
        }
        _createClass(HorizontalMonthRenderingStrategy, [{
          key: "endViewDate",
          get: function get() {
            return this.options.endViewDate;
          }
        }, {
          key: "adaptivityEnabled",
          get: function get() {
            return this.options.adaptivityEnabled;
          }
        }, {
          key: "DOMMetaData",
          get: function get() {
            return this.options.DOMMetaData;
          }
        }, {
          key: "_getLeftPosition",
          value: function _getLeftPosition(settings) {
            var fullWeekAppointmentWidth = this.getGroupWidth(settings.groupIndex);
            return this._calculateMultiWeekAppointmentLeftOffset(settings.hMax, fullWeekAppointmentWidth);
          }
        }, {
          key: "_getChunkCount",
          value: function _getChunkCount(fullChunksWidth, firstChunkWidth, weekWidth, settings) {
            var groupIndex = settings.groupIndex,
              startDate = settings.info.appointment.startDate;
            var rawFullChunksWidth = fullChunksWidth - firstChunkWidth + weekWidth;
            var allChunksCount = Math.ceil(rawFullChunksWidth / weekWidth);
            var viewRowIndex = this._tryGetRowIndexInView(startDate);
            if (void 0 !== viewRowIndex) {
              var viewChunksCount = this.viewDataProvider.getRowCountInGroup(groupIndex);
              var allowedChunksCount = viewChunksCount - viewRowIndex;
              return allChunksCount <= allowedChunksCount ? allChunksCount : allowedChunksCount;
            }
            return allChunksCount;
          }
        }, {
          key: "_tryGetRowIndexInView",
          value: function _tryGetRowIndexInView(positionStartDate) {
            var _a;
            var columnsCount = this.viewDataProvider.getColumnsCount();
            if ((null === (_a = this.options.dataRange) || void 0 === _a ? void 0 : _a.length) < 1 || !columnsCount) {
              return;
            }
            var _this$options$dateRan = _slicedToArray(this.options.dateRange, 1),
              startViewDate = _this$options$dateRan[0];
            var dayDurationMs = toMs("day");
            var timeFromStart = positionStartDate.getTime() - startViewDate.getTime();
            return Math.floor(timeFromStart / dayDurationMs / columnsCount);
          }
        }, {
          key: "_getChunkWidths",
          value: function _getChunkWidths(geometry, settings, weekWidth) {
            var firstChunkWidth = geometry.reducedWidth;
            var fullChunksWidth = Math.floor(geometry.sourceAppointmentWidth);
            var widthWithoutFirstChunk = fullChunksWidth - firstChunkWidth;
            return [firstChunkWidth, fullChunksWidth, widthWithoutFirstChunk];
          }
        }, {
          key: "_getTailChunkSettings",
          value: function _getTailChunkSettings(withoutFirstChunkWidth, weekWidth, leftPosition) {
            var tailChunkWidth = withoutFirstChunkWidth % weekWidth || weekWidth;
            var rtlPosition = leftPosition + (weekWidth - tailChunkWidth);
            var tailChunkLeftPosition = this.rtlEnabled ? rtlPosition : leftPosition;
            return [tailChunkWidth, tailChunkLeftPosition];
          }
        }, {
          key: "_getAppointmentParts",
          value: function _getAppointmentParts(geometry, settings) {
            var result = [];
            var weekWidth = Math.round(this.getGroupWidth(settings.groupIndex));
            var _this$_getChunkWidths = this._getChunkWidths(geometry, settings, weekWidth),
              _this$_getChunkWidths2 = _slicedToArray(_this$_getChunkWidths, 3),
              firstChunkWidth = _this$_getChunkWidths2[0],
              fullChunksWidth = _this$_getChunkWidths2[1],
              withoutFirstChunkWidth = _this$_getChunkWidths2[2];
            var leftPosition = this._getLeftPosition(settings);
            var hasTailChunk = this.endViewDate > settings.info.appointment.endDate;
            var chunkCount = this._getChunkCount(fullChunksWidth, firstChunkWidth, weekWidth, settings);
            var _this$_getTailChunkSe = this._getTailChunkSettings(withoutFirstChunkWidth, weekWidth, leftPosition),
              _this$_getTailChunkSe2 = _slicedToArray(_this$_getTailChunkSe, 2),
              tailChunkWidth = _this$_getTailChunkSe2[0],
              tailChunkLeftPosition = _this$_getTailChunkSe2[1];
            for (var chunkIndex = 1; chunkIndex < chunkCount; chunkIndex++) {
              var topPosition = settings.top + this.cellHeight * chunkIndex;
              var isTailChunk = hasTailChunk && chunkIndex === chunkCount - 1;
              result.push((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, settings), {
                top: topPosition,
                left: isTailChunk ? tailChunkLeftPosition : leftPosition,
                height: geometry.height,
                width: isTailChunk ? tailChunkWidth : weekWidth,
                appointmentReduced: isTailChunk ? "tail" : "body",
                rowIndex: ++settings.rowIndex,
                columnIndex: 0
              }));
            }
            return result;
          }
        }, {
          key: "_calculateMultiWeekAppointmentLeftOffset",
          value: function _calculateMultiWeekAppointmentLeftOffset(max, width) {
            return this.rtlEnabled ? max : max - width;
          }
        }, {
          key: "getGroupWidth",
          value: function getGroupWidth(groupIndex) {
            return (0, _workspaces_helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_2__.getGroupWidth)(groupIndex, this.viewDataProvider, {
              intervalCount: this.options.intervalCount,
              currentDate: this.options.currentDate,
              viewType: this.options.viewType,
              hoursInterval: this.options.hoursInterval,
              startDayHour: this.options.startDayHour,
              endDayHour: this.options.endDayHour,
              isVirtualScrolling: this.isVirtualScrolling,
              rtlEnabled: this.rtlEnabled,
              DOMMetaData: this.DOMMetaData
            });
          }
        }, {
          key: "_getAppointmentDefaultHeight",
          value: function _getAppointmentDefaultHeight() {
            return this._getAppointmentHeightByTheme();
          }
        }, {
          key: "_getAppointmentMinHeight",
          value: function _getAppointmentMinHeight() {
            return this._getAppointmentDefaultHeight();
          }
        }, {
          key: "_columnCondition",
          value: function _columnCondition(a, b) {
            var conditions = this._getConditions(a, b);
            return conditions.rowCondition || conditions.columnCondition || conditions.cellPositionCondition;
          }
        }, {
          key: "createTaskPositionMap",
          value: function createTaskPositionMap(items) {
            return _get(_getPrototypeOf(HorizontalMonthRenderingStrategy.prototype), "createTaskPositionMap", this).call(this, items, true);
          }
        }, {
          key: "_getSortedPositions",
          value: function _getSortedPositions(map) {
            return _get(_getPrototypeOf(HorizontalMonthRenderingStrategy.prototype), "_getSortedPositions", this).call(this, map, true);
          }
        }, {
          key: "_getDefaultRatio",
          value: function _getDefaultRatio() {
            return MONTH_APPOINTMENT_HEIGHT_RATIO;
          }
        }, {
          key: "_getOffsets",
          value: function _getOffsets() {
            return {
              unlimited: MONTH_APPOINTMENT_MIN_OFFSET,
              auto: MONTH_APPOINTMENT_MAX_OFFSET
            };
          }
        }, {
          key: "getDropDownAppointmentWidth",
          value: function getDropDownAppointmentWidth(intervalCount, isAllDay) {
            if (this.adaptivityEnabled) {
              return this.getDropDownButtonAdaptiveSize();
            }
            var offset = intervalCount > 1 ? MONTH_DROPDOWN_APPOINTMENT_MAX_RIGHT_OFFSET : MONTH_DROPDOWN_APPOINTMENT_MIN_RIGHT_OFFSET;
            return this.cellWidth - offset;
          }
        }, {
          key: "needCorrectAppointmentDates",
          value: function needCorrectAppointmentDates() {
            return false;
          }
        }, {
          key: "_needVerticalGroupBounds",
          value: function _needVerticalGroupBounds() {
            return false;
          }
        }, {
          key: "_needHorizontalGroupBounds",
          value: function _needHorizontalGroupBounds() {
            return true;
          }
        }, {
          key: "getPositionShift",
          value: function getPositionShift(timeShift) {
            return {
              cellPosition: timeShift * this.cellWidth,
              top: 0,
              left: 0
            };
          }
        }]);
        return HorizontalMonthRenderingStrategy;
      }(_m_strategy_horizontal_month_line__WEBPACK_IMPORTED_MODULE_3__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = HorizontalMonthRenderingStrategy;

      /***/
    }),
    /***/69254: (
    /*!********************************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal_month_line.js ***!
      \********************************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _data_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../data/query */3398);
      /* harmony import */
      var _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../data_provider/m_utils */57534);
      /* harmony import */
      var _m_strategy_horizontal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_strategy_horizontal */61061);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_horizontal_month_line.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var HOURS_IN_DAY = 24;
      var MINUTES_IN_HOUR = 60;
      var MILLISECONDS_IN_MINUTE = 6e4;
      var ZERO_APPOINTMENT_DURATION_IN_DAYS = 1;
      var HorizontalMonthLineRenderingStrategy = /*#__PURE__*/function (_m_strategy_horizonta2) {
        _inherits(HorizontalMonthLineRenderingStrategy, _m_strategy_horizonta2);
        function HorizontalMonthLineRenderingStrategy() {
          _classCallCheck(this, HorizontalMonthLineRenderingStrategy);
          return _callSuper(this, HorizontalMonthLineRenderingStrategy, arguments);
        }
        _createClass(HorizontalMonthLineRenderingStrategy, [{
          key: "calculateAppointmentWidth",
          value: function calculateAppointmentWidth(appointment, position) {
            var startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(position.info.appointment.startDate);
            var normalizedEndDate = position.info.appointment.normalizedEndDate;
            var cellWidth = this.cellWidth || this.getAppointmentMinSize();
            var duration = Math.ceil(this._getDurationInDays(startDate, normalizedEndDate));
            var width = this.cropAppointmentWidth(duration * cellWidth, cellWidth);
            if (this.isVirtualScrolling) {
              var skippedDays = this.viewDataProvider.getSkippedDaysCount(position.groupIndex, startDate, normalizedEndDate, duration);
              width -= skippedDays * cellWidth;
            }
            return width;
          }
        }, {
          key: "_getDurationInDays",
          value: function _getDurationInDays(startDate, endDate) {
            var adjustedDuration = this._adjustDurationByDaylightDiff(endDate.getTime() - startDate.getTime(), startDate, endDate);
            return adjustedDuration / _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds("day") || ZERO_APPOINTMENT_DURATION_IN_DAYS;
          }
        }, {
          key: "getDeltaTime",
          value: function getDeltaTime(args, initialSize) {
            return HOURS_IN_DAY * MINUTES_IN_HOUR * MILLISECONDS_IN_MINUTE * this._getDeltaWidth(args, initialSize);
          }
        }, {
          key: "isAllDay",
          value: function isAllDay() {
            return false;
          }
        }, {
          key: "createTaskPositionMap",
          value: function createTaskPositionMap(items, skipSorting) {
            if (!skipSorting) {
              (0, _data_provider_m_utils__WEBPACK_IMPORTED_MODULE_2__.sortAppointmentsByStartDate)(items, this.dataAccessors);
            }
            return _get(_getPrototypeOf(HorizontalMonthLineRenderingStrategy.prototype), "createTaskPositionMap", this).call(this, items);
          }
        }, {
          key: "_getSortedPositions",
          value: function _getSortedPositions(map, skipSorting) {
            var result = _get(_getPrototypeOf(HorizontalMonthLineRenderingStrategy.prototype), "_getSortedPositions", this).call(this, map);
            if (!skipSorting) {
              result = (0, _data_query__WEBPACK_IMPORTED_MODULE_1__["default"])(result).sortBy("top").thenBy("left").thenBy("cellPosition").thenBy("i").toArray();
            }
            return result;
          }
        }, {
          key: "needCorrectAppointmentDates",
          value: function needCorrectAppointmentDates() {
            return false;
          }
        }, {
          key: "getPositionShift",
          value: function getPositionShift(timeShift) {
            return {
              top: 0,
              left: 0,
              cellPosition: 0
            };
          }
        }]);
        return HorizontalMonthLineRenderingStrategy;
      }(_m_strategy_horizontal__WEBPACK_IMPORTED_MODULE_3__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = HorizontalMonthLineRenderingStrategy;

      /***/
    }),
    /***/21163: (
    /*!*******************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_vertical.js ***!
      \*******************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../core/utils/math */78148);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../core/utils/type */33275);
      /* harmony import */
      var _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay */89448);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_appointments_utils_getSkippedHoursInRange__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange */74418);
      /* harmony import */
      var _ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../../ui/scheduler/utils.timeZone */53374);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../m_appointment_adapter */91634);
      /* harmony import */
      var _m_expression_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../m_expression_utils */31363);
      /* harmony import */
      var _m_strategy_base__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ./m_strategy_base */5136);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_vertical.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var ALLDAY_APPOINTMENT_MIN_VERTICAL_OFFSET = 5;
      var ALLDAY_APPOINTMENT_MAX_VERTICAL_OFFSET = 20;
      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds;
      var VerticalRenderingStrategy = /*#__PURE__*/function (_m_strategy_base__WEB3) {
        _inherits(VerticalRenderingStrategy, _m_strategy_base__WEB3);
        function VerticalRenderingStrategy() {
          _classCallCheck(this, VerticalRenderingStrategy);
          return _callSuper(this, VerticalRenderingStrategy, arguments);
        }
        _createClass(VerticalRenderingStrategy, [{
          key: "getDeltaTime",
          value: function getDeltaTime(args, initialSize, appointment) {
            var deltaTime = 0;
            if (this.isAllDay(appointment)) {
              deltaTime = this._getDeltaWidth(args, initialSize) * toMs("day");
            } else {
              var deltaHeight = args.height - initialSize.height;
              deltaTime = toMs("minute") * Math.round(deltaHeight / this.cellHeight * this.cellDurationInMinutes);
            }
            return deltaTime;
          }
        }, {
          key: "_correctCollectorCoordinatesInAdaptive",
          value: function _correctCollectorCoordinatesInAdaptive(coordinates, isAllDay) {
            if (isAllDay) {
              _get(_getPrototypeOf(VerticalRenderingStrategy.prototype), "_correctCollectorCoordinatesInAdaptive", this).call(this, coordinates, isAllDay);
            } else if (0 === this._getMaxAppointmentCountPerCellByType()) {
              var cellHeight = this.cellHeight;
              var cellWidth = this.cellWidth;
              coordinates.top += (cellHeight - this.getDropDownButtonAdaptiveSize()) / 2;
              coordinates.left += (cellWidth - this.getDropDownButtonAdaptiveSize()) / 2;
            }
          }
        }, {
          key: "getAppointmentGeometry",
          value: function getAppointmentGeometry(coordinates) {
            var geometry = null;
            if (coordinates.allDay) {
              geometry = this._getAllDayAppointmentGeometry(coordinates);
            } else {
              geometry = this.isAdaptive && coordinates.isCompact ? this._getAdaptiveGeometry(coordinates) : this._getVerticalAppointmentGeometry(coordinates);
            }
            return _get(_getPrototypeOf(VerticalRenderingStrategy.prototype), "getAppointmentGeometry", this).call(this, geometry);
          }
        }, {
          key: "_getAdaptiveGeometry",
          value: function _getAdaptiveGeometry(coordinates) {
            var config = this._calculateGeometryConfig(coordinates);
            return this._customizeCoordinates(coordinates, config.height, config.appointmentCountPerCell, config.offset);
          }
        }, {
          key: "_getItemPosition",
          value: function _getItemPosition(appointment) {
            var allDay = this.isAllDay(appointment);
            if (allDay) {
              return _get(_getPrototypeOf(VerticalRenderingStrategy.prototype), "_getItemPosition", this).call(this, appointment);
            }
            var adapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_8__.createAppointmentAdapter)(appointment, this.dataAccessors, this.timeZoneCalculator);
            var isRecurring = !!adapter.recurrenceRule;
            var appointmentStartDate = adapter.calculateStartDate("toGrid");
            var appointmentEndDate = adapter.calculateEndDate("toGrid");
            var appointmentDuration = appointmentEndDate - appointmentStartDate;
            var appointmentBeginInCurrentView = this.options.startViewDate < appointmentStartDate;
            var isAppointmentTakesSeveralDays = !_ui_scheduler_utils_timeZone__WEBPACK_IMPORTED_MODULE_7__["default"].isSameAppointmentDates(appointmentStartDate, appointmentEndDate);
            var settings = this.generateAppointmentSettings(appointment);
            var result = [];
            for (var j = 0; j < settings.length; j++) {
              var currentSetting = settings[j];
              var height = this.calculateAppointmentHeight(appointment, currentSetting);
              var width = this.calculateAppointmentWidth(appointment, currentSetting);
              var resultHeight = height;
              var appointmentReduced = null;
              var multiDaysAppointmentParts = [];
              var currentMaxAllowedPosition = currentSetting.vMax;
              if (this._isMultiViewAppointment(currentSetting, height) || isAppointmentTakesSeveralDays && !isRecurring) {
                var trimmedStartDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime(appointmentStartDate);
                var trimmedSettingStartDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime(currentSetting.info.appointment.startDate);
                var reduceHead = trimmedStartDate <= trimmedSettingStartDate || isRecurring;
                if (reduceHead) {
                  resultHeight = this._reduceMultiDayAppointment(height, {
                    top: currentSetting.top,
                    bottom: currentMaxAllowedPosition
                  });
                  multiDaysAppointmentParts = this._getAppointmentParts({
                    sourceAppointmentHeight: height,
                    reducedHeight: resultHeight,
                    width: width
                  }, currentSetting);
                }
                var _currentSetting$info$ = currentSetting.info.appointment,
                  currentSettingStartDate = _currentSetting$info$.startDate,
                  currentSettingNormalizedEndDate = _currentSetting$info$.normalizedEndDate;
                var currentSettingDuration = currentSettingNormalizedEndDate - currentSettingStartDate;
                var hasNextParts = currentSettingDuration < appointmentDuration;
                appointmentReduced = hasNextParts ? appointmentBeginInCurrentView ? "head" : "body" : appointmentBeginInCurrentView ? "head" : "tail";
              }
              (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(currentSetting, {
                height: resultHeight,
                width: width,
                allDay: allDay,
                appointmentReduced: appointmentReduced
              });
              result = this._getAppointmentPartsPosition(multiDaysAppointmentParts, currentSetting, result);
            }
            return result;
          }
        }, {
          key: "_isMultiViewAppointment",
          value: function _isMultiViewAppointment(_ref, height) {
            var vMax = _ref.vMax,
              top = _ref.top;
            var fullAppointmentHeight = (0, _core_utils_math__WEBPACK_IMPORTED_MODULE_3__.roundFloatPart)(height, 2);
            var remainingHeight = (0, _core_utils_math__WEBPACK_IMPORTED_MODULE_3__.roundFloatPart)(vMax - top, 2);
            return fullAppointmentHeight > remainingHeight;
          }
        }, {
          key: "_reduceMultiDayAppointment",
          value: function _reduceMultiDayAppointment(sourceAppointmentHeight, bound) {
            return Math.min(sourceAppointmentHeight, bound.bottom - Math.floor(bound.top));
          }
        }, {
          key: "_getGroupHeight",
          value: function _getGroupHeight() {
            return this.cellHeight * this.rowCount;
          }
        }, {
          key: "_getGroupTopOffset",
          value: function _getGroupTopOffset(appointmentSettings) {
            var groupIndex = appointmentSettings.groupIndex;
            var groupTop = Math.max(0, this.positionHelper.getGroupTop({
              groupIndex: groupIndex,
              showAllDayPanel: this.showAllDayPanel,
              isGroupedAllDayPanel: this.isGroupedAllDayPanel
            }));
            var allDayPanelOffset = this.positionHelper.getOffsetByAllDayPanel({
              groupIndex: groupIndex,
              supportAllDayRow: this.allDaySupported(),
              showAllDayPanel: this.showAllDayPanel
            });
            var appointmentGroupTopOffset = appointmentSettings.top - groupTop - allDayPanelOffset;
            return appointmentGroupTopOffset;
          }
        }, {
          key: "_getTailHeight",
          value: function _getTailHeight(appointmentGeometry, appointmentSettings) {
            if (!this.isVirtualScrolling) {
              return appointmentGeometry.sourceAppointmentHeight - appointmentGeometry.reducedHeight;
            }
            var appointmentGroupTopOffset = this._getGroupTopOffset(appointmentSettings);
            var sourceAppointmentHeight = appointmentGeometry.sourceAppointmentHeight;
            var groupHeight = this._getGroupHeight();
            var tailHeight = appointmentGroupTopOffset + sourceAppointmentHeight - groupHeight;
            return tailHeight;
          }
        }, {
          key: "_getAppointmentParts",
          value: function _getAppointmentParts(appointmentGeometry, appointmentSettings) {
            var width = appointmentGeometry.width;
            var result = [];
            var currentPartTop = Math.max(0, this.positionHelper.getGroupTop({
              groupIndex: appointmentSettings.groupIndex,
              showAllDayPanel: this.showAllDayPanel,
              isGroupedAllDayPanel: this.isGroupedAllDayPanel
            }));
            var cellsDiff = this.isGroupedByDate ? this.groupCount : 1;
            var offset = this.cellWidth * cellsDiff;
            var allDayPanelOffset = this.positionHelper.getOffsetByAllDayPanel({
              groupIndex: appointmentSettings.groupIndex,
              supportAllDayRow: this.allDaySupported(),
              showAllDayPanel: this.showAllDayPanel
            });
            currentPartTop += allDayPanelOffset;
            var minHeight = this.getAppointmentMinSize();
            var vMax = appointmentSettings.vMax,
              hMax = appointmentSettings.hMax;
            var hasTailPart = this.options.endViewDate > appointmentSettings.info.appointment.endDate;
            var left = Math.round(appointmentSettings.left + offset);
            var tailHeight = this._getTailHeight(appointmentGeometry, appointmentSettings);
            while (tailHeight > 0 && left < hMax) {
              tailHeight = Math.max(minHeight, tailHeight);
              var columnIndex = appointmentSettings.columnIndex + cellsDiff;
              var height = Math.min(tailHeight, vMax);
              result.push((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, appointmentSettings), {
                top: currentPartTop,
                left: left,
                height: height,
                width: width,
                appointmentReduced: "body",
                rowIndex: 0,
                columnIndex: columnIndex
              }));
              left += offset;
              tailHeight -= vMax;
            }
            if (hasTailPart && result.length > 0) {
              result[result.length - 1].appointmentReduced = "tail";
            }
            return result;
          }
        }, {
          key: "_getMinuteHeight",
          value: function _getMinuteHeight() {
            return this.cellHeight / this.cellDurationInMinutes;
          }
        }, {
          key: "_getCompactLeftCoordinate",
          value: function _getCompactLeftCoordinate(itemLeft, index) {
            var cellWidth = this.cellWidth || this.getAppointmentMinSize();
            return itemLeft + (1 + cellWidth) * index;
          }
        }, {
          key: "_getVerticalAppointmentGeometry",
          value: function _getVerticalAppointmentGeometry(coordinates) {
            var config = this._calculateVerticalGeometryConfig(coordinates);
            return this._customizeVerticalCoordinates(coordinates, config.width, config.appointmentCountPerCell, config.offset);
          }
        }, {
          key: "_customizeVerticalCoordinates",
          value: function _customizeVerticalCoordinates(coordinates, width, appointmentCountPerCell, topOffset, isAllDay) {
            var appointmentWidth = Math.max(width / appointmentCountPerCell, width / coordinates.count);
            var height = coordinates.height;
            var appointmentLeft = coordinates.left + coordinates.index * appointmentWidth;
            var top = coordinates.top;
            if (coordinates.isCompact) {
              this._markAppointmentAsVirtual(coordinates, isAllDay);
            }
            return {
              height: height,
              width: appointmentWidth,
              top: top,
              left: appointmentLeft,
              empty: this._isAppointmentEmpty(height, width)
            };
          }
        }, {
          key: "_calculateVerticalGeometryConfig",
          value: function _calculateVerticalGeometryConfig(coordinates) {
            var overlappingMode = this.maxAppointmentsPerCell;
            var offsets = this._getOffsets();
            var appointmentDefaultOffset = this._getAppointmentDefaultOffset();
            var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);
            var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);
            var maxWidth = this._getMaxWidth();
            if (!appointmentCountPerCell) {
              appointmentCountPerCell = coordinates.count;
              ratio = (maxWidth - offsets.unlimited) / maxWidth;
            }
            var topOffset = (1 - ratio) * maxWidth;
            if ("auto" === overlappingMode || (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isNumeric)(overlappingMode)) {
              ratio = 1;
              maxWidth -= appointmentDefaultOffset;
              topOffset = 0;
            }
            return {
              width: ratio * maxWidth,
              appointmentCountPerCell: appointmentCountPerCell,
              offset: topOffset
            };
          }
        }, {
          key: "_getMaxWidth",
          value: function _getMaxWidth() {
            return this.cellWidth;
          }
        }, {
          key: "isAllDay",
          value: function isAllDay(appointmentData) {
            return (0, _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_5__.getAppointmentTakesAllDay)((0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_8__.createAppointmentAdapter)(appointmentData, this.dataAccessors, this.timeZoneCalculator), this.startDayHour, this.endDayHour, this.allDayPanelMode);
          }
        }, {
          key: "_getAppointmentMaxWidth",
          value: function _getAppointmentMaxWidth() {
            return this.cellWidth - this._getAppointmentDefaultOffset();
          }
        }, {
          key: "calculateAppointmentWidth",
          value: function calculateAppointmentWidth(appointment, position) {
            if (!this.isAllDay(appointment)) {
              return 0;
            }
            var startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime(position.info.appointment.startDate);
            var normalizedEndDate = position.info.appointment.normalizedEndDate;
            var cellWidth = this.cellWidth || this.getAppointmentMinSize();
            var durationInHours = (normalizedEndDate.getTime() - startDate.getTime()) / toMs("hour");
            var skippedHours = (0, _renovation_ui_scheduler_view_model_appointments_utils_getSkippedHoursInRange__WEBPACK_IMPORTED_MODULE_6__["default"])(position.info.appointment.startDate, position.info.appointment.endDate, this.viewDataProvider);
            var width = Math.ceil((durationInHours - skippedHours) / 24) * cellWidth;
            width = this.cropAppointmentWidth(width, cellWidth);
            return width;
          }
        }, {
          key: "calculateAppointmentHeight",
          value: function calculateAppointmentHeight(appointment, position) {
            if (this.isAllDay(appointment)) {
              return 0;
            }
            var startDate = position.info.appointment.startDate;
            var normalizedEndDate = position.info.appointment.normalizedEndDate;
            var allDay = _m_expression_utils__WEBPACK_IMPORTED_MODULE_9__.ExpressionUtils.getField(this.dataAccessors, "allDay", appointment);
            var duration = this.getAppointmentDurationInMs(startDate, normalizedEndDate, allDay);
            var durationInMinutes = this._adjustDurationByDaylightDiff(duration, startDate, normalizedEndDate) / toMs("minute");
            var height = durationInMinutes * this._getMinuteHeight();
            return height;
          }
        }, {
          key: "getDirection",
          value: function getDirection() {
            return "vertical";
          }
        }, {
          key: "_sortCondition",
          value: function _sortCondition(a, b) {
            if (!!a.allDay !== !!b.allDay) {
              return a.allDay ? 1 : -1;
            }
            var isAllDay = a.allDay && b.allDay;
            return "vertical" === this.groupOrientation && isAllDay ? this._columnCondition(a, b) : this._rowCondition(a, b);
          }
        }, {
          key: "allDaySupported",
          value: function allDaySupported() {
            return true;
          }
        }, {
          key: "_getAllDayAppointmentGeometry",
          value: function _getAllDayAppointmentGeometry(coordinates) {
            var config = this._calculateGeometryConfig(coordinates);
            return this._customizeCoordinates(coordinates, config.height, config.appointmentCountPerCell, config.offset, true);
          }
        }, {
          key: "_calculateGeometryConfig",
          value: function _calculateGeometryConfig(coordinates) {
            if (!this.allowResizing || !this.allowAllDayResizing) {
              coordinates.skipResizing = true;
            }
            var config = _get(_getPrototypeOf(VerticalRenderingStrategy.prototype), "_calculateGeometryConfig", this).call(this, coordinates);
            var minAppointmentCountPerCell = Math.min(config.appointmentCountPerCell, this._getDynamicAppointmentCountPerCell().allDay);
            if (coordinates.allDay && coordinates.count <= minAppointmentCountPerCell) {
              config.offset = 0;
            }
            return config;
          }
        }, {
          key: "_getAppointmentCount",
          value: function _getAppointmentCount(overlappingMode, coordinates) {
            return "auto" !== overlappingMode && 1 === coordinates.count && !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isNumeric)(overlappingMode) ? coordinates.count : this._getMaxAppointmentCountPerCellByType(coordinates.allDay);
          }
        }, {
          key: "_getDefaultRatio",
          value: function _getDefaultRatio(coordinates, appointmentCountPerCell) {
            return coordinates.count > this.appointmentCountPerCell ? .65 : 1;
          }
        }, {
          key: "_getOffsets",
          value: function _getOffsets() {
            return {
              unlimited: ALLDAY_APPOINTMENT_MIN_VERTICAL_OFFSET,
              auto: ALLDAY_APPOINTMENT_MAX_VERTICAL_OFFSET
            };
          }
        }, {
          key: "_getMaxHeight",
          value: function _getMaxHeight() {
            return this.allDayHeight || this.getAppointmentMinSize();
          }
        }, {
          key: "_needVerticalGroupBounds",
          value: function _needVerticalGroupBounds(allDay) {
            return !allDay;
          }
        }, {
          key: "_needHorizontalGroupBounds",
          value: function _needHorizontalGroupBounds() {
            return false;
          }
        }, {
          key: "getPositionShift",
          value: function getPositionShift(timeShift, isAllDay) {
            if (!isAllDay && this.isAdaptive && 0 === this._getMaxAppointmentCountPerCellByType(isAllDay)) {
              return {
                top: 0,
                left: 0,
                cellPosition: 0
              };
            }
            return _get(_getPrototypeOf(VerticalRenderingStrategy.prototype), "getPositionShift", this).call(this, timeShift, isAllDay);
          }
        }]);
        return VerticalRenderingStrategy;
      }(_m_strategy_base__WEBPACK_IMPORTED_MODULE_10__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = VerticalRenderingStrategy;

      /***/
    }),
    /***/48926: (
    /*!***************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_week.js ***!
      \***************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _m_strategy_vertical__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./m_strategy_vertical */21163);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_week.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var WeekAppointmentRenderingStrategy = /*#__PURE__*/function (_m_strategy_vertical_) {
        _inherits(WeekAppointmentRenderingStrategy, _m_strategy_vertical_);
        function WeekAppointmentRenderingStrategy() {
          _classCallCheck(this, WeekAppointmentRenderingStrategy);
          return _callSuper(this, WeekAppointmentRenderingStrategy, arguments);
        }
        _createClass(WeekAppointmentRenderingStrategy, [{
          key: "isApplyCompactAppointmentOffset",
          value: function isApplyCompactAppointmentOffset() {
            if (this.isAdaptive && 0 === this._getMaxAppointmentCountPerCellByType()) {
              return false;
            }
            return this.supportCompactDropDownAppointments();
          }
        }]);
        return WeekAppointmentRenderingStrategy;
      }(_m_strategy_vertical__WEBPACK_IMPORTED_MODULE_0__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = WeekAppointmentRenderingStrategy;

      /***/
    }),
    /***/4937: (
    /*!******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/resizing/m_core.js ***!
      \******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getAppointmentDateRange": function getAppointmentDateRange() {
          return /* binding */_getAppointmentDateRange;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./m_utils */86012);
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/resizing/m_core.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var getAppointmentLeftCell = function getAppointmentLeftCell(options) {
        var cellHeight = options.cellHeight,
          cellWidth = options.cellWidth,
          viewDataProvider = options.viewDataProvider,
          relativeAppointmentRect = options.relativeAppointmentRect,
          appointmentSettings = options.appointmentSettings,
          rtlEnabled = options.rtlEnabled;
        var cellRowIndex = Math.floor(relativeAppointmentRect.top / cellHeight);
        var cellColumnIndex = Math.round(relativeAppointmentRect.left / cellWidth);
        var leftCell = viewDataProvider.getCellData(cellRowIndex, cellColumnIndex, appointmentSettings.allDay, rtlEnabled);
        return leftCell;
      };
      var getDateRangeHorizontal = function getDateRangeHorizontal(options) {
        var cellWidth = options.cellWidth,
          cellCountInRow = options.cellCountInRow,
          relativeAppointmentRect = options.relativeAppointmentRect,
          viewDataProvider = options.viewDataProvider,
          appointmentSettings = options.appointmentSettings,
          handles = options.handles;
        var appointmentFirstCell = getAppointmentLeftCell(options);
        var appointmentCellsAmount = Math.round(relativeAppointmentRect.width / cellWidth);
        var appointmentLastCellIndex = appointmentFirstCell.index + (appointmentCellsAmount - 1);
        var _appointmentSettings$ = appointmentSettings.info,
          allDay = _appointmentSettings$.allDay,
          sourceAppointment = _appointmentSettings$.sourceAppointment;
        if (handles.left) {
          var startDate = (0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeStartDate)(options, appointmentFirstCell.startDate, sourceAppointment.startDate);
          return {
            startDate: startDate,
            endDate: sourceAppointment.endDate
          };
        }
        var appointmentRowIndex = Math.floor(appointmentLastCellIndex / cellCountInRow);
        var appointmentColumnIndex = appointmentLastCellIndex % cellCountInRow;
        var appointmentLastCell = viewDataProvider.getCellData(appointmentRowIndex, appointmentColumnIndex, allDay);
        var endDate = !options.considerTime ? appointmentLastCell.endDate : appointmentLastCell.startDate;
        endDate = (0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeEndDate)(options, endDate, sourceAppointment.endDate);
        return {
          startDate: sourceAppointment.startDate,
          endDate: endDate
        };
      };
      var getDateRangeHorizontalRTL = function getDateRangeHorizontalRTL(options) {
        var viewDataProvider = options.viewDataProvider,
          cellCountInRow = options.cellCountInRow,
          appointmentSettings = options.appointmentSettings,
          handles = options.handles,
          cellWidth = options.cellWidth,
          relativeAppointmentRect = options.relativeAppointmentRect;
        var appointmentLastCell = getAppointmentLeftCell(options);
        var _appointmentSettings$2 = appointmentSettings.info,
          allDay = _appointmentSettings$2.allDay,
          sourceAppointment = _appointmentSettings$2.sourceAppointment;
        if (handles.right) {
          var appointmentLastCellIndex = appointmentLastCell.index;
          var appointmentCellsAmount = Math.round(relativeAppointmentRect.width / cellWidth);
          var appointmentFirstCellIndex = appointmentLastCellIndex - appointmentCellsAmount + 1;
          var appointmentRowIndex = Math.floor(appointmentLastCellIndex / cellCountInRow);
          var appointmentFirstCell = viewDataProvider.getCellData(appointmentRowIndex, appointmentFirstCellIndex, allDay, true);
          var startDate = (0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeStartDate)(options, appointmentFirstCell.startDate, sourceAppointment.endDate);
          return {
            startDate: startDate,
            endDate: sourceAppointment.endDate
          };
        }
        var endDate = !options.considerTime ? appointmentLastCell.endDate : appointmentLastCell.startDate;
        endDate = (0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeEndDate)(options, endDate, sourceAppointment.endDate);
        return {
          startDate: sourceAppointment.startDate,
          endDate: endDate
        };
      };
      var getRelativeAppointmentRect = function getRelativeAppointmentRect(appointmentRect, parentAppointmentRect) {
        var left = appointmentRect.left - parentAppointmentRect.left;
        var top = appointmentRect.top - parentAppointmentRect.top;
        var width = left < 0 ? appointmentRect.width + left : appointmentRect.width;
        var height = top < 0 ? appointmentRect.height + top : appointmentRect.height;
        return {
          left: Math.max(0, left),
          top: Math.max(0, top),
          width: width,
          height: height
        };
      };
      var getAppointmentCellsInfo = function getAppointmentCellsInfo(options) {
        var appointmentSettings = options.appointmentSettings,
          isVerticalGroupedWorkSpace = options.isVerticalGroupedWorkSpace,
          DOMMetaData = options.DOMMetaData;
        var DOMMetaTable = appointmentSettings.allDay && !isVerticalGroupedWorkSpace ? [DOMMetaData.allDayPanelCellsMeta] : DOMMetaData.dateTableCellsMeta;
        var positionByMap = appointmentSettings.positionByMap;
        var _DOMMetaTable$positio = DOMMetaTable[positionByMap.rowIndex][positionByMap.columnIndex],
          cellHeight = _DOMMetaTable$positio.height,
          cellWidth = _DOMMetaTable$positio.width;
        var cellCountInRow = DOMMetaTable[positionByMap.rowIndex].length;
        return {
          cellWidth: cellWidth,
          cellHeight: cellHeight,
          cellCountInRow: cellCountInRow
        };
      };
      var _getAppointmentDateRange = function _getAppointmentDateRange(options) {
        var appointmentSettings = options.appointmentSettings;
        var relativeAppointmentRect = getRelativeAppointmentRect(options.appointmentRect, options.parentAppointmentRect);
        var cellInfo = getAppointmentCellsInfo(options);
        var considerTime = !options.isDateAndTimeView || appointmentSettings.allDay;
        var extendedOptions = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), cellInfo), {
          considerTime: considerTime,
          relativeAppointmentRect: relativeAppointmentRect
        });
        return !options.rtlEnabled ? getDateRangeHorizontal(extendedOptions) : getDateRangeHorizontalRTL(extendedOptions);
      };

      /***/
    }),
    /***/86012: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/appointments/resizing/m_utils.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"normalizeStartDate": function normalizeStartDate() {
          return /* binding */_normalizeStartDate;
        },
        /* harmony export */"normalizeEndDate": function normalizeEndDate() {
          return /* binding */_normalizeEndDate;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/__internal/scheduler/appointments/resizing/m_utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var normalizeDate = function normalizeDate(options, date, sourceDate, isStartDate) {
        if (!options.considerTime) {
          return date;
        }
        var result = new Date(date);
        result.setHours(sourceDate.getHours(), sourceDate.getMinutes(), sourceDate.getSeconds());
        var startDayHour = options.startDayHour,
          endDayHour = options.endDayHour,
          allDay = options.appointmentSettings.allDay;
        var minDate = new Date(date);
        var maxDate = new Date(date);
        minDate.setHours(startDayHour, 0, 0, 0);
        maxDate.setHours(endDayHour, 0, 0, 0);
        var resultTime = result.getTime();
        var isDateOutInterval = isStartDate ? resultTime < minDate.getTime() || resultTime >= maxDate.getTime() : resultTime <= minDate.getTime() || resultTime > maxDate.getTime();
        if (isDateOutInterval) {
          result = !allDay ? maxDate : minDate;
        }
        return result;
      };
      var _normalizeStartDate = function _normalizeStartDate(options, startDate, sourceStartDate) {
        return normalizeDate(options, startDate, sourceStartDate, true);
      };
      var _normalizeEndDate = function _normalizeEndDate(options, endDate, sourceEndDate) {
        return normalizeDate(options, endDate, sourceEndDate, false);
      };

      /***/
    }),
    /***/19297: (
    /*!************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/base/m_widget_observer.js ***!
      \************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../ui/widget/ui.widget */69703);
      /**
       * DevExtreme (esm/__internal/scheduler/base/m_widget_observer.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var WidgetObserver = /*#__PURE__*/function (_ui_widget_ui_widget_) {
        _inherits(WidgetObserver, _ui_widget_ui_widget_);
        function WidgetObserver() {
          _classCallCheck(this, WidgetObserver);
          return _callSuper(this, WidgetObserver, arguments);
        }
        _createClass(WidgetObserver, [{
          key: "notifyObserver",
          value: function notifyObserver(subject, args) {
            var observer = this.option("observer");
            if (observer) {
              observer.fire(subject, args);
            }
          }
        }, {
          key: "invoke",
          value: function invoke() {
            var observer = this.option("observer");
            if (observer) {
              return observer.fire.apply(observer, arguments);
            }
          }
        }]);
        return WidgetObserver;
      }(_ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_0__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = WidgetObserver;

      /***/
    }),
    /***/79361: (
    /*!*******************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/header/m_calendar.js ***!
      \*******************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */SchedulerCalendar;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/devices */41881);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _ui_calendar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../ui/calendar */26682);
      /* harmony import */
      var _ui_popover_ui_popover__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../ui/popover/ui.popover */23679);
      /* harmony import */
      var _ui_popup_ui_popup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../ui/popup/ui.popup */23772);
      /* harmony import */
      var _ui_scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../ui/scroll_view/ui.scrollable */79678);
      /* harmony import */
      var _ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../ui/widget/ui.widget */69703);
      /**
       * DevExtreme (esm/__internal/scheduler/header/m_calendar.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var CALENDAR_CLASS = "dx-scheduler-navigator-calendar";
      var CALENDAR_POPOVER_CLASS = "dx-scheduler-navigator-calendar-popover";
      var SchedulerCalendar = /*#__PURE__*/function (_ui_widget_ui_widget_2) {
        _inherits(SchedulerCalendar, _ui_widget_ui_widget_2);
        function SchedulerCalendar() {
          _classCallCheck(this, SchedulerCalendar);
          return _callSuper(this, SchedulerCalendar, arguments);
        }
        _createClass(SchedulerCalendar, [{
          key: "show",
          value: function show(target) {
            if (!this._isMobileLayout()) {
              this._overlay.option("target", target);
            }
            this._overlay.show();
          }
        }, {
          key: "hide",
          value: function hide() {
            this._overlay.hide();
          }
        }, {
          key: "_keyboardHandler",
          value: function _keyboardHandler(opts) {
            var _a;
            null === (_a = this._calendar) || void 0 === _a ? void 0 : _a._keyboardHandler(opts);
          }
        }, {
          key: "_init",
          value: function _init() {
            _get(_getPrototypeOf(SchedulerCalendar.prototype), "_init", this).call(this);
            this.$element();
          }
        }, {
          key: "_render",
          value: function _render() {
            _get(_getPrototypeOf(SchedulerCalendar.prototype), "_render", this).call(this);
            this._renderOverlay();
          }
        }, {
          key: "_renderOverlay",
          value: function _renderOverlay() {
            var _this62 = this;
            this.$element().addClass(CALENDAR_POPOVER_CLASS);
            var isMobileLayout = this._isMobileLayout();
            var overlayType = isMobileLayout ? _ui_popup_ui_popup__WEBPACK_IMPORTED_MODULE_5__["default"] : _ui_popover_ui_popover__WEBPACK_IMPORTED_MODULE_4__["default"];
            this._overlay = this._createComponent(this.$element(), overlayType, {
              contentTemplate: function contentTemplate() {
                return _this62._createOverlayContent();
              },
              onShown: function onShown() {
                return _this62._calendar.focus();
              },
              defaultOptionsRules: [{
                device: function device() {
                  return isMobileLayout;
                },
                options: {
                  fullScreen: true,
                  showCloseButton: false,
                  toolbarItems: [{
                    shortcut: "cancel"
                  }]
                }
              }]
            });
          }
        }, {
          key: "_createOverlayContent",
          value: function _createOverlayContent() {
            var result = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_2__["default"])("<div>").addClass(CALENDAR_CLASS);
            this._calendar = this._createComponent(result, _ui_calendar__WEBPACK_IMPORTED_MODULE_3__["default"], this._getCalendarOptions());
            if (this._isMobileLayout()) {
              var scrollable = this._createScrollable(result);
              return scrollable.$element();
            }
            return result;
          }
        }, {
          key: "_createScrollable",
          value: function _createScrollable(content) {
            var result = this._createComponent("<div>", _ui_scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_6__["default"], {
              direction: "vertical"
            });
            result.$content().append(content);
            return result;
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(_ref) {
            var name = _ref.name,
              value = _ref.value;
            var _a;
            switch (name) {
              case "value":
                null === (_a = this._calendar) || void 0 === _a ? void 0 : _a.option("value", value);
            }
          }
        }, {
          key: "_getCalendarOptions",
          value: function _getCalendarOptions() {
            return {
              value: this.option("value"),
              min: this.option("min"),
              max: this.option("max"),
              firstDayOfWeek: this.option("firstDayOfWeek"),
              focusStateEnabled: this.option("focusStateEnabled"),
              onValueChanged: this.option("onValueChanged"),
              skipFocusCheck: true,
              tabIndex: this.option("tabIndex")
            };
          }
        }, {
          key: "_isMobileLayout",
          value: function _isMobileLayout() {
            return !_core_devices__WEBPACK_IMPORTED_MODULE_1__["default"].current().generic;
          }
        }]);
        return SchedulerCalendar;
      }(_ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_7__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxSchedulerCalendarPopup", SchedulerCalendar);

      /***/
    }),
    /***/54014: (
    /*!*************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/header/m_date_navigator.js ***!
      \*************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getDateNavigator": function getDateNavigator() {
          return /* binding */_getDateNavigator;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _ui_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../ui/themes */78279);
      /**
       * DevExtreme (esm/__internal/scheduler/header/m_date_navigator.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var trimTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime;
      var DATE_NAVIGATOR_CLASS = "dx-scheduler-navigator";
      var PREVIOUS_BUTTON_CLASS = "dx-scheduler-navigator-previous";
      var CALENDAR_BUTTON_CLASS = "dx-scheduler-navigator-caption";
      var NEXT_BUTTON_CLASS = "dx-scheduler-navigator-next";
      var DIRECTION_LEFT = -1;
      var DIRECTION_RIGHT = 1;
      var _getDateNavigator = function _getDateNavigator(header, item) {
        var items = [getPreviousButtonOptions(header), getCalendarButtonOptions(header), getNextButtonOptions(header)];
        var stylingMode = (0, _ui_themes__WEBPACK_IMPORTED_MODULE_2__.isMaterial)() ? "text" : "contained";
        return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
          widget: "dxButtonGroup",
          cssClass: DATE_NAVIGATOR_CLASS,
          options: {
            items: items,
            stylingMode: stylingMode,
            selectionMode: "none",
            onItemClick: function onItemClick(e) {
              e.itemData.clickHandler(e);
            }
          }
        }, item);
      };
      var getPreviousButtonOptions = function getPreviousButtonOptions(header) {
        return {
          key: "previous",
          icon: "chevronprev",
          elementAttr: {
            "class": PREVIOUS_BUTTON_CLASS
          },
          clickHandler: function clickHandler() {
            return header._updateDateByDirection(DIRECTION_LEFT);
          },
          onContentReady: function onContentReady(e) {
            var previousButton = e.component;
            previousButton.option("disabled", isPreviousButtonDisabled(header));
            header._addEvent("min", function () {
              previousButton.option("disabled", isPreviousButtonDisabled(header));
            });
            header._addEvent("currentDate", function () {
              previousButton.option("disabled", isPreviousButtonDisabled(header));
            });
            header._addEvent("startViewDate", function () {
              previousButton.option("disabled", isPreviousButtonDisabled(header));
            });
          }
        };
      };
      var getCalendarButtonOptions = function getCalendarButtonOptions(header) {
        return {
          key: "calendar",
          text: header.captionText,
          elementAttr: {
            "class": CALENDAR_BUTTON_CLASS
          },
          clickHandler: function clickHandler(e) {
            return header._showCalendar(e);
          },
          onContentReady: function onContentReady(e) {
            var calendarButton = e.component;
            header._addEvent("currentView", function () {
              calendarButton.option("text", header.captionText);
            });
            header._addEvent("currentDate", function () {
              calendarButton.option("text", header.captionText);
            });
            header._addEvent("startViewDate", function () {
              calendarButton.option("text", header.captionText);
            });
            header._addEvent("views", function () {
              calendarButton.option("text", header.captionText);
            });
            header._addEvent("firstDayOfWeek", function () {
              calendarButton.option("text", header.captionText);
            });
          }
        };
      };
      var getNextButtonOptions = function getNextButtonOptions(header) {
        return {
          key: "next",
          icon: "chevronnext",
          elementAttr: {
            "class": NEXT_BUTTON_CLASS
          },
          clickHandler: function clickHandler() {
            return header._updateDateByDirection(DIRECTION_RIGHT);
          },
          onContentReady: function onContentReady(e) {
            var nextButton = e.component;
            nextButton.option("disabled", isNextButtonDisabled(header));
            header._addEvent("min", function () {
              nextButton.option("disabled", isNextButtonDisabled(header));
            });
            header._addEvent("currentDate", function () {
              nextButton.option("disabled", isNextButtonDisabled(header));
            });
            header._addEvent("startViewDate", function () {
              nextButton.option("disabled", isNextButtonDisabled(header));
            });
          }
        };
      };
      var isPreviousButtonDisabled = function isPreviousButtonDisabled(header) {
        var min = header.option("min");
        if (!min) {
          return false;
        }
        min = new Date(min);
        var caption = header._getCaption();
        min = trimTime(min);
        var previousDate = header._getNextDate(-1, caption.endDate);
        return previousDate < min;
      };
      var isNextButtonDisabled = function isNextButtonDisabled(header) {
        var max = header.option("max");
        if (!max) {
          return false;
        }
        max = new Date(max);
        var caption = header._getCaption();
        max = max.setHours(23, 59, 59);
        var nextDate = header._getNextDate(1, caption.startDate);
        return nextDate > max;
      };

      /***/
    }),
    /***/67036: (
    /*!*****************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/header/m_header.js ***!
      \*****************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"SchedulerHeader": function SchedulerHeader() {
          return /* binding */_SchedulerHeader;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _ui_button_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../ui/button_group */52566);
      /* harmony import */
      var _ui_drop_down_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../ui/drop_down_button */98924);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/devices */41881);
      /* harmony import */
      var _core_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/errors */31150);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _renovation_ui_scheduler_model_untyped_getCurrentView__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/model/untyped_getCurrentView */80337);
      /* harmony import */
      var _ui_toolbar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../../ui/toolbar */8866);
      /* harmony import */
      var _ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../../ui/widget/ui.widget */69703);
      /* harmony import */
      var _m_calendar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ./m_calendar */79361);
      /* harmony import */
      var _m_date_navigator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ./m_date_navigator */54014);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ./m_utils */79431);
      /* harmony import */
      var _m_view_switcher__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ./m_view_switcher */86721);
      /**
       * DevExtreme (esm/__internal/scheduler/header/m_header.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DEFAULT_ELEMENT = "defaultElement";
      var VIEW_SWITCHER = "viewSwitcher";
      var DATE_NAVIGATOR = "dateNavigator";
      var COMPONENT_CLASS = "dx-scheduler-header";
      var _SchedulerHeader = /*#__PURE__*/function (_ui_widget_ui_widget_3) {
        _inherits(_SchedulerHeader, _ui_widget_ui_widget_3);
        function _SchedulerHeader() {
          _classCallCheck(this, _SchedulerHeader);
          return _callSuper(this, _SchedulerHeader, arguments);
        }
        _createClass(_SchedulerHeader, [{
          key: "views",
          get: function get() {
            return this.option("views");
          }
        }, {
          key: "captionText",
          get: function get() {
            return this._getCaption().text;
          }
        }, {
          key: "intervalOptions",
          get: function get() {
            var step = (0, _m_utils__WEBPACK_IMPORTED_MODULE_14__.getStep)(this.currentView);
            var intervalCount = this.option("intervalCount");
            var firstDayOfWeek = this.option("firstDayOfWeek");
            var agendaDuration = this.option("agendaDuration");
            return {
              step: step,
              intervalCount: intervalCount,
              firstDayOfWeek: firstDayOfWeek,
              agendaDuration: agendaDuration
            };
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(_get(_getPrototypeOf(_SchedulerHeader.prototype), "_getDefaultOptions", this).call(this), {
              _useShortDateFormat: !_core_devices__WEBPACK_IMPORTED_MODULE_4__["default"].real().generic || _core_devices__WEBPACK_IMPORTED_MODULE_4__["default"].isSimulator()
            });
          }
        }, {
          key: "_createEventMap",
          value: function _createEventMap() {
            var _this63 = this;
            this.eventMap = new Map([["currentView", [function (view) {
              _this63.currentView = (0, _renovation_ui_scheduler_model_untyped_getCurrentView__WEBPACK_IMPORTED_MODULE_9__.renovationGetCurrentView)((0, _m_utils__WEBPACK_IMPORTED_MODULE_14__.getViewName)(view), _this63.option("views"));
            }]], ["items", [this.repaint.bind(this)]], ["views", [_m_utils__WEBPACK_IMPORTED_MODULE_14__.validateViews]], ["currentDate", [this._getCalendarOptionUpdater("value")]], ["min", [this._getCalendarOptionUpdater("min")]], ["max", [this._getCalendarOptionUpdater("max")]], ["tabIndex", [this.repaint.bind(this)]], ["focusStateEnabled", [this.repaint.bind(this)]], ["useDropDownViewSwitcher", [this.repaint.bind(this)]]]);
          }
        }, {
          key: "_addEvent",
          value: function _addEvent(name, event) {
            if (!this.eventMap.has(name)) {
              this.eventMap.set(name, []);
            }
            var events = this.eventMap.get(name);
            this.eventMap.set(name, [].concat(_toConsumableArray(events), [event]));
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(args) {
            var name = args.name,
              value = args.value;
            if (this.eventMap.has(name)) {
              var events = this.eventMap.get(name);
              events.forEach(function (event) {
                event(value);
              });
            }
          }
        }, {
          key: "_init",
          value: function _init() {
            _get(_getPrototypeOf(_SchedulerHeader.prototype), "_init", this).call(this);
            this._createEventMap();
            this.$element().addClass(COMPONENT_CLASS);
            this.currentView = (0, _renovation_ui_scheduler_model_untyped_getCurrentView__WEBPACK_IMPORTED_MODULE_9__.renovationGetCurrentView)((0, _m_utils__WEBPACK_IMPORTED_MODULE_14__.getViewName)(this.option("currentView")), this.option("views"));
          }
        }, {
          key: "_render",
          value: function _render() {
            _get(_getPrototypeOf(_SchedulerHeader.prototype), "_render", this).call(this);
            this._createEventMap();
            this._renderToolbar();
          }
        }, {
          key: "_renderToolbar",
          value: function _renderToolbar() {
            var config = this._createToolbarConfig();
            var toolbarElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_6__["default"])("<div>");
            toolbarElement.appendTo(this.$element());
            this._toolbar = this._createComponent(toolbarElement, _ui_toolbar__WEBPACK_IMPORTED_MODULE_10__["default"], config);
          }
        }, {
          key: "_createToolbarConfig",
          value: function _createToolbarConfig() {
            var _this64 = this;
            var items = this.option("items");
            var parsedItems = items.map(function (element) {
              return _this64._parseItem(element);
            });
            return {
              items: parsedItems
            };
          }
        }, {
          key: "_parseItem",
          value: function _parseItem(item) {
            var isDefaultElement = this._isDefaultItem(item);
            if (isDefaultElement) {
              var defaultElementType = item[DEFAULT_ELEMENT];
              switch (defaultElementType) {
                case VIEW_SWITCHER:
                  if (this.option("useDropDownViewSwitcher")) {
                    return (0, _m_view_switcher__WEBPACK_IMPORTED_MODULE_15__.getDropDownViewSwitcher)(this, item);
                  }
                  return (0, _m_view_switcher__WEBPACK_IMPORTED_MODULE_15__.getViewSwitcher)(this, item);
                case DATE_NAVIGATOR:
                  this._renderCalendar();
                  return (0, _m_date_navigator__WEBPACK_IMPORTED_MODULE_13__.getDateNavigator)(this, item);
                default:
                  _core_errors__WEBPACK_IMPORTED_MODULE_5__["default"].log("Unknown default element type: ".concat(defaultElementType));
              }
            }
            return item;
          }
        }, {
          key: "_callEvent",
          value: function _callEvent(event, arg) {
            if (this.eventMap.has(event)) {
              var events = this.eventMap.get(event);
              events.forEach(function (event) {
                return event(arg);
              });
            }
          }
        }, {
          key: "_updateCurrentView",
          value: function _updateCurrentView(view) {
            var onCurrentViewChange = this.option("onCurrentViewChange");
            onCurrentViewChange(view.name);
            this._callEvent("currentView", view);
          }
        }, {
          key: "_updateCalendarValueAndCurrentDate",
          value: function _updateCalendarValueAndCurrentDate(date) {
            this._updateCurrentDate(date);
            this._calendar.option("value", date);
          }
        }, {
          key: "_updateCurrentDate",
          value: function _updateCurrentDate(date) {
            var onCurrentDateChange = this.option("onCurrentDateChange");
            onCurrentDateChange(date);
            this._callEvent("currentDate", date);
          }
        }, {
          key: "_renderCalendar",
          value: function _renderCalendar() {
            var _this65 = this;
            this._calendar = this._createComponent("<div>", _m_calendar__WEBPACK_IMPORTED_MODULE_12__["default"], {
              value: this.option("currentDate"),
              min: this.option("min"),
              max: this.option("max"),
              firstDayOfWeek: this.option("firstDayOfWeek"),
              focusStateEnabled: this.option("focusStateEnabled"),
              tabIndex: this.option("tabIndex"),
              onValueChanged: function onValueChanged(e) {
                _this65._updateCurrentDate(e.value);
                _this65._calendar.hide();
              }
            });
            this._calendar.$element().appendTo(this.$element());
          }
        }, {
          key: "_getCalendarOptionUpdater",
          value: function _getCalendarOptionUpdater(name) {
            var _this66 = this;
            return function (value) {
              if (_this66._calendar) {
                _this66._calendar.option(name, value);
              }
            };
          }
        }, {
          key: "_getNextDate",
          value: function _getNextDate(direction) {
            var initialDate = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
            var date = null !== initialDate && void 0 !== initialDate ? initialDate : this.option("currentDate");
            var options = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.intervalOptions), {
              date: date
            });
            return (0, _m_utils__WEBPACK_IMPORTED_MODULE_14__.getNextIntervalDate)(options, direction);
          }
        }, {
          key: "_isMonth",
          value: function _isMonth() {
            var currentView = this.currentView;
            return "month" === (0, _m_utils__WEBPACK_IMPORTED_MODULE_14__.getViewType)(currentView);
          }
        }, {
          key: "_getDisplayedDate",
          value: function _getDisplayedDate() {
            var startViewDate = this.option("startViewDate");
            if (this._isMonth()) {
              return (0, _m_utils__WEBPACK_IMPORTED_MODULE_14__.nextWeek)(startViewDate);
            }
            return new Date(startViewDate);
          }
        }, {
          key: "_getCaption",
          value: function _getCaption() {
            var date = this.option("currentDate");
            if (this.option("startViewDate")) {
              date = this._getDisplayedDate();
            }
            date = _core_utils_date__WEBPACK_IMPORTED_MODULE_7__["default"].trimTime(date);
            var options = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.intervalOptions), {
              date: date
            });
            var customizationFunction = this.option("customizeDateNavigatorText");
            var useShortDateFormat = this.option("_useShortDateFormat");
            return (0, _m_utils__WEBPACK_IMPORTED_MODULE_14__.getCaption)(options, useShortDateFormat, customizationFunction);
          }
        }, {
          key: "_updateDateByDirection",
          value: function _updateDateByDirection(direction) {
            var date = this._getNextDate(direction);
            this._updateCalendarValueAndCurrentDate(date);
          }
        }, {
          key: "_showCalendar",
          value: function _showCalendar(e) {
            this._calendar.show(e.element);
          }
        }, {
          key: "_hideCalendar",
          value: function _hideCalendar() {
            this._calendar.hide();
          }
        }, {
          key: "_isDefaultItem",
          value: function _isDefaultItem(item) {
            return Object.prototype.hasOwnProperty.call(item, DEFAULT_ELEMENT);
          }
        }]);
        return _SchedulerHeader;
      }(_ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_11__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__["default"])("dxSchedulerHeader", _SchedulerHeader);

      /***/
    }),
    /***/79431: (
    /*!****************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/header/m_utils.js ***!
      \****************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"nextWeek": function nextWeek() {
          return /* binding */_nextWeek;
        },
        /* harmony export */"getNextIntervalDate": function getNextIntervalDate() {
          return /* binding */_getNextIntervalDate;
        },
        /* harmony export */"getCaption": function getCaption() {
          return /* binding */_getCaption2;
        },
        /* harmony export */"getStep": function getStep() {
          return /* binding */_getStep;
        },
        /* harmony export */"getViewType": function getViewType() {
          return /* binding */_getViewType;
        },
        /* harmony export */"getViewName": function getViewName() {
          return /* binding */_getViewName;
        },
        /* harmony export */"getViewText": function getViewText() {
          return /* binding */_getViewText;
        },
        /* harmony export */"validateViews": function validateViews() {
          return /* binding */_validateViews;
        },
        /* harmony export */"formatViews": function formatViews() {
          return /* binding */_formatViews;
        },
        /* harmony export */"isOneView": function isOneView() {
          return /* binding */_isOneView;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/errors */31150);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_inflector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/inflector */75102);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../localization/date */83881);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../localization/message */19336);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../m_constants */19107);
      /**
       * DevExtreme (esm/__internal/scheduler/header/m_utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DAY_FORMAT = "d";
      var DAYS_IN_WORK_WEEK = 5;
      var _core_utils_date__WEB = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"],
        getPeriodStart = _core_utils_date__WEB.correctDateWithUnitBeginning,
        getWeekStart = _core_utils_date__WEB.getFirstWeekDate,
        getLastMonthDay = _core_utils_date__WEB.getLastMonthDay,
        addDateInterval = _core_utils_date__WEB.addDateInterval;
      var formatDate = _localization_date__WEBPACK_IMPORTED_MODULE_4__["default"].format;
      var MS_DURATION = {
        milliseconds: 1
      };
      var DAY_DURATION = {
        days: 1
      };
      var WEEK_DURATION = {
        days: 7
      };
      var SATURDAY_INDEX = 6;
      var SUNDAY_INDEX = 0;
      var subMS = function subMS(date) {
        return addDateInterval(date, MS_DURATION, -1);
      };
      var addMS = function addMS(date) {
        return addDateInterval(date, MS_DURATION, 1);
      };
      var nextDay = function nextDay(date) {
        return addDateInterval(date, DAY_DURATION, 1);
      };
      var _nextWeek = function _nextWeek(date) {
        return addDateInterval(date, WEEK_DURATION, 1);
      };
      var nextMonth = function nextMonth(date) {
        var days = getLastMonthDay(date);
        return addDateInterval(date, {
          days: days
        }, 1);
      };
      var isWeekend = function isWeekend(date) {
        return date.getDay() === SATURDAY_INDEX || date.getDay() === SUNDAY_INDEX;
      };
      var getWorkWeekStart = function getWorkWeekStart(firstDayOfWeek) {
        var date = new Date(firstDayOfWeek);
        while (isWeekend(date)) {
          date = nextDay(date);
        }
        return date;
      };
      var getDateAfterWorkWeek = function getDateAfterWorkWeek(workWeekStart) {
        var date = new Date(workWeekStart);
        var workDaysCount = 0;
        while (workDaysCount < DAYS_IN_WORK_WEEK) {
          if (!isWeekend(date)) {
            workDaysCount++;
          }
          date = nextDay(date);
        }
        return date;
      };
      var nextAgendaStart = function nextAgendaStart(date, agendaDuration) {
        return addDateInterval(date, {
          days: agendaDuration
        }, 1);
      };
      var getInterval = function getInterval(options) {
        var startDate = getIntervalStartDate(options);
        var endDate = getIntervalEndDate(startDate, options);
        return {
          startDate: startDate,
          endDate: endDate
        };
      };
      var getIntervalStartDate = function getIntervalStartDate(options) {
        var date = options.date,
          step = options.step,
          firstDayOfWeek = options.firstDayOfWeek;
        switch (step) {
          case "day":
          case "week":
          case "month":
            return getPeriodStart(date, step, false, firstDayOfWeek);
          case "workWeek":
            var firstWeekDay = getWeekStart(date, firstDayOfWeek);
            return getWorkWeekStart(firstWeekDay);
          case "agenda":
            return new Date(date);
        }
      };
      var getIntervalEndDate = function getIntervalEndDate(startDate, options) {
        var intervalCount = options.intervalCount,
          step = options.step,
          agendaDuration = options.agendaDuration;
        var periodStartDate;
        var periodEndDate;
        var nextPeriodStartDate = new Date(startDate);
        for (var i = 0; i < intervalCount; i++) {
          periodStartDate = nextPeriodStartDate;
          periodEndDate = getPeriodEndDate(periodStartDate, step, agendaDuration);
          nextPeriodStartDate = getNextPeriodStartDate(periodEndDate, step);
        }
        return periodEndDate;
      };
      var getPeriodEndDate = function getPeriodEndDate(currentPeriodStartDate, step, agendaDuration) {
        var date;
        switch (step) {
          case "day":
            date = nextDay(currentPeriodStartDate);
            break;
          case "week":
            date = _nextWeek(currentPeriodStartDate);
            break;
          case "month":
            date = nextMonth(currentPeriodStartDate);
            break;
          case "workWeek":
            date = getDateAfterWorkWeek(currentPeriodStartDate);
            break;
          case "agenda":
            date = nextAgendaStart(currentPeriodStartDate, agendaDuration);
        }
        return subMS(date);
      };
      var getNextPeriodStartDate = function getNextPeriodStartDate(currentPeriodEndDate, step) {
        var date = addMS(currentPeriodEndDate);
        if ("workWeek" === step) {
          while (isWeekend(date)) {
            date = nextDay(date);
          }
        }
        return date;
      };
      var _getNextIntervalDate = function _getNextIntervalDate(options, direction) {
        var date = options.date,
          step = options.step,
          intervalCount = options.intervalCount,
          agendaDuration = options.agendaDuration;
        var dayDuration;
        switch (step) {
          case "day":
            dayDuration = 1 * intervalCount;
            break;
          case "week":
          case "workWeek":
            dayDuration = 7 * intervalCount;
            break;
          case "agenda":
            dayDuration = agendaDuration;
            break;
          case "month":
            return getNextMonthDate(date, intervalCount, direction);
        }
        return addDateInterval(date, {
          days: dayDuration
        }, direction);
      };
      var getNextMonthDate = function getNextMonthDate(date, intervalCount, direction) {
        var currentDate = date.getDate();
        var currentMonthFirstDate = new Date(new Date(date.getTime()).setDate(1));
        var thatMonthFirstDate = new Date(currentMonthFirstDate.setMonth(currentMonthFirstDate.getMonth() + intervalCount * direction));
        var thatMonthDuration = getLastMonthDay(thatMonthFirstDate);
        var minDate = currentDate < thatMonthDuration ? currentDate : thatMonthDuration;
        var currentMonthMinDate = new Date(new Date(date.getTime()).setDate(minDate));
        var thatMonthMinDate = new Date(currentMonthMinDate.setMonth(currentMonthMinDate.getMonth() + intervalCount * direction));
        return thatMonthMinDate;
      };
      var getDateMonthFormatter = function getDateMonthFormatter(isShort) {
        var monthType = isShort ? "abbreviated" : "wide";
        var months = _localization_date__WEBPACK_IMPORTED_MODULE_4__["default"].getMonthNames(monthType);
        return function (date) {
          var day = formatDate(date, "day");
          var month = months[date.getMonth()];
          return "".concat(day, " ").concat(month);
        };
      };
      var formatMonthYear = function formatMonthYear(date) {
        var months = _localization_date__WEBPACK_IMPORTED_MODULE_4__["default"].getMonthNames("abbreviated");
        var month = months[date.getMonth()];
        var year = formatDate(date, "year");
        return "".concat(month, " ").concat(year);
      };
      var getDateMonthYearFormatter = function getDateMonthYearFormatter(isShort) {
        return function (date) {
          var dateMonthFormat = getDateMonthFormatter(isShort);
          var dateMonth = dateMonthFormat(date);
          var year = formatDate(date, "year");
          return "".concat(dateMonth, " ").concat(year);
        };
      };
      var getDifferentYearCaption = function getDifferentYearCaption(startDate, endDate) {
        var firstDateText = formatDate(startDate, getDateMonthYearFormatter(true));
        var lastDateDateText = formatDate(endDate, getDateMonthYearFormatter(true));
        return "".concat(firstDateText, "-").concat(lastDateDateText);
      };
      var getSameYearCaption = function getSameYearCaption(startDate, endDate, isShort) {
        var isDifferentMonthDates = startDate.getMonth() !== endDate.getMonth();
        var useShortFormat = isDifferentMonthDates || isShort;
        var firstDateFormat = isDifferentMonthDates ? getDateMonthFormatter(useShortFormat) : DAY_FORMAT;
        var firstDateText = formatDate(startDate, firstDateFormat);
        var lastDateText = formatDate(endDate, getDateMonthYearFormatter(useShortFormat));
        return "".concat(firstDateText, "-").concat(lastDateText);
      };
      var getSameDateCaption = function getSameDateCaption(date, step, isShort) {
        var useShortFormat = "agenda" === step ? isShort : false;
        var dateMonthFormat = getDateMonthFormatter(useShortFormat);
        var dateMonth = dateMonthFormat(date);
        var year = formatDate(date, "year");
        return "".concat(dateMonth, " ").concat(year);
      };
      var formatCaptionByMonths = function formatCaptionByMonths(startDate, endDate, isShort) {
        var isDifferentYears = startDate.getFullYear() !== endDate.getFullYear();
        if (isDifferentYears) {
          return getDifferentYearCaption(startDate, endDate);
        }
        return getSameYearCaption(startDate, endDate, isShort);
      };
      var formatMonthViewCaption = function formatMonthViewCaption(startDate, endDate) {
        if (_core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].sameMonth(startDate, endDate)) {
          return formatDate(startDate, "monthandyear");
        }
        var isSameYear = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].sameYear(startDate, endDate);
        var firstDateText = isSameYear ? _localization_date__WEBPACK_IMPORTED_MODULE_4__["default"].getMonthNames("abbreviated")[startDate.getMonth()] : formatMonthYear(startDate);
        var lastDateText = formatMonthYear(endDate);
        return "".concat(firstDateText, "-").concat(lastDateText);
      };
      var getCaptionText = function getCaptionText(startDate, endDate, isShort, step) {
        if (_core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].sameDate(startDate, endDate)) {
          return getSameDateCaption(startDate, step, isShort);
        }
        if ("month" === step) {
          return formatMonthViewCaption(startDate, endDate);
        }
        return formatCaptionByMonths(startDate, endDate, isShort);
      };
      var _getCaption2 = function _getCaption2(options, isShort, customizationFunction) {
        var _getInterval = getInterval(options),
          startDate = _getInterval.startDate,
          endDate = _getInterval.endDate;
        var text = getCaptionText(startDate, endDate, isShort, options.step);
        if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isFunction)(customizationFunction)) {
          text = customizationFunction({
            startDate: startDate,
            endDate: endDate,
            text: text
          });
        }
        return {
          startDate: startDate,
          endDate: endDate,
          text: text
        };
      };
      var STEP_MAP = {
        day: "day",
        week: "week",
        workWeek: "workWeek",
        month: "month",
        timelineDay: "day",
        timelineWeek: "week",
        timelineWorkWeek: "workWeek",
        timelineMonth: "month",
        agenda: "agenda"
      };
      var _getStep = function _getStep(view) {
        return STEP_MAP[_getViewType(view)];
      };
      var _getViewType = function _getViewType(view) {
        if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isObject)(view) && view.type) {
          return view.type;
        }
        return view;
      };
      var _getViewName = function _getViewName(view) {
        if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isObject)(view)) {
          return view.name ? view.name : view.type;
        }
        return view;
      };
      var _getViewText = function _getViewText(view) {
        if (view.name) {
          return view.name;
        }
        var viewName = (0, _core_utils_inflector__WEBPACK_IMPORTED_MODULE_2__.camelize)(view.type || view, true);
        return _localization_message__WEBPACK_IMPORTED_MODULE_5__["default"].format("dxScheduler-switcher".concat(viewName));
      };
      var isValidView = function isValidView(view) {
        return Object.values(_m_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS).includes(view);
      };
      var _validateViews = function _validateViews(views) {
        views.forEach(function (view) {
          var viewType = _getViewType(view);
          if (!isValidView(viewType)) {
            _core_errors__WEBPACK_IMPORTED_MODULE_0__["default"].log("W0008", viewType);
          }
        });
      };
      var _formatViews = function _formatViews(views) {
        _validateViews(views);
        return views.map(function (view) {
          var text = _getViewText(view);
          var type = _getViewType(view);
          var name = _getViewName(view);
          return {
            text: text,
            name: name,
            view: {
              text: text,
              type: type,
              name: name
            }
          };
        });
      };
      var _isOneView = function _isOneView(views, selectedView) {
        return 1 === views.length && views[0].name === selectedView;
      };

      /***/
    }),
    /***/86721: (
    /*!************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/header/m_view_switcher.js ***!
      \************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getViewSwitcher": function getViewSwitcher() {
          return /* binding */_getViewSwitcher;
        },
        /* harmony export */"getDropDownViewSwitcher": function getDropDownViewSwitcher() {
          return /* binding */_getDropDownViewSwitcher;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./m_utils */79431);
      /**
       * DevExtreme (esm/__internal/scheduler/header/m_view_switcher.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var VIEW_SWITCHER_CLASS = "dx-scheduler-view-switcher";
      var VIEW_SWITCHER_DROP_DOWN_BUTTON_CLASS = "dx-scheduler-view-switcher-dropdown-button";
      var VIEW_SWITCHER_DROP_DOWN_BUTTON_CONTENT_CLASS = "dx-scheduler-view-switcher-dropdown-button-content";
      var getViewsAndSelectedView = function getViewsAndSelectedView(header) {
        var views = (0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.formatViews)(header.views);
        var selectedView = (0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.getViewName)(header.currentView);
        var isSelectedViewInViews = views.some(function (view) {
          return view.name === selectedView;
        });
        selectedView = isSelectedViewInViews ? selectedView : void 0;
        return {
          selectedView: selectedView,
          views: views
        };
      };
      var _getViewSwitcher = function _getViewSwitcher(header, item) {
        var _getViewsAndSelectedV = getViewsAndSelectedView(header),
          selectedView = _getViewsAndSelectedV.selectedView,
          views = _getViewsAndSelectedV.views;
        return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
          widget: "dxButtonGroup",
          locateInMenu: "auto",
          cssClass: VIEW_SWITCHER_CLASS,
          options: {
            items: views,
            keyExpr: "name",
            selectedItemKeys: [selectedView],
            stylingMode: "contained",
            onItemClick: function onItemClick(e) {
              var view = e.itemData.view;
              header._updateCurrentView(view);
            },
            onContentReady: function onContentReady(e) {
              var viewSwitcher = e.component;
              header._addEvent("currentView", function (view) {
                viewSwitcher.option("selectedItemKeys", [(0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.getViewName)(view)]);
              });
            }
          }
        }, item);
      };
      var _getDropDownViewSwitcher = function _getDropDownViewSwitcher(header, item) {
        var _getViewsAndSelectedV2 = getViewsAndSelectedView(header),
          selectedView = _getViewsAndSelectedV2.selectedView,
          views = _getViewsAndSelectedV2.views;
        var oneView = (0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.isOneView)(views, selectedView);
        return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
          widget: "dxDropDownButton",
          locateInMenu: "never",
          cssClass: VIEW_SWITCHER_CLASS,
          options: {
            items: views,
            useSelectMode: true,
            keyExpr: "name",
            selectedItemKey: selectedView,
            displayExpr: "text",
            showArrowIcon: !oneView,
            elementAttr: {
              "class": VIEW_SWITCHER_DROP_DOWN_BUTTON_CLASS
            },
            onItemClick: function onItemClick(e) {
              var view = e.itemData.view;
              header._updateCurrentView(view);
            },
            onContentReady: function onContentReady(e) {
              var viewSwitcher = e.component;
              header._addEvent("currentView", function (view) {
                var views = (0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.formatViews)(header.views);
                if ((0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.isOneView)(views, view)) {
                  header.repaint();
                }
                viewSwitcher.option("selectedItemKey", (0, _m_utils__WEBPACK_IMPORTED_MODULE_1__.getViewName)(view));
              });
            },
            dropDownOptions: {
              onShowing: function onShowing(e) {
                if (oneView) {
                  e.cancel = true;
                }
              },
              width: "max-content",
              _wrapperClassExternal: VIEW_SWITCHER_DROP_DOWN_BUTTON_CONTENT_CLASS
            }
          }
        }, item);
      };

      /***/
    }),
    /***/91634: (
    /*!***********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_appointment_adapter.js ***!
      \***********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"createAppointmentAdapter": function createAppointmentAdapter() {
          return /* binding */_createAppointmentAdapter2;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/object */163);
      /* harmony import */
      var _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../ui/widget/ui.errors */42491);
      /* harmony import */
      var _m_expression_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_expression_utils */31363);
      /* harmony import */
      var _m_recurrence__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./m_recurrence */33746);
      /**
       * DevExtreme (esm/__internal/scheduler/m_appointment_adapter.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var PROPERTY_NAMES = {
        startDate: "startDate",
        endDate: "endDate",
        allDay: "allDay",
        text: "text",
        description: "description",
        startDateTimeZone: "startDateTimeZone",
        endDateTimeZone: "endDateTimeZone",
        recurrenceRule: "recurrenceRule",
        recurrenceException: "recurrenceException",
        disabled: "disabled"
      };
      var AppointmentAdapter = /*#__PURE__*/function () {
        function AppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator, options) {
          _classCallCheck(this, AppointmentAdapter);
          this.rawAppointment = rawAppointment;
          this.dataAccessors = dataAccessors;
          this.timeZoneCalculator = timeZoneCalculator;
          this.options = options;
        }
        _createClass(AppointmentAdapter, [{
          key: "duration",
          get: function get() {
            return this.endDate ? this.endDate - this.startDate : 0;
          }
        }, {
          key: "startDate",
          get: function get() {
            var result = this.getField(PROPERTY_NAMES.startDate);
            return void 0 === result ? result : new Date(result);
          },
          set: function set(value) {
            this.setField(PROPERTY_NAMES.startDate, value);
          }
        }, {
          key: "endDate",
          get: function get() {
            var result = this.getField(PROPERTY_NAMES.endDate);
            return void 0 === result ? result : new Date(result);
          },
          set: function set(value) {
            this.setField(PROPERTY_NAMES.endDate, value);
          }
        }, {
          key: "allDay",
          get: function get() {
            return this.getField(PROPERTY_NAMES.allDay);
          },
          set: function set(value) {
            this.setField(PROPERTY_NAMES.allDay, value);
          }
        }, {
          key: "text",
          get: function get() {
            return this.getField(PROPERTY_NAMES.text);
          },
          set: function set(value) {
            this.setField(PROPERTY_NAMES.text, value);
          }
        }, {
          key: "description",
          get: function get() {
            return this.getField(PROPERTY_NAMES.description);
          },
          set: function set(value) {
            this.setField(PROPERTY_NAMES.description, value);
          }
        }, {
          key: "startDateTimeZone",
          get: function get() {
            return this.getField(PROPERTY_NAMES.startDateTimeZone);
          }
        }, {
          key: "endDateTimeZone",
          get: function get() {
            return this.getField(PROPERTY_NAMES.endDateTimeZone);
          }
        }, {
          key: "recurrenceRule",
          get: function get() {
            return this.getField(PROPERTY_NAMES.recurrenceRule);
          },
          set: function set(value) {
            this.setField(PROPERTY_NAMES.recurrenceRule, value);
          }
        }, {
          key: "recurrenceException",
          get: function get() {
            return this.getField(PROPERTY_NAMES.recurrenceException);
          },
          set: function set(value) {
            this.setField(PROPERTY_NAMES.recurrenceException, value);
          }
        }, {
          key: "disabled",
          get: function get() {
            return !!this.getField(PROPERTY_NAMES.disabled);
          }
        }, {
          key: "isRecurrent",
          get: function get() {
            return (0, _m_recurrence__WEBPACK_IMPORTED_MODULE_4__.getRecurrenceProcessor)().isValidRecurrenceRule(this.recurrenceRule);
          }
        }, {
          key: "getField",
          value: function getField(property) {
            return _m_expression_utils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.getField(this.dataAccessors, property, this.rawAppointment);
          }
        }, {
          key: "setField",
          value: function setField(property, value) {
            return _m_expression_utils__WEBPACK_IMPORTED_MODULE_3__.ExpressionUtils.setField(this.dataAccessors, property, this.rawAppointment, value);
          }
        }, {
          key: "calculateStartDate",
          value: function calculateStartDate(pathTimeZoneConversion) {
            if (!this.startDate || isNaN(this.startDate.getTime())) {
              throw _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_2__["default"].Error("E1032", this.text);
            }
            return this.calculateDate(this.startDate, this.startDateTimeZone, pathTimeZoneConversion);
          }
        }, {
          key: "calculateEndDate",
          value: function calculateEndDate(pathTimeZoneConversion) {
            return this.calculateDate(this.endDate, this.endDateTimeZone, pathTimeZoneConversion);
          }
        }, {
          key: "calculateDate",
          value: function calculateDate(date, appointmentTimeZone, pathTimeZoneConversion) {
            if (!date) {
              return;
            }
            return this.timeZoneCalculator.createDate(date, {
              appointmentTimeZone: appointmentTimeZone,
              path: pathTimeZoneConversion
            });
          }
        }, {
          key: "clone",
          value: function clone() {
            var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;
            var result = new AppointmentAdapter((0, _core_utils_object__WEBPACK_IMPORTED_MODULE_1__.deepExtendArraySafe)({}, this.rawAppointment), this.dataAccessors, this.timeZoneCalculator, options);
            if (null === options || void 0 === options ? void 0 : options.pathTimeZone) {
              result.startDate = result.calculateStartDate(options.pathTimeZone);
              result.endDate = result.calculateEndDate(options.pathTimeZone);
            }
            return result;
          }
        }, {
          key: "source",
          value: function source() {
            var serializeDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;
            if (serializeDate) {
              var clonedAdapter = this.clone();
              clonedAdapter.startDate = this.startDate;
              clonedAdapter.endDate = this.endDate;
              return clonedAdapter.source();
            }
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_0__.extend)({}, this.rawAppointment);
          }
        }]);
        return AppointmentAdapter;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = AppointmentAdapter;
      var _createAppointmentAdapter2 = function _createAppointmentAdapter2(rawAppointment, dataAccessors, timeZoneCalculator, options) {
        return new AppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator, options);
      };

      /***/
    }),
    /***/81654: (
    /*!*****************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_appointment_drag_behavior.js ***!
      \*****************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */AppointmentDragBehavior;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _ui_draggable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../ui/draggable */63685);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./m_constants */19107);
      /* harmony import */
      var _utils_is_scheduler_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./utils/is_scheduler_component */47407);
      /**
       * DevExtreme (esm/__internal/scheduler/m_appointment_drag_behavior.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var APPOINTMENT_ITEM_CLASS = "dx-scheduler-appointment";
      var AppointmentDragBehavior = /*#__PURE__*/function () {
        function AppointmentDragBehavior(scheduler) {
          _classCallCheck(this, AppointmentDragBehavior);
          this.scheduler = scheduler;
          this.workspace = this.scheduler._workSpace;
          this.appointments = this.scheduler._appointments;
          this.initialPosition = {
            left: 0,
            top: 0
          };
          this.appointmentInfo = null;
          this.dragBetweenComponentsPromise = null;
        }
        _createClass(AppointmentDragBehavior, [{
          key: "isAllDay",
          value: function isAllDay(appointment) {
            return appointment.data("dxAppointmentSettings").allDay;
          }
        }, {
          key: "onDragStart",
          value: function onDragStart(e) {
            var itemSettings = e.itemSettings,
              itemData = e.itemData,
              initialPosition = e.initialPosition;
            this.initialPosition = initialPosition;
            this.appointmentInfo = {
              appointment: itemData,
              settings: itemSettings
            };
            this.appointments.notifyObserver("hideAppointmentTooltip");
          }
        }, {
          key: "onDragMove",
          value: function onDragMove(e) {
            if (e.fromComponent !== e.toComponent) {
              this.appointments.notifyObserver("removeDroppableCellClass");
            }
          }
        }, {
          key: "getAppointmentElement",
          value: function getAppointmentElement(e) {
            var itemElement = e.event.data && e.event.data.itemElement || e.itemElement;
            return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(itemElement);
          }
        }, {
          key: "onDragEnd",
          value: function onDragEnd(event) {
            var element = this.getAppointmentElement(event);
            var rawAppointment = this.appointments._getItemData(element);
            var container = this.appointments._getAppointmentContainer(this.isAllDay(element));
            container.append(element);
            var newCellIndex = this.workspace.getDroppableCellIndex();
            var oldCellIndex = this.workspace.getCellIndexByCoordinates(this.initialPosition);
            this.appointments.notifyObserver("updateAppointmentAfterDrag", {
              event: event,
              element: element,
              rawAppointment: rawAppointment,
              newCellIndex: newCellIndex,
              oldCellIndex: oldCellIndex
            });
          }
        }, {
          key: "onDragCancel",
          value: function onDragCancel() {
            this.removeDroppableClasses();
          }
        }, {
          key: "getItemData",
          value: function getItemData(appointmentElement) {
            var dataFromTooltip = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(appointmentElement).data(_m_constants__WEBPACK_IMPORTED_MODULE_4__.LIST_ITEM_DATA_KEY);
            var itemDataFromTooltip = null === dataFromTooltip || void 0 === dataFromTooltip ? void 0 : dataFromTooltip.appointment;
            var itemDataFromGrid = this.appointments._getItemData(appointmentElement);
            return itemDataFromTooltip || itemDataFromGrid;
          }
        }, {
          key: "getItemSettings",
          value: function getItemSettings(appointment) {
            var itemData = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(appointment).data(_m_constants__WEBPACK_IMPORTED_MODULE_4__.LIST_ITEM_DATA_KEY);
            return itemData && itemData.settings || [];
          }
        }, {
          key: "createDragStartHandler",
          value: function createDragStartHandler(options, appointmentDragging) {
            var _this67 = this;
            return function (e) {
              e.itemData = _this67.getItemData(e.itemElement);
              e.itemSettings = _this67.getItemSettings(e.itemElement);
              appointmentDragging.onDragStart && appointmentDragging.onDragStart(e);
              if (!e.cancel) {
                options.onDragStart(e);
              }
            };
          }
        }, {
          key: "createDragMoveHandler",
          value: function createDragMoveHandler(options, appointmentDragging) {
            return function (e) {
              appointmentDragging.onDragMove && appointmentDragging.onDragMove(e);
              if (!e.cancel) {
                options.onDragMove(e);
              }
            };
          }
        }, {
          key: "createDragEndHandler",
          value: function createDragEndHandler(options, appointmentDragging) {
            var _this68 = this;
            return function (e) {
              var updatedData = _this68.appointments.invoke("getUpdatedData", e.itemData);
              _this68.appointmentInfo = null;
              e.toItemData = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({}, e.itemData, updatedData);
              appointmentDragging.onDragEnd && appointmentDragging.onDragEnd(e);
              if (!e.cancel) {
                options.onDragEnd(e);
                if (e.fromComponent !== e.toComponent) {
                  appointmentDragging.onRemove && appointmentDragging.onRemove(e);
                }
              }
              if (true === e.cancel) {
                _this68.removeDroppableClasses();
              }
              if (true !== e.cancel && (0, _utils_is_scheduler_component__WEBPACK_IMPORTED_MODULE_5__.isSchedulerComponent)(e.toComponent)) {
                var targetDragBehavior = e.toComponent._getDragBehavior();
                targetDragBehavior.dragBetweenComponentsPromise = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__.Deferred();
              }
            };
          }
        }, {
          key: "createDropHandler",
          value: function createDropHandler(appointmentDragging) {
            var _this69 = this;
            return function (e) {
              var updatedData = _this69.appointments.invoke("getUpdatedData", e.itemData);
              e.itemData = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({}, e.itemData, updatedData);
              if (e.fromComponent !== e.toComponent) {
                appointmentDragging.onAdd && appointmentDragging.onAdd(e);
              }
              if (_this69.dragBetweenComponentsPromise) {
                _this69.dragBetweenComponentsPromise.resolve();
              }
            };
          }
        }, {
          key: "addTo",
          value: function addTo(container, config) {
            var appointmentDragging = this.scheduler.option("appointmentDragging") || {};
            var options = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({
              component: this.scheduler,
              contentTemplate: null,
              filter: ".".concat(APPOINTMENT_ITEM_CLASS),
              immediate: false,
              onDragStart: this.onDragStart.bind(this),
              onDragMove: this.onDragMove.bind(this),
              onDragEnd: this.onDragEnd.bind(this),
              onDragCancel: this.onDragCancel.bind(this)
            }, config);
            this.appointments._createComponent(container, _ui_draggable__WEBPACK_IMPORTED_MODULE_3__["default"], (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({}, options, appointmentDragging, {
              onDragStart: this.createDragStartHandler(options, appointmentDragging),
              onDragMove: this.createDragMoveHandler(options, appointmentDragging),
              onDragEnd: this.createDragEndHandler(options, appointmentDragging),
              onDrop: this.createDropHandler(appointmentDragging),
              onCancelByEsc: true
            }));
          }
        }, {
          key: "updateDragSource",
          value: function updateDragSource(appointment, settings) {
            var appointmentInfo = this.appointmentInfo;
            if (appointmentInfo || appointment) {
              var currentAppointment = appointment || appointmentInfo.appointment;
              var currentSettings = settings || appointmentInfo.settings;
              this.appointments._setDragSourceAppointment(currentAppointment, currentSettings);
            }
          }
        }, {
          key: "removeDroppableClasses",
          value: function removeDroppableClasses() {
            this.appointments._removeDragSourceClassFromDraggedAppointment();
            this.workspace.removeDroppableCellClass();
          }
        }]);
        return AppointmentDragBehavior;
      }();
      /***/
    }),
    /***/57970: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_appointments_layout_manager.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/common */37552);
      /* harmony import */
      var _renovation_ui_scheduler_model_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../renovation/ui/scheduler/model/utils */72620);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _appointments_m_view_model_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./appointments/m_view_model_generator */69929);
      /* harmony import */
      var _resources_m_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./resources/m_utils */48025);
      /* harmony import */
      var _workspaces_helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./workspaces/helpers/m_position_helper */33901);
      /**
       * DevExtreme (esm/__internal/scheduler/m_appointments_layout_manager.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var AppointmentLayoutManager = /*#__PURE__*/function () {
        function AppointmentLayoutManager(instance) {
          _classCallCheck(this, AppointmentLayoutManager);
          this.instance = instance;
          this.appointmentViewModel = new _appointments_m_view_model_generator__WEBPACK_IMPORTED_MODULE_4__.AppointmentViewModelGenerator();
        }
        _createClass(AppointmentLayoutManager, [{
          key: "appointmentRenderingStrategyName",
          get: function get() {
            return (0, _renovation_ui_scheduler_model_utils__WEBPACK_IMPORTED_MODULE_2__.getAppointmentRenderingStrategyName)(this.instance.currentViewType);
          }
        }, {
          key: "getCellDimensions",
          value: function getCellDimensions(options) {
            if (this.instance._workSpace) {
              return {
                width: this.instance._workSpace.getCellWidth(),
                height: this.instance._workSpace.getCellHeight(),
                allDayHeight: this.instance._workSpace.getAllDayHeight()
              };
            }
            return;
          }
        }, {
          key: "_getRenderingStrategyOptions",
          value: function _getRenderingStrategyOptions() {
            var workspace = this.instance.getWorkSpace();
            var _this$instance$getWor = this.instance.getWorkSpace(),
              virtualScrollingDispatcher = _this$instance$getWor.virtualScrollingDispatcher;
            var cellCountInsideLeftVirtualCell = virtualScrollingDispatcher.cellCountInsideLeftVirtualCell,
              cellCountInsideTopVirtualRow = virtualScrollingDispatcher.cellCountInsideTopVirtualRow;
            var groupCount = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_5__.getGroupCount)(this.instance.option("loadedResources"));
            var DOMMetaData = workspace.getDOMElementsMetaData();
            var allDayHeight = (0, _workspaces_helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_6__.getAllDayHeight)(workspace.option("showAllDayPanel"), workspace._isVerticalGroupedWorkSpace(), DOMMetaData);
            var rowCount = workspace._getRowCount();
            var positionHelper = workspace.positionHelper,
              viewDataProvider = workspace.viewDataProvider;
            var visibleDayDuration = viewDataProvider.getVisibleDayDuration(workspace.option("startDayHour"), workspace.option("endDayHour"), workspace.option("hoursInterval"));
            var cellDuration = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__.getCellDuration)(workspace.type, workspace.option("startDayHour"), workspace.option("endDayHour"), workspace.option("hoursInterval"));
            return {
              resources: this.instance.option("resources"),
              loadedResources: this.instance.option("loadedResources"),
              getAppointmentColor: this.instance.createGetAppointmentColor(),
              dataAccessors: this.instance._dataAccessors,
              isRenovatedAppointments: this.instance.option("isRenovatedAppointments"),
              appointmentRenderingStrategyName: this.appointmentRenderingStrategyName,
              adaptivityEnabled: this.instance.option("adaptivityEnabled"),
              rtlEnabled: this.instance.option("rtlEnabled"),
              startDayHour: this.instance._getCurrentViewOption("startDayHour"),
              endDayHour: this.instance._getCurrentViewOption("endDayHour"),
              maxAppointmentsPerCell: this.instance._getCurrentViewOption("maxAppointmentsPerCell"),
              currentDate: this.instance.option("currentDate"),
              isVirtualScrolling: this.instance.isVirtualScrolling(),
              leftVirtualCellCount: cellCountInsideLeftVirtualCell,
              topVirtualCellCount: cellCountInsideTopVirtualRow,
              intervalCount: workspace.option("intervalCount"),
              hoursInterval: workspace.option("hoursInterval"),
              showAllDayPanel: workspace.option("showAllDayPanel"),
              isGroupedAllDayPanel: workspace.isGroupedAllDayPanel(),
              groups: this.instance._getCurrentViewOption("groups"),
              groupCount: groupCount,
              rowCount: rowCount,
              appointmentCountPerCell: this.instance.option("_appointmentCountPerCell"),
              appointmentOffset: this.instance.option("_appointmentOffset"),
              allowResizing: this.instance._allowResizing(),
              allowAllDayResizing: this.instance._allowAllDayResizing(),
              startViewDate: workspace.getStartViewDate(),
              groupOrientation: workspace._getRealGroupOrientation(),
              cellWidth: (0, _workspaces_helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_6__.getCellWidth)(DOMMetaData),
              cellHeight: (0, _workspaces_helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_6__.getCellHeight)(DOMMetaData),
              allDayHeight: allDayHeight,
              resizableStep: positionHelper.getResizableStep(),
              visibleDayDuration: visibleDayDuration,
              allDayPanelMode: this.instance._getCurrentViewOption("allDayPanelMode"),
              timeZoneCalculator: this.instance.timeZoneCalculator,
              timeZone: this.instance.option("timeZone"),
              firstDayOfWeek: this.instance.getFirstDayOfWeek(),
              viewStartDayHour: this.instance._getCurrentViewOption("startDayHour"),
              viewEndDayHour: this.instance._getCurrentViewOption("endDayHour"),
              viewType: workspace.type,
              endViewDate: workspace.getEndViewDate(),
              positionHelper: positionHelper,
              isGroupedByDate: workspace.isGroupedByDate(),
              cellDuration: cellDuration,
              cellDurationInMinutes: workspace.option("cellDuration"),
              viewDataProvider: workspace.viewDataProvider,
              supportAllDayRow: workspace.supportAllDayRow(),
              dateRange: workspace.getDateRange(),
              intervalDuration: workspace.getIntervalDuration(),
              allDayIntervalDuration: workspace.getIntervalDuration(true),
              isVerticalGroupOrientation: workspace.isVerticalOrientation(),
              DOMMetaData: DOMMetaData,
              instance: this.instance,
              agendaDuration: workspace.option("agendaDuration")
            };
          }
        }, {
          key: "createAppointmentsMap",
          value: function createAppointmentsMap(items) {
            var renderingStrategyOptions = this._getRenderingStrategyOptions();
            var _this$appointmentView = this.appointmentViewModel.generate(items, renderingStrategyOptions),
              viewModel = _this$appointmentView.viewModel,
              positionMap = _this$appointmentView.positionMap;
            this._positionMap = positionMap;
            return viewModel;
          }
        }, {
          key: "_isDataChanged",
          value: function _isDataChanged(data) {
            var appointmentDataProvider = this.instance.appointmentDataProvider;
            var updatedData = appointmentDataProvider.getUpdatedAppointment();
            return updatedData === data || appointmentDataProvider.getUpdatedAppointmentKeys().some(function (item) {
              return data[item.key] === item.value;
            });
          }
        }, {
          key: "_isAppointmentShouldAppear",
          value: function _isAppointmentShouldAppear(currentAppointment, sourceAppointment) {
            return currentAppointment.needRepaint && sourceAppointment.needRemove;
          }
        }, {
          key: "_isSettingChanged",
          value: function _isSettingChanged(settings, sourceSetting) {
            if (settings.length !== sourceSetting.length) {
              return true;
            }
            var createSettingsToCompare = function createSettingsToCompare(settings, index) {
              var currentSetting = settings[index];
              var leftVirtualCellCount = currentSetting.leftVirtualCellCount || 0;
              var topVirtualCellCount = currentSetting.topVirtualCellCount || 0;
              var columnIndex = currentSetting.columnIndex + leftVirtualCellCount;
              var rowIndex = currentSetting.rowIndex + topVirtualCellCount;
              var hMax = currentSetting.reduced ? currentSetting.hMax : void 0;
              var vMax = currentSetting.reduced ? currentSetting.vMax : void 0;
              return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, currentSetting), {
                columnIndex: columnIndex,
                rowIndex: rowIndex,
                positionByMap: void 0,
                topVirtualCellCount: void 0,
                leftVirtualCellCount: void 0,
                leftVirtualWidth: void 0,
                topVirtualHeight: void 0,
                hMax: hMax,
                vMax: vMax,
                info: {}
              });
            };
            for (var i = 0; i < settings.length; i++) {
              var newSettings = createSettingsToCompare(settings, i);
              var oldSettings = createSettingsToCompare(sourceSetting, i);
              if (oldSettings) {
                oldSettings.sortedIndex = newSettings.sortedIndex;
              }
              if (!(0, _core_utils_common__WEBPACK_IMPORTED_MODULE_1__.equalByValue)(newSettings, oldSettings)) {
                return true;
              }
            }
            return false;
          }
        }, {
          key: "_getAssociatedSourceAppointment",
          value: function _getAssociatedSourceAppointment(currentAppointment, sourceAppointments) {
            for (var i = 0; i < sourceAppointments.length; i++) {
              var item = sourceAppointments[i];
              if (item.itemData === currentAppointment.itemData) {
                return item;
              }
            }
            return null;
          }
        }, {
          key: "_getDeletedAppointments",
          value: function _getDeletedAppointments(currentAppointments, sourceAppointments) {
            var result = [];
            for (var i = 0; i < sourceAppointments.length; i++) {
              var sourceAppointment = sourceAppointments[i];
              var currentAppointment = this._getAssociatedSourceAppointment(sourceAppointment, currentAppointments);
              if (!currentAppointment) {
                sourceAppointment.needRemove = true;
                result.push(sourceAppointment);
              }
            }
            return result;
          }
        }, {
          key: "getRepaintedAppointments",
          value: function getRepaintedAppointments(currentAppointments, sourceAppointments) {
            var _this70 = this;
            if (0 === sourceAppointments.length || "agenda" === this.appointmentRenderingStrategyName) {
              return currentAppointments;
            }
            currentAppointments.forEach(function (appointment) {
              var sourceAppointment = _this70._getAssociatedSourceAppointment(appointment, sourceAppointments);
              if (sourceAppointment) {
                var isDataChanged = _this70._isDataChanged(appointment.itemData);
                var isSettingChanged = _this70._isSettingChanged(appointment.settings, sourceAppointment.settings);
                var isAppointmentShouldAppear = _this70._isAppointmentShouldAppear(appointment, sourceAppointment);
                appointment.needRepaint = isDataChanged || isSettingChanged || isAppointmentShouldAppear;
              }
            });
            return currentAppointments.concat(this._getDeletedAppointments(currentAppointments, sourceAppointments));
          }
        }, {
          key: "getRenderingStrategyInstance",
          value: function getRenderingStrategyInstance() {
            var renderingStrategy = this.appointmentViewModel.getRenderingStrategy();
            if (!renderingStrategy) {
              var options = this._getRenderingStrategyOptions();
              this.appointmentViewModel.initRenderingStrategy(options);
            }
            return this.appointmentViewModel.getRenderingStrategy();
          }
        }]);
        return AppointmentLayoutManager;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = AppointmentLayoutManager;

      /***/
    }),
    /***/16874: (
    /*!***********************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_classes.js ***!
      \***********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"FIXED_CONTAINER_CLASS": function FIXED_CONTAINER_CLASS() {
          return /* binding */_FIXED_CONTAINER_CLASS;
        },
        /* harmony export */"REDUCED_APPOINTMENT_CLASS": function REDUCED_APPOINTMENT_CLASS() {
          return /* binding */_REDUCED_APPOINTMENT_CLASS;
        },
        /* harmony export */"REDUCED_APPOINTMENT_ICON": function REDUCED_APPOINTMENT_ICON() {
          return /* binding */_REDUCED_APPOINTMENT_ICON;
        },
        /* harmony export */"RECURRENCE_APPOINTMENT_CLASS": function RECURRENCE_APPOINTMENT_CLASS() {
          return /* binding */_RECURRENCE_APPOINTMENT_CLASS;
        },
        /* harmony export */"EMPTY_APPOINTMENT_CLASS": function EMPTY_APPOINTMENT_CLASS() {
          return /* binding */_EMPTY_APPOINTMENT_CLASS;
        },
        /* harmony export */"ALL_DAY_APPOINTMENT_CLASS": function ALL_DAY_APPOINTMENT_CLASS() {
          return /* binding */_ALL_DAY_APPOINTMENT_CLASS;
        },
        /* harmony export */"REDUCED_APPOINTMENT_PARTS_CLASSES": function REDUCED_APPOINTMENT_PARTS_CLASSES() {
          return /* binding */_REDUCED_APPOINTMENT_PARTS_CLASSES;
        },
        /* harmony export */"DIRECTION_APPOINTMENT_CLASSES": function DIRECTION_APPOINTMENT_CLASSES() {
          return /* binding */_DIRECTION_APPOINTMENT_CLASSES;
        },
        /* harmony export */"APPOINTMENT_DRAG_SOURCE_CLASS": function APPOINTMENT_DRAG_SOURCE_CLASS() {
          return /* binding */_APPOINTMENT_DRAG_SOURCE_CLASS;
        },
        /* harmony export */"APPOINTMENT_ITEM_CLASS": function APPOINTMENT_ITEM_CLASS() {
          return /* binding */_APPOINTMENT_ITEM_CLASS;
        },
        /* harmony export */"APPOINTMENT_CONTENT_CLASSES": function APPOINTMENT_CONTENT_CLASSES() {
          return /* binding */_APPOINTMENT_CONTENT_CLASSES;
        },
        /* harmony export */"AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS": function AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS() {
          return /* binding */_AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS;
        },
        /* harmony export */"HEADER_CURRENT_TIME_CELL_CLASS": function HEADER_CURRENT_TIME_CELL_CLASS() {
          return /* binding */_HEADER_CURRENT_TIME_CELL_CLASS;
        },
        /* harmony export */"VIRTUAL_CELL_CLASS": function VIRTUAL_CELL_CLASS() {
          return /* binding */_VIRTUAL_CELL_CLASS;
        },
        /* harmony export */"TIME_PANEL_CLASS": function TIME_PANEL_CLASS() {
          return /* binding */_TIME_PANEL_CLASS;
        },
        /* harmony export */"DATE_TABLE_CLASS": function DATE_TABLE_CLASS() {
          return /* binding */_DATE_TABLE_CLASS;
        },
        /* harmony export */"DATE_TABLE_ROW_CLASS": function DATE_TABLE_ROW_CLASS() {
          return /* binding */_DATE_TABLE_ROW_CLASS;
        },
        /* harmony export */"GROUP_ROW_CLASS": function GROUP_ROW_CLASS() {
          return /* binding */_GROUP_ROW_CLASS;
        },
        /* harmony export */"GROUP_HEADER_CONTENT_CLASS": function GROUP_HEADER_CONTENT_CLASS() {
          return /* binding */_GROUP_HEADER_CONTENT_CLASS;
        },
        /* harmony export */"LAST_GROUP_CELL_CLASS": function LAST_GROUP_CELL_CLASS() {
          return /* binding */_LAST_GROUP_CELL_CLASS;
        },
        /* harmony export */"FIRST_GROUP_CELL_CLASS": function FIRST_GROUP_CELL_CLASS() {
          return /* binding */_FIRST_GROUP_CELL_CLASS;
        },
        /* harmony export */"VERTICAL_GROUP_COUNT_CLASSES": function VERTICAL_GROUP_COUNT_CLASSES() {
          return /* binding */_VERTICAL_GROUP_COUNT_CLASSES;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/__internal/scheduler/m_classes.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _FIXED_CONTAINER_CLASS = "dx-scheduler-fixed-appointments";
      var _REDUCED_APPOINTMENT_CLASS = "dx-scheduler-appointment-reduced";
      var _REDUCED_APPOINTMENT_ICON = "dx-scheduler-appointment-reduced-icon";
      var _RECURRENCE_APPOINTMENT_CLASS = "dx-scheduler-appointment-recurrence";
      var _EMPTY_APPOINTMENT_CLASS = "dx-scheduler-appointment-empty";
      var _ALL_DAY_APPOINTMENT_CLASS = "dx-scheduler-all-day-appointment";
      var _REDUCED_APPOINTMENT_PARTS_CLASSES = {
        head: "dx-scheduler-appointment-head",
        body: "dx-scheduler-appointment-body",
        tail: "dx-scheduler-appointment-tail"
      };
      var _DIRECTION_APPOINTMENT_CLASSES = {
        horizontal: "dx-scheduler-appointment-horizontal",
        vertical: "dx-scheduler-appointment-vertical"
      };
      var _APPOINTMENT_DRAG_SOURCE_CLASS = "dx-scheduler-appointment-drag-source";
      var _APPOINTMENT_ITEM_CLASS = "dx-scheduler-appointment";
      var _APPOINTMENT_CONTENT_CLASSES = {
        APPOINTMENT_CONTENT_DETAILS: "dx-scheduler-appointment-content-details",
        RECURRING_ICON: "dx-scheduler-appointment-recurrence-icon",
        APPOINTMENT_TITLE: "dx-scheduler-appointment-title",
        APPOINTMENT_DATE: "dx-scheduler-appointment-content-date",
        ALL_DAY_CONTENT: "dx-scheduler-appointment-content-allday",
        ITEM: "dx-scheduler-appointment",
        AGENDA_MARKER: "dx-scheduler-agenda-appointment-marker",
        AGENDA_RESOURCE_LIST: "dx-scheduler-appointment-resource-list",
        AGENDA_RESOURCE_LIST_ITEM: "dx-scheduler-appointment-resource-item",
        AGENDA_RESOURCE_LIST_ITEM_VALUE: "dx-scheduler-appointment-resource-item-value"
      };
      var _AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS = "dx-scheduler-last-in-date-agenda-appointment";
      var _HEADER_CURRENT_TIME_CELL_CLASS = "dx-scheduler-header-panel-current-time-cell";
      var _VIRTUAL_CELL_CLASS = "dx-scheduler-virtual-cell";
      var _TIME_PANEL_CLASS = "dx-scheduler-time-panel";
      var _DATE_TABLE_CLASS = "dx-scheduler-date-table";
      var _DATE_TABLE_ROW_CLASS = "dx-scheduler-date-table-row";
      var _GROUP_ROW_CLASS = "dx-scheduler-group-row";
      var _GROUP_HEADER_CONTENT_CLASS = "dx-scheduler-group-header-content";
      var _LAST_GROUP_CELL_CLASS = "dx-scheduler-last-group-cell";
      var _FIRST_GROUP_CELL_CLASS = "dx-scheduler-first-group-cell";
      var _VERTICAL_GROUP_COUNT_CLASSES = ["dx-scheduler-group-column-count-one", "dx-scheduler-group-column-count-two", "dx-scheduler-group-column-count-three"];

      /***/
    }),
    /***/84908: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_compact_appointments_helper.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"CompactAppointmentsHelper": function CompactAppointmentsHelper() {
          return /* binding */_CompactAppointmentsHelper;
        }
        /* harmony export */
      });
      /* harmony import */
      var _animation_translator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../animation/translator */10829);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_templates_function_template__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/templates/function_template */51454);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/utils/position */9622);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../localization/message */19336);
      /* harmony import */
      var _renovation_ui_scheduler_appointment_overflow_indicator_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../renovation/ui/scheduler/appointment/overflow_indicator/utils */34534);
      /* harmony import */
      var _ui_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../ui/button */66037);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ./m_appointment_adapter */91634);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ./m_constants */19107);
      /* harmony import */
      var _m_data_structures__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ./m_data_structures */77138);
      /**
       * DevExtreme (esm/__internal/scheduler/m_compact_appointments_helper.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var APPOINTMENT_COLLECTOR_CLASS = "dx-scheduler-appointment-collector";
      var COMPACT_APPOINTMENT_COLLECTOR_CLASS = "".concat(APPOINTMENT_COLLECTOR_CLASS, "-compact");
      var APPOINTMENT_COLLECTOR_CONTENT_CLASS = "".concat(APPOINTMENT_COLLECTOR_CLASS, "-content");
      var WEEK_VIEW_COLLECTOR_OFFSET = 5;
      var COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET = 1;
      var _CompactAppointmentsHelper = /*#__PURE__*/function () {
        function _CompactAppointmentsHelper(instance) {
          _classCallCheck(this, _CompactAppointmentsHelper);
          this.instance = instance;
          this.elements = [];
        }
        _createClass(_CompactAppointmentsHelper, [{
          key: "render",
          value: function render(options) {
            var isCompact = options.isCompact,
              items = options.items,
              buttonColor = options.buttonColor;
            var template = this._createTemplate(items.data.length, isCompact);
            var button = this._createCompactButton(template, options);
            var $button = button.$element();
            this._makeBackgroundColor($button, items.colors, buttonColor);
            this._makeBackgroundDarker($button);
            this.elements.push($button);
            $button.data("items", this._createTooltipInfos(items));
            return $button;
          }
        }, {
          key: "clear",
          value: function clear() {
            this.elements.forEach(function (button) {
              button.detach();
              button.remove();
            });
            this.elements = [];
          }
        }, {
          key: "_createTooltipInfos",
          value: function _createTooltipInfos(items) {
            var _this71 = this;
            return items.data.map(function (appointment, index) {
              var _a;
              var targetedAdapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_8__.createAppointmentAdapter)(appointment, _this71.instance._dataAccessors, _this71.instance.timeZoneCalculator).clone();
              if ((null === (_a = items.settings) || void 0 === _a ? void 0 : _a.length) > 0) {
                var info = items.settings[index].info;
                targetedAdapter.startDate = info.sourceAppointment.startDate;
                targetedAdapter.endDate = info.sourceAppointment.endDate;
              }
              return new _m_data_structures__WEBPACK_IMPORTED_MODULE_10__.AppointmentTooltipInfo(appointment, targetedAdapter.source(), items.colors[index], items.settings[index]);
            });
          }
        }, {
          key: "_onButtonClick",
          value: function _onButtonClick(e, options) {
            var $button = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(e.element);
            this.instance.showAppointmentTooltipCore($button, $button.data("items"), this._getExtraOptionsForTooltip(options, $button));
          }
        }, {
          key: "_getExtraOptionsForTooltip",
          value: function _getExtraOptionsForTooltip(options, $appointmentCollector) {
            return {
              clickEvent: this._clickEvent(options.onAppointmentClick).bind(this),
              dragBehavior: options.allowDrag && this._createTooltipDragBehavior($appointmentCollector).bind(this),
              dropDownAppointmentTemplate: this.instance.option().dropDownAppointmentTemplate,
              isButtonClick: true
            };
          }
        }, {
          key: "_clickEvent",
          value: function _clickEvent(onAppointmentClick) {
            var _this72 = this;
            return function (e) {
              var clickEventArgs = _this72.instance._createEventArgs(e);
              onAppointmentClick(clickEventArgs);
            };
          }
        }, {
          key: "_createTooltipDragBehavior",
          value: function _createTooltipDragBehavior($appointmentCollector) {
            var _this73 = this;
            return function (e) {
              var $element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(e.element);
              var $schedulerElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(_this73.instance.element());
              var workSpace = _this73.instance.getWorkSpace();
              var initialPosition = (0, _animation_translator__WEBPACK_IMPORTED_MODULE_0__.locate)($appointmentCollector);
              var options = {
                filter: ".".concat(_m_constants__WEBPACK_IMPORTED_MODULE_9__.LIST_ITEM_CLASS),
                isSetCursorOffset: true,
                initialPosition: initialPosition,
                getItemData: function getItemData(itemElement) {
                  var _a;
                  return null === (_a = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(itemElement).data(_m_constants__WEBPACK_IMPORTED_MODULE_9__.LIST_ITEM_DATA_KEY)) || void 0 === _a ? void 0 : _a.appointment;
                },
                getItemSettings: function getItemSettings(_, event) {
                  return event.itemSettings;
                }
              };
              workSpace._createDragBehaviorBase($element, $schedulerElement, options);
            };
          }
        }, {
          key: "_getCollectorOffset",
          value: function _getCollectorOffset(width, cellWidth) {
            return cellWidth - width - this._getCollectorRightOffset();
          }
        }, {
          key: "_getCollectorRightOffset",
          value: function _getCollectorRightOffset() {
            return this.instance.getRenderingStrategyInstance()._isCompactTheme() ? COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET : WEEK_VIEW_COLLECTOR_OFFSET;
          }
        }, {
          key: "_makeBackgroundDarker",
          value: function _makeBackgroundDarker(button) {
            button.css("boxShadow", "inset ".concat((0, _core_utils_position__WEBPACK_IMPORTED_MODULE_4__.getBoundingRect)(button.get(0)).width, "px 0 0 0 rgba(0, 0, 0, 0.3)"));
          }
        }, {
          key: "_makeBackgroundColor",
          value: function _makeBackgroundColor($button, colors, color) {
            _core_utils_deferred__WEBPACK_IMPORTED_MODULE_3__.when.apply(null, colors).done(function () {
              this._makeBackgroundColorCore($button, color, Array.prototype.slice.call(arguments));
            }.bind(this));
          }
        }, {
          key: "_makeBackgroundColorCore",
          value: function _makeBackgroundColorCore($button, color, itemColors) {
            color && color.done(function (color) {
              var backgroundColor = (0, _renovation_ui_scheduler_appointment_overflow_indicator_utils__WEBPACK_IMPORTED_MODULE_6__.getOverflowIndicatorColor)(color, itemColors);
              if (backgroundColor) {
                $button.css("backgroundColor", backgroundColor);
              }
            });
          }
        }, {
          key: "_setPosition",
          value: function _setPosition(element, position) {
            (0, _animation_translator__WEBPACK_IMPORTED_MODULE_0__.move)(element, {
              top: position.top,
              left: position.left
            });
          }
        }, {
          key: "_createCompactButton",
          value: function _createCompactButton(template, options) {
            var _this74 = this;
            var $button = this._createCompactButtonElement(options);
            return this.instance._createComponent($button, _ui_button__WEBPACK_IMPORTED_MODULE_7__["default"], {
              type: "default",
              width: options.width,
              height: options.height,
              onClick: function onClick(e) {
                return _this74._onButtonClick(e, options);
              },
              template: this._renderTemplate(template, options.items, options.isCompact)
            });
          }
        }, {
          key: "_createCompactButtonElement",
          value: function _createCompactButtonElement(_ref) {
            var isCompact = _ref.isCompact,
              $container = _ref.$container,
              coordinates = _ref.coordinates;
            var result = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(APPOINTMENT_COLLECTOR_CLASS).toggleClass(COMPACT_APPOINTMENT_COLLECTOR_CLASS, isCompact).appendTo($container);
            this._setPosition(result, coordinates);
            return result;
          }
        }, {
          key: "_renderTemplate",
          value: function _renderTemplate(template, items, isCompact) {
            return new _core_templates_function_template__WEBPACK_IMPORTED_MODULE_2__.FunctionTemplate(function (options) {
              return template.render({
                model: {
                  appointmentCount: items.data.length,
                  isCompact: isCompact
                },
                container: options.container
              });
            });
          }
        }, {
          key: "_createTemplate",
          value: function _createTemplate(count, isCompact) {
            this._initButtonTemplate(count, isCompact);
            return this.instance._getAppointmentTemplate("appointmentCollectorTemplate");
          }
        }, {
          key: "_initButtonTemplate",
          value: function _initButtonTemplate(count, isCompact) {
            var _this75 = this;
            this.instance._templateManager.addDefaultTemplates({
              appointmentCollector: new _core_templates_function_template__WEBPACK_IMPORTED_MODULE_2__.FunctionTemplate(function (options) {
                return _this75._createButtonTemplate(count, (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(options.container), isCompact);
              })
            });
          }
        }, {
          key: "_createButtonTemplate",
          value: function _createButtonTemplate(appointmentCount, element, isCompact) {
            var text = isCompact ? appointmentCount : _localization_message__WEBPACK_IMPORTED_MODULE_5__["default"].getFormatter("dxScheduler-moreAppointments")(appointmentCount);
            return element.append((0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<span>").text(text)).addClass(APPOINTMENT_COLLECTOR_CONTENT_CLASS);
          }
        }]);
        return _CompactAppointmentsHelper;
      }();
      /***/
    }),
    /***/19107: (
    /*!*************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_constants.js ***!
      \*************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"LIST_ITEM_DATA_KEY": function LIST_ITEM_DATA_KEY() {
          return /* binding */_LIST_ITEM_DATA_KEY;
        },
        /* harmony export */"LIST_ITEM_CLASS": function LIST_ITEM_CLASS() {
          return /* binding */_LIST_ITEM_CLASS;
        },
        /* harmony export */"APPOINTMENT_SETTINGS_KEY": function APPOINTMENT_SETTINGS_KEY() {
          return /* binding */_APPOINTMENT_SETTINGS_KEY;
        },
        /* harmony export */"HORIZONTAL_GROUP_ORIENTATION": function HORIZONTAL_GROUP_ORIENTATION() {
          return /* binding */_HORIZONTAL_GROUP_ORIENTATION;
        },
        /* harmony export */"VIEWS": function VIEWS() {
          return /* binding */_VIEWS;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/__internal/scheduler/m_constants.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _LIST_ITEM_DATA_KEY = "dxListItemData";
      var _LIST_ITEM_CLASS = "dx-list-item";
      var _APPOINTMENT_SETTINGS_KEY = "dxAppointmentSettings";
      var _HORIZONTAL_GROUP_ORIENTATION = "horizontal";
      var _VIEWS = {
        DAY: "day",
        WEEK: "week",
        WORK_WEEK: "workWeek",
        MONTH: "month",
        TIMELINE_DAY: "timelineDay",
        TIMELINE_WEEK: "timelineWeek",
        TIMELINE_WORK_WEEK: "timelineWorkWeek",
        TIMELINE_MONTH: "timelineMonth",
        AGENDA: "agenda"
      };

      /***/
    }),
    /***/77138: (
    /*!*******************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_data_structures.js ***!
      \*******************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"AppointmentTooltipInfo": function AppointmentTooltipInfo() {
          return /* binding */_AppointmentTooltipInfo;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/__internal/scheduler/m_data_structures.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _AppointmentTooltipInfo = /*#__PURE__*/_createClass(function _AppointmentTooltipInfo(appointment) {
        _classCallCheck(this, _AppointmentTooltipInfo);
        var targetedAppointment = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;
        var color = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
        var settings = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [];
        this.appointment = appointment;
        this.targetedAppointment = targetedAppointment;
        this.color = color;
        this.settings = settings;
      });
      /***/
    }),
    /***/86665: (
    /*!****************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_date_adapter.js ***!
      \****************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/utils/date */35341);
      /**
       * DevExtreme (esm/__internal/scheduler/m_date_adapter.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds;
      var DateAdapterCore = /*#__PURE__*/function () {
        function DateAdapterCore(source) {
          _classCallCheck(this, DateAdapterCore);
          this._source = new Date(source.getTime ? source.getTime() : source);
        }
        _createClass(DateAdapterCore, [{
          key: "source",
          get: function get() {
            return this._source;
          }
        }, {
          key: "result",
          value: function result() {
            return this._source;
          }
        }, {
          key: "getTimezoneOffset",
          value: function getTimezoneOffset() {
            var format = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;
            var value = this._source.getTimezoneOffset();
            if ("minute" === format) {
              return value * toMs("minute");
            }
            return value;
          }
        }, {
          key: "getTime",
          value: function getTime() {
            return this._source.getTime();
          }
        }, {
          key: "setTime",
          value: function setTime(value) {
            this._source.setTime(value);
            return this;
          }
        }, {
          key: "addTime",
          value: function addTime(value) {
            this._source.setTime(this._source.getTime() + value);
            return this;
          }
        }, {
          key: "setMinutes",
          value: function setMinutes(value) {
            this._source.setMinutes(value);
            return this;
          }
        }, {
          key: "addMinutes",
          value: function addMinutes(value) {
            this._source.setMinutes(this._source.getMinutes() + value);
            return this;
          }
        }, {
          key: "subtractMinutes",
          value: function subtractMinutes(value) {
            this._source.setMinutes(this._source.getMinutes() - value);
            return this;
          }
        }]);
        return DateAdapterCore;
      }();
      var DateAdapter = function DateAdapter(date) {
        return new DateAdapterCore(date);
      };
      /* harmony default export */
      __webpack_exports__["default"] = DateAdapter;

      /***/
    }),
    /***/31363: (
    /*!********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_expression_utils.js ***!
      \********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"ExpressionUtils": function ExpressionUtils() {
          return /* binding */_ExpressionUtils;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /**
       * DevExtreme (esm/__internal/scheduler/m_expression_utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _ExpressionUtils = {
        getField: function getField(dataAccessors, field, obj) {
          if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(dataAccessors.getter[field])) {
            return;
          }
          return dataAccessors.getter[field](obj);
        },
        setField: function setField(dataAccessors, field, obj, value) {
          if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(dataAccessors.setter[field])) {
            return;
          }
          dataAccessors.setter[field](obj, value);
          return obj;
        }
      };

      /***/
    }),
    /***/27122: (
    /*!***********************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_loading.js ***!
      \***********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"show": function show() {
          return /* binding */_show;
        },
        /* harmony export */"hide": function hide() {
          return /* binding */_hide;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_view_port__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/utils/view_port */30228);
      /* harmony import */
      var _ui_load_panel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../ui/load_panel */91819);
      /**
       * DevExtreme (esm/__internal/scheduler/m_loading.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var loading = null;
      var createLoadPanel = function createLoadPanel(options) {
        return new _ui_load_panel__WEBPACK_IMPORTED_MODULE_3__["default"]((0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").appendTo(options && options.container || (0, _core_utils_view_port__WEBPACK_IMPORTED_MODULE_2__.value)()), options);
      };
      var removeLoadPanel = function removeLoadPanel() {
        if (!loading) {
          return;
        }
        loading.$element().remove();
        loading = null;
      };
      function _show(options) {
        removeLoadPanel();
        loading = createLoadPanel(options);
        return loading.show();
      }
      function _hide() {
        if (!loading) {
          return new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__.Deferred().resolve();
        }
        return loading.hide().done(removeLoadPanel).promise();
      }

      /***/
    }),
    /***/33746: (
    /*!**************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_recurrence.js ***!
      \**************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getRecurrenceProcessor": function getRecurrenceProcessor() {
          return /* binding */_getRecurrenceProcessor;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/errors */31150);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/utils/iterator */14975);
      /* harmony import */
      var rrule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! rrule */68382);
      /* harmony import */
      var _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./m_utils_time_zone */98281);
      /**
       * DevExtreme (esm/__internal/scheduler/m_recurrence.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds;
      var ruleNames = ["freq", "interval", "byday", "byweekno", "byyearday", "bymonth", "bymonthday", "count", "until", "byhour", "byminute", "bysecond", "bysetpos", "wkst"];
      var freqNames = ["DAILY", "WEEKLY", "MONTHLY", "YEARLY", "SECONDLY", "MINUTELY", "HOURLY"];
      var days = {
        SU: 0,
        MO: 1,
        TU: 2,
        WE: 3,
        TH: 4,
        FR: 5,
        SA: 6
      };
      var loggedWarnings = [];
      var MS_IN_HOUR = 36e5;
      var MS_IN_DAY = 24 * MS_IN_HOUR;
      var RRULE_BROKEN_TIMEZONES = ["Etc/GMT-13", "MIT", "Pacific/Apia", "Pacific/Enderbury", "Pacific/Tongatapu", "Etc/GMT-14", "Pacific/Kiritimati"];
      var recurrence = null;
      function _getRecurrenceProcessor() {
        if (!recurrence) {
          recurrence = new RecurrenceProcessor();
        }
        return recurrence;
      }
      var RecurrenceProcessor = /*#__PURE__*/function () {
        function RecurrenceProcessor() {
          _classCallCheck(this, RecurrenceProcessor);
          this.rRule = null;
          this.rRuleSet = null;
          this.validator = new RecurrenceValidator();
        }
        _createClass(RecurrenceProcessor, [{
          key: "generateDates",
          value: function generateDates(options) {
            var _this76 = this;
            var recurrenceRule = this.evalRecurrenceRule(options.rule);
            var rule = recurrenceRule.rule;
            if (!recurrenceRule.isValid || !rule.freq) {
              return [];
            }
            var rruleIntervalParams = this._createRruleIntervalParams(options);
            this._initializeRRule(options, rruleIntervalParams.startIntervalDate, rule.until);
            return this.rRuleSet.between(rruleIntervalParams.minViewDate, rruleIntervalParams.maxViewDate, true).filter(function (date) {
              return date.getTime() + rruleIntervalParams.appointmentDuration >= rruleIntervalParams.minViewTime;
            }).map(function (date) {
              return _this76._convertRruleResult(rruleIntervalParams, options, date);
            });
          }
        }, {
          key: "_createRruleIntervalParams",
          value: function _createRruleIntervalParams(options) {
            var start = options.start,
              min = options.min,
              max = options.max,
              appointmentTimezoneOffset = options.appointmentTimezoneOffset;
            var clientOffsets_startDate = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].getClientTimezoneOffset(start),
              clientOffsets_minViewDate = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].getClientTimezoneOffset(min),
              clientOffsets_maxViewDate = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].getClientTimezoneOffset(max);
            var duration = options.end ? options.end.getTime() - options.start.getTime() : 0;
            var startIntervalDate = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].setOffsetsToDate(options.start, [-clientOffsets_startDate, appointmentTimezoneOffset]);
            var minViewTime = options.min.getTime() - clientOffsets_minViewDate + appointmentTimezoneOffset;
            var minViewDate = new Date(minViewTime - duration);
            var maxViewDate = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].setOffsetsToDate(options.max, [-clientOffsets_maxViewDate, appointmentTimezoneOffset]);
            var startDateDSTDifferenceMs = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].getDiffBetweenClientTimezoneOffsets(options.start, startIntervalDate);
            var switchToSummerTime = startDateDSTDifferenceMs < 0;
            return {
              startIntervalDate: startIntervalDate,
              minViewTime: minViewTime,
              minViewDate: minViewDate,
              maxViewDate: maxViewDate,
              startIntervalDateDSTShift: switchToSummerTime ? 0 : startDateDSTDifferenceMs,
              appointmentDuration: duration
            };
          }
        }, {
          key: "_convertRruleResult",
          value: function _convertRruleResult(rruleIntervalParams, options, rruleDate) {
            var convertedBackDate = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].setOffsetsToDate(rruleDate, [].concat(_toConsumableArray(this._getLocalMachineOffset(rruleDate)), [-options.appointmentTimezoneOffset, rruleIntervalParams.startIntervalDateDSTShift]));
            var convertedDateDSTShift = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].getDiffBetweenClientTimezoneOffsets(convertedBackDate, rruleDate);
            var switchToSummerTime = convertedDateDSTShift < 0;
            var resultDate = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].setOffsetsToDate(convertedBackDate, [convertedDateDSTShift]);
            var resultDateDSTShift = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].getDiffBetweenClientTimezoneOffsets(resultDate, convertedBackDate);
            if (resultDateDSTShift && switchToSummerTime) {
              return new Date(resultDate.getTime() + resultDateDSTShift);
            }
            return resultDate;
          }
        }, {
          key: "_getLocalMachineOffset",
          value: function _getLocalMachineOffset(rruleDate) {
            var machineTimezoneOffset = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].getClientTimezoneOffset(rruleDate);
            var machineTimezoneName = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].getMachineTimezoneName();
            var result = [machineTimezoneOffset];
            var isTimezoneOffsetInBrokenRange = machineTimezoneOffset / MS_IN_HOUR <= -13;
            var isTimezoneNameInBrokenNames = !machineTimezoneName || RRULE_BROKEN_TIMEZONES.some(function (timezone) {
              return machineTimezoneName.includes(timezone);
            });
            if (isTimezoneOffsetInBrokenRange && isTimezoneNameInBrokenNames) {
              result.push(-MS_IN_DAY);
            }
            return result;
          }
        }, {
          key: "hasRecurrence",
          value: function hasRecurrence(options) {
            return !!this.generateDates(options).length;
          }
        }, {
          key: "evalRecurrenceRule",
          value: function evalRecurrenceRule(rule) {
            var result = {
              rule: {},
              isValid: false
            };
            if (rule) {
              result.rule = this._parseRecurrenceRule(rule);
              result.isValid = this.validator.validateRRule(result.rule, rule);
            }
            return result;
          }
        }, {
          key: "isValidRecurrenceRule",
          value: function isValidRecurrenceRule(rule) {
            return this.evalRecurrenceRule(rule).isValid;
          }
        }, {
          key: "daysFromByDayRule",
          value: function daysFromByDayRule(rule) {
            var result = [];
            if (rule.byday) {
              if (Array.isArray(rule.byday)) {
                result = rule.byday;
              } else {
                result = rule.byday.split(",");
              }
            }
            return result.map(function (item) {
              var match = item.match(/[A-Za-z]+/);
              return !!match && match[0];
            }).filter(function (item) {
              return !!item;
            });
          }
        }, {
          key: "getAsciiStringByDate",
          value: function getAsciiStringByDate(date) {
            var currentOffset = date.getTimezoneOffset() * toMs("minute");
            var offsetDate = new Date(date.getTime() + currentOffset);
            return "".concat(offsetDate.getFullYear() + "0".concat(offsetDate.getMonth() + 1).slice(-2) + "0".concat(offsetDate.getDate()).slice(-2), "T").concat("0".concat(offsetDate.getHours()).slice(-2)).concat("0".concat(offsetDate.getMinutes()).slice(-2)).concat("0".concat(offsetDate.getSeconds()).slice(-2), "Z");
          }
        }, {
          key: "getRecurrenceString",
          value: function getRecurrenceString(object) {
            if (!object || !object.freq) {
              return;
            }
            var result = "";
            for (var field in object) {
              var value = object[field];
              if ("interval" === field && value < 2) {
                continue;
              }
              if ("until" === field) {
                value = this.getAsciiStringByDate(value);
              }
              result += "".concat(field, "=").concat(value, ";");
            }
            result = result.substring(0, result.length - 1);
            return result.toUpperCase();
          }
        }, {
          key: "_parseExceptionToRawArray",
          value: function _parseExceptionToRawArray(value) {
            return value.match(/(\d{4})(\d{2})(\d{2})(T(\d{2})(\d{2})(\d{2}))?(Z)?/);
          }
        }, {
          key: "getDateByAsciiString",
          value: function getDateByAsciiString(exceptionText) {
            if ("string" !== typeof exceptionText) {
              return exceptionText;
            }
            var result = this._parseExceptionToRawArray(exceptionText);
            if (!result) {
              return null;
            }
            var _this$_createDateTupl = this._createDateTuple(result),
              _this$_createDateTupl2 = _slicedToArray(_this$_createDateTupl, 7),
              year = _this$_createDateTupl2[0],
              month = _this$_createDateTupl2[1],
              date = _this$_createDateTupl2[2],
              hours = _this$_createDateTupl2[3],
              minutes = _this$_createDateTupl2[4],
              seconds = _this$_createDateTupl2[5],
              isUtc = _this$_createDateTupl2[6];
            if (isUtc) {
              return new Date(Date.UTC(year, month, date, hours, minutes, seconds));
            }
            return new Date(year, month, date, hours, minutes, seconds);
          }
        }, {
          key: "_dispose",
          value: function _dispose() {
            if (this.rRuleSet) {
              delete this.rRuleSet;
              this.rRuleSet = null;
            }
            if (this.rRule) {
              delete this.rRule;
              this.rRule = null;
            }
          }
        }, {
          key: "_getTimeZoneOffset",
          value: function _getTimeZoneOffset() {
            return new Date().getTimezoneOffset();
          }
        }, {
          key: "_initializeRRule",
          value: function _initializeRRule(options, startDateUtc, until) {
            var _this77 = this;
            var ruleOptions = rrule__WEBPACK_IMPORTED_MODULE_3__.RRule.parseString(options.rule);
            var firstDayOfWeek = options.firstDayOfWeek;
            ruleOptions.dtstart = startDateUtc;
            if (!ruleOptions.wkst && firstDayOfWeek) {
              ruleOptions.wkst = [6, 0, 1, 2, 3, 4, 5][firstDayOfWeek];
            }
            if (until) {
              ruleOptions.until = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].setOffsetsToDate(until, [-_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].getClientTimezoneOffset(until), options.appointmentTimezoneOffset]);
            }
            this._createRRule(ruleOptions);
            if (options.exception) {
              var exceptionStrings = options.exception;
              var exceptionDates = exceptionStrings.split(",").map(function (rule) {
                return _this77.getDateByAsciiString(rule);
              });
              exceptionDates.forEach(function (date) {
                if (options.getPostProcessedException) {
                  date = options.getPostProcessedException(date);
                }
                var utcDate = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].setOffsetsToDate(date, [-_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].getClientTimezoneOffset(date), options.appointmentTimezoneOffset]);
                _this77.rRuleSet.exdate(utcDate);
              });
            }
          }
        }, {
          key: "_createRRule",
          value: function _createRRule(ruleOptions) {
            this._dispose();
            this.rRuleSet = new rrule__WEBPACK_IMPORTED_MODULE_3__.RRuleSet();
            this.rRule = new rrule__WEBPACK_IMPORTED_MODULE_3__.RRule(ruleOptions);
            this.rRuleSet.rrule(this.rRule);
          }
        }, {
          key: "_parseRecurrenceRule",
          value: function _parseRecurrenceRule(recurrence) {
            var ruleObject = {};
            var ruleParts = recurrence.split(";");
            for (var i = 0, len = ruleParts.length; i < len; i++) {
              var rule = ruleParts[i].split("=");
              var ruleName = rule[0].toLowerCase();
              var ruleValue = rule[1];
              ruleObject[ruleName] = ruleValue;
            }
            var count = parseInt(ruleObject.count);
            if (!isNaN(count)) {
              ruleObject.count = count;
            }
            if (ruleObject.interval) {
              var interval = parseInt(ruleObject.interval);
              if (!isNaN(interval)) {
                ruleObject.interval = interval;
              }
            } else {
              ruleObject.interval = 1;
            }
            if (ruleObject.freq && ruleObject.until) {
              ruleObject.until = this.getDateByAsciiString(ruleObject.until);
            }
            return ruleObject;
          }
        }, {
          key: "_createDateTuple",
          value: function _createDateTuple(parseResult) {
            var isUtc = void 0 !== parseResult[8];
            parseResult.shift();
            if (void 0 === parseResult[3]) {
              parseResult.splice(3);
            } else {
              parseResult.splice(3, 1);
              parseResult.splice(6);
            }
            parseResult[1]--;
            parseResult.unshift(null);
            return [parseInt(parseResult[1]), parseInt(parseResult[2]), parseInt(parseResult[3]), parseInt(parseResult[4]) || 0, parseInt(parseResult[5]) || 0, parseInt(parseResult[6]) || 0, isUtc];
          }
        }]);
        return RecurrenceProcessor;
      }();
      var RecurrenceValidator = /*#__PURE__*/function () {
        function RecurrenceValidator() {
          _classCallCheck(this, RecurrenceValidator);
        }
        _createClass(RecurrenceValidator, [{
          key: "validateRRule",
          value: function validateRRule(rule, recurrence) {
            if (this._brokenRuleNameExists(rule) || !freqNames.includes(rule.freq) || this._wrongCountRule(rule) || this._wrongIntervalRule(rule) || this._wrongDayOfWeek(rule) || this._wrongByMonthDayRule(rule) || this._wrongByMonth(rule) || this._wrongUntilRule(rule)) {
              this._logBrokenRule(recurrence);
              return false;
            }
            return true;
          }
        }, {
          key: "_wrongUntilRule",
          value: function _wrongUntilRule(rule) {
            var wrongUntil = false;
            var until = rule.until;
            if (void 0 !== until && !(until instanceof Date)) {
              wrongUntil = true;
            }
            return wrongUntil;
          }
        }, {
          key: "_wrongCountRule",
          value: function _wrongCountRule(rule) {
            var wrongCount = false;
            var count = rule.count;
            if (count && "string" === typeof count) {
              wrongCount = true;
            }
            return wrongCount;
          }
        }, {
          key: "_wrongByMonthDayRule",
          value: function _wrongByMonthDayRule(rule) {
            var wrongByMonthDay = false;
            var byMonthDay = rule.bymonthday;
            if (byMonthDay && isNaN(parseInt(byMonthDay))) {
              wrongByMonthDay = true;
            }
            return wrongByMonthDay;
          }
        }, {
          key: "_wrongByMonth",
          value: function _wrongByMonth(rule) {
            var wrongByMonth = false;
            var byMonth = rule.bymonth;
            if (byMonth && isNaN(parseInt(byMonth))) {
              wrongByMonth = true;
            }
            return wrongByMonth;
          }
        }, {
          key: "_wrongIntervalRule",
          value: function _wrongIntervalRule(rule) {
            var wrongInterval = false;
            var interval = rule.interval;
            if (interval && "string" === typeof interval) {
              wrongInterval = true;
            }
            return wrongInterval;
          }
        }, {
          key: "_wrongDayOfWeek",
          value: function _wrongDayOfWeek(rule) {
            var byDay = rule.byday;
            var daysByRule = _getRecurrenceProcessor().daysFromByDayRule(rule);
            var brokenDaysExist = false;
            if ("" === byDay) {
              brokenDaysExist = true;
            }
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__.each)(daysByRule, function (_, day) {
              if (!Object.prototype.hasOwnProperty.call(days, day)) {
                brokenDaysExist = true;
                return false;
              }
              return;
            });
            return brokenDaysExist;
          }
        }, {
          key: "_brokenRuleNameExists",
          value: function _brokenRuleNameExists(rule) {
            var brokenRuleExists = false;
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__.each)(rule, function (ruleName) {
              if (!ruleNames.includes(ruleName)) {
                brokenRuleExists = true;
                return false;
              }
              return;
            });
            return brokenRuleExists;
          }
        }, {
          key: "_logBrokenRule",
          value: function _logBrokenRule(recurrence) {
            if (!loggedWarnings.includes(recurrence)) {
              _core_errors__WEBPACK_IMPORTED_MODULE_0__["default"].log("W0006", recurrence);
              loggedWarnings.push(recurrence);
            }
          }
        }]);
        return RecurrenceValidator;
      }();
      /***/
    }),
    /***/69711: (
    /*!*********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_recurrence_editor.js ***!
      \*********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _ui_radio_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../ui/radio_group */97044);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/component_registrator */2382);
      /* harmony import */
      var _core_guid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/guid */22203);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../localization/date */83881);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../localization/message */19336);
      /* harmony import */
      var _renovation_ui_scheduler_timeZoneCalculator_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../renovation/ui/scheduler/timeZoneCalculator/types */91757);
      /* harmony import */
      var _ui_button_group__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../ui/button_group */52566);
      /* harmony import */
      var _ui_date_box__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../ui/date_box */88496);
      /* harmony import */
      var _ui_editor_editor__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../../ui/editor/editor */68016);
      /* harmony import */
      var _ui_form__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../../ui/form */19128);
      /* harmony import */
      var _ui_number_box__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../../ui/number_box */28692);
      /* harmony import */
      var _m_recurrence__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ./m_recurrence */33746);
      /**
       * DevExtreme (esm/__internal/scheduler/m_recurrence_editor.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var RECURRENCE_EDITOR = "dx-recurrence-editor";
      var LABEL_POSTFIX = "-label";
      var WRAPPER_POSTFIX = "-wrapper";
      var RECURRENCE_EDITOR_CONTAINER = "dx-recurrence-editor-container";
      var REPEAT_END_EDITOR = "dx-recurrence-repeat-end";
      var REPEAT_END_TYPE_EDITOR = "dx-recurrence-radiogroup-repeat-type";
      var REPEAT_COUNT_EDITOR = "dx-recurrence-numberbox-repeat-count";
      var REPEAT_UNTIL_DATE_EDITOR = "dx-recurrence-datebox-until-date";
      var RECURRENCE_BUTTON_GROUP = "dx-recurrence-button-group";
      var FREQUENCY_EDITOR = "dx-recurrence-selectbox-freq";
      var INTERVAL_EDITOR = "dx-recurrence-numberbox-interval";
      var REPEAT_ON_EDITOR = "dx-recurrence-repeat-on";
      var DAY_OF_MONTH = "dx-recurrence-numberbox-day-of-month";
      var MONTH_OF_YEAR = "dx-recurrence-selectbox-month-of-year";
      var recurrentEditorNumberBoxWidth = 70;
      var recurrentEditorSelectBoxWidth = 120;
      var defaultRecurrenceTypeIndex = 1;
      var frequenciesMessages = [{
        recurrence: "dxScheduler-recurrenceHourly",
        value: "hourly"
      }, {
        recurrence: "dxScheduler-recurrenceDaily",
        value: "daily"
      }, {
        recurrence: "dxScheduler-recurrenceWeekly",
        value: "weekly"
      }, {
        recurrence: "dxScheduler-recurrenceMonthly",
        value: "monthly"
      }, {
        recurrence: "dxScheduler-recurrenceYearly",
        value: "yearly"
      }];
      var frequencies = frequenciesMessages.map(function (item) {
        return {
          text: function text() {
            return _localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format(item.recurrence);
          },
          value: item.value
        };
      });
      var repeatEndTypes = [{
        type: "never"
      }, {
        type: "until"
      }, {
        type: "count"
      }];
      var days = ["SU", "MO", "TU", "WE", "TH", "FR", "SA"];
      var RecurrenceRule = /*#__PURE__*/function () {
        function RecurrenceRule(rule) {
          _classCallCheck(this, RecurrenceRule);
          this._recurrenceProcessor = (0, _m_recurrence__WEBPACK_IMPORTED_MODULE_15__.getRecurrenceProcessor)();
          this._recurrenceProcessor = (0, _m_recurrence__WEBPACK_IMPORTED_MODULE_15__.getRecurrenceProcessor)();
          this._recurrenceRule = this._recurrenceProcessor.evalRecurrenceRule(rule).rule;
        }
        _createClass(RecurrenceRule, [{
          key: "makeRules",
          value: function makeRules(string) {
            this._recurrenceRule = this._recurrenceProcessor.evalRecurrenceRule(string).rule;
          }
        }, {
          key: "makeRule",
          value: function makeRule(field, value) {
            if (!value || Array.isArray(value) && !value.length) {
              delete this._recurrenceRule[field];
              return;
            }
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(field)) {
              if ("until" === field) {
                delete this._recurrenceRule.count;
              }
              if ("count" === field) {
                delete this._recurrenceRule.until;
              }
              this._recurrenceRule[field] = value;
            }
          }
        }, {
          key: "getRepeatEndRule",
          value: function getRepeatEndRule() {
            var rules = this._recurrenceRule;
            if ("count" in rules) {
              return "count";
            }
            if ("until" in rules) {
              return "until";
            }
            return "never";
          }
        }, {
          key: "getRecurrenceString",
          value: function getRecurrenceString() {
            return this._recurrenceProcessor.getRecurrenceString(this._recurrenceRule);
          }
        }, {
          key: "getRules",
          value: function getRules() {
            return this._recurrenceRule;
          }
        }, {
          key: "getDaysFromByDayRule",
          value: function getDaysFromByDayRule() {
            return this._recurrenceProcessor.daysFromByDayRule(this._recurrenceRule);
          }
        }]);
        return RecurrenceRule;
      }();
      var RecurrenceEditor = /*#__PURE__*/function (_ui_editor_editor__WE) {
        _inherits(RecurrenceEditor, _ui_editor_editor__WE);
        function RecurrenceEditor() {
          _classCallCheck(this, RecurrenceEditor);
          return _callSuper(this, RecurrenceEditor, arguments);
        }
        _createClass(RecurrenceEditor, [{
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            var defaultOptions = _get(_getPrototypeOf(RecurrenceEditor.prototype), "_getDefaultOptions", this).call(this);
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(defaultOptions, {
              value: null,
              startDate: new Date(),
              firstDayOfWeek: void 0
            });
          }
        }, {
          key: "_getFirstDayOfWeek",
          value: function _getFirstDayOfWeek() {
            var firstDayOfWeek = this.option("firstDayOfWeek");
            return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(firstDayOfWeek) ? firstDayOfWeek : _localization_date__WEBPACK_IMPORTED_MODULE_7__["default"].firstDayOfWeekIndex();
          }
        }, {
          key: "_createComponent",
          value: function _createComponent(element, name) {
            var config = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            this._extendConfig(config, {
              readOnly: this.option("readOnly")
            });
            return _get(_getPrototypeOf(RecurrenceEditor.prototype), "_createComponent", this).call(this, element, name, config);
          }
        }, {
          key: "_init",
          value: function _init() {
            _get(_getPrototypeOf(RecurrenceEditor.prototype), "_init", this).call(this);
            this._recurrenceRule = new RecurrenceRule(this.option("value"));
          }
        }, {
          key: "_render",
          value: function _render() {
            _get(_getPrototypeOf(RecurrenceEditor.prototype), "_render", this).call(this);
            this.$element().addClass(RECURRENCE_EDITOR);
            this._$container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(RECURRENCE_EDITOR_CONTAINER).appendTo(this.$element());
            this._prepareEditors();
            this._renderEditors(this._$container);
          }
        }, {
          key: "getEditorByField",
          value: function getEditorByField(fieldName) {
            var editor = this.getRecurrenceForm().getEditor(fieldName);
            if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(editor)) {
              switch (fieldName) {
                case "byday":
                  editor = this._weekEditor;
                  break;
                case "count":
                  editor = this._repeatCountEditor;
                  break;
                case "until":
                  editor = this._repeatUntilDate;
              }
            }
            return editor;
          }
        }, {
          key: "_prepareEditors",
          value: function _prepareEditors() {
            var freq = (this._recurrenceRule.getRules().freq || frequenciesMessages[defaultRecurrenceTypeIndex].value).toLowerCase();
            this._editors = [this._createFreqEditor(freq), this._createIntervalEditor(freq), this._createRepeatOnLabel(freq), {
              itemType: "group",
              cssClass: REPEAT_ON_EDITOR,
              colCount: 2,
              colCountByScreen: {
                xs: 2
              },
              items: this._createRepeatOnEditor(freq)
            }, {
              itemType: "group",
              items: this._createRepeatEndEditor()
            }];
            return this._editors;
          }
        }, {
          key: "_createFreqEditor",
          value: function _createFreqEditor(freq) {
            var _this78 = this;
            return {
              dataField: "freq",
              name: "FREQ",
              editorType: "dxSelectBox",
              cssClass: FREQUENCY_EDITOR,
              editorOptions: {
                items: frequencies,
                value: freq,
                field: "freq",
                valueExpr: "value",
                displayExpr: "text",
                layout: "horizontal",
                elementAttr: {
                  "class": FREQUENCY_EDITOR
                },
                onValueChanged: function onValueChanged(args) {
                  return _this78._valueChangedHandler(args);
                }
              },
              label: {
                text: _localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format("dxScheduler-editorLabelRecurrence")
              }
            };
          }
        }, {
          key: "_createIntervalEditor",
          value: function _createIntervalEditor(freq) {
            var _this79 = this;
            var interval = this._recurrenceRule.getRules().interval || 1;
            return {
              itemType: "group",
              colCount: 2,
              cssClass: "".concat(INTERVAL_EDITOR).concat(WRAPPER_POSTFIX),
              colCountByScreen: {
                xs: 2
              },
              items: [{
                dataField: "interval",
                editorType: "dxNumberBox",
                editorOptions: {
                  format: "#",
                  width: recurrentEditorNumberBoxWidth,
                  min: 1,
                  field: "interval",
                  value: interval,
                  showSpinButtons: true,
                  useLargeSpinButtons: false,
                  elementAttr: {
                    "class": INTERVAL_EDITOR
                  },
                  onValueChanged: function onValueChanged(args) {
                    return _this79._valueChangedHandler(args);
                  }
                },
                label: {
                  text: _localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format("dxScheduler-recurrenceRepeatEvery")
                }
              }, {
                name: "intervalLabel",
                cssClass: "".concat(INTERVAL_EDITOR).concat(LABEL_POSTFIX),
                template: function template() {
                  return _localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format("dxScheduler-recurrenceRepeat".concat(freq.charAt(0).toUpperCase()).concat(freq.substr(1).toLowerCase()));
                }
              }]
            };
          }
        }, {
          key: "_createRepeatOnLabel",
          value: function _createRepeatOnLabel(freq) {
            return {
              itemType: "group",
              cssClass: "".concat(REPEAT_ON_EDITOR).concat(LABEL_POSTFIX),
              items: [{
                name: "repeatOnLabel",
                colSpan: 2,
                template: function template() {
                  return _localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format("dxScheduler-recurrenceRepeatOn");
                },
                visible: freq && "daily" !== freq && "hourly" !== freq
              }]
            };
          }
        }, {
          key: "_createRepeatOnEditor",
          value: function _createRepeatOnEditor(freq) {
            return [this._createByDayEditor(freq), this._createByMonthEditor(freq), this._createByMonthDayEditor(freq)];
          }
        }, {
          key: "_createByDayEditor",
          value: function _createByDayEditor(freq) {
            var _this80 = this;
            return {
              dataField: "byday",
              colSpan: 2,
              template: function template(_, itemElement) {
                var firstDayOfWeek = _this80._getFirstDayOfWeek();
                var byDay = _this80._daysOfWeekByRules();
                var localDaysNames = _localization_date__WEBPACK_IMPORTED_MODULE_7__["default"].getDayNames("abbreviated");
                var dayNames = days.slice(firstDayOfWeek).concat(days.slice(0, firstDayOfWeek));
                var itemsButtonGroup = localDaysNames.slice(firstDayOfWeek).concat(localDaysNames.slice(0, firstDayOfWeek)).map(function (item, index) {
                  return {
                    text: item,
                    key: dayNames[index]
                  };
                });
                _this80._$repeatOnWeek = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(RECURRENCE_BUTTON_GROUP).appendTo(itemElement);
                _this80._weekEditor = _this80._createComponent(_this80._$repeatOnWeek, _ui_button_group__WEBPACK_IMPORTED_MODULE_10__["default"], {
                  items: itemsButtonGroup,
                  field: "byday",
                  selectionMode: "multiple",
                  selectedItemKeys: byDay,
                  keyExpr: "key",
                  onSelectionChanged: function onSelectionChanged(e) {
                    var selectedItemKeys = e.component.option("selectedItemKeys");
                    var selectedKeys = (null === selectedItemKeys || void 0 === selectedItemKeys ? void 0 : selectedItemKeys.length) ? selectedItemKeys : _this80._getDefaultByDayValue();
                    _this80._recurrenceRule.makeRule("byday", selectedKeys);
                    _this80._changeEditorValue();
                  }
                });
              },
              visible: "weekly" === freq,
              label: {
                visible: false
              }
            };
          }
        }, {
          key: "_createByMonthEditor",
          value: function _createByMonthEditor(freq) {
            var _this81 = this;
            var monthsName = _localization_date__WEBPACK_IMPORTED_MODULE_7__["default"].getMonthNames("wide");
            var months = _toConsumableArray(Array(12)).map(function (_, i) {
              return {
                value: "".concat(i + 1),
                text: monthsName[i]
              };
            });
            return {
              dataField: "bymonth",
              editorType: "dxSelectBox",
              editorOptions: {
                field: "bymonth",
                items: months,
                value: this._monthOfYearByRules(),
                width: recurrentEditorSelectBoxWidth,
                displayExpr: "text",
                valueExpr: "value",
                elementAttr: {
                  "class": MONTH_OF_YEAR
                },
                onValueChanged: function onValueChanged(args) {
                  return _this81._valueChangedHandler(args);
                }
              },
              visible: "yearly" === freq,
              label: {
                visible: false
              }
            };
          }
        }, {
          key: "_createByMonthDayEditor",
          value: function _createByMonthDayEditor(freq) {
            var _this82 = this;
            return {
              dataField: "bymonthday",
              editorType: "dxNumberBox",
              editorOptions: {
                min: 1,
                max: 31,
                format: "#",
                width: recurrentEditorNumberBoxWidth,
                field: "bymonthday",
                showSpinButtons: true,
                useLargeSpinButtons: false,
                value: this._dayOfMonthByRules(),
                elementAttr: {
                  "class": DAY_OF_MONTH
                },
                onValueChanged: function onValueChanged(args) {
                  return _this82._valueChangedHandler(args);
                }
              },
              visible: "monthly" === freq || "yearly" === freq,
              label: {
                visible: false
              }
            };
          }
        }, {
          key: "_createRepeatEndEditor",
          value: function _createRepeatEndEditor() {
            var _this83 = this;
            var repeatType = this._recurrenceRule.getRepeatEndRule();
            return [{
              dataField: "repeatEnd",
              editorType: "dxRadioGroup",
              editorOptions: {
                items: repeatEndTypes,
                value: repeatType,
                valueExpr: "type",
                field: "repeatEnd",
                itemTemplate: function itemTemplate(itemData) {
                  if ("count" === itemData.type) {
                    return _this83._renderRepeatCountEditor();
                  }
                  if ("until" === itemData.type) {
                    return _this83._renderRepeatUntilEditor();
                  }
                  return _this83._renderDefaultRepeatEnd();
                },
                layout: "vertical",
                elementAttr: {
                  "class": REPEAT_END_TYPE_EDITOR
                },
                onValueChanged: function onValueChanged(args) {
                  return _this83._repeatEndValueChangedHandler(args);
                }
              },
              label: {
                text: _localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format("dxScheduler-recurrenceEnd")
              }
            }];
          }
        }, {
          key: "_renderEditors",
          value: function _renderEditors($container) {
            this._recurrenceForm = this._createComponent($container, _ui_form__WEBPACK_IMPORTED_MODULE_13__["default"], {
              items: this._editors,
              showValidationSummary: false,
              scrollingEnabled: true,
              showColonAfterLabel: false,
              labelLocation: "top"
            });
            this._disableRepeatEndParts();
          }
        }, {
          key: "_setAriaDescribedBy",
          value: function _setAriaDescribedBy(editor, $label) {
            var labelId = "label-".concat(new _core_guid__WEBPACK_IMPORTED_MODULE_2__["default"]());
            editor.setAria("describedby", labelId);
            editor.setAria("id", labelId, $label);
          }
        }, {
          key: "getRecurrenceForm",
          value: function getRecurrenceForm() {
            return this._recurrenceForm;
          }
        }, {
          key: "changeValueByVisibility",
          value: function changeValueByVisibility(value) {
            if (value) {
              if (!this.option("value")) {
                this._handleDefaults();
              }
            } else {
              this._recurrenceRule.makeRules("");
              this.option("value", "");
            }
          }
        }, {
          key: "_handleDefaults",
          value: function _handleDefaults() {
            this._recurrenceRule.makeRule("freq", frequenciesMessages[defaultRecurrenceTypeIndex].value);
            this._changeEditorValue();
          }
        }, {
          key: "_changeEditorValue",
          value: function _changeEditorValue() {
            this.option("value", this._recurrenceRule.getRecurrenceString() || "");
          }
        }, {
          key: "_daysOfWeekByRules",
          value: function _daysOfWeekByRules() {
            var daysByRule = this._recurrenceRule.getDaysFromByDayRule();
            if (!daysByRule.length) {
              daysByRule = this._getDefaultByDayValue();
            }
            return daysByRule;
          }
        }, {
          key: "_getDefaultByDayValue",
          value: function _getDefaultByDayValue() {
            var startDate = this.option("startDate");
            var startDay = startDate.getDay();
            return [days[startDay]];
          }
        }, {
          key: "_dayOfMonthByRules",
          value: function _dayOfMonthByRules() {
            var dayByRule = this._recurrenceRule.getRules().bymonthday;
            if (!dayByRule) {
              dayByRule = this.option("startDate").getDate();
            }
            return dayByRule;
          }
        }, {
          key: "_monthOfYearByRules",
          value: function _monthOfYearByRules() {
            var monthByRule = this._recurrenceRule.getRules().bymonth;
            if (!monthByRule) {
              monthByRule = this.option("startDate").getMonth() + 1;
            }
            return String(monthByRule);
          }
        }, {
          key: "_renderDefaultRepeatEnd",
          value: function _renderDefaultRepeatEnd() {
            var $editorTemplate = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").text(_localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format("dxScheduler-recurrenceNever")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorTemplate);
            return $editorTemplate;
          }
        }, {
          key: "_repeatEndValueChangedHandler",
          value: function _repeatEndValueChangedHandler(args) {
            var value = args.value;
            this._disableRepeatEndParts(value);
            if ("until" === value) {
              this._recurrenceRule.makeRule(value, this._getUntilValue());
            }
            if ("count" === value) {
              this._recurrenceRule.makeRule(value, this._repeatCountEditor.option("value"));
            }
            if ("never" === value) {
              this._recurrenceRule.makeRule("count", "");
              this._recurrenceRule.makeRule("until", "");
            }
            this._changeEditorValue();
          }
        }, {
          key: "_disableRepeatEndParts",
          value: function _disableRepeatEndParts() {
            var value = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._recurrenceRule.getRepeatEndRule();
            if ("until" === value) {
              this._repeatCountEditor.option("disabled", true);
              this._repeatUntilDate.option("disabled", false);
            }
            if ("count" === value) {
              this._repeatCountEditor.option("disabled", false);
              this._repeatUntilDate.option("disabled", true);
            }
            if ("never" === value) {
              this._repeatCountEditor.option("disabled", true);
              this._repeatUntilDate.option("disabled", true);
            }
          }
        }, {
          key: "_renderRepeatCountEditor",
          value: function _renderRepeatCountEditor() {
            var repeatCount = this._recurrenceRule.getRules().count || 1;
            var $editorWrapper = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").text(_localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format("dxScheduler-recurrenceAfter")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);
            this._$repeatCountEditor = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(REPEAT_COUNT_EDITOR).appendTo($editorWrapper);
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").text(_localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format("dxScheduler-recurrenceRepeatCount")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);
            this._repeatCountEditor = this._createComponent(this._$repeatCountEditor, _ui_number_box__WEBPACK_IMPORTED_MODULE_14__["default"], {
              field: "count",
              format: "#",
              width: recurrentEditorNumberBoxWidth,
              min: 1,
              showSpinButtons: true,
              useLargeSpinButtons: false,
              value: repeatCount,
              onValueChanged: this._repeatCountValueChangeHandler.bind(this)
            });
            return $editorWrapper;
          }
        }, {
          key: "_repeatCountValueChangeHandler",
          value: function _repeatCountValueChangeHandler(args) {
            if ("count" === this._recurrenceRule.getRepeatEndRule()) {
              var value = args.value;
              this._recurrenceRule.makeRule("count", value);
              this._changeEditorValue();
            }
          }
        }, {
          key: "_formatUntilDate",
          value: function _formatUntilDate(date) {
            if (this._recurrenceRule.getRules().until && _core_utils_date__WEBPACK_IMPORTED_MODULE_4__["default"].sameDate(this._recurrenceRule.getRules().until, date)) {
              return date;
            }
            return _core_utils_date__WEBPACK_IMPORTED_MODULE_4__["default"].setToDayEnd(date);
          }
        }, {
          key: "_renderRepeatUntilEditor",
          value: function _renderRepeatUntilEditor() {
            var repeatUntil = this._getUntilValue();
            var $editorWrapper = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").text(_localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format("dxScheduler-recurrenceOn")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);
            this._$repeatDateEditor = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(REPEAT_UNTIL_DATE_EDITOR).appendTo($editorWrapper);
            this._repeatUntilDate = this._createComponent(this._$repeatDateEditor, _ui_date_box__WEBPACK_IMPORTED_MODULE_11__["default"], {
              field: "until",
              value: repeatUntil,
              type: "date",
              onValueChanged: this._repeatUntilValueChangeHandler.bind(this),
              calendarOptions: {
                firstDayOfWeek: this._getFirstDayOfWeek()
              },
              useMaskBehavior: true
            });
            return $editorWrapper;
          }
        }, {
          key: "_repeatUntilValueChangeHandler",
          value: function _repeatUntilValueChangeHandler(args) {
            if ("until" === this._recurrenceRule.getRepeatEndRule()) {
              var dateInTimeZone = this._formatUntilDate(new Date(args.value));
              var getStartDateTimeZone = this.option("getStartDateTimeZone");
              var appointmentTimeZone = getStartDateTimeZone();
              var path = appointmentTimeZone ? _renovation_ui_scheduler_timeZoneCalculator_types__WEBPACK_IMPORTED_MODULE_9__.PathTimeZoneConversion.fromAppointmentToSource : _renovation_ui_scheduler_timeZoneCalculator_types__WEBPACK_IMPORTED_MODULE_9__.PathTimeZoneConversion.fromGridToSource;
              var dateInLocaleTimeZone = this.option("timeZoneCalculator").createDate(dateInTimeZone, {
                path: path,
                appointmentTimeZone: appointmentTimeZone
              });
              this._recurrenceRule.makeRule("until", dateInLocaleTimeZone);
              this._changeEditorValue();
            }
          }
        }, {
          key: "_valueChangedHandler",
          value: function _valueChangedHandler(args) {
            var value = args.value,
              previousValue = args.previousValue;
            var field = args.component.option("field");
            if (!this.option("visible")) {
              this.option("value", "");
            } else {
              this._recurrenceRule.makeRule(field, value);
              if ("freq" === field) {
                this._makeRepeatOnRule(value);
                this._changeRepeatOnVisibility(value, previousValue);
              }
              this._changeEditorValue();
            }
          }
        }, {
          key: "_makeRepeatOnRule",
          value: function _makeRepeatOnRule(value) {
            if ("daily" === value || "hourly" === value) {
              this._recurrenceRule.makeRule("byday", "");
              this._recurrenceRule.makeRule("bymonth", "");
              this._recurrenceRule.makeRule("bymonthday", "");
            }
            if ("weekly" === value) {
              this._recurrenceRule.makeRule("byday", this._daysOfWeekByRules());
              this._recurrenceRule.makeRule("bymonth", "");
              this._recurrenceRule.makeRule("bymonthday", "");
            }
            if ("monthly" === value) {
              this._recurrenceRule.makeRule("bymonthday", this._dayOfMonthByRules());
              this._recurrenceRule.makeRule("bymonth", "");
              this._recurrenceRule.makeRule("byday", "");
            }
            if ("yearly" === value) {
              this._recurrenceRule.makeRule("bymonthday", this._dayOfMonthByRules());
              this._recurrenceRule.makeRule("bymonth", this._monthOfYearByRules());
              this._recurrenceRule.makeRule("byday", "");
            }
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(args) {
            var _a, _b, _c, _d;
            switch (args.name) {
              case "readOnly":
                null === (_a = this._recurrenceForm) || void 0 === _a ? void 0 : _a.option("readOnly", args.value);
                null === (_b = this._repeatCountEditor) || void 0 === _b ? void 0 : _b.option("readOnly", args.value);
                null === (_c = this._weekEditor) || void 0 === _c ? void 0 : _c.option("readOnly", args.value);
                null === (_d = this._repeatUntilDate) || void 0 === _d ? void 0 : _d.option("readOnly", args.value);
                _get(_getPrototypeOf(RecurrenceEditor.prototype), "_optionChanged", this).call(this, args);
                break;
              case "value":
                this._recurrenceRule.makeRules(args.value);
                this._changeRepeatIntervalLabel();
                this._disableRepeatEndParts();
                this._changeEditorsValue(this._recurrenceRule.getRules());
                _get(_getPrototypeOf(RecurrenceEditor.prototype), "_optionChanged", this).call(this, args);
                break;
              case "startDate":
                this._makeRepeatOnRule(this._recurrenceRule.getRules().freq);
                if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(this._recurrenceRule.getRecurrenceString())) {
                  this._changeEditorValue();
                }
                break;
              case "firstDayOfWeek":
                if (this._weekEditor) {
                  var localDaysNames = _localization_date__WEBPACK_IMPORTED_MODULE_7__["default"].getDayNames("abbreviated");
                  var dayNames = days.slice(args.value).concat(days.slice(0, args.value));
                  var itemsButtonGroup = localDaysNames.slice(args.value).concat(localDaysNames.slice(0, args.value)).map(function (item, index) {
                    return {
                      text: item,
                      key: dayNames[index]
                    };
                  });
                  this._weekEditor.option("items", itemsButtonGroup);
                }
                if (this._$repeatDateEditor) {
                  this._repeatUntilDate.option("calendarOptions.firstDayOfWeek", this._getFirstDayOfWeek());
                }
                break;
              default:
                _get(_getPrototypeOf(RecurrenceEditor.prototype), "_optionChanged", this).call(this, args);
            }
          }
        }, {
          key: "_changeRepeatOnVisibility",
          value: function _changeRepeatOnVisibility(freq, previousFreq) {
            if (freq !== previousFreq) {
              this._recurrenceForm.itemOption("byday", "visible", false);
              this._recurrenceForm.itemOption("bymonthday", "visible", false);
              this._recurrenceForm.itemOption("bymonth", "visible", false);
              this._recurrenceForm.itemOption("repeatOnLabel", "visible", freq && "daily" !== freq && "hourly" !== freq);
              if ("weekly" === freq) {
                this._recurrenceForm.itemOption("byday", "visible", true);
              }
              if ("monthly" === freq) {
                this._recurrenceForm.itemOption("bymonthday", "visible", true);
              }
              if ("yearly" === freq) {
                this._recurrenceForm.itemOption("bymonthday", "visible", true);
                this._recurrenceForm.itemOption("bymonth", "visible", true);
              }
            }
          }
        }, {
          key: "_changeRepeatIntervalLabel",
          value: function _changeRepeatIntervalLabel() {
            var _this$_recurrenceRule = this._recurrenceRule.getRules(),
              freq = _this$_recurrenceRule.freq;
            freq && this._recurrenceForm.itemOption("intervalLabel", "template", _localization_message__WEBPACK_IMPORTED_MODULE_8__["default"].format("dxScheduler-recurrenceRepeat".concat(freq.charAt(0).toUpperCase()).concat(freq.substr(1).toLowerCase())));
          }
        }, {
          key: "_changeEditorsValue",
          value: function _changeEditorsValue(rules) {
            this._recurrenceForm.getEditor("freq").option("value", (rules.freq || frequenciesMessages[defaultRecurrenceTypeIndex].value).toLowerCase());
            this._changeDayOfWeekValue();
            this._changeDayOfMonthValue();
            this._changeMonthOfYearValue();
            this._changeIntervalValue(rules.interval);
            this._changeRepeatCountValue();
            this._changeRepeatEndValue();
            this._changeRepeatUntilValue();
          }
        }, {
          key: "_changeIntervalValue",
          value: function _changeIntervalValue(value) {
            this._recurrenceForm.getEditor("interval").option("value", value || 1);
          }
        }, {
          key: "_changeRepeatEndValue",
          value: function _changeRepeatEndValue() {
            var repeatType = this._recurrenceRule.getRepeatEndRule();
            this._recurrenceForm.getEditor("repeatEnd").option("value", repeatType);
          }
        }, {
          key: "_changeDayOfWeekValue",
          value: function _changeDayOfWeekValue() {
            var isEditorVisible = this._recurrenceForm.itemOption("byday").visible;
            if (isEditorVisible) {
              var _days = this._daysOfWeekByRules();
              this.getEditorByField("byday").option("selectedItemKeys", _days);
            }
          }
        }, {
          key: "_changeDayOfMonthValue",
          value: function _changeDayOfMonthValue() {
            var isEditorVisible = this._recurrenceForm.itemOption("bymonthday").visible;
            if (isEditorVisible) {
              var day = this._dayOfMonthByRules();
              this._recurrenceForm.getEditor("bymonthday").option("value", day);
            }
          }
        }, {
          key: "_changeMonthOfYearValue",
          value: function _changeMonthOfYearValue() {
            var isEditorVisible = this._recurrenceForm.itemOption("bymonth").visible;
            if (isEditorVisible) {
              var month = this._monthOfYearByRules();
              this._recurrenceForm.getEditor("bymonth").option("value", month);
            }
          }
        }, {
          key: "_changeRepeatCountValue",
          value: function _changeRepeatCountValue() {
            var count = this._recurrenceRule.getRules().count || 1;
            this._repeatCountEditor.option("value", count);
          }
        }, {
          key: "_changeRepeatUntilValue",
          value: function _changeRepeatUntilValue() {
            this._repeatUntilDate.option("value", this._getUntilValue());
          }
        }, {
          key: "_getUntilValue",
          value: function _getUntilValue() {
            var untilDate = this._recurrenceRule.getRules().until;
            if (!untilDate) {
              return this._formatUntilDate(new Date());
            }
            var getStartDateTimeZone = this.option("getStartDateTimeZone");
            var appointmentTimeZone = getStartDateTimeZone();
            var path = appointmentTimeZone ? _renovation_ui_scheduler_timeZoneCalculator_types__WEBPACK_IMPORTED_MODULE_9__.PathTimeZoneConversion.fromSourceToAppointment : _renovation_ui_scheduler_timeZoneCalculator_types__WEBPACK_IMPORTED_MODULE_9__.PathTimeZoneConversion.fromSourceToGrid;
            return this.option("timeZoneCalculator").createDate(untilDate, {
              path: path,
              appointmentTimeZone: appointmentTimeZone
            });
          }
        }, {
          key: "toggle",
          value: function toggle() {
            this._freqEditor.focus();
          }
        }, {
          key: "setAria",
          value: function setAria() {
            if (this._switchEditor) {
              this._switchEditor.setAria(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1]);
            }
          }
        }]);
        return RecurrenceEditor;
      }(_ui_editor_editor__WEBPACK_IMPORTED_MODULE_12__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__["default"])("dxRecurrenceEditor", RecurrenceEditor);
      /* harmony default export */
      __webpack_exports__["default"] = RecurrenceEditor;

      /***/
    }),
    /***/74931: (
    /*!*************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_scheduler.js ***!
      \*************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/component_registrator */2382);
      /* harmony import */
      var _core_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/config */99284);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/devices */41881);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../core/templates/bindable_template */32503);
      /* harmony import */
      var _core_templates_empty_template__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../core/templates/empty_template */3896);
      /* harmony import */
      var _core_utils_callbacks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../core/utils/callbacks */18557);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../core/utils/common */37552);
      /* harmony import */
      var _core_utils_data__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../core/utils/data */25670);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../core/utils/date_serialization */37043);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../../core/utils/position */9622);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__( /*! ../../core/utils/window */88684);
      /* harmony import */
      var _data_helper__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__( /*! ../../data_helper */53454);
      /* harmony import */
      var _events_visibility_change__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__( /*! ../../events/visibility_change */23495);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__( /*! ../../localization/date */83881);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__( /*! ../../localization/message */19336);
      /* harmony import */
      var _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__( /*! ../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay */89448);
      /* harmony import */
      var _renovation_ui_scheduler_model_untyped_getCurrentView__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__( /*! ../../renovation/ui/scheduler/model/untyped_getCurrentView */80337);
      /* harmony import */
      var _renovation_ui_scheduler_timeZoneCalculator_createTimeZoneCalculator__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__( /*! ../../renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator */41059);
      /* harmony import */
      var _renovation_ui_scheduler_utils_data__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__( /*! ../../renovation/ui/scheduler/utils/data */48543);
      /* harmony import */
      var _renovation_ui_scheduler_utils_recurrence_excludeFromRecurrence__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__( /*! ../../renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence */68913);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__( /*! ../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _ui_dialog__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__( /*! ../../ui/dialog */95752);
      /* harmony import */
      var _ui_themes__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__( /*! ../../ui/themes */78279);
      /* harmony import */
      var _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__( /*! ../../ui/widget/ui.errors */42491);
      /* harmony import */
      var _ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__( /*! ../../ui/widget/ui.widget */69703);
      /* harmony import */
      var _appointment_popup_m_form__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__( /*! ./appointment_popup/m_form */30892);
      /* harmony import */
      var _appointment_popup_m_popup__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__( /*! ./appointment_popup/m_popup */80619);
      /* harmony import */
      var _appointments_data_provider_m_appointment_data_provider__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__( /*! ./appointments/data_provider/m_appointment_data_provider */33845);
      /* harmony import */
      var _appointments_m_appointment_collection__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__( /*! ./appointments/m_appointment_collection */13216);
      /* harmony import */
      var _appointments_m_render__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__( /*! ./appointments/m_render */95126);
      /* harmony import */
      var _header_m_header__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__( /*! ./header/m_header */67036);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__( /*! ./m_appointment_adapter */91634);
      /* harmony import */
      var _m_appointments_layout_manager__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__( /*! ./m_appointments_layout_manager */57970);
      /* harmony import */
      var _m_compact_appointments_helper__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__( /*! ./m_compact_appointments_helper */84908);
      /* harmony import */
      var _m_data_structures__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__( /*! ./m_data_structures */77138);
      /* harmony import */
      var _m_expression_utils__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__( /*! ./m_expression_utils */31363);
      /* harmony import */
      var _m_loading__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__( /*! ./m_loading */27122);
      /* harmony import */
      var _m_recurrence__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__( /*! ./m_recurrence */33746);
      /* harmony import */
      var _m_subscribes__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__( /*! ./m_subscribes */6700);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__( /*! ./m_utils */8392);
      /* harmony import */
      var _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__( /*! ./m_utils_time_zone */98281);
      /* harmony import */
      var _resources_m_agenda_resource_processor__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__( /*! ./resources/m_agenda_resource_processor */220);
      /* harmony import */
      var _resources_m_utils__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__( /*! ./resources/m_utils */48025);
      /* harmony import */
      var _tooltip_strategies_m_desktop_tooltip_strategy__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__( /*! ./tooltip_strategies/m_desktop_tooltip_strategy */25209);
      /* harmony import */
      var _tooltip_strategies_m_mobile_tooltip_strategy__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__( /*! ./tooltip_strategies/m_mobile_tooltip_strategy */20509);
      /* harmony import */
      var _workspaces_m_agenda__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__( /*! ./workspaces/m_agenda */22693);
      /* harmony import */
      var _workspaces_m_timeline_day__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__( /*! ./workspaces/m_timeline_day */86790);
      /* harmony import */
      var _workspaces_m_timeline_month__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__( /*! ./workspaces/m_timeline_month */83227);
      /* harmony import */
      var _workspaces_m_timeline_week__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__( /*! ./workspaces/m_timeline_week */1836);
      /* harmony import */
      var _workspaces_m_timeline_work_week__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__( /*! ./workspaces/m_timeline_work_week */59820);
      /* harmony import */
      var _workspaces_m_work_space_day__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__( /*! ./workspaces/m_work_space_day */90890);
      /* harmony import */
      var _workspaces_m_work_space_month__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__( /*! ./workspaces/m_work_space_month */85123);
      /* harmony import */
      var _workspaces_m_work_space_week__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__( /*! ./workspaces/m_work_space_week */66156);
      /* harmony import */
      var _workspaces_m_work_space_work_week__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__( /*! ./workspaces/m_work_space_work_week */35139);
      /**
       * DevExtreme (esm/__internal/scheduler/m_scheduler.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var MINUTES_IN_HOUR = 60;
      var DEFAULT_AGENDA_DURATION = 7;
      var WIDGET_CLASS = "dx-scheduler";
      var WIDGET_SMALL_CLASS = "".concat(WIDGET_CLASS, "-small");
      var WIDGET_ADAPTIVE_CLASS = "".concat(WIDGET_CLASS, "-adaptive");
      var WIDGET_READONLY_CLASS = "".concat(WIDGET_CLASS, "-readonly");
      var WIDGET_SMALL_WIDTH = 400;
      var FULL_DATE_FORMAT = "yyyyMMddTHHmmss";
      var UTC_FULL_DATE_FORMAT = "".concat(FULL_DATE_FORMAT, "Z");
      var DEFAULT_APPOINTMENT_TEMPLATE_NAME = "item";
      var DEFAULT_APPOINTMENT_COLLECTOR_TEMPLATE_NAME = "appointmentCollector";
      var DEFAULT_DROP_DOWN_APPOINTMENT_TEMPLATE_NAME = "dropDownAppointment";
      var VIEWS_CONFIG = {
        day: {
          workSpace: _workspaces_m_work_space_day__WEBPACK_IMPORTED_MODULE_57__["default"],
          renderingStrategy: "vertical"
        },
        week: {
          workSpace: _workspaces_m_work_space_week__WEBPACK_IMPORTED_MODULE_59__["default"],
          renderingStrategy: "vertical"
        },
        workWeek: {
          workSpace: _workspaces_m_work_space_work_week__WEBPACK_IMPORTED_MODULE_60__["default"],
          renderingStrategy: "vertical"
        },
        month: {
          workSpace: _workspaces_m_work_space_month__WEBPACK_IMPORTED_MODULE_58__["default"],
          renderingStrategy: "horizontalMonth"
        },
        timelineDay: {
          workSpace: _workspaces_m_timeline_day__WEBPACK_IMPORTED_MODULE_53__["default"],
          renderingStrategy: "horizontal"
        },
        timelineWeek: {
          workSpace: _workspaces_m_timeline_week__WEBPACK_IMPORTED_MODULE_55__["default"],
          renderingStrategy: "horizontal"
        },
        timelineWorkWeek: {
          workSpace: _workspaces_m_timeline_work_week__WEBPACK_IMPORTED_MODULE_56__["default"],
          renderingStrategy: "horizontal"
        },
        timelineMonth: {
          workSpace: _workspaces_m_timeline_month__WEBPACK_IMPORTED_MODULE_54__["default"],
          renderingStrategy: "horizontalMonthLine"
        },
        agenda: {
          workSpace: _workspaces_m_agenda__WEBPACK_IMPORTED_MODULE_52__["default"],
          renderingStrategy: "agenda"
        }
      };
      var StoreEventNames = {
        ADDING: "onAppointmentAdding",
        ADDED: "onAppointmentAdded",
        DELETING: "onAppointmentDeleting",
        DELETED: "onAppointmentDeleted",
        UPDATING: "onAppointmentUpdating",
        UPDATED: "onAppointmentUpdated"
      };
      var RECURRENCE_EDITING_MODE = {
        SERIES: "editSeries",
        OCCURENCE: "editOccurence",
        CANCEL: "cancel"
      };
      var Scheduler = /*#__PURE__*/function (_ui_widget_ui_widget_4) {
        _inherits(Scheduler, _ui_widget_ui_widget_4);
        function Scheduler() {
          _classCallCheck(this, Scheduler);
          return _callSuper(this, Scheduler, arguments);
        }
        _createClass(Scheduler, [{
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            var defaultOptions = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)(_get(_getPrototypeOf(Scheduler.prototype), "_getDefaultOptions", this).call(this), {
              views: ["day", "week"],
              currentView: "day",
              currentDate: _core_utils_date__WEBPACK_IMPORTED_MODULE_10__["default"].trimTime(new Date()),
              min: void 0,
              max: void 0,
              dateSerializationFormat: void 0,
              firstDayOfWeek: void 0,
              groups: [],
              resources: [],
              loadedResources: [],
              resourceLoaderMap: new Map(),
              dataSource: null,
              customizeDateNavigatorText: void 0,
              appointmentTemplate: DEFAULT_APPOINTMENT_TEMPLATE_NAME,
              dropDownAppointmentTemplate: DEFAULT_DROP_DOWN_APPOINTMENT_TEMPLATE_NAME,
              appointmentCollectorTemplate: DEFAULT_APPOINTMENT_COLLECTOR_TEMPLATE_NAME,
              dataCellTemplate: null,
              timeCellTemplate: null,
              resourceCellTemplate: null,
              dateCellTemplate: null,
              startDayHour: 0,
              endDayHour: 24,
              editing: {
                allowAdding: true,
                allowDeleting: true,
                allowDragging: true,
                allowResizing: true,
                allowUpdating: true,
                allowTimeZoneEditing: false
              },
              showAllDayPanel: true,
              showCurrentTimeIndicator: true,
              shadeUntilCurrentTime: false,
              indicatorUpdateInterval: 3e5,
              indicatorTime: void 0,
              recurrenceEditMode: "dialog",
              cellDuration: 30,
              maxAppointmentsPerCell: "auto",
              selectedCellData: [],
              groupByDate: false,
              onAppointmentRendered: null,
              onAppointmentClick: null,
              onAppointmentDblClick: null,
              onAppointmentContextMenu: null,
              onCellClick: null,
              onCellContextMenu: null,
              onAppointmentAdding: null,
              onAppointmentAdded: null,
              onAppointmentUpdating: null,
              onAppointmentUpdated: null,
              onAppointmentDeleting: null,
              onAppointmentDeleted: null,
              onAppointmentFormOpening: null,
              onAppointmentTooltipShowing: null,
              appointmentTooltipTemplate: "appointmentTooltip",
              appointmentPopupTemplate: "appointmentPopup",
              crossScrollingEnabled: false,
              useDropDownViewSwitcher: false,
              startDateExpr: "startDate",
              endDateExpr: "endDate",
              textExpr: "text",
              descriptionExpr: "description",
              allDayExpr: "allDay",
              recurrenceRuleExpr: "recurrenceRule",
              recurrenceExceptionExpr: "recurrenceException",
              disabledExpr: "disabled",
              remoteFiltering: false,
              timeZone: "",
              startDateTimeZoneExpr: "startDateTimeZone",
              endDateTimeZoneExpr: "endDateTimeZone",
              noDataText: _localization_message__WEBPACK_IMPORTED_MODULE_21__["default"].format("dxCollectionWidget-noDataText"),
              adaptivityEnabled: false,
              allowMultipleCellSelection: true,
              scrolling: {
                mode: "standard"
              },
              allDayPanelMode: "all",
              renovateRender: true,
              _draggingMode: "outlook",
              _appointmentTooltipOffset: {
                x: 0,
                y: 0
              },
              _appointmentTooltipButtonsPosition: "bottom",
              _appointmentTooltipOpenButtonText: _localization_message__WEBPACK_IMPORTED_MODULE_21__["default"].format("dxScheduler-openAppointment"),
              _appointmentCountPerCell: 2,
              _collectorOffset: 0,
              _appointmentOffset: 26,
              toolbar: [{
                location: "before",
                defaultElement: "dateNavigator"
              }, {
                location: "after",
                defaultElement: "viewSwitcher"
              }]
            });
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)(true, defaultOptions, {
              integrationOptions: {
                useDeferUpdateForTemplates: false
              }
            });
          }
        }, {
          key: "filteredItems",
          get: function get() {
            if (!this._filteredItems) {
              this._filteredItems = [];
            }
            return this._filteredItems;
          },
          set: function set(value) {
            this._filteredItems = value;
          }
        }, {
          key: "preparedItems",
          get: function get() {
            if (!this._preparedItems) {
              this._preparedItems = [];
            }
            return this._preparedItems;
          },
          set: function set(value) {
            this._preparedItems = value;
          }
        }, {
          key: "currentView",
          get: function get() {
            return (0, _renovation_ui_scheduler_model_untyped_getCurrentView__WEBPACK_IMPORTED_MODULE_23__.renovationGetCurrentView)(this.option("currentView"), this.option("views"));
          }
        }, {
          key: "currentViewType",
          get: function get() {
            return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isObject)(this.currentView) ? this.currentView.type : this.currentView;
          }
        }, {
          key: "timeZoneCalculator",
          get: function get() {
            if (!this._timeZoneCalculator) {
              this._timeZoneCalculator = (0, _renovation_ui_scheduler_timeZoneCalculator_createTimeZoneCalculator__WEBPACK_IMPORTED_MODULE_24__.createTimeZoneCalculator)(this.option("timeZone"));
            }
            return this._timeZoneCalculator;
          }
        }, {
          key: "_setDeprecatedOptions",
          value: function _setDeprecatedOptions() {
            _get(_getPrototypeOf(Scheduler.prototype), "_setDeprecatedOptions", this).call(this);
            (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)(this._deprecatedOptions, {
              dropDownAppointmentTemplate: {
                since: "19.2",
                message: "appointmentTooltipTemplate"
              }
            });
          }
        }, {
          key: "_defaultOptionsRules",
          value: function _defaultOptionsRules() {
            return _get(_getPrototypeOf(Scheduler.prototype), "_defaultOptionsRules", this).call(this).concat([{
              device: function device() {
                return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_3__["default"].real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_3__["default"].isSimulator();
              },
              options: {
                focusStateEnabled: true
              }
            }, {
              device: function device() {
                return !_core_devices__WEBPACK_IMPORTED_MODULE_3__["default"].current().generic;
              },
              options: {
                useDropDownViewSwitcher: true,
                editing: {
                  allowDragging: false,
                  allowResizing: false
                }
              }
            }, {
              device: function device() {
                return (0, _ui_themes__WEBPACK_IMPORTED_MODULE_29__.isMaterial)();
              },
              options: {
                useDropDownViewSwitcher: true,
                dateCellTemplate: function dateCellTemplate(data, index, element) {
                  var text = data.text;
                  text.split(" ").forEach(function (text, index) {
                    var span = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<span>").text(text).addClass("dx-scheduler-header-panel-cell-date");
                    (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(element).append(span);
                    if (!index) {
                      (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(element).append(" ");
                    }
                  });
                },
                _appointmentTooltipOffset: {
                  x: 0,
                  y: 11
                },
                _appointmentTooltipButtonsPosition: "top",
                _appointmentTooltipOpenButtonText: null,
                _appointmentCountPerCell: 1,
                _collectorOffset: 20,
                _appointmentOffset: 30
              }
            }]);
          }
        }, {
          key: "_postponeDataSourceLoading",
          value: function _postponeDataSourceLoading(promise) {
            this.postponedOperations.add("_reloadDataSource", this._reloadDataSource.bind(this), promise);
          }
        }, {
          key: "_postponeResourceLoading",
          value: function _postponeResourceLoading() {
            var _this84 = this;
            var whenLoaded = this.postponedOperations.add("loadResources", function () {
              var groups = _this84._getCurrentViewOption("groups");
              return (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_49__.loadResources)(groups, _this84.option("resources"), _this84.option("resourceLoaderMap"));
            });
            var resolveCallbacks = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.Deferred();
            whenLoaded.done(function (resources) {
              _this84.option("loadedResources", resources);
              resolveCallbacks.resolve(resources);
            });
            this._postponeDataSourceLoading(whenLoaded);
            return resolveCallbacks.promise();
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(args) {
            var _this85 = this;
            var _a, _b, _c, _d;
            var value = args.value;
            var name = args.name;
            switch (args.name) {
              case "customizeDateNavigatorText":
                this._updateOption("header", name, value);
                break;
              case "firstDayOfWeek":
                this._updateOption("workSpace", name, value);
                this._updateOption("header", name, value);
                break;
              case "currentDate":
                value = this._dateOption(name);
                value = _core_utils_date__WEBPACK_IMPORTED_MODULE_10__["default"].trimTime(new Date(value));
                this.option("selectedCellData", []);
                this._workSpace.option(name, new Date(value));
                null === (_a = this._header) || void 0 === _a ? void 0 : _a.option(name, new Date(value));
                null === (_b = this._header) || void 0 === _b ? void 0 : _b.option("startViewDate", this.getStartViewDate());
                this._appointments.option("items", []);
                this._filterAppointmentsByDate();
                this._postponeDataSourceLoading();
                break;
              case "dataSource":
                this._initDataSource();
                this.appointmentDataProvider.setDataSource(this._dataSource);
                this._postponeResourceLoading().done(function () {
                  _this85._filterAppointmentsByDate();
                  _this85._updateOption("workSpace", "showAllDayPanel", _this85.option("showAllDayPanel"));
                });
                break;
              case "min":
              case "max":
                value = this._dateOption(name);
                this._updateOption("header", name, new Date(value));
                this._updateOption("workSpace", name, new Date(value));
                break;
              case "views":
                if (this._getCurrentViewOptions()) {
                  this.repaint();
                } else {
                  null === (_c = this._header) || void 0 === _c ? void 0 : _c.option(name, value);
                }
                break;
              case "useDropDownViewSwitcher":
                null === (_d = this._header) || void 0 === _d ? void 0 : _d.option(name, value);
                break;
              case "currentView":
                this._validateDayHours();
                this._validateCellDuration();
                this._appointments.option({
                  items: [],
                  allowDrag: this._allowDragging(),
                  allowResize: this._allowResizing(),
                  itemTemplate: this._getAppointmentTemplate("appointmentTemplate")
                });
                this._postponeResourceLoading().done(function (resources) {
                  var _a;
                  _this85._refreshWorkSpace(resources);
                  null === (_a = _this85._header) || void 0 === _a ? void 0 : _a.option(_this85._headerConfig());
                  _this85._filterAppointmentsByDate();
                  _this85._appointments.option("allowAllDayResize", "day" !== value);
                });
                this.postponedOperations.callPostponedOperations();
                break;
              case "appointmentTemplate":
                this._appointments.option("itemTemplate", value);
                break;
              case "dateCellTemplate":
              case "resourceCellTemplate":
              case "dataCellTemplate":
              case "timeCellTemplate":
                this.repaint();
                break;
              case "groups":
                this._postponeResourceLoading().done(function (resources) {
                  _this85._refreshWorkSpace(resources);
                  _this85._filterAppointmentsByDate();
                });
                break;
              case "resources":
                this._dataAccessors.resources = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_49__.createExpressions)(this.option("resources"));
                this.agendaResourceProcessor.initializeState(this.option("resources"));
                this.updateInstances();
                this._postponeResourceLoading().done(function (resources) {
                  _this85._appointments.option("items", []);
                  _this85._refreshWorkSpace(resources);
                  _this85._filterAppointmentsByDate();
                  _this85._createAppointmentPopupForm();
                });
                break;
              case "startDayHour":
              case "endDayHour":
                this._validateDayHours();
                this.updateInstances();
                this._appointments.option("items", []);
                this._updateOption("workSpace", name, value);
                this._appointments.repaint();
                this._filterAppointmentsByDate();
                this._postponeDataSourceLoading();
                break;
              case StoreEventNames.ADDING:
              case StoreEventNames.ADDED:
              case StoreEventNames.UPDATING:
              case StoreEventNames.UPDATED:
              case StoreEventNames.DELETING:
              case StoreEventNames.DELETED:
              case "onAppointmentFormOpening":
              case "onAppointmentTooltipShowing":
                this._actions[name] = this._createActionByOption(name);
                break;
              case "onAppointmentRendered":
                this._appointments.option("onItemRendered", this._getAppointmentRenderedAction());
                break;
              case "onAppointmentClick":
                this._appointments.option("onItemClick", this._createActionByOption(name));
                break;
              case "onAppointmentDblClick":
                this._appointments.option(name, this._createActionByOption(name));
                break;
              case "onAppointmentContextMenu":
                this._appointments.option("onItemContextMenu", this._createActionByOption(name));
                this._appointmentTooltip._options.onItemContextMenu = this._createActionByOption(name);
                break;
              case "noDataText":
              case "allowMultipleCellSelection":
              case "selectedCellData":
              case "accessKey":
              case "onCellClick":
              case "onCellContextMenu":
                this._workSpace.option(name, value);
                break;
              case "crossScrollingEnabled":
                this._postponeResourceLoading().done(function (resources) {
                  _this85._appointments.option("items", []);
                  _this85._refreshWorkSpace(resources);
                  if (_this85._readyToRenderAppointments) {
                    _this85._appointments.option("items", _this85._getAppointmentsToRepaint());
                  }
                });
                break;
              case "cellDuration":
                this._validateCellDuration();
                this._updateOption("workSpace", name, value);
                this._appointments.option("items", []);
                if (this._readyToRenderAppointments) {
                  this._updateOption("workSpace", "hoursInterval", value / 60);
                  this._appointments.option("items", this._getAppointmentsToRepaint());
                }
                break;
              case "tabIndex":
              case "focusStateEnabled":
                this._updateOption("header", name, value);
                this._updateOption("workSpace", name, value);
                this._appointments.option(name, value);
                _get(_getPrototypeOf(Scheduler.prototype), "_optionChanged", this).call(this, args);
                break;
              case "width":
                this._updateOption("header", name, value);
                if (this.option("crossScrollingEnabled")) {
                  this._updateOption("workSpace", "width", value);
                }
                this._updateOption("workSpace", "schedulerWidth", value);
                _get(_getPrototypeOf(Scheduler.prototype), "_optionChanged", this).call(this, args);
                this._dimensionChanged(null, true);
                break;
              case "height":
                _get(_getPrototypeOf(Scheduler.prototype), "_optionChanged", this).call(this, args);
                this._dimensionChanged(null, true);
                this._updateOption("workSpace", "schedulerHeight", value);
                break;
              case "editing":
                this._initEditing();
                var editing = this._editing;
                this._bringEditingModeToAppointments(editing);
                this.hideAppointmentTooltip();
                this._cleanPopup();
                break;
              case "showAllDayPanel":
                this.updateInstances();
                this.repaint();
                break;
              case "showCurrentTimeIndicator":
              case "indicatorTime":
              case "indicatorUpdateInterval":
              case "shadeUntilCurrentTime":
              case "groupByDate":
                this._updateOption("workSpace", name, value);
                this.repaint();
                break;
              case "appointmentDragging":
              case "appointmentTooltipTemplate":
              case "appointmentPopupTemplate":
              case "recurrenceEditMode":
              case "remoteFiltering":
              case "timeZone":
                this.updateInstances();
                this.repaint();
                break;
              case "dropDownAppointmentTemplate":
              case "appointmentCollectorTemplate":
              case "_appointmentTooltipOffset":
              case "_appointmentTooltipButtonsPosition":
              case "_appointmentTooltipOpenButtonText":
              case "_appointmentCountPerCell":
              case "_collectorOffset":
              case "_appointmentOffset":
                this.repaint();
                break;
              case "dateSerializationFormat":
              case "maxAppointmentsPerCell":
                break;
              case "startDateExpr":
              case "endDateExpr":
              case "startDateTimeZoneExpr":
              case "endDateTimeZoneExpr":
              case "textExpr":
              case "descriptionExpr":
              case "allDayExpr":
              case "recurrenceRuleExpr":
              case "recurrenceExceptionExpr":
              case "disabledExpr":
                this._updateExpression(name, value);
                this.appointmentDataProvider.updateDataAccessors(this._dataAccessors);
                this._initAppointmentTemplate();
                this.repaint();
                break;
              case "adaptivityEnabled":
                this._toggleAdaptiveClass();
                this.repaint();
                break;
              case "scrolling":
                this.option("crossScrollingEnabled", this._isHorizontalVirtualScrolling() || this.option("crossScrollingEnabled"));
                this._updateOption("workSpace", args.fullName, value);
                break;
              case "allDayPanelMode":
                this.updateInstances();
                this._updateOption("workSpace", args.fullName, value);
                break;
              case "renovateRender":
                this._updateOption("workSpace", name, value);
                break;
              case "_draggingMode":
                this._workSpace.option("draggingMode", value);
                break;
              case "toolbar":
                this._header ? this._header.option("items", value) : this.repaint();
                break;
              case "loadedResources":
              case "resourceLoaderMap":
                break;
              default:
                _get(_getPrototypeOf(Scheduler.prototype), "_optionChanged", this).call(this, args);
            }
          }
        }, {
          key: "_dateOption",
          value: function _dateOption(optionName) {
            var optionValue = this._getCurrentViewOption(optionName);
            return _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_11__["default"].deserializeDate(optionValue);
          }
        }, {
          key: "_getSerializationFormat",
          value: function _getSerializationFormat(optionName) {
            var value = this._getCurrentViewOption(optionName);
            if ("number" === typeof value) {
              return "number";
            }
            if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isString)(value)) {
              return;
            }
            return _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_11__["default"].getDateSerializationFormat(value);
          }
        }, {
          key: "_bringEditingModeToAppointments",
          value: function _bringEditingModeToAppointments(editing) {
            var editingConfig = {
              allowDelete: editing.allowUpdating && editing.allowDeleting
            };
            if (!this._isAgenda()) {
              editingConfig.allowDrag = editing.allowDragging;
              editingConfig.allowResize = editing.allowResizing;
              editingConfig.allowAllDayResize = editing.allowResizing && this._supportAllDayResizing();
            }
            this._appointments.option(editingConfig);
            this.repaint();
          }
        }, {
          key: "_isAgenda",
          value: function _isAgenda() {
            return "agenda" === this.getLayoutManager().appointmentRenderingStrategyName;
          }
        }, {
          key: "_allowDragging",
          value: function _allowDragging() {
            return this._editing.allowDragging && !this._isAgenda();
          }
        }, {
          key: "_allowResizing",
          value: function _allowResizing() {
            return this._editing.allowResizing && !this._isAgenda();
          }
        }, {
          key: "_allowAllDayResizing",
          value: function _allowAllDayResizing() {
            return this._editing.allowResizing && this._supportAllDayResizing();
          }
        }, {
          key: "_supportAllDayResizing",
          value: function _supportAllDayResizing() {
            return "day" !== this.currentViewType || this.currentView.intervalCount > 1;
          }
        }, {
          key: "_isAllDayExpanded",
          value: function _isAllDayExpanded() {
            return this.option("showAllDayPanel") && this.appointmentDataProvider.hasAllDayAppointments(this.filteredItems, this.preparedItems);
          }
        }, {
          key: "_getTimezoneOffsetByOption",
          value: function _getTimezoneOffsetByOption(date) {
            return _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_47__["default"].calculateTimezoneByValue(this.option("timeZone"), date);
          }
        }, {
          key: "_filterAppointmentsByDate",
          value: function _filterAppointmentsByDate() {
            var dateRange = this._workSpace.getDateRange();
            var startDate = this.timeZoneCalculator.createDate(dateRange[0], {
              path: "fromGrid"
            });
            var endDate = this.timeZoneCalculator.createDate(dateRange[1], {
              path: "fromGrid"
            });
            this.appointmentDataProvider.filterByDate(startDate, endDate, this.option("remoteFiltering"), this.option("dateSerializationFormat"));
          }
        }, {
          key: "_reloadDataSource",
          value: function _reloadDataSource() {
            var _this86 = this;
            var result = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.Deferred();
            if (this._dataSource) {
              this._dataSource.load().done(function () {
                (0, _m_loading__WEBPACK_IMPORTED_MODULE_43__.hide)();
                _this86._fireContentReadyAction(result);
              }).fail(function () {
                (0, _m_loading__WEBPACK_IMPORTED_MODULE_43__.hide)();
                result.reject();
              });
              this._dataSource.isLoading() && (0, _m_loading__WEBPACK_IMPORTED_MODULE_43__.show)({
                container: this.$element(),
                position: {
                  of: this.$element()
                }
              });
            } else {
              this._fireContentReadyAction(result);
            }
            return result.promise();
          }
        }, {
          key: "_fireContentReadyAction",
          value: function _fireContentReadyAction(result) {
            var _a;
            var contentReadyBase = _get(_getPrototypeOf(Scheduler.prototype), "_fireContentReadyAction", this).bind(this);
            var fireContentReady = function fireContentReady() {
              contentReadyBase();
              null === result || void 0 === result ? void 0 : result.resolve();
            };
            if (this._workSpaceRecalculation) {
              null === (_a = this._workSpaceRecalculation) || void 0 === _a ? void 0 : _a.done(function () {
                fireContentReady();
              });
            } else {
              fireContentReady();
            }
          }
        }, {
          key: "_dimensionChanged",
          value: function _dimensionChanged(value) {
            var isForce = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
            var isFixedHeight = "number" === typeof this.option("height");
            var isFixedWidth = "number" === typeof this.option("width");
            if (!this._isVisible()) {
              return;
            }
            this._toggleSmallClass();
            var workspace = this.getWorkSpace();
            if (!this._isAgenda() && this.filteredItems && workspace) {
              if (isForce || !isFixedHeight || !isFixedWidth) {
                workspace.option("allDayExpanded", this._isAllDayExpanded());
                workspace._dimensionChanged();
                var appointments = this.getLayoutManager().createAppointmentsMap(this.filteredItems);
                this._appointments.option("items", appointments);
              }
            }
            this.hideAppointmentTooltip();
            this._appointmentPopup.triggerResize();
            this._appointmentPopup.updatePopupFullScreenMode();
          }
        }, {
          key: "_clean",
          value: function _clean() {
            this._cleanPopup();
            _get(_getPrototypeOf(Scheduler.prototype), "_clean", this).call(this);
          }
        }, {
          key: "_toggleSmallClass",
          value: function _toggleSmallClass() {
            var _ref10 = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_15__.getBoundingRect)(this.$element().get(0)),
              width = _ref10.width;
            this.$element().toggleClass(WIDGET_SMALL_CLASS, width < WIDGET_SMALL_WIDTH);
          }
        }, {
          key: "_toggleAdaptiveClass",
          value: function _toggleAdaptiveClass() {
            this.$element().toggleClass(WIDGET_ADAPTIVE_CLASS, this.option("adaptivityEnabled"));
          }
        }, {
          key: "_visibilityChanged",
          value: function _visibilityChanged(visible) {
            visible && this._dimensionChanged(null, true);
          }
        }, {
          key: "_dataSourceOptions",
          value: function _dataSourceOptions() {
            return {
              paginate: false
            };
          }
        }, {
          key: "_initAllDayPanel",
          value: function _initAllDayPanel() {
            if ("hidden" === this.option("allDayPanelMode")) {
              this.option("showAllDayPanel", false);
            }
          }
        }, {
          key: "_init",
          value: function _init() {
            this._initExpressions({
              startDate: this.option("startDateExpr"),
              endDate: this.option("endDateExpr"),
              startDateTimeZone: this.option("startDateTimeZoneExpr"),
              endDateTimeZone: this.option("endDateTimeZoneExpr"),
              allDay: this.option("allDayExpr"),
              text: this.option("textExpr"),
              description: this.option("descriptionExpr"),
              recurrenceRule: this.option("recurrenceRuleExpr"),
              recurrenceException: this.option("recurrenceExceptionExpr"),
              disabled: this.option("disabledExpr")
            });
            _get(_getPrototypeOf(Scheduler.prototype), "_init", this).call(this);
            this._initAllDayPanel();
            this._initDataSource();
            this._customizeDataSourceLoadOptions();
            this.$element().addClass(WIDGET_CLASS);
            this._initEditing();
            this.updateInstances();
            this._initActions();
            this._compactAppointmentsHelper = new _m_compact_appointments_helper__WEBPACK_IMPORTED_MODULE_40__.CompactAppointmentsHelper(this);
            this._asyncTemplatesTimers = [];
            this._dataSourceLoadedCallback = (0, _core_utils_callbacks__WEBPACK_IMPORTED_MODULE_7__["default"])();
            this._subscribes = _m_subscribes__WEBPACK_IMPORTED_MODULE_45__["default"];
            this.agendaResourceProcessor = new _resources_m_agenda_resource_processor__WEBPACK_IMPORTED_MODULE_48__.AgendaResourceProcessor(this.option("resources"));
          }
        }, {
          key: "createAppointmentDataProvider",
          value: function createAppointmentDataProvider() {
            var _this87 = this;
            var _a;
            null === (_a = this.appointmentDataProvider) || void 0 === _a ? void 0 : _a.destroy();
            this.appointmentDataProvider = new _appointments_data_provider_m_appointment_data_provider__WEBPACK_IMPORTED_MODULE_34__.AppointmentDataProvider({
              dataSource: this._dataSource,
              dataAccessors: this._dataAccessors,
              timeZoneCalculator: this.timeZoneCalculator,
              dateSerializationFormat: this.option("dateSerializationFormat"),
              resources: this.option("resources"),
              startDayHour: this._getCurrentViewOption("startDayHour"),
              endDayHour: this._getCurrentViewOption("endDayHour"),
              appointmentDuration: this._getCurrentViewOption("cellDuration"),
              allDayPanelMode: this._getCurrentViewOption("allDayPanelMode"),
              showAllDayPanel: this.option("showAllDayPanel"),
              getLoadedResources: function getLoadedResources() {
                return _this87.option("loadedResources");
              },
              getIsVirtualScrolling: function getIsVirtualScrolling() {
                return _this87.isVirtualScrolling();
              },
              getSupportAllDayRow: function getSupportAllDayRow() {
                return _this87._workSpace.supportAllDayRow();
              },
              getViewType: function getViewType() {
                return _this87._workSpace.type;
              },
              getViewDirection: function getViewDirection() {
                return _this87._workSpace.viewDirection;
              },
              getDateRange: function getDateRange() {
                return _this87._workSpace.getDateRange();
              },
              getGroupCount: function getGroupCount() {
                return _this87._workSpace._getGroupCount();
              },
              getViewDataProvider: function getViewDataProvider() {
                return _this87._workSpace.viewDataProvider;
              }
            });
          }
        }, {
          key: "updateInstances",
          value: function updateInstances() {
            this._timeZoneCalculator = null;
            if (this.getWorkSpace()) {
              this.createAppointmentDataProvider();
            }
          }
        }, {
          key: "_customizeDataSourceLoadOptions",
          value: function _customizeDataSourceLoadOptions() {
            var _this88 = this;
            var _a;
            null === (_a = this._dataSource) || void 0 === _a ? void 0 : _a.on("customizeStoreLoadOptions", function (_ref) {
              var storeLoadOptions = _ref.storeLoadOptions;
              storeLoadOptions.startDate = _this88.getStartViewDate();
              storeLoadOptions.endDate = _this88.getEndViewDate();
            });
          }
        }, {
          key: "_initTemplates",
          value: function _initTemplates() {
            this._initAppointmentTemplate();
            this._templateManager.addDefaultTemplates({
              appointmentTooltip: new _core_templates_empty_template__WEBPACK_IMPORTED_MODULE_6__.EmptyTemplate(),
              dropDownAppointment: new _core_templates_empty_template__WEBPACK_IMPORTED_MODULE_6__.EmptyTemplate()
            });
            _get(_getPrototypeOf(Scheduler.prototype), "_initTemplates", this).call(this);
          }
        }, {
          key: "_initAppointmentTemplate",
          value: function _initAppointmentTemplate() {
            var _this89 = this;
            var expr = this._dataAccessors.expr;
            var createGetter = function createGetter(property) {
              return (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_9__.compileGetter)("appointmentData.".concat(property));
            };
            var getDate = function getDate(getter) {
              return function (data) {
                var value = getter(data);
                if (value instanceof Date) {
                  return value.valueOf();
                }
                return value;
              };
            };
            this._templateManager.addDefaultTemplates({
              item: new _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_5__.BindableTemplate(function ($container, data, model) {
                return _this89.getAppointmentsInstance()._renderAppointmentTemplate($container, data, model);
              }, ["html", "text", "startDate", "endDate", "allDay", "description", "recurrenceRule", "recurrenceException", "startDateTimeZone", "endDateTimeZone"], this.option("integrationOptions.watchMethod"), {
                text: createGetter(expr.textExpr),
                startDate: getDate(createGetter(expr.startDateExpr)),
                endDate: getDate(createGetter(expr.endDateExpr)),
                startDateTimeZone: createGetter(expr.startDateTimeZoneExpr),
                endDateTimeZone: createGetter(expr.endDateTimeZoneExpr),
                allDay: createGetter(expr.allDayExpr),
                recurrenceRule: createGetter(expr.recurrenceRuleExpr)
              })
            });
          }
        }, {
          key: "_renderContent",
          value: function _renderContent() {
            this._renderContentImpl();
          }
        }, {
          key: "_updatePreparedItems",
          value: function _updatePreparedItems(items) {
            this.preparedItems = (0, _renovation_ui_scheduler_utils_data__WEBPACK_IMPORTED_MODULE_25__.getPreparedDataItems)(items, this._dataAccessors, this._getCurrentViewOption("cellDuration"), this.timeZoneCalculator);
          }
        }, {
          key: "_dataSourceChangedHandler",
          value: function _dataSourceChangedHandler(result) {
            var _this90 = this;
            if (this._readyToRenderAppointments) {
              this._workSpaceRecalculation.done(function () {
                _this90._updatePreparedItems(result);
                _this90._renderAppointments();
                _this90.getWorkSpace().onDataSourceChanged(_this90.filteredItems);
              });
            }
          }
        }, {
          key: "isVirtualScrolling",
          value: function isVirtualScrolling() {
            var _a;
            var workspace = this.getWorkSpace();
            if (workspace) {
              return workspace.isVirtualScrolling();
            }
            var currentViewOptions = this._getCurrentViewOptions();
            var scrolling = this.option("scrolling");
            return "virtual" === (null === scrolling || void 0 === scrolling ? void 0 : scrolling.mode) || "virtual" === (null === (_a = null === currentViewOptions || void 0 === currentViewOptions ? void 0 : currentViewOptions.scrolling) || void 0 === _a ? void 0 : _a.mode);
          }
        }, {
          key: "_filterAppointments",
          value: function _filterAppointments() {
            this.filteredItems = this.appointmentDataProvider.filter(this.preparedItems);
          }
        }, {
          key: "_renderAppointments",
          value: function _renderAppointments() {
            var workspace = this.getWorkSpace();
            this._filterAppointments();
            workspace.option("allDayExpanded", this._isAllDayExpanded());
            var viewModel = [];
            if (this._isVisible()) {
              viewModel = this._getAppointmentsToRepaint();
            }
            if (this.option("isRenovatedAppointments")) {
              (0, _appointments_m_render__WEBPACK_IMPORTED_MODULE_36__.renderAppointments)({
                instance: this,
                $dateTable: this.getWorkSpace()._getDateTable(),
                viewModel: viewModel
              });
            } else {
              this._appointments.option("items", viewModel);
            }
            this.appointmentDataProvider.cleanState();
          }
        }, {
          key: "_getAppointmentsToRepaint",
          value: function _getAppointmentsToRepaint() {
            var layoutManager = this.getLayoutManager();
            var appointmentsMap = layoutManager.createAppointmentsMap(this.filteredItems);
            if (this.option("isRenovatedAppointments")) {
              var appointmentTemplate = this.option("appointmentTemplate") !== DEFAULT_APPOINTMENT_TEMPLATE_NAME ? this.option("appointmentTemplate") : void 0;
              return {
                appointments: appointmentsMap,
                appointmentTemplate: appointmentTemplate
              };
            }
            return layoutManager.getRepaintedAppointments(appointmentsMap, this.getAppointmentsInstance().option("items"));
          }
        }, {
          key: "_initExpressions",
          value: function _initExpressions(fields) {
            this._dataAccessors = _m_utils__WEBPACK_IMPORTED_MODULE_46__.utils.dataAccessors.create(fields, this._dataAccessors, (0, _core_config__WEBPACK_IMPORTED_MODULE_2__["default"])().forceIsoDateParsing, this.option("dateSerializationFormat"));
            this._dataAccessors.resources = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_49__.createExpressions)(this.option("resources"));
          }
        }, {
          key: "_updateExpression",
          value: function _updateExpression(name, value) {
            var exprObj = {};
            exprObj[name.replace("Expr", "")] = value;
            this._initExpressions(exprObj);
          }
        }, {
          key: "getResourceDataAccessors",
          value: function getResourceDataAccessors() {
            return this._dataAccessors.resources;
          }
        }, {
          key: "_initEditing",
          value: function _initEditing() {
            var editing = this.option("editing");
            this._editing = {
              allowAdding: !!editing,
              allowUpdating: !!editing,
              allowDeleting: !!editing,
              allowResizing: !!editing,
              allowDragging: !!editing
            };
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isObject)(editing)) {
              this._editing = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)(this._editing, editing);
            }
            this._editing.allowDragging = this._editing.allowDragging && this._editing.allowUpdating;
            this._editing.allowResizing = this._editing.allowResizing && this._editing.allowUpdating;
            this.$element().toggleClass(WIDGET_READONLY_CLASS, this._isReadOnly());
          }
        }, {
          key: "_isReadOnly",
          value: function _isReadOnly() {
            var result = true;
            var editing = this._editing;
            for (var prop in editing) {
              if (Object.prototype.hasOwnProperty.call(editing, prop)) {
                result = result && !editing[prop];
              }
            }
            return result;
          }
        }, {
          key: "_dispose",
          value: function _dispose() {
            var _a;
            this._appointmentTooltip && this._appointmentTooltip.dispose();
            null === (_a = this._recurrenceDialog) || void 0 === _a ? void 0 : _a.hide(RECURRENCE_EDITING_MODE.CANCEL);
            this.hideAppointmentPopup();
            this.hideAppointmentTooltip();
            this._asyncTemplatesTimers.forEach(clearTimeout);
            this._asyncTemplatesTimers = [];
            _get(_getPrototypeOf(Scheduler.prototype), "_dispose", this).call(this);
          }
        }, {
          key: "_initActions",
          value: function _initActions() {
            this._actions = {
              onAppointmentAdding: this._createActionByOption(StoreEventNames.ADDING),
              onAppointmentAdded: this._createActionByOption(StoreEventNames.ADDED),
              onAppointmentUpdating: this._createActionByOption(StoreEventNames.UPDATING),
              onAppointmentUpdated: this._createActionByOption(StoreEventNames.UPDATED),
              onAppointmentDeleting: this._createActionByOption(StoreEventNames.DELETING),
              onAppointmentDeleted: this._createActionByOption(StoreEventNames.DELETED),
              onAppointmentFormOpening: this._createActionByOption("onAppointmentFormOpening"),
              onAppointmentTooltipShowing: this._createActionByOption("onAppointmentTooltipShowing")
            };
          }
        }, {
          key: "_getAppointmentRenderedAction",
          value: function _getAppointmentRenderedAction() {
            return this._createActionByOption("onAppointmentRendered", {
              excludeValidators: ["disabled", "readOnly"]
            });
          }
        }, {
          key: "_renderFocusTarget",
          value: function _renderFocusTarget() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_8__.noop)();
          }
        }, {
          key: "_initMarkup",
          value: function _initMarkup() {
            var _this91 = this;
            _get(_getPrototypeOf(Scheduler.prototype), "_initMarkup", this).call(this);
            this._validateDayHours();
            this._validateCellDuration();
            this._renderMainContainer();
            this._renderHeader();
            this._layoutManager = new _m_appointments_layout_manager__WEBPACK_IMPORTED_MODULE_39__["default"](this);
            this._appointments = this._createComponent("<div>", _appointments_m_appointment_collection__WEBPACK_IMPORTED_MODULE_35__["default"], this._appointmentsConfig());
            this._appointments.option("itemTemplate", this._getAppointmentTemplate("appointmentTemplate"));
            this._appointmentTooltip = new (this.option("adaptivityEnabled") ? _tooltip_strategies_m_mobile_tooltip_strategy__WEBPACK_IMPORTED_MODULE_51__.MobileTooltipStrategy : _tooltip_strategies_m_desktop_tooltip_strategy__WEBPACK_IMPORTED_MODULE_50__.DesktopTooltipStrategy)(this._getAppointmentTooltipOptions());
            this._createAppointmentPopupForm();
            if (this._isDataSourceLoaded() || this._isDataSourceLoading()) {
              this._initMarkupCore(this.option("loadedResources"));
              this._dataSourceChangedHandler(this._dataSource.items());
              this._fireContentReadyAction();
            } else {
              var groups = this._getCurrentViewOption("groups");
              (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_49__.loadResources)(groups, this.option("resources"), this.option("resourceLoaderMap")).done(function (resources) {
                _this91.option("loadedResources", resources);
                _this91._initMarkupCore(resources);
                _this91._reloadDataSource();
              });
            }
          }
        }, {
          key: "_createAppointmentPopupForm",
          value: function _createAppointmentPopupForm() {
            var _a, _b;
            if (this._appointmentForm) {
              null === (_a = this._appointmentForm.form) || void 0 === _a ? void 0 : _a.dispose();
            }
            this._appointmentForm = this.createAppointmentForm();
            null === (_b = this._appointmentPopup) || void 0 === _b ? void 0 : _b.dispose();
            this._appointmentPopup = this.createAppointmentPopup(this._appointmentForm);
          }
        }, {
          key: "_renderMainContainer",
          value: function _renderMainContainer() {
            this._mainContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass("dx-scheduler-container");
            this.$element().append(this._mainContainer);
          }
        }, {
          key: "createAppointmentForm",
          value: function createAppointmentForm() {
            var _this92 = this;
            var scheduler = {
              createResourceEditorModel: function createResourceEditorModel() {
                return (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_49__.createResourceEditorModel)(_this92.option("resources"), _this92.option("loadedResources"));
              },
              getDataAccessors: function getDataAccessors() {
                return _this92._dataAccessors;
              },
              createComponent: function createComponent(element, component, options) {
                return _this92._createComponent(element, component, options);
              },
              getEditingConfig: function getEditingConfig() {
                return _this92._editing;
              },
              getFirstDayOfWeek: function getFirstDayOfWeek() {
                return _this92.option("firstDayOfWeek");
              },
              getStartDayHour: function getStartDayHour() {
                return _this92.option("startDayHour");
              },
              getCalculatedEndDate: function getCalculatedEndDate(startDateWithStartHour) {
                return _this92._workSpace.calculateEndDate(startDateWithStartHour);
              },
              getTimeZoneCalculator: function getTimeZoneCalculator() {
                return _this92.timeZoneCalculator;
              }
            };
            return new _appointment_popup_m_form__WEBPACK_IMPORTED_MODULE_32__.AppointmentForm(scheduler);
          }
        }, {
          key: "createAppointmentPopup",
          value: function createAppointmentPopup(form) {
            var _this93 = this;
            var scheduler = {
              getElement: function getElement() {
                return _this93.$element();
              },
              createComponent: function createComponent(element, component, options) {
                return _this93._createComponent(element, component, options);
              },
              focus: function focus() {
                return _this93.focus();
              },
              getResources: function getResources() {
                return _this93.option("resources");
              },
              getEditingConfig: function getEditingConfig() {
                return _this93._editing;
              },
              getTimeZoneCalculator: function getTimeZoneCalculator() {
                return _this93.timeZoneCalculator;
              },
              getDataAccessors: function getDataAccessors() {
                return _this93._dataAccessors;
              },
              getAppointmentFormOpening: function getAppointmentFormOpening() {
                return _this93._actions.onAppointmentFormOpening;
              },
              processActionResult: function processActionResult(arg, canceled) {
                return _this93._processActionResult(arg, canceled);
              },
              addAppointment: function addAppointment(appointment) {
                return _this93.addAppointment(appointment);
              },
              updateAppointment: function updateAppointment(sourceAppointment, updatedAppointment) {
                return _this93.updateAppointment(sourceAppointment, updatedAppointment);
              },
              updateScrollPosition: function updateScrollPosition(startDate, resourceItem, inAllDayRow) {
                _this93._workSpace.updateScrollPosition(startDate, resourceItem, inAllDayRow);
              }
            };
            return new _appointment_popup_m_popup__WEBPACK_IMPORTED_MODULE_33__.AppointmentPopup(scheduler, form);
          }
        }, {
          key: "_getAppointmentTooltipOptions",
          value: function _getAppointmentTooltipOptions() {
            var _this94 = this;
            return {
              createComponent: this._createComponent.bind(this),
              container: this.$element(),
              getScrollableContainer: this.getWorkSpaceScrollableContainer.bind(this),
              addDefaultTemplates: this._templateManager.addDefaultTemplates.bind(this._templateManager),
              getAppointmentTemplate: this._getAppointmentTemplate.bind(this),
              showAppointmentPopup: this.showAppointmentPopup.bind(this),
              checkAndDeleteAppointment: this.checkAndDeleteAppointment.bind(this),
              isAppointmentInAllDayPanel: this.isAppointmentInAllDayPanel.bind(this),
              createFormattedDateText: function createFormattedDateText(appointment, targetedAppointment, format) {
                return _this94.fire("getTextAndFormatDate", appointment, targetedAppointment, format);
              },
              getAppointmentDisabled: function getAppointmentDisabled(appointment) {
                return (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__.createAppointmentAdapter)(appointment, _this94._dataAccessors, _this94.timeZoneCalculator).disabled;
              },
              onItemContextMenu: this._createActionByOption("onAppointmentContextMenu"),
              createEventArgs: this._createEventArgs.bind(this)
            };
          }
        }, {
          key: "_createEventArgs",
          value: function _createEventArgs(e) {
            var config = {
              itemData: e.itemData.appointment,
              itemElement: e.itemElement,
              targetedAppointment: e.itemData.targetedAppointment
            };
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)({}, this.fire("mapAppointmentFields", config), {
              component: e.component,
              element: e.element,
              event: e.event,
              model: e.model
            });
          }
        }, {
          key: "checkAndDeleteAppointment",
          value: function checkAndDeleteAppointment(appointment, targetedAppointment) {
            var _this95 = this;
            var targetedAdapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__.createAppointmentAdapter)(targetedAppointment, this._dataAccessors, this.timeZoneCalculator);
            var deletingOptions = this.fireOnAppointmentDeleting(appointment, targetedAdapter);
            this._checkRecurringAppointment(appointment, targetedAppointment, targetedAdapter.startDate, function () {
              _this95.processDeleteAppointment(appointment, deletingOptions);
            }, true);
          }
        }, {
          key: "_getExtraAppointmentTooltipOptions",
          value: function _getExtraAppointmentTooltipOptions() {
            return {
              rtlEnabled: this.option("rtlEnabled"),
              focusStateEnabled: this.option("focusStateEnabled"),
              editing: this.option("editing"),
              offset: this.option("_appointmentTooltipOffset")
            };
          }
        }, {
          key: "isAppointmentInAllDayPanel",
          value: function isAppointmentInAllDayPanel(appointmentData) {
            var workSpace = this._workSpace;
            var itTakesAllDay = this.appointmentTakesAllDay(appointmentData);
            return itTakesAllDay && workSpace.supportAllDayRow() && workSpace.option("showAllDayPanel");
          }
        }, {
          key: "_initMarkupCore",
          value: function _initMarkupCore(resources) {
            var _this96 = this;
            this._readyToRenderAppointments = (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_17__.hasWindow)();
            this._workSpace && this._cleanWorkspace();
            this._renderWorkSpace(resources);
            this._appointments.option({
              fixedContainer: this._workSpace.getFixedContainer(),
              allDayContainer: this._workSpace.getAllDayContainer()
            });
            this._waitAsyncTemplate(function () {
              var _a;
              return null === (_a = _this96._workSpaceRecalculation) || void 0 === _a ? void 0 : _a.resolve();
            });
            this.createAppointmentDataProvider();
            this._filterAppointmentsByDate();
            this._validateKeyFieldIfAgendaExist();
          }
        }, {
          key: "_isDataSourceLoaded",
          value: function _isDataSourceLoaded() {
            return this._dataSource && this._dataSource.isLoaded();
          }
        }, {
          key: "_render",
          value: function _render() {
            var _a;
            this._toggleSmallClass();
            this._toggleAdaptiveClass();
            null === (_a = this.getWorkSpace()) || void 0 === _a ? void 0 : _a.updateHeaderEmptyCellWidth();
            _get(_getPrototypeOf(Scheduler.prototype), "_render", this).call(this);
          }
        }, {
          key: "_renderHeader",
          value: function _renderHeader() {
            if (0 !== this.option("toolbar").length) {
              var $header = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").appendTo(this._mainContainer);
              this._header = this._createComponent($header, _header_m_header__WEBPACK_IMPORTED_MODULE_37__.SchedulerHeader, this._headerConfig());
            }
          }
        }, {
          key: "_headerConfig",
          value: function _headerConfig() {
            var _this97 = this;
            var currentViewOptions = this._getCurrentViewOptions();
            var countConfig = this._getViewCountConfig();
            var result = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)({
              firstDayOfWeek: this.getFirstDayOfWeek(),
              currentView: this.option("currentView"),
              isAdaptive: this.option("adaptivityEnabled"),
              tabIndex: this.option("tabIndex"),
              focusStateEnabled: this.option("focusStateEnabled"),
              rtlEnabled: this.option("rtlEnabled"),
              useDropDownViewSwitcher: this.option("useDropDownViewSwitcher"),
              customizeDateNavigatorText: this.option("customizeDateNavigatorText"),
              agendaDuration: currentViewOptions.agendaDuration || DEFAULT_AGENDA_DURATION
            }, currentViewOptions);
            result.intervalCount = countConfig.intervalCount;
            result.views = this.option("views");
            result.min = new Date(this._dateOption("min"));
            result.max = new Date(this._dateOption("max"));
            result.currentDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_10__["default"].trimTime(new Date(this._dateOption("currentDate")));
            result.onCurrentViewChange = function (name) {
              _this97.option("currentView", name);
            };
            result.onCurrentDateChange = function (date) {
              _this97.option("currentDate", date);
            };
            result.items = this.option("toolbar");
            result.startViewDate = this.getStartViewDate();
            result.todayDate = function () {
              var result = _this97.timeZoneCalculator.createDate(new Date(), {
                path: "toGrid"
              });
              return result;
            };
            return result;
          }
        }, {
          key: "_appointmentsConfig",
          value: function _appointmentsConfig() {
            var _this98 = this;
            var config = {
              getResources: function getResources() {
                return _this98.option("resources");
              },
              getResourceDataAccessors: this.getResourceDataAccessors.bind(this),
              getAgendaResourceProcessor: function getAgendaResourceProcessor() {
                return _this98.agendaResourceProcessor;
              },
              getAppointmentColor: this.createGetAppointmentColor(),
              getAppointmentDataProvider: function getAppointmentDataProvider() {
                return _this98.appointmentDataProvider;
              },
              dataAccessors: this._dataAccessors,
              observer: this,
              onItemRendered: this._getAppointmentRenderedAction(),
              onItemClick: this._createActionByOption("onAppointmentClick"),
              onItemContextMenu: this._createActionByOption("onAppointmentContextMenu"),
              onAppointmentDblClick: this._createActionByOption("onAppointmentDblClick"),
              tabIndex: this.option("tabIndex"),
              focusStateEnabled: this.option("focusStateEnabled"),
              allowDrag: this._allowDragging(),
              allowDelete: this._editing.allowUpdating && this._editing.allowDeleting,
              allowResize: this._allowResizing(),
              allowAllDayResize: this._allowAllDayResizing(),
              rtlEnabled: this.option("rtlEnabled"),
              currentView: this.currentView,
              groups: this._getCurrentViewOption("groups"),
              isRenovatedAppointments: this.option("isRenovatedAppointments"),
              timeZoneCalculator: this.timeZoneCalculator,
              getResizableStep: function getResizableStep() {
                return _this98._workSpace ? _this98._workSpace.positionHelper.getResizableStep() : 0;
              },
              getDOMElementsMetaData: function getDOMElementsMetaData() {
                var _a;
                return null === (_a = _this98._workSpace) || void 0 === _a ? void 0 : _a.getDOMElementsMetaData();
              },
              getViewDataProvider: function getViewDataProvider() {
                var _a;
                return null === (_a = _this98._workSpace) || void 0 === _a ? void 0 : _a.viewDataProvider;
              },
              isVerticalViewDirection: function isVerticalViewDirection() {
                return "vertical" === _this98.getRenderingStrategyInstance().getDirection();
              },
              isVerticalGroupedWorkSpace: function isVerticalGroupedWorkSpace() {
                return _this98._workSpace._isVerticalGroupedWorkSpace();
              },
              isDateAndTimeView: function isDateAndTimeView() {
                return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_27__.isDateAndTimeView)(_this98._workSpace.type);
              },
              onContentReady: function onContentReady() {
                var _a;
                null === (_a = _this98._workSpace) || void 0 === _a ? void 0 : _a.option("allDayExpanded", _this98._isAllDayExpanded());
              }
            };
            return config;
          }
        }, {
          key: "getCollectorOffset",
          value: function getCollectorOffset() {
            if (this._workSpace.needApplyCollectorOffset() && !this.option("adaptivityEnabled")) {
              return this.option("_collectorOffset");
            }
            return 0;
          }
        }, {
          key: "getAppointmentDurationInMinutes",
          value: function getAppointmentDurationInMinutes() {
            return this._getCurrentViewOption("cellDuration");
          }
        }, {
          key: "_getCurrentViewType",
          value: function _getCurrentViewType() {
            return this.currentViewType;
          }
        }, {
          key: "_renderWorkSpace",
          value: function _renderWorkSpace(groups) {
            var _a;
            this._readyToRenderAppointments && this._toggleSmallClass();
            var $workSpace = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").appendTo(this._mainContainer);
            var countConfig = this._getViewCountConfig();
            var workSpaceComponent = VIEWS_CONFIG[this._getCurrentViewType()].workSpace;
            var workSpaceConfig = this._workSpaceConfig(groups, countConfig);
            this._workSpace = this._createComponent($workSpace, workSpaceComponent, workSpaceConfig);
            this._allowDragging() && this._workSpace.initDragBehavior(this, this._all);
            this._workSpace._attachTablesEvents();
            this._workSpace.getWorkArea().append(this._appointments.$element());
            this._recalculateWorkspace();
            countConfig.startDate && (null === (_a = this._header) || void 0 === _a ? void 0 : _a.option("currentDate", this._workSpace._getHeaderDate()));
            this._appointments.option("_collectorOffset", this.getCollectorOffset());
          }
        }, {
          key: "_getViewCountConfig",
          value: function _getViewCountConfig() {
            var currentView = this.option("currentView");
            var view = this._getViewByName(currentView);
            var viewCount = view && view.intervalCount || 1;
            var startDate = view && view.startDate || null;
            return {
              intervalCount: viewCount,
              startDate: startDate
            };
          }
        }, {
          key: "_getViewByName",
          value: function _getViewByName(name) {
            var views = this.option("views");
            for (var i = 0; i < views.length; i++) {
              if (views[i].name === name || views[i].type === name || views[i] === name) {
                return views[i];
              }
            }
          }
        }, {
          key: "_recalculateWorkspace",
          value: function _recalculateWorkspace() {
            var _this99 = this;
            this._workSpaceRecalculation = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.Deferred();
            this._waitAsyncTemplate(function () {
              (0, _events_visibility_change__WEBPACK_IMPORTED_MODULE_19__.triggerResizeEvent)(_this99._workSpace.$element());
              _this99._workSpace.renderCurrentDateTimeLineAndShader();
            });
          }
        }, {
          key: "_workSpaceConfig",
          value: function _workSpaceConfig(groups, countConfig) {
            var _this100 = this;
            var _a;
            var currentViewOptions = this._getCurrentViewOptions();
            var scrolling = this.option("scrolling");
            var isVirtualScrolling = "virtual" === scrolling.mode || "virtual" === (null === (_a = currentViewOptions.scrolling) || void 0 === _a ? void 0 : _a.mode);
            var horizontalVirtualScrollingAllowed = isVirtualScrolling && (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isDefined)(scrolling.orientation) || ["horizontal", "both"].filter(function (item) {
              var _a;
              return scrolling.orientation === item || (null === (_a = currentViewOptions.scrolling) || void 0 === _a ? void 0 : _a.orientation) === item;
            }).length > 0);
            var crossScrollingEnabled = this.option("crossScrollingEnabled") || horizontalVirtualScrollingAllowed || (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_27__.isTimelineView)(this.currentViewType);
            var result = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)({
              resources: this.option("resources"),
              loadedResources: this.option("loadedResources"),
              getFilteredItems: function getFilteredItems() {
                return _this100.filteredItems;
              },
              getResourceDataAccessors: this.getResourceDataAccessors.bind(this),
              noDataText: this.option("noDataText"),
              firstDayOfWeek: this.option("firstDayOfWeek"),
              startDayHour: this.option("startDayHour"),
              endDayHour: this.option("endDayHour"),
              tabIndex: this.option("tabIndex"),
              accessKey: this.option("accessKey"),
              focusStateEnabled: this.option("focusStateEnabled"),
              cellDuration: this.option("cellDuration"),
              showAllDayPanel: this.option("showAllDayPanel"),
              showCurrentTimeIndicator: this.option("showCurrentTimeIndicator"),
              indicatorTime: this.option("indicatorTime"),
              indicatorUpdateInterval: this.option("indicatorUpdateInterval"),
              shadeUntilCurrentTime: this.option("shadeUntilCurrentTime"),
              allDayExpanded: this._appointments.option("items"),
              crossScrollingEnabled: crossScrollingEnabled,
              dataCellTemplate: this.option("dataCellTemplate"),
              timeCellTemplate: this.option("timeCellTemplate"),
              resourceCellTemplate: this.option("resourceCellTemplate"),
              dateCellTemplate: this.option("dateCellTemplate"),
              allowMultipleCellSelection: this.option("allowMultipleCellSelection"),
              selectedCellData: this.option("selectedCellData"),
              onSelectionChanged: function onSelectionChanged(args) {
                _this100.option("selectedCellData", args.selectedCellData);
              },
              groupByDate: this._getCurrentViewOption("groupByDate"),
              scrolling: scrolling,
              draggingMode: this.option("_draggingMode"),
              timeZoneCalculator: this.timeZoneCalculator,
              schedulerHeight: this.option("height"),
              schedulerWidth: this.option("width"),
              allDayPanelMode: this.option("allDayPanelMode"),
              onSelectedCellsClick: this.showAddAppointmentPopup.bind(this),
              onRenderAppointments: this._renderAppointments.bind(this),
              onShowAllDayPanel: function onShowAllDayPanel(value) {
                return _this100.option("showAllDayPanel", value);
              },
              getHeaderHeight: function getHeaderHeight() {
                return _m_utils__WEBPACK_IMPORTED_MODULE_46__.utils.DOM.getHeaderHeight(_this100._header);
              },
              onScrollEnd: function onScrollEnd() {
                return _this100._appointments.updateResizableArea();
              },
              renovateRender: this._isRenovatedRender(isVirtualScrolling),
              isRenovatedAppointments: this.option("isRenovatedAppointments")
            }, currentViewOptions);
            result.observer = this;
            result.intervalCount = countConfig.intervalCount;
            result.startDate = countConfig.startDate;
            result.groups = groups;
            result.onCellClick = this._createActionByOption("onCellClick");
            result.onCellContextMenu = this._createActionByOption("onCellContextMenu");
            result.currentDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_10__["default"].trimTime(new Date(this._dateOption("currentDate")));
            result.hoursInterval = result.cellDuration / 60;
            result.allDayExpanded = false;
            result.dataCellTemplate = result.dataCellTemplate ? this._getTemplate(result.dataCellTemplate) : null;
            result.timeCellTemplate = result.timeCellTemplate ? this._getTemplate(result.timeCellTemplate) : null;
            result.resourceCellTemplate = result.resourceCellTemplate ? this._getTemplate(result.resourceCellTemplate) : null;
            result.dateCellTemplate = result.dateCellTemplate ? this._getTemplate(result.dateCellTemplate) : null;
            result.getAppointmentDataProvider = function () {
              return _this100.appointmentDataProvider;
            };
            return result;
          }
        }, {
          key: "_isRenovatedRender",
          value: function _isRenovatedRender(isVirtualScrolling) {
            return this.option("renovateRender") && (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_17__.hasWindow)() || isVirtualScrolling;
          }
        }, {
          key: "_waitAsyncTemplate",
          value: function _waitAsyncTemplate(callback) {
            if (this._options.silent("templatesRenderAsynchronously")) {
              var timer = setTimeout(function () {
                callback();
                clearTimeout(timer);
              });
              this._asyncTemplatesTimers.push(timer);
            } else {
              callback();
            }
          }
        }, {
          key: "_getCurrentViewOptions",
          value: function _getCurrentViewOptions() {
            return this.currentView;
          }
        }, {
          key: "_getCurrentViewOption",
          value: function _getCurrentViewOption(optionName) {
            if (this.currentView && void 0 !== this.currentView[optionName]) {
              return this.currentView[optionName];
            }
            return this.option(optionName);
          }
        }, {
          key: "_getAppointmentTemplate",
          value: function _getAppointmentTemplate(optionName) {
            var currentViewOptions = this._getCurrentViewOptions();
            if (currentViewOptions && currentViewOptions[optionName]) {
              return this._getTemplate(currentViewOptions[optionName]);
            }
            return this._getTemplateByOption(optionName);
          }
        }, {
          key: "_updateOption",
          value: function _updateOption(viewName, optionName, value) {
            var currentViewOptions = this._getCurrentViewOptions();
            if (!currentViewOptions || !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isDefined)(currentViewOptions[optionName])) {
              this["_".concat(viewName)].option(optionName, value);
            }
          }
        }, {
          key: "_refreshWorkSpace",
          value: function _refreshWorkSpace(groups) {
            var _this101 = this;
            this._cleanWorkspace();
            delete this._workSpace;
            this._renderWorkSpace(groups);
            if (this._readyToRenderAppointments) {
              this._appointments.option({
                fixedContainer: this._workSpace.getFixedContainer(),
                allDayContainer: this._workSpace.getAllDayContainer()
              });
              this._waitAsyncTemplate(function () {
                return _this101._workSpaceRecalculation.resolve();
              });
            }
          }
        }, {
          key: "_cleanWorkspace",
          value: function _cleanWorkspace() {
            this._appointments.$element().detach();
            this._workSpace._dispose();
            this._workSpace.$element().remove();
            this.option("selectedCellData", []);
          }
        }, {
          key: "getWorkSpaceScrollable",
          value: function getWorkSpaceScrollable() {
            return this._workSpace.getScrollable();
          }
        }, {
          key: "getWorkSpaceScrollableContainer",
          value: function getWorkSpaceScrollableContainer() {
            return this._workSpace.getScrollableContainer();
          }
        }, {
          key: "getWorkSpace",
          value: function getWorkSpace() {
            return this._workSpace;
          }
        }, {
          key: "getHeader",
          value: function getHeader() {
            return this._header;
          }
        }, {
          key: "_cleanPopup",
          value: function _cleanPopup() {
            var _a;
            null === (_a = this._appointmentPopup) || void 0 === _a ? void 0 : _a.dispose();
          }
        }, {
          key: "_checkRecurringAppointment",
          value: function _checkRecurringAppointment(rawAppointment, singleAppointment, exceptionDate, callback, isDeleted, isPopupEditing, dragEvent, recurrenceEditMode) {
            var _this102 = this;
            var recurrenceRule = _m_expression_utils__WEBPACK_IMPORTED_MODULE_42__.ExpressionUtils.getField(this._dataAccessors, "recurrenceRule", rawAppointment);
            if (!(0, _m_recurrence__WEBPACK_IMPORTED_MODULE_44__.getRecurrenceProcessor)().evalRecurrenceRule(recurrenceRule).isValid || !this._editing.allowUpdating) {
              callback();
              return;
            }
            var editMode = recurrenceEditMode || this.option("recurrenceEditMode");
            switch (editMode) {
              case "series":
                callback();
                break;
              case "occurrence":
                this._excludeAppointmentFromSeries(rawAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);
                break;
              default:
                if (dragEvent) {
                  dragEvent.cancel = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.Deferred();
                }
                this._showRecurrenceChangeConfirm(isDeleted).done(function (editingMode) {
                  editingMode === RECURRENCE_EDITING_MODE.SERIES && callback();
                  editingMode === RECURRENCE_EDITING_MODE.OCCURENCE && _this102._excludeAppointmentFromSeries(rawAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);
                }).fail(function () {
                  return _this102._appointments.moveAppointmentBack(dragEvent);
                });
            }
          }
        }, {
          key: "_excludeAppointmentFromSeries",
          value: function _excludeAppointmentFromSeries(rawAppointment, newRawAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent) {
            var _this103 = this;
            var appointment = (0, _renovation_ui_scheduler_utils_recurrence_excludeFromRecurrence__WEBPACK_IMPORTED_MODULE_26__.excludeFromRecurrence)(rawAppointment, exceptionDate, this._dataAccessors, this._timeZoneCalculator);
            var singleRawAppointment = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, newRawAppointment);
            delete singleRawAppointment[this._dataAccessors.expr.recurrenceExceptionExpr];
            delete singleRawAppointment[this._dataAccessors.expr.recurrenceRuleExpr];
            var keyPropertyName = this.appointmentDataProvider.keyName;
            delete singleRawAppointment[keyPropertyName];
            var canCreateNewAppointment = !isDeleted && !isPopupEditing;
            if (canCreateNewAppointment) {
              this.addAppointment(singleRawAppointment);
            }
            if (isPopupEditing) {
              this._appointmentPopup.show(singleRawAppointment, {
                isToolbarVisible: true,
                action: _appointment_popup_m_popup__WEBPACK_IMPORTED_MODULE_33__.ACTION_TO_APPOINTMENT.EXCLUDE_FROM_SERIES,
                excludeInfo: {
                  sourceAppointment: rawAppointment,
                  updatedAppointment: appointment.source()
                }
              });
              this._editAppointmentData = rawAppointment;
            } else {
              this._updateAppointment(rawAppointment, appointment.source(), function () {
                _this103._appointments.moveAppointmentBack(dragEvent);
              }, dragEvent);
            }
          }
        }, {
          key: "_createRecurrenceException",
          value: function _createRecurrenceException(appointment, exceptionDate) {
            var result = [];
            if (appointment.recurrenceException) {
              result.push(appointment.recurrenceException);
            }
            result.push(this._getSerializedDate(exceptionDate, appointment.startDate, appointment.allDay));
            return result.join();
          }
        }, {
          key: "_getSerializedDate",
          value: function _getSerializedDate(date, startDate, isAllDay) {
            isAllDay && date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds());
            return _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_11__["default"].serializeDate(date, UTC_FULL_DATE_FORMAT);
          }
        }, {
          key: "_showRecurrenceChangeConfirm",
          value: function _showRecurrenceChangeConfirm(isDeleted) {
            var message = _localization_message__WEBPACK_IMPORTED_MODULE_21__["default"].format(isDeleted ? "dxScheduler-confirmRecurrenceDeleteMessage" : "dxScheduler-confirmRecurrenceEditMessage");
            var seriesText = _localization_message__WEBPACK_IMPORTED_MODULE_21__["default"].format(isDeleted ? "dxScheduler-confirmRecurrenceDeleteSeries" : "dxScheduler-confirmRecurrenceEditSeries");
            var occurrenceText = _localization_message__WEBPACK_IMPORTED_MODULE_21__["default"].format(isDeleted ? "dxScheduler-confirmRecurrenceDeleteOccurrence" : "dxScheduler-confirmRecurrenceEditOccurrence");
            this._recurrenceDialog = (0, _ui_dialog__WEBPACK_IMPORTED_MODULE_28__.custom)({
              messageHtml: message,
              showCloseButton: true,
              showTitle: true,
              buttons: [{
                text: seriesText,
                onClick: function onClick() {
                  return RECURRENCE_EDITING_MODE.SERIES;
                }
              }, {
                text: occurrenceText,
                onClick: function onClick() {
                  return RECURRENCE_EDITING_MODE.OCCURENCE;
                }
              }],
              popupOptions: {
                wrapperAttr: {
                  "class": "dx-dialog"
                }
              }
            });
            return this._recurrenceDialog.show();
          }
        }, {
          key: "_getUpdatedData",
          value: function _getUpdatedData(rawAppointment) {
            var _this104 = this;
            var getConvertedFromGrid = function getConvertedFromGrid(date) {
              return date ? _this104.timeZoneCalculator.createDate(date, {
                path: "fromGrid"
              }) : void 0;
            };
            var isValidDate = function isValidDate(date) {
              return !isNaN(new Date(date).getTime());
            };
            var targetCell = this.getTargetCellData();
            var appointment = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__.createAppointmentAdapter)(rawAppointment, this._dataAccessors, this.timeZoneCalculator);
            var cellStartDate = getConvertedFromGrid(targetCell.startDate);
            var cellEndDate = getConvertedFromGrid(targetCell.endDate);
            var appointmentStartDate = new Date(appointment.startDate);
            var appointmentEndDate = new Date(appointment.endDate);
            var resultedStartDate = cellStartDate || appointmentStartDate;
            if (!isValidDate(appointmentStartDate)) {
              appointmentStartDate = resultedStartDate;
            }
            if (!isValidDate(appointmentEndDate)) {
              appointmentEndDate = cellEndDate;
            }
            var duration = appointmentEndDate.getTime() - appointmentStartDate.getTime();
            var isKeepAppointmentHours = this._workSpace.keepOriginalHours() && isValidDate(appointment.startDate) && isValidDate(cellStartDate);
            if (isKeepAppointmentHours) {
              var trimTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_10__["default"].trimTime;
              var startDate = this.timeZoneCalculator.createDate(appointment.startDate, {
                path: "toGrid"
              });
              var timeInMs = startDate.getTime() - trimTime(startDate).getTime();
              resultedStartDate = new Date(trimTime(targetCell.startDate).getTime() + timeInMs);
              resultedStartDate = this.timeZoneCalculator.createDate(resultedStartDate, {
                path: "fromGrid"
              });
            }
            var result = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__.createAppointmentAdapter)({}, this._dataAccessors, this.timeZoneCalculator);
            if (void 0 !== targetCell.allDay) {
              result.allDay = targetCell.allDay;
            }
            result.startDate = resultedStartDate;
            var resultedEndDate = new Date(resultedStartDate.getTime() + duration);
            if (this.appointmentTakesAllDay(rawAppointment) && !result.allDay && this._workSpace.supportAllDayRow()) {
              resultedEndDate = this._workSpace.calculateEndDate(resultedStartDate);
            }
            if (appointment.allDay && !this._workSpace.supportAllDayRow() && !this._workSpace.keepOriginalHours()) {
              var dateCopy = new Date(resultedStartDate);
              dateCopy.setHours(0);
              resultedEndDate = new Date(dateCopy.getTime() + duration);
              if (0 !== resultedEndDate.getHours()) {
                resultedEndDate.setHours(this._getCurrentViewOption("endDayHour"));
              }
            }
            var timeZoneOffset = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_47__["default"].getTimezoneOffsetChangeInMs(appointmentStartDate, appointmentEndDate, resultedStartDate, resultedEndDate);
            result.endDate = new Date(resultedEndDate.getTime() - timeZoneOffset);
            var rawResult = result.source();
            (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_49__.setResourceToAppointment)(this.option("resources"), this.getResourceDataAccessors(), rawResult, targetCell.groups);
            return rawResult;
          }
        }, {
          key: "getTargetedAppointment",
          value: function getTargetedAppointment(appointment, element) {
            var settings = _m_utils__WEBPACK_IMPORTED_MODULE_46__.utils.dataAccessors.getAppointmentSettings(element);
            var info = _m_utils__WEBPACK_IMPORTED_MODULE_46__.utils.dataAccessors.getAppointmentInfo(element);
            var appointmentIndex = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(element).data(this._appointments._itemIndexKey());
            var adapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__.createAppointmentAdapter)(appointment, this._dataAccessors, this.timeZoneCalculator);
            var targetedAdapter = adapter.clone();
            if (this._isAgenda() && adapter.isRecurrent) {
              var agendaSettings = settings.agendaSettings;
              targetedAdapter.startDate = _m_expression_utils__WEBPACK_IMPORTED_MODULE_42__.ExpressionUtils.getField(this._dataAccessors, "startDate", agendaSettings);
              targetedAdapter.endDate = _m_expression_utils__WEBPACK_IMPORTED_MODULE_42__.ExpressionUtils.getField(this._dataAccessors, "endDate", agendaSettings);
            } else if (settings) {
              targetedAdapter.startDate = info ? info.sourceAppointment.startDate : adapter.startDate;
              targetedAdapter.endDate = info ? info.sourceAppointment.endDate : adapter.endDate;
            }
            var rawTargetedAppointment = targetedAdapter.source();
            if (element) {
              this.setTargetedAppointmentResources(rawTargetedAppointment, element, appointmentIndex);
            }
            if (info) {
              rawTargetedAppointment.displayStartDate = new Date(info.appointment.startDate);
              rawTargetedAppointment.displayEndDate = new Date(info.appointment.endDate);
            }
            return rawTargetedAppointment;
          }
        }, {
          key: "subscribe",
          value: function subscribe(subject, action) {
            this._subscribes[subject] = _m_subscribes__WEBPACK_IMPORTED_MODULE_45__["default"][subject] = action;
          }
        }, {
          key: "fire",
          value: function fire(subject) {
            var callback = this._subscribes[subject];
            var args = Array.prototype.slice.call(arguments);
            if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isFunction)(callback)) {
              throw _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_30__["default"].Error("E1031", subject);
            }
            return callback.apply(this, args.slice(1));
          }
        }, {
          key: "getTargetCellData",
          value: function getTargetCellData() {
            return this._workSpace.getDataByDroppableCell();
          }
        }, {
          key: "_updateAppointment",
          value: function _updateAppointment(target, rawAppointment, onUpdatePrevented, dragEvent) {
            var updatingOptions = {
              newData: rawAppointment,
              oldData: (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)({}, target),
              cancel: false
            };
            var performFailAction = function (err) {
              if (onUpdatePrevented) {
                onUpdatePrevented.call(this);
              }
              if (err && "Error" === err.name) {
                throw err;
              }
            }.bind(this);
            this._actions[StoreEventNames.UPDATING](updatingOptions);
            if (dragEvent && !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isDeferred)(dragEvent.cancel)) {
              dragEvent.cancel = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.Deferred();
            }
            return this._processActionResult(updatingOptions, function (canceled) {
              var _this105 = this;
              var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.Deferred();
              if (!canceled) {
                this._expandAllDayPanel(rawAppointment);
                try {
                  deferred = this.appointmentDataProvider.update(target, rawAppointment).done(function () {
                    dragEvent && dragEvent.cancel.resolve(false);
                  }).always(function (storeAppointment) {
                    return _this105._onDataPromiseCompleted(StoreEventNames.UPDATED, storeAppointment);
                  }).fail(function () {
                    return performFailAction();
                  });
                } catch (err) {
                  performFailAction(err);
                  deferred.resolve();
                }
              } else {
                performFailAction();
                deferred.resolve();
              }
              return deferred.promise();
            });
          }
        }, {
          key: "_processActionResult",
          value: function _processActionResult(actionOptions, callback) {
            var _this106 = this;
            var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.Deferred();
            var resolveCallback = function resolveCallback(callbackResult) {
              (0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.when)((0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.fromPromise)(callbackResult)).always(deferred.resolve);
            };
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isPromise)(actionOptions.cancel)) {
              (0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.when)((0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.fromPromise)(actionOptions.cancel)).always(function (cancel) {
                if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isDefined)(cancel)) {
                  cancel = "rejected" === actionOptions.cancel.state();
                }
                resolveCallback(callback.call(_this106, cancel));
              });
            } else {
              resolveCallback(callback.call(this, actionOptions.cancel));
            }
            return deferred.promise();
          }
        }, {
          key: "_expandAllDayPanel",
          value: function _expandAllDayPanel(appointment) {
            if (!this._isAllDayExpanded() && this.appointmentTakesAllDay(appointment)) {
              this._workSpace.option("allDayExpanded", true);
            }
          }
        }, {
          key: "_onDataPromiseCompleted",
          value: function _onDataPromiseCompleted(handlerName, storeAppointment, appointment) {
            var args = {
              appointmentData: appointment || storeAppointment
            };
            if (storeAppointment instanceof Error) {
              args.error = storeAppointment;
            } else {
              this._appointmentPopup.visible && this._appointmentPopup.hide();
            }
            this._actions[handlerName](args);
            this._fireContentReadyAction();
          }
        }, {
          key: "getAppointmentsInstance",
          value: function getAppointmentsInstance() {
            return this._appointments;
          }
        }, {
          key: "getLayoutManager",
          value: function getLayoutManager() {
            return this._layoutManager;
          }
        }, {
          key: "getRenderingStrategyInstance",
          value: function getRenderingStrategyInstance() {
            return this.getLayoutManager().getRenderingStrategyInstance();
          }
        }, {
          key: "getActions",
          value: function getActions() {
            return this._actions;
          }
        }, {
          key: "appointmentTakesAllDay",
          value: function appointmentTakesAllDay(rawAppointment) {
            var appointment = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__.createAppointmentAdapter)(rawAppointment, this._dataAccessors, this.timeZoneCalculator);
            return (0, _renovation_ui_scheduler_appointment_utils_getAppointmentTakesAllDay__WEBPACK_IMPORTED_MODULE_22__.getAppointmentTakesAllDay)(appointment, this._getCurrentViewOption("startDayHour"), this._getCurrentViewOption("endDayHour"), this._getCurrentViewOption("allDayPanelMode"));
          }
        }, {
          key: "dayHasAppointment",
          value: function dayHasAppointment(day, rawAppointment, trimTime) {
            var _this107 = this;
            var getConvertedToTimeZone = function getConvertedToTimeZone(date) {
              return _this107.timeZoneCalculator.createDate(date, {
                path: "toGrid"
              });
            };
            var appointment = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__.createAppointmentAdapter)(rawAppointment, this._dataAccessors, this.timeZoneCalculator);
            var startDate = new Date(appointment.startDate);
            var endDate = new Date(appointment.endDate);
            startDate = getConvertedToTimeZone(startDate);
            endDate = getConvertedToTimeZone(endDate);
            if (day.getTime() === endDate.getTime()) {
              return startDate.getTime() === endDate.getTime();
            }
            if (trimTime) {
              day = _core_utils_date__WEBPACK_IMPORTED_MODULE_10__["default"].trimTime(day);
              startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_10__["default"].trimTime(startDate);
              endDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_10__["default"].trimTime(endDate);
            }
            var dayTimeStamp = day.getTime();
            var startDateTimeStamp = startDate.getTime();
            var endDateTimeStamp = endDate.getTime();
            return startDateTimeStamp <= dayTimeStamp && dayTimeStamp <= endDateTimeStamp;
          }
        }, {
          key: "setTargetedAppointmentResources",
          value: function setTargetedAppointmentResources(rawAppointment, element, appointmentIndex) {
            var groups = this._getCurrentViewOption("groups");
            if (null === groups || void 0 === groups ? void 0 : groups.length) {
              var resourcesSetter = this.getResourceDataAccessors().setter;
              var workSpace = this._workSpace;
              var getGroups;
              var setResourceCallback;
              if (this._isAgenda()) {
                getGroups = function getGroups() {
                  var apptSettings = this.getLayoutManager()._positionMap[appointmentIndex];
                  return (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_49__.getCellGroups)(apptSettings[0].groupIndex, this.getWorkSpace().option("groups"));
                };
                setResourceCallback = function setResourceCallback(_, group) {
                  resourcesSetter[group.name](rawAppointment, group.id);
                };
              } else {
                getGroups = function getGroups() {
                  var setting = _m_utils__WEBPACK_IMPORTED_MODULE_46__.utils.dataAccessors.getAppointmentSettings(element) || {};
                  return workSpace.getCellDataByCoordinates({
                    left: setting.left,
                    top: setting.top
                  }).groups;
                };
                setResourceCallback = function setResourceCallback(field, value) {
                  resourcesSetter[field](rawAppointment, value);
                };
              }
              (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)(getGroups.call(this), setResourceCallback);
            }
          }
        }, {
          key: "getStartViewDate",
          value: function getStartViewDate() {
            var _a;
            return null === (_a = this._workSpace) || void 0 === _a ? void 0 : _a.getStartViewDate();
          }
        }, {
          key: "getEndViewDate",
          value: function getEndViewDate() {
            return this._workSpace.getEndViewDate();
          }
        }, {
          key: "showAddAppointmentPopup",
          value: function showAddAppointmentPopup(cellData, cellGroups) {
            var appointmentAdapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__.createAppointmentAdapter)({}, this._dataAccessors, this.timeZoneCalculator);
            appointmentAdapter.allDay = cellData.allDay;
            appointmentAdapter.startDate = this.timeZoneCalculator.createDate(cellData.startDate, {
              path: "fromGrid"
            });
            appointmentAdapter.endDate = this.timeZoneCalculator.createDate(cellData.endDate, {
              path: "fromGrid"
            });
            var resultAppointment = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)(appointmentAdapter.source(), cellGroups);
            this.showAppointmentPopup(resultAppointment, true);
          }
        }, {
          key: "showAppointmentPopup",
          value: function showAppointmentPopup(rawAppointment, createNewAppointment, rawTargetedAppointment) {
            var _this108 = this;
            var newRawTargetedAppointment = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, rawTargetedAppointment);
            if (newRawTargetedAppointment) {
              delete newRawTargetedAppointment.displayStartDate;
              delete newRawTargetedAppointment.displayEndDate;
            }
            var appointment = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__.createAppointmentAdapter)(newRawTargetedAppointment || rawAppointment, this._dataAccessors, this.timeZoneCalculator);
            var newTargetedAppointment = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)({}, rawAppointment, newRawTargetedAppointment);
            var isCreateAppointment = null !== createNewAppointment && void 0 !== createNewAppointment ? createNewAppointment : (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isEmptyObject)(rawAppointment);
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isEmptyObject)(rawAppointment)) {
              rawAppointment = this.createPopupAppointment();
            }
            if (isCreateAppointment) {
              delete this._editAppointmentData;
              this._editing.allowAdding && this._appointmentPopup.show(rawAppointment, {
                isToolbarVisible: true,
                action: _appointment_popup_m_popup__WEBPACK_IMPORTED_MODULE_33__.ACTION_TO_APPOINTMENT.CREATE
              });
            } else {
              this._checkRecurringAppointment(rawAppointment, newTargetedAppointment, appointment.startDate, function () {
                _this108._editAppointmentData = rawAppointment;
                _this108._appointmentPopup.show(rawAppointment, {
                  isToolbarVisible: _this108._editing.allowUpdating,
                  action: _appointment_popup_m_popup__WEBPACK_IMPORTED_MODULE_33__.ACTION_TO_APPOINTMENT.UPDATE
                });
              }, false, true);
            }
          }
        }, {
          key: "createPopupAppointment",
          value: function createPopupAppointment() {
            var result = {};
            var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_10__["default"].dateToMilliseconds;
            var startDate = new Date(this.option("currentDate"));
            var endDate = new Date(startDate.getTime() + this.option("cellDuration") * toMs("minute"));
            _m_expression_utils__WEBPACK_IMPORTED_MODULE_42__.ExpressionUtils.setField(this._dataAccessors, "startDate", result, startDate);
            _m_expression_utils__WEBPACK_IMPORTED_MODULE_42__.ExpressionUtils.setField(this._dataAccessors, "endDate", result, endDate);
            return result;
          }
        }, {
          key: "hideAppointmentPopup",
          value: function hideAppointmentPopup(saveChanges) {
            var _a;
            if (null === (_a = this._appointmentPopup) || void 0 === _a ? void 0 : _a.visible) {
              saveChanges && this._appointmentPopup.saveChangesAsync();
              this._appointmentPopup.hide();
            }
          }
        }, {
          key: "showAppointmentTooltip",
          value: function showAppointmentTooltip(appointment, element, targetedAppointment) {
            if (appointment) {
              var settings = _m_utils__WEBPACK_IMPORTED_MODULE_46__.utils.dataAccessors.getAppointmentSettings(element);
              var appointmentConfig = {
                itemData: targetedAppointment || appointment,
                groupIndex: null === settings || void 0 === settings ? void 0 : settings.groupIndex,
                groups: this.option("groups")
              };
              var _getAppointmentColor = this.createGetAppointmentColor();
              var deferredColor = _getAppointmentColor(appointmentConfig);
              var info = new _m_data_structures__WEBPACK_IMPORTED_MODULE_41__.AppointmentTooltipInfo(appointment, targetedAppointment, deferredColor);
              this.showAppointmentTooltipCore(element, [info]);
            }
          }
        }, {
          key: "createGetAppointmentColor",
          value: function createGetAppointmentColor() {
            var _this109 = this;
            return function (appointmentConfig) {
              var resourceConfig = {
                resources: _this109.option("resources"),
                dataAccessors: _this109.getResourceDataAccessors(),
                loadedResources: _this109.option("loadedResources"),
                resourceLoaderMap: _this109.option("resourceLoaderMap")
              };
              return (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_49__.getAppointmentColor)(resourceConfig, appointmentConfig);
            };
          }
        }, {
          key: "showAppointmentTooltipCore",
          value: function showAppointmentTooltipCore(target, data, options) {
            var _this110 = this;
            var arg = {
              cancel: false,
              appointments: data.map(function (item) {
                var result = {
                  appointmentData: item.appointment,
                  currentAppointmentData: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, item.targetedAppointment),
                  color: item.color
                };
                if (item.settings.info) {
                  var _item$settings$info$a = item.settings.info.appointment,
                    startDate = _item$settings$info$a.startDate,
                    endDate = _item$settings$info$a.endDate;
                  result.currentAppointmentData.displayStartDate = startDate;
                  result.currentAppointmentData.displayEndDate = endDate;
                }
                return result;
              }),
              targetElement: target
            };
            this._createActionByOption("onAppointmentTooltipShowing")(arg);
            if (this._appointmentTooltip.isAlreadyShown(target)) {
              this.hideAppointmentTooltip();
            } else {
              this._processActionResult(arg, function (canceled) {
                !canceled && _this110._appointmentTooltip.show(target, data, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, _this110._getExtraAppointmentTooltipOptions()), options));
              });
            }
          }
        }, {
          key: "hideAppointmentTooltip",
          value: function hideAppointmentTooltip() {
            this._appointmentTooltip && this._appointmentTooltip.hide();
          }
        }, {
          key: "scrollToTime",
          value: function scrollToTime(hours, minutes, date) {
            _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_30__["default"].log("W0002", "dxScheduler", "scrollToTime", "21.1", 'Use the "scrollTo" method instead');
            this._workSpace.scrollToTime(hours, minutes, date);
          }
        }, {
          key: "scrollTo",
          value: function scrollTo(date, groups, allDay) {
            this._workSpace.scrollTo(date, groups, allDay);
          }
        }, {
          key: "_isHorizontalVirtualScrolling",
          value: function _isHorizontalVirtualScrolling() {
            var scrolling = this.option("scrolling");
            var orientation = scrolling.orientation,
              mode = scrolling.mode;
            var isVirtualScrolling = "virtual" === mode;
            return isVirtualScrolling && ("horizontal" === orientation || "both" === orientation);
          }
        }, {
          key: "addAppointment",
          value: function addAppointment(rawAppointment) {
            var _this111 = this;
            var appointment = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_38__.createAppointmentAdapter)(rawAppointment, this._dataAccessors, this.timeZoneCalculator);
            appointment.text = appointment.text || "";
            var serializedAppointment = appointment.source(true);
            var addingOptions = {
              appointmentData: serializedAppointment,
              cancel: false
            };
            this._actions[StoreEventNames.ADDING](addingOptions);
            return this._processActionResult(addingOptions, function (canceled) {
              if (canceled) {
                return new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_12__.Deferred().resolve();
              }
              _this111._expandAllDayPanel(serializedAppointment);
              return _this111.appointmentDataProvider.add(serializedAppointment).always(function (storeAppointment) {
                return _this111._onDataPromiseCompleted(StoreEventNames.ADDED, storeAppointment);
              });
            });
          }
        }, {
          key: "updateAppointment",
          value: function updateAppointment(target, appointment) {
            return this._updateAppointment(target, appointment);
          }
        }, {
          key: "deleteAppointment",
          value: function deleteAppointment(rawAppointment) {
            var deletingOptions = this.fireOnAppointmentDeleting(rawAppointment);
            this.processDeleteAppointment(rawAppointment, deletingOptions);
          }
        }, {
          key: "fireOnAppointmentDeleting",
          value: function fireOnAppointmentDeleting(rawAppointment, targetedAppointmentData) {
            var deletingOptions = {
              appointmentData: rawAppointment,
              targetedAppointmentData: targetedAppointmentData,
              cancel: false
            };
            this._actions[StoreEventNames.DELETING](deletingOptions);
            return deletingOptions;
          }
        }, {
          key: "processDeleteAppointment",
          value: function processDeleteAppointment(rawAppointment, deletingOptions) {
            this._processActionResult(deletingOptions, function (canceled) {
              var _this112 = this;
              if (!canceled) {
                this.appointmentDataProvider.remove(rawAppointment).always(function (storeAppointment) {
                  return _this112._onDataPromiseCompleted(StoreEventNames.DELETED, storeAppointment, rawAppointment);
                });
              }
            });
          }
        }, {
          key: "deleteRecurrence",
          value: function deleteRecurrence(appointment, date, recurrenceEditMode) {
            var _this113 = this;
            this._checkRecurringAppointment(appointment, {}, date, function () {
              _this113.processDeleteAppointment(appointment, {
                cancel: false
              });
            }, true, false, null, recurrenceEditMode);
          }
        }, {
          key: "focus",
          value: function focus() {
            if (this._editAppointmentData) {
              this._appointments.focus();
            } else {
              this._workSpace.focus();
            }
          }
        }, {
          key: "getFirstDayOfWeek",
          value: function getFirstDayOfWeek() {
            return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_16__.isDefined)(this.option("firstDayOfWeek")) ? this.option("firstDayOfWeek") : _localization_date__WEBPACK_IMPORTED_MODULE_20__["default"].firstDayOfWeekIndex();
          }
        }, {
          key: "_validateKeyFieldIfAgendaExist",
          value: function _validateKeyFieldIfAgendaExist() {
            if (!this.appointmentDataProvider.isDataSourceInit) {
              return;
            }
            var hasAgendaView = !!this._getViewByName("agenda");
            var isKeyExist = !!this.appointmentDataProvider.keyName;
            if (hasAgendaView && !isKeyExist) {
              _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_30__["default"].log("W1023");
            }
          }
        }, {
          key: "_validateCellDuration",
          value: function _validateCellDuration() {
            var endDayHour = this._getCurrentViewOption("endDayHour");
            var startDayHour = this._getCurrentViewOption("startDayHour");
            var cellDuration = this._getCurrentViewOption("cellDuration");
            if ((endDayHour - startDayHour) * MINUTES_IN_HOUR % cellDuration !== 0) {
              _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_30__["default"].log("W1015");
            }
          }
        }, {
          key: "_validateDayHours",
          value: function _validateDayHours() {
            var startDayHour = this._getCurrentViewOption("startDayHour");
            var endDayHour = this._getCurrentViewOption("endDayHour");
            (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_27__.validateDayHours)(startDayHour, endDayHour);
          }
        }, {
          key: "_getDragBehavior",
          value: function _getDragBehavior() {
            return this._workSpace.dragBehavior;
          }
        }]);
        return Scheduler;
      }(_ui_widget_ui_widget__WEBPACK_IMPORTED_MODULE_31__["default"]);
      Scheduler.include(_data_helper__WEBPACK_IMPORTED_MODULE_18__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__["default"])("dxScheduler", Scheduler);
      /* harmony default export */
      __webpack_exports__["default"] = Scheduler;

      /***/
    }),
    /***/6700: (
    /*!**************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_subscribes.js ***!
      \**************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /* harmony import */
      var _appointments_m_text_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./appointments/m_text_utils */3092);
      /* harmony import */
      var _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./m_appointment_adapter */91634);
      /* harmony import */
      var _m_classes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./m_classes */16874);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ./m_utils */8392);
      /**
       * DevExtreme (esm/__internal/scheduler/m_subscribes.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds;
      var subscribes = {
        isCurrentViewAgenda: function isCurrentViewAgenda() {
          return "agenda" === this.currentViewType;
        },
        currentViewUpdated: function currentViewUpdated(currentView) {
          this.option("currentView", currentView);
        },
        currentDateUpdated: function currentDateUpdated(date) {
          this.option("currentDate", date);
        },
        getOption: function getOption(name) {
          return this.option(name);
        },
        getWorkspaceOption: function getWorkspaceOption(name) {
          return this.getWorkSpace().option(name);
        },
        isVirtualScrolling: function isVirtualScrolling() {
          return this.isVirtualScrolling();
        },
        setCellDataCacheAlias: function setCellDataCacheAlias(appointment, geometry) {
          this._workSpace.setCellDataCacheAlias(appointment, geometry);
        },
        isGroupedByDate: function isGroupedByDate() {
          return this.getWorkSpace().isGroupedByDate();
        },
        showAppointmentTooltip: function showAppointmentTooltip(options) {
          var targetedAppointment = this.getTargetedAppointment(options.data, options.target);
          this.showAppointmentTooltip(options.data, options.target, targetedAppointment);
        },
        hideAppointmentTooltip: function hideAppointmentTooltip() {
          this.hideAppointmentTooltip();
        },
        showEditAppointmentPopup: function showEditAppointmentPopup(options) {
          var targetedData = this.getTargetedAppointment(options.data, options.target);
          this.showAppointmentPopup(options.data, false, targetedData);
        },
        updateAppointmentAfterResize: function updateAppointmentAfterResize(options) {
          var _this114 = this;
          var info = _m_utils__WEBPACK_IMPORTED_MODULE_8__.utils.dataAccessors.getAppointmentInfo(options.$appointment);
          var exceptionDate = info.sourceAppointment.exceptionDate;
          this._checkRecurringAppointment(options.target, options.data, exceptionDate, function () {
            _this114._updateAppointment(options.target, options.data, function () {
              this._appointments.moveAppointmentBack();
            });
          });
        },
        getUpdatedData: function getUpdatedData(rawAppointment) {
          return this._getUpdatedData(rawAppointment);
        },
        updateAppointmentAfterDrag: function updateAppointmentAfterDrag(_ref) {
          var _this115 = this;
          var event = _ref.event,
            element = _ref.element,
            rawAppointment = _ref.rawAppointment,
            newCellIndex = _ref.newCellIndex,
            oldCellIndex = _ref.oldCellIndex;
          var info = _m_utils__WEBPACK_IMPORTED_MODULE_8__.utils.dataAccessors.getAppointmentInfo(element);
          var appointment = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_6__.createAppointmentAdapter)(rawAppointment, this._dataAccessors, this.timeZoneCalculator);
          var targetedAppointment = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_6__.createAppointmentAdapter)((0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({}, rawAppointment, this._getUpdatedData(rawAppointment)), this._dataAccessors, this.timeZoneCalculator);
          var targetedRawAppointment = targetedAppointment.source();
          var becomeAllDay = targetedAppointment.allDay;
          var wasAllDay = appointment.allDay;
          var movedBetweenAllDayAndSimple = this._workSpace.supportAllDayRow() && (wasAllDay && !becomeAllDay || !wasAllDay && becomeAllDay);
          var isDragAndDropBetweenComponents = event.fromComponent !== event.toComponent;
          if (-1 === newCellIndex) {
            if (!isDragAndDropBetweenComponents) {
              this._appointments.moveAppointmentBack(event);
            }
            return;
          }
          if (newCellIndex !== oldCellIndex || isDragAndDropBetweenComponents || movedBetweenAllDayAndSimple) {
            this._checkRecurringAppointment(rawAppointment, targetedRawAppointment, info.sourceAppointment.exceptionDate, function () {
              _this115._updateAppointment(rawAppointment, targetedRawAppointment, function () {
                this._appointments.moveAppointmentBack(event);
              }, event);
            }, void 0, void 0, event);
          } else {
            this._appointments.moveAppointmentBack(event);
          }
        },
        onDeleteButtonPress: function onDeleteButtonPress(options) {
          var targetedData = this.getTargetedAppointment(options.data, (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(options.target));
          this.checkAndDeleteAppointment(options.data, targetedData);
          this.hideAppointmentTooltip();
        },
        getTextAndFormatDate: function getTextAndFormatDate(appointmentRaw, targetedAppointmentRaw, format) {
          var appointmentAdapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_6__.createAppointmentAdapter)(appointmentRaw, this._dataAccessors, this.timeZoneCalculator);
          var targetedAdapter = (0, _m_appointment_adapter__WEBPACK_IMPORTED_MODULE_6__.createAppointmentAdapter)(targetedAppointmentRaw || appointmentRaw, this._dataAccessors, this.timeZoneCalculator);
          var startDate = this.timeZoneCalculator.createDate(targetedAdapter.startDate, {
            path: "toGrid"
          });
          var endDate = this.timeZoneCalculator.createDate(targetedAdapter.endDate, {
            path: "toGrid"
          });
          var formatType = format || (0, _appointments_m_text_utils__WEBPACK_IMPORTED_MODULE_5__.getFormatType)(startDate, endDate, targetedAdapter.allDay, "month" !== this.currentViewType);
          return {
            text: targetedAdapter.text || appointmentAdapter.text,
            formatDate: (0, _appointments_m_text_utils__WEBPACK_IMPORTED_MODULE_5__.formatDates)(startDate, endDate, formatType)
          };
        },
        _createAppointmentTitle: function _createAppointmentTitle(data) {
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isPlainObject)(data)) {
            return data.text;
          }
          return String(data);
        },
        getResizableAppointmentArea: function getResizableAppointmentArea(options) {
          var allDay = options.allDay;
          var groups = this._getCurrentViewOption("groups");
          if (groups && groups.length) {
            if (allDay || this.getLayoutManager().getRenderingStrategyInstance()._needHorizontalGroupBounds()) {
              var horizontalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);
              return {
                left: horizontalGroupBounds.left,
                right: horizontalGroupBounds.right,
                top: 0,
                bottom: 0
              };
            }
            if (this.getLayoutManager().getRenderingStrategyInstance()._needVerticalGroupBounds(allDay) && this._workSpace._isVerticalGroupedWorkSpace()) {
              var verticalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);
              return {
                left: 0,
                right: 0,
                top: verticalGroupBounds.top,
                bottom: verticalGroupBounds.bottom
              };
            }
          }
          return;
        },
        needRecalculateResizableArea: function needRecalculateResizableArea() {
          return this.getWorkSpace().needRecalculateResizableArea();
        },
        getAppointmentGeometry: function getAppointmentGeometry(settings) {
          return this.getLayoutManager().getRenderingStrategyInstance().getAppointmentGeometry(settings);
        },
        isAllDay: function isAllDay(appointmentData) {
          return this.getLayoutManager().getRenderingStrategyInstance().isAllDay(appointmentData);
        },
        getDeltaTime: function getDeltaTime(e, initialSize, itemData) {
          return this.getLayoutManager().getRenderingStrategyInstance().getDeltaTime(e, initialSize, itemData);
        },
        getDropDownAppointmentWidth: function getDropDownAppointmentWidth(isAllDay) {
          return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentWidth(this._getViewCountConfig().intervalCount, isAllDay);
        },
        getDropDownAppointmentHeight: function getDropDownAppointmentHeight() {
          return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentHeight();
        },
        getCellWidth: function getCellWidth() {
          return this.getWorkSpace().getCellWidth();
        },
        getCellHeight: function getCellHeight() {
          return this.getWorkSpace().getCellHeight();
        },
        getMaxAppointmentCountPerCellByType: function getMaxAppointmentCountPerCellByType(isAllDay) {
          return this.getRenderingStrategyInstance()._getMaxAppointmentCountPerCellByType(isAllDay);
        },
        needCorrectAppointmentDates: function needCorrectAppointmentDates() {
          return this.getRenderingStrategyInstance().needCorrectAppointmentDates();
        },
        getRenderingStrategyDirection: function getRenderingStrategyDirection() {
          return this.getRenderingStrategyInstance().getDirection();
        },
        updateAppointmentEndDate: function updateAppointmentEndDate(options) {
          var endDate = options.endDate;
          var endDayHour = this._getCurrentViewOption("endDayHour");
          var startDayHour = this._getCurrentViewOption("startDayHour");
          var updatedEndDate = endDate;
          if (endDate.getHours() >= endDayHour) {
            updatedEndDate.setHours(endDayHour, 0, 0, 0);
          } else if (!options.isSameDate && startDayHour > 0 && 60 * endDate.getHours() + endDate.getMinutes() < 60 * startDayHour) {
            updatedEndDate = new Date(updatedEndDate.getTime() - toMs("day"));
            updatedEndDate.setHours(endDayHour, 0, 0, 0);
          }
          return updatedEndDate;
        },
        renderCompactAppointments: function renderCompactAppointments(options) {
          this._compactAppointmentsHelper.render(options);
        },
        clearCompactAppointments: function clearCompactAppointments() {
          this._compactAppointmentsHelper.clear();
        },
        supportCompactDropDownAppointments: function supportCompactDropDownAppointments() {
          return this.getLayoutManager().getRenderingStrategyInstance().supportCompactDropDownAppointments();
        },
        getGroupCount: function getGroupCount() {
          return this._workSpace._getGroupCount();
        },
        mapAppointmentFields: function mapAppointmentFields(config) {
          var itemData = config.itemData,
            itemElement = config.itemElement,
            targetedAppointment = config.targetedAppointment;
          var targetedData = targetedAppointment || this.getTargetedAppointment(itemData, itemElement);
          return {
            appointmentData: config.itemData,
            appointmentElement: config.itemElement,
            targetedAppointmentData: targetedData
          };
        },
        dayHasAppointment: function dayHasAppointment(day, appointment, trimTime) {
          return this.dayHasAppointment(day, appointment, trimTime);
        },
        getLayoutManager: function getLayoutManager() {
          return this._layoutManager;
        },
        getAgendaVerticalStepHeight: function getAgendaVerticalStepHeight() {
          return this.getWorkSpace().getAgendaVerticalStepHeight();
        },
        getAgendaDuration: function getAgendaDuration() {
          return this._getCurrentViewOption("agendaDuration");
        },
        getStartViewDate: function getStartViewDate() {
          return this.getStartViewDate();
        },
        getEndViewDate: function getEndViewDate() {
          return this.getEndViewDate();
        },
        forceMaxAppointmentPerCell: function forceMaxAppointmentPerCell() {
          return this.forceMaxAppointmentPerCell();
        },
        onAgendaReady: function onAgendaReady(rows) {
          var $appts = this.getAppointmentsInstance()._itemElements();
          var total = 0;
          var applyClass = function applyClass(_, count) {
            var index = count + total - 1;
            $appts.eq(index).addClass(_m_classes__WEBPACK_IMPORTED_MODULE_7__.AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS);
            total += count;
          };
          for (var i = 0; i < rows.length; i++) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__.each)(rows[i], applyClass);
          }
        },
        getTimezone: function getTimezone() {
          return this._getTimezoneOffsetByOption();
        },
        getTargetedAppointmentData: function getTargetedAppointmentData(appointment, element) {
          return this.getTargetedAppointment(appointment, element);
        },
        getEndDayHour: function getEndDayHour() {
          return this._workSpace.option("endDayHour") || this.option("endDayHour");
        },
        getStartDayHour: function getStartDayHour() {
          return this._workSpace.option("startDayHour") || this.option("startDayHour");
        },
        isAdaptive: function isAdaptive() {
          return this.option("adaptivityEnabled");
        },
        removeDroppableCellClass: function removeDroppableCellClass() {
          this._workSpace.removeDroppableCellClass();
        }
      };
      /* harmony default export */
      __webpack_exports__["default"] = subscribes;

      /***/
    }),
    /***/69100: (
    /*!*****************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_table_creator.js ***!
      \*****************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/dom_adapter */81113);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/element */60213);
      /* harmony import */
      var _core_element_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/element_data */25694);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /**
       * DevExtreme (esm/__internal/scheduler/m_table_creator.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var ROW_SELECTOR = "tr";
      var SchedulerTableCreator = /*#__PURE__*/function () {
        function SchedulerTableCreator() {
          _classCallCheck(this, SchedulerTableCreator);
          this.VERTICAL = "vertical";
          this.HORIZONTAL = "horizontal";
        }
        _createClass(SchedulerTableCreator, [{
          key: "insertAllDayRow",
          value: function insertAllDayRow(allDayElements, tableBody, index) {
            if (allDayElements[index]) {
              var row = allDayElements[index].find(ROW_SELECTOR);
              if (!row.length) {
                row = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].createElement(ROW_SELECTOR));
                row.append(allDayElements[index].get(0));
              }
              tableBody.appendChild(row.get ? row.get(0) : row);
            }
          }
        }, {
          key: "makeTable",
          value: function makeTable(options) {
            var _a;
            var tableBody = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].createElement("tbody");
            var templateCallbacks = [];
            var row;
            var rowCountInGroup = options.groupCount ? options.rowCount / options.groupCount : options.rowCount;
            var allDayElementIndex = 0;
            var allDayElements = options.allDayElements;
            var groupIndex = options.groupIndex;
            var rowCount = options.rowCount;
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(options.container).append(tableBody);
            if (allDayElements) {
              this.insertAllDayRow(allDayElements, tableBody, 0);
              allDayElementIndex++;
            }
            for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {
              row = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].createElement(ROW_SELECTOR);
              tableBody.appendChild(row);
              var isLastRowInGroup = (rowIndex + 1) % rowCountInGroup === 0;
              if (options.rowClass) {
                row.className = options.rowClass;
              }
              for (var columnIndex = 0; columnIndex < options.cellCount; columnIndex++) {
                var td = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].createElement("td");
                row.appendChild(td);
                if (options.cellClass) {
                  if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isFunction)(options.cellClass)) {
                    td.className = options.cellClass(rowIndex, columnIndex);
                  } else {
                    td.className = options.cellClass;
                  }
                }
                var cellDataObject = void 0;
                var dataKey = void 0;
                var dataValue = void 0;
                if (options.getCellData) {
                  cellDataObject = options.getCellData(td, rowIndex, columnIndex, groupIndex);
                  dataKey = cellDataObject.key;
                  dataValue = cellDataObject.value;
                  dataKey && (0, _core_element_data__WEBPACK_IMPORTED_MODULE_3__.data)(td, dataKey, dataValue);
                }
                null === (_a = options.setAdditionalClasses) || void 0 === _a ? void 0 : _a.call(options, (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(td), dataValue);
                if (options.cellTemplate && options.cellTemplate.render) {
                  var additionalTemplateData = options.getTemplateData ? options.getTemplateData(rowIndex) : {};
                  var templateOptions = {
                    model: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
                      text: options.getCellText ? options.getCellText(rowIndex, columnIndex) : "",
                      date: options.getCellDate ? options.getCellDate(rowIndex) : void 0
                    }, additionalTemplateData),
                    container: (0, _core_element__WEBPACK_IMPORTED_MODULE_2__.getPublicElement)((0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(td)),
                    index: rowIndex * options.cellCount + columnIndex
                  };
                  if (dataValue) {
                    if (dataValue.startDate) {
                      templateOptions.model.startDate = dataValue.startDate;
                    }
                    if (dataValue.endDate) {
                      templateOptions.model.endDate = dataValue.endDate;
                    }
                    if (dataValue.groups) {
                      templateOptions.model.groups = dataValue.groups;
                    }
                    if (dataValue.allDay) {
                      templateOptions.model.allDay = dataValue.allDay;
                    }
                  }
                  templateCallbacks.push(options.cellTemplate.render.bind(options.cellTemplate, templateOptions));
                } else if (options.getCellText) {
                  (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").text(options.getCellText(rowIndex, columnIndex)).addClass(options.getCellTextClass).appendTo((0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(td));
                }
              }
              if (allDayElements && isLastRowInGroup) {
                this.insertAllDayRow(allDayElements, tableBody, allDayElementIndex);
                allDayElementIndex++;
              }
            }
            return templateCallbacks;
          }
        }, {
          key: "makeGroupedTable",
          value: function makeGroupedTable(type, groups, cssClasses, cellCount, cellTemplate, rowCount, groupByDate) {
            var rows = [];
            if (type === this.VERTICAL) {
              rows = this._makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount);
            } else {
              rows = this._makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate);
            }
            return rows;
          }
        }, {
          key: "makeGroupedTableFromJSON",
          value: function makeGroupedTableFromJSON(type, data, config) {
            var table;
            var cellStorage = [];
            var rowIndex = 0;
            config = config || {};
            var cellTag = config.cellTag || "td";
            var childrenField = config.childrenField || "children";
            var titleField = config.titleField || "title";
            var _config = config,
              groupTableClass = _config.groupTableClass;
            var _config2 = config,
              groupRowClass = _config2.groupRowClass;
            var _config3 = config,
              groupCellClass = _config3.groupCellClass;
            var _config4 = config,
              groupCellCustomContent = _config4.groupCellCustomContent;
            function getChildCount(item) {
              if (item[childrenField]) {
                return item[childrenField].length;
              }
              return 0;
            }
            function createCell(text, childCount, index, data) {
              var cell = {
                element: _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].createElement(cellTag),
                childCount: childCount
              };
              if (groupCellClass) {
                cell.element.className = groupCellClass;
              }
              var cellText = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].createTextNode(text);
              if ("function" === typeof groupCellCustomContent) {
                groupCellCustomContent(cell.element, cellText, index, data);
              } else {
                cell.element.appendChild(cellText);
              }
              return cell;
            }
            !function () {
              table = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].createElement("table");
              if (groupTableClass) {
                table.className = groupTableClass;
              }
            }();
            !function generateCells(data) {
              for (var i = 0; i < data.length; i++) {
                var childCount = getChildCount(data[i]);
                var cell = createCell(data[i][titleField], childCount, i, data[i]);
                if (!cellStorage[rowIndex]) {
                  cellStorage[rowIndex] = [];
                }
                cellStorage[rowIndex].push(cell);
                if (childCount) {
                  generateCells(data[i][childrenField]);
                } else {
                  rowIndex++;
                }
              }
            }(data);
            void cellStorage.forEach(function (cells) {
              var row = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].createElement(ROW_SELECTOR);
              if (groupRowClass) {
                row.className = groupRowClass;
              }
              var rowspans = [];
              for (var i = cells.length - 1; i >= 0; i--) {
                var prev = cells[i + 1];
                var rowspan = cells[i].childCount;
                if (prev && prev.childCount) {
                  rowspan *= prev.childCount;
                }
                rowspans.push(rowspan);
              }
              rowspans.reverse();
              cells.forEach(function (cell, index) {
                if (rowspans[index]) {
                  cell.element.setAttribute("rowSpan", rowspans[index]);
                }
                row.appendChild(cell.element);
              });
              table.appendChild(row);
            });
            return table;
          }
        }, {
          key: "_makeFlexGroupedRowCells",
          value: function _makeFlexGroupedRowCells(group, repeatCount, cssClasses, cellTemplate) {
            var repeatByDate = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;
            var cells = [];
            var items = group.items;
            var itemCount = items.length;
            for (var i = 0; i < repeatCount * repeatByDate; i++) {
              for (var j = 0; j < itemCount; j++) {
                var $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>");
                var cell = {};
                if (cellTemplate && cellTemplate.render) {
                  var templateOptions = {
                    model: items[j],
                    container: (0, _core_element__WEBPACK_IMPORTED_MODULE_2__.getPublicElement)($container),
                    index: i * itemCount + j
                  };
                  if (group.data) {
                    templateOptions.model.data = group.data[j];
                  }
                  cell.template = cellTemplate.render.bind(cellTemplate, templateOptions);
                } else {
                  $container.text(items[j].text).attr("title", items[j].text).addClass("dx-scheduler-group-header-content");
                  $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").append($container);
                }
                var cssClass = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isFunction)(cssClasses.groupHeaderClass) ? cssClasses.groupHeaderClass(j) : cssClasses.groupHeaderClass;
                cell.element = $container.addClass(cssClass);
                cells.push(cell);
              }
            }
            return cells;
          }
        }, {
          key: "_makeVerticalGroupedRows",
          value: function _makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount) {
            var cellTemplates = [];
            var repeatCount = 1;
            var cellsArray = [];
            var cellIterator = function cellIterator(cell) {
              if (cell.template) {
                cellTemplates.push(cell.template);
              }
            };
            for (var i = 0; i < groups.length; i++) {
              if (i > 0) {
                repeatCount = groups[i - 1].items.length * repeatCount;
              }
              var cells = this._makeFlexGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate);
              cells.forEach(cellIterator);
              cellsArray.push(cells);
            }
            var rows = [];
            var groupCount = cellsArray.length;
            for (var _i = 0; _i < groupCount; _i++) {
              rows.push((0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(cssClasses.groupHeaderRowClass));
            }
            for (var _i2 = groupCount - 1; _i2 >= 0; _i2--) {
              var currentColumnLength = cellsArray[_i2].length;
              for (var j = 0; j < currentColumnLength; j++) {
                rows[_i2].append(cellsArray[_i2][j].element);
              }
            }
            return {
              elements: (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass("dx-scheduler-group-flex-container").append(rows),
              cellTemplates: cellTemplates
            };
          }
        }, {
          key: "_makeHorizontalGroupedRows",
          value: function _makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate) {
            var repeatCount = 1;
            var groupCount = groups.length;
            var rows = [];
            var cellTemplates = [];
            var repeatByDate = groupByDate ? cellCount : 1;
            var cellIterator = function cellIterator(cell) {
              if (cell.template) {
                cellTemplates.push(cell.template);
              }
              return cell.element;
            };
            for (var i = 0; i < groupCount; i++) {
              if (i > 0) {
                repeatCount = groups[i - 1].items.length * repeatCount;
              }
              var cells = this._makeGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate, repeatByDate);
              rows.push((0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<tr>").addClass(cssClasses.groupRowClass).append(cells.map(cellIterator)));
            }
            var maxCellCount = rows[groupCount - 1].find("th").length;
            for (var j = 0; j < groupCount; j++) {
              var $cell = rows[j].find("th");
              var colspan = maxCellCount / $cell.length;
              if (!groupByDate) {
                colspan *= cellCount;
              }
              if (colspan > 1 && 1 === repeatByDate || groupByDate && groupCount > 1) {
                $cell.attr("colSpan", colspan);
              }
            }
            return {
              elements: rows,
              cellTemplates: cellTemplates
            };
          }
        }, {
          key: "_makeGroupedRowCells",
          value: function _makeGroupedRowCells(group, repeatCount, cssClasses, cellTemplate, repeatByDate) {
            repeatByDate = repeatByDate || 1;
            repeatCount *= repeatByDate;
            var cells = [];
            var items = group.items;
            var itemCount = items.length;
            for (var i = 0; i < repeatCount; i++) {
              for (var j = 0; j < itemCount; j++) {
                var $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>");
                var cell = {};
                if (cellTemplate && cellTemplate.render) {
                  var templateOptions = {
                    model: items[j],
                    container: (0, _core_element__WEBPACK_IMPORTED_MODULE_2__.getPublicElement)($container),
                    index: i * itemCount + j
                  };
                  if (group.data) {
                    templateOptions.model.data = group.data[j];
                  }
                  cell.template = cellTemplate.render.bind(cellTemplate, templateOptions);
                } else {
                  $container.text(items[j].text);
                  $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").append($container);
                }
                $container.addClass(cssClasses.groupHeaderContentClass);
                var cssClass = void 0;
                if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isFunction)(cssClasses.groupHeaderClass)) {
                  cssClass = cssClasses.groupHeaderClass(j);
                } else {
                  cssClass = cssClasses.groupHeaderClass;
                }
                cell.element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<th>").addClass(cssClass).append($container);
                cells.push(cell);
              }
            }
            return cells;
          }
        }]);
        return SchedulerTableCreator;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = {
        tableCreator: new SchedulerTableCreator()
      };

      /***/
    }),
    /***/8392: (
    /*!*********************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_utils.js ***!
      \*********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"utils": function utils() {
          return /* binding */_utils;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/element */60213);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_utils_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/utils/data */25670);
      /* harmony import */
      var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/utils/date_serialization */37043);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../core/utils/size */84167);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./m_constants */19107);
      /**
       * DevExtreme (esm/__internal/scheduler/m_utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _utils = {
        dataAccessors: {
          getAppointmentSettings: function getAppointmentSettings(element) {
            return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_2__["default"])(element).data(_m_constants__WEBPACK_IMPORTED_MODULE_7__.APPOINTMENT_SETTINGS_KEY);
          },
          getAppointmentInfo: function getAppointmentInfo(element) {
            var settings = _utils.dataAccessors.getAppointmentSettings(element);
            return null === settings || void 0 === settings ? void 0 : settings.info;
          },
          create: function create(fields, currentDataAccessors, forceIsoDateParsing, dateSerializationFormat) {
            var dataAccessors = currentDataAccessors ? (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, currentDataAccessors) : {
              getter: {},
              setter: {},
              expr: {}
            };
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__.each)(fields, function (name, expr) {
              if (expr) {
                var getter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(expr);
                var setter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileSetter)(expr);
                var dateGetter;
                var dateSetter;
                var serializationFormat;
                if (field = name, "startDate" === field || "endDate" === field) {
                  dateGetter = function dateGetter(object) {
                    var value = getter(object);
                    if (forceIsoDateParsing) {
                      value = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_4__["default"].deserializeDate(value);
                    }
                    return value;
                  };
                  dateSetter = function dateSetter(object, value) {
                    if (dateSerializationFormat) {
                      serializationFormat = dateSerializationFormat;
                    } else if (forceIsoDateParsing && !serializationFormat) {
                      var oldValue = getter(object);
                      serializationFormat = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_4__["default"].getDateSerializationFormat(oldValue);
                    }
                    var newValue = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_4__["default"].serializeDate(value, serializationFormat);
                    setter(object, newValue);
                  };
                }
                dataAccessors.getter[name] = dateGetter || getter;
                dataAccessors.setter[name] = dateSetter || setter;
                dataAccessors.expr["".concat(name, "Expr")] = expr;
              } else {
                delete dataAccessors.getter[name];
                delete dataAccessors.setter[name];
                delete dataAccessors.expr["".concat(name, "Expr")];
              }
              var field;
            });
            return dataAccessors;
          }
        },
        DOM: {
          getHeaderHeight: function getHeaderHeight(header) {
            return header ? header._$element && parseInt((0, _core_utils_size__WEBPACK_IMPORTED_MODULE_6__.getOuterHeight)(header._$element), 10) : 0;
          }
        },
        renovation: {
          renderComponent: function renderComponent(widget, parentElement, componentClass, componentName, viewModel) {
            var component = widget[componentName];
            if (!component) {
              var container = (0, _core_element__WEBPACK_IMPORTED_MODULE_1__.getPublicElement)(parentElement);
              component = widget._createComponent(container, componentClass, viewModel);
              widget[componentName] = component;
            } else {
              var $element = component.$element();
              var elementStyle = $element.get(0).style;
              var height = elementStyle.height;
              var width = elementStyle.width;
              component.option(viewModel);
              if (height) {
                (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_6__.setHeight)($element, height);
              }
              if (width) {
                (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_6__.setWidth)($element, width);
              }
            }
          }
        }
      };

      /***/
    }),
    /***/98281: (
    /*!*******************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/m_utils_time_zone.js ***!
      \*******************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/utils/date */35341);
      /* harmony import */
      var _m_date_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./m_date_adapter */86665);
      /* harmony import */
      var _timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./timezones/m_utils_timezones_data */78514);
      /**
       * DevExtreme (esm/__internal/scheduler/m_utils_time_zone.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds;
      var MINUTES_IN_HOUR = 60;
      var MS_IN_MINUTE = 6e4;
      var createUTCDateWithLocalOffset = function createUTCDateWithLocalOffset(date) {
        if (!date) {
          return null;
        }
        return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));
      };
      var createDateFromUTCWithLocalOffset = function createDateFromUTCWithLocalOffset(date) {
        var result = (0, _m_date_adapter__WEBPACK_IMPORTED_MODULE_1__["default"])(date);
        var timezoneOffsetBeforeInMin = result.getTimezoneOffset();
        result.addTime(result.getTimezoneOffset("minute"));
        result.subtractMinutes(timezoneOffsetBeforeInMin - result.getTimezoneOffset());
        return result.source;
      };
      var getTimeZones = function getTimeZones() {
        var date = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Date();
        var dateInUTC = createUTCDate(date);
        return _timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_2__["default"].getDisplayedTimeZones(dateInUTC.getTime());
      };
      var createUTCDate = function createUTCDate(date) {
        return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes()));
      };
      var getTimezoneOffsetChangeInMinutes = function getTimezoneOffsetChangeInMinutes(startDate, endDate, updatedStartDate, updatedEndDate) {
        return getDaylightOffset(updatedStartDate, updatedEndDate) - getDaylightOffset(startDate, endDate);
      };
      var getTimezoneOffsetChangeInMs = function getTimezoneOffsetChangeInMs(startDate, endDate, updatedStartDate, updatedEndDate) {
        return getTimezoneOffsetChangeInMinutes(startDate, endDate, updatedStartDate, updatedEndDate) * toMs("minute");
      };
      var getDaylightOffset = function getDaylightOffset(startDate, endDate) {
        return new Date(startDate).getTimezoneOffset() - new Date(endDate).getTimezoneOffset();
      };
      var getDaylightOffsetInMs = function getDaylightOffsetInMs(startDate, endDate) {
        return getDaylightOffset(startDate, endDate) * toMs("minute");
      };
      var calculateTimezoneByValue = function calculateTimezoneByValue(timezone) {
        var date = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date();
        if ("string" === typeof timezone) {
          var dateUtc = createUTCDate(date);
          return _timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_2__["default"].getTimeZoneOffsetById(timezone, dateUtc.getTime());
        }
        return timezone;
      };
      var _getDaylightOffsetByTimezone = function _getDaylightOffsetByTimezone(startDate, endDate, timeZone) {
        return calculateTimezoneByValue(timeZone, startDate) - calculateTimezoneByValue(timeZone, endDate);
      };
      var getCorrectedDateByDaylightOffsets = function getCorrectedDateByDaylightOffsets(convertedOriginalStartDate, convertedDate, date, timeZone, startDateTimezone) {
        var daylightOffsetByCommonTimezone = _getDaylightOffsetByTimezone(convertedOriginalStartDate, convertedDate, timeZone);
        var daylightOffsetByAppointmentTimezone = _getDaylightOffsetByTimezone(convertedOriginalStartDate, convertedDate, startDateTimezone);
        var diff = daylightOffsetByCommonTimezone - daylightOffsetByAppointmentTimezone;
        return new Date(date.getTime() - diff * toMs("hour"));
      };
      var correctRecurrenceExceptionByTimezone = function correctRecurrenceExceptionByTimezone(exception, exceptionByStartDate, timeZone, startDateTimeZone) {
        var isBackConversion = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : false;
        var timezoneOffset = (exception.getTimezoneOffset() - exceptionByStartDate.getTimezoneOffset()) / MINUTES_IN_HOUR;
        if (startDateTimeZone) {
          timezoneOffset = _getDaylightOffsetByTimezone(exceptionByStartDate, exception, startDateTimeZone);
        } else if (timeZone) {
          timezoneOffset = _getDaylightOffsetByTimezone(exceptionByStartDate, exception, timeZone);
        }
        return new Date(exception.getTime() + (isBackConversion ? -1 : 1) * timezoneOffset * toMs("hour"));
      };
      var isTimezoneChangeInDate = function isTimezoneChangeInDate(date) {
        var startDayDate = new Date(new Date(date).setHours(0, 0, 0, 0));
        var endDayDate = new Date(new Date(date).setHours(23, 59, 59, 0));
        return startDayDate.getTimezoneOffset() - endDayDate.getTimezoneOffset() !== 0;
      };
      var getDateWithoutTimezoneChange = function getDateWithoutTimezoneChange(date) {
        var clonedDate = new Date(date);
        if (isTimezoneChangeInDate(clonedDate)) {
          var result = new Date(clonedDate);
          return new Date(result.setDate(result.getDate() + 1));
        }
        return clonedDate;
      };
      var isSameAppointmentDates = function isSameAppointmentDates(startDate, endDate) {
        endDate = new Date(endDate.getTime() - 1);
        return _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].sameDate(startDate, endDate);
      };
      var getClientTimezoneOffset = function getClientTimezoneOffset() {
        var date = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Date();
        return date.getTimezoneOffset() * MS_IN_MINUTE;
      };
      var getDiffBetweenClientTimezoneOffsets = function getDiffBetweenClientTimezoneOffsets() {
        var firstDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Date();
        var secondDate = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date();
        return getClientTimezoneOffset(firstDate) - getClientTimezoneOffset(secondDate);
      };
      var isEqualLocalTimeZone = function isEqualLocalTimeZone(timeZoneName) {
        var date = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date();
        if (Intl) {
          var localTimeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone;
          if (localTimeZoneName === timeZoneName) {
            return true;
          }
        }
        return isEqualLocalTimeZoneByDeclaration(timeZoneName, date);
      };
      var hasDSTInLocalTimeZone = function hasDSTInLocalTimeZone() {
        var _getExtremeDates = getExtremeDates(),
          _getExtremeDates2 = _slicedToArray(_getExtremeDates, 2),
          startDate = _getExtremeDates2[0],
          endDate = _getExtremeDates2[1];
        return startDate.getTimezoneOffset() !== endDate.getTimezoneOffset();
      };
      var isEqualLocalTimeZoneByDeclaration = function isEqualLocalTimeZoneByDeclaration(timeZoneName, date) {
        var year = date.getFullYear();
        var getOffset = function getOffset(date) {
          return -date.getTimezoneOffset() / 60;
        };
        var getDateAndMoveHourBack = function getDateAndMoveHourBack(dateStamp) {
          return new Date(dateStamp - 36e5);
        };
        var configTuple = _timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_2__["default"].getTimeZoneDeclarationTuple(timeZoneName, year);
        var _configTuple = _slicedToArray(configTuple, 2),
          summerTime = _configTuple[0],
          winterTime = _configTuple[1];
        var noDSTInTargetTimeZone = configTuple.length < 2;
        if (noDSTInTargetTimeZone) {
          var targetTimeZoneOffset = _timezones_m_utils_timezones_data__WEBPACK_IMPORTED_MODULE_2__["default"].getTimeZoneOffsetById(timeZoneName, date);
          var localTimeZoneOffset = getOffset(date);
          if (targetTimeZoneOffset !== localTimeZoneOffset) {
            return false;
          }
          return !hasDSTInLocalTimeZone();
        }
        var localSummerOffset = getOffset(new Date(summerTime.date));
        var localWinterOffset = getOffset(new Date(winterTime.date));
        if (localSummerOffset !== summerTime.offset) {
          return false;
        }
        if (localSummerOffset === getOffset(getDateAndMoveHourBack(summerTime.date))) {
          return false;
        }
        if (localWinterOffset !== winterTime.offset) {
          return false;
        }
        if (localWinterOffset === getOffset(getDateAndMoveHourBack(winterTime.date))) {
          return false;
        }
        return true;
      };
      var getExtremeDates = function getExtremeDates() {
        var nowDate = new Date(Date.now());
        var startDate = new Date();
        var endDate = new Date();
        startDate.setFullYear(nowDate.getFullYear(), 0, 1);
        endDate.setFullYear(nowDate.getFullYear(), 6, 1);
        return [startDate, endDate];
      };
      var setOffsetsToDate = function setOffsetsToDate(targetDate, offsetsArray) {
        var newDateMs = offsetsArray.reduce(function (result, offset) {
          return result + offset;
        }, targetDate.getTime());
        return new Date(newDateMs);
      };
      var utils = {
        getDaylightOffset: getDaylightOffset,
        getDaylightOffsetInMs: getDaylightOffsetInMs,
        getTimezoneOffsetChangeInMinutes: getTimezoneOffsetChangeInMinutes,
        getTimezoneOffsetChangeInMs: getTimezoneOffsetChangeInMs,
        calculateTimezoneByValue: calculateTimezoneByValue,
        getCorrectedDateByDaylightOffsets: getCorrectedDateByDaylightOffsets,
        isSameAppointmentDates: isSameAppointmentDates,
        correctRecurrenceExceptionByTimezone: correctRecurrenceExceptionByTimezone,
        getClientTimezoneOffset: getClientTimezoneOffset,
        getDiffBetweenClientTimezoneOffsets: getDiffBetweenClientTimezoneOffsets,
        createUTCDateWithLocalOffset: createUTCDateWithLocalOffset,
        createDateFromUTCWithLocalOffset: createDateFromUTCWithLocalOffset,
        createUTCDate: createUTCDate,
        isTimezoneChangeInDate: isTimezoneChangeInDate,
        getDateWithoutTimezoneChange: getDateWithoutTimezoneChange,
        hasDSTInLocalTimeZone: hasDSTInLocalTimeZone,
        isEqualLocalTimeZone: isEqualLocalTimeZone,
        isEqualLocalTimeZoneByDeclaration: isEqualLocalTimeZoneByDeclaration,
        getTimeZones: getTimeZones,
        setOffsetsToDate: setOffsetsToDate
      };
      /* harmony default export */
      __webpack_exports__["default"] = utils;

      /***/
    }),
    /***/220: (
    /*!***************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/resources/m_agenda_resource_processor.js ***!
      \***************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"AgendaResourceProcessor": function AgendaResourceProcessor() {
          return /* binding */_AgendaResourceProcessor;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/array */36959);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/deferred */97233);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./m_utils */48025);
      /**
       * DevExtreme (esm/__internal/scheduler/resources/m_agenda_resource_processor.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var PromiseItem = /*#__PURE__*/_createClass(function PromiseItem(rawAppointment, promise) {
        _classCallCheck(this, PromiseItem);
        this.rawAppointment = rawAppointment;
        this.promise = promise;
      });
      var _AgendaResourceProcessor = /*#__PURE__*/function () {
        function _AgendaResourceProcessor() {
          _classCallCheck(this, _AgendaResourceProcessor);
          var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
          this._resourceDeclarations = resourceDeclarations;
          this.isLoaded = false;
          this.isLoading = false;
          this.resourceMap = new Map();
          this.appointmentPromiseQueue = [];
        }
        _createClass(_AgendaResourceProcessor, [{
          key: "resourceDeclarations",
          get: function get() {
            return this._resourceDeclarations;
          },
          set: function set(value) {
            this._resourceDeclarations = value;
            this.isLoaded = false;
            this.isLoading = false;
            this.resourceMap.clear();
            this.appointmentPromiseQueue = [];
          }
        }, {
          key: "_pushAllResources",
          value: function _pushAllResources() {
            var _this116 = this;
            this.appointmentPromiseQueue.forEach(function (_ref) {
              var promise = _ref.promise,
                rawAppointment = _ref.rawAppointment;
              var result = [];
              _this116.resourceMap.forEach(function (resource, fieldName) {
                var item = {
                  label: resource.label,
                  values: []
                };
                if (fieldName in rawAppointment) {
                  (0, _core_utils_array__WEBPACK_IMPORTED_MODULE_0__.wrapToArray)(rawAppointment[fieldName]).forEach(function (value) {
                    return item.values.push(resource.map.get(value));
                  });
                }
                if (item.values.length) {
                  result.push(item);
                }
              });
              promise.resolve(result);
            });
            this.appointmentPromiseQueue = [];
          }
        }, {
          key: "_onPullResource",
          value: function _onPullResource(fieldName, valueName, displayName, label, items) {
            var map = new Map();
            items.forEach(function (item) {
              return map.set(item[valueName], item[displayName]);
            });
            this.resourceMap.set(fieldName, {
              label: label,
              map: map
            });
          }
        }, {
          key: "_hasResourceDeclarations",
          value: function _hasResourceDeclarations(resources) {
            if (0 === resources.length) {
              this.appointmentPromiseQueue.forEach(function (_ref2) {
                var promise = _ref2.promise;
                return promise.resolve([]);
              });
              this.appointmentPromiseQueue = [];
              return false;
            }
            return true;
          }
        }, {
          key: "_tryPullResources",
          value: function _tryPullResources(resources, resultAsync) {
            var _this117 = this;
            if (!this.isLoading) {
              this.isLoading = true;
              var promises = [];
              resources.forEach(function (resource) {
                var promise = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__.Deferred().done(function (items) {
                  return _this117._onPullResource((0, _m_utils__WEBPACK_IMPORTED_MODULE_2__.getFieldExpr)(resource), (0, _m_utils__WEBPACK_IMPORTED_MODULE_2__.getValueExpr)(resource), (0, _m_utils__WEBPACK_IMPORTED_MODULE_2__.getDisplayExpr)(resource), resource.label, items);
                });
                promises.push(promise);
                var dataSource = (0, _m_utils__WEBPACK_IMPORTED_MODULE_2__.getWrappedDataSource)(resource.dataSource);
                if (dataSource.isLoaded()) {
                  promise.resolve(dataSource.items());
                } else {
                  dataSource.load().done(function (list) {
                    return promise.resolve(list);
                  }).fail(function () {
                    return promise.reject();
                  });
                }
              });
              _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__.when.apply(null, promises).done(function () {
                _this117.isLoaded = true;
                _this117.isLoading = false;
                _this117._pushAllResources();
              }).fail(function () {
                return resultAsync.reject();
              });
            }
          }
        }, {
          key: "initializeState",
          value: function initializeState() {
            var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
            this.resourceDeclarations = resourceDeclarations;
          }
        }, {
          key: "createListAsync",
          value: function createListAsync(rawAppointment) {
            var resultAsync = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_1__.Deferred();
            this.appointmentPromiseQueue.push(new PromiseItem(rawAppointment, resultAsync));
            if (this._hasResourceDeclarations(this.resourceDeclarations)) {
              if (this.isLoaded) {
                this._pushAllResources();
              } else {
                this._tryPullResources(this.resourceDeclarations, resultAsync);
              }
            }
            return resultAsync.promise();
          }
        }]);
        return _AgendaResourceProcessor;
      }();
      /***/
    }),
    /***/48025: (
    /*!*******************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/resources/m_utils.js ***!
      \*******************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getValueExpr": function getValueExpr() {
          return /* binding */_getValueExpr;
        },
        /* harmony export */"getDisplayExpr": function getDisplayExpr() {
          return /* binding */_getDisplayExpr;
        },
        /* harmony export */"getFieldExpr": function getFieldExpr() {
          return /* binding */_getFieldExpr;
        },
        /* harmony export */"getWrappedDataSource": function getWrappedDataSource() {
          return /* binding */_getWrappedDataSource;
        },
        /* harmony export */"createResourcesTree": function createResourcesTree() {
          return /* binding */_createResourcesTree;
        },
        /* harmony export */"getPathToLeaf": function getPathToLeaf() {
          return /* binding */_getPathToLeaf;
        },
        /* harmony export */"getCellGroups": function getCellGroups() {
          return /* binding */_getCellGroups;
        },
        /* harmony export */"getGroupCount": function getGroupCount() {
          return /* binding */_getGroupCount;
        },
        /* harmony export */"getGroupsObjectFromGroupsArray": function getGroupsObjectFromGroupsArray() {
          return /* binding */_getGroupsObjectFromGroupsArray;
        },
        /* harmony export */"getAllGroups": function getAllGroups() {
          return /* binding */_getAllGroups;
        },
        /* harmony export */"getResourceByField": function getResourceByField() {
          return /* binding */_getResourceByField;
        },
        /* harmony export */"createResourceEditorModel": function createResourceEditorModel() {
          return /* binding */_createResourceEditorModel;
        },
        /* harmony export */"isResourceMultiple": function isResourceMultiple() {
          return /* binding */_isResourceMultiple;
        },
        /* harmony export */"filterResources": function filterResources() {
          return /* binding */_filterResources;
        },
        /* harmony export */"getPaintedResources": function getPaintedResources() {
          return /* binding */_getPaintedResources;
        },
        /* harmony export */"getOrLoadResourceItem": function getOrLoadResourceItem() {
          return /* binding */_getOrLoadResourceItem;
        },
        /* harmony export */"getDataAccessors": function getDataAccessors() {
          return /* binding */_getDataAccessors;
        },
        /* harmony export */"groupAppointmentsByResources": function groupAppointmentsByResources() {
          return /* binding */_groupAppointmentsByResources;
        },
        /* harmony export */"groupAppointmentsByResourcesCore": function groupAppointmentsByResourcesCore() {
          return /* binding */_groupAppointmentsByResourcesCore;
        },
        /* harmony export */"getResourceTreeLeaves": function getResourceTreeLeaves() {
          return /* binding */_getResourceTreeLeaves;
        },
        /* harmony export */"createReducedResourcesTree": function createReducedResourcesTree() {
          return /* binding */_createReducedResourcesTree;
        },
        /* harmony export */"reduceResourcesTree": function reduceResourcesTree() {
          return /* binding */_reduceResourcesTree;
        },
        /* harmony export */"getResourcesDataByGroups": function getResourcesDataByGroups() {
          return /* binding */_getResourcesDataByGroups;
        },
        /* harmony export */"setResourceToAppointment": function setResourceToAppointment() {
          return /* binding */_setResourceToAppointment;
        },
        /* harmony export */"getResourceColor": function getResourceColor() {
          return /* binding */_getResourceColor;
        },
        /* harmony export */"getAppointmentColor": function getAppointmentColor() {
          return /* binding */_getAppointmentColor2;
        },
        /* harmony export */"createExpressions": function createExpressions() {
          return /* binding */_createExpressions;
        },
        /* harmony export */"loadResources": function loadResources() {
          return /* binding */_loadResources;
        },
        /* harmony export */"getNormalizedResources": function getNormalizedResources() {
          return /* binding */_getNormalizedResources;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/array */36959);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/common */37552);
      /* harmony import */
      var _core_utils_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/utils/data */25670);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_object__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../core/utils/object */163);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /* harmony import */
      var _data_data_source_data_source__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../../data/data_source/data_source */56053);
      /* harmony import */
      var _data_data_source_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../../data/data_source/utils */77382);
      /* harmony import */
      var _renovation_ui_scheduler_resources_hasResourceValue__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/resources/hasResourceValue */78993);
      /**
       * DevExtreme (esm/__internal/scheduler/resources/m_utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _getValueExpr = function _getValueExpr(resource) {
        return resource.valueExpr || "id";
      };
      var _getDisplayExpr = function _getDisplayExpr(resource) {
        return resource.displayExpr || "text";
      };
      var _getFieldExpr = function _getFieldExpr(resource) {
        return resource.fieldExpr || resource.field;
      };
      var _getWrappedDataSource = function _getWrappedDataSource(dataSource) {
        if (dataSource instanceof _data_data_source_data_source__WEBPACK_IMPORTED_MODULE_9__.DataSource) {
          return dataSource;
        }
        var result = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, (0, _data_data_source_utils__WEBPACK_IMPORTED_MODULE_10__.normalizeDataSourceOptions)(dataSource)), {
          pageSize: 0
        });
        if (!Array.isArray(dataSource)) {
          result.filter = dataSource.filter;
        }
        return new _data_data_source_data_source__WEBPACK_IMPORTED_MODULE_9__.DataSource(result);
      };
      var _createResourcesTree = function _createResourcesTree(groups) {
        var leafIndex = 0;
        var make = function make(group, groupIndex, result, parent) {
          var _a;
          result = result || [];
          for (var itemIndex = 0; itemIndex < group.items.length; itemIndex++) {
            var currentGroupItem = group.items[itemIndex];
            var resultItem = {
              name: group.name,
              value: currentGroupItem.id,
              title: currentGroupItem.text,
              data: null === (_a = group.data) || void 0 === _a ? void 0 : _a[itemIndex],
              children: [],
              parent: parent || null
            };
            var nextGroupIndex = groupIndex + 1;
            if (groups[nextGroupIndex]) {
              make(groups[nextGroupIndex], nextGroupIndex, resultItem.children, resultItem);
            }
            if (!resultItem.children.length) {
              resultItem.leafIndex = leafIndex;
              leafIndex++;
            }
            result.push(resultItem);
          }
          return result;
        };
        return make(groups[0], 0);
      };
      var _getPathToLeaf = function _getPathToLeaf(leafIndex, groups) {
        var tree = _createResourcesTree(groups);
        var findLeafByIndex = function findLeafByIndex(data, index) {
          for (var i = 0; i < data.length; i++) {
            if (data[i].leafIndex === index) {
              return data[i];
            }
            var _leaf = findLeafByIndex(data[i].children, index);
            if (_leaf) {
              return _leaf;
            }
          }
        };
        var makeBranch = function makeBranch(leaf, result) {
          result = result || [];
          result.push(leaf.value);
          if (leaf.parent) {
            makeBranch(leaf.parent, result);
          }
          return result;
        };
        var leaf = findLeafByIndex(tree, leafIndex);
        return makeBranch(leaf).reverse();
      };
      var _getCellGroups = function _getCellGroups(groupIndex, groups) {
        var result = [];
        if (_getGroupCount(groups)) {
          if (groupIndex < 0) {
            return;
          }
          var path = _getPathToLeaf(groupIndex, groups);
          for (var i = 0; i < groups.length; i++) {
            result.push({
              name: groups[i].name,
              id: path[i]
            });
          }
        }
        return result;
      };
      var _getGroupCount = function _getGroupCount(groups) {
        var result = 0;
        for (var i = 0, len = groups.length; i < len; i++) {
          if (!i) {
            result = groups[i].items.length;
          } else {
            result *= groups[i].items.length;
          }
        }
        return result;
      };
      var _getGroupsObjectFromGroupsArray = function _getGroupsObjectFromGroupsArray(groupsArray) {
        return groupsArray.reduce(function (currentGroups, _ref) {
          var name = _ref.name,
            id = _ref.id;
          return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, currentGroups), _defineProperty({}, name, id));
        }, {});
      };
      var _getAllGroups = function _getAllGroups(groups) {
        var groupCount = _getGroupCount(groups);
        return _toConsumableArray(new Array(groupCount)).map(function (_, groupIndex) {
          var groupsArray = _getCellGroups(groupIndex, groups);
          return _getGroupsObjectFromGroupsArray(groupsArray);
        });
      };
      var _getResourceByField = function _getResourceByField(fieldName, loadedResources) {
        for (var i = 0; i < loadedResources.length; i++) {
          var resource = loadedResources[i];
          if (resource.name === fieldName) {
            return resource.data;
          }
        }
        return [];
      };
      var _createResourceEditorModel = function _createResourceEditorModel(resources, loadedResources) {
        return resources.map(function (resource) {
          var dataField = _getFieldExpr(resource);
          var dataSource = _getResourceByField(dataField, loadedResources);
          return {
            editorOptions: {
              dataSource: dataSource.length ? dataSource : _getWrappedDataSource(resource.dataSource),
              displayExpr: _getDisplayExpr(resource),
              valueExpr: _getValueExpr(resource)
            },
            dataField: dataField,
            editorType: resource.allowMultiple ? "dxTagBox" : "dxSelectBox",
            label: {
              text: resource.label || dataField
            }
          };
        });
      };
      var _isResourceMultiple = function _isResourceMultiple(resources, resourceField) {
        var resource = resources.find(function (resource) {
          var field = _getFieldExpr(resource);
          return field === resourceField;
        });
        return !!(null === resource || void 0 === resource ? void 0 : resource.allowMultiple);
      };
      var _filterResources = function _filterResources(resources, fields) {
        return resources.filter(function (resource) {
          var field = _getFieldExpr(resource);
          return fields.indexOf(field) > -1;
        });
      };
      var _getPaintedResources = function _getPaintedResources(resources, groups) {
        var newGroups = groups || [];
        var result = resources.find(function (resource) {
          return resource.useColorAsDefault;
        });
        if (result) {
          return result;
        }
        var newResources = newGroups.length ? _filterResources(resources, newGroups) : resources;
        return newResources[newResources.length - 1];
      };
      var _getOrLoadResourceItem = function _getOrLoadResourceItem(resources, resourceLoaderMap, field, value) {
        var result = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred();
        resources.filter(function (resource) {
          return _getFieldExpr(resource) === field && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isDefined)(resource.dataSource);
        }).forEach(function (resource) {
          var wrappedDataSource = _getWrappedDataSource(resource.dataSource);
          var valueExpr = _getValueExpr(resource);
          if (!resourceLoaderMap.has(field)) {
            resourceLoaderMap.set(field, wrappedDataSource.load());
          }
          resourceLoaderMap.get(field).done(function (data) {
            var getter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(valueExpr);
            var filteredData = data.filter(function (resource) {
              return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.equalByValue)(getter(resource), value);
            });
            result.resolve(filteredData[0]);
          }).fail(function () {
            resourceLoaderMap["delete"](field);
            result.reject();
          });
        });
        return result.promise();
      };
      var _getDataAccessors = function _getDataAccessors(dataAccessors, fieldName, type) {
        var actions = dataAccessors[type];
        return actions[fieldName];
      };
      var _groupAppointmentsByResources = function _groupAppointmentsByResources(config, appointments) {
        var groups = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
        var result = {
          0: appointments
        };
        if (groups.length && config.loadedResources.length) {
          result = _groupAppointmentsByResourcesCore(config, appointments, config.loadedResources);
        }
        var totalResourceCount = 0;
        config.loadedResources.forEach(function (resource, index) {
          if (!index) {
            totalResourceCount = resource.items.length;
          } else {
            totalResourceCount *= resource.items.length;
          }
        });
        for (var index = 0; index < totalResourceCount; index++) {
          var key = index.toString();
          if (result[key]) {
            continue;
          }
          result[key] = [];
        }
        return result;
      };
      var _groupAppointmentsByResourcesCore = function _groupAppointmentsByResourcesCore(config, appointments, resources) {
        var tree = _createResourcesTree(resources);
        var result = {};
        appointments.forEach(function (appointment) {
          var treeLeaves = _getResourceTreeLeaves(function (field, action) {
            return _getDataAccessors(config.dataAccessors, field, action);
          }, tree, appointment);
          for (var i = 0; i < treeLeaves.length; i++) {
            if (!result[treeLeaves[i]]) {
              result[treeLeaves[i]] = [];
            }
            result[treeLeaves[i]].push((0, _core_utils_object__WEBPACK_IMPORTED_MODULE_7__.deepExtendArraySafe)({}, appointment, true));
          }
        });
        return result;
      };
      var _getResourceTreeLeaves = function _getResourceTreeLeaves(getDataAccessors, tree, rawAppointment, result) {
        result = result || [];
        for (var i = 0; i < tree.length; i++) {
          if (!hasGroupItem(getDataAccessors, rawAppointment, tree[i].name, tree[i].value)) {
            continue;
          }
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isDefined)(tree[i].leafIndex)) {
            result.push(tree[i].leafIndex);
          }
          if (tree[i].children) {
            _getResourceTreeLeaves(getDataAccessors, tree[i].children, rawAppointment, result);
          }
        }
        return result;
      };
      var hasGroupItem = function hasGroupItem(getDataAccessors, rawAppointment, groupName, itemValue) {
        var resourceValue = getDataAccessors(groupName, "getter")(rawAppointment);
        return (0, _renovation_ui_scheduler_resources_hasResourceValue__WEBPACK_IMPORTED_MODULE_11__.hasResourceValue)((0, _core_utils_array__WEBPACK_IMPORTED_MODULE_1__.wrapToArray)(resourceValue), itemValue);
      };
      var _createReducedResourcesTree = function _createReducedResourcesTree(loadedResources, getDataAccessors, appointments) {
        var tree = _createResourcesTree(loadedResources);
        return _reduceResourcesTree(getDataAccessors, tree, appointments);
      };
      var _reduceResourcesTree = function _reduceResourcesTree(getDataAccessors, tree, existingAppointments, _result) {
        _result = _result ? _result.children : [];
        tree.forEach(function (node, index) {
          var ok = false;
          var resourceName = node.name;
          var resourceValue = node.value;
          var resourceTitle = node.title;
          var resourceData = node.data;
          var resourceGetter = getDataAccessors(resourceName, "getter");
          existingAppointments.forEach(function (appointment) {
            if (!ok) {
              var resourceFromAppointment = resourceGetter(appointment);
              if (Array.isArray(resourceFromAppointment)) {
                if (resourceFromAppointment.includes(resourceValue)) {
                  _result.push({
                    name: resourceName,
                    value: resourceValue,
                    title: resourceTitle,
                    data: resourceData,
                    children: []
                  });
                  ok = true;
                }
              } else if (resourceFromAppointment === resourceValue) {
                _result.push({
                  name: resourceName,
                  value: resourceValue,
                  title: resourceTitle,
                  data: resourceData,
                  children: []
                });
                ok = true;
              }
            }
          });
          if (ok && node.children && node.children.length) {
            _reduceResourcesTree(getDataAccessors, node.children, existingAppointments, _result[index]);
          }
        });
        return _result;
      };
      var _getResourcesDataByGroups = function _getResourcesDataByGroups(loadedResources, resources, groups) {
        if (!groups || !groups.length) {
          return loadedResources;
        }
        var fieldNames = {};
        var currentResourcesData = [];
        groups.forEach(function (group) {
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(group, function (name, value) {
            fieldNames[name] = value;
          });
        });
        var resourceData = loadedResources.filter(function (_ref2) {
          var name = _ref2.name;
          return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isDefined)(fieldNames[name]);
        });
        resourceData.forEach(function (data) {
          return currentResourcesData.push((0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)({}, data));
        });
        currentResourcesData.forEach(function (currentResource) {
          var items = currentResource.items,
            data = currentResource.data,
            resourceName = currentResource.name;
          var resource = _filterResources(resources, [resourceName])[0] || {};
          var valueExpr = _getValueExpr(resource);
          var filteredItems = [];
          var filteredData = [];
          groups.filter(function (group) {
            return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isDefined)(group[resourceName]);
          }).forEach(function (group) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(group, function (name, value) {
              if (!filteredItems.filter(function (item) {
                return item.id === value && item[valueExpr] === name;
              }).length) {
                var currentItems = items.filter(function (item) {
                  return item.id === value;
                });
                var currentData = data.filter(function (item) {
                  return item[valueExpr] === value;
                });
                filteredItems.push.apply(filteredItems, _toConsumableArray(currentItems));
                filteredData.push.apply(filteredData, _toConsumableArray(currentData));
              }
            });
          });
          currentResource.items = filteredItems;
          currentResource.data = filteredData;
        });
        return currentResourcesData;
      };
      var _setResourceToAppointment = function _setResourceToAppointment(resources, dataAccessors, appointment, groups) {
        var resourcesSetter = dataAccessors.setter;
        for (var name in groups) {
          var resourceData = groups[name];
          var value = _isResourceMultiple(resources, name) ? (0, _core_utils_array__WEBPACK_IMPORTED_MODULE_1__.wrapToArray)(resourceData) : resourceData;
          resourcesSetter[name](appointment, value);
        }
      };
      var _getResourceColor = function _getResourceColor(resources, resourceLoaderMap, field, value) {
        var result = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred();
        var resource = _filterResources(resources, [field])[0] || {};
        var colorExpr = resource.colorExpr || "color";
        var colorGetter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(colorExpr);
        _getOrLoadResourceItem(resources, resourceLoaderMap, field, value).done(function (resource) {
          return result.resolve(colorGetter(resource));
        }).fail(function () {
          return result.reject();
        });
        return result.promise();
      };
      var _getAppointmentColor2 = function _getAppointmentColor2(resourceConfig, appointmentConfig) {
        var resources = resourceConfig.resources,
          dataAccessors = resourceConfig.dataAccessors,
          loadedResources = resourceConfig.loadedResources,
          resourceLoaderMap = resourceConfig.resourceLoaderMap;
        var groupIndex = appointmentConfig.groupIndex,
          groups = appointmentConfig.groups,
          itemData = appointmentConfig.itemData;
        var paintedResources = _getPaintedResources(resources || [], groups);
        if (paintedResources) {
          var field = _getFieldExpr(paintedResources);
          var cellGroups = _getCellGroups(groupIndex, loadedResources);
          var resourcesDataAccessors = _getDataAccessors(dataAccessors, field, "getter");
          var resourceValues = (0, _core_utils_array__WEBPACK_IMPORTED_MODULE_1__.wrapToArray)(resourcesDataAccessors(itemData));
          var groupId = resourceValues[0];
          for (var i = 0; i < cellGroups.length; i++) {
            if (cellGroups[i].name === field) {
              groupId = cellGroups[i].id;
              break;
            }
          }
          return _getResourceColor(resources, resourceLoaderMap, field, groupId);
        }
        return new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred().resolve().promise();
      };
      var _createExpressions = function _createExpressions() {
        var resources = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
        var result = {
          getter: {},
          setter: {}
        };
        resources.forEach(function (resource) {
          var field = _getFieldExpr(resource);
          result.getter[field] = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(field);
          result.setter[field] = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileSetter)(field);
        });
        return result;
      };
      var getTransformedResourceData = function getTransformedResourceData(resource, data) {
        var valueGetter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(_getValueExpr(resource));
        var displayGetter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_3__.compileGetter)(_getDisplayExpr(resource));
        return data.map(function (item) {
          var result = {
            id: valueGetter(item),
            text: displayGetter(item)
          };
          if (item.color) {
            result.color = item.color;
          }
          return result;
        });
      };
      var _loadResources = function _loadResources(groups, resources, resourceLoaderMap) {
        var result = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred();
        var deferreds = [];
        var newGroups = groups || [];
        var newResources = resources || [];
        var loadedResources = [];
        _filterResources(newResources, newGroups).forEach(function (resource) {
          var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.Deferred();
          var name = _getFieldExpr(resource);
          deferreds.push(deferred);
          var dataSourcePromise = _getWrappedDataSource(resource.dataSource).load();
          resourceLoaderMap.set(name, dataSourcePromise);
          dataSourcePromise.done(function (data) {
            var items = getTransformedResourceData(resource, data);
            deferred.resolve({
              name: name,
              items: items,
              data: data
            });
          }).fail(function () {
            return deferred.reject();
          });
        });
        if (!deferreds.length) {
          return result.resolve(loadedResources);
        }
        _core_utils_deferred__WEBPACK_IMPORTED_MODULE_4__.when.apply(null, deferreds).done(function () {
          for (var _len = arguments.length, resources = new Array(_len), _key = 0; _key < _len; _key++) {
            resources[_key] = arguments[_key];
          }
          var hasEmpty = resources.some(function (r) {
            return 0 === r.items.length;
          });
          loadedResources = hasEmpty ? [] : resources;
          result.resolve(loadedResources);
        }).fail(function () {
          return result.reject();
        });
        return result.promise();
      };
      var _getNormalizedResources = function _getNormalizedResources(rawAppointment, dataAccessors, resources) {
        var result = {};
        (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(dataAccessors.resources.getter, function (fieldName) {
          var value = dataAccessors.resources.getter[fieldName](rawAppointment);
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isDefined)(value)) {
            var isMultiple = _isResourceMultiple(resources, fieldName);
            var resourceValue = isMultiple ? (0, _core_utils_array__WEBPACK_IMPORTED_MODULE_1__.wrapToArray)(value) : value;
            result[fieldName] = resourceValue;
          }
        });
        return result;
      };

      /***/
    }),
    /***/20048: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/shaders/m_current_time_shader.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /**
       * DevExtreme (esm/__internal/scheduler/shaders/m_current_time_shader.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DATE_TIME_SHADER_CLASS = "dx-scheduler-date-time-shader";
      var CurrentTimeShader = /*#__PURE__*/function () {
        function CurrentTimeShader(_workSpace) {
          _classCallCheck(this, CurrentTimeShader);
          this._workSpace = _workSpace;
          this._$container = this._workSpace._dateTableScrollable.$content();
        }
        _createClass(CurrentTimeShader, [{
          key: "render",
          value: function render() {
            var _this118 = this;
            this.initShaderElements();
            this.renderShader();
            this._shader.forEach(function (shader) {
              _this118._$container.append(shader);
            });
          }
        }, {
          key: "initShaderElements",
          value: function initShaderElements() {
            this._$shader = this.createShader();
            this._shader = [];
            this._shader.push(this._$shader);
          }
        }, {
          key: "renderShader",
          value: function renderShader() {}
        }, {
          key: "createShader",
          value: function createShader() {
            return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(DATE_TIME_SHADER_CLASS);
          }
        }, {
          key: "clean",
          value: function clean() {
            this._$container && this._$container.find(".".concat(DATE_TIME_SHADER_CLASS)).remove();
          }
        }]);
        return CurrentTimeShader;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = CurrentTimeShader;

      /***/
    }),
    /***/95521: (
    /*!******************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/shaders/m_current_time_shader_horizontal.js ***!
      \******************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/position */9622);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /* harmony import */
      var _m_current_time_shader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./m_current_time_shader */20048);
      /**
       * DevExtreme (esm/__internal/scheduler/shaders/m_current_time_shader_horizontal.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var HorizontalCurrentTimeShader = /*#__PURE__*/function (_m_current_time_shade) {
        _inherits(HorizontalCurrentTimeShader, _m_current_time_shade);
        function HorizontalCurrentTimeShader() {
          _classCallCheck(this, HorizontalCurrentTimeShader);
          return _callSuper(this, HorizontalCurrentTimeShader, arguments);
        }
        _createClass(HorizontalCurrentTimeShader, [{
          key: "renderShader",
          value: function renderShader() {
            var groupCount = this._workSpace._isHorizontalGroupedWorkSpace() ? this._workSpace._getGroupCount() : 1;
            for (var i = 0; i < groupCount; i += 1) {
              var isFirstShader = 0 === i;
              var $shader = isFirstShader ? this._$shader : this.createShader();
              if (this._workSpace.isGroupedByDate()) {
                this._customizeGroupedByDateShader($shader, i);
              } else {
                this._customizeShader($shader, i);
              }
              !isFirstShader && this._shader.push($shader);
            }
          }
        }, {
          key: "_customizeShader",
          value: function _customizeShader($shader, groupIndex) {
            var shaderWidth = this._workSpace.getIndicationWidth();
            this._applyShaderWidth($shader, shaderWidth);
            if (groupIndex >= 1) {
              var workSpace = this._workSpace;
              var indicationWidth = workSpace._getCellCount() * workSpace.getCellWidth();
              $shader.css("left", indicationWidth);
            } else {
              $shader.css("left", 0);
            }
          }
        }, {
          key: "_applyShaderWidth",
          value: function _applyShaderWidth($shader, width) {
            var maxWidth = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._$container.get(0)).width;
            if (width > maxWidth) {
              width = maxWidth;
            }
            if (width > 0) {
              (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setWidth)($shader, width);
            }
          }
        }, {
          key: "_customizeGroupedByDateShader",
          value: function _customizeGroupedByDateShader($shader, groupIndex) {
            var cellCount = this._workSpace.getIndicationCellCount();
            var integerPart = Math.floor(cellCount);
            var fractionPart = cellCount - integerPart;
            var isFirstShaderPart = 0 === groupIndex;
            var workSpace = this._workSpace;
            var shaderWidth = isFirstShaderPart ? workSpace.getIndicationWidth() : fractionPart * workSpace.getCellWidth();
            var shaderLeft;
            this._applyShaderWidth($shader, shaderWidth);
            if (isFirstShaderPart) {
              shaderLeft = workSpace._getCellCount() * workSpace.getCellWidth() * groupIndex;
            } else {
              shaderLeft = workSpace.getCellWidth() * integerPart * workSpace._getGroupCount() + groupIndex * workSpace.getCellWidth();
            }
            $shader.css("left", shaderLeft);
          }
        }]);
        return HorizontalCurrentTimeShader;
      }(_m_current_time_shader__WEBPACK_IMPORTED_MODULE_2__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = HorizontalCurrentTimeShader;

      /***/
    }),
    /***/94289: (
    /*!****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/shaders/m_current_time_shader_vertical.js ***!
      \****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /* harmony import */
      var _m_current_time_shader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./m_current_time_shader */20048);
      /**
       * DevExtreme (esm/__internal/scheduler/shaders/m_current_time_shader_vertical.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DATE_TIME_SHADER_ALL_DAY_CLASS = "dx-scheduler-date-time-shader-all-day";
      var DATE_TIME_SHADER_TOP_CLASS = "dx-scheduler-date-time-shader-top";
      var DATE_TIME_SHADER_BOTTOM_CLASS = "dx-scheduler-date-time-shader-bottom";
      var VerticalCurrentTimeShader = /*#__PURE__*/function (_m_current_time_shade2) {
        _inherits(VerticalCurrentTimeShader, _m_current_time_shade2);
        function VerticalCurrentTimeShader() {
          _classCallCheck(this, VerticalCurrentTimeShader);
          return _callSuper(this, VerticalCurrentTimeShader, arguments);
        }
        _createClass(VerticalCurrentTimeShader, [{
          key: "renderShader",
          value: function renderShader() {
            var shaderHeight = this._getShaderHeight();
            var maxHeight = this._getShaderMaxHeight();
            var isSolidShader = shaderHeight > maxHeight;
            if (shaderHeight > maxHeight) {
              shaderHeight = maxHeight;
            }
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setHeight)(this._$shader, shaderHeight);
            var groupCount = this._workSpace._getGroupCount() || 1;
            if (this._workSpace.isGroupedByDate()) {
              this._renderGroupedByDateShaderParts(groupCount, shaderHeight, maxHeight, isSolidShader);
            } else {
              this._renderShaderParts(groupCount, shaderHeight, maxHeight, isSolidShader);
            }
          }
        }, {
          key: "_renderShaderParts",
          value: function _renderShaderParts(groupCount, shaderHeight, maxHeight, isSolidShader) {
            for (var i = 0; i < groupCount; i++) {
              var shaderWidth = this._getShaderWidth(i);
              this._renderTopShader(this._$shader, shaderHeight, shaderWidth, i);
              !isSolidShader && this._renderBottomShader(this._$shader, maxHeight, shaderHeight, shaderWidth, i);
              this._renderAllDayShader(shaderWidth, i);
            }
          }
        }, {
          key: "_renderGroupedByDateShaderParts",
          value: function _renderGroupedByDateShaderParts(groupCount, shaderHeight, maxHeight, isSolidShader) {
            var shaderWidth = this._getShaderWidth(0);
            var bottomShaderWidth = shaderWidth - this._workSpace.getCellWidth();
            if (shaderHeight < 0) {
              shaderHeight = 0;
              bottomShaderWidth = shaderWidth;
            }
            this._renderTopShader(this._$shader, shaderHeight, shaderWidth * groupCount, 0);
            !isSolidShader && this._renderBottomShader(this._$shader, maxHeight, shaderHeight, bottomShaderWidth * groupCount + this._workSpace.getCellWidth(), 0);
            this._renderAllDayShader(shaderWidth * groupCount, 0);
          }
        }, {
          key: "_renderTopShader",
          value: function _renderTopShader($shader, height, width, i) {
            this._$topShader = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(DATE_TIME_SHADER_TOP_CLASS);
            if (width) {
              (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setWidth)(this._$topShader, width);
            }
            if (height) {
              (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setHeight)(this._$topShader, height);
            }
            this._$topShader.css("marginTop", this._getShaderTopOffset(i));
            this._$topShader.css("left", this._getShaderOffset(i, width));
            $shader.append(this._$topShader);
          }
        }, {
          key: "_renderBottomShader",
          value: function _renderBottomShader($shader, maxHeight, height, width, i) {
            this._$bottomShader = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(DATE_TIME_SHADER_BOTTOM_CLASS);
            var shaderWidth = height < 0 ? width : width - this._workSpace.getCellWidth();
            var shaderHeight = height < 0 ? maxHeight : maxHeight - height;
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setWidth)(this._$bottomShader, shaderWidth);
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setHeight)(this._$bottomShader, shaderHeight);
            this._$bottomShader.css("left", this._getShaderOffset(i, width - this._workSpace.getCellWidth()));
            $shader.append(this._$bottomShader);
          }
        }, {
          key: "_renderAllDayShader",
          value: function _renderAllDayShader(shaderWidth, i) {
            if (this._workSpace.option("showAllDayPanel")) {
              this._$allDayIndicator = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(DATE_TIME_SHADER_ALL_DAY_CLASS);
              (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setHeight)(this._$allDayIndicator, this._workSpace.getAllDayHeight());
              (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_1__.setWidth)(this._$allDayIndicator, shaderWidth);
              this._$allDayIndicator.css("left", this._getShaderOffset(i, shaderWidth));
              this._workSpace._$allDayPanel.prepend(this._$allDayIndicator);
            }
          }
        }, {
          key: "_getShaderOffset",
          value: function _getShaderOffset(i, width) {
            return this._workSpace.getGroupedStrategy().getShaderOffset(i, width);
          }
        }, {
          key: "_getShaderTopOffset",
          value: function _getShaderTopOffset(i) {
            return this._workSpace.getGroupedStrategy().getShaderTopOffset(i);
          }
        }, {
          key: "_getShaderHeight",
          value: function _getShaderHeight() {
            return this._workSpace.getGroupedStrategy().getShaderHeight();
          }
        }, {
          key: "_getShaderMaxHeight",
          value: function _getShaderMaxHeight() {
            return this._workSpace.getGroupedStrategy().getShaderMaxHeight();
          }
        }, {
          key: "_getShaderWidth",
          value: function _getShaderWidth(i) {
            return this._workSpace.getGroupedStrategy().getShaderWidth(i);
          }
        }, {
          key: "clean",
          value: function clean() {
            _get(_getPrototypeOf(VerticalCurrentTimeShader.prototype), "clean", this).call(this);
            this._workSpace && this._workSpace._$allDayPanel && this._workSpace._$allDayPanel.find(".".concat(DATE_TIME_SHADER_ALL_DAY_CLASS)).remove();
          }
        }]);
        return VerticalCurrentTimeShader;
      }(_m_current_time_shader__WEBPACK_IMPORTED_MODULE_2__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = VerticalCurrentTimeShader;

      /***/
    }),
    /***/78514: (
    /*!**********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/timezones/m_utils_timezones_data.js ***!
      \**********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/errors */31150);
      /* harmony import */
      var _core_utils_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/math */78148);
      /* harmony import */
      var _data_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../data/query */3398);
      /* harmony import */
      var _timezones_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./timezones_data */98522);
      /**
       * DevExtreme (esm/__internal/scheduler/timezones/m_utils_timezones_data.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var getConvertedUntils = function getConvertedUntils(value) {
        return value.split("|").map(function (until) {
          if ("Infinity" === until) {
            return null;
          }
          return 1e3 * parseInt(until, 36);
        });
      };
      var parseTimezone = function parseTimezone(timeZoneConfig) {
        var offsets = timeZoneConfig.offsets;
        var offsetIndices = timeZoneConfig.offsetIndices;
        var untils = timeZoneConfig.untils;
        var offsetList = offsets.split("|").map(function (value) {
          return parseInt(value);
        });
        var offsetIndexList = offsetIndices.split("").map(function (value) {
          return parseInt(value);
        });
        var dateList = getConvertedUntils(untils).map((accumulator = 0, function (value) {
          return accumulator += value;
        }));
        var accumulator;
        return {
          offsetList: offsetList,
          offsetIndexList: offsetIndexList,
          dateList: dateList
        };
      };
      var TimeZoneCache = /*#__PURE__*/function () {
        function TimeZoneCache() {
          _classCallCheck(this, TimeZoneCache);
          this.map = new Map();
        }
        _createClass(TimeZoneCache, [{
          key: "tryGet",
          value: function tryGet(id) {
            if (!this.map.get(id)) {
              var config = timeZoneDataUtils.getTimezoneById(id);
              if (!config) {
                return false;
              }
              var timeZoneInfo = parseTimezone(config);
              this.map.set(id, timeZoneInfo);
            }
            return this.map.get(id);
          }
        }]);
        return TimeZoneCache;
      }();
      var tzCache = new TimeZoneCache();
      var timeZoneDataUtils = {
        _tzCache: tzCache,
        _timeZones: _timezones_data__WEBPACK_IMPORTED_MODULE_3__["default"].zones,
        getDisplayedTimeZones: function getDisplayedTimeZones(timestamp) {
          var _this119 = this;
          var timeZones = this._timeZones.map(function (timezone) {
            var timeZoneInfo = parseTimezone(timezone);
            var offset = _this119.getUtcOffset(timeZoneInfo, timestamp);
            var title = "(GMT ".concat(_this119.formatOffset(offset), ") ").concat(_this119.formatId(timezone.id));
            return {
              offset: offset,
              title: title,
              id: timezone.id
            };
          });
          return (0, _data_query__WEBPACK_IMPORTED_MODULE_2__["default"])(timeZones).sortBy("offset").toArray();
        },
        formatOffset: function formatOffset(offset) {
          var hours = Math.floor(offset);
          var minutesInDecimal = offset - hours;
          var signString = (0, _core_utils_math__WEBPACK_IMPORTED_MODULE_1__.sign)(offset) >= 0 ? "+" : "-";
          var hoursString = "0".concat(Math.abs(hours)).slice(-2);
          var minutesString = minutesInDecimal > 0 ? ":".concat(60 * minutesInDecimal) : ":00";
          return signString + hoursString + minutesString;
        },
        formatId: function formatId(id) {
          return id.split("/").join(" - ").split("_").join(" ");
        },
        getTimezoneById: function getTimezoneById(id) {
          if (!id) {
            return;
          }
          var tzList = this._timeZones;
          for (var i = 0; i < tzList.length; i++) {
            var currentId = tzList[i].id;
            if (currentId === id) {
              return tzList[i];
            }
          }
          _core_errors__WEBPACK_IMPORTED_MODULE_0__["default"].log("W0009", id);
          return;
        },
        getTimeZoneOffsetById: function getTimeZoneOffsetById(id, timestamp) {
          var timeZoneInfo = tzCache.tryGet(id);
          return timeZoneInfo ? this.getUtcOffset(timeZoneInfo, timestamp) : void 0;
        },
        getTimeZoneDeclarationTuple: function getTimeZoneDeclarationTuple(id, year) {
          var timeZoneInfo = tzCache.tryGet(id);
          return timeZoneInfo ? this.getTimeZoneDeclarationTupleCore(timeZoneInfo, year) : [];
        },
        getTimeZoneDeclarationTupleCore: function getTimeZoneDeclarationTupleCore(timeZoneInfo, year) {
          var offsetList = timeZoneInfo.offsetList;
          var offsetIndexList = timeZoneInfo.offsetIndexList;
          var dateList = timeZoneInfo.dateList;
          var tupleResult = [];
          for (var i = 0; i < dateList.length; i++) {
            var currentDate = dateList[i];
            var currentYear = new Date(currentDate).getFullYear();
            if (currentYear === year) {
              var offset = offsetList[offsetIndexList[i + 1]];
              tupleResult.push({
                date: currentDate,
                offset: -offset / 60
              });
            }
            if (currentYear > year) {
              break;
            }
          }
          return tupleResult;
        },
        getUtcOffset: function getUtcOffset(timeZoneInfo, dateTimeStamp) {
          var offsetList = timeZoneInfo.offsetList;
          var offsetIndexList = timeZoneInfo.offsetIndexList;
          var dateList = timeZoneInfo.dateList;
          var lastIntervalStartIndex = dateList.length - 1 - 1;
          var index = lastIntervalStartIndex;
          while (index >= 0 && dateTimeStamp < dateList[index]) {
            index--;
          }
          var offset = offsetList[offsetIndexList[index + 1]];
          return -offset / 60 || offset;
        }
      };
      /* harmony default export */
      __webpack_exports__["default"] = timeZoneDataUtils;

      /***/
    }),
    /***/98522: (
    /*!**************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/timezones/timezones_data.js ***!
      \**************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /**
       * DevExtreme (esm/__internal/scheduler/timezones/timezones_data.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      /* harmony default export */
      __webpack_exports__["default"] = {
        zones: [{
          id: "Africa/Abidjan",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Africa/Accra",
          untils: "-r507yk|1e3pak|681qo|cjvlc|681qo|cjvlc|681qo|cjvlc|681qo|clq9c|681qo|cjvlc|681qo|cjvlc|681qo|cjvlc|681qo|clq9c|681qo|cjvlc|681qo|cjvlc|681qo|cjvlc|681qo|clq9c|681qo|cjvlc|681qo|cjvlc|681qo|cjvlc|681qo|clq9c|681qo|cjvlc|681qo|cjvlc|681qo|cjvlc|681qo|clq9c|681qo|cjvlc|681qo|cjvlc|681qo|Infinity",
          offsets: "0.8667|0|-20",
          offsetIndices: "012121212121212121212121212121212121212121212121"
        }, {
          id: "Africa/Addis_Ababa",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Africa/Algiers",
          untils: "-uozn3l|2qx1nl|5luo0|8y800|a4tc0|7vc00|auqo0|7idc0|b7pc0|6sg00|cyo00|7ayo0|53c00|9idxc0|3i040|51mw0|253uk0|9o2k0|92040|8l3s0|jutc0|4uy840|3rdzw0|46xc00|7x6o0|2xco40|8n180|7x9g0|9d440|kiqg0|9d440|9q2s0|9cyk0|Infinity",
          offsets: "-9.35|0|-60|-120",
          offsetIndices: "0121212121212121232321212122321212"
        }, {
          id: "Africa/Asmara",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Africa/Asmera",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Africa/Bamako",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Africa/Bangui",
          untils: "-q9qbao|Infinity",
          offsets: "-13.6|-60",
          offsetIndices: "01"
        }, {
          id: "Africa/Banjul",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Africa/Bissau",
          untils: "-u9rek0|wvoyo0|Infinity",
          offsets: "62.3333|60|0",
          offsetIndices: "012"
        }, {
          id: "Africa/Blantyre",
          untils: "-yvtfd8|Infinity",
          offsets: "-130.3333|-120",
          offsetIndices: "01"
        }, {
          id: "Africa/Brazzaville",
          untils: "-q9qbao|Infinity",
          offsets: "-13.6|-60",
          offsetIndices: "01"
        }, {
          id: "Africa/Bujumbura",
          untils: "-yvtfd8|Infinity",
          offsets: "-130.3333|-120",
          offsetIndices: "01"
        }, {
          id: "Africa/Cairo",
          untils: "-fdls80|40d80|a31g0|7x3w0|a4w40|aqyk0|80ys0|b07w0|7tk40|b07w0|8jhg0|a8fw0|60go40|7el80|awo40|7v980|awqw0|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7tk40|ayd80|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|f9x80|3i040|eluk0|462s0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|b5rw0|7m5g0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|aqvs0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7k580|b5xg0|6u7w0|bvus0|6h980|c8tg0|64ak0|cyqs0|5anw0|1jms0|12t80|1w22s0|25p80|1sw40|2vmk0|Infinity",
          offsets: "-120|-180",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Africa/Casablanca",
          untils: "-tblt9g|di7nxg|3huk0|51k40|2znuk0|2dp9g0|776k0|8nt2s0|657w0|3ifxg0|3jp80|va040|4qak0|e1ms0|7pp80|cnms0|3afw0|2xi840|xqqk0|bp56s0|4qak0|e1ms0|45x80|d2g40|51ek0|c8tg0|64ak0|e1sc0|47uo0|1leo0|23xc0|asw00|3lmo0|1qyo0|40g00|7x6o0|4mo00|1stc0|4deo0|7x6o0|3ylc0|1stc0|51hc0|7x6o0|3lmo0|1stc0|5reo0|7k800|2vpc0|25s00|64dc0|7k800|2iqo0|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|25s00|g7c00|1stc0|g7c00|25s00|Infinity",
          offsets: "30.3333|0|-60",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "Africa/Ceuta",
          untils: "-qyiys0|7x3w0|2vt440|8sqs0|ssyk0|8n6s0|9px80|905g0|a2yo0|902o0|k69dc0|657w0|3ifxg0|3jp80|va040|4qak0|e1ms0|7pp80|cnms0|3afw0|2xi840|129us0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "010101010101010101010121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Africa/Conakry",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Africa/Dakar",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Africa/Dar_es_Salaam",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Africa/Djibouti",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Africa/Douala",
          untils: "-q9qbao|Infinity",
          offsets: "-13.6|-60",
          offsetIndices: "01"
        }, {
          id: "Africa/El_Aaiun",
          untils: "-isdxk0|m2g0c0|vek0|4qak0|e1ms0|7pp80|cnms0|3afw0|fke5g0|4qak0|e1ms0|45x80|d2g40|51ek0|c8tg0|64ak0|e1sc0|47uo0|1leo0|23xc0|asw00|3lmo0|1qyo0|40g00|7x6o0|4mo00|1stc0|4deo0|7x6o0|3ylc0|1stc0|51hc0|7x6o0|3lmo0|1stc0|5reo0|7k800|2vpc0|25s00|64dc0|7k800|2iqo0|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|1stc0|gkao0|1stc0|g7c00|25s00|g7c00|1stc0|g7c00|25s00|g7c00|25s00|g7c00|1stc0|g7c00|25s00|Infinity",
          offsets: "52.8|60|0|-60",
          offsetIndices: "012323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "Africa/Freetown",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Africa/Gaborone",
          untils: "-yvtfd8|Infinity",
          offsets: "-130.3333|-120",
          offsetIndices: "01"
        }, {
          id: "Africa/Harare",
          untils: "-yvtfd8|Infinity",
          offsets: "-130.3333|-120",
          offsetIndices: "01"
        }, {
          id: "Africa/Johannesburg",
          untils: "-yvtdi0|kn7o60|9cyk0|9d440|9cyk0|Infinity",
          offsets: "-90|-120|-180",
          offsetIndices: "012121"
        }, {
          id: "Africa/Juba",
          untils: "-kcrsis|kixuys|8l6k0|a4w40|8n180|a6qs0|8n180|a31g0|8ovw0|a16s0|8qqk0|9zc40|8sl80|9xhg0|8wak0|9ts40|8y580|a4w40|8n180|a31g0|8ovw0|a16s0|8sl80|9xhg0|8ufw0|9vms0|8wak0|9ts40|8y580|a4w40|8ovw0|a16s0|8qqk0|7frw40|Infinity",
          offsets: "-126.4667|-120|-180",
          offsetIndices: "01212121212121212121212121212121212"
        }, {
          id: "Africa/Kampala",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Africa/Khartoum",
          untils: "-kcrsow|kixv4w|8l6k0|a4w40|8n180|a6qs0|8n180|a31g0|8ovw0|a16s0|8qqk0|9zc40|8sl80|9xhg0|8wak0|9ts40|8y580|a4w40|8n180|a31g0|8ovw0|a16s0|8sl80|9xhg0|8ufw0|9vms0|8wak0|9ts40|8y580|a4w40|8ovw0|a16s0|8qqk0|7frw40|9ac180|Infinity",
          offsets: "-130.1333|-120|-180",
          offsetIndices: "012121212121212121212121212121212121"
        }, {
          id: "Africa/Kigali",
          untils: "-yvtfd8|Infinity",
          offsets: "-130.3333|-120",
          offsetIndices: "01"
        }, {
          id: "Africa/Kinshasa",
          untils: "-q9qbao|Infinity",
          offsets: "-13.6|-60",
          offsetIndices: "01"
        }, {
          id: "Africa/Lagos",
          untils: "-q9qbao|Infinity",
          offsets: "-13.6|-60",
          offsetIndices: "01"
        }, {
          id: "Africa/Libreville",
          untils: "-q9qbao|Infinity",
          offsets: "-13.6|-60",
          offsetIndices: "01"
        }, {
          id: "Africa/Lome",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Africa/Luanda",
          untils: "-q9qbao|Infinity",
          offsets: "-13.6|-60",
          offsetIndices: "01"
        }, {
          id: "Africa/Lubumbashi",
          untils: "-yvtfd8|Infinity",
          offsets: "-130.3333|-120",
          offsetIndices: "01"
        }, {
          id: "Africa/Lusaka",
          untils: "-yvtfd8|Infinity",
          offsets: "-130.3333|-120",
          offsetIndices: "01"
        }, {
          id: "Africa/Malabo",
          untils: "-q9qbao|Infinity",
          offsets: "-13.6|-60",
          offsetIndices: "01"
        }, {
          id: "Africa/Maputo",
          untils: "-yvtfd8|Infinity",
          offsets: "-130.3333|-120",
          offsetIndices: "01"
        }, {
          id: "Africa/Maseru",
          untils: "-yvtdi0|kn7o60|9cyk0|9d440|9cyk0|Infinity",
          offsets: "-90|-120|-180",
          offsetIndices: "012121"
        }, {
          id: "Africa/Mbabane",
          untils: "-yvtdi0|kn7o60|9cyk0|9d440|9cyk0|Infinity",
          offsets: "-90|-120|-180",
          offsetIndices: "012121"
        }, {
          id: "Africa/Mogadishu",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Africa/Monrovia",
          untils: "-qj6zc4|rl202a|Infinity",
          offsets: "43.1333|44.5|0",
          offsetIndices: "012"
        }, {
          id: "Africa/Nairobi",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Africa/Ndjamena",
          untils: "-u9rk4c|zdk5cc|7iak0|Infinity",
          offsets: "-60.2|-60|-120",
          offsetIndices: "0121"
        }, {
          id: "Africa/Niamey",
          untils: "-q9qbao|Infinity",
          offsets: "-13.6|-60",
          offsetIndices: "01"
        }, {
          id: "Africa/Nouakchott",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Africa/Ouagadougou",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Africa/Porto-Novo",
          untils: "-q9qbao|Infinity",
          offsets: "-13.6|-60",
          offsetIndices: "01"
        }, {
          id: "Africa/Sao_Tome",
          untils: "-u9rhc0|1jbm840|irxc0|Infinity",
          offsets: "36.75|0|-60",
          offsetIndices: "0121"
        }, {
          id: "Africa/Timbuktu",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Africa/Tripoli",
          untils: "-q3gfrw|gl6ajw|422c0|xado0|4bbo0|wrpg0|4s580|1kdpg0|c05bw0|4mqs0|9et80|9d440|9et80|9eys0|9et80|9mdg0|95jw0|9io40|9cyk0|99es0|9et80|9eys0|9et80|9d440|9et80|b2840|3cf3w0|9kis0|9et80|7vqyw0|75eo0|asw00|Infinity",
          offsets: "-52.7333|-60|-120",
          offsetIndices: "012121212121212121212121212122122"
        }, {
          id: "Africa/Tunis",
          untils: "-uozn3l|enxevl|b5uo0|53c00|u8w00|7x9g0|c8w80|7k800|z3w0|ew40|8bx80|9d440|9nx00|925o0|8l100|gi3440|7k800|b9k00|7vc00|51mw00|5ytc0|9d1c0|9d1c0|b9k00|7thc0|7m0tc0|7tk40|93us0|b5uo0|7k800|b5uo0|7x6o0|asw00|Infinity",
          offsets: "-9.35|-60|-120",
          offsetIndices: "0121212121212121212121212121212121"
        }, {
          id: "Africa/Windhoek",
          untils: "-yvtdi0|kn7o60|9cyk0|oj2nw0|235k00|8lho0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|Infinity",
          offsets: "-90|-120|-180|-60",
          offsetIndices: "01211313131313131313131313131313131313131313131313131"
        }, {
          id: "America/Adak",
          untils: "-ek1nw0|1tyug0|2e6s0|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l940|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "660|600|540",
          offsetIndices: "011001010101010101010101010101010111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Anchorage",
          untils: "-ek1qo0|1tyx80|2e400|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l940|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "600|540|480",
          offsetIndices: "011001010101010101010101010101010111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Anguilla",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Antigua",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Araguaina",
          untils: "-t85j2o|99k8mo|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|2yl440|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|51udg0|64ak0|Infinity",
          offsets: "192.8|180|120",
          offsetIndices: "0121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Argentina/Buenos_Aires",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvus0|6u7w0|bvus0|776k0|7qcg40|3yik0|b5xg0|7k580|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232323232323232"
        }, {
          id: "America/Argentina/Catamarca",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|5v42s0|z9g0|1u93w0|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232323132321232"
        }, {
          id: "America/Argentina/ComodRivadavia",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|5v42s0|z9g0|1u93w0|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232323132321232"
        }, {
          id: "America/Argentina/Cordoba",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|7qcg40|3yik0|b5xg0|7k580|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232323132323232"
        }, {
          id: "America/Argentina/Jujuy",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|c8w80|776k0|ag040|7k2g0|bvus0|776k0|7qcg40|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "012121212121212121212121212121212121212121232323121323232"
        }, {
          id: "America/Argentina/La_Rioja",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6qik0|3g880|8jbw0|6u7w0|bvus0|776k0|5v42s0|z9g0|1u93w0|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "012121212121212121212121212121212121212121232323231232321232"
        }, {
          id: "America/Argentina/Mendoza",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bktk0|71mk0|bqas0|73h80|bvus0|773s0|5unes0|6hes0|1p7mk0|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232312121321232"
        }, {
          id: "America/Argentina/Rio_Gallegos",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvus0|6u7w0|bvus0|776k0|5v42s0|z9g0|1u93w0|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232323232321232"
        }, {
          id: "America/Argentina/Salta",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|7qcg40|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "012121212121212121212121212121212121212121232323231323232"
        }, {
          id: "America/Argentina/San_Juan",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6qik0|3g880|8jbw0|6u7w0|bvus0|776k0|5v2840|2txg0|1sgak0|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "012121212121212121212121212121212121212121232323231232321232"
        }, {
          id: "America/Argentina/San_Luis",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|7pp80|b2aw0|71mk0|4qg40|6s8ik0|2txg0|1sgak0|14nw0|2gys0|b5xg0|7k580|b5xg0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "012121212121212121212121212121212121212121232323121212321212"
        }, {
          id: "America/Argentina/Tucuman",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|5v42s0|mas0|1um2k0|3yik0|b5xg0|7k580|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "0121212121212121212121212121212121212121212323232313232123232"
        }, {
          id: "America/Argentina/Ushuaia",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvus0|6u7w0|bvus0|776k0|5v0dg0|12ys0|1u93w0|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232323232321232"
        }, {
          id: "America/Aruba",
          untils: "-u7lckd|rlo7qd|Infinity",
          offsets: "275.7833|270|240",
          offsetIndices: "012"
        }, {
          id: "America/Asuncion",
          untils: "-jy93zk|ldwofk|s4vw0|s6w40|7tek0|b0dg0|7rjw0|b0dg0|7rjw0|b0dg0|9cyk0|9eys0|9et80|9eys0|9cyk0|9eys0|9cyk0|9eys0|9cyk0|9eys0|9et80|9eys0|9cyk0|9eys0|9cyk0|9eys0|9cyk0|9eys0|9et80|9eys0|9cyk0|ahus0|8a2k0|9eys0|9cyk0|9o840|7k580|b7s40|93p80|9gtg0|7nuk0|b42s0|7lzw0|b5xg0|7tek0|b9ms0|776k0|biw40|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|9cyk0|7kas0|b5rw0|7x9g0|ast80|a31g0|7k580|b5xg0|7k580|b5xg0|7k580|biw40|776k0|biw40|776k0|biw40|8zzw0|905g0|9px80|905g0|9px80|9d440|8n180|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|a31g0|8n180|a31g0|8n180|a31g0|Infinity",
          offsets: "230.6667|240|180",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "America/Atikokan",
          untils: "-qzov40|a2vw0|bfxjw0|pmdk0|1tz8c0|2dsw0|Infinity",
          offsets: "360|300",
          offsetIndices: "0101111"
        }, {
          id: "America/Atka",
          untils: "-ek1nw0|1tyug0|2e6s0|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l940|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "660|600|540",
          offsetIndices: "011001010101010101010101010101010111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Bahia_Banderas",
          untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|591h80|3ie2s0|axvpg0|dpgw40|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|asqg0|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
          offsets: "421|420|360|480|300",
          offsetIndices: "0121212131212121212121212121212121212142424242424242424242424242424242424242424242424242424242"
        }, {
          id: "America/Bahia",
          untils: "-t85kv8|99kaf8|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|cyqs0|64ak0|cls40|5rbw0|dbpg0|51ek0|dbpg0|6h980|c8tg0|6h980|c8tg0|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|4irc40|6u7w0|Infinity",
          offsets: "154.0667|180|120",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Barbados",
          untils: "-o0aiaj|46b400|npv1mj|5rbw0|a31g0|8n180|a31g0|8n180|ag040|84ik0|Infinity",
          offsets: "238.4833|240|180",
          offsetIndices: "00121212121"
        }, {
          id: "America/Belem",
          untils: "-t85j0s|99k8ks|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|Infinity",
          offsets: "193.9333|180|120",
          offsetIndices: "012121212121212121212121212121"
        }, {
          id: "America/Belize",
          untils: "-u52ic0|3edkc0|6ham0|c8s20|6u9a0|bvte0|6u9a0|bvte0|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|bvte0|6u9a0|bvte0|6u9a0|bvte0|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|bvte0|6u9a0|bvte0|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|bvte0|6u9a0|bvte0|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|bvte0|6u9a0|g2t2q0|3e580|4mcys0|2vmk0|Infinity",
          offsets: "352.8|360|330|300",
          offsetIndices: "01212121212121212121212121212121212121212121212121213131"
        }, {
          id: "America/Blanc-Sablon",
          untils: "-qzp0o0|a2vw0|c5jxg0|1tzdw0|2dnc0|Infinity",
          offsets: "240|180",
          offsetIndices: "010110"
        }, {
          id: "America/Boa_Vista",
          untils: "-t85grk|99k93k|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|62xk40|7k580|biw40|cvw0|Infinity",
          offsets: "242.6667|240|180",
          offsetIndices: "0121212121212121212121212121212121"
        }, {
          id: "America/Bogota",
          untils: "-srdoy8|14f1hi8|ha580|Infinity",
          offsets: "296.2667|300|240",
          offsetIndices: "0121"
        }, {
          id: "America/Boise",
          untils: "-r0emw0|ast80|7x9g0|ast80|1um840|9s7jw0|1tz5k0|2dvo0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|51k40|doik0|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "480|420|360",
          offsetIndices: "0101012212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Buenos_Aires",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvus0|6u7w0|bvus0|776k0|7qcg40|3yik0|b5xg0|7k580|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232323232323232"
        }, {
          id: "America/Cambridge_Bay",
          untils: "-q3gdc0|bjeec0|1tz5k0|2dvo0|a7n3w0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x6o0|ast80|ct40|7kj40|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "0|420|360|300",
          offsetIndices: "0122131212121212121212121212121212121212121212233221212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Campo_Grande",
          untils: "-t85hvw|99ka7w|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|cyqs0|64ak0|cls40|5rbw0|dbpg0|51ek0|dbpg0|6h980|c8tg0|6h980|c8tg0|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|cls40|64ak0|dfes0|5nmk0|c8tg0|6h980|dbpg0|5rbw0|bvus0|6h980|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6u7w0|c8tg0|64ak0|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|dbpg0|5ed80|Infinity",
          offsets: "218.4667|240|180",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Cancun",
          untils: "-p1u7c0|vauo00|7ggw40|afuk0|8a840|afuk0|8a840|64ak0|4bms0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|51k40|Infinity",
          offsets: "347.0667|360|300|240",
          offsetIndices: "0123232321212121212121212121212121212121212"
        }, {
          id: "America/Caracas",
          untils: "-u7lcxw|rlo83w|meoxm0|4dps00|Infinity",
          offsets: "267.6667|270|240",
          offsetIndices: "01212"
        }, {
          id: "America/Catamarca",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|5v42s0|z9g0|1u93w0|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232323132321232"
        }, {
          id: "America/Cayenne",
          untils: "-uj7yb4|tcw6r4|Infinity",
          offsets: "209.3333|240|180",
          offsetIndices: "012"
        }, {
          id: "America/Cayman",
          untils: "-w757vc|Infinity",
          offsets: "319.6|300",
          offsetIndices: "01"
        }, {
          id: "America/Chicago",
          untils: "-r0esg0|ast80|7x9g0|ast80|bvus0|776k0|7kas0|b5rw0|9d440|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|7x9g0|dbjw0|8a840|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300",
          offsetIndices: "01010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Chihuahua",
          untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|xes2s0|afuk0|8a840|afuk0|8aaw0|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
          offsets: "424.3333|420|360|300",
          offsetIndices: "0121212323221212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Coral_Harbour",
          untils: "-qzov40|a2vw0|bfxjw0|pmdk0|1tz8c0|2dsw0|Infinity",
          offsets: "360|300",
          offsetIndices: "0101111"
        }, {
          id: "America/Cordoba",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|7qcg40|3yik0|b5xg0|7k580|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232323132323232"
        }, {
          id: "America/Costa_Rica",
          untils: "-pjw8fn|ubtl3n|51ek0|doo40|51ek0|5jso40|8drw0|acas0|2xh80|Infinity",
          offsets: "336.2167|360|300",
          offsetIndices: "0121212121"
        }, {
          id: "America/Creston",
          untils: "-rshz80|vbus0|Infinity",
          offsets: "420|480",
          offsetIndices: "010"
        }, {
          id: "America/Cuiaba",
          untils: "-t85hm4|99k9y4|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|cyqs0|64ak0|cls40|5rbw0|dbpg0|51ek0|dbpg0|6h980|c8tg0|6h980|c8tg0|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|w5hg0|5nmk0|c8tg0|6h980|dbpg0|5rbw0|bvus0|6h980|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6u7w0|c8tg0|64ak0|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|dbpg0|5ed80|Infinity",
          offsets: "224.3333|240|180",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Curacao",
          untils: "-u7lckd|rlo7qd|Infinity",
          offsets: "275.7833|270|240",
          offsetIndices: "012"
        }, {
          id: "America/Danmarkshavn",
          untils: "-rvusjk|x8nx3k|8zrk0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|53hk0|Infinity",
          offsets: "74.6667|180|120|0",
          offsetIndices: "01212121212121212121212121212121213"
        }, {
          id: "America/Dawson_Creek",
          untils: "-qzopk0|a2vw0|c5jxg0|1tz2s0|2dyg0|tj1g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|69uk0|Infinity",
          offsets: "480|420",
          offsetIndices: "0101101010101010101010101010101010101010101010101010101011"
        }, {
          id: "America/Dawson",
          untils: "-qzoms0|a2vw0|asys0|882c0|bmiwc0|1tz000|2e180|a7n3w0|9q000|465k00|3e2is0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|Infinity",
          offsets: "540|480|420",
          offsetIndices: "01010110201212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "America/Denver",
          untils: "-r0epo0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|2vmk0|ataw40|1tz5k0|2dvo0|a7n9g0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "420|360",
          offsetIndices: "01010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Detroit",
          untils: "-xx8dyd|5eraud|dyeyk0|1tzb40|2dq40|1c9440|7x3w0|9rlbxo|71s2c|9d440|9cyk0|2cmdg0|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "332.1833|360|300|240",
          offsetIndices: "0123323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "America/Dominica",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Edmonton",
          untils: "-x1yazk|629ink|a2vw0|8n6s0|29ek0|h6lg0|9px80|905g0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|9l0g40|1tz5k0|2dvo0|tj1g0|7x3w0|ctzk40|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "453.8667|420|360",
          offsetIndices: "0121212121212122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Eirunepe",
          untils: "-t85f28|99ka68|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|2yy2s0|6h980|7hg2s0|2t2t80|Infinity",
          offsets: "279.4667|300|240",
          offsetIndices: "0121212121212121212121212121212121"
        }, {
          id: "America/El_Salvador",
          untils: "-pkm4tc|ymao5c|7k580|b5xg0|7k580|Infinity",
          offsets: "356.8|360|300",
          offsetIndices: "012121"
        }, {
          id: "America/Ensenada",
          untils: "-p1u1s0|11jrw0|1sns00|1sgdc0|71s40|9cyk0|5iidg0|1q6700|4lfk0|190g40|eluk0|2r4o80|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|84qys0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "468.0667|420|480",
          offsetIndices: "012121211212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "America/Fort_Nelson",
          untils: "-qzopk0|a2vw0|c5jxg0|1tz2s0|2dyg0|tj1g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|Infinity",
          offsets: "480|420",
          offsetIndices: "01011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "America/Fort_Wayne",
          untils: "-r0esg0|ast80|7x9g0|ast80|baw840|51ek0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|19q7w0|asys0|5qonw0|9cyk0|9d440|9cyk0|ihslg0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "010101011010101010101010101010121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Fortaleza",
          untils: "-t85kvc|99kafc|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|514g40|7k580|biw40|puk0|id6s0|6h980|Infinity",
          offsets: "154|180|120",
          offsetIndices: "0121212121212121212121212121212121212121"
        }, {
          id: "America/Glace_Bay",
          untils: "-z94kwc|89fk8c|a2vw0|c5jxg0|1tzdw0|2dnc0|3y8g40|7x3w0|9pa5g0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "239.8|240|180",
          offsetIndices: "012122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Godthab",
          untils: "-rvumf4|x8nqz4|8zrk0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "206.9333|180|120",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Goose_Bay",
          untils: "-qzp20k|a2vw0|8kjbw0|kzjyk|7k580|b5xg0|7k580|b5xg0|7k580|biw40|776k0|biw40|7k580|b5xg0|7k580|b5xg0|1pb260|2dly0|biw40|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|biw40|7k580|ag040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|6y2s0|22420|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a2lo|afuk0|8a840|asqg0|7xc80|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8tec|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "210.8667|150.8667|210|150|240|180|120",
          offsetIndices: "010232323232323233232323232323232323232323232323232323232324545454545454545454545454545454545454545454546454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454"
        }, {
          id: "America/Grand_Turk",
          untils: "-u85og2|z3brw2|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|18ais0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "307.1667|300|240",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121222121212121212121212121212121212121212121"
        }, {
          id: "America/Grenada",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Guadeloupe",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Guatemala",
          untils: "-qqqskk|ss0akk|4ofw0|4tidg0|6djw0|3wwas0|8n180|7n5ms0|7x3w0|Infinity",
          offsets: "362.0667|360|300",
          offsetIndices: "0121212121"
        }, {
          id: "America/Guayaquil",
          untils: "-kcr84o|wb620o|3jp80|Infinity",
          offsets: "314|300|240",
          offsetIndices: "0121"
        }, {
          id: "America/Guyana",
          untils: "-smcak8|vj4sz8|81rf90|Infinity",
          offsets: "232.6667|225|180|240",
          offsetIndices: "0123"
        }, {
          id: "America/Halifax",
          untils: "-z94k80|777go0|9et80|st9o0|a2vw0|ssyk0|5rbw0|cv1g0|69uk0|c6ys0|6kyk0|ci2s0|67zw0|ci2s0|6w2k0|bu040|7lzw0|bu040|66580|bu040|7lzw0|bu040|64ak0|cls40|5v180|cv1g0|6j3w0|c6ys0|79180|b42s0|7lzw0|b42s0|7yyk0|bu040|64ak0|dbpg0|66580|cls40|5ed80|bu040|7lzw0|b42s0|7lzw0|cjxg0|66580|bh1g0|7lzw0|b42s0|7lzw0|6uj00|1tzdw0|2dnc0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|tw040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|tw040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|1cm2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "254.4|240|180",
          offsetIndices: "0121212121212121212121212121212121212121212121212122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Havana",
          untils: "-n7762o|1icfyo|69uk0|62s040|4ofw0|e1ms0|51ek0|e1ms0|4ofw0|1fhs40|4ofw0|e1ms0|4ofw0|9s9k40|67zw0|cedg0|6h980|9o840|7yyk0|b5xg0|7k580|bvus0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|8a2k0|ag040|8bx80|ae5g0|8drw0|acas0|9cyk0|9d440|9px80|905g0|9px80|9q2s0|7x3w0|8a840|ast80|7x9g0|ast80|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|8a2k0|ag040|8a2k0|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|905g0|a2vw0|905g0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|8n400|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|7x6o0|1cm000|6uao0|bvs00|779c0|bitc0|6uao0|bvs00|779c0|bvs00|779c0|c8qo0|779c0|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|Infinity",
          offsets: "329.6|300|240",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Hermosillo",
          untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|591h80|3ie2s0|axvpg0|dpgw40|afuk0|8a840|afuk0|8a840|afuk0|Infinity",
          offsets: "443.8667|420|360|480",
          offsetIndices: "0121212131212121"
        }, {
          id: "America/Indiana/Indianapolis",
          untils: "-r0esg0|ast80|7x9g0|ast80|baw840|51ek0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|19q7w0|asys0|5qonw0|9cyk0|9d440|9cyk0|ihslg0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "010101011010101010101010101010121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Indiana/Knox",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|tj1g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|7x3w0|asys0|7x3w0|asys0|9cyk0|9d440|9px80|9d440|9cyk0|9d440|s3180|1twas0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|7j5400|asw00|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300",
          offsetIndices: "0101011010101010101010101010101010101010101010101010101010101010101010101010101010101010111010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Indiana/Marengo",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|2wsas0|7x3w0|1c9440|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|465h80|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4g00|64dc0|clmk0|fvt9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "0101011010101010101010101212121212111212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Indiana/Petersburg",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|501ek0|7kas0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|sfzw0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|eu02o0|asw00|6udg0|c8nw0|6hc00|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "01010110101010101010101010101010101010101010101010111011212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Indiana/Tell_City",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|501ek0|7kas0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|1tw580|9d440|9cyk0|9d440|9cvs0|9d440|9cyk0|ihslg0|asw00|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "01010110101010101010101010101021211010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Indiana/Vevay",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|4gyis0|7txx80|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|hfzhg0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "010101101212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Indiana/Vincennes",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|asys0|7x3w0|3fidg0|7x3w0|asys0|7x3w0|b5rw0|7kas0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|7k580|b5xg0|9cyk0|9d440|9cyk0|9d440|2lz980|9cyk0|9d440|9cyk0|ihslg0|asw00|6udg0|c8nw0|6hc00|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "01010110101010101010101010101010121211011212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Indiana/Winamac",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|465h80|9cyk0|9d440|9cyk0|ihslg0|asw00|6udg0|c8l40|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "01010110101010101010101010101010101010121211021212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Indianapolis",
          untils: "-r0esg0|ast80|7x9g0|ast80|baw840|51ek0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|19q7w0|asys0|5qonw0|9cyk0|9d440|9cyk0|ihslg0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "010101011010101010101010101010121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Inuvik",
          untils: "-8ve5c0|6fce80|9q000|71i2w0|ipzw0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "0|480|360|420",
          offsetIndices: "0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "America/Iqaluit",
          untils: "-eb6ao0|1l3h80|2dq40|a7n3w0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7xc80|ast80|7x6o0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "0|240|300|180|360",
          offsetIndices: "01123212121212121212121212121212121212121212142212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "America/Jamaica",
          untils: "-u85og2|wbl182|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|Infinity",
          offsets: "307.1667|300|240",
          offsetIndices: "0121212121212121212121"
        }, {
          id: "America/Jujuy",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|c8w80|776k0|ag040|7k2g0|bvus0|776k0|7qcg40|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "012121212121212121212121212121212121212121232323121323232"
        }, {
          id: "America/Juneau",
          untils: "-ek1w80|1tz2s0|2dyg0|cawis0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9d1c0|9d1c0|9cyk0|9d440|9px80|905g0|9px80|1leo0|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "480|420|540",
          offsetIndices: "01101010101010101010101010001010122020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202"
        }, {
          id: "America/Kentucky/Louisville",
          untils: "-r0esg0|ast80|7x9g0|ast80|sg5g0|6bp80|a98o40|7x3w0|6w840|1tz8c0|2dsw0|ast9o|1sw2c|21gis0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|4bh80|3j3xc0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4g00|64dc0|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "0101010101101010101010101010101010101121212121212111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Kentucky/Monticello",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|bs6g40|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x6o0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "0101011010101010101010101010101010101010101010101010101010101010101010101121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Knox_IN",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|tj1g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|7x3w0|asys0|7x3w0|asys0|9cyk0|9d440|9px80|9d440|9cyk0|9d440|s3180|1twas0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|7j5400|asw00|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300",
          offsetIndices: "0101011010101010101010101010101010101010101010101010101010101010101010101010101010101010111010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Kralendijk",
          untils: "-u7lckd|rlo7qd|Infinity",
          offsets: "275.7833|270|240",
          offsetIndices: "012"
        }, {
          id: "America/La_Paz",
          untils: "-jxzspo|84ik0|Infinity",
          offsets: "272.6|212.6|240",
          offsetIndices: "012"
        }, {
          id: "America/Lima",
          untils: "-w25lpo|fcxjlo|4ml80|93us0|9cyk0|9d440|9cyk0|nw16s0|4ml80|e5c40|4ml80|1fr1g0|4ml80|1yiys0|4ml80|Infinity",
          offsets: "308.6|300|240",
          offsetIndices: "0121212121212121"
        }, {
          id: "America/Los_Angeles",
          untils: "-r0emw0|ast80|7x9g0|ast80|bmtus0|1tz2s0|2dyg0|1a3c5o|f2iic|owao0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "480|420",
          offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Louisville",
          untils: "-r0esg0|ast80|7x9g0|ast80|sg5g0|6bp80|a98o40|7x3w0|6w840|1tz8c0|2dsw0|ast9o|1sw2c|21gis0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|4bh80|3j3xc0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4g00|64dc0|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "0101010101101010101010101010101010101121212121212111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Lower_Princes",
          untils: "-u7lckd|rlo7qd|Infinity",
          offsets: "275.7833|270|240",
          offsetIndices: "012"
        }, {
          id: "America/Maceio",
          untils: "-t85ldw|99kaxw|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|2yl440|64ak0|1wf1g0|7k580|biw40|puk0|id6s0|6h980|Infinity",
          offsets: "142.8667|180|120",
          offsetIndices: "012121212121212121212121212121212121212121"
        }, {
          id: "America/Managua",
          untils: "-ijh6oo|ka1i0o|xqqk0|24p6s0|53980|dmtg0|53980|60itw0|dq240|53es0|235h80|4beis0|8zzw0|at4c0|7x140|Infinity",
          offsets: "345.2|360|300",
          offsetIndices: "0121212121212121"
        }, {
          id: "America/Manaus",
          untils: "-t85gvw|99k97w|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|2yy2s0|6h980|Infinity",
          offsets: "240.0667|240|180",
          offsetIndices: "01212121212121212121212121212121"
        }, {
          id: "America/Marigot",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Martinique",
          untils: "-umcvcs|zz5x4s|8zzw0|Infinity",
          offsets: "244.3333|240|180",
          offsetIndices: "0121"
        }, {
          id: "America/Matamoros",
          untils: "-p1u7c0|ykt480|ast80|3vppg0|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "400|360|300",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Mazatlan",
          untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|591h80|3ie2s0|axvpg0|dpgw40|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
          offsets: "425.6667|420|360|480",
          offsetIndices: "0121212131212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Mendoza",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bktk0|71mk0|bqas0|73h80|bvus0|773s0|5unes0|6hes0|1p7mk0|3yik0|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232312121321232"
        }, {
          id: "America/Menominee",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|asys0|7x3w0|a7n9g0|9px80|1at9g0|2396k0|9d1c0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300",
          offsetIndices: "01010110101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Merida",
          untils: "-p1u7c0|vauo00|hoyk0|6ys0c0|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
          offsets: "358.4667|360|300",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Metlakatla",
          untils: "-ek1w80|1tz2s0|2dyg0|cawis0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|gpc840|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|3ylc0|2itg0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "480|420|540",
          offsetIndices: "01101010101010101010101010101010102020200202020202020202020202020202020202020202"
        }, {
          id: "America/Mexico_City",
          untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|3knek0|776k0|rf440|5t6k0|1evk40|71mk0|30p1g0|8n180|nufxo0|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
          offsets: "396.6|420|360|300",
          offsetIndices: "012121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "America/Miquelon",
          untils: "-ulmyxk|zzqbdk|3m59g0|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "224.6667|240|180|120",
          offsetIndices: "012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "America/Moncton",
          untils: "-z94i40|89fhg0|a2vw0|7mqqo0|4ofw0|e1ms0|4ofw0|e1ms0|4ofw0|e1ms0|4ofw0|e1ms0|4ofw0|e1ms0|4ofw0|dmtg0|64ak0|cao40|6fek0|bkqs0|7iak0|6y5k0|1tzdw0|2dnc0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|s36s0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a2lo|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6uiyc|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "300|240|180",
          offsetIndices: "012121212121212121212122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Monterrey",
          untils: "-p1u7c0|ykt480|ast80|3vppg0|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
          offsets: "401.2667|360|300",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Montevideo",
          untils: "-w4mll9|67elc0|1s74p9|9et80|9exe0|9czy0|9exe0|9czy0|3ydyq0|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|7x5a0|b5w20|7k6m0|b5w20|7k6m0|9q1e0|9czy0|asxe0|7x5a0|6do20|ppvy0|4mmm0|8g9qq0|901a0|38pe0|2inw0|2nf9g0|8zzw0|1e3s40|9o3y0|q8he0|2kik0|yxhg0|4bh80|s36s0|2vl60|905g0|5rg20|51ek0|weqs0|3yik0|e1ms0|4ofw0|erk40|3yik0|2vs40|gk7w0|41iys0|3wnw0|erk40|4bh80|c8tg0|64ak0|c8tg0|6u7w0|c8tg0|6h980|bvus0|6u7w0|614qs0|9q2s0|a31g0|7x3w0|ag040|8a2k0|asys0|7x3w0|asys0|7x3w0|asys0|8a2k0|ag040|8a2k0|ag040|8a2k0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
          offsets: "224.85|240|180|210|150|120|90",
          offsetIndices: "001232323232323232323232324242525242525264252525252525252525252525252525252525252525252"
        }, {
          id: "America/Montreal",
          untils: "-qzoxw0|a2vw0|7yx60|aqzy0|9q8c0|7jzo0|bw0c0|6bp80|cedg0|6h980|c8tg0|6h980|bvus0|776k0|biw40|776k0|biw40|776k0|biw40|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|xjeo0|1tzb40|2dq40|asys0|7x3w0|ast80|7x3w0|asys0|7x3w0|asys0|b5rw0|7xf00|ast80|7x9g0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "300|240",
          offsetIndices: "01010101010101010101010101010101010101010101011101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Montserrat",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Nassau",
          untils: "-u6m4c6|r7u7s6|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "309.5|300|240",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/New_York",
          untils: "-r0ev80|ast80|7x9g0|ast80|7x9g0|b5rw0|905g0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|6w840|1tzb40|2dq40|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "300|240",
          offsetIndices: "01010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Nipigon",
          untils: "-qzoxw0|a2vw0|bfxjw0|pmdk0|1tzb40|2dq40|ewvus0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "300|240",
          offsetIndices: "010111010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Nome",
          untils: "-ek1nw0|1tyug0|2e6s0|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l6c0|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "660|600|540|480",
          offsetIndices: "011001010101010101010101010101010122323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "America/Noronha",
          untils: "-t85lzw|99k8rw|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|514g40|7k580|biw40|cvw0|iq5g0|6h980|Infinity",
          offsets: "129.6667|120|60",
          offsetIndices: "0121212121212121212121212121212121212121"
        }, {
          id: "America/North_Dakota/Beulah",
          untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|1tz5k0|2dvo0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hc00|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "420|360|300",
          offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101011212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/North_Dakota/Center",
          untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|1tz5k0|2dvo0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a5c0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "420|360|300",
          offsetIndices: "010101101010101010101010101010101010101010101010101010101011212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/North_Dakota/New_Salem",
          untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|1tz5k0|2dvo0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a5c0|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "420|360|300",
          offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Nuuk",
          untils: "-rvumf4|x8nqz4|8zrk0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "206.9333|180|120",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Ojinaga",
          untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|xes2s0|afuk0|8a840|afuk0|8aaw0|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "417.6667|420|360|300",
          offsetIndices: "0121212323221212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Panama",
          untils: "-w757vc|Infinity",
          offsets: "319.6|300",
          offsetIndices: "01"
        }, {
          id: "America/Pangnirtung",
          untils: "-pkmlc0|b0ke00|1tzdw0|2dnc0|a7n3w0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|asw00|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7xc80|ast80|7x6o0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "0|240|180|120|300|360",
          offsetIndices: "012213121212121212121212121212121212114141414154414141414141414141414141414141414141414141414141414141414141414141414141414"
        }, {
          id: "America/Paramaribo",
          untils: "-usj4g8|cixc0c|5lydbk|kcrm6c|Infinity",
          offsets: "220.6667|220.8667|220.6|210|180",
          offsetIndices: "01234"
        }, {
          id: "America/Phoenix",
          untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|zjedo|4olg0|9et80|bs6lmc|9cyk0|Infinity",
          offsets: "420|360",
          offsetIndices: "01010101010"
        }, {
          id: "America/Port_of_Spain",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Port-au-Prince",
          untils: "-rmk9ac|ylcf6c|8zzw0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8aaw0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|3vpjw0|ast80|7x9g0|ast80|2stv00|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|pkg40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "289|300|240",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Porto_Acre",
          untils: "-t85fg0|99kak0|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|amves0|2t2t80|Infinity",
          offsets: "271.2|300|240",
          offsetIndices: "01212121212121212121212121212121"
        }, {
          id: "America/Porto_Velho",
          untils: "-t85g60|99k8i0|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|Infinity",
          offsets: "255.6|240|180",
          offsetIndices: "012121212121212121212121212121"
        }, {
          id: "America/Puerto_Rico",
          untils: "-efsnk0|1ppu40|2dnc0|Infinity",
          offsets: "240|180",
          offsetIndices: "0110"
        }, {
          id: "America/Punta_Arenas",
          untils: "-vauawq|3dlssq|157b7a|f4e0q|49hzba|aye0q|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|534ik0|351g0|2fnh80|2mg00|b73400|7k580|c8tg0|6h980|a31g0|7x3w0|asys0|7x3w0|b5xg0|7k580|ag040|8a2k0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|Infinity",
          offsets: "282.7667|300|240|180",
          offsetIndices: "0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "America/Rainy_River",
          untils: "-qzov40|a2vw0|bfxjw0|pmdk0|1tz8c0|2dsw0|ewvus0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300",
          offsetIndices: "010111010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Rankin_Inlet",
          untils: "-6s8lc0|4c6oo0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "0|360|240|300",
          offsetIndices: "012131313131313131313131313131313131313131313331313131313131313131313131313131313131313131313131313131313131313131313131"
        }, {
          id: "America/Recife",
          untils: "-t85ljc|99kb3c|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|514g40|7k580|biw40|cvw0|iq5g0|6h980|Infinity",
          offsets: "139.6|180|120",
          offsetIndices: "0121212121212121212121212121212121212121"
        }, {
          id: "America/Regina",
          untils: "-xkq9yc|6l1hmc|a2vw0|60enw0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|1b6840|9cyk0|9d440|8zzw0|9q2s0|9cyk0|9q2s0|9cyk0|9d440|9cyk0|66gc0|1tz5k0|2dvo0|a31g0|9cyk0|a31g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|tj1g0|9cyk0|9d440|Infinity",
          offsets: "418.6|420|360",
          offsetIndices: "012121212121212121212121221212121212121212121212121212"
        }, {
          id: "America/Resolute",
          untils: "-bnp9c0|97nco0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "0|360|240|300",
          offsetIndices: "012131313131313131313131313131313131313131313331313131313331313131313131313131313131313131313131313131313131313131313131"
        }, {
          id: "America/Rio_Branco",
          untils: "-t85fg0|99kak0|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|amves0|2t2t80|Infinity",
          offsets: "271.2|300|240",
          offsetIndices: "01212121212121212121212121212121"
        }, {
          id: "America/Rosario",
          untils: "-px7ys0|5iv8k0|67zw0|a4w40|73h80|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|cls40|66580|cls40|66580|cls40|66580|cls40|67zw0|6a040|hy7w0|6a040|xovw0|3uys0|18nbw0|b0dg0|8ve2k0|3uys0|3yik0|bqas0|71mk0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|7m2qs0|4tzw0|biw40|776k0|bvus0|6u7w0|bvxk0|6u540|bvus0|776k0|7qcg40|3yik0|b5xg0|7k580|Infinity",
          offsets: "256.8|240|180|120",
          offsetIndices: "01212121212121212121212121212121212121212123232323132323232"
        }, {
          id: "America/Santa_Isabel",
          untils: "-p1u1s0|11jrw0|1sns00|1sgdc0|71s40|9cyk0|5iidg0|1q6700|4lfk0|190g40|eluk0|2r4o80|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|84qys0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "468.0667|420|480",
          offsetIndices: "012121211212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "America/Santarem",
          untils: "-t85hvc|99ka7c|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|amves0|Infinity",
          offsets: "218.8|240|180",
          offsetIndices: "0121212121212121212121212121212"
        }, {
          id: "America/Santiago",
          untils: "-vauawq|3dlssq|157b7a|f4e0q|49hzba|aye0q|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|534ik0|351g0|229zw0|2gt80|awo40|2mg00|b73400|7k580|c8tg0|6h980|a31g0|7x3w0|asys0|7x3w0|b5xg0|7k580|ag040|8a2k0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|e1h80|4olg0|e1h80|4olg0|c8nw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|Infinity",
          offsets: "282.7667|300|240|180",
          offsetIndices: "010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "America/Santo_Domingo",
          untils: "-j6hz1c|hiw29c|67zw0|1dy840|62ha0|cnle0|4h2m0|elyq0|47ta0|ei9e0|4bim0|eek20|4dda0|ecpe0|dkmtg0|1stc0|Infinity",
          offsets: "280|300|240|270",
          offsetIndices: "01213131313131212"
        }, {
          id: "America/Sao_Paulo",
          untils: "-t85jd8|99k8x8|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5k02s0|6onw0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|cyqs0|64ak0|cls40|5rbw0|dbpg0|51ek0|dbpg0|6h980|c8tg0|6h980|c8tg0|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|cls40|64ak0|dfes0|5nmk0|c8tg0|6h980|dbpg0|5rbw0|bvus0|6h980|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6u7w0|c8tg0|64ak0|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|dbpg0|5ed80|Infinity",
          offsets: "186.4667|180|120",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Scoresbysund",
          untils: "-rvurxk|x8ntpk|902o0|9cvs0|9cyk0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "87.8667|120|60|0",
          offsetIndices: "0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "America/Shiprock",
          untils: "-r0epo0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|2vmk0|ataw40|1tz5k0|2dvo0|a7n9g0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "420|360",
          offsetIndices: "01010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Sitka",
          untils: "-ek1w80|1tz2s0|2dyg0|cawis0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1leo0|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "480|420|540",
          offsetIndices: "01101010101010101010101010101010122020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202"
        }, {
          id: "America/St_Barthelemy",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/St_Johns",
          untils: "-ris3ck|8bx80|ar440|a2vw0|9tjs0|53980|dkys0|9cyk0|9d440|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|9cyk0|9d440|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|7tmw0|1wfuk|8zzw0|a3480|7k580|b5xg0|7k580|b5xg0|7k580|biw40|776k0|biw40|7k580|b5xg0|7k580|b5xg0|1pb260|2dly0|biw40|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|biw40|7k580|ag040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a2lo|afuk0|8a840|asqg0|7xc80|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8tec|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "210.8667|150.8667|210|150|90",
          offsetIndices: "01010101010101010101010101010101010102323232323232323323232323232323232323232323232323232323232323232323232323232323232323232323232323232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "America/St_Kitts",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/St_Lucia",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/St_Thomas",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/St_Vincent",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Swift_Current",
          untils: "-xkq9d4|6l1h14|a2vw0|c5jxg0|1tz5k0|2dvo0|asys0|8n180|a31g0|7x3w0|asys0|7x3w0|asys0|7x3w0|3yles0|9cyk0|s36s0|9cyk0|9d440|7x3w0|b5xg0|7k580|5j4lg0|Infinity",
          offsets: "431.3333|420|360",
          offsetIndices: "012122121212121212121212"
        }, {
          id: "America/Tegucigalpa",
          untils: "-pfzh6k|yho0ik|7k580|b5xg0|7k580|96x1g0|4qak0|Infinity",
          offsets: "348.8667|360|300",
          offsetIndices: "01212121"
        }, {
          id: "America/Thule",
          untils: "-rvuj9g|12yzilg|9cyk0|9d440|9cyk0|9q2s0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "275.1333|240|180",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Thunder_Bay",
          untils: "-vbavc0|gr8qs0|1tzb40|2dq40|ctmlg0|9cyk0|9d440|9px80|9d440|9cyk0|s36s0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "0122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "America/Tijuana",
          untils: "-p1u1s0|11jrw0|1sns00|1sgdc0|71s40|9cyk0|5iidg0|1q6700|4lfk0|190g40|eluk0|2r4o80|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|84qys0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "468.0667|420|480",
          offsetIndices: "012121211212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "America/Toronto",
          untils: "-qzoxw0|a2vw0|7yx60|aqzy0|9q8c0|7jzo0|bw0c0|6bp80|cedg0|6h980|c8tg0|6h980|bvus0|776k0|biw40|776k0|biw40|776k0|biw40|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|xjeo0|1tzb40|2dq40|asys0|7x3w0|ast80|7x3w0|asys0|7x3w0|asys0|b5rw0|7xf00|ast80|7x9g0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "300|240",
          offsetIndices: "01010101010101010101010101010101010101010101011101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Tortola",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Vancouver",
          untils: "-qzopk0|a2vw0|c5jxg0|1tz2s0|2dyg0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "480|420",
          offsetIndices: "0101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Virgin",
          untils: "-u6m79w|Infinity",
          offsets: "246.0667|240",
          offsetIndices: "01"
        }, {
          id: "America/Whitehorse",
          untils: "-qzoms0|a2vw0|asys0|882c0|bmiwc0|1tz000|2e180|a7n3w0|9q000|tiyo0|6qp440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|Infinity",
          offsets: "540|480|420",
          offsetIndices: "01010110201212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "America/Winnipeg",
          untils: "-s0s7c0|7k580|tj700|a2vw0|9ok840|6u7w0|2a5hg0|1tz8c0|2dsw0|biw40|7x3w0|a31g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b7s40|7tek0|autg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9cyk0|9d440|7x3w0|1cm2s0|7k580|1cm2s0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300",
          offsetIndices: "010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Yakutat",
          untils: "-ek1tg0|1tz000|2e180|cawis0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1lbw0|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "540|480",
          offsetIndices: "01101010101010101010101010101010100101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "America/Yellowknife",
          untils: "-i9m2o0|3pk3o0|1tz5k0|2dvo0|a7n3w0|9q000|7k85k0|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "0|420|360|300",
          offsetIndices: "012213121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Antarctica/Casey",
          untils: "-irxc0|lag4o0|73bo0|uz1o0|60l80|2fnh80|pz9g0|Infinity",
          offsets: "0|-480|-660",
          offsetIndices: "01212121"
        }, {
          id: "Antarctica/Davis",
          untils: "-6rmdc0|42jdw0|27wgs0|l8uss0|7eqs0|unmk0|60qs0|Infinity",
          offsets: "0|-420|-300",
          offsetIndices: "01012121"
        }, {
          id: "Antarctica/DumontDUrville",
          untils: "-c05eo0|2mks80|2i72g0|Infinity",
          offsets: "0|-600",
          offsetIndices: "0101"
        }, {
          id: "Antarctica/Macquarie",
          untils: "-rsj4w0|8zzw0|11wqk0|f4kh40|a6p8g0|9d1c0|asw00|6uao0|bvs00|6uao0|bvs00|779c0|bvs00|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|b5uo0|7k800|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|bvs00|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x6o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|7x6o0|asw00|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-600|-660|0",
          offsetIndices: "0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101011"
        }, {
          id: "Antarctica/Mawson",
          untils: "-8aelc0|t22y80|Infinity",
          offsets: "0|-360|-300",
          offsetIndices: "012"
        }, {
          id: "Antarctica/McMurdo",
          untils: "-m01p20|64ak0|biw40|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|8a3y0|afyq0|8a3y0|afyq0|afvy0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|b5ta0|7k9e0|b5ta0|7x820|hsl2m0|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
          offsets: "-690|-750|-720|-780",
          offsetIndices: "01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "Antarctica/Palmer",
          untils: "-2lxhc0|31ho0|bqas0|71mk0|bqas0|8ovw0|9d440|9px80|9d440|9cyk0|9d440|28t6k0|51ek0|46b6s0|8c2s0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|Infinity",
          offsets: "0|180|240|120",
          offsetIndices: "0121212121213121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Antarctica/Rothera",
          untils: "3lxs00|Infinity",
          offsets: "0|180",
          offsetIndices: "01"
        }, {
          id: "Antarctica/South_Pole",
          untils: "-m01p20|64ak0|biw40|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|8a3y0|afyq0|8a3y0|afyq0|afvy0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|b5ta0|7k9e0|b5ta0|7x820|hsl2m0|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
          offsets: "-690|-750|-720|-780",
          offsetIndices: "01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "Antarctica/Syowa",
          untils: "-6qsqo0|Infinity",
          offsets: "0|-180",
          offsetIndices: "01"
        }, {
          id: "Antarctica/Troll",
          untils: "ibruo0|27pg0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-120",
          offsetIndices: "00101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Antarctica/Vostok",
          untils: "-6aaao0|Infinity",
          offsets: "0|-360",
          offsetIndices: "01"
        }, {
          id: "Arctic/Longyearbyen",
          untils: "-rzayo0|6qfs0|cgcqo0|15tsc0|7k800|9q000|9d1c0|9d1c0|9d1c0|9d1c0|70q5c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|b5uo0|7k800|7law00|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Asia/Aden",
          untils: "-bwgbbg|Infinity",
          offsets: "-186.8667|-180",
          offsetIndices: "01"
        }, {
          id: "Asia/Almaty",
          untils: "-nu1a90|37a0d0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|Infinity",
          offsets: "-307.8|-300|-360|-420",
          offsetIndices: "012323232323232323232321232323232323232323232323232"
        }, {
          id: "Asia/Amman",
          untils: "-kcrtbk|m566fk|60l80|awo40|7v980|awo40|7v980|ayis0|9gnw0|9b9g0|7v980|autg0|7v980|3e6840|9et80|9io40|9cyk0|9d440|9cyk0|9d440|9px80|ayis0|7rjw0|ag040|8a2k0|9zc40|8drw0|a31g0|8zzw0|9d440|9cyk0|9d440|8n180|ag040|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|epmo0|4deo0|9o5c0|9ew00|9b6o0|9ew00|9d1c0|9d1c0|9d1c0|asw00|7x6o0|afxc0|8n400|9d1c0|9d1c0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|wel80|51k40|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|Infinity",
          offsets: "-143.7333|-120|-180",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Asia/Anadyr",
          untils: "-nu1sv8|379zj8|qi27w0|9et80|is040|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|j3440|7k800|Infinity",
          offsets: "-709.9333|-720|-780|-840|-660",
          offsetIndices: "01232121212121212121214121212121212121212121212121212121212141"
        }, {
          id: "Asia/Aqtau",
          untils: "-nu15b4|379y74|qrh3w0|iruk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|Infinity",
          offsets: "-201.0667|-240|-300|-360",
          offsetIndices: "012323232323232323232123232312121212121212121212"
        }, {
          id: "Asia/Aqtobe",
          untils: "-nu16l4|379zh4|qi27w0|s6qk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|Infinity",
          offsets: "-228.6667|-240|-300|-360",
          offsetIndices: "0123232323232323232321232323232323232323232323232"
        }, {
          id: "Asia/Ashgabat",
          untils: "-nu16t8|379zp8|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|Infinity",
          offsets: "-233.5333|-240|-300|-360",
          offsetIndices: "0123232323232323232323212"
        }, {
          id: "Asia/Ashkhabad",
          untils: "-nu16t8|379zp8|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|Infinity",
          offsets: "-233.5333|-240|-300|-360",
          offsetIndices: "0123232323232323232323212"
        }, {
          id: "Asia/Atyrau",
          untils: "-nu15m8|37a1a8|qrh140|iruk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|j3440|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|Infinity",
          offsets: "-207.7333|-180|-300|-360|-240",
          offsetIndices: "01232323232323232323242323232323232324242424242"
        }, {
          id: "Asia/Baghdad",
          untils: "-r50g80|xkn3w0|7v980|9b9g0|9gnw0|9eys0|9et80|9d440|9b9g0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9f1k0|9ew00|9ew00|9ew00|9d1c0|9ew00|9d1c0|9ew00|9d1c0|9ew00|9ew00|9ew00|9d1c0|9ew00|9d1c0|9ew00|9d1c0|9ew00|9ew00|9ew00|9d1c0|9ew00|9d1c0|9ew00|9d1c0|9ew00|9ew00|9ew00|9d1c0|9ew00|9d1c0|9ew00|9d1c0|9ew00|Infinity",
          offsets: "-177.6|-180|-240",
          offsetIndices: "012121212121212121212121212121212121212121212121212121"
        }, {
          id: "Asia/Bahrain",
          untils: "-q3gmvk|rctnrk|Infinity",
          offsets: "-206.1333|-240|-180",
          offsetIndices: "012"
        }, {
          id: "Asia/Baku",
          untils: "-nu158c|h4tkwc|ckinw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|9d1c0|239ew0|asw00|7x3w0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-199.4|-180|-240|-300",
          offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
        }, {
          id: "Asia/Bangkok",
          untils: "-pysda4|Infinity",
          offsets: "-402.0667|-420",
          offsetIndices: "01"
        }, {
          id: "Asia/Barnaul",
          untils: "-q4ljic|5hu6uc|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|38fo0|64og0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|qnc40|Infinity",
          offsets: "-335|-360|-420|-480",
          offsetIndices: "0123232323232323232323212323232321212121212121212121212121212121212"
        }, {
          id: "Asia/Beirut",
          untils: "-pyzew0|aunw0|88dg0|9et80|8yas0|a2vw0|a31g0|7k580|hjqo40|7v980|awo40|7v980|awo40|7v980|ayis0|7v980|awo40|7v980|5lhs40|56yk0|awo40|7v980|awo40|7v980|awo40|7v980|ayis0|7v980|awo40|7v980|autg0|7v980|2wxus0|8n180|a4w40|8n180|a4w40|8n180|a4w40|8n180|bs5g0|71mk0|alk40|86d80|a4w40|8n180|a4w40|8n180|a6qs0|80t80|905g0|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|Infinity",
          offsets: "-120|-180",
          offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Asia/Bishkek",
          untils: "-nu19tc|379zxc|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|h8dc0|bkl80|8n180|a31g0|8n180|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|9db20|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|Infinity",
          offsets: "-298.4|-300|-360|-420",
          offsetIndices: "012323232323232323232321212121212121212121212121212"
        }, {
          id: "Asia/Brunei",
          untils: "-mvofy4|3khxs4|Infinity",
          offsets: "-459.6667|-450|-480",
          offsetIndices: "012"
        }, {
          id: "Asia/Calcutta",
          untils: "-xehava|innm9a|bmfw0|5lxg0|1mn180|Infinity",
          offsets: "-321.1667|-330|-390",
          offsetIndices: "012121"
        }, {
          id: "Asia/Chita",
          untils: "-q4cfog|5hkxgg|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|qnew0|Infinity",
          offsets: "-453.8667|-480|-540|-600",
          offsetIndices: "012323232323232323232321232323232323232323232323232323232323232312"
        }, {
          id: "Asia/Choibalsan",
          untils: "-xmct7c|11sndrc|2qk2k0|9eqg0|9eys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|1ckdo0|7x3w0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|s6qk0|3nc0c0|9ct00|9d9o0|9ct00|Infinity",
          offsets: "-458|-420|-480|-600|-540",
          offsetIndices: "0123434343434343434343434343434343434343434343424242"
        }, {
          id: "Asia/Chongqing",
          untils: "-qh00w0|8sl80|asbpg0|6w2k0|7ves0|bxjw0|4mqs0|1vduk0|d4as0|75bw0|a31g0|aaak0|9d440|7v980|awo40|1dx80|j9xpo0|6u7w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
          offsets: "-480|-540",
          offsetIndices: "01010101010101010101010101010"
        }, {
          id: "Asia/Chungking",
          untils: "-qh00w0|8sl80|asbpg0|6w2k0|7ves0|bxjw0|4mqs0|1vduk0|d4as0|75bw0|a31g0|aaak0|9d440|7v980|awo40|1dx80|j9xpo0|6u7w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
          offsets: "-480|-540",
          offsetIndices: "01010101010101010101010101010"
        }, {
          id: "Asia/Colombo",
          untils: "-xehask|isle6k|cajy0|1mp2u0|qetjw0|7x5a0|4xvqq0|Infinity",
          offsets: "-319.5333|-330|-360|-390",
          offsetIndices: "01231321"
        }, {
          id: "Asia/Dacca",
          untils: "-eqtpow|bmgyw|5lxg0|4qknw0|u4ijy0|a1400|Infinity",
          offsets: "-353.3333|-390|-330|-360|-420",
          offsetIndices: "0121343"
        }, {
          id: "Asia/Damascus",
          untils: "-q3gk20|5k6q0|8n180|a31g0|8n180|a31g0|8n180|a31g0|8zzw0|k4hk40|7yyk0|awo40|7tek0|b0dg0|7v980|awo40|7tek0|alk40|887w0|awo40|7v980|ayis0|7v980|awo40|7v980|awo40|7v980|awo40|7v980|ayis0|7v980|awo40|7v980|awo40|7v980|awo40|7v980|ayis0|7v980|awo40|6bp80|cg840|6bp80|2eh1g0|8zzw0|9ts40|8zzw0|pvk40|c33w0|7cw40|cjrw0|6zxg0|btuk0|7rpg0|9gnw0|9d440|9cyk0|9et80|9et80|9rxg0|91uk0|92040|9et80|9o840|9et80|9d440|9et80|9eys0|9et80|9b9g0|9gnw0|99es0|9iik0|9d440|9et80|9eys0|9et80|9d440|9et80|9d440|9et80|9d440|9et80|9eys0|9et80|9d440|9et80|9d440|8y580|9q2s0|b5rw0|7x9g0|aunw0|7ig40|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|Infinity",
          offsets: "-145.2|-120|-180",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Asia/Dhaka",
          untils: "-eqtpow|bmgyw|5lxg0|4qknw0|u4ijy0|a1400|Infinity",
          offsets: "-353.3333|-390|-330|-360|-420",
          offsetIndices: "0121343"
        }, {
          id: "Asia/Dili",
          untils: "-u9s4l8|fqcu98|hufs00|cpz440|Infinity",
          offsets: "-502.3333|-480|-540",
          offsetIndices: "01212"
        }, {
          id: "Asia/Dubai",
          untils: "-q3gnko|Infinity",
          offsets: "-221.2|-240",
          offsetIndices: "01"
        }, {
          id: "Asia/Dushanbe",
          untils: "-nu18qo|379yuo|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|hp440|Infinity",
          offsets: "-275.2|-300|-360|-420",
          offsetIndices: "012323232323232323232321"
        }, {
          id: "Asia/Famagusta",
          untils: "-p4bqac|rvhy2c|9cyk0|b42s0|7nuk0|8yas0|8zzw0|9q2s0|9et80|9b9g0|9cyk0|9q2s0|8zzw0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|at4c0|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|8h8w0|leog0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-135.8|-120|-180",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212212121212121212121212121212121212121212121"
        }, {
          id: "Asia/Gaza",
          untils: "-ffv9k0|19f3w0|7rv00|b02c0|7tk40|b07w0|8jhg0|a8lg0|8jhg0|a8ac0|5hoqs0|7el80|awo40|7v980|awqw0|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7tk40|ayd80|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7ves0|awik0|1sns0|3p6is0|51ek0|9q2s0|6u7w0|2khpg0|25s00|1weyo0|5reo0|bxmo0|7x3w0|cls40|5rbw0|bbhg0|7rjw0|asys0|7k580|c8tg0|6h980|ag040|7x3w0|asys0|8a2k0|asys0|8a2k0|ap9g0|80t80|ap9g0|7nuk0|b2840|80t80|66as0|4vxc0|8n400|a2yo0|8n400|a2yo0|8n400|asw00|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|8n400|a2yo0|8ulg0|97ek0|8y580|9ts40|8hms0|a4qk0|7x3w0|asys0|8a5c0|ahs1o|71mic|bzk5o|69uic|cg840|902o0|9q000|9cyk0|9d440|ast80|7z440|aqyk0|7z6w0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|Infinity",
          offsets: "-120|-180",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010100101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Asia/Harbin",
          untils: "-qh00w0|8sl80|asbpg0|6w2k0|7ves0|bxjw0|4mqs0|1vduk0|d4as0|75bw0|a31g0|aaak0|9d440|7v980|awo40|1dx80|j9xpo0|6u7w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
          offsets: "-480|-540",
          offsetIndices: "01010101010101010101010101010"
        }, {
          id: "Asia/Hebron",
          untils: "-ffv9k0|19f3w0|7rv00|b02c0|7tk40|b07w0|8jhg0|a8lg0|8jhg0|a8ac0|5hoqs0|7el80|awo40|7v980|awqw0|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7tk40|ayd80|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7ves0|awik0|1sns0|3p6is0|51ek0|9q2s0|6u7w0|2khpg0|25s00|1weyo0|5reo0|bxmo0|7x3w0|cls40|5rbw0|bbhg0|7rjw0|asys0|7k580|c8tg0|6h980|ag040|7x3w0|asys0|8a2k0|asys0|8a2k0|ap9g0|80t80|ap9g0|7nuk0|b2840|80t80|66as0|4vxc0|8n400|a2yo0|8n400|a2yo0|8n400|asw00|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|8n400|a2yo0|8ulg0|97ek0|8y580|9ts40|8hms0|a4qk0|82nw0|anes0|8a5c0|afxc0|73h80|bzk5o|69uic|1hs40|1lbw0|9d440|902o0|9q000|9cyk0|9d440|ast80|7z440|aqyk0|7z6w0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|7idc0|b7pc0|7vc00|auqo0|7vc00|auqo0|7vc00|auqo0|7vc00|b7pc0|Infinity",
          offsets: "-120|-180",
          offsetIndices: "010101010101010101010101010101010101010101010101010101010101010010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Asia/Ho_Chi_Minh",
          untils: "-x56934|2isioa|gj25iu|15ct80|8so00|tmtk0|4azjw0|2cmao0|8285c0|Infinity",
          offsets: "-426.6667|-426.5|-420|-480|-540",
          offsetIndices: "0123423232"
        }, {
          id: "Asia/Hong_Kong",
          untils: "-y0i0s0|j44dk0|5k000|4d4y0|2195i0|7x3w0|bj320|6uao0|bvs00|7x6o0|9d1c0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|ast80|77c40|biqk0|77c40|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|bvp80|6udg0|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|8n6s0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9cyk0|1c9440|8a2k0|Infinity",
          offsets: "-456.7|-480|-540|-510",
          offsetIndices: "0123212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Asia/Hovd",
          untils: "-xmcoz0|11sncb0|2qk2k0|9et80|9eys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|1ckdo0|7x3w0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|4fio40|9ct00|9d9o0|9ct00|Infinity",
          offsets: "-366.6|-360|-420|-480",
          offsetIndices: "012323232323232323232323232323232323232323232323232"
        }, {
          id: "Asia/Irkutsk",
          untils: "-q28gn5|5fh175|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-417.0833|-420|-480|-540",
          offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
        }, {
          id: "Asia/Istanbul",
          untils: "-ux9xew|2wvx6w|7v980|1tjc40|aunw0|88dg0|9et80|8yas0|a2vw0|tzpg0|79180|awo40|7v980|7p4040|4zjw0|2vs40|f4d80|9vms0|1u5ek0|c5440|69uk0|acas0|8n180|a31g0|8n180|9q2s0|8zzw0|a31g0|8zzw0|a31g0|8n180|5md9g0|o9zw0|a6qs0|75bw0|4iwyw0|7x6o0|7kas0|b5rw0|75hg0|bkl80|77c40|biqk0|7x9g0|a2vw0|8n6s0|4iqc0|2nkw80|38l80|kdes0|8qtc0|8a5c0|9ew00|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|902o0|9q000|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7kdk0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7m2o0|b4000|7k800|b5uo0|7x6o0|asw00|7z1c0|ar1c0|7x6o0|bitc0|779c0|8fe80|Infinity",
          offsets: "-116.9333|-120|-180|-240",
          offsetIndices: "0121212121212121212121212121212121212121212121223212121212121212121212121212121212121212121212121212121212121212122"
        }, {
          id: "Asia/Jakarta",
          untils: "-o0bdpc|4lzxc0|4wdzjc|1tu960|1cx860|11jta0|74uc20|Infinity",
          offsets: "-427.2|-440|-450|-540|-480|-420",
          offsetIndices: "01232425"
        }, {
          id: "Asia/Jayapura",
          untils: "-jebm20|66bqe0|a37vy0|Infinity",
          offsets: "-562.8|-540|-570",
          offsetIndices: "0121"
        }, {
          id: "Asia/Jerusalem",
          untils: "-r50eig|bp54yg|19f3w0|7rv00|b02c0|7tk40|b07w0|8jhg0|a8lg0|8jhg0|a8ac0|t9s40|56vs0|35700|9b3w0|9gtg0|8jbw0|7tmw0|a6ig0|biyw0|8a5c0|9d1c0|902o0|7x6o0|e1eg0|4ofw0|dzxo0|4q500|doo40|64iw0|auqo0|7i500|8rfms0|51ek0|9q2s0|6u7w0|2khpg0|25s00|1weyo0|5reo0|bxmo0|7x3w0|cls40|5rbw0|bbhg0|7rjw0|asys0|7k580|c8tg0|6h980|ag040|7x3w0|asys0|8a2k0|asys0|8a2k0|ap9g0|80t80|ap9g0|7nuk0|b2840|80t80|9zc40|9iik0|9kis0|93p80|9mdg0|8qqk0|apf00|7x3w0|biw40|8zx40|9io40|8n180|9kis0|9vh80|8ulg0|9px80|9mdg0|8n180|9tuw0|9tmk0|8wg40|9gnw0|99es0|8qqk0|9zc40|9tmk0|8wg40|9gnw0|99es0|8qqk0|acas0|9gnw0|99es0|93p80|9mdg0|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|Infinity",
          offsets: "-140.6667|-120|-180|-240",
          offsetIndices: "012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Asia/Kabul",
          untils: "-d1pkg0|Infinity",
          offsets: "-240|-270",
          offsetIndices: "01"
        }, {
          id: "Asia/Kamchatka",
          untils: "-olrupo|3z045o|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|j3440|7k800|Infinity",
          offsets: "-634.6|-660|-720|-780",
          offsetIndices: "012323232323232323232321232323232323232323232323232323232323212"
        }, {
          id: "Asia/Karachi",
          untils: "-wvpb30|im3zt0|1mn180|33xpg0|a63o20|g72qo0|9cyk0|2y85g0|7v980|8hms0|aaak0|Infinity",
          offsets: "-268.2|-330|-390|-300|-360",
          offsetIndices: "012133434343"
        }, {
          id: "Asia/Kashgar",
          untils: "-lx5pjw|Infinity",
          offsets: "-350.3333|-360",
          offsetIndices: "01"
        }, {
          id: "Asia/Kathmandu",
          untils: "-q3gt4s|yg2lus|Infinity",
          offsets: "-341.2667|-330|-345",
          offsetIndices: "012"
        }, {
          id: "Asia/Katmandu",
          untils: "-q3gt4s|yg2lus|Infinity",
          offsets: "-341.2667|-330|-345",
          offsetIndices: "012"
        }, {
          id: "Asia/Khandyga",
          untils: "-q4cjrp|5hl1jp|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|3fx40|4h6s0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|8ql00|1mlho0|Infinity",
          offsets: "-542.2167|-480|-540|-600|-660",
          offsetIndices: "0123232323232323232323212323232323232323232323232343434343434343432"
        }, {
          id: "Asia/Kolkata",
          untils: "-xehava|innm9a|bmfw0|5lxg0|1mn180|Infinity",
          offsets: "-321.1667|-330|-390",
          offsetIndices: "012121"
        }, {
          id: "Asia/Krasnoyarsk",
          untils: "-q37l72|5gg8j2|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-371.4333|-360|-420|-480",
          offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
        }, {
          id: "Asia/Kuala_Lumpur",
          untils: "-xphpwd|eeb94d|4it32o|8n3jc|1v2p60|iy3o60|Infinity",
          offsets: "-415.4167|-420|-440|-450|-540|-480",
          offsetIndices: "0123435"
        }, {
          id: "Asia/Kuching",
          untils: "-mvof3k|3khwxk|1epvy0|4ohqo|e5a9c|4ohqo|e3flc|4ohqo|e3flc|4ohqo|e3flc|4ohqo|e5a9c|4ohqo|e3flc|4ohqo|3ajlc|1v2qk0|Infinity",
          offsets: "-441.3333|-450|-480|-500|-540",
          offsetIndices: "0123232323232323242"
        }, {
          id: "Asia/Kuwait",
          untils: "-bwgbbg|Infinity",
          offsets: "-186.8667|-180",
          offsetIndices: "01"
        }, {
          id: "Asia/Macao",
          untils: "-y0i2cy|jdvyoy|6onw0|ac580|8fs40|7v980|11luw0|awlc0|7vc00|ac800|bko00|7x6o0|9d1c0|7vc00|asw00|7x6o0|asw00|7x6o0|auqo0|88ao0|asw00|7x6o0|asw00|779c0|bitc0|779c0|bvs00|6uao0|bw1q0|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|bvp80|6udg0|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|8n6s0|9cvs0|9d6w0|9cvs0|9d6w0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9cyk0|1c9440|8a2k0|Infinity",
          offsets: "-454.1667|-480|-540|-600",
          offsetIndices: "012323212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Asia/Macau",
          untils: "-y0i2cy|jdvyoy|6onw0|ac580|8fs40|7v980|11luw0|awlc0|7vc00|ac800|bko00|7x6o0|9d1c0|7vc00|asw00|7x6o0|asw00|7x6o0|auqo0|88ao0|asw00|7x6o0|asw00|779c0|bitc0|779c0|bvs00|6uao0|bw1q0|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|bvp80|6udg0|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|8n6s0|9cvs0|9d6w0|9cvs0|9d6w0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9cyk0|1c9440|8a2k0|Infinity",
          offsets: "-454.1667|-480|-540|-600",
          offsetIndices: "012323212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Asia/Magadan",
          untils: "-nu1nxc|37a05c|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|s39k0|Infinity",
          offsets: "-603.2|-600|-660|-720",
          offsetIndices: "012323232323232323232321232323232323232323232323232323232323232312"
        }, {
          id: "Asia/Makassar",
          untils: "-q3gzg0|6p5hc0|4u87w0|1w02k0|Infinity",
          offsets: "-477.6|-480|-540",
          offsetIndices: "00121"
        }, {
          id: "Asia/Manila",
          untils: "-hb5y80|4qak0|2qidg0|1b2d80|4xf440|442k0|cdqdg0|9et80|Infinity",
          offsets: "-480|-540",
          offsetIndices: "010101010"
        }, {
          id: "Asia/Muscat",
          untils: "-q3gnko|Infinity",
          offsets: "-221.2|-240",
          offsetIndices: "01"
        }, {
          id: "Asia/Nicosia",
          untils: "-p4bq6g|rvhxyg|9cyk0|b42s0|7nuk0|8yas0|8zzw0|9q2s0|9et80|9b9g0|9cyk0|9q2s0|8zzw0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|at4c0|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-133.4667|-120|-180",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Asia/Novokuznetsk",
          untils: "-nu36tc|37bu5c|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|j3440|7k800|Infinity",
          offsets: "-348.8|-360|-420|-480",
          offsetIndices: "012323232323232323232321232323232323232323232323232323232323212"
        }, {
          id: "Asia/Novosibirsk",
          untils: "-q4do0s|5hmbcs|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|2vh00|6hn40|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|wrpg0|Infinity",
          offsets: "-331.6667|-360|-420|-480",
          offsetIndices: "0123232323232323232323212323212121212121212121212121212121212121212"
        }, {
          id: "Asia/Omsk",
          untils: "-q5xmx6|5j6d16|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-293.5|-300|-360|-420",
          offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
        }, {
          id: "Asia/Oral",
          untils: "-nu15ic|37a16c|qi2540|s6qk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9q000|9d1c0|9d1c0|5reo0|cyo00|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|Infinity",
          offsets: "-205.4|-180|-300|-360|-240",
          offsetIndices: "01232323232323232424242424242424242424242424242"
        }, {
          id: "Asia/Phnom_Penh",
          untils: "-pysda4|Infinity",
          offsets: "-402.0667|-420",
          offsetIndices: "01"
        }, {
          id: "Asia/Pontianak",
          untils: "-w6piww|cse2o0|4tnu2w|1wkei0|1cx860|11jta0|74uc20|cixam0|Infinity",
          offsets: "-437.3333|-450|-540|-480|-420",
          offsetIndices: "001213134"
        }, {
          id: "Asia/Pyongyang",
          untils: "-w895yc|1yh10c|hk5da0|10ipmo0|1f4qo0|Infinity",
          offsets: "-503|-510|-540",
          offsetIndices: "012212"
        }, {
          id: "Asia/Qatar",
          untils: "-q3gmvk|rctnrk|Infinity",
          offsets: "-206.1333|-240|-180",
          offsetIndices: "012"
        }, {
          id: "Asia/Qostanay",
          untils: "-nu17s4|37a0o4|qi27w0|s6qk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|Infinity",
          offsets: "-254.4667|-240|-300|-360",
          offsetIndices: "012323232323232323232123232323232323232323232323"
        }, {
          id: "Asia/Qyzylorda",
          untils: "-nu184g|37a10g|qi27w0|s6qk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|ohhc0|cyo00|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|7osl00|Infinity",
          offsets: "-261.8667|-240|-300|-360",
          offsetIndices: "01232323232323232323232323232323232323232323232"
        }, {
          id: "Asia/Rangoon",
          untils: "-q3gv5b|bnjp3b|1kh520|Infinity",
          offsets: "-384.7833|-390|-540",
          offsetIndices: "0121"
        }, {
          id: "Asia/Riyadh",
          untils: "-bwgbbg|Infinity",
          offsets: "-186.8667|-180",
          offsetIndices: "01"
        }, {
          id: "Asia/Saigon",
          untils: "-x56934|2isioa|gj25iu|15ct80|8so00|tmtk0|4azjw0|2cmao0|8285c0|Infinity",
          offsets: "-426.6667|-426.5|-420|-480|-540",
          offsetIndices: "0123423232"
        }, {
          id: "Asia/Sakhalin",
          untils: "-xl87rc|kvnarc|ikvh40|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|iq5g0|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|qnc40|Infinity",
          offsets: "-570.8|-540|-660|-720|-600",
          offsetIndices: "01232323232323232323232423232323232424242424242424242424242424242"
        }, {
          id: "Asia/Samarkand",
          untils: "-nu18eh|37a1ah|qi27w0|s6qk0|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|Infinity",
          offsets: "-267.8833|-240|-300|-360",
          offsetIndices: "01232323232323232323232"
        }, {
          id: "Asia/Seoul",
          untils: "-w8966g|1yh18g|hkx5a0|1faao0|5cik0|ae5g0|8a2k0|ae5g0|8bx80|c8tg0|6h980|1bj6s0|l3aq0|6j3w0|d2g40|6u7w0|b5xg0|776k0|biw40|776k0|biw40|776k0|biw40|776k0|grs40|dfqxi0|7x6o0|asw00|7x6o0|Infinity",
          offsets: "-507.8667|-510|-540|-600|-570",
          offsetIndices: "012232323232141414141414123232"
        }, {
          id: "Asia/Shanghai",
          untils: "-qh00w0|8sl80|asbpg0|6w2k0|7ves0|bxjw0|4mqs0|1vduk0|d4as0|75bw0|a31g0|aaak0|9d440|7v980|awo40|1dx80|j9xpo0|6u7w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
          offsets: "-480|-540",
          offsetIndices: "01010101010101010101010101010"
        }, {
          id: "Asia/Singapore",
          untils: "-xphpwd|eeb94d|4it32o|8n3jc|1v2p60|iy3o60|Infinity",
          offsets: "-415.4167|-420|-440|-450|-540|-480",
          offsetIndices: "0123435"
        }, {
          id: "Asia/Srednekolymsk",
          untils: "-nu1ogs|37a0os|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-614.8667|-600|-660|-720",
          offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
        }, {
          id: "Asia/Taipei",
          untils: "-gtzfk0|45slc0|c51c0|75bw0|a31g0|aaak0|9d440|7v980|awo40|7v980|awo40|7v980|awo40|7v980|7tk40|clmk0|7rpg0|b07w0|7rpg0|b07w0|7rpg0|9et80|9eys0|9et80|9d440|9et80|9d440|9et80|9d440|9et80|cjxg0|69uk0|ci2s0|69uk0|6its40|9et80|9d440|9et80|1yf9g0|4qak0|Infinity",
          offsets: "-480|-540",
          offsetIndices: "01010101010101010101010101010101010101010"
        }, {
          id: "Asia/Tashkent",
          untils: "-nu18tz|379yxz|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|Infinity",
          offsets: "-277.1833|-300|-360|-420",
          offsetIndices: "012323232323232323232321"
        }, {
          id: "Asia/Tbilisi",
          untils: "-nu14an|h4tjyn|ckinw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|9cvs0|9cyk0|9d440|9cyk0|9d440|ipzw0|9cyk0|9q2s0|tivw0|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|4ofw0|6hn40|7k800|Infinity",
          offsets: "-179.1833|-180|-240|-300",
          offsetIndices: "0123232323232323232323212121232323232323232323212"
        }, {
          id: "Asia/Tehran",
          untils: "-s6m6uw|fnolc0|gm3h4w|777y0|b07w0|3pes0|42c20|9cyk0|9gtg0|9kd80|5ja5g0|7avw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|1av440|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|Infinity",
          offsets: "-205.7333|-210|-240|-300|-270",
          offsetIndices: "00123214141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141"
        }, {
          id: "Asia/Tel_Aviv",
          untils: "-r50eig|bp54yg|19f3w0|7rv00|b02c0|7tk40|b07w0|8jhg0|a8lg0|8jhg0|a8ac0|t9s40|56vs0|35700|9b3w0|9gtg0|8jbw0|7tmw0|a6ig0|biyw0|8a5c0|9d1c0|902o0|7x6o0|e1eg0|4ofw0|dzxo0|4q500|doo40|64iw0|auqo0|7i500|8rfms0|51ek0|9q2s0|6u7w0|2khpg0|25s00|1weyo0|5reo0|bxmo0|7x3w0|cls40|5rbw0|bbhg0|7rjw0|asys0|7k580|c8tg0|6h980|ag040|7x3w0|asys0|8a2k0|asys0|8a2k0|ap9g0|80t80|ap9g0|7nuk0|b2840|80t80|9zc40|9iik0|9kis0|93p80|9mdg0|8qqk0|apf00|7x3w0|biw40|8zx40|9io40|8n180|9kis0|9vh80|8ulg0|9px80|9mdg0|8n180|9tuw0|9tmk0|8wg40|9gnw0|99es0|8qqk0|9zc40|9tmk0|8wg40|9gnw0|99es0|8qqk0|acas0|9gnw0|99es0|93p80|9mdg0|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|Infinity",
          offsets: "-140.6667|-120|-180|-240",
          offsetIndices: "012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Asia/Thimbu",
          untils: "-bojclo|kxymno|Infinity",
          offsets: "-358.6|-330|-360",
          offsetIndices: "012"
        }, {
          id: "Asia/Thimphu",
          untils: "-bojclo|kxymno|Infinity",
          offsets: "-358.6|-330|-360",
          offsetIndices: "012"
        }, {
          id: "Asia/Tokyo",
          untils: "-bb4900|6uao0|afxc0|8a5c0|c8qo0|6hc00|c8qo0|6hc00|Infinity",
          offsets: "-540|-600",
          offsetIndices: "010101010"
        }, {
          id: "Asia/Tomsk",
          untils: "-q3zbqf|5h7z2f|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|1leo0|97k40|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|tw040|Infinity",
          offsets: "-339.85|-360|-420|-480",
          offsetIndices: "0123232323232323232323212323232323232323232323212121212121212121212"
        }, {
          id: "Asia/Ujung_Pandang",
          untils: "-q3gzg0|6p5hc0|4u87w0|1w02k0|Infinity",
          offsets: "-477.6|-480|-540",
          offsetIndices: "00121"
        }, {
          id: "Asia/Ulaanbaatar",
          untils: "-xmcrsk|11sncck|2qk2k0|9et80|9eys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|1ckdo0|7x3w0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|4fio40|9ct00|9d9o0|9ct00|Infinity",
          offsets: "-427.5333|-420|-480|-540",
          offsetIndices: "012323232323232323232323232323232323232323232323232"
        }, {
          id: "Asia/Ulan_Bator",
          untils: "-xmcrsk|11sncck|2qk2k0|9et80|9eys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|1ckdo0|7x3w0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|4fio40|9ct00|9d9o0|9ct00|Infinity",
          offsets: "-427.5333|-420|-480|-540",
          offsetIndices: "012323232323232323232323232323232323232323232323232"
        }, {
          id: "Asia/Urumqi",
          untils: "-lx5pjw|Infinity",
          offsets: "-350.3333|-360",
          offsetIndices: "01"
        }, {
          id: "Asia/Ust-Nera",
          untils: "-q4cl6u|5hl2yu|qi27w0|9eno0|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|8ql00|1mlho0|Infinity",
          offsets: "-572.9|-480|-540|-720|-660|-600",
          offsetIndices: "012343434343434343434345434343434343434343434343434343434343434345"
        }, {
          id: "Asia/Vientiane",
          untils: "-pysda4|Infinity",
          offsets: "-402.0667|-420",
          offsetIndices: "01"
        }, {
          id: "Asia/Vladivostok",
          untils: "-oligf7|3yqvf7|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-527.5167|-540|-600|-660",
          offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
        }, {
          id: "Asia/Yakutsk",
          untils: "-q4cioy|5hl0gy|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-518.9667|-480|-540|-600",
          offsetIndices: "01232323232323232323232123232323232323232323232323232323232323232"
        }, {
          id: "Asia/Yangon",
          untils: "-q3gv5b|bnjp3b|1kh520|Infinity",
          offsets: "-384.7833|-390|-540",
          offsetIndices: "0121"
        }, {
          id: "Asia/Yekaterinburg",
          untils: "-rx5hw9|1kybx4|5pfyv5|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-242.55|-225.0833|-240|-300|-360",
          offsetIndices: "012343434343434343434343234343434343434343434343434343434343434343"
        }, {
          id: "Asia/Yerevan",
          untils: "-nu148o|h4tjwo|ckinw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|iq5g0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|11t180|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|Infinity",
          offsets: "-178|-180|-240|-300",
          offsetIndices: "0123232323232323232323212121212323232323232323232323232323232"
        }, {
          id: "Atlantic/Azores",
          untils: "-u9rbs0|2bufw0|6zxg0|66580|bq800|73k00|bodc0|71pc0|bq800|73k00|bq800|71pc0|bq800|1b2g00|9b6o0|saio0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|st1c0|8n400|9d1c0|9d1c0|sg2o0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|bitc0|9d1c0|9ew00|88ao0|25p80|5reo0|3lpg0|779c0|1sqk0|6uao0|38qs0|6uao0|25p80|6hc00|38qs0|6uao0|25p80|6hc00|38qs0|8a5c0|9d1c0|9d9o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|s3400|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|5qbjo0|9d1c0|9q000|9d1c0|9d1c0|9d440|9cyk0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9cyk0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9cyk0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "114.5333|120|60|0",
          offsetIndices: "01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323233323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Atlantic/Bermuda",
          untils: "-kvj2fu|n4pr3u|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "259.3|240|180",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Atlantic/Canary",
          untils: "-oytbtc|ctvupc|hhq7s0|905g0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "61.6|60|0|-60",
          offsetIndices: "01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Atlantic/Cape_Verde",
          untils: "-u9rbs0|g06lc0|1mn180|fpqwc0|Infinity",
          offsets: "94.0667|120|60",
          offsetIndices: "01212"
        }, {
          id: "Atlantic/Faeroe",
          untils: "-wcehew|127keuw|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "27.0667|0|-60",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Atlantic/Faroe",
          untils: "-wcehew|127keuw|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "27.0667|0|-60",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Atlantic/Jan_Mayen",
          untils: "-rzayo0|6qfs0|cgcqo0|15tsc0|7k800|9q000|9d1c0|9d1c0|9d1c0|9d1c0|70q5c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|b5uo0|7k800|7law00|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Atlantic/Madeira",
          untils: "-u9rek0|2bufw0|6zxg0|66580|bq800|73k00|bodc0|71pc0|bq800|73k00|bq800|71pc0|bq800|1b2g00|9b6o0|saio0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|st1c0|8n400|9d1c0|9d1c0|sg2o0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|bitc0|9d1c0|9ew00|88ao0|25p80|5reo0|3lpg0|779c0|1sqk0|6uao0|38qs0|6uao0|25p80|6hc00|38qs0|6uao0|25p80|6hc00|38qs0|8a5c0|9d1c0|9d9o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|s3400|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|5qbjo0|9d1c0|9q000|9d1c0|9d1c0|9d440|9cyk0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9cyk0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "67.6|60|0|-60",
          offsetIndices: "01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Atlantic/Reykjavik",
          untils: "-wcwx9c|4rpd9c|ci2s0|69uk0|du840|4xp80|du840|p7bw0|4w040|9bdzw0|9d6w0|64g40|cyl80|64dc0|clpc0|6hc00|bvs00|6uao0|bvs00|6uao0|bvs00|6uao0|c8qo0|6hc00|c8qo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|Infinity",
          offsets: "88|60|0",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "Atlantic/South_Georgia",
          untils: "Infinity",
          offsets: "120",
          offsetIndices: "0"
        }, {
          id: "Atlantic/St_Helena",
          untils: "-u9rgl4|Infinity",
          offsets: "16.1333|0",
          offsetIndices: "01"
        }, {
          id: "Atlantic/Stanley",
          untils: "-u63pac|dbvxqc|8zzw0|9q2s0|8zzw0|a31g0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|4xp80|l1pus0|7k580|b5rw0|77c40|biqk0|id6s0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|biqk0|77c40|biqk0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|biqk0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5rw0|7kas0|b5xg0|77c40|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|bvp80|77c40|biqk0|77c40|biqk0|77c40|Infinity",
          offsets: "231.4|240|180|120",
          offsetIndices: "012121212121212323212121212121212121212121212121212121212121212121212"
        }, {
          id: "Australia/ACT",
          untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-600|-660",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/Adelaide",
          untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|6hc00|c8qo0|7k800|b5uo0|6uao0|c8qo0|779c0|bitc0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-570|-630",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/Brisbane",
          untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|97zuo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|Infinity",
          offsets: "-600|-660",
          offsetIndices: "01010101010101010"
        }, {
          id: "Australia/Broken_Hill",
          untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-570|-630",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/Canberra",
          untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-600|-660",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/Currie",
          untils: "-rsj4w0|8zzw0|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|b5uo0|7k800|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|bvs00|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x6o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|7x6o0|asw00|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-600|-660",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/Darwin",
          untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|Infinity",
          offsets: "-570|-630",
          offsetIndices: "010101010"
        }, {
          id: "Australia/Eucla",
          untils: "-rnstlc|49s2c|cxfms0|4h180|9d440|9cyk0|ghf1g0|6hc00|4ir9c0|6hc00|40r400|5eg00|7p9hc0|5reo0|b5uo0|7x6o0|asw00|7x6o0|Infinity",
          offsets: "-525|-585",
          offsetIndices: "0101010101010101010"
        }, {
          id: "Australia/Hobart",
          untils: "-rsj4w0|8zzw0|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|c9tms0|9d1c0|asw00|6uao0|bvs00|6uao0|bvs00|779c0|bvs00|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|b5uo0|7k800|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|bvs00|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x6o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|7x6o0|asw00|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-600|-660",
          offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/LHI",
          untils: "5tp880|c8uu0|6u7w0|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|777y0|b5w20|7k6m0|biuq0|7k6m0|biuq0|777y0|biuq0|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|7x5a0|b5w20|7k6m0|7x820|asum0|b5w20|7x5a0|asxe0|7x5a0|asxe0|7x5a0|b5w20|7k6m0|b5w20|7x5a0|asxe0|7k6m0|b5w20|8a3y0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9pym0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|Infinity",
          offsets: "-600|-630|-690|-660",
          offsetIndices: "0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313"
        }, {
          id: "Australia/Lindeman",
          untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|97zuo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|Infinity",
          offsets: "-600|-660",
          offsetIndices: "010101010101010101010"
        }, {
          id: "Australia/Lord_Howe",
          untils: "5tp880|c8uu0|6u7w0|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|777y0|b5w20|7k6m0|biuq0|7k6m0|biuq0|777y0|biuq0|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|7x5a0|b5w20|7k6m0|7x820|asum0|b5w20|7x5a0|asxe0|7x5a0|asxe0|7x5a0|b5w20|7k6m0|b5w20|7x5a0|asxe0|7k6m0|b5w20|8a3y0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9pym0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9d2q0|9czy0|9q1e0|9czy0|9d2q0|9czy0|9d2q0|Infinity",
          offsets: "-600|-630|-690|-660",
          offsetIndices: "0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313"
        }, {
          id: "Australia/Melbourne",
          untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|b5uo0|7x6o0|bitc0|779c0|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-600|-660",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/North",
          untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|Infinity",
          offsets: "-570|-630",
          offsetIndices: "010101010"
        }, {
          id: "Australia/NSW",
          untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-600|-660",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/Perth",
          untils: "-rnsric|49s2c|cxfms0|4h180|9d440|9cyk0|ghf1g0|6hc00|4ir9c0|6hc00|40r400|5eg00|7p9hc0|5reo0|b5uo0|7x6o0|asw00|7x6o0|Infinity",
          offsets: "-480|-540",
          offsetIndices: "0101010101010101010"
        }, {
          id: "Australia/Queensland",
          untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|97zuo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|Infinity",
          offsets: "-600|-660",
          offsetIndices: "01010101010101010"
        }, {
          id: "Australia/South",
          untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|6hc00|c8qo0|7k800|b5uo0|6uao0|c8qo0|779c0|bitc0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-570|-630",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/Sydney",
          untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-600|-660",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/Tasmania",
          untils: "-rsj4w0|8zzw0|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|c9tms0|9d1c0|asw00|6uao0|bvs00|6uao0|bvs00|779c0|bvs00|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|b5uo0|7k800|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|bvs00|7k800|bitc0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x6o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|7x6o0|asw00|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-600|-660",
          offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/Victoria",
          untils: "-rnsx2c|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|b5uo0|7x6o0|bitc0|779c0|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|7x6o0|asw00|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-600|-660",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Australia/West",
          untils: "-rnsric|49s2c|cxfms0|4h180|9d440|9cyk0|ghf1g0|6hc00|4ir9c0|6hc00|40r400|5eg00|7p9hc0|5reo0|b5uo0|7x6o0|asw00|7x6o0|Infinity",
          offsets: "-480|-540",
          offsetIndices: "0101010101010101010"
        }, {
          id: "Australia/Yancowinna",
          untils: "-rnsvoc|49s2c|cxfms0|4h180|9d440|9cyk0|9q2s0|8zzw0|eeiqs0|64dc0|clpc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|8a5c0|asw00|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|779c0|b5uo0|7k800|bitc0|7k800|bitc0|779c0|bitc0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|8a5c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-570|-630",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
        }, {
          id: "Brazil/Acre",
          untils: "-t85fg0|99kak0|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|amves0|2t2t80|Infinity",
          offsets: "271.2|300|240",
          offsetIndices: "01212121212121212121212121212121"
        }, {
          id: "Brazil/DeNoronha",
          untils: "-t85lzw|99k8rw|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|514g40|7k580|biw40|cvw0|iq5g0|6h980|Infinity",
          offsets: "129.6667|120|60",
          offsetIndices: "0121212121212121212121212121212121212121"
        }, {
          id: "Brazil/East",
          untils: "-t85jd8|99k8x8|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5k02s0|6onw0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|cyqs0|5ed80|dbpg0|64ak0|cyqs0|64ak0|cls40|5rbw0|dbpg0|51ek0|dbpg0|6h980|c8tg0|6h980|c8tg0|64ak0|c8tg0|6u7w0|bxpg0|7iak0|biw40|6u7w0|biw40|7k580|biw40|6u7w0|c8tg0|6h980|dbpg0|5ed80|cls40|64ak0|dfes0|5nmk0|c8tg0|6h980|dbpg0|5rbw0|bvus0|6h980|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6u7w0|c8tg0|64ak0|cls40|64ak0|cls40|6h980|c8tg0|6h980|c8tg0|6h980|c8tg0|6h980|dbpg0|5ed80|Infinity",
          offsets: "186.4667|180|120",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Brazil/West",
          untils: "-t85gvw|99k97w|9a9c0|9io40|99980|8p65g0|6zuo0|bs2o0|67zw0|cjxg0|69uk0|cjxg0|4ml80|5mf440|49mk0|haas0|316k0|cls40|4ml80|cls40|66580|cls40|67zw0|981s40|6u7w0|biw40|5rbw0|d0lg0|5ed80|2yy2s0|6h980|Infinity",
          offsets: "240.0667|240|180",
          offsetIndices: "01212121212121212121212121212121"
        }, {
          id: "Canada/Atlantic",
          untils: "-z94k80|777go0|9et80|st9o0|a2vw0|ssyk0|5rbw0|cv1g0|69uk0|c6ys0|6kyk0|ci2s0|67zw0|ci2s0|6w2k0|bu040|7lzw0|bu040|66580|bu040|7lzw0|bu040|64ak0|cls40|5v180|cv1g0|6j3w0|c6ys0|79180|b42s0|7lzw0|b42s0|7yyk0|bu040|64ak0|dbpg0|66580|cls40|5ed80|bu040|7lzw0|b42s0|7lzw0|cjxg0|66580|bh1g0|7lzw0|b42s0|7lzw0|6uj00|1tzdw0|2dnc0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|tw040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|tw040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|1cm2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "254.4|240|180",
          offsetIndices: "0121212121212121212121212121212121212121212121212122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Canada/Central",
          untils: "-s0s7c0|7k580|tj700|a2vw0|9ok840|6u7w0|2a5hg0|1tz8c0|2dsw0|biw40|7x3w0|a31g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b7s40|7tek0|autg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9cyk0|9d440|7x3w0|1cm2s0|7k580|1cm2s0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|asw00|7x6o0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300",
          offsetIndices: "010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Canada/Eastern",
          untils: "-qzoxw0|a2vw0|7yx60|aqzy0|9q8c0|7jzo0|bw0c0|6bp80|cedg0|6h980|c8tg0|6h980|bvus0|776k0|biw40|776k0|biw40|776k0|biw40|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|xjeo0|1tzb40|2dq40|asys0|7x3w0|ast80|7x3w0|asys0|7x3w0|asys0|b5rw0|7xf00|ast80|7x9g0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "300|240",
          offsetIndices: "01010101010101010101010101010101010101010101011101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Canada/Mountain",
          untils: "-x1yazk|629ink|a2vw0|8n6s0|29ek0|h6lg0|9px80|905g0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|9l0g40|1tz5k0|2dvo0|tj1g0|7x3w0|ctzk40|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "453.8667|420|360",
          offsetIndices: "0121212121212122121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Canada/Newfoundland",
          untils: "-ris3ck|8bx80|ar440|a2vw0|9tjs0|53980|dkys0|9cyk0|9d440|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|9cyk0|9d440|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|8zzw0|9q2s0|9cyk0|9q2s0|8zzw0|9q2s0|8zzw0|7tmw0|1wfuk|8zzw0|a3480|7k580|b5xg0|7k580|b5xg0|7k580|biw40|776k0|biw40|7k580|b5xg0|7k580|b5xg0|1pb260|2dly0|biw40|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|biw40|7k580|ag040|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a2lo|afuk0|8a840|asqg0|7xc80|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8tec|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "210.8667|150.8667|210|150|90",
          offsetIndices: "01010101010101010101010101010101010102323232323232323323232323232323232323232323232323232323232323232323232323232323232323232323232323232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Canada/Pacific",
          untils: "-qzopk0|a2vw0|c5jxg0|1tz2s0|2dyg0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "480|420",
          offsetIndices: "0101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Canada/Saskatchewan",
          untils: "-xkq9yc|6l1hmc|a2vw0|60enw0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|1b6840|9cyk0|9d440|8zzw0|9q2s0|9cyk0|9q2s0|9cyk0|9d440|9cyk0|66gc0|1tz5k0|2dvo0|a31g0|9cyk0|a31g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|tj1g0|9cyk0|9d440|Infinity",
          offsets: "418.6|420|360",
          offsetIndices: "012121212121212121212121221212121212121212121212121212"
        }, {
          id: "Canada/Yukon",
          untils: "-qzoms0|a2vw0|asys0|882c0|bmiwc0|1tz000|2e180|a7n3w0|9q000|tiyo0|6qp440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|Infinity",
          offsets: "540|480|420",
          offsetIndices: "01010110201212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "CET",
          untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|8l9c0|ggp1c0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Chile/Continental",
          untils: "-vauawq|3dlssq|157b7a|f4e0q|49hzba|aye0q|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|534ik0|351g0|229zw0|2gt80|awo40|2mg00|b73400|7k580|c8tg0|6h980|a31g0|7x3w0|asys0|7x3w0|b5xg0|7k580|ag040|8a2k0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|e1h80|4olg0|e1h80|4olg0|c8nw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|Infinity",
          offsets: "282.7667|300|240|180",
          offsetIndices: "010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "Chile/EasterIsland",
          untils: "-jhfaew|ivmeuw|7k580|c8tg0|6h980|a31g0|7x3w0|asys0|7x3w0|b5xg0|7k580|ag040|8a2k0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|iq2o0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|e1h80|4olg0|e1h80|4olg0|c8nw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|Infinity",
          offsets: "437.4667|420|360|300",
          offsetIndices: "012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "CST6CDT",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300",
          offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Cuba",
          untils: "-n7762o|1icfyo|69uk0|62s040|4ofw0|e1ms0|51ek0|e1ms0|4ofw0|1fhs40|4ofw0|e1ms0|4ofw0|9s9k40|67zw0|cedg0|6h980|9o840|7yyk0|b5xg0|7k580|bvus0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|8a2k0|ag040|8bx80|ae5g0|8drw0|acas0|9cyk0|9d440|9px80|905g0|9px80|9q2s0|7x3w0|8a840|ast80|7x9g0|ast80|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|8a2k0|ag040|8a2k0|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|905g0|a2vw0|905g0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|8n400|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|8a5c0|afxc0|8a5c0|afxc0|7x6o0|1cm000|6uao0|bvs00|779c0|bitc0|6uao0|bvs00|779c0|bvs00|779c0|c8qo0|779c0|b5uo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|Infinity",
          offsets: "329.6|300|240",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "EET",
          untils: "3s9ms0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-120|-180",
          offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Egypt",
          untils: "-fdls80|40d80|a31g0|7x3w0|a4w40|aqyk0|80ys0|b07w0|7tk40|b07w0|8jhg0|a8fw0|60go40|7el80|awo40|7v980|awqw0|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7tk40|ayd80|7tk40|b07w0|7tk40|ayd80|7tk40|ayd80|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|f9x80|3i040|eluk0|462s0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|b5rw0|7m5g0|awik0|7ves0|awik0|7ves0|ayd80|7ves0|awik0|7ves0|awik0|7ves0|aqvs0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7k580|b5xg0|6u7w0|bvus0|6h980|c8tg0|64ak0|cyqs0|5anw0|1jms0|12t80|1w22s0|25p80|1sw40|2vmk0|Infinity",
          offsets: "-120|-180",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Eire",
          untils: "-rzcmlr|6uao0|9pytr|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|3g8800|8a5c0|bvs00|8n400|a2yo0|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "25.35|-34.65|0|-60",
          offsetIndices: "01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "EST",
          untils: "Infinity",
          offsets: "300",
          offsetIndices: "0"
        }, {
          id: "EST5EDT",
          untils: "-r0ev80|ast80|7x9g0|ast80|bmtus0|1tzb40|2dq40|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "300|240",
          offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Etc/GMT-0",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-1",
          untils: "Infinity",
          offsets: "-60",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-10",
          untils: "Infinity",
          offsets: "-600",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-11",
          untils: "Infinity",
          offsets: "-660",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-12",
          untils: "Infinity",
          offsets: "-720",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-13",
          untils: "Infinity",
          offsets: "-780",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-14",
          untils: "Infinity",
          offsets: "-840",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-2",
          untils: "Infinity",
          offsets: "-120",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-3",
          untils: "Infinity",
          offsets: "-180",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-4",
          untils: "Infinity",
          offsets: "-240",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-5",
          untils: "Infinity",
          offsets: "-300",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-6",
          untils: "Infinity",
          offsets: "-360",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-7",
          untils: "Infinity",
          offsets: "-420",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-8",
          untils: "Infinity",
          offsets: "-480",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT-9",
          untils: "Infinity",
          offsets: "-540",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+0",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+1",
          untils: "Infinity",
          offsets: "60",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+10",
          untils: "Infinity",
          offsets: "600",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+11",
          untils: "Infinity",
          offsets: "660",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+12",
          untils: "Infinity",
          offsets: "720",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+2",
          untils: "Infinity",
          offsets: "120",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+3",
          untils: "Infinity",
          offsets: "180",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+4",
          untils: "Infinity",
          offsets: "240",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+5",
          untils: "Infinity",
          offsets: "300",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+6",
          untils: "Infinity",
          offsets: "360",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+7",
          untils: "Infinity",
          offsets: "420",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+8",
          untils: "Infinity",
          offsets: "480",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT+9",
          untils: "Infinity",
          offsets: "540",
          offsetIndices: "0"
        }, {
          id: "Etc/GMT0",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Etc/Greenwich",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Etc/UCT",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Etc/Universal",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Etc/UTC",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Etc/Zulu",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Europe/Amsterdam",
          untils: "-s0dvkk|7v980|a51o0|7x6o0|a2yo0|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9b6o0|a2yo0|c51c0|6l1c0|902o0|9q000|ci000|682o0|bgyo0|79400|bitc0|779c0|bmio0|7gio0|bbeo0|7eo00|bd9c0|7ctc0|bf400|7ayo0|bvs00|6uao0|bko00|7idc0|b9k00|7gio0|bbeo0|7eo00|bf400|7ayo0|btxc0|21uc0|4uaz8|bitc0|779c0|bko00|7idc0|bd3s0|1aarpc|7k800|9q000|9d1c0|9d1c0|9d1c0|8l9c0|ggp1c0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-19.5333|-79.5333|-80|-20|-120|-60",
          offsetIndices: "010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545"
        }, {
          id: "Europe/Andorra",
          untils: "-c4xmo0|k3ctg0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Astrakhan",
          untils: "-nu2zkc|37bv8c|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9q000|9d1c0|s3400|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|qnc40|Infinity",
          offsets: "-192.2|-180|-240|-300",
          offsetIndices: "012323232323232323212121212121212121212121212121212121212121212"
        }, {
          id: "Europe/Athens",
          untils: "-rvv0cg|8bjasg|2vmk0|4hiw40|16ik0|scog0|7lx40|9o2k0|9eys0|4atzw0|6djw0|bplus0|bq800|71uw0|9d1c0|902o0|91xc0|9o5c0|905g0|9qgo0|9akg0|9iik0|99980|9dcg0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-94.8667|-120|-180|-60",
          offsetIndices: "012121313121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Belfast",
          untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Belgrade",
          untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Berlin",
          untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|2o7w0|6bs00|2txg0|7k800|91xc0|9b9g0|1sqk0|2inw0|51k40|a2yo0|8n400|9q000|902o0|fx91c0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120|-180",
          offsetIndices: "01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Bratislava",
          untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|9d1c0|b5uo0|7vc00|2vs40|4bk00|2vmk0|8n400|a2yo0|8n400|9o5c0|91xc0|fe6000|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120|0",
          offsetIndices: "01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Brussels",
          untils: "-ss5uo0|rrx80|7vc00|a4yw0|7x6o0|asw00|7x6o0|2wh40|5omo0|b5uo0|6uao0|cyo00|7ayo0|bko00|7rmo0|a2yo0|a2yo0|8n400|902o0|9q000|9d1c0|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|90b00|a2yo0|8n400|9q000|902o0|a2yo0|8n400|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|4deo0|1a36k0|7k800|9q000|9d1c0|8l9c0|a4tc0|8l9c0|clpc0|79400|fwu800|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "0121212101010101010101010101010101010101010101010101212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Bucharest",
          untils: "-k29zi0|fj8m0|6w5c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|kp0dc0|6h980|9q000|905g0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9cvs0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9cyk0|9d440|9cyk0|9q2s0|ast80|7xhs0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-104.4|-120|-180",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Budapest",
          untils: "-s0e080|7ves0|a4yw0|7x6o0|a31g0|8n180|autg0|bgvw0|b5jeg0|th9k0|7k800|9q000|9d1c0|9d1c0|awd00|9ew00|7q0c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|a4tc0|9q000|1va2g0|6u7w0|bxpg0|6u7w0|cjxg0|64ak0|cluw0|64g40|br3ek0|905g0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Busingen",
          untils: "-eyh6o0|7x6o0|asw00|7x6o0|k2zus0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Chisinau",
          untils: "-r2p1bo|70f1to|fj8m0|6w5c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|geqo0|ha580|oc8g0|7k800|9q000|9d1c0|7cl00|j3pbw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|25p80|7kdk0|9d1c0|9d1c0|9cvs0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|ast80|7xf00|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-115|-104.4|-120|-180|-60|-240",
          offsetIndices: "012323232323232323232424235353535353535353535323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Europe/Copenhagen",
          untils: "-rzo2w0|75bw0|cbs2w0|1aco80|7k800|9q000|9d1c0|9d1c0|9d1c0|6y000|dbmo0|6bs00|clpc0|51hc0|e1k00|4oio0|giutc0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Dublin",
          untils: "-rzcmlr|6uao0|9pytr|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|3g8800|8a5c0|bvs00|8n400|a2yo0|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "25.35|-34.65|0|-60",
          offsetIndices: "01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Europe/Gibraltar",
          untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|d0tp80|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "010101010101010101010101010101010101010101010101012121212121010121010101010101010101012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Guernsey",
          untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Helsinki",
          untils: "-peghyd|ax3tqd|9gqo0|k31s80|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-99.8167|-120|-180",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Isle_of_Man",
          untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Istanbul",
          untils: "-ux9xew|2wvx6w|7v980|1tjc40|aunw0|88dg0|9et80|8yas0|a2vw0|tzpg0|79180|awo40|7v980|7p4040|4zjw0|2vs40|f4d80|9vms0|1u5ek0|c5440|69uk0|acas0|8n180|a31g0|8n180|9q2s0|8zzw0|a31g0|8zzw0|a31g0|8n180|5md9g0|o9zw0|a6qs0|75bw0|4iwyw0|7x6o0|7kas0|b5rw0|75hg0|bkl80|77c40|biqk0|7x9g0|a2vw0|8n6s0|4iqc0|2nkw80|38l80|kdes0|8qtc0|8a5c0|9ew00|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|902o0|9q000|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7kdk0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7m2o0|b4000|7k800|b5uo0|7x6o0|asw00|7z1c0|ar1c0|7x6o0|bitc0|779c0|8fe80|Infinity",
          offsets: "-116.9333|-120|-180|-240",
          offsetIndices: "0121212121212121212121212121212121212121212121223212121212121212121212121212121212121212121212121212121212121212122"
        }, {
          id: "Europe/Jersey",
          untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Kaliningrad",
          untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|el00|z6o0|9kd80|82tg0|i9avw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-60|-120|-180|-240",
          offsetIndices: "01010101010101121232323232323232322121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Kiev",
          untils: "-nu11ng|37a03g|5vd6k0|kzv40|7k800|9q000|1oyg0|jipzs0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|51ek0|neqw0|9cvs0|9cyk0|9d440|9cyk0|9d440|9cyk0|9dcg0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-122.0667|-120|-180|-60|-240",
          offsetIndices: "0121313242424242424242424242121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Kirov",
          untils: "-qcx400|5q5zo0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9q000|9d1c0|s3400|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-198.8|-180|-240|-300",
          offsetIndices: "01232323232323232321212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Lisbon",
          untils: "-u9rhc0|2bufw0|6zxg0|66580|bq800|73k00|bodc0|71pc0|bq800|73k00|bq800|71pc0|bq800|1b2g00|9b6o0|saio0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|st1c0|8n400|9d1c0|9d1c0|sg2o0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|bitc0|9d1c0|9ew00|88ao0|25p80|5reo0|3lpg0|779c0|1sqk0|6uao0|38qs0|6uao0|25p80|6hc00|38qs0|6uao0|25p80|6hc00|38qs0|8a5c0|9d1c0|9d9o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|s3400|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|5gyl40|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d440|9cyk0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9cyk0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "36.75|0|-60|-120",
          offsetIndices: "012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121212121212121212121212121212121212122323232212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Ljubljana",
          untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/London",
          untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Luxembourg",
          untils: "-y89550|68l290|75hg0|ast80|796s0|at1k0|7x6o0|3lh40|4zmo0|b6300|6u2c0|cytk0|7at40|bktk0|7rh40|a31g0|a2vw0|8n9k0|8zx40|9q2s0|9et80|9b9g0|a2vw0|8n6s0|9px80|905g0|a2vw0|905g0|a2vw0|8ncc0|9q000|902o0|a2yo0|8n400|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|42ao0|1aeak0|7k800|9q000|9d1c0|8n400|a2yo0|8l9c0|clpc0|79400|fwu800|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-24.6|-60|-120|0",
          offsetIndices: "0121212131313131313131313131313131313131313131313131212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Madrid",
          untils: "-qzlus0|8yas0|9cyk0|9eys0|2d2vw0|8sqs0|ssyk0|8n6s0|9px80|905g0|a2yo0|902o0|a2vw0|8n6s0|40lh80|5k2s0|9cyk0|1frw0|7z1c0|j1c80|8a2k0|13yt80|685g0|brzw0|8n6s0|a2vw0|8n6s0|a2vw0|8n6s0|a2vw0|8n6s0|1clx80|7x9g0|cswik0|905g0|9px80|905g0|8zzw0|9d440|9px80|905g0|9q5k0|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "010101010101010101210121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Malta",
          untils: "-rymys0|64ak0|9d440|9et80|88dg0|aunw0|7ig40|b5rw0|8n6s0|9cyk0|aau2s0|18r9k0|7k800|9q000|9b6o0|8n400|a4tc0|8j940|9f1k0|afxc0|89zs0|afxc0|7kdk0|b5uo0|979rs0|6h980|cls40|64dc0|clpc0|64dc0|cyo00|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|9b6o0|9d1c0|ahs00|7m2o0|b45k0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|a4w40|8y580|9q2s0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Mariehamn",
          untils: "-peghyd|ax3tqd|9gqo0|k31s80|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-99.8167|-120|-180",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Minsk",
          untils: "-nu113c|379zjc|5r1mk0|pbf40|7k800|9q000|9d1c0|4oac0|j6dmk0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|sg2o0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|Infinity",
          offsets: "-110|-120|-180|-60|-240",
          offsetIndices: "01213131242424242424242424221212121212121212121212121212121212121212"
        }, {
          id: "Europe/Monaco",
          untils: "-uozn3l|2qx1nl|5luo0|8y800|a4tc0|7vc00|auqo0|7idc0|b7pc0|6sg00|cyo00|7ayo0|bko00|7rmo0|a2yo0|bvs00|6uao0|902o0|9q000|9d1c0|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51po0|mdbo0|7x3w0|7x9g0|c8w80|7k800|9q000|9d1c0|9nzs0|922w0|8l9c0|fxlx80|9cyk0|9q5k0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-9.35|0|-60|-120",
          offsetIndices: "01212121212121212121212121212121212121212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Europe/Moscow",
          untils: "-rx5dmh|ipzua|97hc0|7yyk0|5i840|d9p80|1jwk7|2cvk0|s8o00|1qvw0|8fpc0|1jms0|is040|412as0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d440|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-150.2833|-151.3167|-211.3167|-271.3167|-240|-180|-300|-120",
          offsetIndices: "012132345464575454545454545454545455754545454545454545454545454545454545454545"
        }, {
          id: "Europe/Nicosia",
          untils: "-p4bq6g|rvhxyg|9cyk0|b42s0|7nuk0|8yas0|8zzw0|9q2s0|9et80|9b9g0|9cyk0|9q2s0|8zzw0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|9cyk0|9d440|9cyk0|9d440|at4c0|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-133.4667|-120|-180",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Oslo",
          untils: "-rzayo0|6qfs0|cgcqo0|15tsc0|7k800|9q000|9d1c0|9d1c0|9d1c0|9d1c0|70q5c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|b5uo0|7k800|7law00|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Paris",
          untils: "-uozn1x|2qx1lx|5luo0|8y800|a4tc0|7vc00|auqo0|7idc0|b7pc0|6sg00|cyo00|7ayo0|bko00|7rmo0|a2yo0|bvs00|6uao0|902o0|9q000|9d1c0|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|9d1c0|9d1c0|902o0|a2yo0|9d1c0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51po0|5p8w0|18rcc0|7k800|9q000|9d1c0|7efo0|29k40|922w0|8l9c0|fxlx80|9cyk0|9q5k0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-9.35|0|-60|-120",
          offsetIndices: "0121212121212121212121212121212121212121212121212123232332323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Europe/Podgorica",
          untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Prague",
          untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|9d1c0|b5uo0|7vc00|2vs40|4bk00|2vmk0|8n400|a2yo0|8n400|9o5c0|91xc0|fe6000|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120|0",
          offsetIndices: "01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Riga",
          untils: "-qznlky|7x6o0|a4tc0|2mg00|3myns0|7fhlky|gz180|p5v40|7k800|9q000|9d1c0|9d1c0|k7s0|j14ns0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d440|asw00|7x6o0|asw00|7x6o0|b5uo0|qaao0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-96.5667|-156.5667|-120|-180|-60|-240",
          offsetIndices: "010102324242435353535353535353323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Europe/Rome",
          untils: "-rymys0|64ak0|9d440|9et80|88dg0|aunw0|7ig40|b5rw0|8n6s0|9cyk0|aau2s0|18r9k0|7k800|9q000|9d1c0|8l9c0|a4tc0|8j940|9f1k0|afxc0|89zs0|afxc0|7kdk0|b5uo0|979rs0|6h980|cls40|64dc0|clpc0|64dc0|cyo00|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|clpc0|64dc0|c8qo0|6hc00|clpc0|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|c8qo0|6hc00|9q5k0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Samara",
          untils: "-qcx400|5q5zo0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9q000|jt1g0|89zs0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|j3440|7k800|Infinity",
          offsets: "-200.3333|-180|-240|-300",
          offsetIndices: "0123232323232323232121232323232323232323232323232323232323212"
        }, {
          id: "Europe/San_Marino",
          untils: "-rymys0|64ak0|9d440|9et80|88dg0|aunw0|7ig40|b5rw0|8n6s0|9cyk0|aau2s0|18r9k0|7k800|9q000|9d1c0|8l9c0|a4tc0|8j940|9f1k0|afxc0|89zs0|afxc0|7kdk0|b5uo0|979rs0|6h980|cls40|64dc0|clpc0|64dc0|cyo00|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|clpc0|64dc0|c8qo0|6hc00|clpc0|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|c8qo0|6hc00|9q5k0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Sarajevo",
          untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Saratov",
          untils: "-qcx400|5q5zo0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|s3400|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|13m040|Infinity",
          offsets: "-184.3|-180|-240|-300",
          offsetIndices: "012323232323232321212121212121212121212121212121212121212121212"
        }, {
          id: "Europe/Simferopol",
          untils: "-nu12ao|37a0qo|5xiyk0|iu340|7k800|9q000|9d1c0|iac0|jajmk0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|eeio0|wrjw0|9cyk0|9d440|9cyk0|9d440|1sqk0|7k580|9d440|9cyk0|9q2s0|at4c0|7x9g0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x3w0|asqg0|Infinity",
          offsets: "-136|-120|-180|-60|-240",
          offsetIndices: "012131312424242424242424242121212424242212121212121212121212121212121212142"
        }, {
          id: "Europe/Skopje",
          untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Sofia",
          untils: "-e6dzw0|7k800|9q000|9d1c0|9d1c0|9d440|hqq240|9eys0|9o2k0|92040|9o2k0|90880|9pug0|90b00|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9cvs0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|ast80|7xhs0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-120|-60|-180",
          offsetIndices: "01010102020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020"
        }, {
          id: "Europe/Stockholm",
          untils: "-rzo2w0|75hg0|x5bew0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Tallinn",
          untils: "-r3exx0|3re10|7x6o0|et6g0|ygov0|a1zgd0|ktx80|l94g0|7k800|9q000|9d1c0|8uac0|j27mk0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asys0|7x6o0|b5uo0|19dc00|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-99|-60|-120|-180|-240",
          offsetIndices: "012102321212343434343434343433232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Europe/Tirane",
          untils: "-t85vo8|dt2gw8|18pew0|7k800|m800|g7ot40|7rjw0|autg0|7x3w0|ayis0|7x3w0|b5xg0|7k580|b42s0|7lzw0|b42s0|7lzw0|b42s0|7x3w0|ahus0|7x3w0|b5xg0|7x3w0|a4w40|8jbw0|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-79.3333|-60|-120",
          offsetIndices: "01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Tiraspol",
          untils: "-r2p1bo|70f1to|fj8m0|6w5c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|geqo0|ha580|oc8g0|7k800|9q000|9d1c0|7cl00|j3pbw0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|25p80|7kdk0|9d1c0|9d1c0|9cvs0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|ast80|7xf00|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-115|-104.4|-120|-180|-60|-240",
          offsetIndices: "012323232323232323232424235353535353535353535323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "Europe/Ulyanovsk",
          untils: "-qcx400|5q5zo0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9q000|iq5g0|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|qnc40|Infinity",
          offsets: "-193.6|-180|-240|-300|-120",
          offsetIndices: "01232323232323232321214121212121212121212121212121212121212121212"
        }, {
          id: "Europe/Uzhgorod",
          untils: "-fizzw0|1cm000|7k800|9q000|9d1c0|al900|cnms0|int140|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|eeio0|e1sc0|iprk0|9cyk0|9d440|9cyk0|9d440|9cyk0|9dcg0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120|-180|-240",
          offsetIndices: "010101023232323232323232320121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Vaduz",
          untils: "-eyh6o0|7x6o0|asw00|7x6o0|k2zus0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Vatican",
          untils: "-rymys0|64ak0|9d440|9et80|88dg0|aunw0|7ig40|b5rw0|8n6s0|9cyk0|aau2s0|18r9k0|7k800|9q000|9d1c0|8l9c0|a4tc0|8j940|9f1k0|afxc0|89zs0|afxc0|7kdk0|b5uo0|979rs0|6h980|cls40|64dc0|clpc0|64dc0|cyo00|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|clpc0|64dc0|c8qo0|6hc00|clpc0|64dc0|clpc0|64dc0|c8qo0|6hc00|clpc0|6hc00|c8qo0|6hc00|9q5k0|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Vienna",
          untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|t6000|8a5c0|a7a800|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|iio0|ivmo0|91xc0|9b6o0|9d1c0|a2yo0|8n400|gfyyg0|8zzw0|9d9o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Vilnius",
          untils: "-rns980|1g224o|e75nc|4kqk0|acbs40|gpp40|pits0|7k800|9q000|9d1c0|65zo0|j4vx80|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x9g0|asw00|7x6o0|b5uo0|1s3eo0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-84|-95.6|-60|-120|-180|-240",
          offsetIndices: "012324323234545454545454545443434343434343434332334343434343434343434343434343434343434343434343434343434343434343434343"
        }, {
          id: "Europe/Volgograd",
          untils: "-q3cw84|5glrw4|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|iq5g0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|s3400|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|239c40|Infinity",
          offsets: "-177.6667|-180|-240|-300",
          offsetIndices: "012323232323232321212121212121212121212121212121212121212121212"
        }, {
          id: "Europe/Warsaw",
          untils: "-se9yk0|dvyc0|7ves0|a4yw0|7x6o0|asw00|7x6o0|aunw0|7x6o0|1evbs0|9fcwc0|18cao0|7k800|9q000|9d1c0|9gnw0|an980|9kd80|8fs40|922w0|ar1c0|7x6o0|a2yo0|8n400|9q000|902o0|4013w0|64dc0|9d1c0|9d1c0|clpc0|6hc00|9d1c0|9d1c0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|clpc0|64dc0|6j4tc0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-84|-60|-120|-180",
          offsetIndices: "012121223212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Zagreb",
          untils: "-ezayw0|swz00|7k800|9q000|9d1c0|9d1c0|b7pc0|6qlc0|jl1hc0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Europe/Zaporozhye",
          untils: "-nu12hc|37a0xc|5u1180|mc0g0|7k800|9q000|12qg0|jjc7s0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9cvs0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9dcg0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-140|-120|-180|-60|-240",
          offsetIndices: "01213132424242424242424242422121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Europe/Zurich",
          untils: "-eyh6o0|7x6o0|asw00|7x6o0|k2zus0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "GB-Eire",
          untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "GB",
          untils: "-rzcns0|6uao0|9q000|8c000|9o5c0|9ruo0|9b6o0|9ew00|9b6o0|auqo0|88ao0|9ew00|8y800|a2yo0|a2yo0|7k800|asw00|8a5c0|asw00|8n400|a2yo0|8n400|9q000|902o0|afxc0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|9d1c0|a2yo0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|a2yo0|b5uo0|51hc0|mbmk0|51hc0|c8qo0|6hc00|c8qo0|6uao0|bvs00|8n400|a4tc0|5clc0|4bms0|9q000|902o0|8a5c0|1frw0|64dc0|4bms0|6uao0|bvs00|7x6o0|asw00|8n400|9q000|902o0|9q000|9d1c0|9q000|902o0|8n400|9q000|902o0|a2yo0|8n400|afxc0|8n400|9q000|902o0|a2yo0|8n400|a2yo0|8n400|9q000|902o0|902o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|5reo0|1xhuo0|779c0|bitc0|779c0|bitc0|779c0|bitc0|779c0|bitc0|7k800|b5uo0|7k800|b5uo0|7k800|bitc0|779c0|bitc0|779c0|bitc0|7x3w0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60|-120",
          offsetIndices: "0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "GMT-0",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "GMT",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "GMT+0",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "GMT0",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Greenwich",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Hongkong",
          untils: "-y0i0s0|j44dk0|5k000|4d4y0|2195i0|7x3w0|bj320|6uao0|bvs00|7x6o0|9d1c0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|8a5c0|asw00|7x6o0|ast80|77c40|biqk0|77c40|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|77c40|biqk0|77c40|bvp80|6udg0|bvp80|6udg0|bvp80|77c40|biqk0|77c40|biqk0|8n6s0|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9cyk0|1c9440|8a2k0|Infinity",
          offsets: "-456.7|-480|-540|-510",
          offsetIndices: "0123212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "HST",
          untils: "Infinity",
          offsets: "600",
          offsetIndices: "0"
        }, {
          id: "Iceland",
          untils: "-wcwx9c|4rpd9c|ci2s0|69uk0|du840|4xp80|du840|p7bw0|4w040|9bdzw0|9d6w0|64g40|cyl80|64dc0|clpc0|6hc00|bvs00|6uao0|bvs00|6uao0|bvs00|6uao0|c8qo0|6hc00|c8qo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|7x6o0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|asw00|8a5c0|Infinity",
          offsets: "88|60|0",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "Indian/Antananarivo",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Indian/Chagos",
          untils: "-wvpc2s|1ag64us|Infinity",
          offsets: "-289.6667|-300|-360",
          offsetIndices: "012"
        }, {
          id: "Indian/Christmas",
          untils: "Infinity",
          offsets: "-420",
          offsetIndices: "0"
        }, {
          id: "Indian/Cocos",
          untils: "Infinity",
          offsets: "-390",
          offsetIndices: "0"
        }, {
          id: "Indian/Comoro",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Indian/Kerguelen",
          untils: "-afrs00|Infinity",
          offsets: "0|-300",
          offsetIndices: "01"
        }, {
          id: "Indian/Mahe",
          untils: "-x6pjlo|Infinity",
          offsets: "-221.8|-240",
          offsetIndices: "01"
        }, {
          id: "Indian/Maldives",
          untils: "-57x6y0|Infinity",
          offsets: "-294|-300",
          offsetIndices: "01"
        }, {
          id: "Indian/Mauritius",
          untils: "-wvp9bc|13jnu7c|8bx80|dd0wc0|7x3w0|Infinity",
          offsets: "-230|-240|-300",
          offsetIndices: "012121"
        }, {
          id: "Indian/Mayotte",
          untils: "-lnsetg|s8mhg|57v020|afrrb0|Infinity",
          offsets: "-147.2667|-180|-150|-165",
          offsetIndices: "01231"
        }, {
          id: "Indian/Reunion",
          untils: "-uks29s|Infinity",
          offsets: "-221.8667|-240",
          offsetIndices: "01"
        }, {
          id: "Iran",
          untils: "-s6m6uw|fnolc0|gm3h4w|777y0|b07w0|3pes0|42c20|9cyk0|9gtg0|9kd80|5ja5g0|7avw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|1av440|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9d440|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|9b9g0|9gnw0|Infinity",
          offsets: "-205.7333|-210|-240|-300|-270",
          offsetIndices: "00123214141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141"
        }, {
          id: "Israel",
          untils: "-r50eig|bp54yg|19f3w0|7rv00|b02c0|7tk40|b07w0|8jhg0|a8lg0|8jhg0|a8ac0|t9s40|56vs0|35700|9b3w0|9gtg0|8jbw0|7tmw0|a6ig0|biyw0|8a5c0|9d1c0|902o0|7x6o0|e1eg0|4ofw0|dzxo0|4q500|doo40|64iw0|auqo0|7i500|8rfms0|51ek0|9q2s0|6u7w0|2khpg0|25s00|1weyo0|5reo0|bxmo0|7x3w0|cls40|5rbw0|bbhg0|7rjw0|asys0|7k580|c8tg0|6h980|ag040|7x3w0|asys0|8a2k0|asys0|8a2k0|ap9g0|80t80|ap9g0|7nuk0|b2840|80t80|9zc40|9iik0|9kis0|93p80|9mdg0|8qqk0|apf00|7x3w0|biw40|8zx40|9io40|8n180|9kis0|9vh80|8ulg0|9px80|9mdg0|8n180|9tuw0|9tmk0|8wg40|9gnw0|99es0|8qqk0|9zc40|9tmk0|8wg40|9gnw0|99es0|8qqk0|acas0|9gnw0|99es0|93p80|9mdg0|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|7tk40|b9h80|7glg0|b9h80|7glg0|b9h80|7glg0|b9h80|7tk40|awik0|7tk40|awik0|Infinity",
          offsets: "-140.6667|-120|-180|-240",
          offsetIndices: "012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Jamaica",
          untils: "-u85og2|wbl182|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|Infinity",
          offsets: "307.1667|300|240",
          offsetIndices: "0121212121212121212121"
        }, {
          id: "Japan",
          untils: "-bb4900|6uao0|afxc0|8a5c0|c8qo0|6hc00|c8qo0|6hc00|Infinity",
          offsets: "-540|-600",
          offsetIndices: "010101010"
        }, {
          id: "Kwajalein",
          untils: "-h817w0|27sas0|1hjus0|ddxug0|cgv6k0|Infinity",
          offsets: "-660|-600|-540|720|-720",
          offsetIndices: "012034"
        }, {
          id: "Libya",
          untils: "-q3gfrw|gl6ajw|422c0|xado0|4bbo0|wrpg0|4s580|1kdpg0|c05bw0|4mqs0|9et80|9d440|9et80|9eys0|9et80|9mdg0|95jw0|9io40|9cyk0|99es0|9et80|9eys0|9et80|9d440|9et80|b2840|3cf3w0|9kis0|9et80|7vqyw0|75eo0|asw00|Infinity",
          offsets: "-52.7333|-60|-120",
          offsetIndices: "012121212121212121212121212122122"
        }, {
          id: "MET",
          untils: "-s0e080|7ves0|a4yw0|7x6o0|asw00|7x6o0|b8qdc0|1cm000|7k800|9q000|9d1c0|9d1c0|9d1c0|8l9c0|ggp1c0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-60|-120",
          offsetIndices: "01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Mexico/BajaNorte",
          untils: "-p1u1s0|11jrw0|1sns00|1sgdc0|71s40|9cyk0|5iidg0|1q6700|4lfk0|190g40|eluk0|2r4o80|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|84qys0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|77c40|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "468.0667|420|480",
          offsetIndices: "012121211212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "Mexico/BajaSur",
          untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|591h80|3ie2s0|axvpg0|dpgw40|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
          offsets: "425.6667|420|360|480",
          offsetIndices: "0121212131212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Mexico/General",
          untils: "-p1u4k0|2u7jw0|1sgdc0|8n400|7thc0|9eys0|3knek0|776k0|rf440|5t6k0|1evk40|71mk0|30p1g0|8n180|nufxo0|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|9q2s0|7k580|9q2s0|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|Infinity",
          offsets: "396.6|420|360|300",
          offsetIndices: "012121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "MST",
          untils: "Infinity",
          offsets: "420",
          offsetIndices: "0"
        }, {
          id: "MST7MDT",
          untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|1tz5k0|2dvo0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "420|360",
          offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Navajo",
          untils: "-r0epo0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|2vmk0|ataw40|1tz5k0|2dvo0|a7n9g0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "420|360",
          offsetIndices: "01010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "NZ-CHAT",
          untils: "-ciya10|f1tq90|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
          offsets: "-735|-765|-825",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "NZ",
          untils: "-m01p20|64ak0|biw40|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|8a3y0|afyq0|8a3y0|afyq0|afvy0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|b5ta0|7k9e0|b5ta0|7x820|hsl2m0|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
          offsets: "-690|-750|-720|-780",
          offsetIndices: "01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "Pacific/Apia",
          untils: "-usiiv4|kcrmt4|vp3la0|9odo0|902o0|4zbk0|4qog0|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
          offsets: "686.9333|690|660|600|-840|-780",
          offsetIndices: "01232345454545454545454545454545454545454545454545454545454"
        }, {
          id: "Pacific/Auckland",
          untils: "-m01p20|64ak0|biw40|7x5a0|asxe0|7x5a0|asxe0|7x5a0|asxe0|8a3y0|afyq0|8a3y0|afyq0|afvy0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|asum0|7x820|b5ta0|7k9e0|b5ta0|7x820|hsl2m0|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
          offsets: "-690|-750|-720|-780",
          offsetIndices: "01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "Pacific/Bougainville",
          untils: "-ecsh40|1n05g0|1071c40|Infinity",
          offsets: "-600|-540|-660",
          offsetIndices: "0102"
        }, {
          id: "Pacific/Chatham",
          untils: "-ciya10|f1tq90|5reo0|clpc0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6uao0|c8qo0|6hc00|b5uo0|8a5c0|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|afxc0|8a5c0|afxc0|8a5c0|afxc0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|8n400|a2yo0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|a2yo0|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|902o0|9q000|9d1c0|9q000|902o0|9q000|902o0|Infinity",
          offsets: "-735|-765|-825",
          offsetIndices: "012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212"
        }, {
          id: "Pacific/Chuuk",
          untils: "-su4zs0|29hes0|bkenw0|29fk40|Infinity",
          offsets: "-600|-540",
          offsetIndices: "01010"
        }, {
          id: "Pacific/Easter",
          untils: "-jhfaew|ivmeuw|7k580|c8tg0|6h980|a31g0|7x3w0|asys0|7x3w0|b5xg0|7k580|ag040|8a2k0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|iq2o0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|9cyk0|9d440|7x3w0|asys0|7x3w0|b5xg0|7k580|9q2s0|8zzw0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|a31g0|9px80|9q2s0|7x3w0|b5xg0|7k580|b5xg0|7k580|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|8n180|a31g0|7x3w0|asys0|8zzw0|9q2s0|ast80|5eis0|cyl80|6hes0|c8nw0|6udg0|bvp80|6udg0|vonw0|4olg0|e1h80|4olg0|e1h80|4olg0|c8nw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|b5rw0|7x9g0|ast80|7x9g0|Infinity",
          offsets: "437.4667|420|360|300",
          offsetIndices: "012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323"
        }, {
          id: "Pacific/Efate",
          untils: "-u964i4|11f4ba4|9cyk0|awo40|7tek0|9q2s0|8zzw0|9q2s0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9q2s0|64ak0|e1ms0|4ofw0|Infinity",
          offsets: "-673.2667|-660|-720",
          offsetIndices: "0121212121212121212121"
        }, {
          id: "Pacific/Enderbury",
          untils: "535io0|7yiqk0|Infinity",
          offsets: "720|660|-780",
          offsetIndices: "012"
        }, {
          id: "Pacific/Fakaofo",
          untils: "lx0jw0|Infinity",
          offsets: "660|-780",
          offsetIndices: "01"
        }, {
          id: "Pacific/Fiji",
          untils: "-sa2x4w|17bs00w|64dc0|cyo00|5reo0|53a5c0|64dc0|asw00|6uao0|bvs00|4oio0|e1k00|4oio0|eeio0|4bh80|erk40|3ylc0|erhc0|3ylc0|f4g00|3lmo0|f4g00|3lmo0|f4g00|3lmo0|fheo0|38o00|fheo0|3lmo0|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|3lmo0|f4g00|3lmo0|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|3lmo0|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|38o00|fheo0|3lmo0|f4g00|3lmo0|Infinity",
          offsets: "-715.7333|-720|-780",
          offsetIndices: "0121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Pacific/Funafuti",
          untils: "Infinity",
          offsets: "-720",
          offsetIndices: "0"
        }, {
          id: "Pacific/Galapagos",
          untils: "-kcr62o|spdryo|3lsas0|3jp80|Infinity",
          offsets: "358.4|300|360",
          offsetIndices: "01212"
        }, {
          id: "Pacific/Gambier",
          untils: "-tvndoc|Infinity",
          offsets: "539.8|540",
          offsetIndices: "01"
        }, {
          id: "Pacific/Guadalcanal",
          untils: "-tvowac|Infinity",
          offsets: "-639.8|-660",
          offsetIndices: "01"
        }, {
          id: "Pacific/Guam",
          untils: "-en8eg0|1dl9g0|7s1k40|txp80|3frms0|qdrpo|7kgac|3ljw0|c8tg0|6u7w0|bvus0|6u7w0|16uo40|3ljw0|16aas0|4ivxo|cls2c|6h980|c65zw0|Infinity",
          offsets: "-600|-540|-660",
          offsetIndices: "01020202020202020200"
        }, {
          id: "Pacific/Honolulu",
          untils: "-j50la0|13l00|4jvb00|1tyvu0|2e5e0|votg0|Infinity",
          offsets: "630|570|600",
          offsetIndices: "0101102"
        }, {
          id: "Pacific/Johnston",
          untils: "-j50la0|13l00|4jvb00|1tyvu0|2e5e0|votg0|Infinity",
          offsets: "630|570|600",
          offsetIndices: "0101102"
        }, {
          id: "Pacific/Kiritimati",
          untils: "535eyo|7yirhc|Infinity",
          offsets: "640|600|-840",
          offsetIndices: "012"
        }, {
          id: "Pacific/Kosrae",
          untils: "-su52k0|29hhk0|9cmd40|27sas0|29fk40|cm2540|f9l3w0|Infinity",
          offsets: "-660|-540|-600|-720",
          offsetIndices: "01021030"
        }, {
          id: "Pacific/Kwajalein",
          untils: "-h817w0|27sas0|1hjus0|ddxug0|cgv6k0|Infinity",
          offsets: "-660|-600|-540|720|-720",
          offsetIndices: "012034"
        }, {
          id: "Pacific/Majuro",
          untils: "-su52k0|29hhk0|9cmd40|27sas0|1h6w40|deat40|Infinity",
          offsets: "-660|-540|-600|-720",
          offsetIndices: "0102103"
        }, {
          id: "Pacific/Marquesas",
          untils: "-tvncu0|Infinity",
          offsets: "558|570",
          offsetIndices: "01"
        }, {
          id: "Pacific/Midway",
          untils: "-usij20|Infinity",
          offsets: "682.8|660",
          offsetIndices: "01"
        }, {
          id: "Pacific/Nauru",
          untils: "-pjxiws|ba66ys|1kwca0|hfzda0|Infinity",
          offsets: "-667.6667|-690|-540|-720",
          offsetIndices: "01213"
        }, {
          id: "Pacific/Niue",
          untils: "-9wyz6o|ehcj4o|Infinity",
          offsets: "680|690|660",
          offsetIndices: "012"
        }, {
          id: "Pacific/Norfolk",
          untils: "-9x0ps0|cfj8q0|6hc00|l6nk00|239aq0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|Infinity",
          offsets: "-672|-690|-750|-660|-720",
          offsetIndices: "012134343434343434343434343434343434343434"
        }, {
          id: "Pacific/Noumea",
          untils: "-u9645o|ye0ixo|4dbw0|ecqs0|4f6k0|99p700|4oio0|Infinity",
          offsets: "-665.8|-660|-720",
          offsetIndices: "01212121"
        }, {
          id: "Pacific/Pago_Pago",
          untils: "-usij20|Infinity",
          offsets: "682.8|660",
          offsetIndices: "01"
        }, {
          id: "Pacific/Palau",
          untils: "Infinity",
          offsets: "-540",
          offsetIndices: "0"
        }, {
          id: "Pacific/Pitcairn",
          untils: "es2cy0|Infinity",
          offsets: "510|480",
          offsetIndices: "01"
        }, {
          id: "Pacific/Pohnpei",
          untils: "-su52k0|29hhk0|9cmd40|27sas0|29fk40|Infinity",
          offsets: "-660|-540|-600",
          offsetIndices: "010210"
        }, {
          id: "Pacific/Ponape",
          untils: "-su52k0|29hhk0|9cmd40|27sas0|29fk40|Infinity",
          offsets: "-660|-540|-600",
          offsetIndices: "010210"
        }, {
          id: "Pacific/Port_Moresby",
          untils: "Infinity",
          offsets: "-600",
          offsetIndices: "0"
        }, {
          id: "Pacific/Rarotonga",
          untils: "4mj960|5rbw0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6ham0|c8s20|6u9a0|c8s20|6ham0|c8s20|6ham0|c8s20|6ham0|Infinity",
          offsets: "630|570|600",
          offsetIndices: "012121212121212121212121212"
        }, {
          id: "Pacific/Saipan",
          untils: "-en8eg0|1dl9g0|7s1k40|txp80|3frms0|qdrpo|7kgac|3ljw0|c8tg0|6u7w0|bvus0|6u7w0|16uo40|3ljw0|16aas0|4ivxo|cls2c|6h980|c65zw0|Infinity",
          offsets: "-600|-540|-660",
          offsetIndices: "01020202020202020200"
        }, {
          id: "Pacific/Samoa",
          untils: "-usij20|Infinity",
          offsets: "682.8|660",
          offsetIndices: "01"
        }, {
          id: "Pacific/Tahiti",
          untils: "-tvnayw|Infinity",
          offsets: "598.2667|600",
          offsetIndices: "01"
        }, {
          id: "Pacific/Tarawa",
          untils: "Infinity",
          offsets: "-720",
          offsetIndices: "0"
        }, {
          id: "Pacific/Tongatapu",
          untils: "-f4vrlc|uo2edc|8fpc0|bvs00|4bh80|eelg0|4bh80|7pmis0|3lmo0|Infinity",
          offsets: "-740|-780|-840",
          offsetIndices: "0121212121"
        }, {
          id: "Pacific/Truk",
          untils: "-su4zs0|29hes0|bkenw0|29fk40|Infinity",
          offsets: "-600|-540",
          offsetIndices: "01010"
        }, {
          id: "Pacific/Wake",
          untils: "Infinity",
          offsets: "-720",
          offsetIndices: "0"
        }, {
          id: "Pacific/Wallis",
          untils: "Infinity",
          offsets: "-720",
          offsetIndices: "0"
        }, {
          id: "Pacific/Yap",
          untils: "-su4zs0|29hes0|bkenw0|29fk40|Infinity",
          offsets: "-600|-540",
          offsetIndices: "01010"
        }, {
          id: "Poland",
          untils: "-se9yk0|dvyc0|7ves0|a4yw0|7x6o0|asw00|7x6o0|aunw0|7x6o0|1evbs0|9fcwc0|18cao0|7k800|9q000|9d1c0|9gnw0|an980|9kd80|8fs40|922w0|ar1c0|7x6o0|a2yo0|8n400|9q000|902o0|4013w0|64dc0|9d1c0|9d1c0|clpc0|6hc00|9d1c0|9d1c0|c8qo0|6hc00|c8qo0|6hc00|c8qo0|6hc00|clpc0|64dc0|6j4tc0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "-84|-60|-120|-180",
          offsetIndices: "012121223212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "Portugal",
          untils: "-u9rhc0|2bufw0|6zxg0|66580|bq800|73k00|bodc0|71pc0|bq800|73k00|bq800|71pc0|bq800|1b2g00|9b6o0|saio0|8n400|9q000|902o0|a2yo0|902o0|a2yo0|8n400|st1c0|8n400|9d1c0|9d1c0|sg2o0|9d1c0|902o0|9q000|a2yo0|8n400|9d1c0|9d1c0|902o0|9q000|a2yo0|b5uo0|51hc0|bitc0|9d1c0|9ew00|88ao0|25p80|5reo0|3lpg0|779c0|1sqk0|6uao0|38qs0|6uao0|25p80|6hc00|38qs0|6uao0|25p80|6hc00|38qs0|8a5c0|9d1c0|9d9o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|s3400|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|5gyl40|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d440|9cyk0|9d440|9d1c0|9d1c0|9d1c0|9d1c0|9d440|9cyk0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "36.75|0|-60|-120",
          offsetIndices: "012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121212121212121212121212121212121212122323232212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "PRC",
          untils: "-qh00w0|8sl80|asbpg0|6w2k0|7ves0|bxjw0|4mqs0|1vduk0|d4as0|75bw0|a31g0|aaak0|9d440|7v980|awo40|1dx80|j9xpo0|6u7w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|Infinity",
          offsets: "-480|-540",
          offsetIndices: "01010101010101010101010101010"
        }, {
          id: "PST8PDT",
          untils: "-r0emw0|ast80|7x9g0|ast80|bmtus0|1tz2s0|2dyg0|b9gdg0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "480|420",
          offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "ROC",
          untils: "-gtzfk0|45slc0|c51c0|75bw0|a31g0|aaak0|9d440|7v980|awo40|7v980|awo40|7v980|awo40|7v980|7tk40|clmk0|7rpg0|b07w0|7rpg0|b07w0|7rpg0|9et80|9eys0|9et80|9d440|9et80|9d440|9et80|9d440|9et80|cjxg0|69uk0|ci2s0|69uk0|6its40|9et80|9d440|9et80|1yf9g0|4qak0|Infinity",
          offsets: "-480|-540",
          offsetIndices: "01010101010101010101010101010101010101010"
        }, {
          id: "ROK",
          untils: "-w8966g|1yh18g|hkx5a0|1faao0|5cik0|ae5g0|8a2k0|ae5g0|8bx80|c8tg0|6h980|1bj6s0|l3aq0|6j3w0|d2g40|6u7w0|b5xg0|776k0|biw40|776k0|biw40|776k0|biw40|776k0|grs40|dfqxi0|7x6o0|asw00|7x6o0|Infinity",
          offsets: "-507.8667|-510|-540|-600|-570",
          offsetIndices: "012232323232141414141414123232"
        }, {
          id: "Singapore",
          untils: "-xphpwd|eeb94d|4it32o|8n3jc|1v2p60|iy3o60|Infinity",
          offsets: "-415.4167|-420|-440|-450|-540|-480",
          offsetIndices: "0123435"
        }, {
          id: "Turkey",
          untils: "-ux9xew|2wvx6w|7v980|1tjc40|aunw0|88dg0|9et80|8yas0|a2vw0|tzpg0|79180|awo40|7v980|7p4040|4zjw0|2vs40|f4d80|9vms0|1u5ek0|c5440|69uk0|acas0|8n180|a31g0|8n180|9q2s0|8zzw0|a31g0|8zzw0|a31g0|8n180|5md9g0|o9zw0|a6qs0|75bw0|4iwyw0|7x6o0|7kas0|b5rw0|75hg0|bkl80|77c40|biqk0|7x9g0|a2vw0|8n6s0|4iqc0|2nkw80|38l80|kdes0|8qtc0|8a5c0|9ew00|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|902o0|9q000|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7kdk0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7m2o0|b4000|7k800|b5uo0|7x6o0|asw00|7z1c0|ar1c0|7x6o0|bitc0|779c0|8fe80|Infinity",
          offsets: "-116.9333|-120|-180|-240",
          offsetIndices: "0121212121212121212121212121212121212121212121223212121212121212121212121212121212121212121212121212121212121212122"
        }, {
          id: "UCT",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "Universal",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "US/Alaska",
          untils: "-ek1qo0|1tyx80|2e400|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l940|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "600|540|480",
          offsetIndices: "011001010101010101010101010101010111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "US/Aleutian",
          untils: "-ek1nw0|1tyug0|2e6s0|b7yik0|12y080|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|1l940|7rs80|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "660|600|540",
          offsetIndices: "011001010101010101010101010101010111212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "US/Arizona",
          untils: "-r0epo0|ast80|7x9g0|ast80|bmtus0|zjedo|4olg0|9et80|bs6lmc|9cyk0|Infinity",
          offsets: "420|360",
          offsetIndices: "01010101010"
        }, {
          id: "US/Central",
          untils: "-r0esg0|ast80|7x9g0|ast80|bvus0|776k0|7kas0|b5rw0|9d440|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|7x9g0|dbjw0|8a840|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300",
          offsetIndices: "01010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "US/East-Indiana",
          untils: "-r0esg0|ast80|7x9g0|ast80|baw840|51ek0|6w840|1tz8c0|2dsw0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|19q7w0|asys0|5qonw0|9cyk0|9d440|9cyk0|ihslg0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300|240",
          offsetIndices: "010101011010101010101010101010121212121212121212121212121212121212121212121212121212121212121212121"
        }, {
          id: "US/Eastern",
          untils: "-r0ev80|ast80|7x9g0|ast80|7x9g0|b5rw0|905g0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|6w840|1tzb40|2dq40|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "300|240",
          offsetIndices: "01010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "US/Hawaii",
          untils: "-j50la0|13l00|4jvb00|1tyvu0|2e5e0|votg0|Infinity",
          offsets: "630|570|600",
          offsetIndices: "0101102"
        }, {
          id: "US/Indiana-Starke",
          untils: "-r0esg0|ast80|7x9g0|ast80|bmtus0|1tz8c0|2dsw0|tj1g0|7x3w0|asys0|7x3w0|asys0|7x3w0|b5xg0|7k580|b5xg0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|7x3w0|asys0|9px80|9d440|9cyk0|9d440|7x3w0|asys0|7x3w0|asys0|9cyk0|9d440|9px80|9d440|9cyk0|9d440|s3180|1twas0|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|7j5400|asw00|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "360|300",
          offsetIndices: "0101011010101010101010101010101010101010101010101010101010101010101010101010101010101010111010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "US/Michigan",
          untils: "-xx8dyd|5eraud|dyeyk0|1tzb40|2dq40|1c9440|7x3w0|9rlbxo|71s2c|9d440|9cyk0|2cmdg0|9cyk0|3lpg0|f4d80|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "332.1833|360|300|240",
          offsetIndices: "0123323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232"
        }, {
          id: "US/Mountain",
          untils: "-r0epo0|ast80|7x9g0|ast80|7x9g0|b5rw0|7kas0|2vmk0|ataw40|1tz5k0|2dvo0|a7n9g0|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "420|360",
          offsetIndices: "01010101011010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "US/Pacific-New",
          untils: "-r0emw0|ast80|7x9g0|ast80|bmtus0|1tz2s0|2dyg0|1a3c5o|f2iic|owao0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "480|420",
          offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "US/Pacific",
          untils: "-r0emw0|ast80|7x9g0|ast80|bmtus0|1tz2s0|2dyg0|1a3c5o|f2iic|owao0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|902o0|9q000|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|9d440|9cyk0|9d440|9cyk0|3lpg0|f4d80|64g40|clmk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|9d440|9px80|905g0|9px80|9d440|9cyk0|9d440|9cyk0|9d440|9cyk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|8a840|afuk0|8a840|afuk0|8a840|ast80|7x9g0|ast80|7x9g0|ast80|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6udg0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|6hes0|c8nw0|Infinity",
          offsets: "480|420",
          offsetIndices: "010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "US/Samoa",
          untils: "-usij20|Infinity",
          offsets: "682.8|660",
          offsetIndices: "01"
        }, {
          id: "UTC",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }, {
          id: "W-SU",
          untils: "-rx5dmh|ipzua|97hc0|7yyk0|5i840|d9p80|1jwk7|2cvk0|s8o00|1qvw0|8fpc0|1jms0|is040|412as0|qi27w0|9et80|9d440|9et80|9d440|9et80|9eys0|9d6w0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d440|5reo0|3ljw0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|1vbzw0|Infinity",
          offsets: "-150.2833|-151.3167|-211.3167|-271.3167|-240|-180|-300|-120",
          offsetIndices: "012132345464575454545454545454545455754545454545454545454545454545454545454545"
        }, {
          id: "WET",
          untils: "3s9ms0|902o0|9q000|9d1c0|9d1c0|9d1c0|9q000|902o0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9d1c0|9q000|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|7x6o0|b5uo0|7k800|b5uo0|7k800|b5uo0|7k800|b5uo0|7x6o0|asw00|7x6o0|asw00|Infinity",
          offsets: "0|-60",
          offsetIndices: "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
        }, {
          id: "Zulu",
          untils: "Infinity",
          offsets: "0",
          offsetIndices: "0"
        }]
      };

      /***/
    }),
    /***/25209: (
    /*!***********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/tooltip_strategies/m_desktop_tooltip_strategy.js ***!
      \***********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"DesktopTooltipStrategy": function DesktopTooltipStrategy() {
          return /* binding */_DesktopTooltipStrategy;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/support */48491);
      /* harmony import */
      var _ui_tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../ui/tooltip */78553);
      /* harmony import */
      var _m_tooltip_strategy_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./m_tooltip_strategy_base */96961);
      /**
       * DevExtreme (esm/__internal/scheduler/tooltip_strategies/m_desktop_tooltip_strategy.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var APPOINTMENT_TOOLTIP_WRAPPER_CLASS = "dx-scheduler-appointment-tooltip-wrapper";
      var MAX_TOOLTIP_HEIGHT = 200;
      var _DesktopTooltipStrategy = /*#__PURE__*/function (_m_tooltip_strategy_b) {
        _inherits(_DesktopTooltipStrategy, _m_tooltip_strategy_b);
        function _DesktopTooltipStrategy() {
          _classCallCheck(this, _DesktopTooltipStrategy);
          return _callSuper(this, _DesktopTooltipStrategy, arguments);
        }
        _createClass(_DesktopTooltipStrategy, [{
          key: "_prepareBeforeVisibleChanged",
          value: function _prepareBeforeVisibleChanged(dataList) {
            this._tooltip.option("position", {
              my: "bottom",
              at: "top",
              boundary: this._getBoundary(dataList),
              offset: this._extraOptions.offset,
              collision: "fit flipfit"
            });
          }
        }, {
          key: "_getBoundary",
          value: function _getBoundary(dataList) {
            return this._options.isAppointmentInAllDayPanel(dataList[0].appointment) ? this._options.container : this._options.getScrollableContainer();
          }
        }, {
          key: "_onShown",
          value: function _onShown() {
            _get(_getPrototypeOf(_DesktopTooltipStrategy.prototype), "_onShown", this).call(this);
            if (this._extraOptions.isButtonClick) {
              this._list.focus();
              this._list.option("focusedElement", null);
            }
          }
        }, {
          key: "_createListOption",
          value: function _createListOption(target, dataList) {
            var result = _get(_getPrototypeOf(_DesktopTooltipStrategy.prototype), "_createListOption", this).call(this, target, dataList);
            result.showScrollbar = _core_utils_support__WEBPACK_IMPORTED_MODULE_0__.touch ? "always" : "onHover";
            return result;
          }
        }, {
          key: "_createTooltip",
          value: function _createTooltip(target, dataList) {
            var tooltip = this._createTooltipElement(APPOINTMENT_TOOLTIP_WRAPPER_CLASS);
            return this._options.createComponent(tooltip, _ui_tooltip__WEBPACK_IMPORTED_MODULE_1__["default"], {
              target: target,
              maxHeight: MAX_TOOLTIP_HEIGHT,
              rtlEnabled: this._extraOptions.rtlEnabled,
              onShown: this._onShown.bind(this),
              contentTemplate: this._getContentTemplate(dataList),
              wrapperAttr: {
                "class": APPOINTMENT_TOOLTIP_WRAPPER_CLASS
              }
            });
          }
        }, {
          key: "_onListRender",
          value: function _onListRender(e) {
            return this._extraOptions.dragBehavior && this._extraOptions.dragBehavior(e);
          }
        }, {
          key: "_onListItemContextMenu",
          value: function _onListItemContextMenu(e) {
            var contextMenuEventArgs = this._options.createEventArgs(e);
            this._options.onItemContextMenu(contextMenuEventArgs);
          }
        }]);
        return _DesktopTooltipStrategy;
      }(_m_tooltip_strategy_base__WEBPACK_IMPORTED_MODULE_2__.TooltipStrategyBase);
      /***/
    }),
    /***/20509: (
    /*!**********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/tooltip_strategies/m_mobile_tooltip_strategy.js ***!
      \**********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"MobileTooltipStrategy": function MobileTooltipStrategy() {
          return /* binding */_MobileTooltipStrategy;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/window */88684);
      /* harmony import */
      var _ui_overlay_ui_overlay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../ui/overlay/ui.overlay */59508);
      /* harmony import */
      var _m_tooltip_strategy_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_tooltip_strategy_base */96961);
      /**
       * DevExtreme (esm/__internal/scheduler/tooltip_strategies/m_mobile_tooltip_strategy.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var SLIDE_PANEL_CLASS_NAME = "dx-scheduler-overlay-panel";
      var MAX_TABLET_OVERLAY_HEIGHT_FACTOR = .9;
      var MAX_HEIGHT = {
        PHONE: 250,
        TABLET: "90%",
        DEFAULT: "auto"
      };
      var MAX_WIDTH = {
        PHONE: "100%",
        TABLET: "80%"
      };
      var animationConfig = {
        show: {
          type: "slide",
          duration: 300,
          from: {
            position: {
              my: "top",
              at: "bottom",
              of: (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
            }
          },
          to: {
            position: {
              my: "center",
              at: "center",
              of: (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
            }
          }
        },
        hide: {
          type: "slide",
          duration: 300,
          to: {
            position: {
              my: "top",
              at: "bottom",
              of: (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
            }
          },
          from: {
            position: {
              my: "center",
              at: "center",
              of: (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
            }
          }
        }
      };
      var createPhoneDeviceConfig = function createPhoneDeviceConfig(listHeight) {
        return {
          shading: false,
          width: MAX_WIDTH.PHONE,
          height: listHeight > MAX_HEIGHT.PHONE ? MAX_HEIGHT.PHONE : MAX_HEIGHT.DEFAULT,
          position: {
            my: "bottom",
            at: "bottom",
            of: (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
          }
        };
      };
      var createTabletDeviceConfig = function createTabletDeviceConfig(listHeight) {
        var currentMaxHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)((0, _core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()) * MAX_TABLET_OVERLAY_HEIGHT_FACTOR;
        return {
          shading: true,
          width: MAX_WIDTH.TABLET,
          height: listHeight > currentMaxHeight ? MAX_HEIGHT.TABLET : MAX_HEIGHT.DEFAULT,
          position: {
            my: "center",
            at: "center",
            of: (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()
          }
        };
      };
      var _MobileTooltipStrategy = /*#__PURE__*/function (_m_tooltip_strategy_b2) {
        _inherits(_MobileTooltipStrategy, _m_tooltip_strategy_b2);
        function _MobileTooltipStrategy() {
          _classCallCheck(this, _MobileTooltipStrategy);
          return _callSuper(this, _MobileTooltipStrategy, arguments);
        }
        _createClass(_MobileTooltipStrategy, [{
          key: "_shouldUseTarget",
          value: function _shouldUseTarget() {
            return false;
          }
        }, {
          key: "_onShowing",
          value: function _onShowing() {
            var isTabletWidth = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)((0, _core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)()) > 700;
            this._tooltip.option("height", MAX_HEIGHT.DEFAULT);
            var listHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterHeight)(this._list.$element());
            this._tooltip.option(isTabletWidth ? createTabletDeviceConfig(listHeight) : createPhoneDeviceConfig(listHeight));
          }
        }, {
          key: "_createTooltip",
          value: function _createTooltip(target, dataList) {
            var _this120 = this;
            var element = this._createTooltipElement(SLIDE_PANEL_CLASS_NAME);
            return this._options.createComponent(element, _ui_overlay_ui_overlay__WEBPACK_IMPORTED_MODULE_2__["default"], {
              target: (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_1__.getWindow)(),
              hideOnOutsideClick: true,
              animation: animationConfig,
              onShowing: function onShowing() {
                return _this120._onShowing();
              },
              onShown: this._onShown.bind(this),
              contentTemplate: this._getContentTemplate(dataList),
              wrapperAttr: {
                "class": SLIDE_PANEL_CLASS_NAME
              }
            });
          }
        }]);
        return _MobileTooltipStrategy;
      }(_m_tooltip_strategy_base__WEBPACK_IMPORTED_MODULE_3__.TooltipStrategyBase);
      /***/
    }),
    /***/96961: (
    /*!********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/tooltip_strategies/m_tooltip_strategy_base.js ***!
      \********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"TooltipStrategyBase": function TooltipStrategyBase() {
          return /* binding */_TooltipStrategyBase;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_templates_function_template__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/templates/function_template */51454);
      /* harmony import */
      var _ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../ui/button */66037);
      /* harmony import */
      var _ui_list_ui_list_edit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../ui/list/ui.list.edit */73636);
      /**
       * DevExtreme (esm/__internal/scheduler/tooltip_strategies/m_tooltip_strategy_base.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TOOLTIP_APPOINTMENT_ITEM = "dx-tooltip-appointment-item";
      var TOOLTIP_APPOINTMENT_ITEM_CONTENT = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-content");
      var TOOLTIP_APPOINTMENT_ITEM_CONTENT_SUBJECT = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-content-subject");
      var TOOLTIP_APPOINTMENT_ITEM_CONTENT_DATE = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-content-date");
      var TOOLTIP_APPOINTMENT_ITEM_MARKER = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-marker");
      var TOOLTIP_APPOINTMENT_ITEM_MARKER_BODY = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-marker-body");
      var TOOLTIP_APPOINTMENT_ITEM_DELETE_BUTTON_CONTAINER = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-delete-button-container");
      var TOOLTIP_APPOINTMENT_ITEM_DELETE_BUTTON = "".concat(TOOLTIP_APPOINTMENT_ITEM, "-delete-button");
      var _TooltipStrategyBase = /*#__PURE__*/function () {
        function _TooltipStrategyBase(options) {
          _classCallCheck(this, _TooltipStrategyBase);
          this._tooltip = null;
          this._options = options;
          this._extraOptions = null;
        }
        _createClass(_TooltipStrategyBase, [{
          key: "show",
          value: function show(target, dataList, extraOptions) {
            if (this._canShowTooltip(dataList)) {
              this.hide();
              this._extraOptions = extraOptions;
              this._showCore(target, dataList);
            }
          }
        }, {
          key: "_showCore",
          value: function _showCore(target, dataList) {
            if (!this._tooltip) {
              this._tooltip = this._createTooltip(target, dataList);
            } else {
              this._shouldUseTarget() && this._tooltip.option("target", target);
              this._list.option("dataSource", dataList);
            }
            this._prepareBeforeVisibleChanged(dataList);
            this._tooltip.option("visible", true);
          }
        }, {
          key: "_prepareBeforeVisibleChanged",
          value: function _prepareBeforeVisibleChanged(dataList) {}
        }, {
          key: "_getContentTemplate",
          value: function _getContentTemplate(dataList) {
            var _this121 = this;
            return function (container) {
              var listElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>");
              (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(container).append(listElement);
              _this121._list = _this121._createList(listElement, dataList);
            };
          }
        }, {
          key: "isAlreadyShown",
          value: function isAlreadyShown(target) {
            if (this._tooltip && this._tooltip.option("visible")) {
              return this._tooltip.option("target")[0] === target[0];
            }
            return;
          }
        }, {
          key: "_onShown",
          value: function _onShown() {
            this._list.option("focusStateEnabled", this._extraOptions.focusStateEnabled);
          }
        }, {
          key: "dispose",
          value: function dispose() {}
        }, {
          key: "hide",
          value: function hide() {
            if (this._tooltip) {
              this._tooltip.option("visible", false);
            }
          }
        }, {
          key: "_shouldUseTarget",
          value: function _shouldUseTarget() {
            return true;
          }
        }, {
          key: "_createTooltip",
          value: function _createTooltip(target, dataList) {}
        }, {
          key: "_canShowTooltip",
          value: function _canShowTooltip(dataList) {
            if (!dataList.length) {
              return false;
            }
            return true;
          }
        }, {
          key: "_createListOption",
          value: function _createListOption(dataList) {
            var _this122 = this;
            return {
              dataSource: dataList,
              onContentReady: this._onListRender.bind(this),
              onItemClick: function onItemClick(e) {
                return _this122._onListItemClick(e);
              },
              onItemContextMenu: this._onListItemContextMenu.bind(this),
              itemTemplate: function itemTemplate(item, index) {
                return _this122._renderTemplate(item.appointment, item.targetedAppointment, index, item.color);
              },
              _swipeEnabled: false,
              pageLoadMode: "scrollBottom"
            };
          }
        }, {
          key: "_onListRender",
          value: function _onListRender(e) {}
        }, {
          key: "_createTooltipElement",
          value: function _createTooltipElement(wrapperClass) {
            return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").appendTo(this._options.container).addClass(wrapperClass);
          }
        }, {
          key: "_createList",
          value: function _createList(listElement, dataList) {
            return this._options.createComponent(listElement, _ui_list_ui_list_edit__WEBPACK_IMPORTED_MODULE_3__["default"], this._createListOption(dataList));
          }
        }, {
          key: "_renderTemplate",
          value: function _renderTemplate(appointment, targetedAppointment, index, color) {
            var itemListContent = this._createItemListContent(appointment, targetedAppointment, color);
            this._options.addDefaultTemplates(_defineProperty({}, this._getItemListTemplateName(), new _core_templates_function_template__WEBPACK_IMPORTED_MODULE_1__.FunctionTemplate(function (options) {
              var $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(options.container);
              $container.append(itemListContent);
              return $container;
            })));
            var template = this._options.getAppointmentTemplate("".concat(this._getItemListTemplateName(), "Template"));
            return this._createFunctionTemplate(template, appointment, targetedAppointment, index);
          }
        }, {
          key: "_createFunctionTemplate",
          value: function _createFunctionTemplate(template, appointmentData, targetedAppointmentData, index) {
            var isButtonClicked = !!this._extraOptions.isButtonClick;
            var isEmptyDropDownAppointmentTemplate = this._isEmptyDropDownAppointmentTemplate();
            return new _core_templates_function_template__WEBPACK_IMPORTED_MODULE_1__.FunctionTemplate(function (options) {
              return template.render({
                model: isEmptyDropDownAppointmentTemplate ? {
                  appointmentData: appointmentData,
                  targetedAppointmentData: targetedAppointmentData,
                  isButtonClicked: isButtonClicked
                } : appointmentData,
                container: options.container,
                index: index
              });
            });
          }
        }, {
          key: "_getItemListTemplateName",
          value: function _getItemListTemplateName() {
            return this._isEmptyDropDownAppointmentTemplate() ? "appointmentTooltip" : "dropDownAppointment";
          }
        }, {
          key: "_isEmptyDropDownAppointmentTemplate",
          value: function _isEmptyDropDownAppointmentTemplate() {
            return !this._extraOptions.dropDownAppointmentTemplate || "dropDownAppointment" === this._extraOptions.dropDownAppointmentTemplate;
          }
        }, {
          key: "_onListItemClick",
          value: function _onListItemClick(e) {
            this.hide();
            this._extraOptions.clickEvent && this._extraOptions.clickEvent(e);
            this._options.showAppointmentPopup(e.itemData.appointment, false, e.itemData.targetedAppointment);
          }
        }, {
          key: "_onListItemContextMenu",
          value: function _onListItemContextMenu(e) {}
        }, {
          key: "_createItemListContent",
          value: function _createItemListContent(appointment, targetedAppointment, color) {
            var editing = this._extraOptions.editing;
            var $itemElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM);
            $itemElement.append(this._createItemListMarker(color));
            $itemElement.append(this._createItemListInfo(this._options.createFormattedDateText(appointment, targetedAppointment)));
            var disabled = this._options.getAppointmentDisabled(appointment);
            if (!disabled && (editing && true === editing.allowDeleting || true === editing)) {
              $itemElement.append(this._createDeleteButton(appointment, targetedAppointment));
            }
            return $itemElement;
          }
        }, {
          key: "_createItemListMarker",
          value: function _createItemListMarker(color) {
            var $marker = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_MARKER);
            var $markerBody = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_MARKER_BODY);
            $marker.append($markerBody);
            color && color.done(function (value) {
              return $markerBody.css("background", value);
            });
            return $marker;
          }
        }, {
          key: "_createItemListInfo",
          value: function _createItemListInfo(object) {
            var result = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_CONTENT);
            var $title = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_CONTENT_SUBJECT).text(object.text);
            var $date = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_CONTENT_DATE).text(object.formatDate);
            return result.append($title).append($date);
          }
        }, {
          key: "_createDeleteButton",
          value: function _createDeleteButton(appointment, targetedAppointment) {
            var _this123 = this;
            var $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_DELETE_BUTTON_CONTAINER);
            var $deleteButton = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(TOOLTIP_APPOINTMENT_ITEM_DELETE_BUTTON);
            $container.append($deleteButton);
            this._options.createComponent($deleteButton, _ui_button__WEBPACK_IMPORTED_MODULE_2__["default"], {
              icon: "trash",
              stylingMode: "text",
              onClick: function onClick(e) {
                _this123.hide();
                e.event.stopPropagation();
                _this123._options.checkAndDeleteAppointment(appointment, targetedAppointment);
              }
            });
            return $container;
          }
        }]);
        return _TooltipStrategyBase;
      }();
      /***/
    }),
    /***/47407: (
    /*!******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/utils/is_scheduler_component.js ***!
      \******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"isSchedulerComponent": function isSchedulerComponent() {
          return /* binding */_isSchedulerComponent;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/__internal/scheduler/utils/is_scheduler_component.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var schedulerComponentName = "dxScheduler";
      function _isSchedulerComponent(component) {
        return component.NAME === schedulerComponentName;
      }

      /***/
    }),
    /***/33901: (
    /*!**************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/helpers/m_position_helper.js ***!
      \**************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getCellHeight": function getCellHeight() {
          return /* binding */_getCellHeight;
        },
        /* harmony export */"getCellWidth": function getCellWidth() {
          return /* binding */_getCellWidth;
        },
        /* harmony export */"getAllDayHeight": function getAllDayHeight() {
          return /* binding */_getAllDayHeight2;
        },
        /* harmony export */"getMaxAllowedPosition": function getMaxAllowedPosition() {
          return /* binding */_getMaxAllowedPosition;
        },
        /* harmony export */"getGroupWidth": function getGroupWidth() {
          return /* binding */_getGroupWidth;
        },
        /* harmony export */"PositionHelper": function PositionHelper() {
          return /* binding */_PositionHelper;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/helpers/m_position_helper.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var getCellSize = function getCellSize(DOMMetaData) {
        var dateTableCellsMeta = DOMMetaData.dateTableCellsMeta;
        var length = null === dateTableCellsMeta || void 0 === dateTableCellsMeta ? void 0 : dateTableCellsMeta.length;
        if (!length) {
          return {
            width: 0,
            height: 0
          };
        }
        var cellIndex = length > 1 ? 1 : 0;
        var cellSize = dateTableCellsMeta[cellIndex][0];
        return {
          width: cellSize.width,
          height: cellSize.height
        };
      };
      var getMaxAllowedHorizontalPosition = function getMaxAllowedHorizontalPosition(groupIndex, viewDataProvider, rtlEnabled, DOMMetaData) {
        var dateTableCellsMeta = DOMMetaData.dateTableCellsMeta;
        var firstRow = dateTableCellsMeta[0];
        if (!firstRow) {
          return 0;
        }
        var _viewDataProvider$get = viewDataProvider.getLastGroupCellPosition(groupIndex),
          columnIndex = _viewDataProvider$get.columnIndex;
        var cellPosition = firstRow[columnIndex];
        if (!cellPosition) {
          return 0;
        }
        return !rtlEnabled ? cellPosition.left + cellPosition.width : cellPosition.left;
      };
      var _getCellHeight = function _getCellHeight(DOMMetaData) {
        return getCellSize(DOMMetaData).height;
      };
      var _getCellWidth = function _getCellWidth(DOMMetaData) {
        return getCellSize(DOMMetaData).width;
      };
      var _getAllDayHeight2 = function _getAllDayHeight(showAllDayPanel, isVerticalGrouping, DOMMetaData) {
        if (!showAllDayPanel) {
          return 0;
        }
        if (isVerticalGrouping) {
          var dateTableCellsMeta = DOMMetaData.dateTableCellsMeta;
          var length = null === dateTableCellsMeta || void 0 === dateTableCellsMeta ? void 0 : dateTableCellsMeta.length;
          return length ? dateTableCellsMeta[0][0].height : 0;
        }
        var allDayPanelCellsMeta = DOMMetaData.allDayPanelCellsMeta;
        return (null === allDayPanelCellsMeta || void 0 === allDayPanelCellsMeta ? void 0 : allDayPanelCellsMeta.length) ? allDayPanelCellsMeta[0].height : 0;
      };
      var _getMaxAllowedPosition = function _getMaxAllowedPosition(groupIndex, viewDataProvider, rtlEnabled, DOMMetaData) {
        var validGroupIndex = groupIndex || 0;
        return getMaxAllowedHorizontalPosition(validGroupIndex, viewDataProvider, rtlEnabled, DOMMetaData);
      };
      var _getGroupWidth = function _getGroupWidth(groupIndex, viewDataProvider, options) {
        var isVirtualScrolling = options.isVirtualScrolling,
          rtlEnabled = options.rtlEnabled,
          DOMMetaData = options.DOMMetaData;
        var cellWidth = _getCellWidth(DOMMetaData);
        var result = viewDataProvider.getCellCount(options) * cellWidth;
        if (isVirtualScrolling) {
          var groupedData = viewDataProvider.groupedDataMap.dateTableGroupedMap;
          var groupLength = groupedData[groupIndex][0].length;
          result = groupLength * cellWidth;
        }
        var position = _getMaxAllowedPosition(groupIndex, viewDataProvider, rtlEnabled, DOMMetaData);
        var currentPosition = position[groupIndex];
        if (currentPosition) {
          if (rtlEnabled) {
            result = currentPosition - position[groupIndex + 1];
          } else if (0 === groupIndex) {
            result = currentPosition;
          } else {
            result = currentPosition - position[groupIndex - 1];
          }
        }
        return result;
      };
      var _PositionHelper = /*#__PURE__*/function () {
        function _PositionHelper(options) {
          _classCallCheck(this, _PositionHelper);
          this.options = options;
          this.groupStrategy = this.options.isVerticalGrouping ? new GroupStrategyBase(this.options) : new GroupStrategyHorizontal(this.options);
        }
        _createClass(_PositionHelper, [{
          key: "viewDataProvider",
          get: function get() {
            return this.options.viewDataProvider;
          }
        }, {
          key: "rtlEnabled",
          get: function get() {
            return this.options.rtlEnabled;
          }
        }, {
          key: "isGroupedByDate",
          get: function get() {
            return this.options.isGroupedByDate;
          }
        }, {
          key: "groupCount",
          get: function get() {
            return this.options.groupCount;
          }
        }, {
          key: "DOMMetaData",
          get: function get() {
            return this.options.getDOMMetaDataCallback();
          }
        }, {
          key: "getHorizontalMax",
          value: function getHorizontalMax(groupIndex) {
            var _this124 = this;
            var getMaxPosition = function getMaxPosition(groupIndex) {
              return _getMaxAllowedPosition(groupIndex, _this124.viewDataProvider, _this124.rtlEnabled, _this124.DOMMetaData);
            };
            if (this.isGroupedByDate) {
              var viewPortGroupCount = this.viewDataProvider.getViewPortGroupCount();
              return Math.max(getMaxPosition(groupIndex), getMaxPosition(viewPortGroupCount - 1));
            }
            return getMaxPosition(groupIndex);
          }
        }, {
          key: "getResizableStep",
          value: function getResizableStep() {
            var cellWidth = _getCellWidth(this.DOMMetaData);
            if (this.isGroupedByDate) {
              return this.groupCount * cellWidth;
            }
            return cellWidth;
          }
        }, {
          key: "getVerticalMax",
          value: function getVerticalMax(options) {
            return this.groupStrategy.getVerticalMax(options);
          }
        }, {
          key: "getOffsetByAllDayPanel",
          value: function getOffsetByAllDayPanel(options) {
            return this.groupStrategy.getOffsetByAllDayPanel(options);
          }
        }, {
          key: "getGroupTop",
          value: function getGroupTop(options) {
            return this.groupStrategy.getGroupTop(options);
          }
        }]);
        return _PositionHelper;
      }();
      var GroupStrategyBase = /*#__PURE__*/function () {
        function GroupStrategyBase(options) {
          _classCallCheck(this, GroupStrategyBase);
          this.options = options;
        }
        _createClass(GroupStrategyBase, [{
          key: "viewDataProvider",
          get: function get() {
            return this.options.viewDataProvider;
          }
        }, {
          key: "isGroupedByDate",
          get: function get() {
            return this.options.isGroupedByDate;
          }
        }, {
          key: "rtlEnabled",
          get: function get() {
            return this.options.rtlEnabled;
          }
        }, {
          key: "groupCount",
          get: function get() {
            return this.options.groupCount;
          }
        }, {
          key: "DOMMetaData",
          get: function get() {
            return this.options.getDOMMetaDataCallback();
          }
        }, {
          key: "getOffsetByAllDayPanel",
          value: function getOffsetByAllDayPanel(_ref) {
            var groupIndex = _ref.groupIndex,
              supportAllDayRow = _ref.supportAllDayRow,
              showAllDayPanel = _ref.showAllDayPanel;
            var result = 0;
            if (supportAllDayRow && showAllDayPanel) {
              var allDayPanelHeight = _getAllDayHeight2(showAllDayPanel, true, this.DOMMetaData);
              result = allDayPanelHeight * (groupIndex + 1);
            }
            return result;
          }
        }, {
          key: "getVerticalMax",
          value: function getVerticalMax(options) {
            var maxAllowedPosition = this._getMaxAllowedVerticalPosition((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {
              viewDataProvider: this.viewDataProvider,
              rtlEnabled: this.rtlEnabled,
              DOMMetaData: this.DOMMetaData
            }));
            maxAllowedPosition += this.getOffsetByAllDayPanel(options);
            return maxAllowedPosition;
          }
        }, {
          key: "getGroupTop",
          value: function getGroupTop(_ref2) {
            var groupIndex = _ref2.groupIndex,
              showAllDayPanel = _ref2.showAllDayPanel,
              isGroupedAllDayPanel = _ref2.isGroupedAllDayPanel;
            var rowCount = this.viewDataProvider.getRowCountInGroup(groupIndex);
            var maxVerticalPosition = this._getMaxAllowedVerticalPosition({
              groupIndex: groupIndex,
              viewDataProvider: this.viewDataProvider,
              showAllDayPanel: showAllDayPanel,
              isGroupedAllDayPanel: isGroupedAllDayPanel,
              isVerticalGrouping: true,
              DOMMetaData: this.DOMMetaData
            });
            return maxVerticalPosition - _getCellHeight(this.DOMMetaData) * rowCount;
          }
        }, {
          key: "_getAllDayHeight",
          value: function _getAllDayHeight(showAllDayPanel) {
            return _getAllDayHeight2(showAllDayPanel, true, this.DOMMetaData);
          }
        }, {
          key: "_getMaxAllowedVerticalPosition",
          value: function _getMaxAllowedVerticalPosition(_ref3) {
            var groupIndex = _ref3.groupIndex,
              showAllDayPanel = _ref3.showAllDayPanel,
              isGroupedAllDayPanel = _ref3.isGroupedAllDayPanel;
            var _this$viewDataProvide = this.viewDataProvider.getLastGroupCellPosition(groupIndex),
              rowIndex = _this$viewDataProvide.rowIndex;
            var dateTableCellsMeta = this.DOMMetaData.dateTableCellsMeta;
            var lastGroupRow = dateTableCellsMeta[rowIndex];
            if (!lastGroupRow) {
              return 0;
            }
            var result = lastGroupRow[0].top + lastGroupRow[0].height;
            if (isGroupedAllDayPanel) {
              result -= (groupIndex + 1) * this._getAllDayHeight(showAllDayPanel);
            }
            return result;
          }
        }]);
        return GroupStrategyBase;
      }();
      var GroupStrategyHorizontal = /*#__PURE__*/function (_GroupStrategyBase) {
        _inherits(GroupStrategyHorizontal, _GroupStrategyBase);
        function GroupStrategyHorizontal() {
          _classCallCheck(this, GroupStrategyHorizontal);
          return _callSuper(this, GroupStrategyHorizontal, arguments);
        }
        _createClass(GroupStrategyHorizontal, [{
          key: "getOffsetByAllDayPanel",
          value: function getOffsetByAllDayPanel() {
            return 0;
          }
        }, {
          key: "getVerticalMax",
          value: function getVerticalMax(options) {
            var isVirtualScrolling = options.isVirtualScrolling,
              groupIndex = options.groupIndex;
            var correctedGroupIndex = isVirtualScrolling ? groupIndex : 0;
            return this._getMaxAllowedVerticalPosition((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {
              groupIndex: correctedGroupIndex
            }));
          }
        }, {
          key: "getGroupTop",
          value: function getGroupTop() {
            return 0;
          }
        }, {
          key: "_getAllDayHeight",
          value: function _getAllDayHeight(showAllDayPanel) {
            return _getAllDayHeight2(showAllDayPanel, false, this.DOMMetaData);
          }
        }]);
        return GroupStrategyHorizontal;
      }(GroupStrategyBase);
      /***/
    }),
    /***/22693: (
    /*!*********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_agenda.js ***!
      \*********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/dom_adapter */81113);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/element */60213);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/utils/common */37552);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../../localization/date */83881);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_agenda__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/agenda */7967);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _m_classes__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../m_classes */16874);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_table_creator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../m_table_creator */69100);
      /* harmony import */
      var _resources_m_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../resources/m_utils */48025);
      /* harmony import */
      var _m_work_space__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ./m_work_space */2148);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_agenda.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var tableCreator = _m_table_creator__WEBPACK_IMPORTED_MODULE_14__["default"].tableCreator;
      var AGENDA_CLASS = "dx-scheduler-agenda";
      var AGENDA_DATE_CLASS = "dx-scheduler-agenda-date";
      var GROUP_TABLE_CLASS = "dx-scheduler-group-table";
      var TIME_PANEL_ROW_CLASS = "dx-scheduler-time-panel-row";
      var TIME_PANEL_CELL_CLASS = "dx-scheduler-time-panel-cell";
      var NODATA_CONTAINER_CLASS = "dx-scheduler-agenda-nodata";
      var LAST_ROW_CLASS = "dx-scheduler-date-table-last-row";
      var INNER_CELL_MARGIN = 5;
      var OUTER_CELL_MARGIN = 20;
      var SchedulerAgenda = /*#__PURE__*/function (_m_work_space__WEBPAC) {
        _inherits(SchedulerAgenda, _m_work_space__WEBPAC);
        function SchedulerAgenda() {
          _classCallCheck(this, SchedulerAgenda);
          return _callSuper(this, SchedulerAgenda, arguments);
        }
        _createClass(SchedulerAgenda, [{
          key: "type",
          get: function get() {
            return _m_constants__WEBPACK_IMPORTED_MODULE_13__.VIEWS.AGENDA;
          }
        }, {
          key: "renderingStrategy",
          get: function get() {
            return this.invoke("getLayoutManager").getRenderingStrategyInstance();
          }
        }, {
          key: "appointmentDataProvider",
          get: function get() {
            return this.option("getAppointmentDataProvider")();
          }
        }, {
          key: "getStartViewDate",
          value: function getStartViewDate() {
            return this._startViewDate;
          }
        }, {
          key: "_init",
          value: function _init() {
            _get(_getPrototypeOf(SchedulerAgenda.prototype), "_init", this).call(this);
            this._activeStateUnit = void 0;
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_6__.extend)(_get(_getPrototypeOf(SchedulerAgenda.prototype), "_getDefaultOptions", this).call(this), {
              agendaDuration: 7,
              rowHeight: 60,
              noDataText: ""
            });
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(args) {
            var name = args.name;
            var value = args.value;
            switch (name) {
              case "agendaDuration":
                break;
              case "noDataText":
              case "rowHeight":
                this._recalculateAgenda(this._rows);
                break;
              case "groups":
                if (!value || !value.length) {
                  if (this._$groupTable) {
                    this._$groupTable.remove();
                    this._$groupTable = null;
                    this._detachGroupCountClass();
                  }
                } else if (!this._$groupTable) {
                  this._initGroupTable();
                  this._dateTableScrollable.$content().prepend(this._$groupTable);
                }
                _get(_getPrototypeOf(SchedulerAgenda.prototype), "_optionChanged", this).call(this, args);
                break;
              default:
                _get(_getPrototypeOf(SchedulerAgenda.prototype), "_optionChanged", this).call(this, args);
            }
          }
        }, {
          key: "_renderFocusState",
          value: function _renderFocusState() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "_renderFocusTarget",
          value: function _renderFocusTarget() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "_cleanFocusState",
          value: function _cleanFocusState() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "supportAllDayRow",
          value: function supportAllDayRow() {
            return false;
          }
        }, {
          key: "_isVerticalGroupedWorkSpace",
          value: function _isVerticalGroupedWorkSpace() {
            return false;
          }
        }, {
          key: "_getElementClass",
          value: function _getElementClass() {
            return AGENDA_CLASS;
          }
        }, {
          key: "_calculateStartViewDate",
          value: function _calculateStartViewDate() {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_agenda__WEBPACK_IMPORTED_MODULE_10__.calculateStartViewDate)(this.option("currentDate"), this.option("startDayHour"));
          }
        }, {
          key: "_getRowCount",
          value: function _getRowCount() {
            return this.option("agendaDuration");
          }
        }, {
          key: "_getCellCount",
          value: function _getCellCount() {
            return 1;
          }
        }, {
          key: "_getTimePanelRowCount",
          value: function _getTimePanelRowCount() {
            return this.option("agendaDuration");
          }
        }, {
          key: "_renderAllDayPanel",
          value: function _renderAllDayPanel() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "_toggleAllDayVisibility",
          value: function _toggleAllDayVisibility() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "_initWorkSpaceUnits",
          value: function _initWorkSpaceUnits() {
            this._initGroupTable();
            this._$timePanel = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<table>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_12__.TIME_PANEL_CLASS);
            this._$dateTable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<table>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_12__.DATE_TABLE_CLASS);
            this._$dateTableScrollableContent = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass("dx-scheduler-date-table-scrollable-content");
            this._$dateTableContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass("dx-scheduler-date-table-container");
          }
        }, {
          key: "_initGroupTable",
          value: function _initGroupTable() {
            var groups = this.option("groups");
            if (groups && groups.length) {
              this._$groupTable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<table>").addClass(GROUP_TABLE_CLASS);
            }
          }
        }, {
          key: "_renderView",
          value: function _renderView() {
            this._startViewDate = this._calculateStartViewDate();
            this._rows = [];
            this._initPositionHelper();
          }
        }, {
          key: "_recalculateAgenda",
          value: function _recalculateAgenda(rows) {
            var cellTemplates = [];
            this._cleanView();
            if (this._rowsIsEmpty(rows)) {
              this._renderNoData();
              return;
            }
            this._rows = rows;
            if (this._$groupTable) {
              cellTemplates = this._renderGroupHeader();
              this._setGroupHeaderCellsHeight();
            }
            this._renderTimePanel();
            this._renderDateTable();
            this.invoke("onAgendaReady", rows);
            this._applyCellTemplates(cellTemplates);
            this._dateTableScrollable.update();
          }
        }, {
          key: "_renderNoData",
          value: function _renderNoData() {
            this._$noDataContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<div>").addClass(NODATA_CONTAINER_CLASS).html(this.option("noDataText"));
            this._dateTableScrollable.$content().append(this._$noDataContainer);
          }
        }, {
          key: "_setTableSizes",
          value: function _setTableSizes() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "_toggleHorizontalScrollClass",
          value: function _toggleHorizontalScrollClass() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "_createCrossScrollingConfig",
          value: function _createCrossScrollingConfig(argument) {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "_setGroupHeaderCellsHeight",
          value: function _setGroupHeaderCellsHeight() {
            var $cells = this._getGroupHeaderCells().filter(function (_, element) {
              return !element.getAttribute("rowSpan");
            });
            var rows = this._removeEmptyRows(this._rows);
            if (!rows.length) {
              return;
            }
            for (var i = 0; i < $cells.length; i++) {
              var $cellContent = $cells.eq(i).find(".dx-scheduler-group-header-content");
              (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_8__.setOuterHeight)($cellContent, this._getGroupRowHeight(rows[i]));
            }
          }
        }, {
          key: "_rowsIsEmpty",
          value: function _rowsIsEmpty(rows) {
            var result = true;
            for (var i = 0; i < rows.length; i++) {
              var groupRow = rows[i];
              for (var j = 0; j < groupRow.length; j++) {
                if (groupRow[j]) {
                  result = false;
                  break;
                }
              }
            }
            return result;
          }
        }, {
          key: "_attachGroupCountClass",
          value: function _attachGroupCountClass() {
            var className = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_11__.getVerticalGroupCountClass)(this.option("groups"));
            this.$element().addClass(className);
          }
        }, {
          key: "_removeEmptyRows",
          value: function _removeEmptyRows(rows) {
            var result = [];
            for (var i = 0; i < rows.length; i++) {
              if (rows[i].length && !(data = rows[i], !data.some(function (value) {
                return value > 0;
              }))) {
                result.push(rows[i]);
              }
            }
            var data;
            return result;
          }
        }, {
          key: "_getGroupHeaderContainer",
          value: function _getGroupHeaderContainer() {
            return this._$groupTable;
          }
        }, {
          key: "_makeGroupRows",
          value: function _makeGroupRows() {
            var _this125 = this;
            var tree = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_15__.createReducedResourcesTree)(this.option("loadedResources"), function (field, action) {
              return (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_15__.getDataAccessors)(_this125.option("getResourceDataAccessors")(), field, action);
            }, this.option("getFilteredItems")());
            var cellTemplate = this.option("resourceCellTemplate");
            var getGroupHeaderContentClass = _m_classes__WEBPACK_IMPORTED_MODULE_12__.GROUP_HEADER_CONTENT_CLASS;
            var cellTemplates = [];
            var table = tableCreator.makeGroupedTableFromJSON(tableCreator.VERTICAL, tree, {
              cellTag: "th",
              groupTableClass: GROUP_TABLE_CLASS,
              groupRowClass: _m_classes__WEBPACK_IMPORTED_MODULE_12__.GROUP_ROW_CLASS,
              groupCellClass: this._getGroupHeaderClass(),
              groupCellCustomContent: function groupCellCustomContent(cell, cellTextElement, index, data) {
                var container = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].createElement("div");
                container.className = getGroupHeaderContentClass;
                if (cellTemplate && cellTemplate.render) {
                  cellTemplates.push(cellTemplate.render.bind(cellTemplate, {
                    model: {
                      data: data.data,
                      id: data.value,
                      color: data.color,
                      text: cellTextElement.textContent
                    },
                    container: (0, _core_element__WEBPACK_IMPORTED_MODULE_2__.getPublicElement)((0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])(container)),
                    index: index
                  }));
                } else {
                  var contentWrapper = _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].createElement("div");
                  contentWrapper.appendChild(cellTextElement);
                  container.appendChild(contentWrapper);
                }
                cell.appendChild(container);
              },
              cellTemplate: cellTemplate
            });
            return {
              elements: (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])(table).find(".".concat(_m_classes__WEBPACK_IMPORTED_MODULE_12__.GROUP_ROW_CLASS)),
              cellTemplates: cellTemplates
            };
          }
        }, {
          key: "_cleanView",
          value: function _cleanView() {
            this._$dateTable.empty();
            this._$timePanel.empty();
            if (this._$groupTable) {
              this._$groupTable.empty();
            }
            if (this._$noDataContainer) {
              this._$noDataContainer.empty();
              this._$noDataContainer.remove();
              delete this._$noDataContainer;
            }
          }
        }, {
          key: "_createWorkSpaceElements",
          value: function _createWorkSpaceElements() {
            this._createWorkSpaceStaticElements();
          }
        }, {
          key: "_createWorkSpaceStaticElements",
          value: function _createWorkSpaceStaticElements() {
            this._$dateTableContainer.append(this._$dateTable);
            this._dateTableScrollable.$content().append(this._$dateTableScrollableContent);
            if (this._$groupTable) {
              this._$dateTableScrollableContent.prepend(this._$groupTable);
            }
            this._$dateTableScrollableContent.append(this._$timePanel, this._$dateTableContainer);
            this.$element().append(this._dateTableScrollable.$element());
          }
        }, {
          key: "_renderDateTable",
          value: function _renderDateTable() {
            this._renderTableBody({
              container: (0, _core_element__WEBPACK_IMPORTED_MODULE_2__.getPublicElement)(this._$dateTable),
              rowClass: _m_classes__WEBPACK_IMPORTED_MODULE_12__.DATE_TABLE_ROW_CLASS,
              cellClass: this._getDateTableCellClass()
            });
          }
        }, {
          key: "_attachTablesEvents",
          value: function _attachTablesEvents() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "_attachEvents",
          value: function _attachEvents() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "_cleanCellDataCache",
          value: function _cleanCellDataCache() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_4__.noop)();
          }
        }, {
          key: "isIndicationAvailable",
          value: function isIndicationAvailable() {
            return false;
          }
        }, {
          key: "_prepareCellTemplateOptions",
          value: function _prepareCellTemplateOptions(text, date, rowIndex, $cell) {
            var groupsOpt = this.option("groups");
            var groups = {};
            var isGroupedView = !!groupsOpt.length;
            var path = isGroupedView && (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_15__.getPathToLeaf)(rowIndex, groupsOpt) || [];
            path.forEach(function (resourceValue, resourceIndex) {
              var resourceName = groupsOpt[resourceIndex].name;
              groups[resourceName] = resourceValue;
            });
            var groupIndex = isGroupedView ? this._getGroupIndexByResourceId(groups) : void 0;
            return {
              model: {
                text: text,
                date: date,
                groups: groups,
                groupIndex: groupIndex
              },
              container: (0, _core_element__WEBPACK_IMPORTED_MODULE_2__.getPublicElement)($cell),
              index: rowIndex
            };
          }
        }, {
          key: "_renderTableBody",
          value: function _renderTableBody(options, delayCellTemplateRendering) {
            var cellTemplates = [];
            var cellTemplateOpt = options.cellTemplate;
            this._$rows = [];
            var i;
            var fillTableBody = function (rowIndex, rowSize) {
              if (rowSize) {
                var date;
                var cellDateNumber;
                var cellDayName;
                var $row = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<tr>");
                var $td = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<td>");
                (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_8__.setHeight)($td, this._getRowHeight(rowSize));
                if (options.getStartDate) {
                  date = options.getStartDate && options.getStartDate(rowIndex);
                  cellDateNumber = _localization_date__WEBPACK_IMPORTED_MODULE_9__["default"].format(date, "d");
                  cellDayName = _localization_date__WEBPACK_IMPORTED_MODULE_9__["default"].format(date, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_11__.formatWeekday);
                }
                if (cellTemplateOpt && cellTemplateOpt.render) {
                  var templateOptions = this._prepareCellTemplateOptions("".concat(cellDateNumber, " ").concat(cellDayName), date, i, $td);
                  cellTemplates.push(cellTemplateOpt.render.bind(cellTemplateOpt, templateOptions));
                } else if (cellDateNumber && cellDayName) {
                  $td.addClass(AGENDA_DATE_CLASS).text("".concat(cellDateNumber, " ").concat(cellDayName));
                }
                if (options.rowClass) {
                  $row.addClass(options.rowClass);
                }
                if (options.cellClass) {
                  $td.addClass(options.cellClass);
                }
                $row.append($td);
                this._$rows.push($row);
              }
            }.bind(this);
            for (i = 0; i < this._rows.length; i++) {
              (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_7__.each)(this._rows[i], fillTableBody);
              this._setLastRowClass();
            }
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])(options.container).append((0, _core_renderer__WEBPACK_IMPORTED_MODULE_3__["default"])("<tbody>").append(this._$rows));
            this._applyCellTemplates(cellTemplates);
          }
        }, {
          key: "_setLastRowClass",
          value: function _setLastRowClass() {
            if (this._rows.length > 1 && this._$rows.length) {
              var $lastRow = this._$rows[this._$rows.length - 1];
              $lastRow.addClass(LAST_ROW_CLASS);
            }
          }
        }, {
          key: "_renderTimePanel",
          value: function _renderTimePanel() {
            this._renderTableBody({
              container: (0, _core_element__WEBPACK_IMPORTED_MODULE_2__.getPublicElement)(this._$timePanel),
              rowCount: this._getTimePanelRowCount(),
              cellCount: 1,
              rowClass: TIME_PANEL_ROW_CLASS,
              cellClass: TIME_PANEL_CELL_CLASS,
              cellTemplate: this.option("dateCellTemplate"),
              getStartDate: this._getTimePanelStartDate.bind(this)
            });
          }
        }, {
          key: "_getTimePanelStartDate",
          value: function _getTimePanelStartDate(rowIndex) {
            var current = new Date(this.option("currentDate"));
            var cellDate = new Date(current.setDate(current.getDate() + rowIndex));
            return cellDate;
          }
        }, {
          key: "_getRowHeight",
          value: function _getRowHeight(rowSize) {
            var baseHeight = this.option("rowHeight");
            var innerOffset = (rowSize - 1) * INNER_CELL_MARGIN;
            return rowSize ? baseHeight * rowSize + innerOffset + OUTER_CELL_MARGIN : 0;
          }
        }, {
          key: "_getGroupRowHeight",
          value: function _getGroupRowHeight(groupRows) {
            if (!groupRows) {
              return;
            }
            var result = 0;
            for (var i = 0; i < groupRows.length; i++) {
              result += this._getRowHeight(groupRows[i]);
            }
            return result;
          }
        }, {
          key: "_calculateRows",
          value: function _calculateRows(appointments) {
            return this.renderingStrategy.calculateRows(appointments, this.option("agendaDuration"), this.option("currentDate"));
          }
        }, {
          key: "onDataSourceChanged",
          value: function onDataSourceChanged(appointments) {
            _get(_getPrototypeOf(SchedulerAgenda.prototype), "onDataSourceChanged", this).call(this);
            this._renderView();
            var rows = this._calculateRows(appointments);
            this._recalculateAgenda(rows);
          }
        }, {
          key: "getAgendaVerticalStepHeight",
          value: function getAgendaVerticalStepHeight() {
            return this.option("rowHeight");
          }
        }, {
          key: "getEndViewDate",
          value: function getEndViewDate() {
            var currentDate = new Date(this.option("currentDate"));
            var agendaDuration = this.option("agendaDuration");
            currentDate.setHours(this.option("endDayHour"));
            var result = currentDate.setDate(currentDate.getDate() + agendaDuration - 1) - 6e4;
            return new Date(result);
          }
        }, {
          key: "getEndViewDateByEndDayHour",
          value: function getEndViewDateByEndDayHour() {
            return this.getEndViewDate();
          }
        }, {
          key: "getCellDataByCoordinates",
          value: function getCellDataByCoordinates() {
            return {
              startDate: null,
              endDate: null
            };
          }
        }, {
          key: "updateScrollPosition",
          value: function updateScrollPosition(date) {
            var newDate = this.timeZoneCalculator.createDate(date, {
              path: "toGrid"
            });
            var bounds = this.getVisibleBounds();
            var startDateHour = newDate.getHours();
            var startDateMinutes = newDate.getMinutes();
            if (this.needUpdateScrollPosition(startDateHour, startDateMinutes, bounds, newDate)) {
              this.scrollToTime(startDateHour, startDateMinutes, newDate);
            }
          }
        }, {
          key: "needUpdateScrollPosition",
          value: function needUpdateScrollPosition(hours, minutes, bounds, newData) {
            var isUpdateNeeded = false;
            if (hours < bounds.top.hours || hours > bounds.bottom.hours) {
              isUpdateNeeded = true;
            }
            if (hours === bounds.top.hours && minutes < bounds.top.minutes) {
              isUpdateNeeded = true;
            }
            if (hours === bounds.bottom.hours && minutes > bounds.top.minutes) {
              isUpdateNeeded = true;
            }
            return isUpdateNeeded;
          }
        }, {
          key: "renovatedRenderSupported",
          value: function renovatedRenderSupported() {
            return false;
          }
        }, {
          key: "_setSelectedCellsByCellData",
          value: function _setSelectedCellsByCellData() {}
        }, {
          key: "_getIntervalDuration",
          value: function _getIntervalDuration() {
            return _core_utils_date__WEBPACK_IMPORTED_MODULE_5__["default"].dateToMilliseconds("day") * this.option("intervalCount");
          }
        }, {
          key: "getDOMElementsMetaData",
          value: function getDOMElementsMetaData() {
            return {
              dateTableCellsMeta: [[{}]],
              allDayPanelCellsMeta: [{}]
            };
          }
        }]);
        return SchedulerAgenda;
      }(_m_work_space__WEBPACK_IMPORTED_MODULE_16__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxSchedulerAgenda", SchedulerAgenda);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerAgenda;

      /***/
    }),
    /***/19133: (
    /*!********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_cache.js ***!
      \********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Cache": function Cache() {
          return /* binding */_Cache;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_cache.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _Cache = /*#__PURE__*/function () {
        function _Cache() {
          _classCallCheck(this, _Cache);
          this._cache = new Map();
        }
        _createClass(_Cache, [{
          key: "size",
          get: function get() {
            return this._cache.size;
          }
        }, {
          key: "clear",
          value: function clear() {
            this._cache.clear();
          }
        }, {
          key: "get",
          value: function get(name, callback) {
            if (!this._cache.has(name) && callback) {
              this.set(name, callback());
            }
            return this._cache.get(name);
          }
        }, {
          key: "set",
          value: function set(name, value) {
            (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(value) && this._cache.set(name, value);
          }
        }]);
        return _Cache;
      }();
      /***/
    }),
    /***/46389: (
    /*!*****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_cells_selection_controller.js ***!
      \*****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"CellsSelectionController": function CellsSelectionController() {
          return /* binding */_CellsSelectionController;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_cells_selection_controller.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _CellsSelectionController = /*#__PURE__*/function () {
        function _CellsSelectionController() {
          _classCallCheck(this, _CellsSelectionController);
        }
        _createClass(_CellsSelectionController, [{
          key: "handleArrowClick",
          value: function handleArrowClick(options) {
            var key = options.key,
              focusedCellPosition = options.focusedCellPosition,
              edgeIndices = options.edgeIndices,
              getCellDataByPosition = options.getCellDataByPosition,
              isAllDayPanelCell = options.isAllDayPanelCell;
            var nextCellIndices;
            switch (key) {
              case "down":
                nextCellIndices = this.getCellFromNextRowPosition(focusedCellPosition, "next", edgeIndices);
                break;
              case "up":
                nextCellIndices = this.getCellFromNextRowPosition(focusedCellPosition, "prev", edgeIndices);
                break;
              case "left":
                nextCellIndices = this.getCellFromNextColumnPosition((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {
                  direction: "prev"
                }));
                break;
              case "right":
                nextCellIndices = this.getCellFromNextColumnPosition((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {
                  direction: "next"
                }));
            }
            var currentCellData = getCellDataByPosition(nextCellIndices.rowIndex, nextCellIndices.columnIndex, isAllDayPanelCell);
            return this.moveToCell((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {
              currentCellData: currentCellData
            }));
          }
        }, {
          key: "getCellFromNextRowPosition",
          value: function getCellFromNextRowPosition(focusedCellPosition, direction, edgeIndices) {
            var columnIndex = focusedCellPosition.columnIndex,
              rowIndex = focusedCellPosition.rowIndex;
            var deltaPosition = "next" === direction ? 1 : -1;
            var nextRowIndex = rowIndex + deltaPosition;
            var validRowIndex = nextRowIndex >= 0 && nextRowIndex <= edgeIndices.lastRowIndex ? nextRowIndex : rowIndex;
            return {
              columnIndex: columnIndex,
              rowIndex: validRowIndex
            };
          }
        }, {
          key: "getCellFromNextColumnPosition",
          value: function getCellFromNextColumnPosition(options) {
            var focusedCellPosition = options.focusedCellPosition,
              direction = options.direction,
              edgeIndices = options.edgeIndices,
              isRTL = options.isRTL,
              isGroupedByDate = options.isGroupedByDate,
              groupCount = options.groupCount,
              isMultiSelection = options.isMultiSelection,
              viewType = options.viewType;
            var columnIndex = focusedCellPosition.columnIndex,
              rowIndex = focusedCellPosition.rowIndex;
            var firstColumnIndex = edgeIndices.firstColumnIndex,
              lastColumnIndex = edgeIndices.lastColumnIndex,
              firstRowIndex = edgeIndices.firstRowIndex,
              lastRowIndex = edgeIndices.lastRowIndex;
            var step = isGroupedByDate && isMultiSelection ? groupCount : 1;
            var sign = isRTL ? -1 : 1;
            var deltaColumnIndex = "next" === direction ? sign * step : -1 * sign * step;
            var nextColumnIndex = columnIndex + deltaColumnIndex;
            var isValidColumnIndex = nextColumnIndex >= firstColumnIndex && nextColumnIndex <= lastColumnIndex;
            if (isValidColumnIndex) {
              return {
                columnIndex: nextColumnIndex,
                rowIndex: rowIndex
              };
            }
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__.isDateAndTimeView)(viewType) ? focusedCellPosition : this._processEdgeCell({
              nextColumnIndex: nextColumnIndex,
              rowIndex: rowIndex,
              columnIndex: columnIndex,
              firstColumnIndex: firstColumnIndex,
              lastColumnIndex: lastColumnIndex,
              firstRowIndex: firstRowIndex,
              lastRowIndex: lastRowIndex,
              step: step
            });
          }
        }, {
          key: "_processEdgeCell",
          value: function _processEdgeCell(options) {
            var nextColumnIndex = options.nextColumnIndex,
              rowIndex = options.rowIndex,
              columnIndex = options.columnIndex,
              firstColumnIndex = options.firstColumnIndex,
              lastColumnIndex = options.lastColumnIndex,
              firstRowIndex = options.firstRowIndex,
              lastRowIndex = options.lastRowIndex,
              step = options.step;
            var validColumnIndex = nextColumnIndex;
            var validRowIndex = rowIndex;
            var isLeftEdgeCell = nextColumnIndex < firstColumnIndex;
            var isRightEdgeCell = nextColumnIndex > lastColumnIndex;
            if (isLeftEdgeCell) {
              var columnIndexInNextRow = lastColumnIndex - (step - columnIndex % step - 1);
              var nextRowIndex = rowIndex - 1;
              var isValidRowIndex = nextRowIndex >= firstRowIndex;
              validRowIndex = isValidRowIndex ? nextRowIndex : rowIndex;
              validColumnIndex = isValidRowIndex ? columnIndexInNextRow : columnIndex;
            }
            if (isRightEdgeCell) {
              var _columnIndexInNextRow = firstColumnIndex + columnIndex % step;
              var _nextRowIndex = rowIndex + 1;
              var _isValidRowIndex = _nextRowIndex <= lastRowIndex;
              validRowIndex = _isValidRowIndex ? _nextRowIndex : rowIndex;
              validColumnIndex = _isValidRowIndex ? _columnIndexInNextRow : columnIndex;
            }
            return {
              columnIndex: validColumnIndex,
              rowIndex: validRowIndex
            };
          }
        }, {
          key: "moveToCell",
          value: function moveToCell(options) {
            var isMultiSelection = options.isMultiSelection,
              isMultiSelectionAllowed = options.isMultiSelectionAllowed,
              focusedCellData = options.focusedCellData,
              currentCellData = options.currentCellData;
            var isValidMultiSelection = isMultiSelection && isMultiSelectionAllowed;
            var nextFocusedCellData = isValidMultiSelection ? this._getNextCellData(currentCellData, focusedCellData) : currentCellData;
            return nextFocusedCellData;
          }
        }, {
          key: "_getNextCellData",
          value: function _getNextCellData(nextFocusedCellData, focusedCellData, isVirtualCell) {
            if (isVirtualCell) {
              return focusedCellData;
            }
            var isValidNextFocusedCell = this._isValidNextFocusedCell(nextFocusedCellData, focusedCellData);
            return isValidNextFocusedCell ? nextFocusedCellData : focusedCellData;
          }
        }, {
          key: "_isValidNextFocusedCell",
          value: function _isValidNextFocusedCell(nextFocusedCellData, focusedCellData) {
            if (!focusedCellData) {
              return true;
            }
            var groupIndex = focusedCellData.groupIndex,
              allDay = focusedCellData.allDay;
            var nextGroupIndex = nextFocusedCellData.groupIndex,
              nextAllDay = nextFocusedCellData.allDay;
            return groupIndex === nextGroupIndex && allDay === nextAllDay;
          }
        }]);
        return _CellsSelectionController;
      }();
      /***/
    }),
    /***/35018: (
    /*!************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_cells_selection_state.js ***!
      \************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */CellsSelectionState;
        }
        /* harmony export */
      });
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_base_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/workspaces/base/utils */65866);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_cells_selection_state.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var CellsSelectionState = /*#__PURE__*/function () {
        function CellsSelectionState(_viewDataProvider) {
          _classCallCheck(this, CellsSelectionState);
          this._viewDataProvider = _viewDataProvider;
          this._focusedCell = null;
          this._selectedCells = null;
          this._firstSelectedCell = null;
          this._prevFocusedCell = null;
          this._prevSelectedCells = null;
        }
        _createClass(CellsSelectionState, [{
          key: "viewDataProvider",
          get: function get() {
            return this._viewDataProvider;
          }
        }, {
          key: "focusedCell",
          get: function get() {
            var focusedCell = this._focusedCell;
            if (!focusedCell) {
              return;
            }
            var groupIndex = focusedCell.groupIndex,
              startDate = focusedCell.startDate,
              allDay = focusedCell.allDay;
            var cellInfo = {
              groupIndex: groupIndex,
              startDate: startDate,
              isAllDay: allDay,
              index: focusedCell.index
            };
            var cellPosition = this.viewDataProvider.findCellPositionInMap(cellInfo);
            return {
              coordinates: cellPosition,
              cellData: focusedCell
            };
          }
        }, {
          key: "setFocusedCell",
          value: function setFocusedCell(rowIndex, columnIndex, isAllDay) {
            if (rowIndex >= 0) {
              var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);
              this._focusedCell = cell;
            }
          }
        }, {
          key: "setSelectedCells",
          value: function setSelectedCells(lastCellCoordinates) {
            var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;
            var viewDataProvider = this._viewDataProvider;
            var lastRowIndex = lastCellCoordinates.rowIndex,
              lastColumnIndex = lastCellCoordinates.columnIndex,
              isLastCellAllDay = lastCellCoordinates.allDay;
            if (lastRowIndex < 0) {
              return;
            }
            var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;
            var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);
            this._firstSelectedCell = firstCell;
            this._selectedCells = (0, _renovation_ui_scheduler_workspaces_base_utils__WEBPACK_IMPORTED_MODULE_0__.getSelectedCells)(this._viewDataProvider, firstCell, lastCell, isLastCellAllDay);
          }
        }, {
          key: "setSelectedCellsByData",
          value: function setSelectedCellsByData(selectedCellsData) {
            this._selectedCells = selectedCellsData;
          }
        }, {
          key: "getSelectedCells",
          value: function getSelectedCells() {
            return this._selectedCells;
          }
        }, {
          key: "releaseSelectedAndFocusedCells",
          value: function releaseSelectedAndFocusedCells() {
            this.releaseSelectedCells();
            this.releaseFocusedCell();
          }
        }, {
          key: "releaseSelectedCells",
          value: function releaseSelectedCells() {
            this._prevSelectedCells = this._selectedCells;
            this._prevFirstSelectedCell = this._firstSelectedCell;
            this._selectedCells = null;
            this._firstSelectedCell = null;
          }
        }, {
          key: "releaseFocusedCell",
          value: function releaseFocusedCell() {
            this._prevFocusedCell = this._focusedCell;
            this._focusedCell = null;
          }
        }, {
          key: "restoreSelectedAndFocusedCells",
          value: function restoreSelectedAndFocusedCells() {
            this._selectedCells = this._selectedCells || this._prevSelectedCells;
            this._focusedCell = this._focusedCell || this._prevFocusedCell;
            this._firstSelectedCell = this._firstSelectedCell || this._prevFirstSelectedCell;
            this._prevSelectedCells = null;
            this._prevFirstSelectedCell = null;
            this._prevFocusedCell = null;
          }
        }, {
          key: "clearSelectedAndFocusedCells",
          value: function clearSelectedAndFocusedCells() {
            this._prevSelectedCells = null;
            this._selectedCells = null;
            this._prevFocusedCell = null;
            this._focusedCell = null;
          }
        }]);
        return CellsSelectionState;
      }();
      /***/
    }),
    /***/39120: (
    /*!***********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_timeline.js ***!
      \***********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/utils/common */37552);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../core/utils/position */9622);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../core/utils/window */88684);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_timeline_week__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/timeline_week */55639);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_timeline_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/workspaces/timeline/header_panel/layout.j */10889);
      /* harmony import */
      var _m_classes__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../m_classes */16874);
      /* harmony import */
      var _m_table_creator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../m_table_creator */69100);
      /* harmony import */
      var _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../m_utils_time_zone */98281);
      /* harmony import */
      var _shaders_m_current_time_shader_horizontal__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../shaders/m_current_time_shader_horizontal */95521);
      /* harmony import */
      var _m_work_space_indicator__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ./m_work_space_indicator */26309);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_timeline.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var tableCreator = _m_table_creator__WEBPACK_IMPORTED_MODULE_13__["default"].tableCreator;
      var TIMELINE_CLASS = "dx-scheduler-timeline";
      var GROUP_TABLE_CLASS = "dx-scheduler-group-table";
      var HORIZONTAL_GROUPED_WORKSPACE_CLASS = "dx-scheduler-work-space-horizontal-grouped";
      var HEADER_PANEL_CELL_CLASS = "dx-scheduler-header-panel-cell";
      var HEADER_PANEL_WEEK_CELL_CLASS = "dx-scheduler-header-panel-week-cell";
      var HEADER_ROW_CLASS = "dx-scheduler-header-row";
      var HORIZONTAL = "horizontal";
      var DATE_TABLE_CELL_BORDER = 1;
      var DATE_TABLE_HEADER_MARGIN = 10;
      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_4__["default"].dateToMilliseconds;
      var SchedulerTimeline = /*#__PURE__*/function (_m_work_space_indicat) {
        _inherits(SchedulerTimeline, _m_work_space_indicat);
        function SchedulerTimeline() {
          var _this126;
          _classCallCheck(this, SchedulerTimeline);
          _this126 = _callSuper(this, SchedulerTimeline, arguments);
          _this126.viewDirection = "horizontal";
          return _this126;
        }
        _createClass(SchedulerTimeline, [{
          key: "verticalGroupTableClass",
          get: function get() {
            return GROUP_TABLE_CLASS;
          }
        }, {
          key: "renovatedHeaderPanelComponent",
          get: function get() {
            return _renovation_ui_scheduler_workspaces_timeline_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_11__["default"];
          }
        }, {
          key: "getGroupTableWidth",
          value: function getGroupTableWidth() {
            return this._$sidebarTable ? (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_7__.getOuterWidth)(this._$sidebarTable) : 0;
          }
        }, {
          key: "_getTotalRowCount",
          value: function _getTotalRowCount(groupCount) {
            if (this._isHorizontalGroupedWorkSpace()) {
              return this._getRowCount();
            }
            groupCount = groupCount || 1;
            return this._getRowCount() * groupCount;
          }
        }, {
          key: "_getFormat",
          value: function _getFormat() {
            return "shorttime";
          }
        }, {
          key: "_getWorkSpaceHeight",
          value: function _getWorkSpaceHeight() {
            if (this.option("crossScrollingEnabled") && (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_8__.hasWindow)()) {
              return (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_6__.getBoundingRect)(this._$dateTable.get(0)).height;
            }
            return (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_6__.getBoundingRect)(this.$element().get(0)).height;
          }
        }, {
          key: "_dateTableScrollableConfig",
          value: function _dateTableScrollableConfig() {
            var config = _get(_getPrototypeOf(SchedulerTimeline.prototype), "_dateTableScrollableConfig", this).call(this);
            var timelineConfig = {
              direction: HORIZONTAL
            };
            return this.option("crossScrollingEnabled") ? config : (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(config, timelineConfig);
          }
        }, {
          key: "_needCreateCrossScrolling",
          value: function _needCreateCrossScrolling() {
            return true;
          }
        }, {
          key: "_headerScrollableConfig",
          value: function _headerScrollableConfig() {
            var config = _get(_getPrototypeOf(SchedulerTimeline.prototype), "_headerScrollableConfig", this).call(this);
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(config, {
              scrollByContent: true
            });
          }
        }, {
          key: "supportAllDayRow",
          value: function supportAllDayRow() {
            return false;
          }
        }, {
          key: "_getGroupHeaderContainer",
          value: function _getGroupHeaderContainer() {
            if (this._isHorizontalGroupedWorkSpace()) {
              return this._$thead;
            }
            return this._$sidebarTable;
          }
        }, {
          key: "_insertAllDayRowsIntoDateTable",
          value: function _insertAllDayRowsIntoDateTable() {
            return false;
          }
        }, {
          key: "_needRenderWeekHeader",
          value: function _needRenderWeekHeader() {
            return false;
          }
        }, {
          key: "_incrementDate",
          value: function _incrementDate(date) {
            date.setDate(date.getDate() + 1);
          }
        }, {
          key: "getIndicationCellCount",
          value: function getIndicationCellCount() {
            var timeDiff = this._getTimeDiff();
            return this._calculateDurationInCells(timeDiff);
          }
        }, {
          key: "_getTimeDiff",
          value: function _getTimeDiff() {
            var today = this._getToday();
            var date = this._getIndicationFirstViewDate();
            var startViewDate = this.getStartViewDate();
            var dayLightOffset = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_14__["default"].getDaylightOffsetInMs(startViewDate, today);
            if (dayLightOffset) {
              today = new Date(today.getTime() + dayLightOffset);
            }
            return today.getTime() - date.getTime();
          }
        }, {
          key: "_calculateDurationInCells",
          value: function _calculateDurationInCells(timeDiff) {
            var today = this._getToday();
            var differenceInDays = Math.floor(timeDiff / toMs("day"));
            var duration = (timeDiff - differenceInDays * toMs("day") - this.option("startDayHour") * toMs("hour")) / this.getCellDuration();
            if (today.getHours() > this.option("endDayHour")) {
              duration = this._getCellCountInDay();
            }
            if (duration < 0) {
              duration = 0;
            }
            return differenceInDays * this._getCellCountInDay() + duration;
          }
        }, {
          key: "getIndicationWidth",
          value: function getIndicationWidth() {
            if (this.isGroupedByDate()) {
              var cellCount = this.getIndicationCellCount();
              var integerPart = Math.floor(cellCount);
              var fractionPart = cellCount - integerPart;
              return this.getCellWidth() * (integerPart * this._getGroupCount() + fractionPart);
            }
            return this.getIndicationCellCount() * this.getCellWidth();
          }
        }, {
          key: "_isVerticalShader",
          value: function _isVerticalShader() {
            return false;
          }
        }, {
          key: "_isCurrentTimeHeaderCell",
          value: function _isCurrentTimeHeaderCell() {
            return false;
          }
        }, {
          key: "_setTableSizes",
          value: function _setTableSizes() {
            var minHeight = this._getWorkSpaceMinHeight();
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_7__.setHeight)(this._$sidebarTable, minHeight);
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_7__.setHeight)(this._$dateTable, minHeight);
            _get(_getPrototypeOf(SchedulerTimeline.prototype), "_setTableSizes", this).call(this);
            this.virtualScrollingDispatcher.updateDimensions();
          }
        }, {
          key: "_getWorkSpaceMinHeight",
          value: function _getWorkSpaceMinHeight() {
            var minHeight = this._getWorkSpaceHeight();
            var workspaceContainerHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_7__.getOuterHeight)(this.$element(), true) - this.getHeaderPanelHeight() - 2 * DATE_TABLE_CELL_BORDER - DATE_TABLE_HEADER_MARGIN;
            if (minHeight < workspaceContainerHeight) {
              minHeight = workspaceContainerHeight;
            }
            return minHeight;
          }
        }, {
          key: "_getCellCoordinatesByIndex",
          value: function _getCellCoordinatesByIndex(index) {
            return {
              columnIndex: index % this._getCellCount(),
              rowIndex: 0
            };
          }
        }, {
          key: "_getCellByCoordinates",
          value: function _getCellByCoordinates(cellCoordinates, groupIndex) {
            var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex);
            return this._$dateTable.find("tr").eq(indexes.rowIndex).find("td").eq(indexes.columnIndex);
          }
        }, {
          key: "_getWorkSpaceWidth",
          value: function _getWorkSpaceWidth() {
            return (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_7__.getOuterWidth)(this._$dateTable, true);
          }
        }, {
          key: "_getIndicationFirstViewDate",
          value: function _getIndicationFirstViewDate() {
            return _core_utils_date__WEBPACK_IMPORTED_MODULE_4__["default"].trimTime(new Date(this.getStartViewDate()));
          }
        }, {
          key: "_getIntervalBetween",
          value: function _getIntervalBetween(currentDate, allDay) {
            var startDayHour = this.option("startDayHour");
            var endDayHour = this.option("endDayHour");
            var firstViewDate = this.getStartViewDate();
            var firstViewDateTime = firstViewDate.getTime();
            var hiddenInterval = (24 - endDayHour + startDayHour) * toMs("hour");
            var timeZoneOffset = _core_utils_date__WEBPACK_IMPORTED_MODULE_4__["default"].getTimezonesDifference(firstViewDate, currentDate);
            var apptStart = currentDate.getTime();
            var fullInterval = apptStart - firstViewDateTime - timeZoneOffset;
            var fullDays = Math.floor(fullInterval / toMs("day"));
            var tailDuration = fullInterval - fullDays * toMs("day");
            var tailDelta = 0;
            var cellCount = this._getCellCountInDay() * (fullDays - this._getWeekendsCount(fullDays));
            var gapBeforeAppt = apptStart - _core_utils_date__WEBPACK_IMPORTED_MODULE_4__["default"].trimTime(new Date(currentDate)).getTime();
            var result = cellCount * this.option("hoursInterval") * toMs("hour");
            if (!allDay) {
              if (currentDate.getHours() < startDayHour) {
                tailDelta = tailDuration - hiddenInterval + gapBeforeAppt;
              } else if (currentDate.getHours() >= startDayHour && currentDate.getHours() < endDayHour) {
                tailDelta = tailDuration;
              } else if (currentDate.getHours() >= startDayHour && currentDate.getHours() >= endDayHour) {
                tailDelta = tailDuration - (gapBeforeAppt - endDayHour * toMs("hour"));
              } else if (!fullDays) {
                result = fullInterval;
              }
              result += tailDelta;
            }
            return result;
          }
        }, {
          key: "_getWeekendsCount",
          value: function _getWeekendsCount(argument) {
            return 0;
          }
        }, {
          key: "getAllDayContainer",
          value: function getAllDayContainer() {
            return null;
          }
        }, {
          key: "getTimePanelWidth",
          value: function getTimePanelWidth() {
            return 0;
          }
        }, {
          key: "getIntervalDuration",
          value: function getIntervalDuration(allDay) {
            return this.getCellDuration();
          }
        }, {
          key: "getCellMinWidth",
          value: function getCellMinWidth() {
            return 0;
          }
        }, {
          key: "getWorkSpaceLeftOffset",
          value: function getWorkSpaceLeftOffset() {
            return 0;
          }
        }, {
          key: "scrollToTime",
          value: function scrollToTime(hours, minutes, date) {
            var coordinates = this._getScrollCoordinates(hours, minutes, date);
            var scrollable = this.getScrollable();
            var offset = this.option("rtlEnabled") ? (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_6__.getBoundingRect)(this.getScrollableContainer().get(0)).width : 0;
            if (this.option("templatesRenderAsynchronously")) {
              setTimeout(function () {
                scrollable.scrollBy({
                  left: coordinates.left - scrollable.scrollLeft() - offset,
                  top: 0
                });
              });
            } else {
              scrollable.scrollBy({
                left: coordinates.left - scrollable.scrollLeft() - offset,
                top: 0
              });
            }
          }
        }, {
          key: "renderRAllDayPanel",
          value: function renderRAllDayPanel() {}
        }, {
          key: "renderRTimeTable",
          value: function renderRTimeTable() {}
        }, {
          key: "_renderGroupAllDayPanel",
          value: function _renderGroupAllDayPanel() {}
        }, {
          key: "generateRenderOptions",
          value: function generateRenderOptions(argument) {
            var options = _get(_getPrototypeOf(SchedulerTimeline.prototype), "generateRenderOptions", this).call(this, true);
            return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {
              isGenerateWeekDaysHeaderData: this._needRenderWeekHeader(),
              getDateForHeaderText: _renovation_ui_scheduler_view_model_to_test_views_utils_timeline_week__WEBPACK_IMPORTED_MODULE_10__.getDateForHeaderText
            });
          }
        }, {
          key: "_init",
          value: function _init() {
            _get(_getPrototypeOf(SchedulerTimeline.prototype), "_init", this).call(this);
            this.$element().addClass(TIMELINE_CLASS);
            this._$sidebarTable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_2__["default"])("<div>").addClass(GROUP_TABLE_CLASS);
          }
        }, {
          key: "_getDefaultGroupStrategy",
          value: function _getDefaultGroupStrategy() {
            return "vertical";
          }
        }, {
          key: "_toggleGroupingDirectionClass",
          value: function _toggleGroupingDirectionClass() {
            this.$element().toggleClass(HORIZONTAL_GROUPED_WORKSPACE_CLASS, this._isHorizontalGroupedWorkSpace());
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(_get(_getPrototypeOf(SchedulerTimeline.prototype), "_getDefaultOptions", this).call(this), {
              groupOrientation: "vertical"
            });
          }
        }, {
          key: "_createWorkSpaceElements",
          value: function _createWorkSpaceElements() {
            this._createWorkSpaceScrollableElements();
          }
        }, {
          key: "_toggleAllDayVisibility",
          value: function _toggleAllDayVisibility() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)();
          }
        }, {
          key: "_changeAllDayVisibility",
          value: function _changeAllDayVisibility() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)();
          }
        }, {
          key: "_getDateHeaderTemplate",
          value: function _getDateHeaderTemplate() {
            return this.option("timeCellTemplate");
          }
        }, {
          key: "_renderView",
          value: function _renderView() {
            var groupCellTemplates;
            if (!this.isRenovatedRender()) {
              groupCellTemplates = this._renderGroupHeader();
            }
            this.renderWorkSpace();
            if (this.isRenovatedRender()) {
              this.virtualScrollingDispatcher.updateDimensions();
            }
            this._shader = new _shaders_m_current_time_shader_horizontal__WEBPACK_IMPORTED_MODULE_15__["default"](this);
            this._$sidebarTable.appendTo(this._sidebarScrollable.$content());
            if (this.isRenovatedRender() && this._isVerticalGroupedWorkSpace()) {
              this.renderRGroupPanel();
            }
            this.updateHeaderEmptyCellWidth();
            this._applyCellTemplates(groupCellTemplates);
          }
        }, {
          key: "_setHorizontalGroupHeaderCellsHeight",
          value: function _setHorizontalGroupHeaderCellsHeight() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)();
          }
        }, {
          key: "_getTimePanelCells",
          value: function _getTimePanelCells() {
            return this.$element().find(".".concat(HEADER_PANEL_CELL_CLASS, ":not(.").concat(HEADER_PANEL_WEEK_CELL_CLASS, ")"));
          }
        }, {
          key: "_getCurrentTimePanelCellIndices",
          value: function _getCurrentTimePanelCellIndices() {
            var columnCountPerGroup = this._getCellCount();
            var today = this._getToday();
            var index = this.getCellIndexByDate(today);
            var _this$_getCellCoordin = this._getCellCoordinatesByIndex(index),
              currentTimeColumnIndex = _this$_getCellCoordin.columnIndex;
            if (void 0 === currentTimeColumnIndex) {
              return [];
            }
            var horizontalGroupCount = this._isHorizontalGroupedWorkSpace() && !this.isGroupedByDate() ? this._getGroupCount() : 1;
            return _toConsumableArray(new Array(horizontalGroupCount)).map(function (_, groupIndex) {
              return columnCountPerGroup * groupIndex + currentTimeColumnIndex;
            });
          }
        }, {
          key: "_renderTimePanel",
          value: function _renderTimePanel() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)();
          }
        }, {
          key: "_renderAllDayPanel",
          value: function _renderAllDayPanel() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)();
          }
        }, {
          key: "_createAllDayPanelElements",
          value: function _createAllDayPanelElements() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.noop)();
          }
        }, {
          key: "_renderDateHeader",
          value: function _renderDateHeader() {
            var $headerRow = _get(_getPrototypeOf(SchedulerTimeline.prototype), "_renderDateHeader", this).call(this);
            if (this._needRenderWeekHeader()) {
              var firstViewDate = new Date(this.getStartViewDate());
              var currentDate = new Date(firstViewDate);
              var $cells = [];
              var groupCount = this._getGroupCount();
              var cellCountInDay = this._getCellCountInDay();
              var colSpan = this.isGroupedByDate() ? cellCountInDay * groupCount : cellCountInDay;
              var cellTemplate = this.option("dateCellTemplate");
              var horizontalGroupCount = this._isHorizontalGroupedWorkSpace() && !this.isGroupedByDate() ? groupCount : 1;
              var cellsInGroup = this.viewDataProvider.viewDataGenerator.daysInInterval * this.option("intervalCount");
              var cellsCount = cellsInGroup * horizontalGroupCount;
              for (var templateIndex = 0; templateIndex < cellsCount; templateIndex++) {
                var $th = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_2__["default"])("<th>");
                var text = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_9__.formatWeekdayAndDay)(currentDate);
                if (cellTemplate) {
                  var templateOptions = {
                    model: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
                      text: text,
                      date: new Date(currentDate)
                    }, this._getGroupsForDateHeaderTemplate(templateIndex, colSpan)),
                    container: $th,
                    index: templateIndex
                  };
                  cellTemplate.render(templateOptions);
                } else {
                  $th.text(text);
                }
                $th.addClass(HEADER_PANEL_CELL_CLASS).addClass(HEADER_PANEL_WEEK_CELL_CLASS).attr("colSpan", colSpan);
                $cells.push($th);
                if (templateIndex % cellsInGroup === cellsInGroup - 1) {
                  currentDate = new Date(firstViewDate);
                } else {
                  this._incrementDate(currentDate);
                }
              }
              var $row = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_2__["default"])("<tr>").addClass(HEADER_ROW_CLASS).append($cells);
              $headerRow.before($row);
            }
          }
        }, {
          key: "_renderIndicator",
          value: function _renderIndicator(height, rtlOffset, $container, groupCount) {
            var $indicator;
            var width = this.getIndicationWidth();
            if ("vertical" === this.option("groupOrientation")) {
              $indicator = this._createIndicator($container);
              (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_7__.setHeight)($indicator, (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_6__.getBoundingRect)($container.get(0)).height);
              $indicator.css("left", rtlOffset ? rtlOffset - width : width);
            } else {
              for (var i = 0; i < groupCount; i++) {
                var offset = this.isGroupedByDate() ? i * this.getCellWidth() : this._getCellCount() * this.getCellWidth() * i;
                $indicator = this._createIndicator($container);
                (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_7__.setHeight)($indicator, (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_6__.getBoundingRect)($container.get(0)).height);
                $indicator.css("left", rtlOffset ? rtlOffset - width - offset : width + offset);
              }
            }
          }
        }, {
          key: "_makeGroupRows",
          value: function _makeGroupRows(groups, groupByDate) {
            var tableCreatorStrategy = "vertical" === this.option("groupOrientation") ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;
            return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {
              groupRowClass: _m_classes__WEBPACK_IMPORTED_MODULE_12__.GROUP_ROW_CLASS,
              groupHeaderRowClass: _m_classes__WEBPACK_IMPORTED_MODULE_12__.GROUP_ROW_CLASS,
              groupHeaderClass: this._getGroupHeaderClass.bind(this),
              groupHeaderContentClass: _m_classes__WEBPACK_IMPORTED_MODULE_12__.GROUP_HEADER_CONTENT_CLASS
            }, this._getCellCount() || 1, this.option("resourceCellTemplate"), this._getTotalRowCount(this._getGroupCount()), groupByDate);
          }
        }, {
          key: "_setCurrentTimeCells",
          value: function _setCurrentTimeCells() {
            var timePanelCells = this._getTimePanelCells();
            var currentTimeCellIndices = this._getCurrentTimePanelCellIndices();
            currentTimeCellIndices.forEach(function (timePanelCellIndex) {
              timePanelCells.eq(timePanelCellIndex).addClass(_m_classes__WEBPACK_IMPORTED_MODULE_12__.HEADER_CURRENT_TIME_CELL_CLASS);
            });
          }
        }, {
          key: "_cleanCurrentTimeCells",
          value: function _cleanCurrentTimeCells() {
            this.$element().find(".".concat(_m_classes__WEBPACK_IMPORTED_MODULE_12__.HEADER_CURRENT_TIME_CELL_CLASS)).removeClass(_m_classes__WEBPACK_IMPORTED_MODULE_12__.HEADER_CURRENT_TIME_CELL_CLASS);
          }
        }]);
        return SchedulerTimeline;
      }(_m_work_space_indicator__WEBPACK_IMPORTED_MODULE_16__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__["default"])("dxSchedulerTimeline", SchedulerTimeline);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerTimeline;

      /***/
    }),
    /***/86790: (
    /*!***************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_timeline_day.js ***!
      \***************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_timeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./m_timeline */39120);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_timeline_day.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TIMELINE_CLASS = "dx-scheduler-timeline-day";
      var SchedulerTimelineDay = /*#__PURE__*/function (_m_timeline__WEBPACK_) {
        _inherits(SchedulerTimelineDay, _m_timeline__WEBPACK_);
        function SchedulerTimelineDay() {
          _classCallCheck(this, SchedulerTimelineDay);
          return _callSuper(this, SchedulerTimelineDay, arguments);
        }
        _createClass(SchedulerTimelineDay, [{
          key: "type",
          get: function get() {
            return _m_constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_DAY;
          }
        }, {
          key: "_getElementClass",
          value: function _getElementClass() {
            return TIMELINE_CLASS;
          }
        }, {
          key: "_needRenderWeekHeader",
          value: function _needRenderWeekHeader() {
            return this._isWorkSpaceWithCount();
          }
        }]);
        return SchedulerTimelineDay;
      }(_m_timeline__WEBPACK_IMPORTED_MODULE_2__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxSchedulerTimelineDay", SchedulerTimelineDay);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerTimelineDay;

      /***/
    }),
    /***/83227: (
    /*!*****************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_timeline_month.js ***!
      \*****************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/month */35189);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_base_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/workspaces/base/header_panel/layout.j */27865);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_timeline__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./m_timeline */39120);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_timeline_month.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TIMELINE_CLASS = "dx-scheduler-timeline-month";
      var SchedulerTimelineMonth = /*#__PURE__*/function (_m_timeline__WEBPACK_2) {
        _inherits(SchedulerTimelineMonth, _m_timeline__WEBPACK_2);
        function SchedulerTimelineMonth() {
          var _this127;
          _classCallCheck(this, SchedulerTimelineMonth);
          _this127 = _callSuper(this, SchedulerTimelineMonth, arguments);
          _this127.viewDirection = "horizontal";
          return _this127;
        }
        _createClass(SchedulerTimelineMonth, [{
          key: "type",
          get: function get() {
            return _m_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_MONTH;
          }
        }, {
          key: "renovatedHeaderPanelComponent",
          get: function get() {
            return _renovation_ui_scheduler_workspaces_base_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_5__["default"];
          }
        }, {
          key: "_renderView",
          value: function _renderView() {
            _get(_getPrototypeOf(SchedulerTimelineMonth.prototype), "_renderView", this).call(this);
            this._updateScrollable();
          }
        }, {
          key: "_getElementClass",
          value: function _getElementClass() {
            return TIMELINE_CLASS;
          }
        }, {
          key: "_getDateHeaderTemplate",
          value: function _getDateHeaderTemplate() {
            return this.option("dateCellTemplate");
          }
        }, {
          key: "_calculateDurationInCells",
          value: function _calculateDurationInCells(timeDiff) {
            return timeDiff / this.getCellDuration();
          }
        }, {
          key: "isIndicatorVisible",
          value: function isIndicatorVisible() {
            return true;
          }
        }, {
          key: "_getFormat",
          value: function _getFormat() {
            return _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__.formatWeekdayAndDay;
          }
        }, {
          key: "_getIntervalBetween",
          value: function _getIntervalBetween(currentDate) {
            var firstViewDate = this.getStartViewDate();
            var timeZoneOffset = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].getTimezonesDifference(firstViewDate, currentDate);
            return currentDate.getTime() - (firstViewDate.getTime() - 36e5 * this.option("startDayHour")) - timeZoneOffset;
          }
        }, {
          key: "_getViewStartByOptions",
          value: function _getViewStartByOptions() {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_4__.getViewStartByOptions)(this.option("startDate"), this.option("currentDate"), this.option("intervalCount"), _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].getFirstMonthDate(this.option("startDate")));
          }
        }, {
          key: "generateRenderOptions",
          value: function generateRenderOptions() {
            var options = _get(_getPrototypeOf(SchedulerTimelineMonth.prototype), "generateRenderOptions", this).call(this, true);
            return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {
              getDateForHeaderText: function getDateForHeaderText(_, date) {
                return date;
              }
            });
          }
        }]);
        return SchedulerTimelineMonth;
      }(_m_timeline__WEBPACK_IMPORTED_MODULE_7__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__["default"])("dxSchedulerTimelineMonth", SchedulerTimelineMonth);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerTimelineMonth;

      /***/
    }),
    /***/1836: (
    /*!****************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_timeline_week.js ***!
      \****************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */SchedulerTimelineWeek;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/position */9622);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_timeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_timeline */39120);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_timeline_week.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TIMELINE_CLASS = "dx-scheduler-timeline-week";
      var SchedulerTimelineWeek = /*#__PURE__*/function (_m_timeline__WEBPACK_3) {
        _inherits(SchedulerTimelineWeek, _m_timeline__WEBPACK_3);
        function SchedulerTimelineWeek() {
          _classCallCheck(this, SchedulerTimelineWeek);
          return _callSuper(this, SchedulerTimelineWeek, arguments);
        }
        _createClass(SchedulerTimelineWeek, [{
          key: "type",
          get: function get() {
            return _m_constants__WEBPACK_IMPORTED_MODULE_2__.VIEWS.TIMELINE_WEEK;
          }
        }, {
          key: "_getElementClass",
          value: function _getElementClass() {
            return TIMELINE_CLASS;
          }
        }, {
          key: "_getHeaderPanelCellWidth",
          value: function _getHeaderPanelCellWidth($headerRow) {
            return (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_1__.getBoundingRect)($headerRow.children().first().get(0)).width;
          }
        }, {
          key: "_needRenderWeekHeader",
          value: function _needRenderWeekHeader() {
            return true;
          }
        }, {
          key: "_incrementDate",
          value: function _incrementDate(date) {
            date.setDate(date.getDate() + 1);
          }
        }]);
        return SchedulerTimelineWeek;
      }(_m_timeline__WEBPACK_IMPORTED_MODULE_3__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxSchedulerTimelineWeek", SchedulerTimelineWeek);

      /***/
    }),
    /***/59820: (
    /*!*********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_timeline_work_week.js ***!
      \*********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/work_week */95984);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_timeline_week__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_timeline_week */1836);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_timeline_work_week.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TIMELINE_CLASS = "dx-scheduler-timeline-work-week";
      var LAST_DAY_WEEK_INDEX = 5;
      var SchedulerTimelineWorkWeek = /*#__PURE__*/function (_m_timeline_week__WEB) {
        _inherits(SchedulerTimelineWorkWeek, _m_timeline_week__WEB);
        function SchedulerTimelineWorkWeek() {
          var _this128;
          _classCallCheck(this, SchedulerTimelineWorkWeek);
          _this128 = _callSuper(this, SchedulerTimelineWorkWeek, arguments);
          _this128._getWeekendsCount = _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_1__.getWeekendsCount;
          return _this128;
        }
        _createClass(SchedulerTimelineWorkWeek, [{
          key: "type",
          get: function get() {
            return _m_constants__WEBPACK_IMPORTED_MODULE_2__.VIEWS.TIMELINE_WORK_WEEK;
          }
        }, {
          key: "_getElementClass",
          value: function _getElementClass() {
            return TIMELINE_CLASS;
          }
        }, {
          key: "_incrementDate",
          value: function _incrementDate(date) {
            var day = date.getDay();
            if (day === LAST_DAY_WEEK_INDEX) {
              date.setDate(date.getDate() + 2);
            }
            _get(_getPrototypeOf(SchedulerTimelineWorkWeek.prototype), "_incrementDate", this).call(this, date);
          }
        }]);
        return SchedulerTimelineWorkWeek;
      }(_m_timeline_week__WEBPACK_IMPORTED_MODULE_3__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxSchedulerTimelineWorkWeek", SchedulerTimelineWorkWeek);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerTimelineWorkWeek;

      /***/
    }),
    /***/7901: (
    /*!********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_virtual_scrolling.js ***!
      \********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"VirtualScrollingDispatcher": function VirtualScrollingDispatcher() {
          return /* binding */_VirtualScrollingDispatcher;
        },
        /* harmony export */"VirtualScrollingRenderer": function VirtualScrollingRenderer() {
          return /* binding */_VirtualScrollingRenderer;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/dom_adapter */81113);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/utils/window */88684);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../events/core/events_engine */99064);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../events/utils/index */3151);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_virtual_scrolling.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DEFAULT_CELL_HEIGHT = 50;
      var MIN_CELL_WIDTH = 1;
      var MIN_SCROLL_OFFSET = 10;
      var VIRTUAL_APPOINTMENTS_RENDER_TIMEOUT = 15;
      var DOCUMENT_SCROLL_EVENT_NAMESPACE = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_5__.addNamespace)("scroll", "dxSchedulerVirtualScrolling");
      var scrollingOrientations = {
        vertical: "vertical",
        horizontal: "horizontal",
        both: "both",
        none: "none"
      };
      var DefaultScrollingOrientation = scrollingOrientations.both;
      var _VirtualScrollingDispatcher = /*#__PURE__*/function () {
        function _VirtualScrollingDispatcher(options) {
          _classCallCheck(this, _VirtualScrollingDispatcher);
          this.options = options;
          if (options) {
            this._rowHeight = this.getCellHeight();
            this._cellWidth = this.getCellWidth();
            this._createVirtualScrollingBase();
          }
        }
        _createClass(_VirtualScrollingDispatcher, [{
          key: "isRTL",
          get: function get() {
            return this.options.isRTL();
          }
        }, {
          key: "verticalVirtualScrolling",
          get: function get() {
            return this._verticalVirtualScrolling;
          },
          set: function set(value) {
            this._verticalVirtualScrolling = value;
          }
        }, {
          key: "horizontalVirtualScrolling",
          get: function get() {
            return this._horizontalVirtualScrolling;
          },
          set: function set(value) {
            this._horizontalVirtualScrolling = value;
          }
        }, {
          key: "document",
          get: function get() {
            return _core_dom_adapter__WEBPACK_IMPORTED_MODULE_1__["default"].getDocument();
          }
        }, {
          key: "height",
          get: function get() {
            return this.options.getSchedulerHeight();
          }
        }, {
          key: "width",
          get: function get() {
            return this.options.getSchedulerWidth();
          }
        }, {
          key: "rowHeight",
          get: function get() {
            return this._rowHeight;
          },
          set: function set(value) {
            this._rowHeight = value;
          }
        }, {
          key: "outlineCount",
          get: function get() {
            return this.options.getScrolling().outlineCount;
          }
        }, {
          key: "cellWidth",
          get: function get() {
            return this._cellWidth;
          },
          set: function set(value) {
            this._cellWidth = value;
          }
        }, {
          key: "viewportWidth",
          get: function get() {
            var width = this.width && this.options.getViewWidth();
            return width > 0 ? width : this.options.getWindowWidth();
          }
        }, {
          key: "viewportHeight",
          get: function get() {
            var height = this.height && this.options.getViewHeight();
            return height > 0 ? height : this.options.getWindowHeight();
          }
        }, {
          key: "cellCountInsideTopVirtualRow",
          get: function get() {
            var _a;
            return (null === (_a = this.verticalScrollingState) || void 0 === _a ? void 0 : _a.virtualItemCountBefore) || 0;
          }
        }, {
          key: "cellCountInsideLeftVirtualCell",
          get: function get() {
            var _a;
            return (null === (_a = this.horizontalScrollingState) || void 0 === _a ? void 0 : _a.virtualItemCountBefore) || 0;
          }
        }, {
          key: "cellCountInsideRightVirtualCell",
          get: function get() {
            var _a;
            return (null === (_a = this.horizontalScrollingState) || void 0 === _a ? void 0 : _a.virtualItemCountAfter) || 0;
          }
        }, {
          key: "topVirtualRowsCount",
          get: function get() {
            return this.cellCountInsideTopVirtualRow > 0 ? 1 : 0;
          }
        }, {
          key: "leftVirtualCellsCount",
          get: function get() {
            var virtualItemsCount = !this.isRTL ? this.cellCountInsideLeftVirtualCell : this.cellCountInsideRightVirtualCell;
            return virtualItemsCount > 0 ? 1 : 0;
          }
        }, {
          key: "virtualRowOffset",
          get: function get() {
            var _a;
            return (null === (_a = this.verticalScrollingState) || void 0 === _a ? void 0 : _a.virtualItemSizeBefore) || 0;
          }
        }, {
          key: "virtualCellOffset",
          get: function get() {
            var _a;
            return (null === (_a = this.horizontalScrollingState) || void 0 === _a ? void 0 : _a.virtualItemSizeBefore) || 0;
          }
        }, {
          key: "scrollingState",
          get: function get() {
            var _a, _b;
            return {
              vertical: null === (_a = this.verticalVirtualScrolling) || void 0 === _a ? void 0 : _a.state,
              horizontal: null === (_b = this.horizontalVirtualScrolling) || void 0 === _b ? void 0 : _b.state
            };
          }
        }, {
          key: "verticalScrollingState",
          get: function get() {
            return this.scrollingState.vertical;
          }
        }, {
          key: "horizontalScrollingState",
          get: function get() {
            return this.scrollingState.horizontal;
          }
        }, {
          key: "scrollingOrientation",
          get: function get() {
            var scrolling = this.options.getScrolling();
            if ("standard" === scrolling.mode) {
              return scrollingOrientations.none;
            }
            return scrolling.orientation || DefaultScrollingOrientation;
          }
        }, {
          key: "verticalScrollingAllowed",
          get: function get() {
            return this.scrollingOrientation === scrollingOrientations.vertical || this.scrollingOrientation === scrollingOrientations.both;
          }
        }, {
          key: "horizontalScrollingAllowed",
          get: function get() {
            return this.scrollingOrientation === scrollingOrientations.horizontal || this.scrollingOrientation === scrollingOrientations.both;
          }
        }, {
          key: "setViewOptions",
          value: function setViewOptions(options) {
            this.options = options;
            if (this.verticalVirtualScrolling) {
              this.verticalVirtualScrolling.options = options;
              this.verticalVirtualScrolling.itemSize = this.rowHeight;
              this.verticalVirtualScrolling.viewportSize = this.viewportHeight;
            }
            if (this.horizontalVirtualScrolling) {
              this.horizontalVirtualScrolling.options = options;
              this.verticalVirtualScrolling.itemSize = this.cellWidth;
              this.verticalVirtualScrolling.viewportSize = this.viewportWidth;
            }
          }
        }, {
          key: "getRenderState",
          value: function getRenderState() {
            var _a, _b;
            var verticalRenderState = (null === (_a = this.verticalVirtualScrolling) || void 0 === _a ? void 0 : _a.getRenderState()) || {};
            var horizontalRenderState = (null === (_b = this.horizontalVirtualScrolling) || void 0 === _b ? void 0 : _b.getRenderState()) || {};
            return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, verticalRenderState), horizontalRenderState);
          }
        }, {
          key: "getCellHeight",
          value: function getCellHeight() {
            var cellHeight = this.options.getCellHeight();
            var result = cellHeight > 0 ? cellHeight : DEFAULT_CELL_HEIGHT;
            return Math.floor(result);
          }
        }, {
          key: "getCellWidth",
          value: function getCellWidth() {
            var cellWidth = this.options.getCellWidth();
            var minCellWidth = this.options.getCellMinWidth();
            if (!cellWidth || cellWidth < minCellWidth) {
              cellWidth = minCellWidth;
            }
            var result = cellWidth > 0 ? cellWidth : MIN_CELL_WIDTH;
            return Math.floor(result);
          }
        }, {
          key: "calculateCoordinatesByDataAndPosition",
          value: function calculateCoordinatesByDataAndPosition(cellData, position, date, isCalculateTime, isVerticalDirectionView) {
            var rowIndex = position.rowIndex,
              columnIndex = position.columnIndex;
            var startDate = cellData.startDate,
              endDate = cellData.endDate,
              allDay = cellData.allDay;
            var timeToScroll = date.getTime();
            var cellStartTime = startDate.getTime();
            var cellEndTime = endDate.getTime();
            var scrollInCell = allDay || !isCalculateTime ? 0 : (timeToScroll - cellStartTime) / (cellEndTime - cellStartTime);
            var cellWidth = this.getCellWidth();
            var rowHeight = this.getCellHeight();
            var top = isVerticalDirectionView ? (rowIndex + scrollInCell) * rowHeight : rowIndex * rowHeight;
            var left = isVerticalDirectionView ? columnIndex * cellWidth : (columnIndex + scrollInCell) * cellWidth;
            if (this.isRTL) {
              left = this.options.getScrollableOuterWidth() - left;
            }
            return {
              top: top,
              left: left
            };
          }
        }, {
          key: "dispose",
          value: function dispose() {
            if (this._onScrollHandler) {
              _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__["default"].off(this.document, DOCUMENT_SCROLL_EVENT_NAMESPACE, this._onScrollHandler);
            }
          }
        }, {
          key: "createVirtualScrolling",
          value: function createVirtualScrolling() {
            var isVerticalVirtualScrollingCreated = !!this.verticalVirtualScrolling;
            var isHorizontalVirtualScrollingCreated = !!this.horizontalVirtualScrolling;
            if (this.verticalScrollingAllowed !== isVerticalVirtualScrollingCreated || this.horizontalScrollingAllowed !== isHorizontalVirtualScrollingCreated) {
              this._rowHeight = this.getCellHeight();
              this._cellWidth = this.getCellWidth();
              this._createVirtualScrollingBase();
            }
          }
        }, {
          key: "_createVirtualScrollingBase",
          value: function _createVirtualScrollingBase() {
            if (this.verticalScrollingAllowed) {
              this.verticalVirtualScrolling = new VerticalVirtualScrolling((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.options), {
                viewportHeight: this.viewportHeight,
                rowHeight: this.rowHeight,
                outlineCount: this.outlineCount
              }));
            }
            if (this.horizontalScrollingAllowed) {
              this.horizontalVirtualScrolling = new HorizontalVirtualScrolling((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.options), {
                viewportWidth: this.viewportWidth,
                cellWidth: this.cellWidth,
                outlineCount: this.outlineCount
              }));
            }
          }
        }, {
          key: "isAttachWindowScrollEvent",
          value: function isAttachWindowScrollEvent() {
            return (this.horizontalScrollingAllowed || this.verticalScrollingAllowed) && !this.height;
          }
        }, {
          key: "attachScrollableEvents",
          value: function attachScrollableEvents() {
            if (this.isAttachWindowScrollEvent()) {
              this._attachWindowScroll();
            }
          }
        }, {
          key: "_attachWindowScroll",
          value: function _attachWindowScroll() {
            var _this129 = this;
            var window = (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_3__.getWindow)();
            this._onScrollHandler = this.options.createAction(function () {
              var scrollX = window.scrollX,
                scrollY = window.scrollY;
              if (scrollX >= MIN_SCROLL_OFFSET || scrollY >= MIN_SCROLL_OFFSET) {
                _this129.handleOnScrollEvent({
                  left: scrollX,
                  top: scrollY
                });
              }
            });
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__["default"].on(this.document, DOCUMENT_SCROLL_EVENT_NAMESPACE, this._onScrollHandler);
          }
        }, {
          key: "handleOnScrollEvent",
          value: function handleOnScrollEvent(scrollPosition) {
            var _a, _b, _c, _d;
            if (scrollPosition) {
              var left = scrollPosition.left,
                top = scrollPosition.top;
              var verticalStateChanged = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(top) && (null === (_a = this.verticalVirtualScrolling) || void 0 === _a ? void 0 : _a.updateState(top));
              var horizontalStateChanged = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(left) && (null === (_b = this.horizontalVirtualScrolling) || void 0 === _b ? void 0 : _b.updateState(left));
              if (verticalStateChanged || horizontalStateChanged) {
                null === (_d = (_c = this.options).updateRender) || void 0 === _d ? void 0 : _d.call(_c);
              }
            }
          }
        }, {
          key: "updateDimensions",
          value: function updateDimensions(isForce) {
            var _a, _b;
            var cellHeight = this.getCellHeight();
            var needUpdateVertical = this.verticalScrollingAllowed && cellHeight !== this.rowHeight;
            if ((needUpdateVertical || isForce) && this.verticalVirtualScrolling) {
              this.rowHeight = cellHeight;
              this.verticalVirtualScrolling.viewportSize = this.viewportHeight;
              this.verticalVirtualScrolling.reinitState(cellHeight, isForce);
            }
            var cellWidth = this.getCellWidth();
            var needUpdateHorizontal = this.horizontalScrollingAllowed && cellWidth !== this.cellWidth;
            if ((needUpdateHorizontal || isForce) && this.horizontalVirtualScrolling) {
              this.cellWidth = cellWidth;
              this.horizontalVirtualScrolling.viewportSize = this.viewportWidth;
              this.horizontalVirtualScrolling.reinitState(cellWidth, isForce);
            }
            if (needUpdateVertical || needUpdateHorizontal) {
              null === (_b = (_a = this.options).updateGrid) || void 0 === _b ? void 0 : _b.call(_a);
            }
          }
        }]);
        return _VirtualScrollingDispatcher;
      }();
      var VirtualScrollingBase = /*#__PURE__*/function () {
        function VirtualScrollingBase(options) {
          _classCallCheck(this, VirtualScrollingBase);
          this.options = options;
          this._state = this.defaultState;
          this.viewportSize = this.options.viewportSize;
          this._itemSize = this.options.itemSize;
          this._position = -1;
          this._itemSizeChanged = false;
          this.updateState(0);
        }
        _createClass(VirtualScrollingBase, [{
          key: "itemSize",
          get: function get() {
            return this._itemSize;
          },
          set: function set(value) {
            this._itemSizeChanged = this._itemSize !== value;
            this._itemSize = value;
          }
        }, {
          key: "state",
          get: function get() {
            return this._state;
          },
          set: function set(value) {
            this._state = value;
          }
        }, {
          key: "startIndex",
          get: function get() {
            return this.state.startIndex;
          }
        }, {
          key: "pageSize",
          get: function get() {
            return Math.ceil(this.viewportSize / this.itemSize);
          }
        }, {
          key: "outlineCount",
          get: function get() {
            return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(this.options.outlineCount) ? this.options.outlineCount : Math.floor(this.pageSize / 2);
          }
        }, {
          key: "groupCount",
          get: function get() {
            return this.options.getGroupCount();
          }
        }, {
          key: "isVerticalGrouping",
          get: function get() {
            return this.options.isVerticalGrouping();
          }
        }, {
          key: "defaultState",
          get: function get() {
            return {
              prevPosition: 0,
              startIndex: -1,
              itemCount: 0,
              virtualItemCountBefore: 0,
              virtualItemCountAfter: 0,
              outlineCountBefore: 0,
              outlineCountAfter: 0,
              virtualItemSizeBefore: 0,
              virtualItemSizeAfter: 0,
              outlineSizeBefore: 0,
              outlineSizeAfter: 0
            };
          }
        }, {
          key: "maxScrollPosition",
          get: function get() {
            return this.getTotalItemCount() * this.itemSize - this.viewportSize;
          }
        }, {
          key: "position",
          get: function get() {
            return this._position;
          },
          set: function set(value) {
            this._position = value;
          }
        }, {
          key: "needUpdateState",
          value: function needUpdateState(position) {
            var _this$state = this.state,
              prevPosition = _this$state.prevPosition,
              startIndex = _this$state.startIndex;
            var isFirstInitialization = startIndex < 0;
            if (isFirstInitialization) {
              return true;
            }
            var isStartIndexChanged = false;
            if (this._validateAndSavePosition(position)) {
              if (0 === position || position === this.maxScrollPosition) {
                return true;
              }
              var currentPosition = prevPosition;
              var currentItemsCount = Math.floor(currentPosition / this.itemSize);
              var itemsCount = Math.floor(position / this.itemSize);
              isStartIndexChanged = Math.abs(currentItemsCount - itemsCount) >= this.outlineCount;
            }
            return isStartIndexChanged;
          }
        }, {
          key: "_validateAndSavePosition",
          value: function _validateAndSavePosition(position) {
            if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(position)) {
              return false;
            }
            var result = this.position !== position;
            this.position = position;
            return result;
          }
        }, {
          key: "_correctPosition",
          value: function _correctPosition(position) {
            return position >= 0 ? Math.min(position, this.maxScrollPosition) : -1;
          }
        }, {
          key: "updateState",
          value: function updateState(position, isForce) {
            position = this._correctPosition(position);
            if (!this.needUpdateState(position) && !isForce) {
              return false;
            }
            var itemsInfoBefore = this._calcItemInfoBefore(position);
            var itemsDeltaBefore = this._calcItemDeltaBefore(itemsInfoBefore);
            var _this$_calcItemInfoAf = this._calcItemInfoAfter(itemsDeltaBefore),
              outlineCountAfter = _this$_calcItemInfoAf.outlineCountAfter,
              virtualItemCountAfter = _this$_calcItemInfoAf.virtualItemCountAfter,
              itemCountWithAfter = _this$_calcItemInfoAf.itemCountWithAfter;
            var virtualItemCountBefore = itemsInfoBefore.virtualItemCountBefore,
              outlineCountBefore = itemsInfoBefore.outlineCountBefore;
            var itemCount = outlineCountBefore + itemCountWithAfter + outlineCountAfter;
            var itemCountBefore = Math.floor(position / this.itemSize);
            this.state.prevPosition = itemCountBefore * this.itemSize;
            this.state.startIndex = itemCountBefore - outlineCountBefore;
            this.state.virtualItemCountBefore = virtualItemCountBefore;
            this.state.outlineCountBefore = outlineCountBefore;
            this.state.itemCount = itemCount;
            this.state.outlineCountAfter = outlineCountAfter;
            this.state.virtualItemCountAfter = virtualItemCountAfter;
            this._updateStateCore();
            return true;
          }
        }, {
          key: "reinitState",
          value: function reinitState(itemSize, isForceUpdate) {
            var position = this.position;
            this.itemSize = itemSize;
            this.updateState(0, isForceUpdate);
            if (position > 0) {
              this.updateState(position, isForceUpdate);
            }
          }
        }, {
          key: "_calcItemInfoBefore",
          value: function _calcItemInfoBefore(position) {
            var virtualItemCountBefore = Math.floor(position / this.itemSize);
            var outlineCountBefore = Math.min(virtualItemCountBefore, this.outlineCount);
            virtualItemCountBefore -= outlineCountBefore;
            return {
              virtualItemCountBefore: virtualItemCountBefore,
              outlineCountBefore: outlineCountBefore
            };
          }
        }, {
          key: "_calcItemDeltaBefore",
          value: function _calcItemDeltaBefore(itemInfoBefore) {
            var virtualItemCountBefore = itemInfoBefore.virtualItemCountBefore,
              outlineCountBefore = itemInfoBefore.outlineCountBefore;
            var totalItemCount = this.getTotalItemCount();
            return totalItemCount - virtualItemCountBefore - outlineCountBefore;
          }
        }, {
          key: "getTotalItemCount",
          value: function getTotalItemCount() {
            throw "getTotalItemCount method should be implemented";
          }
        }, {
          key: "getRenderState",
          value: function getRenderState() {
            throw "getRenderState method should be implemented";
          }
        }, {
          key: "_calcItemInfoAfter",
          value: function _calcItemInfoAfter(itemsDeltaBefore) {
            var itemCountWithAfter = itemsDeltaBefore >= this.pageSize ? this.pageSize : itemsDeltaBefore;
            var virtualItemCountAfter = itemsDeltaBefore - itemCountWithAfter;
            var outlineCountAfter = virtualItemCountAfter > 0 ? Math.min(virtualItemCountAfter, this.outlineCount) : 0;
            if (virtualItemCountAfter > 0) {
              virtualItemCountAfter -= outlineCountAfter;
            }
            return {
              virtualItemCountAfter: virtualItemCountAfter,
              outlineCountAfter: outlineCountAfter,
              itemCountWithAfter: itemCountWithAfter
            };
          }
        }, {
          key: "_updateStateCore",
          value: function _updateStateCore() {
            var state = this.state;
            var virtualItemCountBefore = state.virtualItemCountBefore;
            var virtualItemCountAfter = state.virtualItemCountAfter;
            var outlineCountBefore = state.outlineCountBefore;
            var outlineCountAfter = state.outlineCountAfter;
            var prevVirtualItemSizeBefore = state.virtualItemSizeBefore;
            var prevVirtualItemSizeAfter = state.virtualItemSizeAfter;
            var prevOutlineSizeBefore = state.outlineSizeBefore;
            var prevOutlineSizeAfter = state.outlineSizeAfter;
            var virtualItemSizeBefore = this.itemSize * virtualItemCountBefore;
            var virtualItemSizeAfter = this.itemSize * virtualItemCountAfter;
            var outlineSizeBefore = this.itemSize * outlineCountBefore;
            var outlineSizeAfter = this.itemSize * outlineCountAfter;
            var prevVirtualSizeBefore = prevVirtualItemSizeBefore + prevOutlineSizeBefore;
            var virtualSizeBefore = virtualItemSizeBefore + outlineSizeBefore;
            var prevVirtualSizeAfter = prevVirtualItemSizeAfter + prevOutlineSizeAfter;
            var virtualSizeAfter = virtualItemSizeAfter + outlineSizeAfter;
            var isAppend = prevVirtualSizeBefore < virtualSizeBefore;
            var isPrepend = prevVirtualSizeAfter < virtualSizeAfter;
            var needAddItems = this._itemSizeChanged || isAppend || isPrepend;
            if (needAddItems) {
              this._updateStateVirtualItems(virtualItemSizeBefore, virtualItemSizeAfter);
            }
          }
        }, {
          key: "_updateStateVirtualItems",
          value: function _updateStateVirtualItems(virtualItemSizeBefore, virtualItemSizeAfter) {
            var state = this.state;
            state.virtualItemSizeBefore = virtualItemSizeBefore;
            state.virtualItemSizeAfter = virtualItemSizeAfter;
          }
        }]);
        return VirtualScrollingBase;
      }();
      var VerticalVirtualScrolling = /*#__PURE__*/function (_VirtualScrollingBase) {
        _inherits(VerticalVirtualScrolling, _VirtualScrollingBase);
        function VerticalVirtualScrolling(options) {
          _classCallCheck(this, VerticalVirtualScrolling);
          return _callSuper(this, VerticalVirtualScrolling, [(0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {
            itemSize: options.rowHeight,
            viewportSize: options.viewportHeight
          })]);
        }
        _createClass(VerticalVirtualScrolling, [{
          key: "prevTopPosition",
          get: function get() {
            return this.state.prevPosition;
          }
        }, {
          key: "rowCount",
          get: function get() {
            return this.state.itemCount;
          }
        }, {
          key: "topVirtualRowCount",
          get: function get() {
            return this.state.virtualItemCountBefore;
          }
        }, {
          key: "bottomVirtualRowCount",
          get: function get() {
            return this.state.virtualItemCountAfter;
          }
        }, {
          key: "getTotalItemCount",
          value: function getTotalItemCount() {
            return this.options.getTotalRowCount(this.groupCount, this.isVerticalGrouping);
          }
        }, {
          key: "getRenderState",
          value: function getRenderState() {
            return {
              topVirtualRowHeight: this.state.virtualItemSizeBefore,
              bottomVirtualRowHeight: this.state.virtualItemSizeAfter,
              startRowIndex: this.state.startIndex,
              rowCount: this.state.itemCount,
              startIndex: this.state.startIndex
            };
          }
        }]);
        return VerticalVirtualScrolling;
      }(VirtualScrollingBase);
      var HorizontalVirtualScrolling = /*#__PURE__*/function (_VirtualScrollingBase2) {
        _inherits(HorizontalVirtualScrolling, _VirtualScrollingBase2);
        function HorizontalVirtualScrolling(options) {
          _classCallCheck(this, HorizontalVirtualScrolling);
          return _callSuper(this, HorizontalVirtualScrolling, [(0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {
            itemSize: options.cellWidth,
            viewportSize: options.viewportWidth
          })]);
        }
        _createClass(HorizontalVirtualScrolling, [{
          key: "isRTL",
          get: function get() {
            return this.options.isRTL();
          }
        }, {
          key: "getTotalItemCount",
          value: function getTotalItemCount() {
            return this.options.getTotalCellCount(this.groupCount, this.isVerticalGrouping);
          }
        }, {
          key: "getRenderState",
          value: function getRenderState() {
            return {
              leftVirtualCellWidth: this.state.virtualItemSizeBefore,
              rightVirtualCellWidth: this.state.virtualItemSizeAfter,
              startCellIndex: this.state.startIndex,
              cellCount: this.state.itemCount,
              cellWidth: this.itemSize
            };
          }
        }, {
          key: "_updateStateVirtualItems",
          value: function _updateStateVirtualItems(virtualItemSizeBefore, virtualItemSizeAfter) {
            if (!this.isRTL) {
              _get(_getPrototypeOf(HorizontalVirtualScrolling.prototype), "_updateStateVirtualItems", this).call(this, virtualItemSizeBefore, virtualItemSizeAfter);
            } else {
              var state = this.state;
              state.virtualItemSizeAfter = virtualItemSizeBefore;
              state.virtualItemSizeBefore = virtualItemSizeAfter;
              state.startIndex = this.getTotalItemCount() - this.startIndex - this.state.itemCount;
            }
          }
        }]);
        return HorizontalVirtualScrolling;
      }(VirtualScrollingBase);
      var _VirtualScrollingRenderer = /*#__PURE__*/function () {
        function _VirtualScrollingRenderer(_workspace) {
          _classCallCheck(this, _VirtualScrollingRenderer);
          this._workspace = _workspace;
          this._renderAppointmentTimeoutID = null;
        }
        _createClass(_VirtualScrollingRenderer, [{
          key: "getRenderTimeout",
          value: function getRenderTimeout() {
            return this._workspace.option("isRenovatedAppointments") ? -1 : VIRTUAL_APPOINTMENTS_RENDER_TIMEOUT;
          }
        }, {
          key: "workspace",
          get: function get() {
            return this._workspace;
          }
        }, {
          key: "updateRender",
          value: function updateRender() {
            this._renderGrid();
            this._renderAppointments();
          }
        }, {
          key: "_renderGrid",
          value: function _renderGrid() {
            this.workspace.renderWorkSpace(false);
          }
        }, {
          key: "_renderAppointments",
          value: function _renderAppointments() {
            var _this130 = this;
            var renderTimeout = this.getRenderTimeout();
            if (renderTimeout >= 0) {
              clearTimeout(this._renderAppointmentTimeoutID);
              this._renderAppointmentTimeoutID = setTimeout(function () {
                return _this130.workspace.updateAppointments();
              }, renderTimeout);
            } else {
              this.workspace.updateAppointments();
            }
          }
        }]);
        return _VirtualScrollingRenderer;
      }();
      /***/
    }),
    /***/2148: (
    /*!*************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_work_space.js ***!
      \*************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _animation_translator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../animation/translator */10829);
      /* harmony import */
      var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/dom_adapter */81113);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/element */60213);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/utils/common */37552);
      /* harmony import */
      var _core_utils_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../core/utils/data */25670);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../../core/utils/position */9622);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../../../core/utils/window */88684);
      /* harmony import */
      var _events_click__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../../../events/click */38894);
      /* harmony import */
      var _events_contextmenu__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../../../events/contextmenu */56582);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../../../events/core/events_engine */99064);
      /* harmony import */
      var _events_drag__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ../../../events/drag */85970);
      /* harmony import */
      var _events_pointer__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__( /*! ../../../events/pointer */24842);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__( /*! ../../../events/utils/index */3151);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__( /*! ../../../localization/message */19336);
      /* harmony import */
      var _renovation_ui_common_utils_scroll_getMemoizeScrollTo__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__( /*! ../../../renovation/ui/common/utils/scroll/getMemoizeScrollTo */37999);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _ui_scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__( /*! ../../../ui/scroll_view/ui.scrollable */79678);
      /* harmony import */
      var _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__( /*! ../../../ui/widget/ui.errors */42491);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_base_date_table_all_day_panel_table_j__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.j */16551);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_base_date_table_all_day_panel_title_j__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.j */69883);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_base_date_table_layout_j__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/workspaces/base/date_table/layout.j */85953);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_base_group_panel_group_panel_j__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/workspaces/base/group_panel/group_panel.j */16783);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_base_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/workspaces/base/header_panel/layout.j */27865);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_base_time_panel_layout_j__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/workspaces/base/time_panel/layout.j */47756);
      /* harmony import */
      var _base_m_widget_observer__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__( /*! ../base/m_widget_observer */19297);
      /* harmony import */
      var _m_appointment_drag_behavior__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__( /*! ../m_appointment_drag_behavior */81654);
      /* harmony import */
      var _m_classes__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__( /*! ../m_classes */16874);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_table_creator__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__( /*! ../m_table_creator */69100);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__( /*! ../m_utils */8392);
      /* harmony import */
      var _resources_m_utils__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__( /*! ../resources/m_utils */48025);
      /* harmony import */
      var _shaders_m_current_time_shader_vertical__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__( /*! ../shaders/m_current_time_shader_vertical */94289);
      /* harmony import */
      var _helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__( /*! ./helpers/m_position_helper */33901);
      /* harmony import */
      var _m_cache__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__( /*! ./m_cache */19133);
      /* harmony import */
      var _m_cells_selection_controller__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__( /*! ./m_cells_selection_controller */46389);
      /* harmony import */
      var _m_cells_selection_state__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__( /*! ./m_cells_selection_state */35018);
      /* harmony import */
      var _m_virtual_scrolling__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__( /*! ./m_virtual_scrolling */7901);
      /* harmony import */
      var _m_work_space_grouped_strategy_horizontal__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__( /*! ./m_work_space_grouped_strategy_horizontal */97463);
      /* harmony import */
      var _m_work_space_grouped_strategy_vertical__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__( /*! ./m_work_space_grouped_strategy_vertical */62203);
      /* harmony import */
      var _view_model_m_view_data_provider__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__( /*! ./view_model/m_view_data_provider */49692);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_work_space.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var tableCreator = _m_table_creator__WEBPACK_IMPORTED_MODULE_34__["default"].tableCreator;
      var DRAGGING_MOUSE_FAULT = 10;
      var _abstract = _base_m_widget_observer__WEBPACK_IMPORTED_MODULE_30__["default"]["abstract"];
      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_7__["default"].dateToMilliseconds;
      var COMPONENT_CLASS = "dx-scheduler-work-space";
      var GROUPED_WORKSPACE_CLASS = "dx-scheduler-work-space-grouped";
      var VERTICAL_GROUPED_WORKSPACE_CLASS = "dx-scheduler-work-space-vertical-grouped";
      var WORKSPACE_VERTICAL_GROUP_TABLE_CLASS = "dx-scheduler-work-space-vertical-group-table";
      var WORKSPACE_WITH_BOTH_SCROLLS_CLASS = "dx-scheduler-work-space-both-scrollbar";
      var WORKSPACE_WITH_COUNT_CLASS = "dx-scheduler-work-space-count";
      var WORKSPACE_WITH_GROUP_BY_DATE_CLASS = "dx-scheduler-work-space-group-by-date";
      var WORKSPACE_WITH_ODD_CELLS_CLASS = "dx-scheduler-work-space-odd-cells";
      var TIME_PANEL_CELL_CLASS = "dx-scheduler-time-panel-cell";
      var TIME_PANEL_ROW_CLASS = "dx-scheduler-time-panel-row";
      var ALL_DAY_PANEL_CLASS = "dx-scheduler-all-day-panel";
      var ALL_DAY_TABLE_CLASS = "dx-scheduler-all-day-table";
      var ALL_DAY_CONTAINER_CLASS = "dx-scheduler-all-day-appointments";
      var ALL_DAY_TITLE_CLASS = "dx-scheduler-all-day-title";
      var ALL_DAY_TABLE_CELL_CLASS = "dx-scheduler-all-day-table-cell";
      var ALL_DAY_TABLE_ROW_CLASS = "dx-scheduler-all-day-table-row";
      var WORKSPACE_WITH_ALL_DAY_CLASS = "dx-scheduler-work-space-all-day";
      var WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS = "dx-scheduler-work-space-all-day-collapsed";
      var WORKSPACE_WITH_MOUSE_SELECTION_CLASS = "dx-scheduler-work-space-mouse-selection";
      var HORIZONTAL_SIZES_CLASS = "dx-scheduler-cell-sizes-horizontal";
      var VERTICAL_SIZES_CLASS = "dx-scheduler-cell-sizes-vertical";
      var HEADER_PANEL_CLASS = "dx-scheduler-header-panel";
      var HEADER_PANEL_CELL_CLASS = "dx-scheduler-header-panel-cell";
      var HEADER_ROW_CLASS = "dx-scheduler-header-row";
      var GROUP_HEADER_CLASS = "dx-scheduler-group-header";
      var DATE_TABLE_CELL_CLASS = "dx-scheduler-date-table-cell";
      var DATE_TABLE_FOCUSED_CELL_CLASS = "dx-scheduler-focused-cell";
      var VIRTUAL_ROW_CLASS = "dx-scheduler-virtual-row";
      var DATE_TABLE_DROPPABLE_CELL_CLASS = "dx-scheduler-date-table-droppable-cell";
      var SCHEDULER_HEADER_SCROLLABLE_CLASS = "dx-scheduler-header-scrollable";
      var SCHEDULER_SIDEBAR_SCROLLABLE_CLASS = "dx-scheduler-sidebar-scrollable";
      var SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS = "dx-scheduler-date-table-scrollable";
      var SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_17__["default"].down, "dxSchedulerWorkSpace");
      var DragEventNames = {
        ENTER: (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_16__.enter, "dxSchedulerDateTable"),
        DROP: (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_16__.drop, "dxSchedulerDateTable"),
        LEAVE: (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_drag__WEBPACK_IMPORTED_MODULE_16__.leave, "dxSchedulerDateTable")
      };
      var SCHEDULER_CELL_DXCLICK_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_click__WEBPACK_IMPORTED_MODULE_13__.name, "dxSchedulerDateTable");
      var SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_17__["default"].down, "dxSchedulerDateTable");
      var SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_17__["default"].up, "dxSchedulerDateTable");
      var SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_17__["default"].move, "dxSchedulerDateTable");
      var CELL_DATA = "dxCellData";
      var DATE_TABLE_MIN_CELL_WIDTH = 75;
      var DAY_MS = toMs("day");
      var HOUR_MS = toMs("hour");
      var DRAG_AND_DROP_SELECTOR = ".".concat(_m_classes__WEBPACK_IMPORTED_MODULE_32__.DATE_TABLE_CLASS, " td, .").concat(ALL_DAY_TABLE_CLASS, " td");
      var CELL_SELECTOR = ".".concat(DATE_TABLE_CELL_CLASS, ", .").concat(ALL_DAY_TABLE_CELL_CLASS);
      var CELL_INDEX_CALCULATION_EPSILON = .05;
      var DEFAULT_WORKSPACE_RENDER_OPTIONS = {
        renderComponents: {
          header: true,
          timePanel: true,
          dateTable: true,
          allDayPanel: true
        },
        generateNewData: true
      };
      var SchedulerWorkSpace = /*#__PURE__*/function (_base_m_widget_observ) {
        _inherits(SchedulerWorkSpace, _base_m_widget_observ);
        function SchedulerWorkSpace() {
          var _this131;
          _classCallCheck(this, SchedulerWorkSpace);
          _this131 = _callSuper(this, SchedulerWorkSpace, arguments);
          _this131.viewDirection = "vertical";
          return _this131;
        }
        _createClass(SchedulerWorkSpace, [{
          key: "type",
          get: function get() {
            return "";
          }
        }, {
          key: "viewDataProvider",
          get: function get() {
            if (!this._viewDataProvider) {
              this._viewDataProvider = new _view_model_m_view_data_provider__WEBPACK_IMPORTED_MODULE_45__["default"](this.type);
            }
            return this._viewDataProvider;
          }
        }, {
          key: "cache",
          get: function get() {
            if (!this._cache) {
              this._cache = new _m_cache__WEBPACK_IMPORTED_MODULE_39__.Cache();
            }
            return this._cache;
          }
        }, {
          key: "cellsSelectionState",
          get: function get() {
            var _this132 = this;
            if (!this._cellsSelectionState) {
              this._cellsSelectionState = new _m_cells_selection_state__WEBPACK_IMPORTED_MODULE_41__["default"](this.viewDataProvider);
              var selectedCellsOption = this.option("selectedCellData");
              if ((null === selectedCellsOption || void 0 === selectedCellsOption ? void 0 : selectedCellsOption.length) > 0) {
                var validSelectedCells = selectedCellsOption.map(function (selectedCell) {
                  var groups = selectedCell.groups;
                  if (!groups || 0 === _this132._getGroupCount()) {
                    return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, selectedCell), {
                      groupIndex: 0
                    });
                  }
                  var groupIndex = _this132._getGroupIndexByResourceId(groups);
                  return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, selectedCell), {
                    groupIndex: groupIndex
                  });
                });
                this._cellsSelectionState.setSelectedCellsByData(validSelectedCells);
              }
            }
            return this._cellsSelectionState;
          }
        }, {
          key: "cellsSelectionController",
          get: function get() {
            if (!this._cellsSelectionController) {
              this._cellsSelectionController = new _m_cells_selection_controller__WEBPACK_IMPORTED_MODULE_40__.CellsSelectionController();
            }
            return this._cellsSelectionController;
          }
        }, {
          key: "isAllDayPanelVisible",
          get: function get() {
            return this._isShowAllDayPanel() && this.supportAllDayRow();
          }
        }, {
          key: "verticalGroupTableClass",
          get: function get() {
            return WORKSPACE_VERTICAL_GROUP_TABLE_CLASS;
          }
        }, {
          key: "renovatedHeaderPanelComponent",
          get: function get() {
            return _renovation_ui_scheduler_workspaces_base_header_panel_layout_j__WEBPACK_IMPORTED_MODULE_28__["default"];
          }
        }, {
          key: "timeZoneCalculator",
          get: function get() {
            return this.option("timeZoneCalculator");
          }
        }, {
          key: "isDefaultDraggingMode",
          get: function get() {
            return "default" === this.option("draggingMode");
          }
        }, {
          key: "_supportedKeys",
          value: function _supportedKeys() {
            var _this134 = this;
            var clickHandler = function clickHandler(e) {
              var _this133 = this;
              e.preventDefault();
              e.stopPropagation();
              var selectedCells = this.cellsSelectionState.getSelectedCells();
              if (null === selectedCells || void 0 === selectedCells ? void 0 : selectedCells.length) {
                var selectedCellsElement = selectedCells.map(function (cellData) {
                  return _this133._getCellByData(cellData);
                }).filter(function (cell) {
                  return !!cell;
                });
                e.target = selectedCellsElement;
                this._showPopup = true;
                this._cellClickAction({
                  event: e,
                  cellElement: (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(selectedCellsElement),
                  cellData: selectedCells[0]
                });
              }
            };
            var onArrowPressed = function onArrowPressed(e, key) {
              var _a;
              e.preventDefault();
              e.stopPropagation();
              var focusedCellData = null === (_a = _this134.cellsSelectionState.focusedCell) || void 0 === _a ? void 0 : _a.cellData;
              if (focusedCellData) {
                var isAllDayPanelCell = focusedCellData.allDay && !_this134._isVerticalGroupedWorkSpace();
                var isMultiSelection = e.shiftKey;
                var isMultiSelectionAllowed = _this134.option("allowMultipleCellSelection");
                var isRTL = _this134._isRTL();
                var groupCount = _this134._getGroupCount();
                var isGroupedByDate = _this134.isGroupedByDate();
                var isHorizontalGrouping = _this134._isHorizontalGroupedWorkSpace();
                var focusedCellPosition = _this134.viewDataProvider.findCellPositionInMap((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, focusedCellData), {
                  isAllDay: focusedCellData.allDay
                }));
                var edgeIndices = isHorizontalGrouping && isMultiSelection && !isGroupedByDate ? _this134.viewDataProvider.getGroupEdgeIndices(focusedCellData.groupIndex, isAllDayPanelCell) : _this134.viewDataProvider.getViewEdgeIndices(isAllDayPanelCell);
                var nextCellData = _this134.cellsSelectionController.handleArrowClick({
                  focusedCellPosition: focusedCellPosition,
                  edgeIndices: edgeIndices,
                  isRTL: isRTL,
                  isGroupedByDate: isGroupedByDate,
                  groupCount: groupCount,
                  isMultiSelection: isMultiSelection,
                  isMultiSelectionAllowed: isMultiSelectionAllowed,
                  viewType: _this134.type,
                  key: key,
                  getCellDataByPosition: _this134.viewDataProvider.getCellData.bind(_this134.viewDataProvider),
                  isAllDayPanelCell: isAllDayPanelCell,
                  focusedCellData: focusedCellData
                });
                _this134._processNextSelectedCell(nextCellData, focusedCellData, isMultiSelection && isMultiSelectionAllowed);
              }
            };
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(_get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_supportedKeys", this).call(this), {
              enter: clickHandler,
              space: clickHandler,
              downArrow: function downArrow(e) {
                onArrowPressed(e, "down");
              },
              upArrow: function upArrow(e) {
                onArrowPressed(e, "up");
              },
              rightArrow: function rightArrow(e) {
                onArrowPressed(e, "right");
              },
              leftArrow: function leftArrow(e) {
                onArrowPressed(e, "left");
              }
            });
          }
        }, {
          key: "_isRTL",
          value: function _isRTL() {
            return this.option("rtlEnabled");
          }
        }, {
          key: "_moveToCell",
          value: function _moveToCell($cell, isMultiSelection) {
            if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)($cell) || !$cell.length) {
              return;
            }
            var isMultiSelectionAllowed = this.option("allowMultipleCellSelection");
            var currentCellData = this._getFullCellData($cell);
            var focusedCellData = this.cellsSelectionState.focusedCell.cellData;
            var nextFocusedCellData = this.cellsSelectionController.moveToCell({
              isMultiSelection: isMultiSelection,
              isMultiSelectionAllowed: isMultiSelectionAllowed,
              currentCellData: currentCellData,
              focusedCellData: focusedCellData,
              isVirtualCell: $cell.hasClass(_m_classes__WEBPACK_IMPORTED_MODULE_32__.VIRTUAL_CELL_CLASS)
            });
            this._processNextSelectedCell(nextFocusedCellData, focusedCellData, isMultiSelectionAllowed && isMultiSelection);
          }
        }, {
          key: "_processNextSelectedCell",
          value: function _processNextSelectedCell(nextCellData, focusedCellData, isMultiSelection) {
            var nextCellPosition = this.viewDataProvider.findCellPositionInMap({
              startDate: nextCellData.startDate,
              groupIndex: nextCellData.groupIndex,
              isAllDay: nextCellData.allDay,
              index: nextCellData.index
            });
            if (!this.viewDataProvider.isSameCell(focusedCellData, nextCellData)) {
              var $cell = nextCellData.allDay && !this._isVerticalGroupedWorkSpace() ? this._dom_getAllDayPanelCell(nextCellPosition.columnIndex) : this._dom_getDateCell(nextCellPosition);
              var isNextCellAllDay = nextCellData.allDay;
              this._setSelectedCellsStateAndUpdateSelection(isNextCellAllDay, nextCellPosition, isMultiSelection, $cell);
              this._dateTableScrollable.scrollToElement($cell);
            }
          }
        }, {
          key: "_setSelectedCellsStateAndUpdateSelection",
          value: function _setSelectedCellsStateAndUpdateSelection(isAllDay, cellPosition, isMultiSelection, $nextFocusedCell) {
            var nextCellCoordinates = {
              rowIndex: cellPosition.rowIndex,
              columnIndex: cellPosition.columnIndex,
              allDay: isAllDay
            };
            this.cellsSelectionState.setFocusedCell(nextCellCoordinates.rowIndex, nextCellCoordinates.columnIndex, isAllDay);
            if (isMultiSelection) {
              this.cellsSelectionState.setSelectedCells(nextCellCoordinates);
            } else {
              this.cellsSelectionState.setSelectedCells(nextCellCoordinates, nextCellCoordinates);
            }
            this.updateCellsSelection();
            this._updateSelectedCellDataOption(this.cellsSelectionState.getSelectedCells(), $nextFocusedCell);
          }
        }, {
          key: "_hasAllDayClass",
          value: function _hasAllDayClass($cell) {
            return $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS);
          }
        }, {
          key: "_focusInHandler",
          value: function _focusInHandler(e) {
            if ((0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(e.target).is(this._focusTarget()) && false !== this._isCellClick) {
              delete this._isCellClick;
              delete this._contextMenuHandled;
              _get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_focusInHandler", this).apply(this, arguments);
              this.cellsSelectionState.restoreSelectedAndFocusedCells();
              if (!this.cellsSelectionState.focusedCell) {
                var cellCoordinates = {
                  columnIndex: 0,
                  rowIndex: 0,
                  allDay: this._isVerticalGroupedWorkSpace() && this.isAllDayPanelVisible
                };
                this.cellsSelectionState.setFocusedCell(cellCoordinates.rowIndex, cellCoordinates.columnIndex, cellCoordinates.allDay);
                this.cellsSelectionState.setSelectedCells(cellCoordinates, cellCoordinates);
              }
              this.updateCellsSelection();
              this._updateSelectedCellDataOption(this.cellsSelectionState.getSelectedCells());
            }
          }
        }, {
          key: "_focusOutHandler",
          value: function _focusOutHandler() {
            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_focusOutHandler", this).apply(this, arguments);
            if (!this._contextMenuHandled && !this._disposed) {
              this.cellsSelectionState.releaseSelectedAndFocusedCells();
              this.viewDataProvider.updateViewData(this.generateRenderOptions());
              this.updateCellsSelection();
            }
          }
        }, {
          key: "_focusTarget",
          value: function _focusTarget() {
            return this.$element();
          }
        }, {
          key: "_isVerticalGroupedWorkSpace",
          value: function _isVerticalGroupedWorkSpace() {
            var _a;
            return !!(null === (_a = this.option("groups")) || void 0 === _a ? void 0 : _a.length) && "vertical" === this.option("groupOrientation");
          }
        }, {
          key: "_isHorizontalGroupedWorkSpace",
          value: function _isHorizontalGroupedWorkSpace() {
            var _a;
            return !!(null === (_a = this.option("groups")) || void 0 === _a ? void 0 : _a.length) && "horizontal" === this.option("groupOrientation");
          }
        }, {
          key: "_isWorkSpaceWithCount",
          value: function _isWorkSpaceWithCount() {
            return this.option("intervalCount") > 1;
          }
        }, {
          key: "_isWorkspaceWithOddCells",
          value: function _isWorkspaceWithOddCells() {
            return .5 === this.option("hoursInterval") && !this.isVirtualScrolling();
          }
        }, {
          key: "_getRealGroupOrientation",
          value: function _getRealGroupOrientation() {
            return this._isVerticalGroupedWorkSpace() ? "vertical" : "horizontal";
          }
        }, {
          key: "createRAllDayPanelElements",
          value: function createRAllDayPanelElements() {
            this._$allDayPanel = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(ALL_DAY_PANEL_CLASS);
            this._$allDayTitle = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").appendTo(this._$headerPanelEmptyCell);
          }
        }, {
          key: "_dateTableScrollableConfig",
          value: function _dateTableScrollableConfig() {
            var _this135 = this;
            var config = {
              useKeyboard: false,
              bounceEnabled: false,
              updateManually: true,
              onScroll: function onScroll() {
                var _a;
                null === (_a = _this135._groupedStrategy.cache) || void 0 === _a ? void 0 : _a.clear();
              }
            };
            if (this._needCreateCrossScrolling()) {
              config = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(config, this._createCrossScrollingConfig(config));
            }
            if (this.isVirtualScrolling() && (this.virtualScrollingDispatcher.horizontalScrollingAllowed || this.virtualScrollingDispatcher.height)) {
              var currentOnScroll = config.onScroll;
              config = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, config), {
                onScroll: function onScroll(e) {
                  null === currentOnScroll || void 0 === currentOnScroll ? void 0 : currentOnScroll(e);
                  _this135.virtualScrollingDispatcher.handleOnScrollEvent(null === e || void 0 === e ? void 0 : e.scrollOffset);
                }
              });
            }
            return config;
          }
        }, {
          key: "_createCrossScrollingConfig",
          value: function _createCrossScrollingConfig(_ref) {
            var _this136 = this;
            var _onScroll = _ref.onScroll;
            return {
              direction: "both",
              onScroll: function onScroll(event) {
                null === _onScroll || void 0 === _onScroll ? void 0 : _onScroll();
                _this136._scrollSync.sidebar({
                  top: event.scrollOffset.top
                });
                _this136._scrollSync.header({
                  left: event.scrollOffset.left
                });
              },
              onEnd: function onEnd() {
                _this136.option("onScrollEnd")();
              }
            };
          }
        }, {
          key: "_headerScrollableConfig",
          value: function _headerScrollableConfig() {
            var _this137 = this;
            return {
              useKeyboard: false,
              showScrollbar: "never",
              direction: "horizontal",
              useNative: false,
              updateManually: true,
              bounceEnabled: false,
              onScroll: function onScroll(event) {
                _this137._scrollSync.dateTable({
                  left: event.scrollOffset.left
                });
              }
            };
          }
        }, {
          key: "_visibilityChanged",
          value: function _visibilityChanged(visible) {
            this.cache.clear();
            if (visible) {
              this._updateGroupTableHeight();
            }
            if (visible && this._needCreateCrossScrolling()) {
              this._setTableSizes();
            }
          }
        }, {
          key: "_setTableSizes",
          value: function _setTableSizes() {
            this.cache.clear();
            this._attachTableClasses();
            var cellWidth = this.getCellWidth();
            if (cellWidth < this.getCellMinWidth()) {
              cellWidth = this.getCellMinWidth();
            }
            var minWidth = this.getWorkSpaceMinWidth();
            var groupCount = this._getGroupCount();
            var totalCellCount = this._getTotalCellCount(groupCount);
            var width = cellWidth * totalCellCount;
            if (width < minWidth) {
              width = minWidth;
            }
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.setWidth)(this._$headerPanel, width);
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.setWidth)(this._$dateTable, width);
            if (this._$allDayTable) {
              (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.setWidth)(this._$allDayTable, width);
            }
            this._attachHeaderTableClasses();
            this._updateGroupTableHeight();
            this._updateScrollable();
          }
        }, {
          key: "getWorkSpaceMinWidth",
          value: function getWorkSpaceMinWidth() {
            return this._groupedStrategy.getWorkSpaceMinWidth();
          }
        }, {
          key: "_dimensionChanged",
          value: function _dimensionChanged() {
            if (!this._isVisible()) {
              return;
            }
            if (this.option("crossScrollingEnabled")) {
              this._setTableSizes();
            }
            this.updateHeaderEmptyCellWidth();
            this._updateScrollable();
            this.cache.clear();
          }
        }, {
          key: "_needCreateCrossScrolling",
          value: function _needCreateCrossScrolling() {
            return this.option("crossScrollingEnabled");
          }
        }, {
          key: "_getElementClass",
          value: function _getElementClass() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_5__.noop)();
          }
        }, {
          key: "_getRowCount",
          value: function _getRowCount() {
            return this.viewDataProvider.getRowCount({
              intervalCount: this.option("intervalCount"),
              currentDate: this.option("currentDate"),
              viewType: this.type,
              hoursInterval: this.option("hoursInterval"),
              startDayHour: this.option("startDayHour"),
              endDayHour: this.option("endDayHour")
            });
          }
        }, {
          key: "_getCellCount",
          value: function _getCellCount() {
            return this.viewDataProvider.getCellCount({
              intervalCount: this.option("intervalCount"),
              currentDate: this.option("currentDate"),
              viewType: this.type,
              hoursInterval: this.option("hoursInterval"),
              startDayHour: this.option("startDayHour"),
              endDayHour: this.option("endDayHour")
            });
          }
        }, {
          key: "isRenovatedRender",
          value: function isRenovatedRender() {
            return this.renovatedRenderSupported() && this.option("renovateRender");
          }
        }, {
          key: "_isVirtualModeOn",
          value: function _isVirtualModeOn() {
            return "virtual" === this.option("scrolling.mode");
          }
        }, {
          key: "isVirtualScrolling",
          value: function isVirtualScrolling() {
            return this.isRenovatedRender() && this._isVirtualModeOn();
          }
        }, {
          key: "_initVirtualScrolling",
          value: function _initVirtualScrolling() {
            if (this.virtualScrollingDispatcher) {
              this.virtualScrollingDispatcher.dispose();
              this.virtualScrollingDispatcher = null;
            }
            this.virtualScrollingDispatcher = new _m_virtual_scrolling__WEBPACK_IMPORTED_MODULE_42__.VirtualScrollingDispatcher(this._getVirtualScrollingDispatcherOptions());
            this.virtualScrollingDispatcher.attachScrollableEvents();
            this.renderer = new _m_virtual_scrolling__WEBPACK_IMPORTED_MODULE_42__.VirtualScrollingRenderer(this);
          }
        }, {
          key: "onDataSourceChanged",
          value: function onDataSourceChanged(argument) {}
        }, {
          key: "isGroupedAllDayPanel",
          value: function isGroupedAllDayPanel() {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_21__.calculateIsGroupedAllDayPanel)(this.option("groups"), this.option("groupOrientation"), this.isAllDayPanelVisible);
          }
        }, {
          key: "generateRenderOptions",
          value: function generateRenderOptions(isProvideVirtualCellsWidth) {
            var _a;
            var groupCount = this._getGroupCount();
            var groupOrientation = groupCount > 0 ? this.option("groupOrientation") : this._getDefaultGroupStrategy();
            var options = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
              groupByDate: this.option("groupByDate"),
              startRowIndex: 0,
              startCellIndex: 0,
              groupOrientation: groupOrientation,
              today: null === (_a = this._getToday) || void 0 === _a ? void 0 : _a.call(this),
              groups: this.option("groups"),
              isProvideVirtualCellsWidth: isProvideVirtualCellsWidth,
              isAllDayPanelVisible: this.isAllDayPanelVisible,
              selectedCells: this.cellsSelectionState.getSelectedCells(),
              focusedCell: this.cellsSelectionState.focusedCell,
              headerCellTextFormat: this._getFormat(),
              getDateForHeaderText: function getDateForHeaderText(_, date) {
                return date;
              },
              startDayHour: this.option("startDayHour"),
              endDayHour: this.option("endDayHour"),
              cellDuration: this.getCellDuration(),
              viewType: this.type,
              intervalCount: this.option("intervalCount"),
              hoursInterval: this.option("hoursInterval"),
              currentDate: this.option("currentDate"),
              startDate: this.option("startDate"),
              firstDayOfWeek: this.option("firstDayOfWeek"),
              showCurrentTimeIndicator: this.option("showCurrentTimeIndicator")
            }, this.virtualScrollingDispatcher.getRenderState());
            return options;
          }
        }, {
          key: "renovatedRenderSupported",
          value: function renovatedRenderSupported() {
            return true;
          }
        }, {
          key: "_updateGroupTableHeight",
          value: function _updateGroupTableHeight() {
            if (this._isVerticalGroupedWorkSpace() && (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_12__.hasWindow)()) {
              this._setHorizontalGroupHeaderCellsHeight();
            }
          }
        }, {
          key: "updateHeaderEmptyCellWidth",
          value: function updateHeaderEmptyCellWidth() {
            if ((0, _core_utils_window__WEBPACK_IMPORTED_MODULE_12__.hasWindow)() && this._isRenderHeaderPanelEmptyCell()) {
              var timePanelWidth = this.getTimePanelWidth();
              var groupPanelWidth = this.getGroupTableWidth();
              this._$headerPanelEmptyCell.css("width", timePanelWidth + groupPanelWidth);
            }
          }
        }, {
          key: "_isGroupsSpecified",
          value: function _isGroupsSpecified(resources) {
            var _a;
            return (null === (_a = this.option("groups")) || void 0 === _a ? void 0 : _a.length) && resources;
          }
        }, {
          key: "_getGroupIndexByResourceId",
          value: function _getGroupIndexByResourceId(id) {
            var groups = this.option("groups");
            var resourceTree = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_36__.createResourcesTree)(groups);
            if (!resourceTree.length) {
              return 0;
            }
            return this._getGroupIndexRecursively(resourceTree, id);
          }
        }, {
          key: "_getGroupIndexRecursively",
          value: function _getGroupIndexRecursively(resourceTree, id) {
            var _this138 = this;
            var currentKey = resourceTree[0].name;
            var currentValue = id[currentKey];
            return resourceTree.reduce(function (prevIndex, _ref2) {
              var leafIndex = _ref2.leafIndex,
                value = _ref2.value,
                children = _ref2.children;
              var areValuesEqual = currentValue === value;
              if (areValuesEqual && void 0 !== leafIndex) {
                return leafIndex;
              }
              if (areValuesEqual) {
                return _this138._getGroupIndexRecursively(children, id);
              }
              return prevIndex;
            }, 0);
          }
        }, {
          key: "_getViewStartByOptions",
          value: function _getViewStartByOptions() {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_21__.getViewStartByOptions)(this.option("startDate"), this.option("currentDate"), this._getIntervalDuration(), this.option("startDate") ? this._calculateViewStartDate() : void 0);
          }
        }, {
          key: "_getIntervalDuration",
          value: function _getIntervalDuration() {
            return this.viewDataProvider.getIntervalDuration(this.option("intervalCount"));
          }
        }, {
          key: "_getHeaderDate",
          value: function _getHeaderDate() {
            return this.getStartViewDate();
          }
        }, {
          key: "_calculateViewStartDate",
          value: function _calculateViewStartDate() {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_21__.calculateViewStartDate)(this.option("startDate"));
          }
        }, {
          key: "_firstDayOfWeek",
          value: function _firstDayOfWeek() {
            return this.viewDataProvider.getFirstDayOfWeek(this.option("firstDayOfWeek"));
          }
        }, {
          key: "_attachEvents",
          value: function _attachEvents() {
            this._createSelectionChangedAction();
            this._attachClickEvent();
            this._attachContextMenuEvent();
          }
        }, {
          key: "_attachClickEvent",
          value: function _attachClickEvent() {
            var that = this;
            var pointerDownAction = this._createAction(function (e) {
              that._pointerDownHandler(e.event);
            });
            this._createCellClickAction();
            var cellSelector = ".".concat(DATE_TABLE_CELL_CLASS, ",.").concat(ALL_DAY_TABLE_CELL_CLASS);
            var $element = this.$element();
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].off($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].off($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].on($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME, function (e) {
              if ((0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.isMouseEvent)(e) && e.which > 1) {
                e.preventDefault();
                return;
              }
              pointerDownAction({
                event: e
              });
            });
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].on($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME, cellSelector, function (e) {
              var $cell = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(e.target);
              that._cellClickAction({
                event: e,
                cellElement: (0, _core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)($cell),
                cellData: that.getCellData($cell)
              });
            });
          }
        }, {
          key: "_createCellClickAction",
          value: function _createCellClickAction() {
            var _this139 = this;
            this._cellClickAction = this._createActionByOption("onCellClick", {
              afterExecute: function afterExecute(e) {
                return _this139._cellClickHandler(e.args[0].event);
              }
            });
          }
        }, {
          key: "_createSelectionChangedAction",
          value: function _createSelectionChangedAction() {
            this._selectionChangedAction = this._createActionByOption("onSelectionChanged");
          }
        }, {
          key: "_cellClickHandler",
          value: function _cellClickHandler(argument) {
            if (this._showPopup) {
              delete this._showPopup;
              this._handleSelectedCellsClick();
            }
          }
        }, {
          key: "_pointerDownHandler",
          value: function _pointerDownHandler(e) {
            var $target = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(e.target);
            if (!$target.hasClass(DATE_TABLE_CELL_CLASS) && !$target.hasClass(ALL_DAY_TABLE_CELL_CLASS)) {
              this._isCellClick = false;
              return;
            }
            this._isCellClick = true;
            if ($target.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {
              this._showPopup = true;
            } else {
              var cellCoordinates = this._getCoordinatesByCell($target);
              var isAllDayCell = this._hasAllDayClass($target);
              this._setSelectedCellsStateAndUpdateSelection(isAllDayCell, cellCoordinates, false, $target);
            }
          }
        }, {
          key: "_handleSelectedCellsClick",
          value: function _handleSelectedCellsClick() {
            var selectedCells = this.cellsSelectionState.getSelectedCells();
            var firstCellData = selectedCells[0];
            var lastCellData = selectedCells[selectedCells.length - 1];
            var result = {
              startDate: firstCellData.startDate,
              endDate: lastCellData.endDate
            };
            if (void 0 !== lastCellData.allDay) {
              result.allDay = lastCellData.allDay;
            }
            this.option("onSelectedCellsClick")(result, lastCellData.groups);
          }
        }, {
          key: "_attachContextMenuEvent",
          value: function _attachContextMenuEvent() {
            this._createContextMenuAction();
            var cellSelector = ".".concat(DATE_TABLE_CELL_CLASS, ",.").concat(ALL_DAY_TABLE_CELL_CLASS);
            var $element = this.$element();
            var eventName = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.addNamespace)(_events_contextmenu__WEBPACK_IMPORTED_MODULE_14__.name, this.NAME);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].off($element, eventName, cellSelector);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].on($element, eventName, cellSelector, this._contextMenuHandler.bind(this));
          }
        }, {
          key: "_contextMenuHandler",
          value: function _contextMenuHandler(e) {
            var $cell = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(e.target);
            this._contextMenuAction({
              event: e,
              cellElement: (0, _core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)($cell),
              cellData: this.getCellData($cell)
            });
            this._contextMenuHandled = true;
          }
        }, {
          key: "_createContextMenuAction",
          value: function _createContextMenuAction() {
            this._contextMenuAction = this._createActionByOption("onCellContextMenu");
          }
        }, {
          key: "_getGroupHeaderContainer",
          value: function _getGroupHeaderContainer() {
            if (this._isVerticalGroupedWorkSpace()) {
              return this._$groupTable;
            }
            return this._$thead;
          }
        }, {
          key: "_getDateHeaderContainer",
          value: function _getDateHeaderContainer() {
            return this._$thead;
          }
        }, {
          key: "_getCalculateHeaderCellRepeatCount",
          value: function _getCalculateHeaderCellRepeatCount() {
            return this._groupedStrategy.calculateHeaderCellRepeatCount();
          }
        }, {
          key: "_updateScrollable",
          value: function _updateScrollable() {
            var _a, _b;
            this._dateTableScrollable.update();
            null === (_a = this._headerScrollable) || void 0 === _a ? void 0 : _a.update();
            null === (_b = this._sidebarScrollable) || void 0 === _b ? void 0 : _b.update();
          }
        }, {
          key: "_getTimePanelRowCount",
          value: function _getTimePanelRowCount() {
            return this._getCellCountInDay();
          }
        }, {
          key: "_getCellCountInDay",
          value: function _getCellCountInDay() {
            var hoursInterval = this.option("hoursInterval");
            var startDayHour = this.option("startDayHour");
            var endDayHour = this.option("endDayHour");
            return this.viewDataProvider.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
          }
        }, {
          key: "_getTotalCellCount",
          value: function _getTotalCellCount(groupCount) {
            return this._groupedStrategy.getTotalCellCount(groupCount);
          }
        }, {
          key: "_getTotalRowCount",
          value: function _getTotalRowCount(groupCount, includeAllDayPanelRows) {
            var result = this._groupedStrategy.getTotalRowCount(groupCount);
            if (includeAllDayPanelRows && this.isAllDayPanelVisible) {
              result += groupCount;
            }
            return result;
          }
        }, {
          key: "_getGroupIndex",
          value: function _getGroupIndex(rowIndex, columnIndex) {
            return this._groupedStrategy.getGroupIndex(rowIndex, columnIndex);
          }
        }, {
          key: "calculateEndDate",
          value: function calculateEndDate(startDate) {
            var viewDataGenerator = this.viewDataProvider.viewDataGenerator;
            return viewDataGenerator.calculateEndDate(startDate, viewDataGenerator.getInterval(this.option("hoursInterval")), this.option("endDayHour"));
          }
        }, {
          key: "_getGroupCount",
          value: function _getGroupCount() {
            return (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_36__.getGroupCount)(this.option("groups"));
          }
        }, {
          key: "_attachTablesEvents",
          value: function _attachTablesEvents() {
            var element = this.$element();
            this._attachDragEvents(element);
            this._attachPointerEvents(element);
          }
        }, {
          key: "_detachDragEvents",
          value: function _detachDragEvents(element) {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].off(element, DragEventNames.ENTER);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].off(element, DragEventNames.LEAVE);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].off(element, DragEventNames.DROP);
          }
        }, {
          key: "_attachDragEvents",
          value: function _attachDragEvents(element) {
            var _this140 = this;
            this._detachDragEvents(element);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].on(element, DragEventNames.ENTER, DRAG_AND_DROP_SELECTOR, {
              checkDropTarget: function checkDropTarget(target, event) {
                return !_this140._isOutsideScrollable(target, event);
              }
            }, function (e) {
              if (!_this140.preventDefaultDragging) {
                _this140.removeDroppableCellClass();
                (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(e.target).addClass(DATE_TABLE_DROPPABLE_CELL_CLASS);
              }
            });
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].on(element, DragEventNames.LEAVE, function () {
              if (!_this140.preventDefaultDragging) {
                _this140.removeDroppableCellClass();
              }
            });
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].on(element, DragEventNames.DROP, DRAG_AND_DROP_SELECTOR, function () {
              var _a, _b;
              if (!_this140.dragBehavior) {
                return;
              }
              if (!(null === (_a = _this140.dragBehavior) || void 0 === _a ? void 0 : _a.dragBetweenComponentsPromise)) {
                _this140.dragBehavior.removeDroppableClasses();
                return;
              }
              null === (_b = _this140.dragBehavior.dragBetweenComponentsPromise) || void 0 === _b ? void 0 : _b.then(function () {
                _this140.dragBehavior.removeDroppableClasses();
              });
            });
          }
        }, {
          key: "_attachPointerEvents",
          value: function _attachPointerEvents(element) {
            var _this141 = this;
            var isPointerDown = false;
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].off(element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].off(element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME);
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].on(element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME, DRAG_AND_DROP_SELECTOR, function (e) {
              if ((0, _events_utils_index__WEBPACK_IMPORTED_MODULE_18__.isMouseEvent)(e) && 1 === e.which) {
                isPointerDown = true;
                _this141.$element().addClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);
                _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].off(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__["default"].getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);
                _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].on(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__["default"].getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME, function () {
                  isPointerDown = false;
                  _this141.$element().removeClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);
                });
              }
            });
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].on(element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME, DRAG_AND_DROP_SELECTOR, function (e) {
              if (isPointerDown && _this141._dateTableScrollable && !_this141._dateTableScrollable.option("scrollByContent")) {
                e.preventDefault();
                e.stopPropagation();
                _this141._moveToCell((0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(e.target), true);
              }
            });
          }
        }, {
          key: "_getFormat",
          value: function _getFormat() {
            return _abstract();
          }
        }, {
          key: "getWorkArea",
          value: function getWorkArea() {
            return this._$dateTableContainer;
          }
        }, {
          key: "getScrollable",
          value: function getScrollable() {
            return this._dateTableScrollable;
          }
        }, {
          key: "getScrollableScrollTop",
          value: function getScrollableScrollTop() {
            return this._dateTableScrollable.scrollTop();
          }
        }, {
          key: "getGroupedScrollableScrollTop",
          value: function getGroupedScrollableScrollTop(allDay) {
            return this._groupedStrategy.getScrollableScrollTop(allDay);
          }
        }, {
          key: "getScrollableScrollLeft",
          value: function getScrollableScrollLeft() {
            return this._dateTableScrollable.scrollLeft();
          }
        }, {
          key: "getScrollableOuterWidth",
          value: function getScrollableOuterWidth() {
            return this._dateTableScrollable.scrollWidth();
          }
        }, {
          key: "getScrollableContainer",
          value: function getScrollableContainer() {
            return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(this._dateTableScrollable.container());
          }
        }, {
          key: "getHeaderPanelHeight",
          value: function getHeaderPanelHeight() {
            return this._$headerPanel && (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getOuterHeight)(this._$headerPanel, true);
          }
        }, {
          key: "getTimePanelWidth",
          value: function getTimePanelWidth() {
            return this._$timePanel && (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(this._$timePanel.get(0)).width;
          }
        }, {
          key: "getGroupTableWidth",
          value: function getGroupTableWidth() {
            return this._$groupTable ? (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getOuterWidth)(this._$groupTable) : 0;
          }
        }, {
          key: "getWorkSpaceLeftOffset",
          value: function getWorkSpaceLeftOffset() {
            return this._groupedStrategy.getLeftOffset();
          }
        }, {
          key: "_getCellCoordinatesByIndex",
          value: function _getCellCoordinatesByIndex(index) {
            var columnIndex = Math.floor(index / this._getRowCount());
            var rowIndex = index - this._getRowCount() * columnIndex;
            return {
              columnIndex: columnIndex,
              rowIndex: rowIndex
            };
          }
        }, {
          key: "_getDateGenerationOptions",
          value: function _getDateGenerationOptions() {
            var _a;
            return {
              startDayHour: this.option("startDayHour"),
              endDayHour: this.option("endDayHour"),
              isWorkView: this.viewDataProvider.viewDataGenerator.isWorkView,
              interval: null === (_a = this.viewDataProvider.viewDataGenerator) || void 0 === _a ? void 0 : _a.getInterval(this.option("hoursInterval")),
              startViewDate: this.getStartViewDate(),
              firstDayOfWeek: this._firstDayOfWeek()
            };
          }
        }, {
          key: "_getIntervalBetween",
          value: function _getIntervalBetween(currentDate, allDay) {
            var firstViewDate = this.getStartViewDate();
            var startDayTime = this.option("startDayHour") * HOUR_MS;
            var timeZoneOffset = _core_utils_date__WEBPACK_IMPORTED_MODULE_7__["default"].getTimezonesDifference(firstViewDate, currentDate);
            var fullInterval = currentDate.getTime() - firstViewDate.getTime() - timeZoneOffset;
            var days = this._getDaysOfInterval(fullInterval, startDayTime);
            var weekendsCount = this._getWeekendsCount(days);
            var result = (days - weekendsCount) * DAY_MS;
            if (!allDay) {
              var hiddenInterval = this.viewDataProvider.hiddenInterval;
              var visibleDayDuration = this.getVisibleDayDuration();
              result = fullInterval - days * hiddenInterval - weekendsCount * visibleDayDuration;
            }
            return result;
          }
        }, {
          key: "_getWeekendsCount",
          value: function _getWeekendsCount(argument) {
            return 0;
          }
        }, {
          key: "_getDaysOfInterval",
          value: function _getDaysOfInterval(fullInterval, startDayTime) {
            return Math.floor((fullInterval + startDayTime) / DAY_MS);
          }
        }, {
          key: "_updateIndex",
          value: function _updateIndex(index) {
            return index * this._getRowCount();
          }
        }, {
          key: "_getDroppableCell",
          value: function _getDroppableCell() {
            return this._getDateTables().find(".".concat(DATE_TABLE_DROPPABLE_CELL_CLASS));
          }
        }, {
          key: "_getWorkSpaceWidth",
          value: function _getWorkSpaceWidth() {
            var _this142 = this;
            return this.cache.get("workspaceWidth", function () {
              if (_this142._needCreateCrossScrolling()) {
                return (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(_this142._$dateTable.get(0)).width;
              }
              var totalWidth = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(_this142.$element().get(0)).width;
              var timePanelWidth = _this142.getTimePanelWidth();
              var groupTableWidth = _this142.getGroupTableWidth();
              return totalWidth - timePanelWidth - groupTableWidth;
            });
          }
        }, {
          key: "_getCellByCoordinates",
          value: function _getCellByCoordinates(cellCoordinates, groupIndex, inAllDayRow) {
            var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow);
            return this._dom_getDateCell(indexes);
          }
        }, {
          key: "_dom_getDateCell",
          value: function _dom_getDateCell(position) {
            return this._$dateTable.find("tr:not(.".concat(VIRTUAL_ROW_CLASS, ")")).eq(position.rowIndex).find("td:not(.".concat(_m_classes__WEBPACK_IMPORTED_MODULE_32__.VIRTUAL_CELL_CLASS, ")")).eq(position.columnIndex);
          }
        }, {
          key: "_dom_getAllDayPanelCell",
          value: function _dom_getAllDayPanelCell(columnIndex) {
            return this._$allDayPanel.find("tr").eq(0).find("td").eq(columnIndex);
          }
        }, {
          key: "_getCells",
          value: function _getCells(allDay, direction) {
            var cellClass = allDay ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;
            if ("vertical" === direction) {
              var result = [];
              for (var i = 1;; i++) {
                var cells = this.$element().find("tr .".concat(cellClass, ":nth-child(").concat(i, ")"));
                if (!cells.length) {
                  break;
                }
                result = result.concat(cells.toArray());
              }
              return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(result);
            }
            return this.$element().find(".".concat(cellClass));
          }
        }, {
          key: "_getFirstAndLastDataTableCell",
          value: function _getFirstAndLastDataTableCell() {
            var selector = this.isVirtualScrolling() ? ".".concat(DATE_TABLE_CELL_CLASS, ", .").concat(_m_classes__WEBPACK_IMPORTED_MODULE_32__.VIRTUAL_CELL_CLASS) : ".".concat(DATE_TABLE_CELL_CLASS);
            var $cells = this.$element().find(selector);
            return [$cells[0], $cells[$cells.length - 1]];
          }
        }, {
          key: "_getAllCells",
          value: function _getAllCells(allDay) {
            if (this._isVerticalGroupedWorkSpace()) {
              return this._$dateTable.find("td:not(.".concat(_m_classes__WEBPACK_IMPORTED_MODULE_32__.VIRTUAL_CELL_CLASS, ")"));
            }
            var cellClass = allDay && this.supportAllDayRow() ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;
            return this.$element().find(".".concat(cellClass));
          }
        }, {
          key: "_setHorizontalGroupHeaderCellsHeight",
          value: function _setHorizontalGroupHeaderCellsHeight() {
            var _ref12 = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(this._$dateTable.get(0)),
              height = _ref12.height;
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.setOuterHeight)(this._$groupTable, height);
          }
        }, {
          key: "_getGroupHeaderCells",
          value: function _getGroupHeaderCells() {
            return this.$element().find(".".concat(GROUP_HEADER_CLASS));
          }
        }, {
          key: "_getScrollCoordinates",
          value: function _getScrollCoordinates(hours, minutes, date, groupIndex, allDay) {
            var currentDate = date || new Date(this.option("currentDate"));
            var startDayHour = this.option("startDayHour");
            var endDayHour = this.option("endDayHour");
            if (hours < startDayHour) {
              hours = startDayHour;
            }
            if (hours >= endDayHour) {
              hours = endDayHour - 1;
            }
            currentDate.setHours(hours, minutes, 0, 0);
            var cell = this.viewDataProvider.findGlobalCellPosition(currentDate, groupIndex, allDay);
            var position = cell.position,
              cellData = cell.cellData;
            return this.virtualScrollingDispatcher.calculateCoordinatesByDataAndPosition(cellData, position, currentDate, (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_21__.isDateAndTimeView)(this.type), "vertical" === this.viewDirection);
          }
        }, {
          key: "_isOutsideScrollable",
          value: function _isOutsideScrollable(target, event) {
            var $dateTableScrollableElement = this._dateTableScrollable.$element();
            var scrollableSize = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)($dateTableScrollableElement.get(0));
            var window = (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_12__.getWindow)();
            var isTargetInAllDayPanel = !(0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(target).closest($dateTableScrollableElement).length;
            var isOutsideHorizontalScrollable = event.pageX < scrollableSize.left || event.pageX > scrollableSize.left + scrollableSize.width + (window.scrollX || 0);
            var isOutsideVerticalScrollable = event.pageY < scrollableSize.top || event.pageY > scrollableSize.top + scrollableSize.height + (window.scrollY || 0);
            if (isTargetInAllDayPanel && !isOutsideHorizontalScrollable) {
              return false;
            }
            return isOutsideVerticalScrollable || isOutsideHorizontalScrollable;
          }
        }, {
          key: "setCellDataCache",
          value: function setCellDataCache(cellCoordinates, groupIndex, $cell) {
            var key = JSON.stringify({
              rowIndex: cellCoordinates.rowIndex,
              columnIndex: cellCoordinates.columnIndex,
              groupIndex: groupIndex
            });
            this.cache.set(key, this.getCellData($cell));
          }
        }, {
          key: "setCellDataCacheAlias",
          value: function setCellDataCacheAlias(appointment, geometry) {
            var key = JSON.stringify({
              rowIndex: appointment.rowIndex,
              columnIndex: appointment.columnIndex,
              groupIndex: appointment.groupIndex
            });
            var aliasKey = JSON.stringify({
              top: geometry.top,
              left: geometry.left
            });
            this.cache.set(aliasKey, this.cache.get(key));
          }
        }, {
          key: "supportAllDayRow",
          value: function supportAllDayRow() {
            return true;
          }
        }, {
          key: "keepOriginalHours",
          value: function keepOriginalHours() {
            return false;
          }
        }, {
          key: "_filterCellDataFields",
          value: function _filterCellDataFields(cellData) {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(true, {}, {
              startDate: cellData.startDate,
              endDate: cellData.endDate,
              groups: cellData.groups,
              groupIndex: cellData.groupIndex,
              allDay: cellData.allDay
            });
          }
        }, {
          key: "getCellData",
          value: function getCellData($cell) {
            var cellData = this._getFullCellData($cell) || {};
            return this._filterCellDataFields(cellData);
          }
        }, {
          key: "_getFullCellData",
          value: function _getFullCellData($cell) {
            var currentCell = $cell[0];
            if (currentCell) {
              return this._getDataByCell($cell);
            }
            return;
          }
        }, {
          key: "_getVirtualRowOffset",
          value: function _getVirtualRowOffset() {
            return this.virtualScrollingDispatcher.virtualRowOffset;
          }
        }, {
          key: "_getVirtualCellOffset",
          value: function _getVirtualCellOffset() {
            return this.virtualScrollingDispatcher.virtualCellOffset;
          }
        }, {
          key: "_getDataByCell",
          value: function _getDataByCell($cell) {
            var rowIndex = $cell.parent().index() - this.virtualScrollingDispatcher.topVirtualRowsCount;
            var columnIndex = $cell.index() - this.virtualScrollingDispatcher.leftVirtualCellsCount;
            var viewDataProvider = this.viewDataProvider;
            var isAllDayCell = this._hasAllDayClass($cell);
            var cellData = viewDataProvider.getCellData(rowIndex, columnIndex, isAllDayCell);
            return cellData || void 0;
          }
        }, {
          key: "isGroupedByDate",
          value: function isGroupedByDate() {
            return this.option("groupByDate") && this._isHorizontalGroupedWorkSpace() && this._getGroupCount() > 0;
          }
        }, {
          key: "getCellIndexByDate",
          value: function getCellIndexByDate(date, inAllDayRow) {
            var viewDataGenerator = this.viewDataProvider.viewDataGenerator;
            var timeInterval = inAllDayRow ? 864e5 : viewDataGenerator.getInterval(this.option("hoursInterval"));
            var startViewDateOffset = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_21__.getStartViewDateTimeOffset)(this.getStartViewDate(), this.option("startDayHour"));
            var dateTimeStamp = this._getIntervalBetween(date, inAllDayRow) + startViewDateOffset;
            var index = Math.floor(dateTimeStamp / timeInterval);
            if (inAllDayRow) {
              index = this._updateIndex(index);
            }
            if (index < 0) {
              index = 0;
            }
            return index;
          }
        }, {
          key: "getDroppableCellIndex",
          value: function getDroppableCellIndex() {
            var $droppableCell = this._getDroppableCell();
            var $row = $droppableCell.parent();
            var rowIndex = $row.index();
            return rowIndex * $row.find("td").length + $droppableCell.index();
          }
        }, {
          key: "getDataByDroppableCell",
          value: function getDataByDroppableCell() {
            var cellData = this.getCellData((0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(this._getDroppableCell()));
            var allDay = cellData.allDay;
            var startDate = cellData.startDate;
            var endDate = cellData.endDate;
            return {
              startDate: startDate,
              endDate: endDate,
              allDay: allDay,
              groups: cellData.groups
            };
          }
        }, {
          key: "getDateRange",
          value: function getDateRange() {
            return [this.getStartViewDate(), this.getEndViewDateByEndDayHour()];
          }
        }, {
          key: "getCellMinWidth",
          value: function getCellMinWidth() {
            return DATE_TABLE_MIN_CELL_WIDTH;
          }
        }, {
          key: "getRoundedCellWidth",
          value: function getRoundedCellWidth(groupIndex, startIndex, cellCount) {
            if (groupIndex < 0 || !(0, _core_utils_window__WEBPACK_IMPORTED_MODULE_12__.hasWindow)()) {
              return 0;
            }
            var $row = this.$element().find(".".concat(_m_classes__WEBPACK_IMPORTED_MODULE_32__.DATE_TABLE_ROW_CLASS)).eq(0);
            var width = 0;
            var $cells = $row.find(".".concat(DATE_TABLE_CELL_CLASS));
            var totalCellCount = this._getCellCount() * groupIndex;
            cellCount = cellCount || this._getCellCount();
            if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(startIndex)) {
              startIndex = totalCellCount;
            }
            for (var i = startIndex; i < totalCellCount + cellCount; i++) {
              var element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])($cells).eq(i).get(0);
              var elementWidth = element ? (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(element).width : 0;
              width += elementWidth;
            }
            return width / (totalCellCount + cellCount - startIndex);
          }
        }, {
          key: "getCellWidth",
          value: function getCellWidth() {
            return (0, _helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_38__.getCellWidth)(this.getDOMElementsMetaData());
          }
        }, {
          key: "getCellHeight",
          value: function getCellHeight() {
            return (0, _helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_38__.getCellHeight)(this.getDOMElementsMetaData());
          }
        }, {
          key: "getAllDayHeight",
          value: function getAllDayHeight() {
            return (0, _helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_38__.getAllDayHeight)(this.option("showAllDayPanel"), this._isVerticalGroupedWorkSpace(), this.getDOMElementsMetaData());
          }
        }, {
          key: "getMaxAllowedPosition",
          value: function getMaxAllowedPosition(groupIndex) {
            return (0, _helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_38__.getMaxAllowedPosition)(groupIndex, this.viewDataProvider, this.option("rtlEnabled"), this.getDOMElementsMetaData());
          }
        }, {
          key: "getAllDayOffset",
          value: function getAllDayOffset() {
            return this._groupedStrategy.getAllDayOffset();
          }
        }, {
          key: "getCellIndexByCoordinates",
          value: function getCellIndexByCoordinates(coordinates, allDay) {
            var cellCount = this._getTotalCellCount(this._getGroupCount());
            var cellWidth = this.getCellWidth();
            var cellHeight = allDay ? this.getAllDayHeight() : this.getCellHeight();
            var topIndex = Math.floor(Math.floor(coordinates.top) / Math.floor(cellHeight));
            var leftIndex = coordinates.left / cellWidth;
            leftIndex = Math.floor(leftIndex + CELL_INDEX_CALCULATION_EPSILON);
            if (this._isRTL()) {
              leftIndex = cellCount - leftIndex - 1;
            }
            return cellCount * topIndex + leftIndex;
          }
        }, {
          key: "getStartViewDate",
          value: function getStartViewDate() {
            return this.viewDataProvider.getStartViewDate();
          }
        }, {
          key: "getEndViewDate",
          value: function getEndViewDate() {
            return this.viewDataProvider.getLastCellEndDate();
          }
        }, {
          key: "getEndViewDateByEndDayHour",
          value: function getEndViewDateByEndDayHour() {
            return this.viewDataProvider.getLastViewDateByEndDayHour(this.option("endDayHour"));
          }
        }, {
          key: "getCellDuration",
          value: function getCellDuration() {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_21__.getCellDuration)(this.type, this.option("startDayHour"), this.option("endDayHour"), this.option("hoursInterval"));
          }
        }, {
          key: "getIntervalDuration",
          value: function getIntervalDuration(allDay) {
            return allDay ? toMs("day") : this.getCellDuration();
          }
        }, {
          key: "getVisibleDayDuration",
          value: function getVisibleDayDuration() {
            var startDayHour = this.option("startDayHour");
            var endDayHour = this.option("endDayHour");
            var hoursInterval = this.option("hoursInterval");
            return this.viewDataProvider.getVisibleDayDuration(startDayHour, endDayHour, hoursInterval);
          }
        }, {
          key: "getGroupBounds",
          value: function getGroupBounds(coordinates) {
            var groupBounds = this._groupedStrategy instanceof _m_work_space_grouped_strategy_vertical__WEBPACK_IMPORTED_MODULE_44__["default"] ? this.getGroupBoundsVertical(coordinates.groupIndex) : this.getGroupBoundsHorizontal(coordinates);
            return this._isRTL() ? this.getGroupBoundsRtlCorrection(groupBounds) : groupBounds;
          }
        }, {
          key: "getGroupBoundsVertical",
          value: function getGroupBoundsVertical(groupIndex) {
            var $firstAndLastCells = this._getFirstAndLastDataTableCell();
            return this._groupedStrategy.getGroupBoundsOffset(groupIndex, $firstAndLastCells);
          }
        }, {
          key: "getGroupBoundsHorizontal",
          value: function getGroupBoundsHorizontal(coordinates) {
            var cellCount = this._getCellCount();
            var $cells = this._getCells();
            var cellWidth = this.getCellWidth();
            var groupedDataMap = this.viewDataProvider.groupedDataMap;
            return this._groupedStrategy.getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates, groupedDataMap);
          }
        }, {
          key: "getGroupBoundsRtlCorrection",
          value: function getGroupBoundsRtlCorrection(groupBounds) {
            var cellWidth = this.getCellWidth();
            return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, groupBounds), {
              left: groupBounds.right - 2 * cellWidth,
              right: groupBounds.left + 2 * cellWidth
            });
          }
        }, {
          key: "needRecalculateResizableArea",
          value: function needRecalculateResizableArea() {
            return this._isVerticalGroupedWorkSpace() && 0 !== this.getScrollable().scrollTop();
          }
        }, {
          key: "getCellDataByCoordinates",
          value: function getCellDataByCoordinates(coordinates, allDay) {
            var _this143 = this;
            var key = JSON.stringify({
              top: coordinates.top,
              left: coordinates.left
            });
            return this.cache.get(key, function () {
              var $cells = _this143._getCells(allDay);
              var cellIndex = _this143.getCellIndexByCoordinates(coordinates, allDay);
              var $cell = $cells.eq(cellIndex);
              return _this143.getCellData($cell);
            });
          }
        }, {
          key: "getVisibleBounds",
          value: function getVisibleBounds() {
            var result = {};
            var $scrollable = this.getScrollable().$element();
            var cellHeight = this.getCellHeight();
            var scrolledCellCount = this.getScrollableScrollTop() / cellHeight;
            var totalCellCount = scrolledCellCount + (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getHeight)($scrollable) / cellHeight;
            result.top = {
              hours: Math.floor(scrolledCellCount * this.option("hoursInterval")) + this.option("startDayHour"),
              minutes: scrolledCellCount % 2 ? 30 : 0
            };
            result.bottom = {
              hours: Math.floor(totalCellCount * this.option("hoursInterval")) + this.option("startDayHour"),
              minutes: Math.floor(totalCellCount) % 2 ? 30 : 0
            };
            return result;
          }
        }, {
          key: "updateScrollPosition",
          value: function updateScrollPosition(date, groups) {
            var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;
            var newDate = this.timeZoneCalculator.createDate(date, {
              path: "toGrid"
            });
            var inAllDayRow = allDay && this.isAllDayPanelVisible;
            if (this.needUpdateScrollPosition(newDate, groups, inAllDayRow)) {
              this.scrollTo(newDate, groups, inAllDayRow, false);
            }
          }
        }, {
          key: "needUpdateScrollPosition",
          value: function needUpdateScrollPosition(date, groups, inAllDayRow) {
            var _this144 = this;
            var cells = this._getCellsInViewport(inAllDayRow);
            var groupIndex = this._isGroupsSpecified(groups) ? this._getGroupIndexByResourceId(groups) : 0;
            var time = date.getTime();
            var trimmedTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_7__["default"].trimTime(date).getTime();
            return cells.reduce(function (currentResult, cell) {
              var _this144$getCellData = _this144.getCellData(cell),
                cellStartDate = _this144$getCellData.startDate,
                cellEndDate = _this144$getCellData.endDate,
                cellGroupIndex = _this144$getCellData.groupIndex;
              var cellStartTime = cellStartDate.getTime();
              var cellEndTime = cellEndDate.getTime();
              if ((!inAllDayRow && cellStartTime <= time && time < cellEndTime || inAllDayRow && trimmedTime === cellStartTime) && groupIndex === cellGroupIndex) {
                return false;
              }
              return currentResult;
            }, true);
          }
        }, {
          key: "_getCellsInViewport",
          value: function _getCellsInViewport(inAllDayRow) {
            var $scrollable = this.getScrollable().$element();
            var cellHeight = this.getCellHeight();
            var cellWidth = this.getCellWidth();
            var totalColumnCount = this._getTotalCellCount(this._getGroupCount());
            var scrollableScrollTop = this.getScrollableScrollTop();
            var scrollableScrollLeft = this.getScrollableScrollLeft();
            var fullScrolledRowCount = scrollableScrollTop / cellHeight - this.virtualScrollingDispatcher.topVirtualRowsCount;
            var scrolledRowCount = Math.floor(fullScrolledRowCount);
            if (scrollableScrollTop % cellHeight !== 0) {
              scrolledRowCount += 1;
            }
            var fullScrolledColumnCount = scrollableScrollLeft / cellWidth;
            var scrolledColumnCount = Math.floor(fullScrolledColumnCount);
            if (scrollableScrollLeft % cellWidth !== 0) {
              scrolledColumnCount += 1;
            }
            var rowCount = Math.floor(fullScrolledRowCount + (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getHeight)($scrollable) / cellHeight);
            var columnCount = Math.floor(fullScrolledColumnCount + (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getWidth)($scrollable) / cellWidth);
            var $cells = this._getAllCells(inAllDayRow);
            var result = [];
            $cells.each(function (index) {
              var $cell = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(this);
              var columnIndex = index % totalColumnCount;
              var rowIndex = index / totalColumnCount;
              if (scrolledColumnCount <= columnIndex && columnIndex < columnCount && scrolledRowCount <= rowIndex && rowIndex < rowCount) {
                result.push($cell);
              }
            });
            return result;
          }
        }, {
          key: "scrollToTime",
          value: function scrollToTime(hours, minutes, date) {
            if (!this._isValidScrollDate(date)) {
              return;
            }
            var coordinates = this._getScrollCoordinates(hours, minutes, date);
            var scrollable = this.getScrollable();
            scrollable.scrollBy({
              top: coordinates.top - scrollable.scrollTop(),
              left: 0
            });
          }
        }, {
          key: "scrollTo",
          value: function scrollTo(date, groups) {
            var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;
            var throwWarning = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;
            if (!this._isValidScrollDate(date, throwWarning)) {
              return;
            }
            var groupIndex = this._getGroupCount() && groups ? this._getGroupIndexByResourceId(groups) : 0;
            var isScrollToAllDay = allDay && this.isAllDayPanelVisible;
            var coordinates = this._getScrollCoordinates(date.getHours(), date.getMinutes(), date, groupIndex, isScrollToAllDay);
            var scrollable = this.getScrollable();
            var $scrollable = scrollable.$element();
            var cellWidth = this.getCellWidth();
            var offset = this.option("rtlEnabled") ? cellWidth : 0;
            var scrollableHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getHeight)($scrollable);
            var scrollableWidth = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getWidth)($scrollable);
            var cellHeight = this.getCellHeight();
            var xShift = (scrollableWidth - cellWidth) / 2;
            var yShift = (scrollableHeight - cellHeight) / 2;
            var left = coordinates.left - scrollable.scrollLeft() - xShift - offset;
            var top = coordinates.top - scrollable.scrollTop() - yShift;
            if (isScrollToAllDay && !this._isVerticalGroupedWorkSpace()) {
              top = 0;
            }
            if (this.option("templatesRenderAsynchronously")) {
              setTimeout(function () {
                scrollable.scrollBy({
                  left: left,
                  top: top
                });
              });
            } else {
              scrollable.scrollBy({
                left: left,
                top: top
              });
            }
          }
        }, {
          key: "_isValidScrollDate",
          value: function _isValidScrollDate(date) {
            var throwWarning = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : true;
            var min = this.getStartViewDate();
            var max = this.getEndViewDate();
            if (date < min || date > max) {
              throwWarning && _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_23__["default"].log("W1008", date);
              return false;
            }
            return true;
          }
        }, {
          key: "needApplyCollectorOffset",
          value: function needApplyCollectorOffset() {
            return false;
          }
        }, {
          key: "removeDroppableCellClass",
          value: function removeDroppableCellClass($cellElement) {
            var $cell = $cellElement || this._getDroppableCell();
            null === $cell || void 0 === $cell ? void 0 : $cell.removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS);
          }
        }, {
          key: "_getCoordinatesByCell",
          value: function _getCoordinatesByCell($cell) {
            var columnIndex = $cell.index() - this.virtualScrollingDispatcher.leftVirtualCellsCount;
            var rowIndex = $cell.parent().index();
            var isAllDayCell = this._hasAllDayClass($cell);
            var isVerticalGrouping = this._isVerticalGroupedWorkSpace();
            if (!(isAllDayCell && !isVerticalGrouping)) {
              rowIndex -= this.virtualScrollingDispatcher.topVirtualRowsCount;
            }
            return {
              rowIndex: rowIndex,
              columnIndex: columnIndex
            };
          }
        }, {
          key: "_isShowAllDayPanel",
          value: function _isShowAllDayPanel() {
            return this.option("showAllDayPanel");
          }
        }, {
          key: "_getTimePanelCells",
          value: function _getTimePanelCells() {
            return this.$element().find(".".concat(TIME_PANEL_CELL_CLASS));
          }
        }, {
          key: "_getRDateTableProps",
          value: function _getRDateTableProps() {
            return {
              viewData: this.viewDataProvider.viewData,
              dataCellTemplate: this.option("dataCellTemplate"),
              addDateTableClass: !this.option("crossScrollingEnabled") || this.isVirtualScrolling(),
              groupOrientation: this.option("groupOrientation"),
              addVerticalSizesClassToRows: false
            };
          }
        }, {
          key: "_updateSelectedCellDataOption",
          value: function _updateSelectedCellDataOption(selectedCellData, $nextFocusedCell) {
            var correctedSelectedCellData = selectedCellData.map(function (_ref3) {
              var startDate = _ref3.startDate,
                endDate = _ref3.endDate,
                allDay = _ref3.allDay,
                groupIndex = _ref3.groupIndex,
                groups = _ref3.groups;
              return {
                startDate: startDate,
                endDate: endDate,
                allDay: allDay,
                groupIndex: groupIndex,
                groups: groups
              };
            });
            this.option("selectedCellData", correctedSelectedCellData);
            this._selectionChangedAction({
              selectedCellData: correctedSelectedCellData
            });
          }
        }, {
          key: "_getCellByData",
          value: function _getCellByData(cellData) {
            var startDate = cellData.startDate,
              groupIndex = cellData.groupIndex,
              allDay = cellData.allDay,
              index = cellData.index;
            var position = this.viewDataProvider.findCellPositionInMap({
              startDate: startDate,
              groupIndex: groupIndex,
              isAllDay: allDay,
              index: index
            });
            if (!position) {
              return;
            }
            return allDay && !this._isVerticalGroupedWorkSpace() ? this._dom_getAllDayPanelCell(position.columnIndex) : this._dom_getDateCell(position);
          }
        }, {
          key: "getDOMElementsMetaData",
          value: function getDOMElementsMetaData() {
            var _this145 = this;
            return this.cache.get("cellElementsMeta", function () {
              return {
                dateTableCellsMeta: _this145._getDateTableDOMElementsInfo(),
                allDayPanelCellsMeta: _this145._getAllDayPanelDOMElementsInfo()
              };
            });
          }
        }, {
          key: "_getDateTableDOMElementsInfo",
          value: function _getDateTableDOMElementsInfo() {
            var _this146 = this;
            var dateTableCells = this._getAllCells(false);
            if (!dateTableCells.length || !(0, _core_utils_window__WEBPACK_IMPORTED_MODULE_12__.hasWindow)()) {
              return [[{}]];
            }
            var dateTable = this._getDateTable();
            var dateTableRect = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(dateTable.get(0));
            var columnsCount = this.viewDataProvider.getColumnsCount();
            var result = [];
            dateTableCells.each(function (index, cell) {
              var rowIndex = Math.floor(index / columnsCount);
              if (result.length === rowIndex) {
                result.push([]);
              }
              _this146._addCellMetaData(result[rowIndex], cell, dateTableRect);
            });
            return result;
          }
        }, {
          key: "_getAllDayPanelDOMElementsInfo",
          value: function _getAllDayPanelDOMElementsInfo() {
            var _this147 = this;
            var result = [];
            if (this.isAllDayPanelVisible && !this._isVerticalGroupedWorkSpace() && (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_12__.hasWindow)()) {
              var allDayCells = this._getAllCells(true);
              if (!allDayCells.length) {
                return [{}];
              }
              var allDayAppointmentContainer = this._$allDayPanel;
              var allDayPanelRect = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(allDayAppointmentContainer.get(0));
              allDayCells.each(function (_, cell) {
                _this147._addCellMetaData(result, cell, allDayPanelRect);
              });
            }
            return result;
          }
        }, {
          key: "_addCellMetaData",
          value: function _addCellMetaData(cellMetaDataArray, cell, parentRect) {
            var cellRect = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(cell);
            cellMetaDataArray.push({
              left: cellRect.left - parentRect.left,
              top: cellRect.top - parentRect.top,
              width: cellRect.width,
              height: cellRect.height
            });
          }
        }, {
          key: "_oldRender_getAllDayCellData",
          value: function _oldRender_getAllDayCellData(groupIndex) {
            var _this148 = this;
            return function (cell, rowIndex, columnIndex) {
              var validColumnIndex = columnIndex % _this148._getCellCount();
              var options = _this148._getDateGenerationOptions(true);
              var startDate = _this148.viewDataProvider.viewDataGenerator.getDateByCellIndices(options, rowIndex, validColumnIndex, _this148._getCellCountInDay());
              startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_7__["default"].trimTime(startDate);
              var validGroupIndex = groupIndex || 0;
              if (_this148.isGroupedByDate()) {
                validGroupIndex = Math.floor(columnIndex % _this148._getGroupCount());
              } else if (_this148._isHorizontalGroupedWorkSpace()) {
                validGroupIndex = Math.floor(columnIndex / _this148._getCellCount());
              }
              var data = {
                startDate: startDate,
                endDate: startDate,
                allDay: true,
                groupIndex: validGroupIndex
              };
              var groupsArray = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_36__.getCellGroups)(validGroupIndex, _this148.option("groups"));
              if (groupsArray.length) {
                data.groups = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_36__.getGroupsObjectFromGroupsArray)(groupsArray);
              }
              return {
                key: CELL_DATA,
                value: data
              };
            };
          }
        }, {
          key: "renderRWorkSpace",
          value: function renderRWorkSpace() {
            var _ref13 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : DEFAULT_WORKSPACE_RENDER_OPTIONS.renderComponents,
              header = _ref13.header,
              timePanel = _ref13.timePanel,
              dateTable = _ref13.dateTable,
              allDayPanel = _ref13.allDayPanel;
            if (header) {
              this.renderRHeaderPanel();
            }
            if (timePanel) {
              this.renderRTimeTable();
            }
            if (dateTable) {
              this.renderRDateTable();
            }
            if (allDayPanel) {
              this.renderRAllDayPanel();
            }
          }
        }, {
          key: "renderRDateTable",
          value: function renderRDateTable() {
            _m_utils__WEBPACK_IMPORTED_MODULE_35__.utils.renovation.renderComponent(this, this._$dateTable, _renovation_ui_scheduler_workspaces_base_date_table_layout_j__WEBPACK_IMPORTED_MODULE_26__["default"], "renovatedDateTable", this._getRDateTableProps());
          }
        }, {
          key: "renderRGroupPanel",
          value: function renderRGroupPanel() {
            var _a;
            var options = {
              groups: this.option("groups"),
              groupOrientation: this.option("groupOrientation"),
              groupByDate: this.isGroupedByDate(),
              resourceCellTemplate: this.option("resourceCellTemplate"),
              className: this.verticalGroupTableClass,
              groupPanelData: this.viewDataProvider.getGroupPanelData(this.generateRenderOptions())
            };
            if (null === (_a = this.option("groups")) || void 0 === _a ? void 0 : _a.length) {
              this._attachGroupCountClass();
              _m_utils__WEBPACK_IMPORTED_MODULE_35__.utils.renovation.renderComponent(this, this._getGroupHeaderContainer(), _renovation_ui_scheduler_workspaces_base_group_panel_group_panel_j__WEBPACK_IMPORTED_MODULE_27__["default"], "renovatedGroupPanel", options);
            } else {
              this._detachGroupCountClass();
            }
          }
        }, {
          key: "renderRAllDayPanel",
          value: function renderRAllDayPanel() {
            var _a;
            var visible = this.isAllDayPanelVisible && !this.isGroupedAllDayPanel();
            if (visible) {
              this._toggleAllDayVisibility(false);
              var options = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
                viewData: this.viewDataProvider.viewData,
                dataCellTemplate: this.option("dataCellTemplate"),
                startCellIndex: 0
              }, (null === (_a = this.virtualScrollingDispatcher.horizontalVirtualScrolling) || void 0 === _a ? void 0 : _a.getRenderState()) || {});
              _m_utils__WEBPACK_IMPORTED_MODULE_35__.utils.renovation.renderComponent(this, this._$allDayTable, _renovation_ui_scheduler_workspaces_base_date_table_all_day_panel_table_j__WEBPACK_IMPORTED_MODULE_24__["default"], "renovatedAllDayPanel", options);
              _m_utils__WEBPACK_IMPORTED_MODULE_35__.utils.renovation.renderComponent(this, this._$allDayTitle, _renovation_ui_scheduler_workspaces_base_date_table_all_day_panel_title_j__WEBPACK_IMPORTED_MODULE_25__["default"], "renovatedAllDayPanelTitle", {});
            }
            this._toggleAllDayVisibility(true);
          }
        }, {
          key: "renderRTimeTable",
          value: function renderRTimeTable() {
            _m_utils__WEBPACK_IMPORTED_MODULE_35__.utils.renovation.renderComponent(this, this._$timePanel, _renovation_ui_scheduler_workspaces_base_time_panel_layout_j__WEBPACK_IMPORTED_MODULE_29__["default"], "renovatedTimePanel", {
              timePanelData: this.viewDataProvider.timePanelData,
              timeCellTemplate: this.option("timeCellTemplate"),
              groupOrientation: this.option("groupOrientation")
            });
          }
        }, {
          key: "renderRHeaderPanel",
          value: function renderRHeaderPanel() {
            var isRenderDateHeader = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;
            var _a;
            if (null === (_a = this.option("groups")) || void 0 === _a ? void 0 : _a.length) {
              this._attachGroupCountClass();
            } else {
              this._detachGroupCountClass();
            }
            _m_utils__WEBPACK_IMPORTED_MODULE_35__.utils.renovation.renderComponent(this, this._$thead, this.renovatedHeaderPanelComponent, "renovatedHeaderPanel", {
              dateHeaderData: this.viewDataProvider.dateHeaderData,
              groupPanelData: this.viewDataProvider.getGroupPanelData(this.generateRenderOptions()),
              dateCellTemplate: this.option("dateCellTemplate"),
              timeCellTemplate: this.option("timeCellTemplate"),
              groups: this.option("groups"),
              groupByDate: this.isGroupedByDate(),
              groupOrientation: this.option("groupOrientation"),
              resourceCellTemplate: this.option("resourceCellTemplate"),
              isRenderDateHeader: isRenderDateHeader
            });
          }
        }, {
          key: "initDragBehavior",
          value: function initDragBehavior(scheduler) {
            if (!this.dragBehavior && scheduler) {
              this.dragBehavior = new _m_appointment_drag_behavior__WEBPACK_IMPORTED_MODULE_31__["default"](scheduler);
              var $rootElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(scheduler.element());
              this._createDragBehavior(this.getWorkArea(), $rootElement);
              this._createDragBehavior(this._$allDayPanel, $rootElement);
            }
          }
        }, {
          key: "_createDragBehavior",
          value: function _createDragBehavior($targetElement, $rootElement) {
            var options = {
              getItemData: function getItemData(itemElement, appointments) {
                return appointments._getItemData(itemElement);
              },
              getItemSettings: function getItemSettings($itemElement) {
                return $itemElement.data(_m_constants__WEBPACK_IMPORTED_MODULE_33__.APPOINTMENT_SETTINGS_KEY);
              }
            };
            this._createDragBehaviorBase($targetElement, $rootElement, options);
          }
        }, {
          key: "_createDragBehaviorBase",
          value: function _createDragBehaviorBase(targetElement, rootElement, options) {
            var _this149 = this;
            var container = this.$element().find(".".concat(_m_classes__WEBPACK_IMPORTED_MODULE_32__.FIXED_CONTAINER_CLASS));
            this.dragBehavior.addTo(targetElement, createDragBehaviorConfig(container, rootElement, this.isDefaultDraggingMode, this.dragBehavior, function () {
              if (!_this149.isDefaultDraggingMode) {
                _this149.preventDefaultDragging = false;
              }
            }, function () {
              if (!_this149.isDefaultDraggingMode) {
                _this149.preventDefaultDragging = true;
              }
            }, function () {
              return _this149._getDroppableCell();
            }, function () {
              return _this149._getDateTables();
            }, function () {
              return _this149.removeDroppableCellClass();
            }, function () {
              return _this149.getCellWidth();
            }, options));
          }
        }, {
          key: "_isRenderHeaderPanelEmptyCell",
          value: function _isRenderHeaderPanelEmptyCell() {
            return this._isVerticalGroupedWorkSpace();
          }
        }, {
          key: "_dispose",
          value: function _dispose() {
            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_dispose", this).call(this);
            this.virtualScrollingDispatcher.dispose();
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(_get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_getDefaultOptions", this).call(this), {
              currentDate: new Date(),
              intervalCount: 1,
              startDate: null,
              firstDayOfWeek: void 0,
              startDayHour: 0,
              endDayHour: 24,
              hoursInterval: .5,
              activeStateEnabled: true,
              hoverStateEnabled: true,
              groups: [],
              showAllDayPanel: true,
              allDayExpanded: false,
              onCellClick: null,
              crossScrollingEnabled: false,
              dataCellTemplate: null,
              timeCellTemplate: null,
              resourceCellTemplate: null,
              dateCellTemplate: null,
              allowMultipleCellSelection: true,
              indicatorTime: new Date(),
              indicatorUpdateInterval: 5 * toMs("minute"),
              shadeUntilCurrentTime: true,
              groupOrientation: "horizontal",
              selectedCellData: [],
              groupByDate: false,
              scrolling: {
                mode: "standard"
              },
              allDayPanelMode: "all",
              renovateRender: true,
              height: void 0,
              draggingMode: "outlook",
              onScrollEnd: function onScrollEnd() {},
              getHeaderHeight: void 0,
              onRenderAppointments: function onRenderAppointments() {},
              onShowAllDayPanel: function onShowAllDayPanel() {},
              onSelectedCellsClick: function onSelectedCellsClick() {},
              timeZoneCalculator: void 0,
              schedulerHeight: void 0,
              schedulerWidth: void 0
            });
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(args) {
            switch (args.name) {
              case "startDayHour":
                (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_21__.validateDayHours)(args.value, this.option("endDayHour"));
                this._cleanWorkSpace();
                break;
              case "endDayHour":
                (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_21__.validateDayHours)(this.option("startDayHour"), args.value);
                this._cleanWorkSpace();
                break;
              case "dateCellTemplate":
              case "resourceCellTemplate":
              case "dataCellTemplate":
              case "timeCellTemplate":
              case "hoursInterval":
              case "firstDayOfWeek":
              case "currentDate":
              case "startDate":
                this._cleanWorkSpace();
                break;
              case "groups":
                this._cleanView();
                this._removeAllDayElements();
                this._initGrouping();
                this.repaint();
                break;
              case "groupOrientation":
                this._initGroupedStrategy();
                this._createAllDayPanelElements();
                this._removeAllDayElements();
                this._cleanWorkSpace();
                this._toggleGroupByDateClass();
                break;
              case "showAllDayPanel":
                if (this._isVerticalGroupedWorkSpace()) {
                  this._cleanView();
                  this._removeAllDayElements();
                  this._initGrouping();
                  this.repaint();
                } else if (!this.isRenovatedRender()) {
                  this._toggleAllDayVisibility(true);
                } else {
                  this.renderWorkSpace();
                }
                break;
              case "allDayExpanded":
                this._changeAllDayVisibility();
                this._attachTablesEvents();
                this._updateScrollable();
                break;
              case "onSelectionChanged":
                this._createSelectionChangedAction();
                break;
              case "onCellClick":
                this._createCellClickAction();
                break;
              case "onCellContextMenu":
                this._attachContextMenuEvent();
                break;
              case "intervalCount":
                this._cleanWorkSpace();
                this._toggleWorkSpaceCountClass();
                break;
              case "groupByDate":
                this._cleanWorkSpace();
                this._toggleGroupByDateClass();
                break;
              case "crossScrollingEnabled":
                this._toggleHorizontalScrollClass();
                this._dateTableScrollable.option(this._dateTableScrollableConfig());
                break;
              case "allDayPanelMode":
                this.updateShowAllDayPanel();
                this.updateAppointments();
                break;
              case "width":
                _get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_optionChanged", this).call(this, args);
                this._dimensionChanged();
                break;
              case "timeZoneCalculator":
              case "allowMultipleCellSelection":
              case "selectedCellData":
                break;
              case "renovateRender":
              case "scrolling":
                this.repaint();
                break;
              case "schedulerHeight":
              case "schedulerWidth":
                this.virtualScrollingDispatcher.updateDimensions(true);
                break;
              default:
                _get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_optionChanged", this).call(this, args);
            }
          }
        }, {
          key: "updateShowAllDayPanel",
          value: function updateShowAllDayPanel() {
            var isHiddenAllDayPanel = "hidden" === this.option("allDayPanelMode");
            this.option("onShowAllDayPanel")(!isHiddenAllDayPanel);
          }
        }, {
          key: "_getVirtualScrollingDispatcherOptions",
          value: function _getVirtualScrollingDispatcherOptions() {
            var _this150 = this;
            return {
              getCellHeight: this.getCellHeight.bind(this),
              getCellWidth: this.getCellWidth.bind(this),
              getCellMinWidth: this.getCellMinWidth.bind(this),
              isRTL: this._isRTL.bind(this),
              getSchedulerHeight: function getSchedulerHeight() {
                return _this150.option("schedulerHeight");
              },
              getSchedulerWidth: function getSchedulerWidth() {
                return _this150.option("schedulerWidth");
              },
              getViewHeight: function getViewHeight() {
                return _this150.$element().height ? _this150.$element().height() : (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getHeight)(_this150.$element());
              },
              getViewWidth: function getViewWidth() {
                return _this150.$element().width ? _this150.$element().width() : (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getWidth)(_this150.$element());
              },
              getWindowHeight: function getWindowHeight() {
                return (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_12__.getWindow)().innerHeight;
              },
              getWindowWidth: function getWindowWidth() {
                return (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_12__.getWindow)().innerWidth;
              },
              getScrolling: function getScrolling() {
                return _this150.option("scrolling");
              },
              getScrollableOuterWidth: this.getScrollableOuterWidth.bind(this),
              getScrollable: this.getScrollable.bind(this),
              createAction: this._createAction.bind(this),
              updateRender: this.updateRender.bind(this),
              updateGrid: this.updateGrid.bind(this),
              getGroupCount: this._getGroupCount.bind(this),
              isVerticalGrouping: this._isVerticalGroupedWorkSpace.bind(this),
              getTotalRowCount: this._getTotalRowCount.bind(this),
              getTotalCellCount: this._getTotalCellCount.bind(this)
            };
          }
        }, {
          key: "_cleanWorkSpace",
          value: function _cleanWorkSpace() {
            this._cleanView();
            this._toggleGroupedClass();
            this._toggleWorkSpaceWithOddCells();
            this.virtualScrollingDispatcher.updateDimensions(true);
            this._renderView();
            this.option("crossScrollingEnabled") && this._setTableSizes();
            this.cache.clear();
          }
        }, {
          key: "_init",
          value: function _init() {
            this._scrollSync = {};
            this._viewDataProvider = null;
            this._cellsSelectionState = null;
            this._activeStateUnit = CELL_SELECTOR;
            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_init", this).call(this);
            this._initGrouping();
            this._toggleHorizontalScrollClass();
            this._toggleWorkSpaceCountClass();
            this._toggleGroupByDateClass();
            this._toggleWorkSpaceWithOddCells();
            this.$element().addClass(COMPONENT_CLASS).addClass(this._getElementClass());
          }
        }, {
          key: "_initPositionHelper",
          value: function _initPositionHelper() {
            this.positionHelper = new _helpers_m_position_helper__WEBPACK_IMPORTED_MODULE_38__.PositionHelper({
              key: this.option("key"),
              viewDataProvider: this.viewDataProvider,
              viewStartDayHour: this.option("startDayHour"),
              viewEndDayHour: this.option("endDayHour"),
              cellDuration: this.getCellDuration(),
              groupedStrategy: this._groupedStrategy,
              isGroupedByDate: this.isGroupedByDate(),
              rtlEnabled: this.option("rtlEnabled"),
              startViewDate: this.getStartViewDate(),
              isVerticalGrouping: this._isVerticalGroupedWorkSpace(),
              groupCount: this._getGroupCount(),
              isVirtualScrolling: this.isVirtualScrolling(),
              getDOMMetaDataCallback: this.getDOMElementsMetaData.bind(this)
            });
          }
        }, {
          key: "_initGrouping",
          value: function _initGrouping() {
            this._initGroupedStrategy();
            this._toggleGroupingDirectionClass();
            this._toggleGroupByDateClass();
          }
        }, {
          key: "isVerticalOrientation",
          value: function isVerticalOrientation() {
            var _a;
            var orientation = (null === (_a = this.option("groups")) || void 0 === _a ? void 0 : _a.length) ? this.option("groupOrientation") : this._getDefaultGroupStrategy();
            return "vertical" === orientation;
          }
        }, {
          key: "_initGroupedStrategy",
          value: function _initGroupedStrategy() {
            var Strategy = this.isVerticalOrientation() ? _m_work_space_grouped_strategy_vertical__WEBPACK_IMPORTED_MODULE_44__["default"] : _m_work_space_grouped_strategy_horizontal__WEBPACK_IMPORTED_MODULE_43__["default"];
            this._groupedStrategy = new Strategy(this);
          }
        }, {
          key: "_getDefaultGroupStrategy",
          value: function _getDefaultGroupStrategy() {
            return "horizontal";
          }
        }, {
          key: "_toggleHorizontalScrollClass",
          value: function _toggleHorizontalScrollClass() {
            this.$element().toggleClass(WORKSPACE_WITH_BOTH_SCROLLS_CLASS, this.option("crossScrollingEnabled"));
          }
        }, {
          key: "_toggleGroupByDateClass",
          value: function _toggleGroupByDateClass() {
            this.$element().toggleClass(WORKSPACE_WITH_GROUP_BY_DATE_CLASS, this.isGroupedByDate());
          }
        }, {
          key: "_toggleWorkSpaceCountClass",
          value: function _toggleWorkSpaceCountClass() {
            this.$element().toggleClass(WORKSPACE_WITH_COUNT_CLASS, this._isWorkSpaceWithCount());
          }
        }, {
          key: "_toggleWorkSpaceWithOddCells",
          value: function _toggleWorkSpaceWithOddCells() {
            this.$element().toggleClass(WORKSPACE_WITH_ODD_CELLS_CLASS, this._isWorkspaceWithOddCells());
          }
        }, {
          key: "_toggleGroupingDirectionClass",
          value: function _toggleGroupingDirectionClass() {
            this.$element().toggleClass(VERTICAL_GROUPED_WORKSPACE_CLASS, this._isVerticalGroupedWorkSpace());
          }
        }, {
          key: "_getDateTableCellClass",
          value: function _getDateTableCellClass(rowIndex, columnIndex) {
            var cellClass = "".concat(DATE_TABLE_CELL_CLASS, " ").concat(HORIZONTAL_SIZES_CLASS, " ").concat(VERTICAL_SIZES_CLASS);
            return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, columnIndex + 1, rowIndex, columnIndex);
          }
        }, {
          key: "_getGroupHeaderClass",
          value: function _getGroupHeaderClass(i) {
            var cellClass = GROUP_HEADER_CLASS;
            return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1);
          }
        }, {
          key: "_initWorkSpaceUnits",
          value: function _initWorkSpaceUnits() {
            this._$headerPanelContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass("dx-scheduler-header-panel-container");
            this._$headerTablesContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass("dx-scheduler-header-tables-container");
            this._$headerPanel = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<table>");
            this._$thead = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<thead>").appendTo(this._$headerPanel);
            this._$headerPanelEmptyCell = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass("dx-scheduler-header-panel-empty-cell");
            this._$allDayTable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<table>");
            this._$fixedContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_32__.FIXED_CONTAINER_CLASS);
            this._$allDayContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(ALL_DAY_CONTAINER_CLASS);
            this._$dateTableScrollableContent = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass("dx-scheduler-date-table-scrollable-content");
            this._$sidebarScrollableContent = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass("dx-scheduler-side-bar-scrollable-content");
            this._initAllDayPanelElements();
            if (this.isRenovatedRender()) {
              this.createRAllDayPanelElements();
            } else {
              this._createAllDayPanelElements();
            }
            this._$timePanel = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<table>").addClass(_m_classes__WEBPACK_IMPORTED_MODULE_32__.TIME_PANEL_CLASS);
            this._$dateTable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<table>");
            this._$dateTableContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass("dx-scheduler-date-table-container");
            this._$groupTable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(WORKSPACE_VERTICAL_GROUP_TABLE_CLASS);
          }
        }, {
          key: "_initAllDayPanelElements",
          value: function _initAllDayPanelElements() {
            this._allDayTitles = [];
            this._allDayTables = [];
            this._allDayPanels = [];
          }
        }, {
          key: "_initDateTableScrollable",
          value: function _initDateTableScrollable() {
            var _this151 = this;
            var $dateTableScrollable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS);
            this._dateTableScrollable = this._createComponent($dateTableScrollable, _ui_scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_22__["default"], this._dateTableScrollableConfig());
            this._scrollSync.dateTable = (0, _renovation_ui_common_utils_scroll_getMemoizeScrollTo__WEBPACK_IMPORTED_MODULE_20__.getMemoizeScrollTo)(function () {
              return _this151._dateTableScrollable;
            });
          }
        }, {
          key: "_createWorkSpaceElements",
          value: function _createWorkSpaceElements() {
            if (this.option("crossScrollingEnabled")) {
              this._createWorkSpaceScrollableElements();
            } else {
              this._createWorkSpaceStaticElements();
            }
          }
        }, {
          key: "_createWorkSpaceStaticElements",
          value: function _createWorkSpaceStaticElements() {
            var _a;
            this._$dateTableContainer.append(this._$dateTable);
            if (this._isVerticalGroupedWorkSpace()) {
              this._$dateTableContainer.append(this._$allDayContainer);
              this._$dateTableScrollableContent.append(this._$groupTable, this._$timePanel, this._$dateTableContainer);
              this._dateTableScrollable.$content().append(this._$dateTableScrollableContent);
              this._$headerTablesContainer.append(this._$headerPanel);
            } else {
              this._$dateTableScrollableContent.append(this._$timePanel, this._$dateTableContainer);
              this._dateTableScrollable.$content().append(this._$dateTableScrollableContent);
              this._$headerTablesContainer.append(this._$headerPanel, this._$allDayPanel);
              null === (_a = this._$allDayPanel) || void 0 === _a ? void 0 : _a.append(this._$allDayContainer, this._$allDayTable);
            }
            this._appendHeaderPanelEmptyCellIfNecessary();
            this._$headerPanelContainer.append(this._$headerTablesContainer);
            this.$element().append(this._$fixedContainer, this._$headerPanelContainer, this._dateTableScrollable.$element());
          }
        }, {
          key: "_createWorkSpaceScrollableElements",
          value: function _createWorkSpaceScrollableElements() {
            var _a;
            this.$element().append(this._$fixedContainer);
            this._$flexContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass("dx-scheduler-work-space-flex-container");
            this._createHeaderScrollable();
            this._headerScrollable.$content().append(this._$headerPanel);
            this._appendHeaderPanelEmptyCellIfNecessary();
            this._$headerPanelContainer.append(this._$headerTablesContainer);
            this.$element().append(this._$headerPanelContainer);
            this.$element().append(this._$flexContainer);
            this._createSidebarScrollable();
            this._$flexContainer.append(this._dateTableScrollable.$element());
            this._$dateTableContainer.append(this._$dateTable);
            this._$dateTableScrollableContent.append(this._$dateTableContainer);
            this._dateTableScrollable.$content().append(this._$dateTableScrollableContent);
            if (this._isVerticalGroupedWorkSpace()) {
              this._$dateTableContainer.append(this._$allDayContainer);
              this._$sidebarScrollableContent.append(this._$groupTable, this._$timePanel);
            } else {
              this._headerScrollable.$content().append(this._$allDayPanel);
              null === (_a = this._$allDayPanel) || void 0 === _a ? void 0 : _a.append(this._$allDayContainer, this._$allDayTable);
              this._$sidebarScrollableContent.append(this._$timePanel);
            }
            this._sidebarScrollable.$content().append(this._$sidebarScrollableContent);
          }
        }, {
          key: "_appendHeaderPanelEmptyCellIfNecessary",
          value: function _appendHeaderPanelEmptyCellIfNecessary() {
            this._isRenderHeaderPanelEmptyCell() && this._$headerPanelContainer.append(this._$headerPanelEmptyCell);
          }
        }, {
          key: "_createHeaderScrollable",
          value: function _createHeaderScrollable() {
            var _this152 = this;
            var $headerScrollable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(SCHEDULER_HEADER_SCROLLABLE_CLASS).appendTo(this._$headerTablesContainer);
            this._headerScrollable = this._createComponent($headerScrollable, _ui_scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_22__["default"], this._headerScrollableConfig());
            this._scrollSync.header = (0, _renovation_ui_common_utils_scroll_getMemoizeScrollTo__WEBPACK_IMPORTED_MODULE_20__.getMemoizeScrollTo)(function () {
              return _this152._headerScrollable;
            });
          }
        }, {
          key: "_createSidebarScrollable",
          value: function _createSidebarScrollable() {
            var _this153 = this;
            var $timePanelScrollable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(SCHEDULER_SIDEBAR_SCROLLABLE_CLASS).appendTo(this._$flexContainer);
            this._sidebarScrollable = this._createComponent($timePanelScrollable, _ui_scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_22__["default"], {
              useKeyboard: false,
              showScrollbar: "never",
              direction: "vertical",
              useNative: false,
              updateManually: true,
              bounceEnabled: false,
              onScroll: function onScroll(event) {
                _this153._scrollSync.dateTable({
                  top: event.scrollOffset.top
                });
              }
            });
            this._scrollSync.sidebar = (0, _renovation_ui_common_utils_scroll_getMemoizeScrollTo__WEBPACK_IMPORTED_MODULE_20__.getMemoizeScrollTo)(function () {
              return _this153._sidebarScrollable;
            });
          }
        }, {
          key: "_attachTableClasses",
          value: function _attachTableClasses() {
            this._addTableClass(this._$dateTable, _m_classes__WEBPACK_IMPORTED_MODULE_32__.DATE_TABLE_CLASS);
            if (this._isVerticalGroupedWorkSpace()) {
              var groupCount = this._getGroupCount();
              for (var i = 0; i < groupCount; i++) {
                this._addTableClass(this._allDayTables[i], ALL_DAY_TABLE_CLASS);
              }
            } else if (!this.isRenovatedRender()) {
              this._addTableClass(this._$allDayTable, ALL_DAY_TABLE_CLASS);
            }
          }
        }, {
          key: "_attachHeaderTableClasses",
          value: function _attachHeaderTableClasses() {
            this._addTableClass(this._$headerPanel, HEADER_PANEL_CLASS);
          }
        }, {
          key: "_addTableClass",
          value: function _addTableClass($el, className) {
            $el && !$el.hasClass(className) && $el.addClass(className);
          }
        }, {
          key: "_initMarkup",
          value: function _initMarkup() {
            this.cache.clear();
            this._initWorkSpaceUnits();
            this._initVirtualScrolling();
            this._initDateTableScrollable();
            this._createWorkSpaceElements();
            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_initMarkup", this).call(this);
            if (!this.option("crossScrollingEnabled")) {
              this._attachTableClasses();
              this._attachHeaderTableClasses();
            }
            this._toggleGroupedClass();
            this._renderView();
            this._attachEvents();
          }
        }, {
          key: "_render",
          value: function _render() {
            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_render", this).call(this);
            this._renderDateTimeIndication();
            this._setIndicationUpdateInterval();
          }
        }, {
          key: "_toggleGroupedClass",
          value: function _toggleGroupedClass() {
            this.$element().toggleClass(GROUPED_WORKSPACE_CLASS, this._getGroupCount() > 0);
          }
        }, {
          key: "_renderView",
          value: function _renderView() {
            if (this.isRenovatedRender()) {
              if (this._isVerticalGroupedWorkSpace()) {
                this.renderRGroupPanel();
              }
            } else {
              this._applyCellTemplates(this._renderGroupHeader());
            }
            this.renderWorkSpace();
            if (this.isRenovatedRender()) {
              this.virtualScrollingDispatcher.updateDimensions();
            }
            this._updateGroupTableHeight();
            this.updateHeaderEmptyCellWidth();
            this._shader = new _shaders_m_current_time_shader_vertical__WEBPACK_IMPORTED_MODULE_37__["default"](this);
          }
        }, {
          key: "updateCellsSelection",
          value: function updateCellsSelection() {
            var renderOptions = this.generateRenderOptions();
            this.viewDataProvider.updateViewData(renderOptions);
            this.renderRWorkSpace({
              timePanel: true,
              dateTable: true,
              allDayPanel: true
            });
          }
        }, {
          key: "_renderDateTimeIndication",
          value: function _renderDateTimeIndication() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_5__.noop)();
          }
        }, {
          key: "renderCurrentDateTimeLineAndShader",
          value: function renderCurrentDateTimeLineAndShader() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_5__.noop)();
          }
        }, {
          key: "renderCurrentDateTimeIndication",
          value: function renderCurrentDateTimeIndication() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_5__.noop)();
          }
        }, {
          key: "_setIndicationUpdateInterval",
          value: function _setIndicationUpdateInterval() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_5__.noop)();
          }
        }, {
          key: "_detachGroupCountClass",
          value: function _detachGroupCountClass() {
            var _this154 = this;
            _toConsumableArray(_m_classes__WEBPACK_IMPORTED_MODULE_32__.VERTICAL_GROUP_COUNT_CLASSES).forEach(function (className) {
              _this154.$element().removeClass(className);
            });
          }
        }, {
          key: "_attachGroupCountClass",
          value: function _attachGroupCountClass() {
            var className = this._groupedStrategy.getGroupCountClass(this.option("groups"));
            this.$element().addClass(className);
          }
        }, {
          key: "_getDateHeaderTemplate",
          value: function _getDateHeaderTemplate() {
            return this.option("dateCellTemplate");
          }
        }, {
          key: "_toggleAllDayVisibility",
          value: function _toggleAllDayVisibility(isUpdateScrollable) {
            var showAllDayPanel = this._isShowAllDayPanel();
            this.$element().toggleClass(WORKSPACE_WITH_ALL_DAY_CLASS, showAllDayPanel);
            this._changeAllDayVisibility();
            isUpdateScrollable && this._updateScrollable();
          }
        }, {
          key: "_changeAllDayVisibility",
          value: function _changeAllDayVisibility() {
            this.cache.clear();
            this.$element().toggleClass(WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS, !this.option("allDayExpanded") && this._isShowAllDayPanel());
          }
        }, {
          key: "_getDateTables",
          value: function _getDateTables() {
            return this._$dateTable.add(this._$allDayTable);
          }
        }, {
          key: "_getDateTable",
          value: function _getDateTable() {
            return this._$dateTable;
          }
        }, {
          key: "_removeAllDayElements",
          value: function _removeAllDayElements() {
            this._$allDayTable && this._$allDayTable.remove();
            this._$allDayTitle && this._$allDayTitle.remove();
          }
        }, {
          key: "_cleanView",
          value: function _cleanView() {
            var _a, _b, _c;
            this.cache.clear();
            this._cleanTableWidths();
            this.cellsSelectionState.clearSelectedAndFocusedCells();
            if (!this.isRenovatedRender()) {
              this._$thead.empty();
              this._$dateTable.empty();
              this._$timePanel.empty();
              this._$groupTable.empty();
              null === (_a = this._$allDayTable) || void 0 === _a ? void 0 : _a.empty();
              null === (_b = this._$sidebarTable) || void 0 === _b ? void 0 : _b.empty();
            }
            null === (_c = this._shader) || void 0 === _c ? void 0 : _c.clean();
            delete this._interval;
          }
        }, {
          key: "_clean",
          value: function _clean() {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_15__["default"].off(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__["default"].getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);
            this._disposeRenovatedComponents();
            _get(_getPrototypeOf(SchedulerWorkSpace.prototype), "_clean", this).call(this);
          }
        }, {
          key: "_cleanTableWidths",
          value: function _cleanTableWidths() {
            this._$headerPanel.css("width", "");
            this._$dateTable.css("width", "");
            this._$allDayTable && this._$allDayTable.css("width", "");
          }
        }, {
          key: "_disposeRenovatedComponents",
          value: function _disposeRenovatedComponents() {
            var _a, _b, _c, _d, _e;
            null === (_a = this.renovatedAllDayPanel) || void 0 === _a ? void 0 : _a.dispose();
            this.renovatedAllDayPanel = void 0;
            null === (_b = this.renovatedDateTable) || void 0 === _b ? void 0 : _b.dispose();
            this.renovatedDateTable = void 0;
            null === (_c = this.renovatedTimePanel) || void 0 === _c ? void 0 : _c.dispose();
            this.renovatedTimePanel = void 0;
            null === (_d = this.renovatedGroupPanel) || void 0 === _d ? void 0 : _d.dispose();
            this.renovatedGroupPanel = void 0;
            null === (_e = this.renovatedHeaderPanel) || void 0 === _e ? void 0 : _e.dispose();
            this.renovatedHeaderPanel = void 0;
          }
        }, {
          key: "getGroupedStrategy",
          value: function getGroupedStrategy() {
            return this._groupedStrategy;
          }
        }, {
          key: "getFixedContainer",
          value: function getFixedContainer() {
            return this._$fixedContainer;
          }
        }, {
          key: "getAllDayContainer",
          value: function getAllDayContainer() {
            return this._$allDayContainer;
          }
        }, {
          key: "updateRender",
          value: function updateRender() {
            this.renderer.updateRender();
          }
        }, {
          key: "updateGrid",
          value: function updateGrid() {
            this.renderer._renderGrid();
          }
        }, {
          key: "updateAppointments",
          value: function updateAppointments() {
            var _a;
            this.option("onRenderAppointments")();
            null === (_a = this.dragBehavior) || void 0 === _a ? void 0 : _a.updateDragSource();
          }
        }, {
          key: "_createAllDayPanelElements",
          value: function _createAllDayPanelElements() {
            var groupCount = this._getGroupCount();
            if (this._isVerticalGroupedWorkSpace() && 0 !== groupCount) {
              for (var i = 0; i < groupCount; i++) {
                var $allDayTitle = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(ALL_DAY_TITLE_CLASS).text(_localization_message__WEBPACK_IMPORTED_MODULE_19__["default"].format("dxScheduler-allDay"));
                this._allDayTitles.push($allDayTitle);
                this._$allDayTable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<table>");
                this._allDayTables.push(this._$allDayTable);
                this._$allDayPanel = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);
                this._allDayPanels.push(this._$allDayPanel);
              }
            } else {
              this._$allDayTitle = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(ALL_DAY_TITLE_CLASS).text(_localization_message__WEBPACK_IMPORTED_MODULE_19__["default"].format("dxScheduler-allDay")).appendTo(this.$element());
              this._$allDayTable = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<table>");
              this._$allDayPanel = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<div>").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);
            }
          }
        }, {
          key: "renderWorkSpace",
          value: function renderWorkSpace() {
            var _ref14 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : DEFAULT_WORKSPACE_RENDER_OPTIONS,
              generateNewData = _ref14.generateNewData,
              renderComponents = _ref14.renderComponents;
            this.cache.clear();
            this.viewDataProvider.update(this.generateRenderOptions(), generateNewData);
            if (this.isRenovatedRender()) {
              this.renderRWorkSpace(renderComponents);
            } else {
              this._renderDateHeader();
              this._renderTimePanel();
              this._renderGroupAllDayPanel();
              this._renderDateTable();
              this._renderAllDayPanel();
            }
            this._initPositionHelper();
          }
        }, {
          key: "_renderGroupHeader",
          value: function _renderGroupHeader() {
            var $container = this._getGroupHeaderContainer();
            var groupCount = this._getGroupCount();
            var cellTemplates = [];
            if (groupCount) {
              var groupRows = this._makeGroupRows(this.option("groups"), this.option("groupByDate"));
              this._attachGroupCountClass();
              $container.append(groupRows.elements);
              cellTemplates = groupRows.cellTemplates;
            } else {
              this._detachGroupCountClass();
            }
            return cellTemplates;
          }
        }, {
          key: "_applyCellTemplates",
          value: function _applyCellTemplates(templates) {
            null === templates || void 0 === templates ? void 0 : templates.forEach(function (template) {
              template();
            });
          }
        }, {
          key: "_makeGroupRows",
          value: function _makeGroupRows(groups, groupByDate) {
            var tableCreatorStrategy = this._isVerticalGroupedWorkSpace() ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;
            return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {
              groupHeaderRowClass: _m_classes__WEBPACK_IMPORTED_MODULE_32__.GROUP_ROW_CLASS,
              groupRowClass: _m_classes__WEBPACK_IMPORTED_MODULE_32__.GROUP_ROW_CLASS,
              groupHeaderClass: this._getGroupHeaderClass.bind(this),
              groupHeaderContentClass: _m_classes__WEBPACK_IMPORTED_MODULE_32__.GROUP_HEADER_CONTENT_CLASS
            }, this._getCellCount() || 1, this.option("resourceCellTemplate"), this._getGroupCount(), groupByDate);
          }
        }, {
          key: "_renderDateHeader",
          value: function _renderDateHeader() {
            var container = this._getDateHeaderContainer();
            var $headerRow = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<tr>").addClass(HEADER_ROW_CLASS);
            var count = this._getCellCount();
            var cellTemplate = this._getDateHeaderTemplate();
            var repeatCount = this._getCalculateHeaderCellRepeatCount();
            var templateCallbacks = [];
            var groupByDate = this.isGroupedByDate();
            if (!groupByDate) {
              for (var rowIndex = 0; rowIndex < repeatCount; rowIndex++) {
                for (var columnIndex = 0; columnIndex < count; columnIndex++) {
                  var templateIndex = rowIndex * count + columnIndex;
                  this._renderDateHeaderTemplate($headerRow, columnIndex, templateIndex, cellTemplate, templateCallbacks);
                }
              }
              container.append($headerRow);
            } else {
              var colSpan = groupByDate ? this._getGroupCount() : 1;
              for (var _columnIndex = 0; _columnIndex < count; _columnIndex++) {
                var _templateIndex = _columnIndex * repeatCount;
                var cellElement = this._renderDateHeaderTemplate($headerRow, _columnIndex, _templateIndex, cellTemplate, templateCallbacks);
                cellElement.attr("colSpan", colSpan);
              }
              container.prepend($headerRow);
            }
            this._applyCellTemplates(templateCallbacks);
            return $headerRow;
          }
        }, {
          key: "_renderDateHeaderTemplate",
          value: function _renderDateHeaderTemplate(container, panelCellIndex, templateIndex, cellTemplate, templateCallbacks) {
            var validTemplateIndex = this.isGroupedByDate() ? Math.floor(templateIndex / this._getGroupCount()) : templateIndex;
            var completeDateHeaderMap = this.viewDataProvider.completeDateHeaderMap;
            var _completeDateHeaderMa = completeDateHeaderMap[completeDateHeaderMap.length - 1][validTemplateIndex],
              text = _completeDateHeaderMa.text,
              date = _completeDateHeaderMa.startDate;
            var $cell = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])("<th>").addClass(this._getHeaderPanelCellClass(panelCellIndex)).attr("title", text);
            if (null === cellTemplate || void 0 === cellTemplate ? void 0 : cellTemplate.render) {
              templateCallbacks.push(cellTemplate.render.bind(cellTemplate, {
                model: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
                  text: text,
                  date: date
                }, this._getGroupsForDateHeaderTemplate(templateIndex)),
                index: templateIndex,
                container: (0, _core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)($cell)
              }));
            } else {
              $cell.text(text);
            }
            container.append($cell);
            return $cell;
          }
        }, {
          key: "_getGroupsForDateHeaderTemplate",
          value: function _getGroupsForDateHeaderTemplate(templateIndex) {
            var indexMultiplier = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
            var groupIndex;
            var groups;
            if (this._isHorizontalGroupedWorkSpace() && !this.isGroupedByDate()) {
              groupIndex = this._getGroupIndex(0, templateIndex * indexMultiplier);
              var groupsArray = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_36__.getCellGroups)(groupIndex, this.option("groups"));
              groups = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_36__.getGroupsObjectFromGroupsArray)(groupsArray);
            }
            return {
              groups: groups,
              groupIndex: groupIndex
            };
          }
        }, {
          key: "_getHeaderPanelCellClass",
          value: function _getHeaderPanelCellClass(i) {
            var cellClass = "".concat(HEADER_PANEL_CELL_CLASS, " ").concat(HORIZONTAL_SIZES_CLASS);
            return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1, void 0, void 0, this.isGroupedByDate());
          }
        }, {
          key: "_renderAllDayPanel",
          value: function _renderAllDayPanel(index) {
            var cellCount = this._getCellCount();
            if (!this._isVerticalGroupedWorkSpace()) {
              cellCount *= this._getGroupCount() || 1;
            }
            var cellTemplates = this._renderTableBody({
              container: this._allDayPanels.length ? (0, _core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)(this._allDayTables[index]) : (0, _core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)(this._$allDayTable),
              rowCount: 1,
              cellCount: cellCount,
              cellClass: this._getAllDayPanelCellClass.bind(this),
              rowClass: ALL_DAY_TABLE_ROW_CLASS,
              cellTemplate: this.option("dataCellTemplate"),
              getCellData: this._oldRender_getAllDayCellData(index),
              groupIndex: index
            }, true);
            this._toggleAllDayVisibility(true);
            this._applyCellTemplates(cellTemplates);
          }
        }, {
          key: "_renderGroupAllDayPanel",
          value: function _renderGroupAllDayPanel() {
            if (this._isVerticalGroupedWorkSpace()) {
              var groupCount = this._getGroupCount();
              for (var i = 0; i < groupCount; i++) {
                this._renderAllDayPanel(i);
              }
            }
          }
        }, {
          key: "_getAllDayPanelCellClass",
          value: function _getAllDayPanelCellClass(i, j) {
            var cellClass = "".concat(ALL_DAY_TABLE_CELL_CLASS, " ").concat(HORIZONTAL_SIZES_CLASS);
            return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1);
          }
        }, {
          key: "_renderTimePanel",
          value: function _renderTimePanel() {
            var _this155 = this;
            var repeatCount = this._groupedStrategy.calculateTimeCellRepeatCount();
            var getData = function getData(rowIndex, field) {
              var allDayPanelsCount = 0;
              if (_this155.isAllDayPanelVisible) {
                allDayPanelsCount = 1;
              }
              if (_this155.isGroupedAllDayPanel()) {
                allDayPanelsCount = Math.ceil((rowIndex + 1) / _this155._getRowCount());
              }
              var validRowIndex = rowIndex + allDayPanelsCount;
              return _this155.viewDataProvider.completeTimePanelMap[validRowIndex][field];
            };
            this._renderTableBody({
              container: (0, _core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)(this._$timePanel),
              rowCount: this._getTimePanelRowCount() * repeatCount,
              cellCount: 1,
              cellClass: this._getTimeCellClass.bind(this),
              rowClass: TIME_PANEL_ROW_CLASS,
              cellTemplate: this.option("timeCellTemplate"),
              getCellText: function getCellText(rowIndex) {
                return getData(rowIndex, "text");
              },
              getCellDate: function getCellDate(rowIndex) {
                return getData(rowIndex, "startDate");
              },
              groupCount: this._getGroupCount(),
              allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0,
              getTemplateData: function (rowIndex) {
                if (!_this155._isVerticalGroupedWorkSpace()) {
                  return {};
                }
                var groupIndex = _this155._getGroupIndex(rowIndex, 0);
                var groupsArray = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_36__.getCellGroups)(groupIndex, _this155.option("groups"));
                var groups = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_36__.getGroupsObjectFromGroupsArray)(groupsArray);
                return {
                  groupIndex: groupIndex,
                  groups: groups
                };
              }.bind(this)
            });
          }
        }, {
          key: "_getTimeCellClass",
          value: function _getTimeCellClass(i) {
            var cellClass = "".concat(TIME_PANEL_CELL_CLASS, " ").concat(VERTICAL_SIZES_CLASS);
            return this._isVerticalGroupedWorkSpace() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i, i) : cellClass;
          }
        }, {
          key: "_renderDateTable",
          value: function _renderDateTable() {
            var _this156 = this;
            var groupCount = this._getGroupCount();
            this._renderTableBody({
              container: (0, _core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)(this._$dateTable),
              rowCount: this._getTotalRowCount(groupCount),
              cellCount: this._getTotalCellCount(groupCount),
              cellClass: this._getDateTableCellClass.bind(this),
              rowClass: _m_classes__WEBPACK_IMPORTED_MODULE_32__.DATE_TABLE_ROW_CLASS,
              cellTemplate: this.option("dataCellTemplate"),
              getCellData: function getCellData(_, rowIndex, columnIndex) {
                var isGroupedAllDayPanel = _this156.isGroupedAllDayPanel();
                var validRowIndex = rowIndex;
                if (isGroupedAllDayPanel) {
                  var rowCount = _this156._getRowCount();
                  var allDayPanelsCount = Math.ceil(rowIndex / rowCount);
                  validRowIndex += allDayPanelsCount;
                }
                var cellData = _this156.viewDataProvider.viewDataMap.dateTableMap[validRowIndex][columnIndex].cellData;
                return {
                  value: _this156._filterCellDataFields(cellData),
                  fullValue: cellData,
                  key: CELL_DATA
                };
              },
              allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayPanels : void 0,
              groupCount: groupCount,
              groupByDate: this.option("groupByDate")
            });
          }
        }, {
          key: "_insertAllDayRowsIntoDateTable",
          value: function _insertAllDayRowsIntoDateTable() {
            return this._groupedStrategy.insertAllDayRowsIntoDateTable();
          }
        }, {
          key: "_renderTableBody",
          value: function _renderTableBody(options, delayCellTemplateRendering) {
            var result = [];
            if (!delayCellTemplateRendering) {
              this._applyCellTemplates(tableCreator.makeTable(options));
            } else {
              result = tableCreator.makeTable(options);
            }
            return result;
          }
        }]);
        return SchedulerWorkSpace;
      }(_base_m_widget_observer__WEBPACK_IMPORTED_MODULE_30__["default"]);
      var createDragBehaviorConfig = function createDragBehaviorConfig(container, rootElement, isDefaultDraggingMode, dragBehavior, enableDefaultDragging, disableDefaultDragging, getDroppableCell, getDateTables, removeDroppableCellClass, getCellWidth, options) {
        var state = {
          dragElement: void 0,
          itemData: void 0
        };
        var isItemDisabled = function isItemDisabled() {
          var itemData = state.itemData;
          if (itemData) {
            var getter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_6__.compileGetter)("disabled");
            return getter(itemData);
          }
          return true;
        };
        var cursorOffset = options.isSetCursorOffset ? function () {
          var $dragElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(state.dragElement);
          return {
            x: (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getWidth)($dragElement) / 2,
            y: (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getHeight)($dragElement) / 2
          };
        } : void 0;
        return {
          container: container,
          dragTemplate: function dragTemplate() {
            return state.dragElement;
          },
          onDragStart: function onDragStart(e) {
            if (!isDefaultDraggingMode) {
              disableDefaultDragging();
            }
            var canceled = e.cancel;
            var event = e.event;
            var $itemElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(e.itemElement);
            var appointments = e.component._appointments;
            state.itemData = options.getItemData(e.itemElement, appointments);
            var settings = options.getItemSettings($itemElement, e);
            var initialPosition = options.initialPosition;
            if (!isItemDisabled()) {
              event.data = event.data || {};
              if (!canceled) {
                if (!settings.isCompact) {
                  dragBehavior.updateDragSource(state.itemData, settings);
                }
                state.dragElement = function (itemData, settings, appointments) {
                  var appointmentIndex = appointments.option("items").length;
                  settings.isCompact = false;
                  settings.virtual = false;
                  var items = appointments._renderItem(appointmentIndex, {
                    itemData: itemData,
                    settings: [settings]
                  });
                  return items[0];
                }(state.itemData, settings, appointments);
                event.data.itemElement = state.dragElement;
                event.data.initialPosition = null !== initialPosition && void 0 !== initialPosition ? initialPosition : (0, _animation_translator__WEBPACK_IMPORTED_MODULE_1__.locate)((0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(state.dragElement));
                event.data.itemData = state.itemData;
                event.data.itemSettings = settings;
                dragBehavior.onDragStart(event.data);
                (0, _animation_translator__WEBPACK_IMPORTED_MODULE_1__.resetPosition)((0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(state.dragElement));
              }
            }
          },
          onDragMove: function onDragMove() {
            if (isDefaultDraggingMode) {
              return;
            }
            var elements = function () {
              var appointmentWidth = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getWidth)(state.dragElement);
              var cellWidth = getCellWidth();
              var isWideAppointment = appointmentWidth > cellWidth;
              var isNarrowAppointment = appointmentWidth <= DRAGGING_MOUSE_FAULT;
              var dragElementContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(state.dragElement).parent();
              var boundingRect = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(dragElementContainer.get(0));
              var newX = boundingRect.left;
              var newY = boundingRect.top;
              if (isWideAppointment) {
                return _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__["default"].elementsFromPoint(newX + DRAGGING_MOUSE_FAULT, newY + DRAGGING_MOUSE_FAULT);
              }
              if (isNarrowAppointment) {
                return _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__["default"].elementsFromPoint(newX, newY);
              }
              return _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__["default"].elementsFromPoint(newX + appointmentWidth / 2, newY + DRAGGING_MOUSE_FAULT);
            }();
            var isMoveUnderControl = !!elements.find(function (el) {
              return el === rootElement.get(0);
            });
            var dateTables = getDateTables();
            var droppableCell = elements.find(function (el) {
              var classList = el.classList;
              var isCurrentSchedulerElement = 1 === dateTables.find(el).length;
              return isCurrentSchedulerElement && (classList.contains(DATE_TABLE_CELL_CLASS) || classList.contains(ALL_DAY_TABLE_CELL_CLASS));
            });
            if (droppableCell) {
              if (!getDroppableCell().is(droppableCell)) {
                removeDroppableCellClass();
              }
              (0, _core_renderer__WEBPACK_IMPORTED_MODULE_4__["default"])(droppableCell).addClass(DATE_TABLE_DROPPABLE_CELL_CLASS);
            } else if (!isMoveUnderControl) {
              removeDroppableCellClass();
            }
          },
          onDragEnd: function onDragEnd(e) {
            var _a;
            if (!isDefaultDraggingMode) {
              enableDefaultDragging();
            }
            if (!isItemDisabled()) {
              dragBehavior.onDragEnd(e);
            }
            null === (_a = state.dragElement) || void 0 === _a ? void 0 : _a.remove();
            removeDroppableCellClass();
          },
          cursorOffset: cursorOffset,
          filter: options.filter
        };
      };
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerWorkSpace;

      /***/
    }),
    /***/90890: (
    /*!*****************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_work_space_day.js ***!
      \*****************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_work_space_vertical__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./m_work_space_vertical */32106);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_work_space_day.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DAY_CLASS = "dx-scheduler-work-space-day";
      var SchedulerWorkSpaceDay = /*#__PURE__*/function (_m_work_space_vertica) {
        _inherits(SchedulerWorkSpaceDay, _m_work_space_vertica);
        function SchedulerWorkSpaceDay() {
          _classCallCheck(this, SchedulerWorkSpaceDay);
          return _callSuper(this, SchedulerWorkSpaceDay, arguments);
        }
        _createClass(SchedulerWorkSpaceDay, [{
          key: "type",
          get: function get() {
            return _m_constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.DAY;
          }
        }, {
          key: "_getElementClass",
          value: function _getElementClass() {
            return DAY_CLASS;
          }
        }, {
          key: "_renderDateHeader",
          value: function _renderDateHeader() {
            return 1 === this.option("intervalCount") ? null : _get(_getPrototypeOf(SchedulerWorkSpaceDay.prototype), "_renderDateHeader", this).call(this);
          }
        }, {
          key: "renderRHeaderPanel",
          value: function renderRHeaderPanel() {
            if (1 === this.option("intervalCount")) {
              _get(_getPrototypeOf(SchedulerWorkSpaceDay.prototype), "renderRHeaderPanel", this).call(this, false);
            } else {
              _get(_getPrototypeOf(SchedulerWorkSpaceDay.prototype), "renderRHeaderPanel", this).call(this, true);
            }
          }
        }]);
        return SchedulerWorkSpaceDay;
      }(_m_work_space_vertical__WEBPACK_IMPORTED_MODULE_2__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxSchedulerWorkSpaceDay", SchedulerWorkSpaceDay);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerWorkSpaceDay;

      /***/
    }),
    /***/97463: (
    /*!*****************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_work_space_grouped_strategy_horizontal.js ***!
      \*****************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/position */9622);
      /* harmony import */
      var _m_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../m_classes */16874);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_work_space_grouped_strategy_horizontal.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var HorizontalGroupedStrategy = /*#__PURE__*/function () {
        function HorizontalGroupedStrategy(_workSpace) {
          _classCallCheck(this, HorizontalGroupedStrategy);
          this._workSpace = _workSpace;
        }
        _createClass(HorizontalGroupedStrategy, [{
          key: "prepareCellIndexes",
          value: function prepareCellIndexes(cellCoordinates, groupIndex, inAllDay) {
            var groupByDay = this._workSpace.isGroupedByDate();
            if (!groupByDay) {
              return {
                rowIndex: cellCoordinates.rowIndex,
                columnIndex: cellCoordinates.columnIndex + groupIndex * this._workSpace._getCellCount()
              };
            }
            return {
              rowIndex: cellCoordinates.rowIndex,
              columnIndex: cellCoordinates.columnIndex * this._workSpace._getGroupCount() + groupIndex
            };
          }
        }, {
          key: "getGroupIndex",
          value: function getGroupIndex(rowIndex, columnIndex) {
            var groupByDay = this._workSpace.isGroupedByDate();
            var groupCount = this._workSpace._getGroupCount();
            if (groupByDay) {
              return columnIndex % groupCount;
            }
            return Math.floor(columnIndex / this._workSpace._getCellCount());
          }
        }, {
          key: "calculateHeaderCellRepeatCount",
          value: function calculateHeaderCellRepeatCount() {
            return this._workSpace._getGroupCount() || 1;
          }
        }, {
          key: "insertAllDayRowsIntoDateTable",
          value: function insertAllDayRowsIntoDateTable() {
            return false;
          }
        }, {
          key: "getTotalCellCount",
          value: function getTotalCellCount(groupCount) {
            groupCount = groupCount || 1;
            return this._workSpace._getCellCount() * groupCount;
          }
        }, {
          key: "getTotalRowCount",
          value: function getTotalRowCount() {
            return this._workSpace._getRowCount();
          }
        }, {
          key: "calculateTimeCellRepeatCount",
          value: function calculateTimeCellRepeatCount() {
            return 1;
          }
        }, {
          key: "getWorkSpaceMinWidth",
          value: function getWorkSpaceMinWidth() {
            return (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._workSpace.$element().get(0)).width - this._workSpace.getTimePanelWidth();
          }
        }, {
          key: "getAllDayOffset",
          value: function getAllDayOffset() {
            return this._workSpace.getAllDayHeight();
          }
        }, {
          key: "getGroupCountClass",
          value: function getGroupCountClass(groups) {
            return;
          }
        }, {
          key: "getLeftOffset",
          value: function getLeftOffset() {
            return this._workSpace.getTimePanelWidth();
          }
        }, {
          key: "_createGroupBoundOffset",
          value: function _createGroupBoundOffset(startCell, endCell, cellWidth) {
            var extraOffset = cellWidth / 2;
            var startOffset = startCell ? startCell.offset().left - extraOffset : 0;
            var endOffset = endCell ? endCell.offset().left + cellWidth + extraOffset : 0;
            return {
              left: startOffset,
              right: endOffset,
              top: 0,
              bottom: 0
            };
          }
        }, {
          key: "_getGroupedByDateBoundOffset",
          value: function _getGroupedByDateBoundOffset($cells, cellWidth) {
            var lastCellIndex = $cells.length - 1;
            var startCell = $cells.eq(0);
            var endCell = $cells.eq(lastCellIndex);
            return this._createGroupBoundOffset(startCell, endCell, cellWidth);
          }
        }, {
          key: "getGroupBoundsOffset",
          value: function getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates, groupedDataMap) {
            if (this._workSpace.isGroupedByDate()) {
              return this._getGroupedByDateBoundOffset($cells, cellWidth);
            }
            var startCell;
            var endCell;
            var cellIndex = this._workSpace.getCellIndexByCoordinates(coordinates);
            var groupIndex = coordinates.groupIndex || Math.floor(cellIndex / cellCount);
            var currentCellGroup = groupedDataMap.dateTableGroupedMap[groupIndex];
            if (currentCellGroup) {
              var groupRowLength = currentCellGroup[0].length;
              var groupStartPosition = currentCellGroup[0][0].position;
              var groupEndPosition = currentCellGroup[0][groupRowLength - 1].position;
              startCell = $cells.eq(groupStartPosition.columnIndex);
              endCell = $cells.eq(groupEndPosition.columnIndex);
            }
            return this._createGroupBoundOffset(startCell, endCell, cellWidth);
          }
        }, {
          key: "shiftIndicator",
          value: function shiftIndicator($indicator, height, rtlOffset, groupIndex) {
            var offset = this._getIndicatorOffset(groupIndex);
            var horizontalOffset = rtlOffset ? rtlOffset - offset : offset;
            $indicator.css("left", horizontalOffset);
            $indicator.css("top", height);
          }
        }, {
          key: "_getIndicatorOffset",
          value: function _getIndicatorOffset(groupIndex) {
            var groupByDay = this._workSpace.isGroupedByDate();
            return groupByDay ? this._calculateGroupByDateOffset(groupIndex) : this._calculateOffset(groupIndex);
          }
        }, {
          key: "_calculateOffset",
          value: function _calculateOffset(groupIndex) {
            var indicatorStartPosition = this._workSpace.getIndicatorOffset(groupIndex);
            var offset = this._workSpace._getCellCount() * this._workSpace.getRoundedCellWidth(groupIndex - 1, 0) * groupIndex;
            return indicatorStartPosition + offset;
          }
        }, {
          key: "_calculateGroupByDateOffset",
          value: function _calculateGroupByDateOffset(groupIndex) {
            return this._workSpace.getIndicatorOffset(0) * this._workSpace._getGroupCount() + this._workSpace.getRoundedCellWidth(groupIndex - 1, 0) * groupIndex;
          }
        }, {
          key: "getShaderOffset",
          value: function getShaderOffset(i, width) {
            var offset = this._workSpace._getCellCount() * this._workSpace.getRoundedCellWidth(i - 1) * i;
            return this._workSpace.option("rtlEnabled") ? (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._workSpace._dateTableScrollable.$content().get(0)).width - offset - this._workSpace.getTimePanelWidth() - width : offset;
          }
        }, {
          key: "getShaderTopOffset",
          value: function getShaderTopOffset(i) {
            return -this.getShaderMaxHeight() * (i > 0 ? 1 : 0);
          }
        }, {
          key: "getShaderHeight",
          value: function getShaderHeight() {
            var height = this._workSpace.getIndicationHeight();
            return height;
          }
        }, {
          key: "getShaderMaxHeight",
          value: function getShaderMaxHeight() {
            return (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._workSpace._dateTableScrollable.$content().get(0)).height;
          }
        }, {
          key: "getShaderWidth",
          value: function getShaderWidth(i) {
            return this._workSpace.getIndicationWidth(i);
          }
        }, {
          key: "getScrollableScrollTop",
          value: function getScrollableScrollTop(allDay) {
            return !allDay ? this._workSpace.getScrollable().scrollTop() : 0;
          }
        }, {
          key: "addAdditionalGroupCellClasses",
          value: function addAdditionalGroupCellClasses(cellClass, index, i, j) {
            var applyUnconditionally = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : false;
            cellClass = this._addLastGroupCellClass(cellClass, index, applyUnconditionally);
            return this._addFirstGroupCellClass(cellClass, index, applyUnconditionally);
          }
        }, {
          key: "_addLastGroupCellClass",
          value: function _addLastGroupCellClass(cellClass, index, applyUnconditionally) {
            if (applyUnconditionally) {
              return "".concat(cellClass, " ").concat(_m_classes__WEBPACK_IMPORTED_MODULE_1__.LAST_GROUP_CELL_CLASS);
            }
            var groupByDate = this._workSpace.isGroupedByDate();
            if (groupByDate) {
              if (index % this._workSpace._getGroupCount() === 0) {
                return "".concat(cellClass, " ").concat(_m_classes__WEBPACK_IMPORTED_MODULE_1__.LAST_GROUP_CELL_CLASS);
              }
            } else if (index % this._workSpace._getCellCount() === 0) {
              return "".concat(cellClass, " ").concat(_m_classes__WEBPACK_IMPORTED_MODULE_1__.LAST_GROUP_CELL_CLASS);
            }
            return cellClass;
          }
        }, {
          key: "_addFirstGroupCellClass",
          value: function _addFirstGroupCellClass(cellClass, index, applyUnconditionally) {
            if (applyUnconditionally) {
              return "".concat(cellClass, " ").concat(_m_classes__WEBPACK_IMPORTED_MODULE_1__.FIRST_GROUP_CELL_CLASS);
            }
            var groupByDate = this._workSpace.isGroupedByDate();
            if (groupByDate) {
              if ((index - 1) % this._workSpace._getGroupCount() === 0) {
                return "".concat(cellClass, " ").concat(_m_classes__WEBPACK_IMPORTED_MODULE_1__.FIRST_GROUP_CELL_CLASS);
              }
            } else if ((index - 1) % this._workSpace._getCellCount() === 0) {
              return "".concat(cellClass, " ").concat(_m_classes__WEBPACK_IMPORTED_MODULE_1__.FIRST_GROUP_CELL_CLASS);
            }
            return cellClass;
          }
        }]);
        return HorizontalGroupedStrategy;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = HorizontalGroupedStrategy;

      /***/
    }),
    /***/62203: (
    /*!***************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_work_space_grouped_strategy_vertical.js ***!
      \***************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/position */9622);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _m_classes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../m_classes */16874);
      /* harmony import */
      var _m_cache__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_cache */19133);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_work_space_grouped_strategy_vertical.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DATE_HEADER_OFFSET = 10;
      var WORK_SPACE_BORDER = 1;
      var VerticalGroupedStrategy = /*#__PURE__*/function () {
        function VerticalGroupedStrategy(_workSpace) {
          _classCallCheck(this, VerticalGroupedStrategy);
          this._workSpace = _workSpace;
          this.cache = new _m_cache__WEBPACK_IMPORTED_MODULE_3__.Cache();
        }
        _createClass(VerticalGroupedStrategy, [{
          key: "prepareCellIndexes",
          value: function prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow) {
            var rowIndex = cellCoordinates.rowIndex + groupIndex * this._workSpace._getRowCount();
            if (this._workSpace.supportAllDayRow() && this._workSpace.option("showAllDayPanel")) {
              rowIndex += groupIndex;
              if (!inAllDayRow) {
                rowIndex += 1;
              }
            }
            return {
              rowIndex: rowIndex,
              columnIndex: cellCoordinates.columnIndex
            };
          }
        }, {
          key: "getGroupIndex",
          value: function getGroupIndex(rowIndex) {
            return Math.floor(rowIndex / this._workSpace._getRowCount());
          }
        }, {
          key: "calculateHeaderCellRepeatCount",
          value: function calculateHeaderCellRepeatCount() {
            return 1;
          }
        }, {
          key: "insertAllDayRowsIntoDateTable",
          value: function insertAllDayRowsIntoDateTable() {
            return this._workSpace.option("showAllDayPanel");
          }
        }, {
          key: "getTotalCellCount",
          value: function getTotalCellCount() {
            return this._workSpace._getCellCount();
          }
        }, {
          key: "getTotalRowCount",
          value: function getTotalRowCount() {
            return this._workSpace._getRowCount() * this._workSpace._getGroupCount();
          }
        }, {
          key: "calculateTimeCellRepeatCount",
          value: function calculateTimeCellRepeatCount() {
            return this._workSpace._getGroupCount() || 1;
          }
        }, {
          key: "getWorkSpaceMinWidth",
          value: function getWorkSpaceMinWidth() {
            var minWidth = this._workSpace._getWorkSpaceWidth();
            var workspaceContainerWidth = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._workSpace.$element().get(0)).width - this._workSpace.getTimePanelWidth() - this._workSpace.getGroupTableWidth() - 2 * WORK_SPACE_BORDER;
            if (minWidth < workspaceContainerWidth) {
              minWidth = workspaceContainerWidth;
            }
            return minWidth;
          }
        }, {
          key: "getAllDayOffset",
          value: function getAllDayOffset() {
            return 0;
          }
        }, {
          key: "getGroupCountClass",
          value: function getGroupCountClass(groups) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__.getVerticalGroupCountClass)(groups);
          }
        }, {
          key: "getLeftOffset",
          value: function getLeftOffset() {
            return this._workSpace.getTimePanelWidth() + this._workSpace.getGroupTableWidth();
          }
        }, {
          key: "getGroupBoundsOffset",
          value: function getGroupBoundsOffset(groupIndex, _ref) {
            var _this157 = this;
            var _ref15 = _slicedToArray(_ref, 2),
              $firstCell = _ref15[0],
              $lastCell = _ref15[1];
            return this.cache.get("groupBoundsOffset".concat(groupIndex), function () {
              var startDayHour = _this157._workSpace.option("startDayHour");
              var endDayHour = _this157._workSpace.option("endDayHour");
              var hoursInterval = _this157._workSpace.option("hoursInterval");
              var dayHeight = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__.calculateDayDuration)(startDayHour, endDayHour) / hoursInterval * _this157._workSpace.getCellHeight();
              var scrollTop = _this157.getScrollableScrollTop();
              var topOffset = groupIndex * dayHeight + (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(_this157._workSpace._$thead.get(0)).height + _this157._workSpace.option("getHeaderHeight")() + DATE_HEADER_OFFSET - scrollTop;
              if (_this157._workSpace.option("showAllDayPanel") && _this157._workSpace.supportAllDayRow()) {
                topOffset += _this157._workSpace.getCellHeight() * (groupIndex + 1);
              }
              var bottomOffset = topOffset + dayHeight;
              var _$firstCell$getBoundi = $firstCell.getBoundingClientRect(),
                left = _$firstCell$getBoundi.left;
              var _$lastCell$getBoundin = $lastCell.getBoundingClientRect(),
                right = _$lastCell$getBoundin.right;
              _this157._groupBoundsOffset = {
                left: left,
                right: right,
                top: topOffset,
                bottom: bottomOffset
              };
              return _this157._groupBoundsOffset;
            });
          }
        }, {
          key: "shiftIndicator",
          value: function shiftIndicator($indicator, height, rtlOffset, i) {
            var offset = this._workSpace.getIndicatorOffset(0);
            var tableOffset = this._workSpace.option("crossScrollingEnabled") ? 0 : this._workSpace.getGroupTableWidth();
            var horizontalOffset = rtlOffset ? rtlOffset - offset : offset;
            var verticalOffset = this._workSpace._getRowCount() * this._workSpace.getCellHeight() * i;
            if (this._workSpace.supportAllDayRow() && this._workSpace.option("showAllDayPanel")) {
              verticalOffset += this._workSpace.getAllDayHeight() * (i + 1);
            }
            $indicator.css("left", horizontalOffset + tableOffset);
            $indicator.css("top", height + verticalOffset);
          }
        }, {
          key: "getShaderOffset",
          value: function getShaderOffset(i, width) {
            var offset = this._workSpace.option("crossScrollingEnabled") ? 0 : this._workSpace.getGroupTableWidth();
            return this._workSpace.option("rtlEnabled") ? (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_0__.getBoundingRect)(this._$container.get(0)).width - offset - this._workSpace.getWorkSpaceLeftOffset() - width : offset;
          }
        }, {
          key: "getShaderTopOffset",
          value: function getShaderTopOffset(i) {
            return 0;
          }
        }, {
          key: "getShaderHeight",
          value: function getShaderHeight() {
            var height = this._workSpace.getIndicationHeight();
            if (this._workSpace.supportAllDayRow() && this._workSpace.option("showAllDayPanel")) {
              height += this._workSpace.getCellHeight();
            }
            return height;
          }
        }, {
          key: "getShaderMaxHeight",
          value: function getShaderMaxHeight() {
            var height = this._workSpace._getRowCount() * this._workSpace.getCellHeight();
            if (this._workSpace.supportAllDayRow() && this._workSpace.option("showAllDayPanel")) {
              height += this._workSpace.getCellHeight();
            }
            return height;
          }
        }, {
          key: "getShaderWidth",
          value: function getShaderWidth() {
            return this._workSpace.getIndicationWidth(0);
          }
        }, {
          key: "getScrollableScrollTop",
          value: function getScrollableScrollTop() {
            return this._workSpace.getScrollable().scrollTop();
          }
        }, {
          key: "addAdditionalGroupCellClasses",
          value: function addAdditionalGroupCellClasses(cellClass, index, i, j) {
            cellClass = this._addLastGroupCellClass(cellClass, i + 1);
            return this._addFirstGroupCellClass(cellClass, i + 1);
          }
        }, {
          key: "_addLastGroupCellClass",
          value: function _addLastGroupCellClass(cellClass, index) {
            if (index % this._workSpace._getRowCount() === 0) {
              return "".concat(cellClass, " ").concat(_m_classes__WEBPACK_IMPORTED_MODULE_2__.LAST_GROUP_CELL_CLASS);
            }
            return cellClass;
          }
        }, {
          key: "_addFirstGroupCellClass",
          value: function _addFirstGroupCellClass(cellClass, index) {
            if ((index - 1) % this._workSpace._getRowCount() === 0) {
              return "".concat(cellClass, " ").concat(_m_classes__WEBPACK_IMPORTED_MODULE_2__.FIRST_GROUP_CELL_CLASS);
            }
            return cellClass;
          }
        }]);
        return VerticalGroupedStrategy;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = VerticalGroupedStrategy;

      /***/
    }),
    /***/26309: (
    /*!***********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_work_space_indicator.js ***!
      \***********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/utils/position */9622);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../core/utils/window */88684);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _m_classes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../m_classes */16874);
      /* harmony import */
      var _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../m_utils_time_zone */98281);
      /* harmony import */
      var _m_work_space__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ./m_work_space */2148);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_work_space_indicator.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].dateToMilliseconds;
      var SCHEDULER_DATE_TIME_INDICATOR_CLASS = "dx-scheduler-date-time-indicator";
      var TIME_PANEL_CURRENT_TIME_CELL_CLASS = "dx-scheduler-time-panel-current-time-cell";
      var SchedulerWorkSpaceIndicator = /*#__PURE__*/function (_m_work_space__WEBPAC2) {
        _inherits(SchedulerWorkSpaceIndicator, _m_work_space__WEBPAC2);
        function SchedulerWorkSpaceIndicator() {
          _classCallCheck(this, SchedulerWorkSpaceIndicator);
          return _callSuper(this, SchedulerWorkSpaceIndicator, arguments);
        }
        _createClass(SchedulerWorkSpaceIndicator, [{
          key: "_getToday",
          value: function _getToday() {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_7__.getToday)(this.option("indicatorTime"), this.timeZoneCalculator);
          }
        }, {
          key: "isIndicationOnView",
          value: function isIndicationOnView() {
            if (this.option("showCurrentTimeIndicator")) {
              var today = this._getToday();
              var endViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].trimTime(this.getEndViewDate());
              return _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].dateInRange(today, this.getStartViewDate(), new Date(endViewDate.getTime() + toMs("day")));
            }
            return false;
          }
        }, {
          key: "isIndicationAvailable",
          value: function isIndicationAvailable() {
            if (!(0, _core_utils_window__WEBPACK_IMPORTED_MODULE_6__.hasWindow)()) {
              return false;
            }
            var today = this._getToday();
            return today >= _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].trimTime(new Date(this.getStartViewDate()));
          }
        }, {
          key: "isIndicatorVisible",
          value: function isIndicatorVisible() {
            var today = this._getToday();
            var endViewDate = new Date(this.getEndViewDate().getTime() + toMs("minute") - 1);
            var firstViewDate = new Date(this.getStartViewDate());
            firstViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());
            endViewDate.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());
            return _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].dateInRange(today, firstViewDate, endViewDate);
          }
        }, {
          key: "_renderIndicator",
          value: function _renderIndicator(height, rtlOffset, $container, groupCount) {
            var groupedByDate = this.isGroupedByDate();
            var repeatCount = groupedByDate ? 1 : groupCount;
            for (var i = 0; i < repeatCount; i++) {
              var $indicator = this._createIndicator($container);
              (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_5__.setWidth)($indicator, groupedByDate ? this.getCellWidth() * groupCount : this.getCellWidth());
              this._groupedStrategy.shiftIndicator($indicator, height, rtlOffset, i);
            }
          }
        }, {
          key: "_createIndicator",
          value: function _createIndicator($container) {
            var $indicator = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(SCHEDULER_DATE_TIME_INDICATOR_CLASS);
            $container.append($indicator);
            return $indicator;
          }
        }, {
          key: "_getRtlOffset",
          value: function _getRtlOffset(width) {
            return this.option("rtlEnabled") ? (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_4__.getBoundingRect)(this._dateTableScrollable.$content().get(0)).width - this.getTimePanelWidth() - width : 0;
          }
        }, {
          key: "_setIndicationUpdateInterval",
          value: function _setIndicationUpdateInterval() {
            var _this158 = this;
            if (!this.option("showCurrentTimeIndicator") || 0 === this.option("indicatorUpdateInterval")) {
              return;
            }
            this._clearIndicatorUpdateInterval();
            this._indicatorInterval = setInterval(function () {
              _this158.renderCurrentDateTimeIndication();
            }, this.option("indicatorUpdateInterval"));
          }
        }, {
          key: "_clearIndicatorUpdateInterval",
          value: function _clearIndicatorUpdateInterval() {
            if (this._indicatorInterval) {
              clearInterval(this._indicatorInterval);
              delete this._indicatorInterval;
            }
          }
        }, {
          key: "_isVerticalShader",
          value: function _isVerticalShader() {
            return true;
          }
        }, {
          key: "getIndicationWidth",
          value: function getIndicationWidth(groupIndex) {
            var maxWidth = this.getCellWidth() * this._getCellCount();
            var difference = this._getIndicatorDuration();
            if (difference > this._getCellCount()) {
              difference = this._getCellCount();
            }
            var width = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);
            return maxWidth < width ? maxWidth : width;
          }
        }, {
          key: "getIndicatorOffset",
          value: function getIndicatorOffset(groupIndex) {
            var difference = this._getIndicatorDuration() - 1;
            var offset = difference * this.getRoundedCellWidth(groupIndex, groupIndex * this._getCellCount(), difference);
            return offset;
          }
        }, {
          key: "_getIndicatorDuration",
          value: function _getIndicatorDuration() {
            var today = this._getToday();
            var firstViewDate = new Date(this.getStartViewDate());
            var timeDiff = today.getTime() - firstViewDate.getTime();
            if ("workWeek" === this.option("type")) {
              timeDiff -= this._getWeekendsCount(Math.round(timeDiff / toMs("day"))) * toMs("day");
            }
            return Math.ceil((timeDiff + 1) / toMs("day"));
          }
        }, {
          key: "getIndicationHeight",
          value: function getIndicationHeight() {
            var today = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_9__["default"].getDateWithoutTimezoneChange(this._getToday());
            var cellHeight = this.getCellHeight();
            var date = new Date(this.getStartViewDate());
            if (this.isIndicationOnView()) {
              date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());
            }
            var duration = today.getTime() - date.getTime();
            var cellCount = duration / this.getCellDuration();
            return cellCount * cellHeight;
          }
        }, {
          key: "_dispose",
          value: function _dispose() {
            this._clearIndicatorUpdateInterval();
            _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), "_dispose", this).apply(this, arguments);
          }
        }, {
          key: "renderCurrentDateTimeIndication",
          value: function renderCurrentDateTimeIndication() {
            this.renderCurrentDateTimeLineAndShader();
            if (this.isRenovatedRender()) {
              this.renderWorkSpace({
                generateNewData: true,
                renderComponents: {
                  header: true,
                  timePanel: true
                }
              });
            }
          }
        }, {
          key: "renderCurrentDateTimeLineAndShader",
          value: function renderCurrentDateTimeLineAndShader() {
            var _a;
            this._cleanDateTimeIndicator();
            null === (_a = this._shader) || void 0 === _a ? void 0 : _a.clean();
            this._renderDateTimeIndication();
          }
        }, {
          key: "_isCurrentTimeHeaderCell",
          value: function _isCurrentTimeHeaderCell(headerIndex) {
            if (this.isIndicationOnView()) {
              var completeDateHeaderMap = this.viewDataProvider.completeDateHeaderMap;
              var date = completeDateHeaderMap[completeDateHeaderMap.length - 1][headerIndex].startDate;
              return _core_utils_date__WEBPACK_IMPORTED_MODULE_2__["default"].sameDate(date, this._getToday());
            }
            return false;
          }
        }, {
          key: "_getHeaderPanelCellClass",
          value: function _getHeaderPanelCellClass(i) {
            var cellClass = _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), "_getHeaderPanelCellClass", this).call(this, i);
            if (this._isCurrentTimeHeaderCell(i)) {
              return "".concat(cellClass, " ").concat(_m_classes__WEBPACK_IMPORTED_MODULE_8__.HEADER_CURRENT_TIME_CELL_CLASS);
            }
            return cellClass;
          }
        }, {
          key: "_cleanView",
          value: function _cleanView() {
            _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), "_cleanView", this).call(this);
            this._cleanDateTimeIndicator();
          }
        }, {
          key: "_dimensionChanged",
          value: function _dimensionChanged() {
            _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), "_dimensionChanged", this).call(this);
            this.renderCurrentDateTimeLineAndShader();
          }
        }, {
          key: "_cleanDateTimeIndicator",
          value: function _cleanDateTimeIndicator() {
            this.$element().find(".".concat(SCHEDULER_DATE_TIME_INDICATOR_CLASS)).remove();
          }
        }, {
          key: "_cleanWorkSpace",
          value: function _cleanWorkSpace() {
            _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), "_cleanWorkSpace", this).call(this);
            this._renderDateTimeIndication();
            this._setIndicationUpdateInterval();
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(args) {
            switch (args.name) {
              case "showCurrentTimeIndicator":
              case "indicatorTime":
                this._cleanWorkSpace();
                break;
              case "indicatorUpdateInterval":
                this._setIndicationUpdateInterval();
                break;
              case "showAllDayPanel":
              case "allDayExpanded":
              case "crossScrollingEnabled":
                _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), "_optionChanged", this).call(this, args);
                this.renderCurrentDateTimeIndication();
                break;
              case "shadeUntilCurrentTime":
                this.renderCurrentDateTimeIndication();
                break;
              default:
                _get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), "_optionChanged", this).call(this, args);
            }
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(_get(_getPrototypeOf(SchedulerWorkSpaceIndicator.prototype), "_getDefaultOptions", this).call(this), {
              showCurrentTimeIndicator: true,
              indicatorTime: new Date(),
              indicatorUpdateInterval: 5 * toMs("minute"),
              shadeUntilCurrentTime: true
            });
          }
        }, {
          key: "_getCurrentTimePanelCellIndices",
          value: function _getCurrentTimePanelCellIndices() {
            var rowCountPerGroup = this._getTimePanelRowCount();
            var today = this._getToday();
            var index = this.getCellIndexByDate(today);
            var _this$_getCellCoordin2 = this._getCellCoordinatesByIndex(index),
              currentTimeRowIndex = _this$_getCellCoordin2.rowIndex;
            if (void 0 === currentTimeRowIndex) {
              return [];
            }
            var cellIndices;
            if (0 === currentTimeRowIndex) {
              cellIndices = [currentTimeRowIndex];
            } else {
              cellIndices = currentTimeRowIndex % 2 === 0 ? [currentTimeRowIndex - 1, currentTimeRowIndex] : [currentTimeRowIndex, currentTimeRowIndex + 1];
            }
            var verticalGroupCount = this._isVerticalGroupedWorkSpace() ? this._getGroupCount() : 1;
            return _toConsumableArray(new Array(verticalGroupCount)).reduce(function (currentIndices, _, groupIndex) {
              return [].concat(_toConsumableArray(currentIndices), _toConsumableArray(cellIndices.map(function (cellIndex) {
                return rowCountPerGroup * groupIndex + cellIndex;
              })));
            }, []);
          }
        }, {
          key: "_renderDateTimeIndication",
          value: function _renderDateTimeIndication() {
            if (!this.isIndicationAvailable()) {
              return;
            }
            if (this.option("shadeUntilCurrentTime")) {
              this._shader.render();
            }
            if (!this.isIndicationOnView() || !this.isIndicatorVisible()) {
              return;
            }
            var groupCount = this._getGroupCount() || 1;
            var $container = this._dateTableScrollable.$content();
            var height = this.getIndicationHeight();
            var rtlOffset = this._getRtlOffset(this.getCellWidth());
            this._renderIndicator(height, rtlOffset, $container, groupCount);
            if (!this.isRenovatedRender()) {
              this._setCurrentTimeCells();
            }
          }
        }, {
          key: "_setCurrentTimeCells",
          value: function _setCurrentTimeCells() {
            var timePanelCells = this._getTimePanelCells();
            var currentTimeCellIndices = this._getCurrentTimePanelCellIndices();
            currentTimeCellIndices.forEach(function (timePanelCellIndex) {
              timePanelCells.eq(timePanelCellIndex).addClass(TIME_PANEL_CURRENT_TIME_CELL_CLASS);
            });
          }
        }, {
          key: "_cleanCurrentTimeCells",
          value: function _cleanCurrentTimeCells() {
            this.$element().find(".".concat(TIME_PANEL_CURRENT_TIME_CELL_CLASS)).removeClass(TIME_PANEL_CURRENT_TIME_CELL_CLASS);
          }
        }]);
        return SchedulerWorkSpaceIndicator;
      }(_m_work_space__WEBPACK_IMPORTED_MODULE_10__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxSchedulerWorkSpace", SchedulerWorkSpaceIndicator);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerWorkSpaceIndicator;

      /***/
    }),
    /***/85123: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_work_space_month.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/common */37552);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/utils/position */9622);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/utils/window */88684);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/month */35189);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_month_date_table_layout_j__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/workspaces/month/date_table/layout.j */93335);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../m_utils */8392);
      /* harmony import */
      var _m_work_space_indicator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ./m_work_space_indicator */26309);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_work_space_month.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var MONTH_CLASS = "dx-scheduler-work-space-month";
      var DATE_TABLE_CURRENT_DATE_CLASS = "dx-scheduler-date-table-current-date";
      var DATE_TABLE_CELL_TEXT_CLASS = "dx-scheduler-date-table-cell-text";
      var DATE_TABLE_FIRST_OF_MONTH_CLASS = "dx-scheduler-date-table-first-of-month";
      var DATE_TABLE_OTHER_MONTH_DATE_CLASS = "dx-scheduler-date-table-other-month";
      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_3__["default"].dateToMilliseconds;
      var SchedulerWorkSpaceMonth = /*#__PURE__*/function (_m_work_space_indicat2) {
        _inherits(SchedulerWorkSpaceMonth, _m_work_space_indicat2);
        function SchedulerWorkSpaceMonth() {
          _classCallCheck(this, SchedulerWorkSpaceMonth);
          return _callSuper(this, SchedulerWorkSpaceMonth, arguments);
        }
        _createClass(SchedulerWorkSpaceMonth, [{
          key: "type",
          get: function get() {
            return _m_constants__WEBPACK_IMPORTED_MODULE_9__.VIEWS.MONTH;
          }
        }, {
          key: "_getElementClass",
          value: function _getElementClass() {
            return MONTH_CLASS;
          }
        }, {
          key: "_getFormat",
          value: function _getFormat() {
            return _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_6__.formatWeekday;
          }
        }, {
          key: "_getIntervalBetween",
          value: function _getIntervalBetween(currentDate) {
            var firstViewDate = this.getStartViewDate();
            var timeZoneOffset = _core_utils_date__WEBPACK_IMPORTED_MODULE_3__["default"].getTimezonesDifference(firstViewDate, currentDate);
            return currentDate.getTime() - (firstViewDate.getTime() - 36e5 * this.option("startDayHour")) - timeZoneOffset;
          }
        }, {
          key: "_getDateGenerationOptions",
          value: function _getDateGenerationOptions() {
            return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, _get(_getPrototypeOf(SchedulerWorkSpaceMonth.prototype), "_getDateGenerationOptions", this).call(this)), {
              cellCountInDay: 1
            });
          }
        }, {
          key: "getCellWidth",
          value: function getCellWidth() {
            var _this159 = this;
            return this.cache.get("cellWidth", function () {
              var averageWidth = 0;
              var cells = _this159._getCells().slice(0, 7);
              cells.each(function (index, element) {
                averageWidth += (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_5__.hasWindow)() ? (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_4__.getBoundingRect)(element).width : 0;
              });
              return 0 === cells.length ? void 0 : averageWidth / 7;
            });
          }
        }, {
          key: "_insertAllDayRowsIntoDateTable",
          value: function _insertAllDayRowsIntoDateTable() {
            return false;
          }
        }, {
          key: "_getCellCoordinatesByIndex",
          value: function _getCellCoordinatesByIndex(index) {
            var rowIndex = Math.floor(index / this._getCellCount());
            var columnIndex = index - this._getCellCount() * rowIndex;
            return {
              rowIndex: rowIndex,
              columnIndex: columnIndex
            };
          }
        }, {
          key: "_needCreateCrossScrolling",
          value: function _needCreateCrossScrolling() {
            return this.option("crossScrollingEnabled") || this._isVerticalGroupedWorkSpace();
          }
        }, {
          key: "_getViewStartByOptions",
          value: function _getViewStartByOptions() {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_7__.getViewStartByOptions)(this.option("startDate"), this.option("currentDate"), this.option("intervalCount"), _core_utils_date__WEBPACK_IMPORTED_MODULE_3__["default"].getFirstMonthDate(this.option("startDate")));
          }
        }, {
          key: "_updateIndex",
          value: function _updateIndex(index) {
            return index;
          }
        }, {
          key: "isIndicationAvailable",
          value: function isIndicationAvailable() {
            return false;
          }
        }, {
          key: "getIntervalDuration",
          value: function getIntervalDuration() {
            return toMs("day");
          }
        }, {
          key: "getTimePanelWidth",
          value: function getTimePanelWidth() {
            return 0;
          }
        }, {
          key: "supportAllDayRow",
          value: function supportAllDayRow() {
            return false;
          }
        }, {
          key: "keepOriginalHours",
          value: function keepOriginalHours() {
            return true;
          }
        }, {
          key: "getWorkSpaceLeftOffset",
          value: function getWorkSpaceLeftOffset() {
            return 0;
          }
        }, {
          key: "needApplyCollectorOffset",
          value: function needApplyCollectorOffset() {
            return true;
          }
        }, {
          key: "_getHeaderDate",
          value: function _getHeaderDate() {
            return this._getViewStartByOptions();
          }
        }, {
          key: "scrollToTime",
          value: function scrollToTime() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop)();
          }
        }, {
          key: "renderRAllDayPanel",
          value: function renderRAllDayPanel() {}
        }, {
          key: "renderRTimeTable",
          value: function renderRTimeTable() {}
        }, {
          key: "renderRDateTable",
          value: function renderRDateTable() {
            _m_utils__WEBPACK_IMPORTED_MODULE_10__.utils.renovation.renderComponent(this, this._$dateTable, _renovation_ui_scheduler_workspaces_month_date_table_layout_j__WEBPACK_IMPORTED_MODULE_8__["default"], "renovatedDateTable", this._getRDateTableProps());
          }
        }, {
          key: "_createWorkSpaceElements",
          value: function _createWorkSpaceElements() {
            if (this._isVerticalGroupedWorkSpace()) {
              this._createWorkSpaceScrollableElements();
            } else {
              _get(_getPrototypeOf(SchedulerWorkSpaceMonth.prototype), "_createWorkSpaceElements", this).call(this);
            }
          }
        }, {
          key: "_toggleAllDayVisibility",
          value: function _toggleAllDayVisibility() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop)();
          }
        }, {
          key: "_changeAllDayVisibility",
          value: function _changeAllDayVisibility() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop)();
          }
        }, {
          key: "_renderTimePanel",
          value: function _renderTimePanel() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop)();
          }
        }, {
          key: "_renderAllDayPanel",
          value: function _renderAllDayPanel() {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop)();
          }
        }, {
          key: "_setMonthClassesToCell",
          value: function _setMonthClassesToCell($cell, data) {
            $cell.toggleClass(DATE_TABLE_CURRENT_DATE_CLASS, data.isCurrentDate).toggleClass(DATE_TABLE_FIRST_OF_MONTH_CLASS, data.firstDayOfMonth).toggleClass(DATE_TABLE_OTHER_MONTH_DATE_CLASS, data.otherMonth);
          }
        }, {
          key: "_createAllDayPanelElements",
          value: function _createAllDayPanelElements() {}
        }, {
          key: "_renderTableBody",
          value: function _renderTableBody(options) {
            var _this160 = this;
            options.getCellText = function (rowIndex, columnIndex) {
              var date = _this160.viewDataProvider.completeViewDataMap[rowIndex][columnIndex].startDate;
              return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_7__.getCellText)(date, _this160.option("intervalCount"));
            };
            options.getCellTextClass = DATE_TABLE_CELL_TEXT_CLASS;
            options.setAdditionalClasses = this._setMonthClassesToCell.bind(this);
            _get(_getPrototypeOf(SchedulerWorkSpaceMonth.prototype), "_renderTableBody", this).call(this, options);
          }
        }]);
        return SchedulerWorkSpaceMonth;
      }(_m_work_space_indicator__WEBPACK_IMPORTED_MODULE_11__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__["default"])("dxSchedulerWorkSpaceMonth", SchedulerWorkSpaceMonth);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerWorkSpaceMonth;

      /***/
    }),
    /***/32106: (
    /*!**********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_work_space_vertical.js ***!
      \**********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _m_work_space_indicator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./m_work_space_indicator */26309);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_work_space_vertical.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var SchedulerWorkspaceVertical = /*#__PURE__*/function (_m_work_space_indicat3) {
        _inherits(SchedulerWorkspaceVertical, _m_work_space_indicat3);
        function SchedulerWorkspaceVertical() {
          _classCallCheck(this, SchedulerWorkspaceVertical);
          return _callSuper(this, SchedulerWorkspaceVertical, arguments);
        }
        _createClass(SchedulerWorkspaceVertical, [{
          key: "_getFormat",
          value: function _getFormat() {
            return _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__.formatWeekdayAndDay;
          }
        }, {
          key: "generateRenderOptions",
          value: function generateRenderOptions() {
            var options = _get(_getPrototypeOf(SchedulerWorkspaceVertical.prototype), "generateRenderOptions", this).call(this);
            return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {
              isGenerateTimePanelData: true
            });
          }
        }, {
          key: "_isRenderHeaderPanelEmptyCell",
          value: function _isRenderHeaderPanelEmptyCell() {
            return true;
          }
        }]);
        return SchedulerWorkspaceVertical;
      }(_m_work_space_indicator__WEBPACK_IMPORTED_MODULE_2__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerWorkspaceVertical;

      /***/
    }),
    /***/66156: (
    /*!******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_work_space_week.js ***!
      \******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/week */12871);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_work_space_vertical__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_work_space_vertical */32106);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_work_space_week.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var WEEK_CLASS = "dx-scheduler-work-space-week";
      var SchedulerWorkSpaceWeek = /*#__PURE__*/function (_m_work_space_vertica2) {
        _inherits(SchedulerWorkSpaceWeek, _m_work_space_vertica2);
        function SchedulerWorkSpaceWeek() {
          _classCallCheck(this, SchedulerWorkSpaceWeek);
          return _callSuper(this, SchedulerWorkSpaceWeek, arguments);
        }
        _createClass(SchedulerWorkSpaceWeek, [{
          key: "type",
          get: function get() {
            return _m_constants__WEBPACK_IMPORTED_MODULE_2__.VIEWS.WEEK;
          }
        }, {
          key: "_getElementClass",
          value: function _getElementClass() {
            return WEEK_CLASS;
          }
        }, {
          key: "_calculateViewStartDate",
          value: function _calculateViewStartDate() {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_1__.calculateViewStartDate)(this.option("startDate"), this._firstDayOfWeek());
          }
        }]);
        return SchedulerWorkSpaceWeek;
      }(_m_work_space_vertical__WEBPACK_IMPORTED_MODULE_3__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxSchedulerWorkSpaceWeek", SchedulerWorkSpaceWeek);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerWorkSpaceWeek;

      /***/
    }),
    /***/35139: (
    /*!***********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/m_work_space_work_week.js ***!
      \***********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/component_registrator */2382);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../renovation/ui/scheduler/view_model/to_test/views/utils/work_week */95984);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../m_constants */19107);
      /* harmony import */
      var _m_work_space_week__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_work_space_week */66156);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/m_work_space_work_week.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var WORK_WEEK_CLASS = "dx-scheduler-work-space-work-week";
      var SchedulerWorkSpaceWorkWeek = /*#__PURE__*/function (_m_work_space_week__W) {
        _inherits(SchedulerWorkSpaceWorkWeek, _m_work_space_week__W);
        function SchedulerWorkSpaceWorkWeek() {
          var _this161;
          _classCallCheck(this, SchedulerWorkSpaceWorkWeek);
          _this161 = _callSuper(this, SchedulerWorkSpaceWorkWeek, arguments);
          _this161._getWeekendsCount = _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_1__.getWeekendsCount;
          return _this161;
        }
        _createClass(SchedulerWorkSpaceWorkWeek, [{
          key: "type",
          get: function get() {
            return _m_constants__WEBPACK_IMPORTED_MODULE_2__.VIEWS.WORK_WEEK;
          }
        }, {
          key: "_getElementClass",
          value: function _getElementClass() {
            return WORK_WEEK_CLASS;
          }
        }]);
        return SchedulerWorkSpaceWorkWeek;
      }(_m_work_space_week__WEBPACK_IMPORTED_MODULE_3__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxSchedulerWorkSpaceWorkWeek", SchedulerWorkSpaceWorkWeek);
      /* harmony default export */
      __webpack_exports__["default"] = SchedulerWorkSpaceWorkWeek;

      /***/
    }),
    /***/55652: (
    /*!****************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_date_header_data_generator.js ***!
      \****************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"DateHeaderDataGenerator": function DateHeaderDataGenerator() {
          return /* binding */_DateHeaderDataGenerator;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _resources_m_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../resources/m_utils */48025);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_date_header_data_generator.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var __rest = undefined && undefined.__rest || function (s, e) {
        var t = {};
        for (var p in s) {
          if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) {
            t[p] = s[p];
          }
        }
        if (null != s && "function" === typeof Object.getOwnPropertySymbols) {
          var i = 0;
          for (p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) {
              t[p[i]] = s[p[i]];
            }
          }
        }
        return t;
      };
      var _DateHeaderDataGenerator = /*#__PURE__*/function () {
        function _DateHeaderDataGenerator(_viewDataGenerator) {
          _classCallCheck(this, _DateHeaderDataGenerator);
          this._viewDataGenerator = _viewDataGenerator;
        }
        _createClass(_DateHeaderDataGenerator, [{
          key: "getCompleteDateHeaderMap",
          value: function getCompleteDateHeaderMap(options, completeViewDataMap) {
            var isGenerateWeekDaysHeaderData = options.isGenerateWeekDaysHeaderData;
            var result = [];
            if (isGenerateWeekDaysHeaderData) {
              var weekDaysRow = this._generateWeekDaysHeaderRowMap(options, completeViewDataMap);
              result.push(weekDaysRow);
            }
            var dateRow = this._generateHeaderDateRow(options, completeViewDataMap);
            result.push(dateRow);
            return result;
          }
        }, {
          key: "_generateWeekDaysHeaderRowMap",
          value: function _generateWeekDaysHeaderRowMap(options, completeViewDataMap) {
            var isGroupedByDate = options.isGroupedByDate,
              groups = options.groups,
              groupOrientation = options.groupOrientation,
              startDayHour = options.startDayHour,
              endDayHour = options.endDayHour,
              hoursInterval = options.hoursInterval,
              isHorizontalGrouping = options.isHorizontalGrouping,
              intervalCount = options.intervalCount;
            var cellCountInDay = this._viewDataGenerator.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
            var horizontalGroupCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getHorizontalGroupCount)(groups, groupOrientation);
            var index = completeViewDataMap[0][0].allDay ? 1 : 0;
            var colSpan = isGroupedByDate ? horizontalGroupCount * cellCountInDay : cellCountInDay;
            var groupCount = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_3__.getGroupCount)(groups);
            var datesRepeatCount = isHorizontalGrouping && !isGroupedByDate ? groupCount : 1;
            var daysInGroup = this._viewDataGenerator.daysInInterval * intervalCount;
            var daysInView = daysInGroup * datesRepeatCount;
            var weekDaysRow = [];
            for (var dayIndex = 0; dayIndex < daysInView; dayIndex += 1) {
              var cell = completeViewDataMap[index][dayIndex * colSpan];
              weekDaysRow.push((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, cell), {
                colSpan: colSpan,
                text: (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.formatWeekdayAndDay)(cell.startDate),
                isFirstGroupCell: false,
                isLastGroupCell: false
              }));
            }
            return weekDaysRow;
          }
        }, {
          key: "_generateHeaderDateRow",
          value: function _generateHeaderDateRow(options, completeViewDataMap) {
            var today = options.today,
              isGroupedByDate = options.isGroupedByDate,
              groupOrientation = options.groupOrientation,
              groups = options.groups,
              headerCellTextFormat = options.headerCellTextFormat,
              getDateForHeaderText = options.getDateForHeaderText,
              interval = options.interval,
              startViewDate = options.startViewDate,
              startDayHour = options.startDayHour,
              endDayHour = options.endDayHour,
              hoursInterval = options.hoursInterval,
              intervalCount = options.intervalCount,
              currentDate = options.currentDate,
              viewType = options.viewType;
            var horizontalGroupCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getHorizontalGroupCount)(groups, groupOrientation);
            var index = completeViewDataMap[0][0].allDay ? 1 : 0;
            var colSpan = isGroupedByDate ? horizontalGroupCount : 1;
            var isVerticalGrouping = "vertical" === groupOrientation;
            var cellCountInGroupRow = this._viewDataGenerator.getCellCount({
              intervalCount: intervalCount,
              currentDate: currentDate,
              viewType: viewType,
              hoursInterval: hoursInterval,
              startDayHour: startDayHour,
              endDayHour: endDayHour
            });
            var cellCountInDay = this._viewDataGenerator.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
            var slicedByColumnsData = isGroupedByDate ? completeViewDataMap[index].filter(function (_, columnIndex) {
              return columnIndex % horizontalGroupCount === 0;
            }) : completeViewDataMap[index];
            return slicedByColumnsData.map(function (_a, index) {
              var startDate = _a.startDate,
                endDate = _a.endDate,
                isFirstGroupCell = _a.isFirstGroupCell,
                isLastGroupCell = _a.isLastGroupCell,
                restProps = __rest(_a, ["startDate", "endDate", "isFirstGroupCell", "isLastGroupCell"]);
              var text = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getHeaderCellText)(index % cellCountInGroupRow, startDate, headerCellTextFormat, getDateForHeaderText, {
                interval: interval,
                startViewDate: startViewDate,
                startDayHour: startDayHour,
                cellCountInDay: cellCountInDay
              });
              return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, restProps), {
                startDate: startDate,
                text: text,
                today: _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].sameDate(startDate, today),
                colSpan: colSpan,
                isFirstGroupCell: isGroupedByDate || isFirstGroupCell && !isVerticalGrouping,
                isLastGroupCell: isGroupedByDate || isLastGroupCell && !isVerticalGrouping
              });
            });
          }
        }, {
          key: "generateDateHeaderData",
          value: function generateDateHeaderData(completeDateHeaderMap, completeViewDataMap, options) {
            var isGenerateWeekDaysHeaderData = options.isGenerateWeekDaysHeaderData,
              cellWidth = options.cellWidth,
              isProvideVirtualCellsWidth = options.isProvideVirtualCellsWidth,
              startDayHour = options.startDayHour,
              endDayHour = options.endDayHour,
              hoursInterval = options.hoursInterval,
              isMonthDateHeader = options.isMonthDateHeader;
            var dataMap = [];
            var weekDayRowConfig = {};
            var validCellWidth = cellWidth || 0;
            if (isGenerateWeekDaysHeaderData) {
              weekDayRowConfig = this._generateDateHeaderDataRow(options, completeDateHeaderMap, completeViewDataMap, this._viewDataGenerator.getCellCountInDay(startDayHour, endDayHour, hoursInterval), 0, validCellWidth);
              dataMap.push(weekDayRowConfig.dateRow);
            }
            var datesRowConfig = this._generateDateHeaderDataRow(options, completeDateHeaderMap, completeViewDataMap, 1, isGenerateWeekDaysHeaderData ? 1 : 0, validCellWidth);
            dataMap.push(datesRowConfig.dateRow);
            return {
              dataMap: dataMap,
              leftVirtualCellWidth: isProvideVirtualCellsWidth ? datesRowConfig.leftVirtualCellWidth : void 0,
              rightVirtualCellWidth: isProvideVirtualCellsWidth ? datesRowConfig.rightVirtualCellWidth : void 0,
              leftVirtualCellCount: datesRowConfig.leftVirtualCellCount,
              rightVirtualCellCount: datesRowConfig.rightVirtualCellCount,
              weekDayLeftVirtualCellWidth: weekDayRowConfig.leftVirtualCellWidth,
              weekDayRightVirtualCellWidth: weekDayRowConfig.rightVirtualCellWidth,
              weekDayLeftVirtualCellCount: weekDayRowConfig.leftVirtualCellCount,
              weekDayRightVirtualCellCount: weekDayRowConfig.rightVirtualCellCount,
              isMonthDateHeader: isMonthDateHeader
            };
          }
        }, {
          key: "_generateDateHeaderDataRow",
          value: function _generateDateHeaderDataRow(options, completeDateHeaderMap, completeViewDataMap, baseColSpan, rowIndex, cellWidth) {
            var startCellIndex = options.startCellIndex,
              cellCount = options.cellCount,
              isProvideVirtualCellsWidth = options.isProvideVirtualCellsWidth,
              groups = options.groups,
              groupOrientation = options.groupOrientation,
              isGroupedByDate = options.isGroupedByDate;
            var horizontalGroupCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getHorizontalGroupCount)(groups, groupOrientation);
            var colSpan = isGroupedByDate ? horizontalGroupCount * baseColSpan : baseColSpan;
            var leftVirtualCellCount = Math.floor(startCellIndex / colSpan);
            var displayedCellCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getDisplayedCellCount)(cellCount, completeViewDataMap);
            var actualCellCount = Math.ceil((startCellIndex + displayedCellCount) / colSpan);
            var totalCellCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getTotalCellCountByCompleteData)(completeViewDataMap);
            var dateRow = completeDateHeaderMap[rowIndex].slice(leftVirtualCellCount, actualCellCount);
            var finalLeftVirtualCellCount = leftVirtualCellCount * colSpan;
            var finalLeftVirtualCellWidth = finalLeftVirtualCellCount * cellWidth;
            var finalRightVirtualCellCount = totalCellCount - actualCellCount * colSpan;
            var finalRightVirtualCellWidth = finalRightVirtualCellCount * cellWidth;
            return {
              dateRow: dateRow,
              leftVirtualCellCount: finalLeftVirtualCellCount,
              leftVirtualCellWidth: isProvideVirtualCellsWidth ? finalLeftVirtualCellWidth : void 0,
              rightVirtualCellCount: finalRightVirtualCellCount,
              rightVirtualCellWidth: isProvideVirtualCellsWidth ? finalRightVirtualCellWidth : void 0
            };
          }
        }]);
        return _DateHeaderDataGenerator;
      }();
      /***/
    }),
    /***/80443: (
    /*!***************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_grouped_data_map_provider.js ***!
      \***************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"GroupedDataMapProvider": function GroupedDataMapProvider() {
          return /* binding */_GroupedDataMapProvider;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_grouped_data_map_provider.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _GroupedDataMapProvider = /*#__PURE__*/function () {
        function _GroupedDataMapProvider(viewDataGenerator, viewDataMap, completeViewDataMap, viewOptions) {
          _classCallCheck(this, _GroupedDataMapProvider);
          this.groupedDataMap = viewDataGenerator.generateGroupedDataMap(viewDataMap);
          this.completeViewDataMap = completeViewDataMap;
          this._viewOptions = viewOptions;
        }
        _createClass(_GroupedDataMapProvider, [{
          key: "getGroupStartDate",
          value: function getGroupStartDate(groupIndex) {
            var firstRow = this.getFirstGroupRow(groupIndex);
            if (firstRow) {
              var startDate = firstRow[0].cellData.startDate;
              return startDate;
            }
          }
        }, {
          key: "getGroupEndDate",
          value: function getGroupEndDate(groupIndex) {
            var lastRow = this.getLastGroupRow(groupIndex);
            if (lastRow) {
              var lastColumnIndex = lastRow.length - 1;
              var cellData = lastRow[lastColumnIndex].cellData;
              var endDate = cellData.endDate;
              return endDate;
            }
          }
        }, {
          key: "findGroupCellStartDate",
          value: function findGroupCellStartDate(groupIndex, startDate, endDate, isFindByDate) {
            var groupData = this.getGroupFromDateTableGroupMap(groupIndex);
            var checkCellStartDate = function checkCellStartDate(rowIndex, columnIndex) {
              var cellData = groupData[rowIndex][columnIndex].cellData;
              var secondMin = cellData.startDate,
                secondMax = cellData.endDate;
              if (isFindByDate) {
                secondMin = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(secondMin);
                secondMax = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].setToDayEnd(secondMin);
              }
              if (_core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].intervalsOverlap({
                firstMin: startDate,
                firstMax: endDate,
                secondMin: secondMin,
                secondMax: secondMax
              })) {
                return secondMin;
              }
            };
            var startDateVerticalSearch = function () {
              var cellCount = groupData[0].length;
              for (var columnIndex = 0; columnIndex < cellCount; ++columnIndex) {
                for (var rowIndex = 0; rowIndex < groupData.length; ++rowIndex) {
                  var result = checkCellStartDate(rowIndex, columnIndex);
                  if (result) {
                    return result;
                  }
                }
              }
            }();
            var startDateHorizontalSearch = function () {
              for (var rowIndex = 0; rowIndex < groupData.length; ++rowIndex) {
                var row = groupData[rowIndex];
                for (var columnIndex = 0; columnIndex < row.length; ++columnIndex) {
                  var result = checkCellStartDate(rowIndex, columnIndex);
                  if (result) {
                    return result;
                  }
                }
              }
            }();
            return startDateVerticalSearch > startDateHorizontalSearch ? startDateHorizontalSearch : startDateVerticalSearch;
          }
        }, {
          key: "findAllDayGroupCellStartDate",
          value: function findAllDayGroupCellStartDate(groupIndex, startDate) {
            var groupStartDate = this.getGroupStartDate(groupIndex);
            return groupStartDate > startDate ? groupStartDate : startDate;
          }
        }, {
          key: "findCellPositionInMap",
          value: function findCellPositionInMap(cellInfo) {
            var _this162 = this;
            var groupIndex = cellInfo.groupIndex,
              startDate = cellInfo.startDate,
              isAllDay = cellInfo.isAllDay,
              index = cellInfo.index;
            var startTime = isAllDay ? _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(startDate).getTime() : startDate.getTime();
            var isStartDateInCell = function isStartDateInCell(cellData) {
              if (!(0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__.isDateAndTimeView)(_this162._viewOptions.viewType)) {
                return _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].sameDate(startDate, cellData.startDate);
              }
              var cellStartTime = cellData.startDate.getTime();
              var cellEndTime = cellData.endDate.getTime();
              return isAllDay ? cellData.allDay && startTime >= cellStartTime && startTime <= cellEndTime : startTime >= cellStartTime && startTime < cellEndTime;
            };
            var _this$groupedDataMap = this.groupedDataMap,
              allDayPanelGroupedMap = _this$groupedDataMap.allDayPanelGroupedMap,
              dateTableGroupedMap = _this$groupedDataMap.dateTableGroupedMap;
            var rows = isAllDay && !this._viewOptions.isVerticalGrouping ? allDayPanelGroupedMap[groupIndex] ? [allDayPanelGroupedMap[groupIndex]] : [] : dateTableGroupedMap[groupIndex] || [];
            for (var rowIndex = 0; rowIndex < rows.length; ++rowIndex) {
              var row = rows[rowIndex];
              for (var columnIndex = 0; columnIndex < row.length; ++columnIndex) {
                var cell = row[columnIndex];
                var _cell = cell,
                  cellData = _cell.cellData;
                if (this._isSameGroupIndexAndIndex(cellData, groupIndex, index)) {
                  if (isStartDateInCell(cellData)) {
                    return cell.position;
                  }
                }
              }
            }
            return;
          }
        }, {
          key: "_isSameGroupIndexAndIndex",
          value: function _isSameGroupIndexAndIndex(cellData, groupIndex, index) {
            return cellData.groupIndex === groupIndex && (void 0 === index || cellData.index === index);
          }
        }, {
          key: "getCellsGroup",
          value: function getCellsGroup(groupIndex) {
            var dateTableGroupedMap = this.groupedDataMap.dateTableGroupedMap;
            var groupData = dateTableGroupedMap[groupIndex];
            if (groupData) {
              var cellData = groupData[0][0].cellData;
              return cellData.groups;
            }
          }
        }, {
          key: "getCompletedGroupsInfo",
          value: function getCompletedGroupsInfo() {
            var _this163 = this;
            var dateTableGroupedMap = this.groupedDataMap.dateTableGroupedMap;
            return dateTableGroupedMap.map(function (groupData) {
              var firstCell = groupData[0][0];
              var _firstCell$cellData = firstCell.cellData,
                allDay = _firstCell$cellData.allDay,
                groupIndex = _firstCell$cellData.groupIndex;
              return {
                allDay: allDay,
                groupIndex: groupIndex,
                startDate: _this163.getGroupStartDate(groupIndex),
                endDate: _this163.getGroupEndDate(groupIndex)
              };
            }).filter(function (_ref) {
              var startDate = _ref.startDate;
              return !!startDate;
            });
          }
        }, {
          key: "getGroupIndices",
          value: function getGroupIndices() {
            return this.getCompletedGroupsInfo().map(function (_ref2) {
              var groupIndex = _ref2.groupIndex;
              return groupIndex;
            });
          }
        }, {
          key: "getGroupFromDateTableGroupMap",
          value: function getGroupFromDateTableGroupMap(groupIndex) {
            var dateTableGroupedMap = this.groupedDataMap.dateTableGroupedMap;
            return dateTableGroupedMap[groupIndex];
          }
        }, {
          key: "getFirstGroupRow",
          value: function getFirstGroupRow(groupIndex) {
            var groupedData = this.getGroupFromDateTableGroupMap(groupIndex);
            if (groupedData) {
              var cellData = groupedData[0][0].cellData;
              return !cellData.allDay ? groupedData[0] : groupedData[1];
            }
          }
        }, {
          key: "getLastGroupRow",
          value: function getLastGroupRow(groupIndex) {
            var dateTableGroupedMap = this.groupedDataMap.dateTableGroupedMap;
            var groupedData = dateTableGroupedMap[groupIndex];
            if (groupedData) {
              var lastRowIndex = groupedData.length - 1;
              return groupedData[lastRowIndex];
            }
          }
        }, {
          key: "getLastGroupCellPosition",
          value: function getLastGroupCellPosition(groupIndex) {
            var groupRow = this.getLastGroupRow(groupIndex);
            return null === groupRow || void 0 === groupRow ? void 0 : groupRow[(null === groupRow || void 0 === groupRow ? void 0 : groupRow.length) - 1].position;
          }
        }, {
          key: "getRowCountInGroup",
          value: function getRowCountInGroup(groupIndex) {
            var groupRow = this.getLastGroupRow(groupIndex);
            var cellAmount = groupRow.length;
            var lastCellData = groupRow[cellAmount - 1].cellData;
            var lastCellIndex = lastCellData.index;
            return (lastCellIndex + 1) / groupRow.length;
          }
        }]);
        return _GroupedDataMapProvider;
      }();
      /***/
    }),
    /***/74065: (
    /*!***************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_time_panel_data_generator.js ***!
      \***************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"TimePanelDataGenerator": function TimePanelDataGenerator() {
          return /* binding */_TimePanelDataGenerator;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/week */12871);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/workspaces/utils */59016);
      /* harmony import */
      var _core_utils_math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/utils/math */5946);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_time_panel_data_generator.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var __rest = undefined && undefined.__rest || function (s, e) {
        var t = {};
        for (var p in s) {
          if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) {
            t[p] = s[p];
          }
        }
        if (null != s && "function" === typeof Object.getOwnPropertySymbols) {
          var i = 0;
          for (p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) {
              t[p[i]] = s[p[i]];
            }
          }
        }
        return t;
      };
      var toMs = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds;
      var _TimePanelDataGenerator = /*#__PURE__*/function () {
        function _TimePanelDataGenerator(_viewDataGenerator) {
          _classCallCheck(this, _TimePanelDataGenerator);
          this._viewDataGenerator = _viewDataGenerator;
        }
        _createClass(_TimePanelDataGenerator, [{
          key: "getCompleteTimePanelMap",
          value: function getCompleteTimePanelMap(options, completeViewDataMap) {
            var _this164 = this;
            var startViewDate = options.startViewDate,
              cellDuration = options.cellDuration,
              startDayHour = options.startDayHour,
              isVerticalGrouping = options.isVerticalGrouping,
              intervalCount = options.intervalCount,
              currentDate = options.currentDate,
              viewType = options.viewType,
              hoursInterval = options.hoursInterval,
              endDayHour = options.endDayHour,
              viewOffset = options.viewOffset,
              today = options.today,
              showCurrentTimeIndicator = options.showCurrentTimeIndicator;
            var rowsCount = completeViewDataMap.length - 1;
            var realEndViewDate = completeViewDataMap[rowsCount][completeViewDataMap[rowsCount].length - 1].endDate;
            var rowCountInGroup = this._viewDataGenerator.getRowCount({
              intervalCount: intervalCount,
              currentDate: currentDate,
              viewType: viewType,
              hoursInterval: hoursInterval,
              startDayHour: startDayHour,
              endDayHour: endDayHour
            });
            var cellCountInGroupRow = this._viewDataGenerator.getCellCount({
              intervalCount: intervalCount,
              currentDate: currentDate,
              viewType: viewType,
              hoursInterval: hoursInterval,
              startDayHour: startDayHour,
              endDayHour: endDayHour
            });
            var allDayRowsCount = 0;
            var usualCellIndex = 0;
            return completeViewDataMap.map(function (row, index) {
              var _a = row[0],
                allDay = _a.allDay,
                startDate = _a.startDate,
                endDate = _a.endDate,
                groups = _a.groups,
                groupIndex = _a.groupIndex,
                isFirstGroupCell = _a.isFirstGroupCell,
                isLastGroupCell = _a.isLastGroupCell,
                cellIndex = _a.index,
                restCellProps = __rest(_a, ["allDay", "startDate", "endDate", "groups", "groupIndex", "isFirstGroupCell", "isLastGroupCell", "index"]);
              var highlighted = allDay ? false : _this164.isTimeCellShouldBeHighlighted(today, viewOffset, {
                startViewDate: startViewDate,
                realEndViewDate: realEndViewDate,
                showCurrentTimeIndicator: showCurrentTimeIndicator
              }, {
                date: startDate,
                index: usualCellIndex,
                duration: Math.round(cellDuration),
                isFirst: 0 === usualCellIndex,
                isLast: _this164.isLastCellInGroup(completeViewDataMap, index)
              });
              if (allDay) {
                allDayRowsCount += 1;
                usualCellIndex = 0;
              } else {
                usualCellIndex += 1;
              }
              var timeIndex = (index - allDayRowsCount) % rowCountInGroup;
              return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, restCellProps), {
                startDate: startDate,
                allDay: allDay,
                highlighted: highlighted,
                text: (0, _renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_3__.getTimePanelCellText)(timeIndex, startDate, startViewDate, cellDuration, startDayHour),
                groups: isVerticalGrouping ? groups : void 0,
                groupIndex: isVerticalGrouping ? groupIndex : void 0,
                isFirstGroupCell: isVerticalGrouping && isFirstGroupCell,
                isLastGroupCell: isVerticalGrouping && isLastGroupCell,
                index: Math.floor(cellIndex / cellCountInGroupRow)
              });
            });
          }
        }, {
          key: "generateTimePanelData",
          value: function generateTimePanelData(completeTimePanelMap, options) {
            var startRowIndex = options.startRowIndex,
              rowCount = options.rowCount,
              topVirtualRowHeight = options.topVirtualRowHeight,
              bottomVirtualRowHeight = options.bottomVirtualRowHeight,
              isGroupedAllDayPanel = options.isGroupedAllDayPanel,
              isVerticalGrouping = options.isVerticalGrouping,
              isAllDayPanelVisible = options.isAllDayPanelVisible;
            var indexDifference = isVerticalGrouping || !isAllDayPanelVisible ? 0 : 1;
            var correctedStartRowIndex = startRowIndex + indexDifference;
            var displayedRowCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getDisplayedRowCount)(rowCount, completeTimePanelMap);
            var timePanelMap = completeTimePanelMap.slice(correctedStartRowIndex, correctedStartRowIndex + displayedRowCount);
            var timePanelData = {
              topVirtualRowHeight: topVirtualRowHeight,
              bottomVirtualRowHeight: bottomVirtualRowHeight,
              isGroupedAllDayPanel: isGroupedAllDayPanel
            };
            var _this$_generateTimePa = this._generateTimePanelDataFromMap(timePanelMap, isVerticalGrouping),
              groupedData = _this$_generateTimePa.previousGroupedData;
            timePanelData.groupedData = groupedData;
            return timePanelData;
          }
        }, {
          key: "_generateTimePanelDataFromMap",
          value: function _generateTimePanelDataFromMap(timePanelMap, isVerticalGrouping) {
            return timePanelMap.reduce(function (_ref, cellData) {
              var previousGroupIndex = _ref.previousGroupIndex,
                previousGroupedData = _ref.previousGroupedData;
              var currentGroupIndex = cellData.groupIndex;
              if (currentGroupIndex !== previousGroupIndex) {
                previousGroupedData.push({
                  dateTable: [],
                  isGroupedAllDayPanel: (0, _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__.getIsGroupedAllDayPanel)(!!cellData.allDay, isVerticalGrouping),
                  groupIndex: currentGroupIndex,
                  key: (0, _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__.getKeyByGroup)(currentGroupIndex, isVerticalGrouping)
                });
              }
              if (cellData.allDay) {
                previousGroupedData[previousGroupedData.length - 1].allDayPanel = cellData;
              } else {
                previousGroupedData[previousGroupedData.length - 1].dateTable.push(cellData);
              }
              return {
                previousGroupIndex: currentGroupIndex,
                previousGroupedData: previousGroupedData
              };
            }, {
              previousGroupIndex: -1,
              previousGroupedData: []
            });
          }
        }, {
          key: "isTimeCellShouldBeHighlighted",
          value: function isTimeCellShouldBeHighlighted(today, viewOffset, _ref2, cellData) {
            var startViewDate = _ref2.startViewDate,
              realEndViewDate = _ref2.realEndViewDate,
              showCurrentTimeIndicator = _ref2.showCurrentTimeIndicator;
            if (!showCurrentTimeIndicator || today < startViewDate || today >= realEndViewDate) {
              return false;
            }
            var realTodayTimeMs = this.getLocalDateTimeInMs(today);
            var _this$getHighlightedI = this.getHighlightedInterval(cellData),
              _this$getHighlightedI2 = _slicedToArray(_this$getHighlightedI, 2),
              startMs = _this$getHighlightedI2[0],
              endMs = _this$getHighlightedI2[1];
            return realTodayTimeMs >= startMs && realTodayTimeMs < endMs;
          }
        }, {
          key: "getHighlightedInterval",
          value: function getHighlightedInterval(_ref3) {
            var date = _ref3.date,
              index = _ref3.index,
              duration = _ref3.duration,
              isFirst = _ref3.isFirst,
              isLast = _ref3.isLast;
            var cellTimeMs = this.getLocalDateTimeInMs(date);
            var isEvenCell = index % 2 === 0;
            switch (true) {
              case isFirst || isLast && !isEvenCell:
                return [cellTimeMs, cellTimeMs + duration];
              case isEvenCell:
                return [cellTimeMs - duration, cellTimeMs + duration];
              default:
                return [cellTimeMs, cellTimeMs + 2 * duration];
            }
          }
        }, {
          key: "getLocalDateTimeInMs",
          value: function getLocalDateTimeInMs(date) {
            var dateUtcMs = date.getTime() - date.getTimezoneOffset() * toMs("minute");
            return (0, _core_utils_math__WEBPACK_IMPORTED_MODULE_5__.shiftIntegerByModule)(dateUtcMs, toMs("day"));
          }
        }, {
          key: "isLastCellInGroup",
          value: function isLastCellInGroup(completeViewDataMap, index) {
            if (index === completeViewDataMap.length - 1) {
              return true;
            }
            var currentGroupIndex = completeViewDataMap[index][0].groupIndex;
            var _completeViewDataMap$ = completeViewDataMap[index + 1][0],
              nextGroupIndex = _completeViewDataMap$.groupIndex,
              nextAllDay = _completeViewDataMap$.allDay;
            return nextAllDay || nextGroupIndex !== currentGroupIndex;
          }
        }]);
        return _TimePanelDataGenerator;
      }();
      /***/
    }),
    /***/73098: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_utils.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getViewDataGeneratorByViewType": function getViewDataGeneratorByViewType() {
          return /* binding */_getViewDataGeneratorByViewType;
        },
        /* harmony export */"alignToFirstDayOfWeek": function alignToFirstDayOfWeek() {
          return /* binding */_alignToFirstDayOfWeek;
        },
        /* harmony export */"alignToLastDayOfWeek": function alignToLastDayOfWeek() {
          return /* binding */_alignToLastDayOfWeek;
        },
        /* harmony export */"calculateDaysBetweenDates": function calculateDaysBetweenDates() {
          return /* binding */_calculateDaysBetweenDates;
        },
        /* harmony export */"calculateAlignedWeeksBetweenDates": function calculateAlignedWeeksBetweenDates() {
          return /* binding */_calculateAlignedWeeksBetweenDates;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../m_constants */19107);
      /* harmony import */
      var _m_view_data_generator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./m_view_data_generator */58711);
      /* harmony import */
      var _m_view_data_generator_day__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./m_view_data_generator_day */83630);
      /* harmony import */
      var _m_view_data_generator_month__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./m_view_data_generator_month */1658);
      /* harmony import */
      var _m_view_data_generator_timeline_month__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./m_view_data_generator_timeline_month */20544);
      /* harmony import */
      var _m_view_data_generator_week__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./m_view_data_generator_week */23882);
      /* harmony import */
      var _m_view_data_generator_work_week__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./m_view_data_generator_work_week */97662);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DAYS_IN_WEEK = 7;
      var MS_IN_DAY = 864e5;
      var _getViewDataGeneratorByViewType = function _getViewDataGeneratorByViewType(viewType) {
        switch (viewType) {
          case _m_constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.MONTH:
            return new _m_view_data_generator_month__WEBPACK_IMPORTED_MODULE_4__.ViewDataGeneratorMonth();
          case _m_constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_MONTH:
            return new _m_view_data_generator_timeline_month__WEBPACK_IMPORTED_MODULE_5__.ViewDataGeneratorTimelineMonth();
          case _m_constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.DAY:
          case _m_constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_DAY:
            return new _m_view_data_generator_day__WEBPACK_IMPORTED_MODULE_3__.ViewDataGeneratorDay();
          case _m_constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.WEEK:
          case _m_constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_WEEK:
            return new _m_view_data_generator_week__WEBPACK_IMPORTED_MODULE_6__.ViewDataGeneratorWeek();
          case _m_constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.WORK_WEEK:
          case _m_constants__WEBPACK_IMPORTED_MODULE_1__.VIEWS.TIMELINE_WORK_WEEK:
            return new _m_view_data_generator_work_week__WEBPACK_IMPORTED_MODULE_7__.ViewDataGeneratorWorkWeek();
          default:
            return new _m_view_data_generator__WEBPACK_IMPORTED_MODULE_2__.ViewDataGenerator();
        }
      };
      function _alignToFirstDayOfWeek(date, firstDayOfWeek) {
        var newDate = new Date(date);
        var dayDiff = newDate.getDay() - firstDayOfWeek;
        if (dayDiff < 0) {
          dayDiff += DAYS_IN_WEEK;
        }
        newDate.setDate(newDate.getDate() - dayDiff);
        return newDate;
      }
      function _alignToLastDayOfWeek(date, firstDayOfWeek) {
        var newDate = _alignToFirstDayOfWeek(date, firstDayOfWeek);
        newDate.setDate(newDate.getDate() + DAYS_IN_WEEK - 1);
        return newDate;
      }
      function _calculateDaysBetweenDates(fromDate, toDate) {
        var msDiff = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(toDate).getTime() - _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(fromDate).getTime();
        return Math.round(msDiff / MS_IN_DAY) + 1;
      }
      function _calculateAlignedWeeksBetweenDates(fromDate, toDate, firstDayOfWeek) {
        var alignedFromDate = _alignToFirstDayOfWeek(fromDate, firstDayOfWeek);
        var alignedToDate = _alignToLastDayOfWeek(toDate, firstDayOfWeek);
        var weekCount = _calculateDaysBetweenDates(alignedFromDate, alignedToDate) / DAYS_IN_WEEK;
        return Math.max(weekCount, 6);
      }

      /***/
    }),
    /***/58711: (
    /*!*********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_view_data_generator.js ***!
      \*********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"ViewDataGenerator": function ViewDataGenerator() {
          return /* binding */_ViewDataGenerator;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/workspaces/utils */59016);
      /* harmony import */
      var _m_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../m_constants */19107);
      /* harmony import */
      var _resources_m_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../resources/m_utils */48025);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_view_data_generator.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var HOUR_MS = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("hour");
      var DAY_MS = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("day");
      var _ViewDataGenerator = /*#__PURE__*/function () {
        function _ViewDataGenerator() {
          _classCallCheck(this, _ViewDataGenerator);
          this.daysInInterval = 1;
          this.isWorkView = false;
          this.tableAllDay = false;
        }
        _createClass(_ViewDataGenerator, [{
          key: "isSkippedDate",
          value: function isSkippedDate(date) {
            return false;
          }
        }, {
          key: "_calculateStartViewDate",
          value: function _calculateStartViewDate(options) {}
        }, {
          key: "getStartViewDate",
          value: function getStartViewDate(options) {
            return this._calculateStartViewDate(options);
          }
        }, {
          key: "getCompleteViewDataMap",
          value: function getCompleteViewDataMap(options) {
            var _viewDataMap;
            var groups = options.groups,
              isGroupedByDate = options.isGroupedByDate,
              isHorizontalGrouping = options.isHorizontalGrouping,
              isVerticalGrouping = options.isVerticalGrouping,
              intervalCount = options.intervalCount,
              currentDate = options.currentDate,
              viewType = options.viewType,
              startDayHour = options.startDayHour,
              endDayHour = options.endDayHour,
              hoursInterval = options.hoursInterval;
            this._setVisibilityDates(options);
            this.setHiddenInterval(startDayHour, endDayHour, hoursInterval);
            var groupsList = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_5__.getAllGroups)(groups);
            var cellCountInGroupRow = this.getCellCount({
              intervalCount: intervalCount,
              currentDate: currentDate,
              viewType: viewType,
              startDayHour: startDayHour,
              endDayHour: endDayHour,
              hoursInterval: hoursInterval
            });
            var rowCountInGroup = this.getRowCount({
              intervalCount: intervalCount,
              currentDate: currentDate,
              viewType: viewType,
              hoursInterval: hoursInterval,
              startDayHour: startDayHour,
              endDayHour: endDayHour
            });
            var viewDataMap = [];
            var allDayPanelData = this._generateAllDayPanelData(options, rowCountInGroup, cellCountInGroupRow);
            var viewCellsData = this._generateViewCellsData(options, rowCountInGroup, cellCountInGroupRow);
            allDayPanelData && viewDataMap.push(allDayPanelData);
            (_viewDataMap = viewDataMap).push.apply(_viewDataMap, _toConsumableArray(viewCellsData));
            if (isHorizontalGrouping && !isGroupedByDate) {
              viewDataMap = this._transformViewDataMapForHorizontalGrouping(viewDataMap, groupsList);
            }
            if (isVerticalGrouping) {
              viewDataMap = this._transformViewDataMapForVerticalGrouping(viewDataMap, groupsList);
            }
            if (isGroupedByDate) {
              viewDataMap = this._transformViewDataMapForGroupingByDate(viewDataMap, groupsList);
            }
            var completeViewDataMap = this._addKeysToCells(viewDataMap);
            return completeViewDataMap;
          }
        }, {
          key: "_transformViewDataMapForHorizontalGrouping",
          value: function _transformViewDataMapForHorizontalGrouping(viewDataMap, groupsList) {
            var result = viewDataMap.map(function (row) {
              return row.slice();
            });
            groupsList.slice(1).forEach(function (groups, index) {
              var groupIndex = index + 1;
              viewDataMap.forEach(function (row, rowIndex) {
                var _result$rowIndex;
                var nextGroupRow = row.map(function (cellData) {
                  return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, cellData), {
                    groups: groups,
                    groupIndex: groupIndex
                  });
                });
                (_result$rowIndex = result[rowIndex]).push.apply(_result$rowIndex, _toConsumableArray(nextGroupRow));
              });
            });
            return result;
          }
        }, {
          key: "_transformViewDataMapForVerticalGrouping",
          value: function _transformViewDataMapForVerticalGrouping(viewDataMap, groupsList) {
            var result = viewDataMap.map(function (row) {
              return row.slice();
            });
            groupsList.slice(1).forEach(function (groups, index) {
              var groupIndex = index + 1;
              var nextGroupMap = viewDataMap.map(function (cellsRow) {
                var nextRow = cellsRow.map(function (cellData) {
                  return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, cellData), {
                    groupIndex: groupIndex,
                    groups: groups
                  });
                });
                return nextRow;
              });
              result.push.apply(result, _toConsumableArray(nextGroupMap));
            });
            return result;
          }
        }, {
          key: "_transformViewDataMapForGroupingByDate",
          value: function _transformViewDataMapForGroupingByDate(viewDataMap, groupsList) {
            var correctedGroupList = groupsList.slice(1);
            var correctedGroupCount = correctedGroupList.length;
            var result = viewDataMap.map(function (cellsRow) {
              var groupedByDateCellsRow = cellsRow.reduce(function (currentRow, cell) {
                var rowWithCurrentCell = [].concat(_toConsumableArray(currentRow), [(0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, cell), {
                  isFirstGroupCell: true,
                  isLastGroupCell: 0 === correctedGroupCount
                })], _toConsumableArray(correctedGroupList.map(function (groups, index) {
                  return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, cell), {
                    groups: groups,
                    groupIndex: index + 1,
                    isFirstGroupCell: false,
                    isLastGroupCell: index === correctedGroupCount - 1
                  });
                })));
                return rowWithCurrentCell;
              }, []);
              return groupedByDateCellsRow;
            });
            return result;
          }
        }, {
          key: "_addKeysToCells",
          value: function _addKeysToCells(viewDataMap) {
            var totalColumnCount = viewDataMap[0].length;
            var _viewDataMap$reduce = viewDataMap.reduce(function (_ref, row, rowIndex) {
                var allDayPanelsCount = _ref.allDayPanelsCount,
                  currentViewDataMap = _ref.currentViewDataMap;
                var isAllDay = row[0].allDay;
                var keyBase = (rowIndex - allDayPanelsCount) * totalColumnCount;
                var currentAllDayPanelsCount = isAllDay ? allDayPanelsCount + 1 : allDayPanelsCount;
                currentViewDataMap[rowIndex].forEach(function (cell, columnIndex) {
                  cell.key = keyBase + columnIndex;
                });
                return {
                  allDayPanelsCount: currentAllDayPanelsCount,
                  currentViewDataMap: currentViewDataMap
                };
              }, {
                allDayPanelsCount: 0,
                currentViewDataMap: viewDataMap
              }),
              result = _viewDataMap$reduce.currentViewDataMap;
            return result;
          }
        }, {
          key: "generateViewDataMap",
          value: function generateViewDataMap(completeViewDataMap, options) {
            var rowCount = options.rowCount,
              startCellIndex = options.startCellIndex,
              startRowIndex = options.startRowIndex,
              cellCount = options.cellCount,
              isVerticalGrouping = options.isVerticalGrouping,
              isAllDayPanelVisible = options.isAllDayPanelVisible;
            var sliceCells = function sliceCells(row, rowIndex, startIndex, count) {
              var sliceToIndex = void 0 !== count ? startIndex + count : void 0;
              return row.slice(startIndex, sliceToIndex).map(function (cellData, columnIndex) {
                return {
                  cellData: cellData,
                  position: {
                    rowIndex: rowIndex,
                    columnIndex: columnIndex
                  }
                };
              });
            };
            var correctedStartRowIndex = startRowIndex;
            var allDayPanelMap = [];
            if (this._isStandaloneAllDayPanel(isVerticalGrouping, isAllDayPanelVisible)) {
              correctedStartRowIndex++;
              allDayPanelMap = sliceCells(completeViewDataMap[0], 0, startCellIndex, cellCount);
            }
            var displayedRowCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getDisplayedRowCount)(rowCount, completeViewDataMap);
            var dateTableMap = completeViewDataMap.slice(correctedStartRowIndex, correctedStartRowIndex + displayedRowCount).map(function (row, rowIndex) {
              return sliceCells(row, rowIndex, startCellIndex, cellCount);
            });
            return {
              allDayPanelMap: allDayPanelMap,
              dateTableMap: dateTableMap
            };
          }
        }, {
          key: "_isStandaloneAllDayPanel",
          value: function _isStandaloneAllDayPanel(isVerticalGrouping, isAllDayPanelVisible) {
            return !isVerticalGrouping && isAllDayPanelVisible;
          }
        }, {
          key: "getViewDataFromMap",
          value: function getViewDataFromMap(completeViewDataMap, viewDataMap, options) {
            var topVirtualRowHeight = options.topVirtualRowHeight,
              bottomVirtualRowHeight = options.bottomVirtualRowHeight,
              leftVirtualCellWidth = options.leftVirtualCellWidth,
              rightVirtualCellWidth = options.rightVirtualCellWidth,
              cellCount = options.cellCount,
              rowCount = options.rowCount,
              startRowIndex = options.startRowIndex,
              startCellIndex = options.startCellIndex,
              isProvideVirtualCellsWidth = options.isProvideVirtualCellsWidth,
              isGroupedAllDayPanel = options.isGroupedAllDayPanel,
              isVerticalGrouping = options.isVerticalGrouping,
              isAllDayPanelVisible = options.isAllDayPanelVisible;
            var allDayPanelMap = viewDataMap.allDayPanelMap,
              dateTableMap = viewDataMap.dateTableMap;
            var _dateTableMap$reduce = dateTableMap.reduce(function (_ref2, cellsRow) {
                var previousGroupIndex = _ref2.previousGroupIndex,
                  groupedData = _ref2.groupedData;
                var cellDataRow = cellsRow.map(function (_ref3) {
                  var cellData = _ref3.cellData;
                  return cellData;
                });
                var firstCell = cellDataRow[0];
                var isAllDayRow = firstCell.allDay;
                var currentGroupIndex = firstCell.groupIndex;
                if (currentGroupIndex !== previousGroupIndex) {
                  groupedData.push({
                    dateTable: [],
                    isGroupedAllDayPanel: (0, _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_3__.getIsGroupedAllDayPanel)(!!isAllDayRow, isVerticalGrouping),
                    groupIndex: currentGroupIndex,
                    key: (0, _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_3__.getKeyByGroup)(currentGroupIndex, isVerticalGrouping)
                  });
                }
                if (isAllDayRow) {
                  groupedData[groupedData.length - 1].allDayPanel = cellDataRow;
                } else {
                  groupedData[groupedData.length - 1].dateTable.push({
                    cells: cellDataRow,
                    key: cellDataRow[0].key - startCellIndex
                  });
                }
                return {
                  groupedData: groupedData,
                  previousGroupIndex: currentGroupIndex
                };
              }, {
                previousGroupIndex: -1,
                groupedData: []
              }),
              groupedData = _dateTableMap$reduce.groupedData;
            if (this._isStandaloneAllDayPanel(isVerticalGrouping, isAllDayPanelVisible)) {
              groupedData[0].allDayPanel = allDayPanelMap.map(function (_ref4) {
                var cellData = _ref4.cellData;
                return cellData;
              });
            }
            var totalCellCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getTotalCellCountByCompleteData)(completeViewDataMap);
            var totalRowCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getTotalRowCountByCompleteData)(completeViewDataMap);
            var displayedCellCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getDisplayedCellCount)(cellCount, completeViewDataMap);
            var displayedRowCount = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getDisplayedRowCount)(rowCount, completeViewDataMap);
            return {
              groupedData: groupedData,
              topVirtualRowHeight: topVirtualRowHeight,
              bottomVirtualRowHeight: bottomVirtualRowHeight,
              leftVirtualCellWidth: isProvideVirtualCellsWidth ? leftVirtualCellWidth : void 0,
              rightVirtualCellWidth: isProvideVirtualCellsWidth ? rightVirtualCellWidth : void 0,
              isGroupedAllDayPanel: isGroupedAllDayPanel,
              leftVirtualCellCount: startCellIndex,
              rightVirtualCellCount: void 0 === cellCount ? 0 : totalCellCount - startCellIndex - displayedCellCount,
              topVirtualRowCount: startRowIndex,
              bottomVirtualRowCount: totalRowCount - startRowIndex - displayedRowCount
            };
          }
        }, {
          key: "_generateViewCellsData",
          value: function _generateViewCellsData(options, rowCount, cellCountInGroupRow) {
            var viewCellsData = [];
            for (var rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {
              viewCellsData.push(this._generateCellsRow(options, false, rowIndex, rowCount, cellCountInGroupRow));
            }
            return viewCellsData;
          }
        }, {
          key: "_generateAllDayPanelData",
          value: function _generateAllDayPanelData(options, rowCount, columnCount) {
            if (!options.isAllDayPanelVisible) {
              return null;
            }
            return this._generateCellsRow(options, true, 0, rowCount, columnCount);
          }
        }, {
          key: "_generateCellsRow",
          value: function _generateCellsRow(options, allDay, rowIndex, rowCount, columnCount) {
            var cellsRow = [];
            for (var columnIndex = 0; columnIndex < columnCount; ++columnIndex) {
              var cellDataValue = this.getCellData(rowIndex, columnIndex, options, allDay);
              cellDataValue.index = rowIndex * columnCount + columnIndex;
              cellDataValue.isFirstGroupCell = this._isFirstGroupCell(rowIndex, columnIndex, options, rowCount, columnCount);
              cellDataValue.isLastGroupCell = this._isLastGroupCell(rowIndex, columnIndex, options, rowCount, columnCount);
              cellsRow.push(cellDataValue);
            }
            return cellsRow;
          }
        }, {
          key: "getCellData",
          value: function getCellData(rowIndex, columnIndex, options, allDay) {
            return allDay ? this.prepareAllDayCellData(options, rowIndex, columnIndex) : this.prepareCellData(options, rowIndex, columnIndex);
          }
        }, {
          key: "prepareCellData",
          value: function prepareCellData(options, rowIndex, columnIndex) {
            var groups = options.groups,
              startDayHour = options.startDayHour,
              endDayHour = options.endDayHour,
              interval = options.interval,
              hoursInterval = options.hoursInterval;
            var groupsList = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_5__.getAllGroups)(groups);
            var startDate = this.getDateByCellIndices(options, rowIndex, columnIndex, this.getCellCountInDay(startDayHour, endDayHour, hoursInterval));
            var endDate = this.calculateEndDate(startDate, interval, endDayHour);
            var data = {
              startDate: startDate,
              endDate: endDate,
              allDay: this.tableAllDay,
              groupIndex: 0
            };
            if (groupsList.length > 0) {
              data.groups = groupsList[0];
            }
            return data;
          }
        }, {
          key: "prepareAllDayCellData",
          value: function prepareAllDayCellData(options, rowIndex, columnIndex) {
            var data = this.prepareCellData(options, rowIndex, columnIndex);
            var startDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime(data.startDate);
            return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, data), {
              startDate: startDate,
              endDate: startDate,
              allDay: true
            });
          }
        }, {
          key: "getDateByCellIndices",
          value: function getDateByCellIndices(options, rowIndex, columnIndex, cellCountInDay) {
            var startViewDate = options.startViewDate;
            var startDayHour = options.startDayHour,
              interval = options.interval,
              firstDayOfWeek = options.firstDayOfWeek,
              intervalCount = options.intervalCount;
            var isStartViewDateDuringDST = startViewDate.getHours() !== Math.floor(startDayHour);
            if (isStartViewDateDuringDST) {
              var dateWithCorrectHours = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getStartViewDateWithoutDST)(startViewDate, startDayHour);
              startViewDate = new Date(dateWithCorrectHours - _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("day"));
            }
            var columnCountBase = this.getCellCount(options);
            var rowCountBase = this.getRowCount(options);
            var cellIndex = this._calculateCellIndex(rowIndex, columnIndex, rowCountBase, columnCountBase);
            var millisecondsOffset = this.getMillisecondsOffset(cellIndex, interval, cellCountInDay);
            var offsetByCount = this.isWorkView ? this.getTimeOffsetByColumnIndex(columnIndex, this.getFirstDayOfWeek(firstDayOfWeek), columnCountBase, intervalCount) : 0;
            var startViewDateTime = startViewDate.getTime();
            var currentDate = new Date(startViewDateTime + millisecondsOffset + offsetByCount);
            var timeZoneDifference = isStartViewDateDuringDST ? 0 : _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].getTimezonesDifference(startViewDate, currentDate);
            currentDate.setTime(currentDate.getTime() + timeZoneDifference);
            return currentDate;
          }
        }, {
          key: "getMillisecondsOffset",
          value: function getMillisecondsOffset(cellIndex, interval, cellCountInDay) {
            var dayIndex = Math.floor(cellIndex / cellCountInDay);
            var realHiddenInterval = dayIndex * this.hiddenInterval;
            return interval * cellIndex + realHiddenInterval;
          }
        }, {
          key: "getTimeOffsetByColumnIndex",
          value: function getTimeOffsetByColumnIndex(columnIndex, firstDayOfWeek, columnCount, intervalCount) {
            var firstDayOfWeekDiff = Math.max(0, firstDayOfWeek - 1);
            var columnsInWeek = columnCount / intervalCount;
            var weekendCount = Math.floor((columnIndex + firstDayOfWeekDiff) / columnsInWeek);
            return DAY_MS * weekendCount * 2;
          }
        }, {
          key: "calculateEndDate",
          value: function calculateEndDate(startDate, interval, endDayHour) {
            var result = new Date(startDate);
            result.setMilliseconds(result.getMilliseconds() + Math.round(interval));
            return result;
          }
        }, {
          key: "_calculateCellIndex",
          value: function _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCountBase) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.calculateCellIndex)(rowIndex, columnIndex, rowCount);
          }
        }, {
          key: "generateGroupedDataMap",
          value: function generateGroupedDataMap(viewDataMap) {
            var allDayPanelMap = viewDataMap.allDayPanelMap,
              dateTableMap = viewDataMap.dateTableMap;
            var _dateTableMap$reduce2 = dateTableMap.reduce(function (previousOptions, cellsRow) {
                var previousGroupedDataMap = previousOptions.previousGroupedDataMap,
                  previousRowIndex = previousOptions.previousRowIndex,
                  previousGroupIndex = previousOptions.previousGroupIndex;
                var currentGroupIndex = cellsRow[0].cellData.groupIndex;
                var currentRowIndex = currentGroupIndex === previousGroupIndex ? previousRowIndex + 1 : 0;
                cellsRow.forEach(function (cell) {
                  var groupIndex = cell.cellData.groupIndex;
                  if (!previousGroupedDataMap[groupIndex]) {
                    previousGroupedDataMap[groupIndex] = [];
                  }
                  if (!previousGroupedDataMap[groupIndex][currentRowIndex]) {
                    previousGroupedDataMap[groupIndex][currentRowIndex] = [];
                  }
                  previousGroupedDataMap[groupIndex][currentRowIndex].push(cell);
                });
                return {
                  previousGroupedDataMap: previousGroupedDataMap,
                  previousRowIndex: currentRowIndex,
                  previousGroupIndex: currentGroupIndex
                };
              }, {
                previousGroupedDataMap: [],
                previousRowIndex: -1,
                previousGroupIndex: -1
              }),
              dateTableGroupedMap = _dateTableMap$reduce2.previousGroupedDataMap;
            var allDayPanelGroupedMap = [];
            null === allDayPanelMap || void 0 === allDayPanelMap ? void 0 : allDayPanelMap.forEach(function (cell) {
              var groupIndex = cell.cellData.groupIndex;
              if (!allDayPanelGroupedMap[groupIndex]) {
                allDayPanelGroupedMap[groupIndex] = [];
              }
              allDayPanelGroupedMap[groupIndex].push(cell);
            });
            return {
              allDayPanelGroupedMap: allDayPanelGroupedMap,
              dateTableGroupedMap: dateTableGroupedMap
            };
          }
        }, {
          key: "_isFirstGroupCell",
          value: function _isFirstGroupCell(rowIndex, columnIndex, options, rowCount, columnCount) {
            var groupOrientation = options.groupOrientation,
              groups = options.groups,
              isGroupedByDate = options.isGroupedByDate;
            var groupCount = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_5__.getGroupCount)(groups);
            if (isGroupedByDate) {
              return columnIndex % groupCount === 0;
            }
            if (groupOrientation === _m_constants__WEBPACK_IMPORTED_MODULE_4__.HORIZONTAL_GROUP_ORIENTATION) {
              return columnIndex % columnCount === 0;
            }
            return rowIndex % rowCount === 0;
          }
        }, {
          key: "_isLastGroupCell",
          value: function _isLastGroupCell(rowIndex, columnIndex, options, rowCount, columnCount) {
            var groupOrientation = options.groupOrientation,
              groups = options.groups,
              isGroupedByDate = options.isGroupedByDate;
            var groupCount = (0, _resources_m_utils__WEBPACK_IMPORTED_MODULE_5__.getGroupCount)(groups);
            if (isGroupedByDate) {
              return (columnIndex + 1) % groupCount === 0;
            }
            if (groupOrientation === _m_constants__WEBPACK_IMPORTED_MODULE_4__.HORIZONTAL_GROUP_ORIENTATION) {
              return (columnIndex + 1) % columnCount === 0;
            }
            return (rowIndex + 1) % rowCount === 0;
          }
        }, {
          key: "markSelectedAndFocusedCells",
          value: function markSelectedAndFocusedCells(viewDataMap, renderOptions) {
            var _this165 = this;
            var selectedCells = renderOptions.selectedCells,
              focusedCell = renderOptions.focusedCell;
            if (!selectedCells && !focusedCell) {
              return viewDataMap;
            }
            var allDayPanelMap = viewDataMap.allDayPanelMap,
              dateTableMap = viewDataMap.dateTableMap;
            var nextDateTableMap = dateTableMap.map(function (row) {
              return _this165._markSelectedAndFocusedCellsInRow(row, selectedCells, focusedCell);
            });
            var nextAllDayMap = this._markSelectedAndFocusedCellsInRow(allDayPanelMap, selectedCells, focusedCell);
            return {
              allDayPanelMap: nextAllDayMap,
              dateTableMap: nextDateTableMap
            };
          }
        }, {
          key: "_markSelectedAndFocusedCellsInRow",
          value: function _markSelectedAndFocusedCellsInRow(dataRow, selectedCells, focusedCell) {
            return dataRow.map(function (cell) {
              var _cell$cellData = cell.cellData,
                index = _cell$cellData.index,
                groupIndex = _cell$cellData.groupIndex,
                allDay = _cell$cellData.allDay,
                startDate = _cell$cellData.startDate;
              var indexInSelectedCells = selectedCells.findIndex(function (_ref5) {
                var selectedCellIndex = _ref5.index,
                  selectedCellGroupIndex = _ref5.groupIndex,
                  selectedCellAllDay = _ref5.allDay,
                  selectedCellStartDate = _ref5.startDate;
                return groupIndex === selectedCellGroupIndex && (index === selectedCellIndex || void 0 === selectedCellIndex && startDate.getTime() === selectedCellStartDate.getTime()) && !!allDay === !!selectedCellAllDay;
              });
              var isFocused = !!focusedCell && index === focusedCell.cellData.index && groupIndex === focusedCell.cellData.groupIndex && allDay === focusedCell.cellData.allDay;
              if (!isFocused && -1 === indexInSelectedCells) {
                return cell;
              }
              return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, cell), {
                cellData: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, cell.cellData), {
                  isSelected: indexInSelectedCells > -1,
                  isFocused: isFocused
                })
              });
            });
          }
        }, {
          key: "getInterval",
          value: function getInterval(hoursInterval) {
            return hoursInterval * HOUR_MS;
          }
        }, {
          key: "_getIntervalDuration",
          value: function _getIntervalDuration(intervalCount) {
            return _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("day") * intervalCount;
          }
        }, {
          key: "_setVisibilityDates",
          value: function _setVisibilityDates(options) {}
        }, {
          key: "getCellCountInDay",
          value: function getCellCountInDay(startDayHour, endDayHour, hoursInterval) {
            var result = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.calculateDayDuration)(startDayHour, endDayHour) / hoursInterval;
            return Math.ceil(result);
          }
        }, {
          key: "getCellCount",
          value: function getCellCount(options) {
            var intervalCount = options.intervalCount,
              viewType = options.viewType,
              startDayHour = options.startDayHour,
              endDayHour = options.endDayHour,
              hoursInterval = options.hoursInterval;
            var cellCountInDay = this.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
            var columnCountInDay = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.isHorizontalView)(viewType) ? cellCountInDay : 1;
            return this.daysInInterval * intervalCount * columnCountInDay;
          }
        }, {
          key: "getRowCount",
          value: function getRowCount(options) {
            var viewType = options.viewType,
              startDayHour = options.startDayHour,
              endDayHour = options.endDayHour,
              hoursInterval = options.hoursInterval;
            var cellCountInDay = this.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
            var rowCountInDay = !(0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.isHorizontalView)(viewType) ? cellCountInDay : 1;
            return rowCountInDay;
          }
        }, {
          key: "setHiddenInterval",
          value: function setHiddenInterval(startDayHour, endDayHour, hoursInterval) {
            this.hiddenInterval = DAY_MS - this.getVisibleDayDuration(startDayHour, endDayHour, hoursInterval);
          }
        }, {
          key: "getVisibleDayDuration",
          value: function getVisibleDayDuration(startDayHour, endDayHour, hoursInterval) {
            var cellCountInDay = this.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
            return hoursInterval * cellCountInDay * HOUR_MS;
          }
        }, {
          key: "getFirstDayOfWeek",
          value: function getFirstDayOfWeek(firstDayOfWeekOption) {
            return firstDayOfWeekOption;
          }
        }]);
        return _ViewDataGenerator;
      }();
      /***/
    }),
    /***/83630: (
    /*!*************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_view_data_generator_day.js ***!
      \*************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"ViewDataGeneratorDay": function ViewDataGeneratorDay() {
          return /* binding */_ViewDataGeneratorDay;
        }
        /* harmony export */
      });
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_day__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/day */62902);
      /* harmony import */
      var _m_view_data_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./m_view_data_generator */58711);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_view_data_generator_day.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _ViewDataGeneratorDay = /*#__PURE__*/function (_m_view_data_generato) {
        _inherits(_ViewDataGeneratorDay, _m_view_data_generato);
        function _ViewDataGeneratorDay() {
          _classCallCheck(this, _ViewDataGeneratorDay);
          return _callSuper(this, _ViewDataGeneratorDay, arguments);
        }
        _createClass(_ViewDataGeneratorDay, [{
          key: "_calculateStartViewDate",
          value: function _calculateStartViewDate(options) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_day__WEBPACK_IMPORTED_MODULE_0__.calculateStartViewDate)(options.currentDate, options.startDayHour, options.startDate, this._getIntervalDuration(options.intervalCount));
          }
        }]);
        return _ViewDataGeneratorDay;
      }(_m_view_data_generator__WEBPACK_IMPORTED_MODULE_1__.ViewDataGenerator);
      /***/
    }),
    /***/1658: (
    /*!***************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_view_data_generator_month.js ***!
      \***************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"ViewDataGeneratorMonth": function ViewDataGeneratorMonth() {
          return /* binding */_ViewDataGeneratorMonth;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../localization/date */83881);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month */35189);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./m_utils */73098);
      /* harmony import */
      var _m_view_data_generator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./m_view_data_generator */58711);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_view_data_generator_month.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DAY_IN_MILLISECONDS = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds("day");
      var DAYS_IN_WEEK = 7;
      var _ViewDataGeneratorMonth = /*#__PURE__*/function (_m_view_data_generato2) {
        _inherits(_ViewDataGeneratorMonth, _m_view_data_generato2);
        function _ViewDataGeneratorMonth() {
          var _this166;
          _classCallCheck(this, _ViewDataGeneratorMonth);
          _this166 = _callSuper(this, _ViewDataGeneratorMonth, arguments);
          _this166.tableAllDay = void 0;
          return _this166;
        }
        _createClass(_ViewDataGeneratorMonth, [{
          key: "getCellData",
          value: function getCellData(rowIndex, columnIndex, options, allDay) {
            var data = _get(_getPrototypeOf(_ViewDataGeneratorMonth.prototype), "getCellData", this).call(this, rowIndex, columnIndex, options, false);
            var startDate = data.startDate;
            var indicatorTime = options.indicatorTime,
              timeZoneCalculator = options.timeZoneCalculator,
              intervalCount = options.intervalCount;
            data.today = this.isCurrentDate(startDate, indicatorTime, timeZoneCalculator);
            data.otherMonth = this.isOtherMonth(startDate, this._minVisibleDate, this._maxVisibleDate);
            data.firstDayOfMonth = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__.isFirstCellInMonthWithIntervalCount)(startDate, intervalCount);
            data.text = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__.getCellText)(startDate, intervalCount);
            return data;
          }
        }, {
          key: "isCurrentDate",
          value: function isCurrentDate(date, indicatorTime, timeZoneCalculator) {
            return _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].sameDate(date, (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.getToday)(indicatorTime, timeZoneCalculator));
          }
        }, {
          key: "isOtherMonth",
          value: function isOtherMonth(cellDate, minDate, maxDate) {
            return !_core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateInRange(cellDate, minDate, maxDate, "date");
          }
        }, {
          key: "_calculateCellIndex",
          value: function _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__.calculateCellIndex)(rowIndex, columnIndex, rowCount, columnCount);
          }
        }, {
          key: "calculateEndDate",
          value: function calculateEndDate(startDate, interval, endDayHour) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_2__.setOptionHour)(startDate, endDayHour);
          }
        }, {
          key: "getInterval",
          value: function getInterval() {
            return DAY_IN_MILLISECONDS;
          }
        }, {
          key: "_calculateStartViewDate",
          value: function _calculateStartViewDate(options) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__.calculateStartViewDate)(options.currentDate, options.startDayHour, options.startDate, options.intervalCount, this.getFirstDayOfWeek(options.firstDayOfWeek));
          }
        }, {
          key: "_setVisibilityDates",
          value: function _setVisibilityDates(options) {
            var intervalCount = options.intervalCount,
              startDate = options.startDate,
              currentDate = options.currentDate;
            var firstMonthDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].getFirstMonthDate(startDate);
            var viewStart = (0, _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_3__.getViewStartByOptions)(startDate, currentDate, intervalCount, firstMonthDate);
            this._minVisibleDate = new Date(viewStart.setDate(1));
            var nextMonthDate = new Date(viewStart.setMonth(viewStart.getMonth() + intervalCount));
            this._maxVisibleDate = new Date(nextMonthDate.setDate(0));
          }
        }, {
          key: "getCellCount",
          value: function getCellCount() {
            return DAYS_IN_WEEK;
          }
        }, {
          key: "getRowCount",
          value: function getRowCount(options) {
            var _a;
            var startDate = new Date(options.currentDate);
            startDate.setDate(1);
            var endDate = new Date(startDate);
            endDate.setMonth(endDate.getMonth() + options.intervalCount);
            endDate.setDate(0);
            return (0, _m_utils__WEBPACK_IMPORTED_MODULE_4__.calculateAlignedWeeksBetweenDates)(startDate, endDate, null !== (_a = options.firstDayOfWeek) && void 0 !== _a ? _a : _localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].firstDayOfWeekIndex());
          }
        }, {
          key: "getCellCountInDay",
          value: function getCellCountInDay() {
            return 1;
          }
        }, {
          key: "setHiddenInterval",
          value: function setHiddenInterval() {
            this.hiddenInterval = 0;
          }
        }]);
        return _ViewDataGeneratorMonth;
      }(_m_view_data_generator__WEBPACK_IMPORTED_MODULE_5__.ViewDataGenerator);
      /***/
    }),
    /***/20544: (
    /*!************************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_view_data_generator_timeline_month.js ***!
      \************************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"ViewDataGeneratorTimelineMonth": function ViewDataGeneratorTimelineMonth() {
          return /* binding */_ViewDataGeneratorTimelineMonth;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month */35189);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_timeline_month__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month */11377);
      /* harmony import */
      var _m_view_data_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./m_view_data_generator */58711);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_view_data_generator_timeline_month.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DAY_IN_MILLISECONDS = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds("day");
      var _ViewDataGeneratorTimelineMonth = /*#__PURE__*/function (_m_view_data_generato3) {
        _inherits(_ViewDataGeneratorTimelineMonth, _m_view_data_generato3);
        function _ViewDataGeneratorTimelineMonth() {
          _classCallCheck(this, _ViewDataGeneratorTimelineMonth);
          return _callSuper(this, _ViewDataGeneratorTimelineMonth, arguments);
        }
        _createClass(_ViewDataGeneratorTimelineMonth, [{
          key: "_calculateCellIndex",
          value: function _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_month__WEBPACK_IMPORTED_MODULE_2__.calculateCellIndex)(rowIndex, columnIndex, rowCount, columnCount);
          }
        }, {
          key: "calculateEndDate",
          value: function calculateEndDate(startDate, interval, endDayHour) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_1__.setOptionHour)(startDate, endDayHour);
          }
        }, {
          key: "getInterval",
          value: function getInterval() {
            return DAY_IN_MILLISECONDS;
          }
        }, {
          key: "_calculateStartViewDate",
          value: function _calculateStartViewDate(options) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_timeline_month__WEBPACK_IMPORTED_MODULE_3__.calculateStartViewDate)(options.currentDate, options.startDayHour, options.startDate, options.intervalCount);
          }
        }, {
          key: "getCellCount",
          value: function getCellCount(options) {
            var intervalCount = options.intervalCount,
              currentDate = options.currentDate;
            var cellCount = 0;
            for (var i = 1; i <= intervalCount; i++) {
              cellCount += new Date(currentDate.getFullYear(), currentDate.getMonth() + i, 0).getDate();
            }
            return cellCount;
          }
        }, {
          key: "setHiddenInterval",
          value: function setHiddenInterval() {
            this.hiddenInterval = 0;
          }
        }]);
        return _ViewDataGeneratorTimelineMonth;
      }(_m_view_data_generator__WEBPACK_IMPORTED_MODULE_4__.ViewDataGenerator);
      /***/
    }),
    /***/23882: (
    /*!**************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_view_data_generator_week.js ***!
      \**************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"ViewDataGeneratorWeek": function ViewDataGeneratorWeek() {
          return /* binding */_ViewDataGeneratorWeek;
        }
        /* harmony export */
      });
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/week */12871);
      /* harmony import */
      var _m_view_data_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./m_view_data_generator */58711);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_view_data_generator_week.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _ViewDataGeneratorWeek = /*#__PURE__*/function (_m_view_data_generato4) {
        _inherits(_ViewDataGeneratorWeek, _m_view_data_generato4);
        function _ViewDataGeneratorWeek() {
          var _this167;
          _classCallCheck(this, _ViewDataGeneratorWeek);
          _this167 = _callSuper(this, _ViewDataGeneratorWeek, arguments);
          _this167.daysInInterval = 7;
          return _this167;
        }
        _createClass(_ViewDataGeneratorWeek, [{
          key: "_getIntervalDuration",
          value: function _getIntervalDuration(intervalCount) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_0__.getIntervalDuration)(intervalCount);
          }
        }, {
          key: "_calculateStartViewDate",
          value: function _calculateStartViewDate(options) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_week__WEBPACK_IMPORTED_MODULE_0__.calculateStartViewDate)(options.currentDate, options.startDayHour, options.startDate, this._getIntervalDuration(options.intervalCount), this.getFirstDayOfWeek(options.firstDayOfWeek));
          }
        }]);
        return _ViewDataGeneratorWeek;
      }(_m_view_data_generator__WEBPACK_IMPORTED_MODULE_1__.ViewDataGenerator);
      /***/
    }),
    /***/97662: (
    /*!*******************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_view_data_generator_work_week.js ***!
      \*******************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"ViewDataGeneratorWorkWeek": function ViewDataGeneratorWorkWeek() {
          return /* binding */_ViewDataGeneratorWorkWeek;
        }
        /* harmony export */
      });
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/work_week */95984);
      /* harmony import */
      var _m_view_data_generator_week__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./m_view_data_generator_week */23882);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_view_data_generator_work_week.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _ViewDataGeneratorWorkWeek = /*#__PURE__*/function (_m_view_data_generato5) {
        _inherits(_ViewDataGeneratorWorkWeek, _m_view_data_generato5);
        function _ViewDataGeneratorWorkWeek() {
          var _this168;
          _classCallCheck(this, _ViewDataGeneratorWorkWeek);
          _this168 = _callSuper(this, _ViewDataGeneratorWorkWeek, arguments);
          _this168.daysInInterval = 5;
          _this168.isWorkView = true;
          return _this168;
        }
        _createClass(_ViewDataGeneratorWorkWeek, [{
          key: "isSkippedDate",
          value: function isSkippedDate(date) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_0__.isDataOnWeekend)(date);
          }
        }, {
          key: "_calculateStartViewDate",
          value: function _calculateStartViewDate(options) {
            return (0, _renovation_ui_scheduler_view_model_to_test_views_utils_work_week__WEBPACK_IMPORTED_MODULE_0__.calculateStartViewDate)(options.currentDate, options.startDayHour, options.startDate, this._getIntervalDuration(options.intervalCount), this.getFirstDayOfWeek(options.firstDayOfWeek));
          }
        }, {
          key: "getFirstDayOfWeek",
          value: function getFirstDayOfWeek(firstDayOfWeekOption) {
            return firstDayOfWeekOption || 0;
          }
        }]);
        return _ViewDataGeneratorWorkWeek;
      }(_m_view_data_generator_week__WEBPACK_IMPORTED_MODULE_1__.ViewDataGeneratorWeek);
      /***/
    }),
    /***/49692: (
    /*!********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/__internal/scheduler/workspaces/view_model/m_view_data_provider.js ***!
      \********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */ViewDataProvider;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_group_panel_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/group_panel/utils */42626);
      /* harmony import */
      var _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base */28123);
      /* harmony import */
      var _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../renovation/ui/scheduler/workspaces/utils */59016);
      /* harmony import */
      var _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../m_utils_time_zone */98281);
      /* harmony import */
      var _m_date_header_data_generator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./m_date_header_data_generator */55652);
      /* harmony import */
      var _m_grouped_data_map_provider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./m_grouped_data_map_provider */80443);
      /* harmony import */
      var _m_time_panel_data_generator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ./m_time_panel_data_generator */74065);
      /* harmony import */
      var _m_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ./m_utils */73098);
      /**
       * DevExtreme (esm/__internal/scheduler/workspaces/view_model/m_view_data_provider.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var __rest = undefined && undefined.__rest || function (s, e) {
        var t = {};
        for (var p in s) {
          if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) {
            t[p] = s[p];
          }
        }
        if (null != s && "function" === typeof Object.getOwnPropertySymbols) {
          var i = 0;
          for (p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) {
              t[p[i]] = s[p[i]];
            }
          }
        }
        return t;
      };
      var ViewDataProvider = /*#__PURE__*/function () {
        function ViewDataProvider(viewType) {
          _classCallCheck(this, ViewDataProvider);
          this.viewDataGenerator = (0, _m_utils__WEBPACK_IMPORTED_MODULE_9__.getViewDataGeneratorByViewType)(viewType);
          this.viewData = {};
          this.completeViewDataMap = [];
          this.completeDateHeaderMap = [];
          this.viewDataMap = {};
          this._groupedDataMapProvider = null;
        }
        _createClass(ViewDataProvider, [{
          key: "groupedDataMap",
          get: function get() {
            return this._groupedDataMapProvider.groupedDataMap;
          }
        }, {
          key: "hiddenInterval",
          get: function get() {
            return this.viewDataGenerator.hiddenInterval;
          }
        }, {
          key: "isSkippedDate",
          value: function isSkippedDate(date) {
            return this.viewDataGenerator.isSkippedDate(date);
          }
        }, {
          key: "update",
          value: function update(options, isGenerateNewViewData) {
            this.viewDataGenerator = (0, _m_utils__WEBPACK_IMPORTED_MODULE_9__.getViewDataGeneratorByViewType)(options.viewType);
            var viewDataGenerator = this.viewDataGenerator;
            var dateHeaderDataGenerator = new _m_date_header_data_generator__WEBPACK_IMPORTED_MODULE_6__.DateHeaderDataGenerator(viewDataGenerator);
            var timePanelDataGenerator = new _m_time_panel_data_generator__WEBPACK_IMPORTED_MODULE_8__.TimePanelDataGenerator(viewDataGenerator);
            var renderOptions = this._transformRenderOptions(options);
            renderOptions.interval = this.viewDataGenerator.getInterval(renderOptions.hoursInterval);
            this._options = renderOptions;
            if (isGenerateNewViewData) {
              this.completeViewDataMap = viewDataGenerator.getCompleteViewDataMap(renderOptions);
              this.completeDateHeaderMap = dateHeaderDataGenerator.getCompleteDateHeaderMap(renderOptions, this.completeViewDataMap);
              if (renderOptions.isGenerateTimePanelData) {
                this.completeTimePanelMap = timePanelDataGenerator.getCompleteTimePanelMap(renderOptions, this.completeViewDataMap);
              }
            }
            this.viewDataMap = viewDataGenerator.generateViewDataMap(this.completeViewDataMap, renderOptions);
            this.updateViewData(renderOptions);
            this._groupedDataMapProvider = new _m_grouped_data_map_provider__WEBPACK_IMPORTED_MODULE_7__.GroupedDataMapProvider(this.viewDataGenerator, this.viewDataMap, this.completeViewDataMap, {
              isVerticalGrouping: renderOptions.isVerticalGrouping,
              viewType: renderOptions.viewType
            });
            this.dateHeaderData = dateHeaderDataGenerator.generateDateHeaderData(this.completeDateHeaderMap, this.completeViewDataMap, renderOptions);
            if (renderOptions.isGenerateTimePanelData) {
              this.timePanelData = timePanelDataGenerator.generateTimePanelData(this.completeTimePanelMap, renderOptions);
            }
          }
        }, {
          key: "createGroupedDataMapProvider",
          value: function createGroupedDataMapProvider() {
            this._groupedDataMapProvider = new _m_grouped_data_map_provider__WEBPACK_IMPORTED_MODULE_7__.GroupedDataMapProvider(this.viewDataGenerator, this.viewDataMap, this.completeViewDataMap, {
              isVerticalGrouping: this._options.isVerticalGrouping,
              viewType: this._options.viewType
            });
          }
        }, {
          key: "updateViewData",
          value: function updateViewData(options) {
            var renderOptions = this._transformRenderOptions(options);
            this.viewDataMapWithSelection = this.viewDataGenerator.markSelectedAndFocusedCells(this.viewDataMap, renderOptions);
            this.viewData = this.viewDataGenerator.getViewDataFromMap(this.completeViewDataMap, this.viewDataMapWithSelection, renderOptions);
          }
        }, {
          key: "_transformRenderOptions",
          value: function _transformRenderOptions(renderOptions) {
            var groups = renderOptions.groups,
              groupOrientation = renderOptions.groupOrientation,
              groupByDate = renderOptions.groupByDate,
              isAllDayPanelVisible = renderOptions.isAllDayPanelVisible,
              restOptions = __rest(renderOptions, ["groups", "groupOrientation", "groupByDate", "isAllDayPanelVisible"]);
            return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, restOptions), {
              startViewDate: this.viewDataGenerator._calculateStartViewDate(renderOptions),
              isVerticalGrouping: (0, _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__.isVerticalGroupingApplied)(groups, groupOrientation),
              isHorizontalGrouping: (0, _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__.isHorizontalGroupingApplied)(groups, groupOrientation),
              isGroupedByDate: (0, _renovation_ui_scheduler_workspaces_utils__WEBPACK_IMPORTED_MODULE_4__.isGroupingByDate)(groups, groupOrientation, groupByDate),
              isGroupedAllDayPanel: (0, _renovation_ui_scheduler_view_model_to_test_views_utils_base__WEBPACK_IMPORTED_MODULE_3__.calculateIsGroupedAllDayPanel)(groups, groupOrientation, isAllDayPanelVisible),
              groups: groups,
              groupOrientation: groupOrientation,
              isAllDayPanelVisible: isAllDayPanelVisible
            });
          }
        }, {
          key: "getGroupPanelData",
          value: function getGroupPanelData(options) {
            var renderOptions = this._transformRenderOptions(options);
            if (renderOptions.groups.length > 0) {
              var cellCount = this.getCellCount(renderOptions);
              return (0, _renovation_ui_scheduler_view_model_group_panel_utils__WEBPACK_IMPORTED_MODULE_2__.getGroupPanelData)(renderOptions.groups, cellCount, renderOptions.isGroupedByDate, renderOptions.isGroupedByDate ? 1 : cellCount);
            }
            return;
          }
        }, {
          key: "getGroupStartDate",
          value: function getGroupStartDate(groupIndex) {
            return this._groupedDataMapProvider.getGroupStartDate(groupIndex);
          }
        }, {
          key: "getGroupEndDate",
          value: function getGroupEndDate(groupIndex) {
            return this._groupedDataMapProvider.getGroupEndDate(groupIndex);
          }
        }, {
          key: "findGroupCellStartDate",
          value: function findGroupCellStartDate(groupIndex, startDate, endDate) {
            var isFindByDate = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;
            return this._groupedDataMapProvider.findGroupCellStartDate(groupIndex, startDate, endDate, isFindByDate);
          }
        }, {
          key: "findAllDayGroupCellStartDate",
          value: function findAllDayGroupCellStartDate(groupIndex, startDate) {
            return this._groupedDataMapProvider.findAllDayGroupCellStartDate(groupIndex, startDate);
          }
        }, {
          key: "findCellPositionInMap",
          value: function findCellPositionInMap(cellInfo) {
            return this._groupedDataMapProvider.findCellPositionInMap(cellInfo);
          }
        }, {
          key: "hasAllDayPanel",
          value: function hasAllDayPanel() {
            var viewData = this.viewDataMap.viewData;
            var allDayPanel = viewData.groupedData[0].allDayPanel;
            return !viewData.isGroupedAllDayPanel && (null === allDayPanel || void 0 === allDayPanel ? void 0 : allDayPanel.length) > 0;
          }
        }, {
          key: "getCellsGroup",
          value: function getCellsGroup(groupIndex) {
            return this._groupedDataMapProvider.getCellsGroup(groupIndex);
          }
        }, {
          key: "getCompletedGroupsInfo",
          value: function getCompletedGroupsInfo() {
            return this._groupedDataMapProvider.getCompletedGroupsInfo();
          }
        }, {
          key: "getGroupIndices",
          value: function getGroupIndices() {
            return this._groupedDataMapProvider.getGroupIndices();
          }
        }, {
          key: "getLastGroupCellPosition",
          value: function getLastGroupCellPosition(groupIndex) {
            return this._groupedDataMapProvider.getLastGroupCellPosition(groupIndex);
          }
        }, {
          key: "getRowCountInGroup",
          value: function getRowCountInGroup(groupIndex) {
            return this._groupedDataMapProvider.getRowCountInGroup(groupIndex);
          }
        }, {
          key: "getCellData",
          value: function getCellData(rowIndex, columnIndex, isAllDay, rtlEnabled) {
            var row = isAllDay && !this._options.isVerticalGrouping ? this.viewDataMap.allDayPanelMap : this.viewDataMap.dateTableMap[rowIndex];
            var actualColumnIndex = !rtlEnabled ? columnIndex : row.length - 1 - columnIndex;
            var cellData = row[actualColumnIndex].cellData;
            return cellData;
          }
        }, {
          key: "getCellsByGroupIndexAndAllDay",
          value: function getCellsByGroupIndexAndAllDay(groupIndex, allDay) {
            var rowsPerGroup = this._getRowCountWithAllDayRows();
            var isShowAllDayPanel = this._options.isAllDayPanelVisible;
            var firstRowInGroup = this._options.isVerticalGrouping ? groupIndex * rowsPerGroup : 0;
            var lastRowInGroup = this._options.isVerticalGrouping ? (groupIndex + 1) * rowsPerGroup - 1 : rowsPerGroup;
            var correctedFirstRow = isShowAllDayPanel && !allDay ? firstRowInGroup + 1 : firstRowInGroup;
            var correctedLastRow = allDay ? correctedFirstRow : lastRowInGroup;
            return this.completeViewDataMap.slice(correctedFirstRow, correctedLastRow + 1).map(function (row) {
              return row.filter(function (_ref) {
                var currentGroupIndex = _ref.groupIndex;
                return groupIndex === currentGroupIndex;
              });
            });
          }
        }, {
          key: "getCellCountWithGroup",
          value: function getCellCountWithGroup(groupIndex) {
            var rowIndex = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            var dateTableGroupedMap = this.groupedDataMap.dateTableGroupedMap;
            return dateTableGroupedMap.filter(function (_, index) {
              return index <= groupIndex;
            }).reduce(function (previous, row) {
              return previous + row[rowIndex].length;
            }, 0);
          }
        }, {
          key: "hasGroupAllDayPanel",
          value: function hasGroupAllDayPanel(groupIndex) {
            var _a, _b;
            if (this._options.isVerticalGrouping) {
              return !!(null === (_a = this.groupedDataMap.dateTableGroupedMap[groupIndex]) || void 0 === _a ? void 0 : _a[0][0].cellData.allDay);
            }
            return (null === (_b = this.groupedDataMap.allDayPanelGroupedMap[groupIndex]) || void 0 === _b ? void 0 : _b.length) > 0;
          }
        }, {
          key: "isGroupIntersectDateInterval",
          value: function isGroupIntersectDateInterval(groupIndex, startDate, endDate) {
            var groupStartDate = this.getGroupStartDate(groupIndex);
            var groupEndDate = this.getGroupEndDate(groupIndex);
            return startDate < groupEndDate && endDate > groupStartDate;
          }
        }, {
          key: "findGlobalCellPosition",
          value: function findGlobalCellPosition(date) {
            var groupIndex = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            var allDay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;
            var completeViewDataMap = this.completeViewDataMap;
            var showAllDayPanel = this._options.isAllDayPanelVisible;
            for (var rowIndex = 0; rowIndex < completeViewDataMap.length; rowIndex += 1) {
              var currentRow = completeViewDataMap[rowIndex];
              for (var columnIndex = 0; columnIndex < currentRow.length; columnIndex += 1) {
                var cellData = currentRow[columnIndex];
                var _cellData = cellData,
                  currentStartDate = _cellData.startDate,
                  currentEndDate = _cellData.endDate,
                  currentGroupIndex = _cellData.groupIndex,
                  currentAllDay = _cellData.allDay;
                if (groupIndex === currentGroupIndex && allDay === !!currentAllDay && this._compareDatesAndAllDay(date, currentStartDate, currentEndDate, allDay)) {
                  return {
                    position: {
                      columnIndex: columnIndex,
                      rowIndex: showAllDayPanel && !this._options.isVerticalGrouping ? rowIndex - 1 : rowIndex
                    },
                    cellData: cellData
                  };
                }
              }
            }
            return;
          }
        }, {
          key: "_compareDatesAndAllDay",
          value: function _compareDatesAndAllDay(date, cellStartDate, cellEndDate, allDay) {
            var time = date.getTime();
            var trimmedTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime(date).getTime();
            var cellStartTime = cellStartDate.getTime();
            var cellEndTime = cellEndDate.getTime();
            return !allDay && time >= cellStartTime && time < cellEndTime || allDay && trimmedTime === cellStartTime;
          }
        }, {
          key: "getSkippedDaysCount",
          value: function getSkippedDaysCount(groupIndex, startDate, endDate, daysCount) {
            var dateTableGroupedMap = this._groupedDataMapProvider.groupedDataMap.dateTableGroupedMap;
            var groupedData = dateTableGroupedMap[groupIndex];
            var includedDays = 0;
            for (var rowIndex = 0; rowIndex < groupedData.length; rowIndex += 1) {
              for (var columnIndex = 0; columnIndex < groupedData[rowIndex].length; columnIndex += 1) {
                var cell = groupedData[rowIndex][columnIndex].cellData;
                if (startDate.getTime() < cell.endDate.getTime() && endDate.getTime() > cell.startDate.getTime()) {
                  includedDays += 1;
                }
              }
            }
            var lastCell = groupedData[groupedData.length - 1][groupedData[0].length - 1].cellData;
            var lastCellStart = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime(lastCell.startDate);
            var daysAfterView = Math.floor((endDate.getTime() - lastCellStart.getTime()) / _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("day"));
            var deltaDays = daysAfterView > 0 ? daysAfterView : 0;
            return daysCount - includedDays - deltaDays;
          }
        }, {
          key: "getColumnsCount",
          value: function getColumnsCount() {
            var dateTableMap = this.viewDataMap.dateTableMap;
            return dateTableMap ? dateTableMap[0].length : 0;
          }
        }, {
          key: "getViewEdgeIndices",
          value: function getViewEdgeIndices(isAllDayPanel) {
            if (isAllDayPanel) {
              return {
                firstColumnIndex: 0,
                lastColumnIndex: this.viewDataMap.allDayPanelMap.length - 1,
                firstRowIndex: 0,
                lastRowIndex: 0
              };
            }
            return {
              firstColumnIndex: 0,
              lastColumnIndex: this.viewDataMap.dateTableMap[0].length - 1,
              firstRowIndex: 0,
              lastRowIndex: this.viewDataMap.dateTableMap.length - 1
            };
          }
        }, {
          key: "getGroupEdgeIndices",
          value: function getGroupEdgeIndices(groupIndex, isAllDay) {
            var groupedDataMap = this.groupedDataMap.dateTableGroupedMap[groupIndex];
            var cellsCount = groupedDataMap[0].length;
            var rowsCount = groupedDataMap.length;
            var firstColumnIndex = groupedDataMap[0][0].position.columnIndex;
            var lastColumnIndex = groupedDataMap[0][cellsCount - 1].position.columnIndex;
            if (isAllDay) {
              return {
                firstColumnIndex: firstColumnIndex,
                lastColumnIndex: lastColumnIndex,
                firstRowIndex: 0,
                lastRowIndex: 0
              };
            }
            return {
              firstColumnIndex: firstColumnIndex,
              lastColumnIndex: lastColumnIndex,
              firstRowIndex: groupedDataMap[0][0].position.rowIndex,
              lastRowIndex: groupedDataMap[rowsCount - 1][0].position.rowIndex
            };
          }
        }, {
          key: "isSameCell",
          value: function isSameCell(firstCellData, secondCellData) {
            var firstStartDate = firstCellData.startDate,
              firstGroupIndex = firstCellData.groupIndex,
              firstAllDay = firstCellData.allDay,
              firstIndex = firstCellData.index;
            var secondStartDate = secondCellData.startDate,
              secondGroupIndex = secondCellData.groupIndex,
              secondAllDay = secondCellData.allDay,
              secondIndex = secondCellData.index;
            return firstStartDate.getTime() === secondStartDate.getTime() && firstGroupIndex === secondGroupIndex && firstAllDay === secondAllDay && firstIndex === secondIndex;
          }
        }, {
          key: "getLastViewDate",
          value: function getLastViewDate() {
            var completeViewDataMap = this.completeViewDataMap;
            var rowsCount = completeViewDataMap.length - 1;
            return completeViewDataMap[rowsCount][completeViewDataMap[rowsCount].length - 1].endDate;
          }
        }, {
          key: "getStartViewDate",
          value: function getStartViewDate() {
            return this._options.startViewDate;
          }
        }, {
          key: "getIntervalDuration",
          value: function getIntervalDuration(intervalCount) {
            return this.viewDataGenerator._getIntervalDuration(intervalCount);
          }
        }, {
          key: "getLastCellEndDate",
          value: function getLastCellEndDate() {
            return new Date(this.getLastViewDate().getTime() - _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("minute"));
          }
        }, {
          key: "getLastViewDateByEndDayHour",
          value: function getLastViewDateByEndDayHour(endDayHour) {
            var lastCellEndDate = this.getLastCellEndDate();
            var endTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateTimeFromDecimal(endDayHour);
            var endDateOfLastViewCell = new Date(lastCellEndDate.setHours(endTime.hours, endTime.minutes));
            return this._adjustEndDateByDaylightDiff(lastCellEndDate, endDateOfLastViewCell);
          }
        }, {
          key: "_adjustEndDateByDaylightDiff",
          value: function _adjustEndDateByDaylightDiff(startDate, endDate) {
            var daylightDiff = _m_utils_time_zone__WEBPACK_IMPORTED_MODULE_5__["default"].getDaylightOffsetInMs(startDate, endDate);
            var endDateOfLastViewCell = new Date(endDate.getTime() - daylightDiff);
            return new Date(endDateOfLastViewCell.getTime() - _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("minute"));
          }
        }, {
          key: "getCellCountInDay",
          value: function getCellCountInDay(startDayHour, endDayHour, hoursInterval) {
            return this.viewDataGenerator.getCellCountInDay(startDayHour, endDayHour, hoursInterval);
          }
        }, {
          key: "getCellCount",
          value: function getCellCount(options) {
            return this.viewDataGenerator.getCellCount(options);
          }
        }, {
          key: "getRowCount",
          value: function getRowCount(options) {
            return this.viewDataGenerator.getRowCount(options);
          }
        }, {
          key: "getVisibleDayDuration",
          value: function getVisibleDayDuration(startDayHour, endDayHour, hoursInterval) {
            return this.viewDataGenerator.getVisibleDayDuration(startDayHour, endDayHour, hoursInterval);
          }
        }, {
          key: "_getRowCountWithAllDayRows",
          value: function _getRowCountWithAllDayRows() {
            var allDayRowCount = this._options.isAllDayPanelVisible ? 1 : 0;
            return this.getRowCount(this._options) + allDayRowCount;
          }
        }, {
          key: "getFirstDayOfWeek",
          value: function getFirstDayOfWeek(firstDayOfWeekOption) {
            return this.viewDataGenerator.getFirstDayOfWeek(firstDayOfWeekOption);
          }
        }, {
          key: "setViewOptions",
          value: function setViewOptions(options) {
            this._options = this._transformRenderOptions(options);
          }
        }, {
          key: "getViewOptions",
          value: function getViewOptions() {
            return this._options;
          }
        }, {
          key: "getViewPortGroupCount",
          value: function getViewPortGroupCount() {
            var dateTableGroupedMap = this.groupedDataMap.dateTableGroupedMap;
            return (null === dateTableGroupedMap || void 0 === dateTableGroupedMap ? void 0 : dateTableGroupedMap.length) || 0;
          }
        }]);
        return ViewDataProvider;
      }();
      /***/
    }),
    /***/69379: (
    /*!*********************************************************!*\
      !*** ./node_modules/devextreme/esm/data/data_source.js ***!
      \*********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _data_source_data_source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./data_source/data_source */56053);
      /**
       * DevExtreme (esm/data/data_source.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      /* harmony default export */
      __webpack_exports__["default"] = _data_source_data_source__WEBPACK_IMPORTED_MODULE_0__.DataSource;

      /***/
    }),
    /***/66368: (
    /*!************************************************************!*\
      !*** ./node_modules/devextreme/esm/events/double_click.js ***!
      \************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"name": function name() {
          return /* binding */DBLCLICK_EVENT_NAME;
        }
        /* harmony export */
      });
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../events/core/events_engine */99064);
      /* harmony import */
      var _core_utils_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../core/utils/dom */16520);
      /* harmony import */
      var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../core/dom_adapter */81113);
      /* harmony import */
      var _core_class__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../core/class */72627);
      /* harmony import */
      var _core_event_registrator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./core/event_registrator */58056);
      /* harmony import */
      var _click__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./click */38894);
      /* harmony import */
      var _utils_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./utils/index */3151);
      /**
       * DevExtreme (esm/events/double_click.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DBLCLICK_EVENT_NAME = "dxdblclick";
      var DBLCLICK_NAMESPACE = "dxDblClick";
      var NAMESPACED_CLICK_EVENT = (0, _utils_index__WEBPACK_IMPORTED_MODULE_6__.addNamespace)(_click__WEBPACK_IMPORTED_MODULE_5__.name, DBLCLICK_NAMESPACE);
      var DBLCLICK_TIMEOUT = 300;
      var DblClick = _core_class__WEBPACK_IMPORTED_MODULE_3__["default"].inherit({
        ctor: function ctor() {
          this._handlerCount = 0;
          this._forgetLastClick();
        },
        _forgetLastClick: function _forgetLastClick() {
          this._firstClickTarget = null;
          this._lastClickTimeStamp = -DBLCLICK_TIMEOUT;
        },
        add: function add() {
          if (this._handlerCount <= 0) {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_0__["default"].on(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__["default"].getDocument(), NAMESPACED_CLICK_EVENT, this._clickHandler.bind(this));
          }
          this._handlerCount++;
        },
        _clickHandler: function _clickHandler(e) {
          var timeStamp = e.timeStamp || Date.now();
          var timeBetweenClicks = timeStamp - this._lastClickTimeStamp;
          var isSimulated = timeBetweenClicks < 0;
          var isDouble = !isSimulated && timeBetweenClicks < DBLCLICK_TIMEOUT;
          if (isDouble) {
            (0, _utils_index__WEBPACK_IMPORTED_MODULE_6__.fireEvent)({
              type: DBLCLICK_EVENT_NAME,
              target: (0, _core_utils_dom__WEBPACK_IMPORTED_MODULE_1__.closestCommonParent)(this._firstClickTarget, e.target),
              originalEvent: e
            });
            this._forgetLastClick();
          } else {
            this._firstClickTarget = e.target;
            this._lastClickTimeStamp = timeStamp;
          }
        },
        remove: function remove() {
          this._handlerCount--;
          if (this._handlerCount <= 0) {
            this._forgetLastClick();
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_0__["default"].off(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_2__["default"].getDocument(), NAMESPACED_CLICK_EVENT);
          }
        }
      });
      (0, _core_event_registrator__WEBPACK_IMPORTED_MODULE_4__["default"])(DBLCLICK_EVENT_NAME, new DblClick());

      /***/
    }),
    /***/5733: (
    /*!******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/component_wrapper/scheduler/date_table.js ***!
      \******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"DateTable": function DateTable() {
          return /* binding */_DateTable;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../common/component */17405);
      /**
       * DevExtreme (esm/renovation/component_wrapper/scheduler/date_table.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _DateTable = /*#__PURE__*/function (_common_component__WE) {
        _inherits(_DateTable, _common_component__WE);
        function _DateTable() {
          _classCallCheck(this, _DateTable);
          return _callSuper(this, _DateTable, arguments);
        }
        _createClass(_DateTable, [{
          key: "_setOptionsByReference",
          value: function _setOptionsByReference() {
            _get(_getPrototypeOf(_DateTable.prototype), "_setOptionsByReference", this).call(this);
            this._optionsByReference = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this._optionsByReference, {
              dataCellTemplate: true
            });
          }
        }]);
        return _DateTable;
      }(_common_component__WEBPACK_IMPORTED_MODULE_1__["default"]);
      /***/
    }),
    /***/8294: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/component_wrapper/scheduler/group_panel.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"GroupPanelWrapper": function GroupPanelWrapper() {
          return /* binding */_GroupPanelWrapper;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../common/component */17405);
      /**
       * DevExtreme (esm/renovation/component_wrapper/scheduler/group_panel.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _GroupPanelWrapper = /*#__PURE__*/function (_common_component__WE2) {
        _inherits(_GroupPanelWrapper, _common_component__WE2);
        function _GroupPanelWrapper() {
          _classCallCheck(this, _GroupPanelWrapper);
          return _callSuper(this, _GroupPanelWrapper, arguments);
        }
        _createClass(_GroupPanelWrapper, [{
          key: "_setOptionsByReference",
          value: function _setOptionsByReference() {
            _get(_getPrototypeOf(_GroupPanelWrapper.prototype), "_setOptionsByReference", this).call(this);
            this._optionsByReference = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this._optionsByReference, {
              resourceCellTemplate: true
            });
          }
        }]);
        return _GroupPanelWrapper;
      }(_common_component__WEBPACK_IMPORTED_MODULE_1__["default"]);
      /***/
    }),
    /***/72902: (
    /*!********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/component_wrapper/scheduler/header_panel.js ***!
      \********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"HeaderPanel": function HeaderPanel() {
          return /* binding */_HeaderPanel;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../common/component */17405);
      /**
       * DevExtreme (esm/renovation/component_wrapper/scheduler/header_panel.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _HeaderPanel = /*#__PURE__*/function (_common_component__WE3) {
        _inherits(_HeaderPanel, _common_component__WE3);
        function _HeaderPanel() {
          _classCallCheck(this, _HeaderPanel);
          return _callSuper(this, _HeaderPanel, arguments);
        }
        _createClass(_HeaderPanel, [{
          key: "_setOptionsByReference",
          value: function _setOptionsByReference() {
            _get(_getPrototypeOf(_HeaderPanel.prototype), "_setOptionsByReference", this).call(this);
            this._optionsByReference = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this._optionsByReference, {
              dateHeaderData: true,
              resourceCellTemplate: true,
              dateCellTemplate: true,
              timeCellTemplate: true
            });
          }
        }]);
        return _HeaderPanel;
      }(_common_component__WEBPACK_IMPORTED_MODULE_1__["default"]);
      /***/
    }),
    /***/16547: (
    /*!******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/component_wrapper/scheduler/time_panel.js ***!
      \******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"TimePanel": function TimePanel() {
          return /* binding */_TimePanel;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../common/component */17405);
      /**
       * DevExtreme (esm/renovation/component_wrapper/scheduler/time_panel.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _TimePanel = /*#__PURE__*/function (_common_component__WE4) {
        _inherits(_TimePanel, _common_component__WE4);
        function _TimePanel() {
          _classCallCheck(this, _TimePanel);
          return _callSuper(this, _TimePanel, arguments);
        }
        _createClass(_TimePanel, [{
          key: "_setOptionsByReference",
          value: function _setOptionsByReference() {
            _get(_getPrototypeOf(_TimePanel.prototype), "_setOptionsByReference", this).call(this);
            this._optionsByReference = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this._optionsByReference, {
              timeCellTemplate: true
            });
          }
        }]);
        return _TimePanel;
      }(_common_component__WEBPACK_IMPORTED_MODULE_1__["default"]);
      /***/
    }),
    /***/37999: (
    /*!*********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/common/utils/scroll/getMemoizeScrollTo.js ***!
      \*********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getMemoizeScrollTo": function getMemoizeScrollTo() {
          return /* binding */_getMemoizeScrollTo;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/common/utils/scroll/getMemoizeScrollTo.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      function _getMemoizeScrollTo(getScrollableInstance) {
        var instance = getScrollableInstance();
        var lastParams = {};
        return function (params) {
          var force = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
          var normalizedParams = {
            top: void 0 !== params.top ? Math.ceil(params.top) : void 0,
            left: void 0 !== params.left ? Math.ceil(params.left) : void 0
          };
          var isSameParams = normalizedParams.top === lastParams.top && normalizedParams.left === lastParams.left;
          if (!force && isSameParams) {
            return;
          }
          lastParams = normalizedParams;
          instance.scrollTo(params);
        };
      }

      /***/
    }),
    /***/61960: (
    /*!**********************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/resizable/utils.js ***!
      \**********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"borderWidthStyles": function borderWidthStyles() {
          return /* binding */_borderWidthStyles;
        },
        /* harmony export */"getAreaFromElement": function getAreaFromElement() {
          return /* binding */_getAreaFromElement;
        },
        /* harmony export */"getAreaFromObject": function getAreaFromObject() {
          return /* binding */_getAreaFromObject;
        },
        /* harmony export */"getMovingSides": function getMovingSides() {
          return /* binding */_getMovingSides;
        },
        /* harmony export */"getDragOffsets": function getDragOffsets() {
          return /* binding */_getDragOffsets;
        },
        /* harmony export */"filterOffsets": function filterOffsets() {
          return /* binding */_filterOffsets;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /**
       * DevExtreme (esm/renovation/ui/resizable/utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _borderWidthStyles = {
        left: "borderLeftWidth",
        top: "borderTopWidth",
        right: "borderRightWidth",
        bottom: "borderBottomWidth"
      };
      function getBorderWidth(el, direction) {
        if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isWindow)(el)) {
          var borderWidth = el.style[_borderWidthStyles[direction]];
          return parseInt(borderWidth, 10) || 0;
        }
        return 0;
      }
      var correctGeometry = function correctGeometry(area, mainEl) {
        var el = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
        var height = area.height,
          offset = area.offset,
          width = area.width;
        var left = offset.left,
          top = offset.top;
        var areaBorderLeft = el ? getBorderWidth(el, "left") : 0;
        var areaBorderTop = el ? getBorderWidth(el, "top") : 0;
        return {
          width: width - (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOuterWidth)(mainEl) - (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getInnerWidth)(mainEl),
          height: height - (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOuterHeight)(mainEl) - (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getInnerHeight)(mainEl),
          offset: {
            left: left + areaBorderLeft + getBorderWidth(mainEl, "left"),
            top: top + areaBorderTop + getBorderWidth(mainEl, "top")
          }
        };
      };
      var _getAreaFromElement = function _getAreaFromElement(el, mainEl) {
        return correctGeometry({
          width: (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getInnerWidth)(el),
          height: (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getInnerHeight)(el),
          offset: (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)({
            top: 0,
            left: 0
          }, (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isWindow)(el) ? {} : (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOffset)(el))
        }, mainEl, el);
      };
      var _getAreaFromObject = function _getAreaFromObject(_ref, mainEl) {
        var bottom = _ref.bottom,
          left = _ref.left,
          right = _ref.right,
          top = _ref.top;
        return correctGeometry({
          width: right - left,
          height: bottom - top,
          offset: {
            left: left,
            top: top
          }
        }, mainEl);
      };
      var _getMovingSides = function _getMovingSides(el) {
        var className = el.className;
        var hasCornerTopLeftClass = className.includes("dx-resizable-handle-corner-top-left");
        var hasCornerTopRightClass = className.includes("dx-resizable-handle-corner-top-right");
        var hasCornerBottomLeftClass = className.includes("dx-resizable-handle-corner-bottom-left");
        var hasCornerBottomRightClass = className.includes("dx-resizable-handle-corner-bottom-right");
        return {
          top: className.includes("dx-resizable-handle-top") || hasCornerTopLeftClass || hasCornerTopRightClass,
          left: className.includes("dx-resizable-handle-left") || hasCornerTopLeftClass || hasCornerBottomLeftClass,
          bottom: className.includes("dx-resizable-handle-bottom") || hasCornerBottomLeftClass || hasCornerBottomRightClass,
          right: className.includes("dx-resizable-handle-right") || hasCornerTopRightClass || hasCornerBottomRightClass
        };
      };
      function _getDragOffsets(area, handleEl, areaProp) {
        var hWidth = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOuterWidth)(handleEl);
        var hHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOuterHeight)(handleEl);
        var hOffset = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_2__.getOffset)(handleEl);
        var areaOffset = area.offset;
        var isAreaWindow = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isWindow)(areaProp);
        var scrollOffset_scrollX = isAreaWindow ? areaProp.pageXOffset : 0,
          scrollOffset_scrollY = isAreaWindow ? areaProp.pageYOffset : 0;
        return {
          maxLeftOffset: hOffset.left - areaOffset.left - scrollOffset_scrollX,
          maxRightOffset: areaOffset.left + area.width - hOffset.left - hWidth + scrollOffset_scrollX,
          maxTopOffset: hOffset.top - areaOffset.top - scrollOffset_scrollY,
          maxBottomOffset: areaOffset.top + area.height - hOffset.top - hHeight + scrollOffset_scrollY
        };
      }
      var _filterOffsets = function _filterOffsets(offset, handleEl) {
        var sides = _getMovingSides(handleEl);
        var offsetX = !sides.left && !sides.right ? 0 : offset.x;
        var offsetY = !sides.top && !sides.bottom ? 0 : offset.y;
        return {
          x: offsetX,
          y: offsetY
        };
      };

      /***/
    }),
    /***/5562: (
    /*!****************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/appointment.js ***!
      \****************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction;
        },
        /* harmony export */"AppointmentProps": function AppointmentProps() {
          return /* binding */_AppointmentProps;
        },
        /* harmony export */"Appointment": function Appointment() {
          return /* binding */_Appointment3;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./utils */259);
      /* harmony import */
      var _content_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./content/layout */9579);
      /* harmony import */
      var _common_widget__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../common/widget */47880);
      /* harmony import */
      var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../utils/combine_classes */33582);
      /* harmony import */
      var _resources_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../resources/utils */56085);
      /* harmony import */
      var _appointments_context__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../appointments_context */29263);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment/appointment.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["appointmentTemplate", "groups", "hideReducedIconTooltip", "index", "onItemClick", "onItemDoubleClick", "showReducedIconTooltip", "viewModel"];
      var _viewFunction = function _viewFunction(_ref) {
        var classes = _ref.classes,
          data = _ref.data,
          dateText = _ref.dateText,
          isReduced = _ref.isReduced,
          onItemClick = _ref.onItemClick,
          _ref$props = _ref.props,
          appointmentTemplate = _ref$props.appointmentTemplate,
          hideReducedIconTooltip = _ref$props.hideReducedIconTooltip,
          index = _ref$props.index,
          showReducedIconTooltip = _ref$props.showReducedIconTooltip,
          isRecurrent = _ref$props.viewModel.info.isRecurrent,
          ref = _ref.ref,
          styles = _ref.styles,
          text = _ref.text;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _common_widget__WEBPACK_IMPORTED_MODULE_6__.Widget, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
          focusStateEnabled: true,
          onClick: onItemClick,
          rootElementRef: ref,
          style: (0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(styles),
          classes: classes,
          hint: text
        }, {
          role: "button",
          "data-index": index
        }, {
          children: (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _content_layout__WEBPACK_IMPORTED_MODULE_5__.AppointmentContent, {
            text: text,
            isReduced: isReduced,
            dateText: dateText,
            isRecurrent: isRecurrent,
            index: index,
            data: data,
            showReducedIconTooltip: showReducedIconTooltip,
            hideReducedIconTooltip: hideReducedIconTooltip,
            appointmentTemplate: appointmentTemplate
          })
        })));
      };
      var _AppointmentProps = {
        index: 0
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _Appointment3 = /*#__PURE__*/function (_devextreme_runtime_i) {
        _inherits(_Appointment3, _devextreme_runtime_i);
        function _Appointment3(props) {
          var _this169;
          _classCallCheck(this, _Appointment3);
          _this169 = _callSuper(this, _Appointment3, [props]);
          _this169.ref = (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createRef)();
          _this169.state = {
            color: void 0
          };
          _this169.updateStylesEffect = _this169.updateStylesEffect.bind(_assertThisInitialized(_this169));
          _this169.bindDoubleClickEffect = _this169.bindDoubleClickEffect.bind(_assertThisInitialized(_this169));
          _this169.onItemClick = _this169.onItemClick.bind(_assertThisInitialized(_this169));
          _this169.onItemDoubleClick = _this169.onItemDoubleClick.bind(_assertThisInitialized(_this169));
          return _this169;
        }
        _createClass(_Appointment3, [{
          key: "appointmentsContextValue",
          get: function get() {
            if (this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_9__.AppointmentsContext.id]) {
              return this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_9__.AppointmentsContext.id];
            }
            return _appointments_context__WEBPACK_IMPORTED_MODULE_9__.AppointmentsContext.defaultValue;
          }
        }, {
          key: "createEffects",
          value: function createEffects() {
            return [new _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoEffect(this.updateStylesEffect, [this.props.viewModel, this.appointmentsContextValue, this.props.groups]), new _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoEffect(this.bindDoubleClickEffect, [])];
          }
        }, {
          key: "updateEffects",
          value: function updateEffects() {
            var _this$_effects$;
            null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.viewModel, this.appointmentsContextValue, this.props.groups]);
          }
        }, {
          key: "updateStylesEffect",
          value: function updateStylesEffect() {
            var _this170 = this;
            var _viewModel$info$group;
            var viewModel = this.props.viewModel;
            var groupIndex = null !== (_viewModel$info$group = viewModel.info.groupIndex) && void 0 !== _viewModel$info$group ? _viewModel$info$group : 0;
            var appointment = viewModel.appointment;
            (0, _resources_utils__WEBPACK_IMPORTED_MODULE_8__.getAppointmentColor)({
              resources: this.appointmentsContextValue.resources,
              resourceLoaderMap: this.appointmentsContextValue.resourceLoaderMap,
              resourcesDataAccessors: this.appointmentsContextValue.dataAccessors.resources,
              loadedResources: this.appointmentsContextValue.loadedResources
            }, {
              itemData: appointment,
              groupIndex: groupIndex,
              groups: this.props.groups
            }).then(function (color) {
              _this170.setState(function (__state_argument) {
                return {
                  color: color
                };
              });
            })["catch"](function () {
              return "";
            });
          }
        }, {
          key: "bindDoubleClickEffect",
          value: function bindDoubleClickEffect() {
            var _this171 = this;
            var _this$ref$current;
            var onDoubleClick = function onDoubleClick() {
              return _this171.onItemDoubleClick();
            };
            null === (_this$ref$current = this.ref.current) || void 0 === _this$ref$current ? void 0 : _this$ref$current.addEventListener("dblclick", onDoubleClick);
            return function () {
              var _this$ref$current2;
              null === (_this$ref$current2 = _this171.ref.current) || void 0 === _this$ref$current2 ? void 0 : _this$ref$current2.removeEventListener("dblclick", onDoubleClick);
            };
          }
        }, {
          key: "appointmentStyles",
          get: function get() {
            return (0, _utils__WEBPACK_IMPORTED_MODULE_4__.getAppointmentStyles)(this.props.viewModel);
          }
        }, {
          key: "styles",
          get: function get() {
            return (0, _utils__WEBPACK_IMPORTED_MODULE_4__.mergeStylesWithColor)(this.state.color, this.appointmentStyles);
          }
        }, {
          key: "text",
          get: function get() {
            return this.props.viewModel.appointment.text;
          }
        }, {
          key: "isReduced",
          get: function get() {
            var appointmentReduced = this.props.viewModel.info.appointmentReduced;
            return !!appointmentReduced;
          }
        }, {
          key: "classes",
          get: function get() {
            var _this$props$viewModel = this.props.viewModel,
              focused = _this$props$viewModel.focused,
              _this$props$viewModel2 = _this$props$viewModel.info,
              allDay = _this$props$viewModel2.allDay,
              appointmentReduced = _this$props$viewModel2.appointmentReduced,
              direction = _this$props$viewModel2.direction,
              isRecurrent = _this$props$viewModel2.isRecurrent;
            var isVerticalDirection = "vertical" === direction;
            return (0, _utils_combine_classes__WEBPACK_IMPORTED_MODULE_7__.combineClasses)({
              "dx-state-focused": !!focused,
              "dx-scheduler-appointment": true,
              "dx-scheduler-appointment-horizontal": !isVerticalDirection,
              "dx-scheduler-appointment-vertical": isVerticalDirection,
              "dx-scheduler-appointment-recurrence": isRecurrent,
              "dx-scheduler-all-day-appointment": allDay,
              "dx-scheduler-appointment-reduced": this.isReduced,
              "dx-scheduler-appointment-head": "head" === appointmentReduced,
              "dx-scheduler-appointment-body": "body" === appointmentReduced,
              "dx-scheduler-appointment-tail": "tail" === appointmentReduced
            });
          }
        }, {
          key: "dateText",
          get: function get() {
            return this.props.viewModel.info.dateText;
          }
        }, {
          key: "data",
          get: function get() {
            return {
              appointmentData: this.props.viewModel.info.appointment,
              targetedAppointmentData: this.props.viewModel.appointment
            };
          }
        }, {
          key: "onItemClick",
          value: function onItemClick() {
            var e = {
              data: [this.props.viewModel],
              target: this.ref.current,
              index: this.props.index
            };
            this.props.onItemClick(e);
          }
        }, {
          key: "onItemDoubleClick",
          value: function onItemDoubleClick() {
            var e = {
              data: [this.props.viewModel],
              target: this.ref.current,
              index: this.props.index
            };
            this.props.onItemDoubleClick(e);
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                appointmentTemplate: getTemplate(props.appointmentTemplate)
              }),
              color: this.state.color,
              ref: this.ref,
              appointmentsContextValue: this.appointmentsContextValue,
              appointmentStyles: this.appointmentStyles,
              styles: this.styles,
              text: this.text,
              isReduced: this.isReduced,
              classes: this.classes,
              dateText: this.dateText,
              data: this.data,
              onItemClick: this.onItemClick,
              onItemDoubleClick: this.onItemDoubleClick,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _Appointment3;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoComponent);
      _Appointment3.defaultProps = _AppointmentProps;

      /***/
    }),
    /***/29886: (
    /*!***************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/content/details/layout.js ***!
      \***************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction2;
        },
        /* harmony export */"AppointmentDetailsProps": function AppointmentDetailsProps() {
          return /* binding */_AppointmentDetailsProps;
        },
        /* harmony export */"AppointmentDetails": function AppointmentDetails() {
          return /* binding */_AppointmentDetails;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment/content/details/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["dateText"];
      var _viewFunction2 = function _viewFunction2(_ref) {
        var dateText = _ref.props.dateText;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-content-details", (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-content-date", dateText, 0), 2);
      };
      var _AppointmentDetailsProps = {
        dateText: ""
      };
      var _AppointmentDetails = /*#__PURE__*/function (_devextreme_runtime_i2) {
        _inherits(_AppointmentDetails, _devextreme_runtime_i2);
        function _AppointmentDetails(props) {
          var _this172;
          _classCallCheck(this, _AppointmentDetails);
          _this172 = _callSuper(this, _AppointmentDetails, [props]);
          _this172.state = {};
          return _this172;
        }
        _createClass(_AppointmentDetails, [{
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction2({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props),
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _AppointmentDetails;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _AppointmentDetails.defaultProps = _AppointmentDetailsProps;

      /***/
    }),
    /***/9579: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/content/layout.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction3;
        },
        /* harmony export */"AppointmentContentProps": function AppointmentContentProps() {
          return /* binding */_AppointmentContentProps;
        },
        /* harmony export */"AppointmentContent": function AppointmentContent() {
          return /* binding */_AppointmentContent;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _details_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./details/layout */29886);
      /* harmony import */
      var _title_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./title/layout */54861);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment/content/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["appointmentTemplate", "data", "dateText", "hideReducedIconTooltip", "index", "isRecurrent", "isReduced", "showReducedIconTooltip", "text"];
      var _viewFunction3 = function _viewFunction3(_ref) {
        var _ref$props2 = _ref.props,
          appointmentTemplate = _ref$props2.appointmentTemplate,
          data = _ref$props2.data,
          dateText = _ref$props2.dateText,
          index = _ref$props2.index,
          isRecurrent = _ref$props2.isRecurrent,
          isReduced = _ref$props2.isReduced,
          text = _ref$props2.text,
          refReducedIcon = _ref.refReducedIcon;
        var AppointmentTemplate = appointmentTemplate;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-content", appointmentTemplate ? AppointmentTemplate({
          data: data,
          index: index
        }) : (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)([(0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _title_layout__WEBPACK_IMPORTED_MODULE_5__.AppointmentTitle, {
          text: text
        }), (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _details_layout__WEBPACK_IMPORTED_MODULE_4__.AppointmentDetails, {
          dateText: dateText
        }), isRecurrent && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-recurrence-icon dx-icon-repeat"), isReduced && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-reduced-icon", null, 1, null, null, refReducedIcon)], 0), 0);
      };
      var _AppointmentContentProps = {
        text: "",
        dateText: "",
        isRecurrent: false,
        isReduced: false,
        index: 0
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _AppointmentContent = /*#__PURE__*/function (_devextreme_runtime_i3) {
        _inherits(_AppointmentContent, _devextreme_runtime_i3);
        function _AppointmentContent(props) {
          var _this173;
          _classCallCheck(this, _AppointmentContent);
          _this173 = _callSuper(this, _AppointmentContent, [props]);
          _this173.state = {};
          _this173.refReducedIcon = (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createRef)();
          _this173.bindHoverEffect = _this173.bindHoverEffect.bind(_assertThisInitialized(_this173));
          _this173.onReducedIconMouseEnter = _this173.onReducedIconMouseEnter.bind(_assertThisInitialized(_this173));
          _this173.onReducedIconMouseLeave = _this173.onReducedIconMouseLeave.bind(_assertThisInitialized(_this173));
          return _this173;
        }
        _createClass(_AppointmentContent, [{
          key: "createEffects",
          value: function createEffects() {
            return [new _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoEffect(this.bindHoverEffect, [this.props.showReducedIconTooltip, this.props.data, this.props.hideReducedIconTooltip])];
          }
        }, {
          key: "updateEffects",
          value: function updateEffects() {
            var _this$_effects$;
            null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.showReducedIconTooltip, this.props.data, this.props.hideReducedIconTooltip]);
          }
        }, {
          key: "bindHoverEffect",
          value: function bindHoverEffect() {
            var _this174 = this;
            var _this$refReducedIcon$, _this$refReducedIcon$2;
            var onMouseEnter = function onMouseEnter() {
              return _this174.onReducedIconMouseEnter();
            };
            var onMouseLeave = function onMouseLeave() {
              return _this174.onReducedIconMouseLeave();
            };
            null === (_this$refReducedIcon$ = this.refReducedIcon.current) || void 0 === _this$refReducedIcon$ ? void 0 : _this$refReducedIcon$.addEventListener("mouseenter", onMouseEnter);
            null === (_this$refReducedIcon$2 = this.refReducedIcon.current) || void 0 === _this$refReducedIcon$2 ? void 0 : _this$refReducedIcon$2.addEventListener("mouseleave", onMouseLeave);
            return function () {
              var _this$refReducedIcon$3, _this$refReducedIcon$4;
              null === (_this$refReducedIcon$3 = _this174.refReducedIcon.current) || void 0 === _this$refReducedIcon$3 ? void 0 : _this$refReducedIcon$3.removeEventListener("mouseenter", onMouseEnter);
              null === (_this$refReducedIcon$4 = _this174.refReducedIcon.current) || void 0 === _this$refReducedIcon$4 ? void 0 : _this$refReducedIcon$4.removeEventListener("mouseleave", onMouseLeave);
            };
          }
        }, {
          key: "onReducedIconMouseEnter",
          value: function onReducedIconMouseEnter() {
            this.props.showReducedIconTooltip({
              target: this.refReducedIcon.current,
              endDate: this.props.data.appointmentData.endDate
            });
          }
        }, {
          key: "onReducedIconMouseLeave",
          value: function onReducedIconMouseLeave() {
            this.props.hideReducedIconTooltip();
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction3({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                appointmentTemplate: getTemplate(props.appointmentTemplate)
              }),
              refReducedIcon: this.refReducedIcon,
              onReducedIconMouseEnter: this.onReducedIconMouseEnter,
              onReducedIconMouseLeave: this.onReducedIconMouseLeave,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _AppointmentContent;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoComponent);
      _AppointmentContent.defaultProps = _AppointmentContentProps;

      /***/
    }),
    /***/54861: (
    /*!*************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/content/title/layout.js ***!
      \*************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction4;
        },
        /* harmony export */"AppointmentTitleProps": function AppointmentTitleProps() {
          return /* binding */_AppointmentTitleProps;
        },
        /* harmony export */"AppointmentTitle": function AppointmentTitle() {
          return /* binding */_AppointmentTitle;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment/content/title/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["text"];
      var _viewFunction4 = function _viewFunction4(_ref) {
        var text = _ref.props.text;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-appointment-title", text, 0);
      };
      var _AppointmentTitleProps = {
        text: ""
      };
      var _AppointmentTitle = /*#__PURE__*/function (_devextreme_runtime_i4) {
        _inherits(_AppointmentTitle, _devextreme_runtime_i4);
        function _AppointmentTitle(props) {
          var _this175;
          _classCallCheck(this, _AppointmentTitle);
          _this175 = _callSuper(this, _AppointmentTitle, [props]);
          _this175.state = {};
          return _this175;
        }
        _createClass(_AppointmentTitle, [{
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction4({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props),
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _AppointmentTitle;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _AppointmentTitle.defaultProps = _AppointmentTitleProps;

      /***/
    }),
    /***/13812: (
    /*!*************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/layout.j.js ***!
      \*************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */AppointmentLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/component_registrator */2382);
      /* harmony import */
      var _component_wrapper_common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../component_wrapper/common/component */17405);
      /* harmony import */
      var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./layout */68972);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment/layout.j.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var AppointmentLayout = /*#__PURE__*/function (_component_wrapper_co) {
        _inherits(AppointmentLayout, _component_wrapper_co);
        function AppointmentLayout() {
          _classCallCheck(this, AppointmentLayout);
          return _callSuper(this, AppointmentLayout, arguments);
        }
        _createClass(AppointmentLayout, [{
          key: "_propsInfo",
          get: function get() {
            return {
              twoWay: [],
              allowNull: [],
              elements: [],
              templates: [],
              props: ["isAllDay"]
            };
          }
        }, {
          key: "_viewComponent",
          get: function get() {
            return _layout__WEBPACK_IMPORTED_MODULE_2__.AppointmentLayout;
          }
        }]);
        return AppointmentLayout;
      }(_component_wrapper_common_component__WEBPACK_IMPORTED_MODULE_1__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxAppointmentLayout", AppointmentLayout);

      /***/
    }),
    /***/68972: (
    /*!***********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/layout.js ***!
      \***********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction5;
        },
        /* harmony export */"AppointmentLayoutProps": function AppointmentLayoutProps() {
          return /* binding */_AppointmentLayoutProps;
        },
        /* harmony export */"AppointmentLayout": function AppointmentLayout() {
          return /* binding */_AppointmentLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _appointment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./appointment */5562);
      /* harmony import */
      var _overflow_indicator_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./overflow_indicator/layout */13296);
      /* harmony import */
      var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../utils/combine_classes */33582);
      /* harmony import */
      var _appointments_context__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../appointments_context */29263);
      /* harmony import */
      var _utils_subscribe_to_event__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../utils/subscribe_to_event */959);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["isAllDay"];
      var SELECTOR = {
        appointment: ".dx-scheduler-appointment",
        allDay: "dx-scheduler-all-day-appointment",
        collector: "dx-scheduler-appointment-collector"
      };
      var _viewFunction5 = function _viewFunction5(_ref) {
        var appointments = _ref.appointments,
          _ref$appointmentsCont = _ref.appointmentsContextValue,
          appointmentTemplate = _ref$appointmentsCont.appointmentTemplate,
          groups = _ref$appointmentsCont.groups,
          hideReducedIconTooltip = _ref$appointmentsCont.hideReducedIconTooltip,
          onAppointmentClick = _ref$appointmentsCont.onAppointmentClick,
          onAppointmentDoubleClick = _ref$appointmentsCont.onAppointmentDoubleClick,
          overflowIndicatorTemplate = _ref$appointmentsCont.overflowIndicatorTemplate,
          showReducedIconTooltip = _ref$appointmentsCont.showReducedIconTooltip,
          classes = _ref.classes,
          layoutRef = _ref.layoutRef,
          overflowIndicators = _ref.overflowIndicators;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", classes, [appointments.map(function (item, index) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _appointment__WEBPACK_IMPORTED_MODULE_4__.Appointment, {
            viewModel: item,
            appointmentTemplate: appointmentTemplate,
            index: index,
            groups: groups,
            onItemClick: onAppointmentClick,
            onItemDoubleClick: onAppointmentDoubleClick,
            showReducedIconTooltip: showReducedIconTooltip,
            hideReducedIconTooltip: hideReducedIconTooltip
          }, item.key);
        }), overflowIndicators.map(function (item, index) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _overflow_indicator_layout__WEBPACK_IMPORTED_MODULE_5__.OverflowIndicator, {
            viewModel: item,
            groups: groups,
            overflowIndicatorTemplate: overflowIndicatorTemplate,
            "data-index": index
          }, item.key);
        })], 0, null, null, layoutRef);
      };
      var _AppointmentLayoutProps = {
        isAllDay: false
      };
      var _AppointmentLayout = /*#__PURE__*/function (_devextreme_runtime_i5) {
        _inherits(_AppointmentLayout, _devextreme_runtime_i5);
        function _AppointmentLayout(props) {
          var _this176;
          _classCallCheck(this, _AppointmentLayout);
          _this176 = _callSuper(this, _AppointmentLayout, [props]);
          _this176.state = {};
          _this176.layoutRef = (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createRef)();
          _this176.__getterCache = {};
          _this176.pointerEventsEffect = _this176.pointerEventsEffect.bind(_assertThisInitialized(_this176));
          _this176.onAppointmentPointerDown = _this176.onAppointmentPointerDown.bind(_assertThisInitialized(_this176));
          return _this176;
        }
        _createClass(_AppointmentLayout, [{
          key: "appointmentsContextValue",
          get: function get() {
            if (this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id]) {
              return this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id];
            }
            return _appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.defaultValue;
          }
        }, {
          key: "createEffects",
          value: function createEffects() {
            return [new _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoEffect(this.pointerEventsEffect, [this.appointmentsContextValue]), (0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()];
          }
        }, {
          key: "updateEffects",
          value: function updateEffects() {
            var _this$_effects$;
            null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.appointmentsContextValue]);
          }
        }, {
          key: "pointerEventsEffect",
          value: function pointerEventsEffect() {
            var _this177 = this;
            var disposePointerDown = (0, _utils_subscribe_to_event__WEBPACK_IMPORTED_MODULE_8__.subscribeToDXPointerDownEvent)(this.layoutRef.current, function (e) {
              return _this177.onAppointmentPointerDown(e);
            });
            return function () {
              disposePointerDown();
            };
          }
        }, {
          key: "classes",
          get: function get() {
            var isAllDay = this.props.isAllDay;
            return (0, _utils_combine_classes__WEBPACK_IMPORTED_MODULE_6__.combineClasses)({
              "dx-scheduler-scrollable-appointments": !isAllDay,
              "dx-scheduler-all-day-appointments": isAllDay
            });
          }
        }, {
          key: "appointments",
          get: function get() {
            var _this178 = this;
            if (void 0 !== this.__getterCache.appointments) {
              return this.__getterCache.appointments;
            }
            return this.__getterCache.appointments = function () {
              if (_this178.props.isAllDay) {
                return _this178.appointmentsContextValue.viewModel.allDay;
              }
              return _this178.appointmentsContextValue.viewModel.regular;
            }();
          }
        }, {
          key: "overflowIndicators",
          get: function get() {
            var _this179 = this;
            if (void 0 !== this.__getterCache.overflowIndicators) {
              return this.__getterCache.overflowIndicators;
            }
            return this.__getterCache.overflowIndicators = function () {
              if (_this179.props.isAllDay) {
                return _this179.appointmentsContextValue.viewModel.allDayCompact;
              }
              return _this179.appointmentsContextValue.viewModel.regularCompact;
            }();
          }
        }, {
          key: "onAppointmentPointerDown",
          value: function onAppointmentPointerDown(e) {
            var appointmentElement = e.target.closest(SELECTOR.appointment);
            if (appointmentElement) {
              var index = appointmentElement.dataset.index;
              var focusedAppointmentIndex = index ? parseInt(index, 10) : -1;
              var isAllDay = appointmentElement.classList.contains(SELECTOR.allDay);
              var isCompact = appointmentElement.classList.contains(SELECTOR.collector);
              var typeMap = {
                allDayCompact: isAllDay && isCompact,
                allDay: isAllDay && !isCompact,
                regularCompact: !isAllDay && isCompact,
                regular: !isAllDay && !isCompact
              };
              var appointmentType = Object.entries(typeMap).filter(function (item) {
                return item[1];
              })[0][0];
              this.appointmentsContextValue.updateFocusedAppointment(appointmentType, focusedAppointmentIndex);
            }
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "componentWillUpdate",
          value: function componentWillUpdate(nextProps, nextState, context) {
            _get(_getPrototypeOf(_AppointmentLayout.prototype), "componentWillUpdate", this).call(this);
            if (this.props.isAllDay !== nextProps.isAllDay || this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id] !== context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id]) {
              this.__getterCache.appointments = void 0;
            }
            if (this.props.isAllDay !== nextProps.isAllDay || this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id] !== context[_appointments_context__WEBPACK_IMPORTED_MODULE_7__.AppointmentsContext.id]) {
              this.__getterCache.overflowIndicators = void 0;
            }
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction5({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props),
              layoutRef: this.layoutRef,
              appointmentsContextValue: this.appointmentsContextValue,
              classes: this.classes,
              appointments: this.appointments,
              overflowIndicators: this.overflowIndicators,
              onAppointmentPointerDown: this.onAppointmentPointerDown,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _AppointmentLayout;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent);
      _AppointmentLayout.defaultProps = _AppointmentLayoutProps;

      /***/
    }),
    /***/13296: (
    /*!******************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/overflow_indicator/layout.js ***!
      \******************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction6;
        },
        /* harmony export */"OverflowIndicatorProps": function OverflowIndicatorProps() {
          return /* binding */_OverflowIndicatorProps;
        },
        /* harmony export */"OverflowIndicator": function OverflowIndicator() {
          return /* binding */_OverflowIndicator;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../utils/combine_classes */33582);
      /* harmony import */
      var _button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../button */6941);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./utils */34534);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../../../localization/message */19336);
      /* harmony import */
      var _appointments_context__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../appointments_context */29263);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../utils */259);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["groups", "overflowIndicatorTemplate", "viewModel"];
      var _viewFunction6 = function _viewFunction6(_ref) {
        var classes = _ref.classes,
          data = _ref.data,
          OverflowIndicatorTemplate = _ref.props.overflowIndicatorTemplate,
          styles = _ref.styles,
          text = _ref.text;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _button__WEBPACK_IMPORTED_MODULE_5__.Button, {
          style: (0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(styles),
          className: classes,
          type: "default",
          stylingMode: "contained",
          children: OverflowIndicatorTemplate ? OverflowIndicatorTemplate({
            data: data
          }) : (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "span", null, text, 0)
        });
      };
      var _OverflowIndicatorProps = {};
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _OverflowIndicator = /*#__PURE__*/function (_devextreme_runtime_i6) {
        _inherits(_OverflowIndicator, _devextreme_runtime_i6);
        function _OverflowIndicator(props) {
          var _this180;
          _classCallCheck(this, _OverflowIndicator);
          _this180 = _callSuper(this, _OverflowIndicator, [props]);
          _this180.state = {
            color: void 0
          };
          _this180.updateStylesEffect = _this180.updateStylesEffect.bind(_assertThisInitialized(_this180));
          return _this180;
        }
        _createClass(_OverflowIndicator, [{
          key: "appointmentsContextValue",
          get: function get() {
            if (this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_8__.AppointmentsContext.id]) {
              return this.context[_appointments_context__WEBPACK_IMPORTED_MODULE_8__.AppointmentsContext.id];
            }
            return _appointments_context__WEBPACK_IMPORTED_MODULE_8__.AppointmentsContext.defaultValue;
          }
        }, {
          key: "createEffects",
          value: function createEffects() {
            return [new _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoEffect(this.updateStylesEffect, [this.props.groups, this.props.viewModel, this.appointmentsContextValue])];
          }
        }, {
          key: "updateEffects",
          value: function updateEffects() {
            var _this$_effects$;
            null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.groups, this.props.viewModel, this.appointmentsContextValue]);
          }
        }, {
          key: "updateStylesEffect",
          value: function updateStylesEffect() {
            var _this181 = this;
            var _this$props2 = this.props,
              groups = _this$props2.groups,
              viewModel = _this$props2.viewModel;
            (0, _utils__WEBPACK_IMPORTED_MODULE_6__.getIndicatorColor)(this.appointmentsContextValue, viewModel, groups).then(function (color) {
              _this181.setState(function (__state_argument) {
                return {
                  color: color
                };
              });
            });
          }
        }, {
          key: "data",
          get: function get() {
            return {
              appointmentCount: this.props.viewModel.items.settings.length,
              isCompact: this.props.viewModel.isCompact
            };
          }
        }, {
          key: "text",
          get: function get() {
            var isCompact = this.props.viewModel.isCompact;
            var appointmentCount = this.data.appointmentCount;
            if (isCompact) {
              return "".concat(appointmentCount);
            }
            var formatter = _localization_message__WEBPACK_IMPORTED_MODULE_7__["default"].getFormatter("dxScheduler-moreAppointments");
            return formatter(appointmentCount);
          }
        }, {
          key: "appointmentStyles",
          get: function get() {
            return (0, _utils__WEBPACK_IMPORTED_MODULE_6__.getOverflowIndicatorStyles)(this.props.viewModel);
          }
        }, {
          key: "styles",
          get: function get() {
            return (0, _utils__WEBPACK_IMPORTED_MODULE_9__.mergeStylesWithColor)(this.state.color, this.appointmentStyles);
          }
        }, {
          key: "classes",
          get: function get() {
            return (0, _utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__.combineClasses)({
              "dx-scheduler-appointment-collector": true,
              "dx-scheduler-appointment-collector-compact": this.data.isCompact
            });
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction6({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                overflowIndicatorTemplate: getTemplate(props.overflowIndicatorTemplate)
              }),
              color: this.state.color,
              appointmentsContextValue: this.appointmentsContextValue,
              data: this.data,
              text: this.text,
              appointmentStyles: this.appointmentStyles,
              styles: this.styles,
              classes: this.classes,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _OverflowIndicator;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoComponent);
      _OverflowIndicator.defaultProps = _OverflowIndicatorProps;

      /***/
    }),
    /***/34534: (
    /*!*****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js ***!
      \*****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getOverflowIndicatorStyles": function getOverflowIndicatorStyles() {
          return /* binding */_getOverflowIndicatorStyles;
        },
        /* harmony export */"getOverflowIndicatorColor": function getOverflowIndicatorColor() {
          return /* binding */_getOverflowIndicatorColor;
        },
        /* harmony export */"getIndicatorColor": function getIndicatorColor() {
          return /* binding */_getIndicatorColor;
        }
        /* harmony export */
      });
      /* harmony import */
      var _workspaces_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../workspaces/utils */59016);
      /* harmony import */
      var _resources_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../resources/utils */56085);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _getOverflowIndicatorStyles = function _getOverflowIndicatorStyles(viewModel) {
        var _viewModel$geometry = viewModel.geometry,
          height = _viewModel$geometry.height,
          left = _viewModel$geometry.left,
          top = _viewModel$geometry.top,
          width = _viewModel$geometry.width;
        var result = (0, _workspaces_utils__WEBPACK_IMPORTED_MODULE_0__.addToStyles)([{
          attr: "left",
          value: "".concat(left, "px")
        }, {
          attr: "top",
          value: "".concat(top, "px")
        }, {
          attr: "width",
          value: "".concat(width, "px")
        }, {
          attr: "height",
          value: "".concat(height, "px")
        }, {
          attr: "boxShadow",
          value: "inset ".concat(width, "px 0 0 0 rgba(0, 0, 0, 0.3)")
        }]);
        return result;
      };
      var _getOverflowIndicatorColor = function _getOverflowIndicatorColor(color, colors) {
        return !colors.length || 0 === colors.filter(function (item) {
          return item !== color;
        }).length ? color : void 0;
      };
      var _getIndicatorColor = function _getIndicatorColor(appointmentContext, viewModel, groups) {
        var _viewModel$groupIndex;
        var groupIndex = null !== (_viewModel$groupIndex = viewModel.groupIndex) && void 0 !== _viewModel$groupIndex ? _viewModel$groupIndex : 0;
        var appointment = viewModel.items.settings[0].appointment;
        return (0, _resources_utils__WEBPACK_IMPORTED_MODULE_1__.getAppointmentColor)({
          resources: appointmentContext.resources,
          resourceLoaderMap: appointmentContext.resourceLoaderMap,
          resourcesDataAccessors: appointmentContext.dataAccessors.resources,
          loadedResources: appointmentContext.loadedResources
        }, {
          itemData: appointment,
          groupIndex: groupIndex,
          groups: groups
        });
      };

      /***/
    }),
    /***/259: (
    /*!**********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/utils.js ***!
      \**********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getAppointmentStyles": function getAppointmentStyles() {
          return /* binding */_getAppointmentStyles;
        },
        /* harmony export */"getAppointmentKey": function getAppointmentKey() {
          return /* binding */_getAppointmentKey;
        },
        /* harmony export */"getReducedIconTooltipText": function getReducedIconTooltipText() {
          return /* binding */_getReducedIconTooltipText;
        },
        /* harmony export */"mergeStylesWithColor": function mergeStylesWithColor() {
          return /* binding */_mergeStylesWithColor;
        }
        /* harmony export */
      });
      /* harmony import */
      var _workspaces_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../workspaces/utils */59016);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../localization/message */19336);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../localization/date */83881);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment/utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var EditorLabelLocalizationConst = "dxScheduler-editorLabelEndDate";
      var _getAppointmentStyles = function _getAppointmentStyles(viewModel) {
        var _viewModel$geometry2 = viewModel.geometry,
          height = _viewModel$geometry2.height,
          left = _viewModel$geometry2.left,
          top = _viewModel$geometry2.top,
          width = _viewModel$geometry2.width;
        return (0, _workspaces_utils__WEBPACK_IMPORTED_MODULE_0__.addToStyles)([{
          attr: "height",
          value: "".concat(height || 50, "px")
        }, {
          attr: "width",
          value: "".concat(width || 50, "px")
        }, {
          attr: "top",
          value: "".concat(top, "px")
        }, {
          attr: "left",
          value: "".concat(left, "px")
        }]);
      };
      var _getAppointmentKey = function _getAppointmentKey(geometry) {
        var height = geometry.height,
          left = geometry.left,
          top = geometry.top,
          width = geometry.width;
        return "".concat(left, "-").concat(top, "-").concat(width, "-").concat(height);
      };
      var _getReducedIconTooltipText = function _getReducedIconTooltipText(endDate) {
        var tooltipLabel = _localization_message__WEBPACK_IMPORTED_MODULE_1__["default"].format(EditorLabelLocalizationConst);
        if (!endDate) {
          return tooltipLabel;
        }
        var date = new Date(endDate);
        var monthAndDay = _localization_date__WEBPACK_IMPORTED_MODULE_2__["default"].format(date, "monthAndDay");
        var year = _localization_date__WEBPACK_IMPORTED_MODULE_2__["default"].format(date, "year");
        return "".concat(tooltipLabel, ": ").concat(monthAndDay, ", ").concat(year);
      };
      var _mergeStylesWithColor = function _mergeStylesWithColor(color, styles) {
        return !color ? styles : (0, _workspaces_utils__WEBPACK_IMPORTED_MODULE_0__.addToStyles)([{
          attr: "backgroundColor",
          value: color
        }], styles);
      };

      /***/
    }),
    /***/89448: (
    /*!************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay.js ***!
      \************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getAppointmentTakesAllDay": function getAppointmentTakesAllDay() {
          return /* binding */_getAppointmentTakesAllDay;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../core/utils/date */35341);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var getAppointmentDurationInHours = function getAppointmentDurationInHours(startDate, endDate) {
        return (endDate.getTime() - startDate.getTime()) / _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("hour");
      };
      var appointmentHasShortDayDuration = function appointmentHasShortDayDuration(startDate, endDate, viewStartDayHour, viewEndDayHour) {
        var appointmentDurationInHours = getAppointmentDurationInHours(startDate, endDate);
        var viewDurationInHours = viewEndDayHour - viewStartDayHour;
        var startDateHours = startDate.getHours();
        var endDateHours = endDate.getHours();
        return appointmentDurationInHours >= viewDurationInHours && startDateHours === viewStartDayHour && endDateHours === viewEndDayHour;
      };
      var _getAppointmentTakesAllDay = function _getAppointmentTakesAllDay(appointmentAdapter, viewStartDayHour, viewEndDayHour, allDayPanelMode) {
        var hasAllDay = function hasAllDay() {
          return appointmentAdapter.allDay;
        };
        switch (allDayPanelMode) {
          case "hidden":
            return false;
          case "allDay":
            return hasAllDay();
          case "all":
          default:
            if (hasAllDay()) {
              return true;
            }
            var endDate = appointmentAdapter.endDate,
              startDate = appointmentAdapter.startDate;
            if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(endDate)) {
              return false;
            }
            var appointmentDurationInHours = getAppointmentDurationInHours(startDate, endDate);
            return appointmentDurationInHours >= 24 || appointmentHasShortDayDuration(startDate, endDate, viewStartDayHour, viewEndDayHour);
        }
      };

      /***/
    }),
    /***/72930: (
    /*!***************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointment_edit_form/popup_config.js ***!
      \***************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"POPUP_WIDTH": function POPUP_WIDTH() {
          return /* binding */_POPUP_WIDTH;
        },
        /* harmony export */"defaultAnimation": function defaultAnimation() {
          return /* binding */_defaultAnimation;
        },
        /* harmony export */"getPopupToolbarItems": function getPopupToolbarItems() {
          return /* binding */_getPopupToolbarItems;
        },
        /* harmony export */"isPopupFullScreenNeeded": function isPopupFullScreenNeeded() {
          return /* binding */_isPopupFullScreenNeeded;
        },
        /* harmony export */"getMaxWidth": function getMaxWidth() {
          return /* binding */_getMaxWidth2;
        },
        /* harmony export */"getPopupSize": function getPopupSize() {
          return /* binding */_getPopupSize;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../localization/message */19336);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../core/devices */41881);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../core/utils/size */84167);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../core/utils/window */88684);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointment_edit_form/popup_config.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _POPUP_WIDTH = {
        DEFAULT: 485,
        RECURRENCE: 970,
        FULLSCREEN: 1e3,
        MOBILE: {
          DEFAULT: 350,
          FULLSCREEN: 500
        }
      };
      var _defaultAnimation = {
        show: {
          type: "pop",
          duration: 300,
          from: {
            scale: .55
          }
        },
        hide: {
          type: "pop",
          duration: 300,
          to: {
            opacity: 0,
            scale: .55
          },
          from: {
            opacity: 1,
            scale: 1
          }
        }
      };
      var isMobile = function isMobile() {
        return "desktop" !== _core_devices__WEBPACK_IMPORTED_MODULE_2__["default"].current().deviceType;
      };
      var isIOSPlatform = function isIOSPlatform() {
        return "ios" === _core_devices__WEBPACK_IMPORTED_MODULE_2__["default"].current().platform;
      };
      var TOOLBAR_LOCATION = {
        AFTER: "after",
        BEFORE: "before"
      };
      var getButtonsConfig = function getButtonsConfig() {
        return {
          doneButton: {
            shortcut: "done",
            options: {
              text: _localization_message__WEBPACK_IMPORTED_MODULE_1__["default"].format("Done")
            },
            location: TOOLBAR_LOCATION.AFTER
          },
          cancelButton: {
            shortcut: "cancel",
            location: isIOSPlatform() ? TOOLBAR_LOCATION.BEFORE : TOOLBAR_LOCATION.AFTER
          }
        };
      };
      var _getPopupToolbarItems = function _getPopupToolbarItems(allowUpdating, doneClick) {
        var result = [];
        var buttonsConfig = getButtonsConfig();
        if (allowUpdating) {
          result.push((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, buttonsConfig.doneButton, {
            onClick: doneClick
          }));
        }
        result.push(buttonsConfig.cancelButton);
        return result;
      };
      var _isPopupFullScreenNeeded = function _isPopupFullScreenNeeded() {
        var window = (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_4__.getWindow)();
        var width = window && (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_3__.getWidth)(window);
        if (width) {
          return isMobile() ? width < _POPUP_WIDTH.MOBILE.FULLSCREEN : width < _POPUP_WIDTH.FULLSCREEN;
        }
        return false;
      };
      var _getMaxWidth2 = function _getMaxWidth2(isRecurrence) {
        if (isMobile()) {
          return _POPUP_WIDTH.MOBILE.DEFAULT;
        }
        return isRecurrence ? _POPUP_WIDTH.RECURRENCE : _POPUP_WIDTH.DEFAULT;
      };
      var _getPopupSize = function _getPopupSize(isRecurrence) {
        return {
          fullScreen: _isPopupFullScreenNeeded(),
          maxWidth: _getMaxWidth2(isRecurrence)
        };
      };

      /***/
    }),
    /***/29263: (
    /*!*************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/appointments_context.js ***!
      \*************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"AppointmentsContext": function AppointmentsContext() {
          return /* binding */_AppointmentsContext;
        }
        /* harmony export */
      });
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/appointments_context.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _AppointmentsContext = (0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0);

      /***/
    }),
    /***/29239: (
    /*!***********************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/consts.js ***!
      \***********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"VERTICAL_GROUP_ORIENTATION": function VERTICAL_GROUP_ORIENTATION() {
          return /* binding */_VERTICAL_GROUP_ORIENTATION;
        },
        /* harmony export */"HORIZONTAL_GROUP_ORIENTATION": function HORIZONTAL_GROUP_ORIENTATION() {
          return /* binding */_HORIZONTAL_GROUP_ORIENTATION2;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scheduler/consts.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _VERTICAL_GROUP_ORIENTATION = "vertical";
      var _HORIZONTAL_GROUP_ORIENTATION2 = "horizontal";

      /***/
    }),
    /***/80337: (
    /*!*********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/model/untyped_getCurrentView.js ***!
      \*********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"renovationGetCurrentView": function renovationGetCurrentView() {
          return /* binding */_renovationGetCurrentView;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/type */33275);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/model/untyped_getCurrentView.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var VIEW_TYPES = ["day", "week", "workWeek", "month", "timelineDay", "timelineWeek", "timelineWorkWeek", "timelineMonth", "agenda"];
      var _renovationGetCurrentView = function _renovationGetCurrentView(currentView, views) {
        var currentViewProps = views.find(function (view) {
          var names = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isObject)(view) ? [view.name, view.type] : [view];
          if (names.includes(currentView)) {
            return true;
          }
          return false;
        });
        if (void 0 === currentViewProps) {
          if (VIEW_TYPES.includes(currentView)) {
            currentViewProps = currentView;
          } else {
            var _views = _slicedToArray(views, 1);
            currentViewProps = _views[0];
          }
        }
        return currentViewProps;
      };

      /***/
    }),
    /***/72620: (
    /*!****************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/model/utils.js ***!
      \****************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getAppointmentRenderingStrategyName": function getAppointmentRenderingStrategyName() {
          return /* binding */_getAppointmentRenderingStrategyName;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scheduler/model/utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _getAppointmentRenderingStrategyName = function _getAppointmentRenderingStrategyName(viewType) {
        var renderingStrategy = {
          day: {
            renderingStrategy: "vertical"
          },
          week: {
            renderingStrategy: "week"
          },
          workWeek: {
            renderingStrategy: "week"
          },
          month: {
            renderingStrategy: "horizontalMonth"
          },
          timelineDay: {
            renderingStrategy: "horizontal"
          },
          timelineWeek: {
            renderingStrategy: "horizontal"
          },
          timelineWorkWeek: {
            renderingStrategy: "horizontal"
          },
          timelineMonth: {
            renderingStrategy: "horizontalMonthLine"
          },
          agenda: {
            renderingStrategy: "agenda"
          }
        }[viewType].renderingStrategy;
        return renderingStrategy;
      };

      /***/
    }),
    /***/78993: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/resources/hasResourceValue.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"hasResourceValue": function hasResourceValue() {
          return /* binding */_hasResourceValue;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/common */37552);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/resources/hasResourceValue.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _hasResourceValue = function _hasResourceValue(resourceValues, itemValue) {
        return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(resourceValues.find(function (value) {
          return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_1__.equalByValue)(value, itemValue);
        }));
      };

      /***/
    }),
    /***/56085: (
    /*!********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/resources/utils.js ***!
      \********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getAppointmentColor": function getAppointmentColor() {
          return /* binding */_getAppointmentColor3;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../__internal/scheduler/resources/m_utils */48025);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/resources/utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _getAppointmentColor3 = function _getAppointmentColor3(resourceConfig, appointmentConfig) {
        return (0, _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__.getAppointmentColor)((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, resourceConfig, {
          dataAccessors: resourceConfig.resourcesDataAccessors
        }), appointmentConfig);
      };

      /***/
    }),
    /***/41059: (
    /*!************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator.js ***!
      \************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"createTimeZoneCalculator": function createTimeZoneCalculator() {
          return /* binding */_createTimeZoneCalculator;
        }
        /* harmony export */
      });
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./utils */77374);
      /* harmony import */
      var _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../__internal/scheduler/m_utils_time_zone */98281);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _createTimeZoneCalculator = function _createTimeZoneCalculator(currentTimeZone) {
        return new _utils__WEBPACK_IMPORTED_MODULE_0__.TimeZoneCalculator({
          getClientOffset: function getClientOffset(date) {
            return _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_1__["default"].getClientTimezoneOffset(date);
          },
          tryGetCommonOffset: function tryGetCommonOffset(date) {
            return _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_1__["default"].calculateTimezoneByValue(currentTimeZone, date);
          },
          tryGetAppointmentOffset: function tryGetAppointmentOffset(date, appointmentTimezone) {
            return _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_1__["default"].calculateTimezoneByValue(appointmentTimezone, date);
          }
        });
      };

      /***/
    }),
    /***/91757: (
    /*!*****************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/timeZoneCalculator/types.js ***!
      \*****************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"PathTimeZoneConversion": function PathTimeZoneConversion() {
          return /* binding */_PathTimeZoneConversion;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scheduler/timeZoneCalculator/types.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _PathTimeZoneConversion;
      !function (PathTimeZoneConversion) {
        PathTimeZoneConversion.fromSourceToAppointment = "toAppointment";
        PathTimeZoneConversion.fromAppointmentToSource = "fromAppointment";
        PathTimeZoneConversion.fromSourceToGrid = "toGrid";
        PathTimeZoneConversion.fromGridToSource = "fromGrid";
      }(_PathTimeZoneConversion || (_PathTimeZoneConversion = {}));

      /***/
    }),
    /***/77374: (
    /*!*****************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/timeZoneCalculator/utils.js ***!
      \*****************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"TimeZoneCalculator": function TimeZoneCalculator() {
          return /* binding */_TimeZoneCalculator;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../core/utils/date */35341);
      /* harmony import */
      var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./types */91757);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/timeZoneCalculator/utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var MS_IN_MINUTE = 6e4;
      var MS_IN_HOUR = 60 * MS_IN_MINUTE;
      var _TimeZoneCalculator = /*#__PURE__*/function () {
        function _TimeZoneCalculator(options) {
          _classCallCheck(this, _TimeZoneCalculator);
          this.options = options;
        }
        _createClass(_TimeZoneCalculator, [{
          key: "createDate",
          value: function createDate(sourceDate, info) {
            var date = new Date(sourceDate);
            switch (info.path) {
              case _types__WEBPACK_IMPORTED_MODULE_2__.PathTimeZoneConversion.fromSourceToAppointment:
                return this.getConvertedDate(date, info.appointmentTimeZone, true, false);
              case _types__WEBPACK_IMPORTED_MODULE_2__.PathTimeZoneConversion.fromAppointmentToSource:
                return this.getConvertedDate(date, info.appointmentTimeZone, true, true);
              case _types__WEBPACK_IMPORTED_MODULE_2__.PathTimeZoneConversion.fromSourceToGrid:
                return this.getConvertedDate(date, info.appointmentTimeZone, false, false);
              case _types__WEBPACK_IMPORTED_MODULE_2__.PathTimeZoneConversion.fromGridToSource:
                return this.getConvertedDate(date, info.appointmentTimeZone, false, true);
              default:
                throw new Error("not specified pathTimeZoneConversion");
            }
          }
        }, {
          key: "getOffsets",
          value: function getOffsets(date, appointmentTimezone) {
            var clientOffset = -this.getClientOffset(date) / _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("hour");
            var commonOffset = this.getCommonOffset(date);
            var appointmentOffset = this.getAppointmentOffset(date, appointmentTimezone);
            return {
              client: clientOffset,
              common: !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(commonOffset) ? clientOffset : commonOffset,
              appointment: "number" !== typeof appointmentOffset ? clientOffset : appointmentOffset
            };
          }
        }, {
          key: "getConvertedDateByOffsets",
          value: function getConvertedDateByOffsets(date, clientOffset, targetOffset, isBack) {
            var direction = isBack ? -1 : 1;
            var resultDate = new Date(date);
            resultDate.setMinutes(resultDate.getMinutes() - direction * (60 * clientOffset));
            resultDate.setMinutes(resultDate.getMinutes() + direction * (60 * targetOffset));
            return new Date(resultDate);
          }
        }, {
          key: "getOriginStartDateOffsetInMs",
          value: function getOriginStartDateOffsetInMs(date, timezone, isUTCDate) {
            var offsetInHours = this.getOffsetInHours(date, timezone, isUTCDate);
            return offsetInHours * MS_IN_HOUR;
          }
        }, {
          key: "getOffsetInHours",
          value: function getOffsetInHours(date, timezone, isUTCDate) {
            var _this$getOffsets = this.getOffsets(date, timezone),
              appointment = _this$getOffsets.appointment,
              client = _this$getOffsets.client,
              common = _this$getOffsets.common;
            if (!!timezone && isUTCDate) {
              return appointment - client;
            }
            if (!!timezone && !isUTCDate) {
              return appointment - common;
            }
            if (!timezone && isUTCDate) {
              return common - client;
            }
            return 0;
          }
        }, {
          key: "getClientOffset",
          value: function getClientOffset(date) {
            return this.options.getClientOffset(date);
          }
        }, {
          key: "getCommonOffset",
          value: function getCommonOffset(date) {
            return this.options.tryGetCommonOffset(date);
          }
        }, {
          key: "getAppointmentOffset",
          value: function getAppointmentOffset(date, appointmentTimezone) {
            return this.options.tryGetAppointmentOffset(date, appointmentTimezone);
          }
        }, {
          key: "getConvertedDate",
          value: function getConvertedDate(date, appointmentTimezone, useAppointmentTimeZone, isBack) {
            var newDate = new Date(date.getTime());
            var offsets = this.getOffsets(newDate, appointmentTimezone);
            if (useAppointmentTimeZone && !!appointmentTimezone) {
              return this.getConvertedDateByOffsets(date, offsets.client, offsets.appointment, isBack);
            }
            return this.getConvertedDateByOffsets(date, offsets.client, offsets.common, isBack);
          }
        }]);
        return _TimeZoneCalculator;
      }();
      /***/
    }),
    /***/48543: (
    /*!***************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/utils/data.js ***!
      \***************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getPreparedDataItems": function getPreparedDataItems() {
          return /* binding */_getPreparedDataItems;
        },
        /* harmony export */"resolveDataItems": function resolveDataItems() {
          return /* binding */_resolveDataItems;
        }
        /* harmony export */
      });
      /* harmony import */
      var _internal_scheduler_appointments_data_provider_m_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../__internal/scheduler/appointments/data_provider/m_utils */57534);
      /* harmony import */
      var _internal_scheduler_m_appointment_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../__internal/scheduler/m_appointment_adapter */91634);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../core/utils/type */33275);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/utils/data.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var RECURRENCE_FREQ = "freq";
      var _getPreparedDataItems = function _getPreparedDataItems(dataItems, dataAccessors, cellDurationInMinutes, timeZoneCalculator) {
        var result = [];
        null === dataItems || void 0 === dataItems ? void 0 : dataItems.forEach(function (rawAppointment) {
          var _recurrenceRule$match;
          var startDate = new Date(dataAccessors.getter.startDate(rawAppointment));
          var endDate = new Date(dataAccessors.getter.endDate(rawAppointment));
          (0, _internal_scheduler_appointments_data_provider_m_utils__WEBPACK_IMPORTED_MODULE_0__.replaceWrongEndDate)(rawAppointment, startDate, endDate, cellDurationInMinutes, dataAccessors);
          var adapter = (0, _internal_scheduler_m_appointment_adapter__WEBPACK_IMPORTED_MODULE_1__.createAppointmentAdapter)(rawAppointment, dataAccessors, timeZoneCalculator);
          var comparableStartDate = adapter.startDate && adapter.calculateStartDate("toGrid");
          var comparableEndDate = adapter.endDate && adapter.calculateEndDate("toGrid");
          var regex = new RegExp(RECURRENCE_FREQ, "gi");
          var recurrenceRule = adapter.recurrenceRule;
          var hasRecurrenceRule = !!(null !== recurrenceRule && void 0 !== recurrenceRule && null !== (_recurrenceRule$match = recurrenceRule.match(regex)) && void 0 !== _recurrenceRule$match && _recurrenceRule$match.length);
          var visible = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(rawAppointment.visible) ? !!rawAppointment.visible : true;
          if (comparableStartDate && comparableEndDate) {
            result.push({
              allDay: !!adapter.allDay,
              startDate: comparableStartDate,
              startDateTimeZone: rawAppointment.startDateTimeZone,
              endDate: comparableEndDate,
              endDateTimeZone: rawAppointment.endDateTimeZone,
              recurrenceRule: adapter.recurrenceRule,
              recurrenceException: adapter.recurrenceException,
              hasRecurrenceRule: hasRecurrenceRule,
              visible: visible,
              rawAppointment: rawAppointment
            });
          }
        });
        return result;
      };
      var _resolveDataItems = function _resolveDataItems(options) {
        return Array.isArray(options) ? options : options.data;
      };

      /***/
    }),
    /***/31424: (
    /*!****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/utils/filtering/getDatesWithoutTime.js ***!
      \****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../core/utils/date */35341);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/utils/filtering/getDatesWithoutTime.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var getDatesWithoutTime = function getDatesWithoutTime(min, max) {
        var newMin = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(min);
        var newMax = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(max);
        newMax.setDate(newMax.getDate() + 1);
        return [newMin, newMax];
      };
      /* harmony default export */
      __webpack_exports__["default"] = getDatesWithoutTime;

      /***/
    }),
    /***/57285: (
    /*!***************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/utils/filtering/remote.js ***!
      \***************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../core/utils/common */37552);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../../core/utils/date_serialization */37043);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../../core/utils/type */33275);
      /* harmony import */
      var _getDatesWithoutTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./getDatesWithoutTime */31424);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/utils/filtering/remote.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var FilterPosition = {
        dateFilter: 0,
        userFilter: 1
      };
      var RemoteFilterCombiner = /*#__PURE__*/function () {
        function RemoteFilterCombiner(options) {
          _classCallCheck(this, RemoteFilterCombiner);
          this.options = options;
        }
        _createClass(RemoteFilterCombiner, [{
          key: "dataAccessors",
          get: function get() {
            return this.options.dataAccessors;
          }
        }, {
          key: "dataSourceFilter",
          get: function get() {
            return this.options.dataSourceFilter;
          }
        }, {
          key: "dateSerializationFormat",
          get: function get() {
            return this.options.dateSerializationFormat;
          }
        }, {
          key: "forceIsoDateParsing",
          get: function get() {
            return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isDefined)(this.options.forceIsoDateParsing) ? this.options.forceIsoDateParsing : true;
          }
        }, {
          key: "makeDateFilter",
          value: function makeDateFilter(min, max) {
            var _this$dataAccessors$e = this.dataAccessors.expr,
              endDateExpr = _this$dataAccessors$e.endDateExpr,
              recurrenceRuleExpr = _this$dataAccessors$e.recurrenceRuleExpr,
              startDateExpr = _this$dataAccessors$e.startDateExpr;
            var dateFilter = [[[endDateExpr, ">=", min], [startDateExpr, "<", max]], "or", [recurrenceRuleExpr, "startswith", "freq"], "or", [[endDateExpr, min], [startDateExpr, min]]];
            if (!recurrenceRuleExpr) {
              dateFilter.splice(1, 2);
            }
            return dateFilter;
          }
        }, {
          key: "combineFilters",
          value: function combineFilters(dateFilter, userFilter) {
            var combinedFilter = [];
            dateFilter && combinedFilter.push(dateFilter);
            userFilter && combinedFilter.push(userFilter);
            return this.serializeRemoteFilter(combinedFilter);
          }
        }, {
          key: "serializeRemoteFilter",
          value: function serializeRemoteFilter(combinedFilter) {
            if (!Array.isArray(combinedFilter)) {
              return combinedFilter;
            }
            var _this$dataAccessors$e2 = this.dataAccessors.expr,
              endDateExpr = _this$dataAccessors$e2.endDateExpr,
              startDateExpr = _this$dataAccessors$e2.startDateExpr;
            var filter = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)([], combinedFilter);
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isString)(filter[0])) {
              if (this.forceIsoDateParsing && filter.length > 1) {
                if (filter[0] === startDateExpr || filter[0] === endDateExpr) {
                  var lastFilterValue = filter[filter.length - 1];
                  filter[filter.length - 1] = _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_2__["default"].serializeDate(new Date(lastFilterValue), this.dateSerializationFormat);
                }
              }
            }
            for (var i = 0; i < filter.length; i += 1) {
              filter[i] = this.serializeRemoteFilter(filter[i]);
            }
            return filter;
          }
        }, {
          key: "getUserFilter",
          value: function getUserFilter(dateFilter) {
            if (!this.dataSourceFilter || (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_0__.equalByValue)(this.dataSourceFilter, dateFilter)) {
              return;
            }
            var containsDateFilter = this.dataSourceFilter.length > 0 && (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_0__.equalByValue)(this.dataSourceFilter[FilterPosition.dateFilter], dateFilter);
            var userFilter = containsDateFilter ? this.dataSourceFilter[FilterPosition.userFilter] : this.dataSourceFilter;
            return userFilter;
          }
        }, {
          key: "combine",
          value: function combine(min, max) {
            var _ref16 = (0, _getDatesWithoutTime__WEBPACK_IMPORTED_MODULE_4__["default"])(min, max),
              _ref17 = _slicedToArray(_ref16, 2),
              trimMin = _ref17[0],
              trimMax = _ref17[1];
            var dateFilter = this.makeDateFilter(trimMin, trimMax);
            var userFilter = this.getUserFilter(dateFilter);
            var combinedFilter = this.combineFilters(dateFilter, userFilter);
            return combinedFilter;
          }
        }]);
        return RemoteFilterCombiner;
      }();
      var combineRemoteFilter = function combineRemoteFilter(options) {
        return new RemoteFilterCombiner(options).combine(options.min, options.max);
      };
      /* harmony default export */
      __webpack_exports__["default"] = combineRemoteFilter;

      /***/
    }),
    /***/68913: (
    /*!*******************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence.js ***!
      \*******************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"excludeFromRecurrence": function excludeFromRecurrence() {
          return /* binding */_excludeFromRecurrence;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _internal_scheduler_m_appointment_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../__internal/scheduler/m_appointment_adapter */91634);
      /* harmony import */
      var _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../../core/utils/date_serialization */37043);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var FULL_DATE_FORMAT = "yyyyMMddTHHmmss";
      var UTC_FULL_DATE_FORMAT = "".concat(FULL_DATE_FORMAT, "Z");
      var getSerializedDate = function getSerializedDate(date, startDate, isAllDay) {
        if (isAllDay) {
          date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds());
        }
        return _core_utils_date_serialization__WEBPACK_IMPORTED_MODULE_2__["default"].serializeDate(date, UTC_FULL_DATE_FORMAT);
      };
      var createRecurrenceException = function createRecurrenceException(appointmentAdapter, exceptionDate) {
        var result = [];
        if (appointmentAdapter.recurrenceException) {
          result.push(appointmentAdapter.recurrenceException);
        }
        result.push(getSerializedDate(exceptionDate, appointmentAdapter.startDate, appointmentAdapter.allDay));
        return result.join();
      };
      var _excludeFromRecurrence = function _excludeFromRecurrence(appointment, exceptionDate, dataAccessors, timeZoneCalculator) {
        var appointmentAdapter = (0, _internal_scheduler_m_appointment_adapter__WEBPACK_IMPORTED_MODULE_1__.createAppointmentAdapter)((0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, appointment), dataAccessors, timeZoneCalculator);
        appointmentAdapter.recurrenceException = createRecurrenceException(appointmentAdapter, exceptionDate);
        return appointmentAdapter;
      };

      /***/
    }),
    /***/26571: (
    /*!******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/utils/semaphore/semaphore.js ***!
      \******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Semaphore": function Semaphore() {
          return /* binding */_Semaphore;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scheduler/utils/semaphore/semaphore.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _Semaphore = /*#__PURE__*/function () {
        function _Semaphore() {
          _classCallCheck(this, _Semaphore);
          this.counter = 0;
        }
        _createClass(_Semaphore, [{
          key: "isFree",
          value: function isFree() {
            return 0 === this.counter;
          }
        }, {
          key: "take",
          value: function take() {
            this.counter += 1;
          }
        }, {
          key: "release",
          value: function release() {
            this.counter -= 1;
            if (this.counter < 0) {
              this.counter = 0;
            }
          }
        }]);
        return _Semaphore;
      }();
      /***/
    }),
    /***/74418: (
    /*!*********************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js ***!
      \*********************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../core/utils/date */35341);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var getSkippedHoursInRange = function getSkippedHoursInRange(startDate, endDate, viewDataProvider) {
        var msInHour = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds("hour");
        var startTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(startDate).getTime();
        var endTime = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].setToDayEnd(new Date(endDate.getTime() - 1)).getTime();
        var allDayIntervalDuration = 24 * msInHour;
        var excludedHours = 0;
        for (var time = startTime; time < endTime; time += allDayIntervalDuration) {
          var checkDate = new Date(time);
          if (viewDataProvider.isSkippedDate(checkDate)) {
            excludedHours += 24;
          }
        }
        return excludedHours;
      };
      /* harmony default export */
      __webpack_exports__["default"] = getSkippedHoursInRange;

      /***/
    }),
    /***/42626: (
    /*!*********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/group_panel/utils.js ***!
      \*********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getGroupPanelData": function getGroupPanelData() {
          return /* binding */_getGroupPanelData;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/group_panel/utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var extendGroupItemsForGroupingByDate = function extendGroupItemsForGroupingByDate(groupRenderItems, columnCountPerGroup) {
        return _toConsumableArray(new Array(columnCountPerGroup)).reduce(function (currentGroupItems, _, index) {
          return groupRenderItems.map(function (groupsRow, rowIndex) {
            var currentRow = currentGroupItems[rowIndex] || [];
            return [].concat(_toConsumableArray(currentRow), _toConsumableArray(groupsRow.map(function (item, columnIndex) {
              return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, item, {
                key: "".concat(item.key, "_group_by_date_").concat(index),
                isFirstGroupCell: 0 === columnIndex,
                isLastGroupCell: columnIndex === groupsRow.length - 1
              });
            })));
          });
        }, []);
      };
      var _getGroupPanelData = function _getGroupPanelData(groups, columnCountPerGroup, groupByDate, baseColSpan) {
        var repeatCount = 1;
        var groupPanelItems = groups.map(function (group) {
          var result = [];
          var data = group.data,
            items = group.items,
            resourceName = group.name;
          var _loop = function _loop(iterator) {
            result.push.apply(result, _toConsumableArray(items.map(function (_ref, index) {
              var color = _ref.color,
                id = _ref.id,
                text = _ref.text;
              return {
                id: id,
                text: text,
                color: color,
                key: "".concat(iterator, "_").concat(resourceName, "_").concat(id),
                resourceName: resourceName,
                data: null === data || void 0 === data ? void 0 : data[index]
              };
            })));
          };
          for (var iterator = 0; iterator < repeatCount; iterator += 1) {
            _loop(iterator);
          }
          repeatCount *= items.length;
          return result;
        });
        if (groupByDate) {
          groupPanelItems = extendGroupItemsForGroupingByDate(groupPanelItems, columnCountPerGroup);
        }
        return {
          groupPanelItems: groupPanelItems,
          baseColSpan: baseColSpan
        };
      };

      /***/
    }),
    /***/7967: (
    /*!******************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/agenda.js ***!
      \******************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"calculateStartViewDate": function calculateStartViewDate() {
          return /* binding */_calculateStartViewDate2;
        }
        /* harmony export */
      });
      /* harmony import */
      var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./base */28123);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/agenda.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _calculateStartViewDate2 = function _calculateStartViewDate2(currentDate, startDayHour) {
        var validCurrentDate = new Date(currentDate);
        return (0, _base__WEBPACK_IMPORTED_MODULE_0__.setOptionHour)(validCurrentDate, startDayHour);
      };

      /***/
    }),
    /***/28123: (
    /*!****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/base.js ***!
      \****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"isDateInRange": function isDateInRange() {
          return /* binding */_isDateInRange;
        },
        /* harmony export */"setOptionHour": function setOptionHour() {
          return /* binding */_setOptionHour;
        },
        /* harmony export */"getViewStartByOptions": function getViewStartByOptions() {
          return /* binding */_getViewStartByOptions2;
        },
        /* harmony export */"getCalculatedFirstDayOfWeek": function getCalculatedFirstDayOfWeek() {
          return /* binding */_getCalculatedFirstDayOfWeek;
        },
        /* harmony export */"calculateViewStartDate": function calculateViewStartDate() {
          return /* binding */_calculateViewStartDate2;
        },
        /* harmony export */"calculateCellIndex": function calculateCellIndex() {
          return /* binding */_calculateCellIndex2;
        },
        /* harmony export */"getStartViewDateWithoutDST": function getStartViewDateWithoutDST() {
          return /* binding */_getStartViewDateWithoutDST;
        },
        /* harmony export */"getHeaderCellText": function getHeaderCellText() {
          return /* binding */_getHeaderCellText;
        },
        /* harmony export */"validateDayHours": function validateDayHours() {
          return /* binding */_validateDayHours2;
        },
        /* harmony export */"getStartViewDateTimeOffset": function getStartViewDateTimeOffset() {
          return /* binding */_getStartViewDateTimeOffset;
        },
        /* harmony export */"formatWeekday": function formatWeekday() {
          return /* binding */_formatWeekday;
        },
        /* harmony export */"formatWeekdayAndDay": function formatWeekdayAndDay() {
          return /* binding */_formatWeekdayAndDay;
        },
        /* harmony export */"getToday": function getToday() {
          return /* binding */_getToday2;
        },
        /* harmony export */"getVerticalGroupCountClass": function getVerticalGroupCountClass() {
          return /* binding */_getVerticalGroupCountClass;
        },
        /* harmony export */"isDateAndTimeView": function isDateAndTimeView() {
          return /* binding */_isDateAndTimeView;
        },
        /* harmony export */"isTimelineView": function isTimelineView() {
          return /* binding */_isTimelineView;
        },
        /* harmony export */"getHorizontalGroupCount": function getHorizontalGroupCount() {
          return /* binding */_getHorizontalGroupCount;
        },
        /* harmony export */"calculateIsGroupedAllDayPanel": function calculateIsGroupedAllDayPanel() {
          return /* binding */_calculateIsGroupedAllDayPanel;
        },
        /* harmony export */"calculateDayDuration": function calculateDayDuration() {
          return /* binding */_calculateDayDuration;
        },
        /* harmony export */"isHorizontalView": function isHorizontalView() {
          return /* binding */_isHorizontalView;
        },
        /* harmony export */"getTotalCellCountByCompleteData": function getTotalCellCountByCompleteData() {
          return /* binding */_getTotalCellCountByCompleteData;
        },
        /* harmony export */"getTotalRowCountByCompleteData": function getTotalRowCountByCompleteData() {
          return /* binding */_getTotalRowCountByCompleteData;
        },
        /* harmony export */"getDisplayedCellCount": function getDisplayedCellCount() {
          return /* binding */_getDisplayedCellCount;
        },
        /* harmony export */"getDisplayedRowCount": function getDisplayedRowCount() {
          return /* binding */_getDisplayedRowCount;
        },
        /* harmony export */"getCellDuration": function getCellDuration() {
          return /* binding */_getCellDuration;
        }
        /* harmony export */
      });
      /* harmony import */
      var _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../../ui/widget/ui.errors */42491);
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../../../core/utils/date */35341);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../../../../../core/utils/type */33275);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../../../../localization/date */83881);
      /* harmony import */
      var _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../../../../__internal/scheduler/m_utils_time_zone */98281);
      /* harmony import */
      var _internal_scheduler_m_classes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../../../../../__internal/scheduler/m_classes */16874);
      /* harmony import */
      var _internal_scheduler_m_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../../../../../__internal/scheduler/m_constants */19107);
      /* harmony import */
      var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../../../../../__internal/scheduler/resources/m_utils */48025);
      /* harmony import */
      var _workspaces_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../../workspaces/utils */59016);
      /* harmony import */
      var _const__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ./const */5896);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/base.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _isDateInRange = function _isDateInRange(date, startDate, endDate, diff) {
        return diff > 0 ? _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateInRange(date, startDate, new Date(endDate.getTime() - 1)) : _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateInRange(date, endDate, startDate, "date");
      };
      var _setOptionHour = function _setOptionHour(date, optionHour) {
        var nextDate = new Date(date);
        if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(optionHour)) {
          return nextDate;
        }
        nextDate.setHours(optionHour, optionHour % 1 * 60, 0, 0);
        return nextDate;
      };
      var _getViewStartByOptions2 = function _getViewStartByOptions2(startDate, currentDate, intervalDuration, startViewDate) {
        if (!startDate) {
          return new Date(currentDate);
        }
        var currentStartDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].trimTime(startViewDate);
        var diff = currentStartDate.getTime() <= currentDate.getTime() ? 1 : -1;
        var endDate = new Date(currentStartDate.getTime() + intervalDuration * diff);
        while (!_isDateInRange(currentDate, currentStartDate, endDate, diff)) {
          currentStartDate = endDate;
          endDate = new Date(currentStartDate.getTime() + intervalDuration * diff);
        }
        return diff > 0 ? currentStartDate : endDate;
      };
      var _getCalculatedFirstDayOfWeek = function _getCalculatedFirstDayOfWeek(firstDayOfWeekOption) {
        return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(firstDayOfWeekOption) ? firstDayOfWeekOption : _localization_date__WEBPACK_IMPORTED_MODULE_3__["default"].firstDayOfWeekIndex();
      };
      var _calculateViewStartDate2 = function _calculateViewStartDate2(startDateOption) {
        return startDateOption;
      };
      var _calculateCellIndex2 = function _calculateCellIndex2(rowIndex, columnIndex, rowCount) {
        return columnIndex * rowCount + rowIndex;
      };
      var _getStartViewDateWithoutDST = function _getStartViewDateWithoutDST(startViewDate, startDayHour) {
        var newStartViewDate = _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].getDateWithoutTimezoneChange(startViewDate);
        newStartViewDate.setHours(startDayHour);
        return newStartViewDate;
      };
      var _getHeaderCellText = function _getHeaderCellText(headerIndex, date, headerCellTextFormat, getDateForHeaderText, additionalOptions) {
        var validDate = getDateForHeaderText(headerIndex, date, additionalOptions);
        return _localization_date__WEBPACK_IMPORTED_MODULE_3__["default"].format(validDate, headerCellTextFormat);
      };
      var _validateDayHours2 = function _validateDayHours2(startDayHour, endDayHour) {
        if (startDayHour >= endDayHour) {
          throw _ui_widget_ui_errors__WEBPACK_IMPORTED_MODULE_0__["default"].Error("E1058");
        }
      };
      var _getStartViewDateTimeOffset = function _getStartViewDateTimeOffset(startViewDate, startDayHour) {
        var validStartDayHour = Math.floor(startDayHour);
        var isDSTChange = _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_4__["default"].isTimezoneChangeInDate(startViewDate);
        if (isDSTChange && validStartDayHour !== startViewDate.getHours()) {
          return _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("hour");
        }
        return 0;
      };
      var _formatWeekday = function _formatWeekday(date) {
        return _localization_date__WEBPACK_IMPORTED_MODULE_3__["default"].getDayNames("abbreviated")[date.getDay()];
      };
      var _formatWeekdayAndDay = function _formatWeekdayAndDay(date) {
        return "".concat(_formatWeekday(date), " ").concat(_localization_date__WEBPACK_IMPORTED_MODULE_3__["default"].format(date, "day"));
      };
      var _getToday2 = function _getToday2(indicatorTime, timeZoneCalculator) {
        var todayDate = null !== indicatorTime && void 0 !== indicatorTime ? indicatorTime : new Date();
        return (null === timeZoneCalculator || void 0 === timeZoneCalculator ? void 0 : timeZoneCalculator.createDate(todayDate, {
          path: "toGrid"
        })) || todayDate;
      };
      var _getVerticalGroupCountClass = function _getVerticalGroupCountClass(groups) {
        switch (null === groups || void 0 === groups ? void 0 : groups.length) {
          case 1:
            return _internal_scheduler_m_classes__WEBPACK_IMPORTED_MODULE_5__.VERTICAL_GROUP_COUNT_CLASSES[0];
          case 2:
            return _internal_scheduler_m_classes__WEBPACK_IMPORTED_MODULE_5__.VERTICAL_GROUP_COUNT_CLASSES[1];
          case 3:
            return _internal_scheduler_m_classes__WEBPACK_IMPORTED_MODULE_5__.VERTICAL_GROUP_COUNT_CLASSES[2];
          default:
            return;
        }
      };
      var _isDateAndTimeView = function _isDateAndTimeView(viewType) {
        return viewType !== _internal_scheduler_m_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_MONTH && viewType !== _internal_scheduler_m_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.MONTH;
      };
      var _isTimelineView = function _isTimelineView(viewType) {
        return !!_const__WEBPACK_IMPORTED_MODULE_9__.TIMELINE_VIEWS[viewType];
      };
      var _getHorizontalGroupCount = function _getHorizontalGroupCount(groups, groupOrientation) {
        var groupCount = (0, _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_7__.getGroupCount)(groups) || 1;
        var isVerticalGrouping = (0, _workspaces_utils__WEBPACK_IMPORTED_MODULE_8__.isVerticalGroupingApplied)(groups, groupOrientation);
        return isVerticalGrouping ? 1 : groupCount;
      };
      var _calculateIsGroupedAllDayPanel = function _calculateIsGroupedAllDayPanel(groups, groupOrientation, isAllDayPanelVisible) {
        return (0, _workspaces_utils__WEBPACK_IMPORTED_MODULE_8__.isVerticalGroupingApplied)(groups, groupOrientation) && isAllDayPanelVisible;
      };
      var _calculateDayDuration = function _calculateDayDuration(startDayHour, endDayHour) {
        return endDayHour - startDayHour;
      };
      var _isHorizontalView = function _isHorizontalView(viewType) {
        switch (viewType) {
          case _internal_scheduler_m_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_DAY:
          case _internal_scheduler_m_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_WEEK:
          case _internal_scheduler_m_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_WORK_WEEK:
          case _internal_scheduler_m_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.TIMELINE_MONTH:
          case _internal_scheduler_m_constants__WEBPACK_IMPORTED_MODULE_6__.VIEWS.MONTH:
            return true;
          default:
            return false;
        }
      };
      var _getTotalCellCountByCompleteData = function _getTotalCellCountByCompleteData(completeData) {
        return completeData[completeData.length - 1].length;
      };
      var _getTotalRowCountByCompleteData = function _getTotalRowCountByCompleteData(completeData) {
        return completeData.length;
      };
      var _getDisplayedCellCount = function _getDisplayedCellCount(displayedCellCount, completeData) {
        return null !== displayedCellCount && void 0 !== displayedCellCount ? displayedCellCount : _getTotalCellCountByCompleteData(completeData);
      };
      var _getDisplayedRowCount = function _getDisplayedRowCount(displayedRowCount, completeData) {
        return null !== displayedRowCount && void 0 !== displayedRowCount ? displayedRowCount : _getTotalRowCountByCompleteData(completeData);
      };
      var _getCellDuration = function _getCellDuration(viewType, startDayHour, endDayHour, hoursInterval) {
        switch (viewType) {
          case "month":
            return 36e5 * _calculateDayDuration(startDayHour, endDayHour);
          case "timelineMonth":
            return _core_utils_date__WEBPACK_IMPORTED_MODULE_1__["default"].dateToMilliseconds("day");
          default:
            return 36e5 * hoursInterval;
        }
      };

      /***/
    }),
    /***/5896: (
    /*!*****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/const.js ***!
      \*****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"VIEWS": function VIEWS() {
          return /* binding */_VIEWS2;
        },
        /* harmony export */"TIMELINE_VIEWS": function TIMELINE_VIEWS() {
          return /* binding */_TIMELINE_VIEWS;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/const.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _VIEWS2 = {
        DAY: "day",
        WEEK: "week",
        WORK_WEEK: "workWeek",
        MONTH: "month",
        TIMELINE_DAY: "timelineDay",
        TIMELINE_WEEK: "timelineWeek",
        TIMELINE_WORK_WEEK: "timelineWorkWeek",
        TIMELINE_MONTH: "timelineMonth",
        AGENDA: "agenda"
      };
      var _TIMELINE_VIEWS = {
        timelineDay: true,
        timelineWeek: true,
        timelineWorkWeek: true,
        timelineMonth: true
      };

      /***/
    }),
    /***/62902: (
    /*!***************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/day.js ***!
      \***************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"calculateStartViewDate": function calculateStartViewDate() {
          return /* binding */_calculateStartViewDate3;
        }
        /* harmony export */
      });
      /* harmony import */
      var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./base */28123);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/day.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _calculateStartViewDate3 = function _calculateStartViewDate3(currentDate, startDayHour, startDate, intervalDuration) {
        var firstViewDate = (0, _base__WEBPACK_IMPORTED_MODULE_0__.getViewStartByOptions)(startDate, currentDate, intervalDuration, startDate);
        return (0, _base__WEBPACK_IMPORTED_MODULE_0__.setOptionHour)(firstViewDate, startDayHour);
      };

      /***/
    }),
    /***/35189: (
    /*!*****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/month.js ***!
      \*****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getViewStartByOptions": function getViewStartByOptions() {
          return /* binding */_getViewStartByOptions3;
        },
        /* harmony export */"calculateStartViewDate": function calculateStartViewDate() {
          return /* binding */_calculateStartViewDate4;
        },
        /* harmony export */"calculateCellIndex": function calculateCellIndex() {
          return /* binding */_calculateCellIndex3;
        },
        /* harmony export */"isFirstCellInMonthWithIntervalCount": function isFirstCellInMonthWithIntervalCount() {
          return /* binding */_isFirstCellInMonthWithIntervalCount;
        },
        /* harmony export */"getCellText": function getCellText() {
          return /* binding */_getCellText;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../../core/utils/date */35341);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../../../localization/date */83881);
      /* harmony import */
      var _base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./base */28123);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/month.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _getViewStartByOptions3 = function _getViewStartByOptions3(startDate, currentDate, intervalCount, startViewDate) {
        if (!startDate) {
          return new Date(currentDate);
        }
        var currentStartDate = new Date(startViewDate);
        var validStartViewDate = new Date(startViewDate);
        var diff = currentStartDate.getTime() <= currentDate.getTime() ? 1 : -1;
        var endDate = new Date(new Date(validStartViewDate.setMonth(validStartViewDate.getMonth() + diff * intervalCount)));
        while (!(0, _base__WEBPACK_IMPORTED_MODULE_2__.isDateInRange)(currentDate, currentStartDate, endDate, diff)) {
          currentStartDate = new Date(endDate);
          if (diff > 0) {
            currentStartDate.setDate(1);
          }
          endDate = new Date(new Date(endDate.setMonth(endDate.getMonth() + diff * intervalCount)));
        }
        return diff > 0 ? currentStartDate : endDate;
      };
      var _calculateStartViewDate4 = function _calculateStartViewDate4(currentDate, startDayHour, startDate, intervalCount, firstDayOfWeekOption) {
        var viewStart = _getViewStartByOptions3(startDate, currentDate, intervalCount, _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].getFirstMonthDate(startDate));
        var firstMonthDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].getFirstMonthDate(viewStart);
        var firstDayOfWeek = (0, _base__WEBPACK_IMPORTED_MODULE_2__.getCalculatedFirstDayOfWeek)(firstDayOfWeekOption);
        var firstViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].getFirstWeekDate(firstMonthDate, firstDayOfWeek);
        return (0, _base__WEBPACK_IMPORTED_MODULE_2__.setOptionHour)(firstViewDate, startDayHour);
      };
      var _calculateCellIndex3 = function _calculateCellIndex3(rowIndex, columnIndex, _, columnCount) {
        return rowIndex * columnCount + columnIndex;
      };
      var _isFirstCellInMonthWithIntervalCount = function _isFirstCellInMonthWithIntervalCount(cellDate, intervalCount) {
        return 1 === cellDate.getDate() && intervalCount > 1;
      };
      var _getCellText = function _getCellText(date, intervalCount) {
        if (_isFirstCellInMonthWithIntervalCount(date, intervalCount)) {
          var monthName = _localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].getMonthNames("abbreviated")[date.getMonth()];
          return [monthName, _localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(date, "day")].join(" ");
        }
        return _localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(date, "dd");
      };

      /***/
    }),
    /***/11377: (
    /*!**************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month.js ***!
      \**************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"calculateStartViewDate": function calculateStartViewDate() {
          return /* binding */_calculateStartViewDate5;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../../core/utils/date */35341);
      /* harmony import */
      var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./base */28123);
      /* harmony import */
      var _month__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./month */35189);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _calculateStartViewDate5 = function _calculateStartViewDate5(currentDate, startDayHour, startDate, intervalCount) {
        var firstViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].getFirstMonthDate((0, _month__WEBPACK_IMPORTED_MODULE_2__.getViewStartByOptions)(startDate, currentDate, intervalCount, _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].getFirstMonthDate(startDate)));
        return (0, _base__WEBPACK_IMPORTED_MODULE_1__.setOptionHour)(firstViewDate, startDayHour);
      };

      /***/
    }),
    /***/55639: (
    /*!*************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/timeline_week.js ***!
      \*************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getDateForHeaderText": function getDateForHeaderText() {
          return /* binding */_getDateForHeaderText;
        }
        /* harmony export */
      });
      /* harmony import */
      var _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../../__internal/scheduler/m_utils_time_zone */98281);
      /* harmony import */
      var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./base */28123);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/timeline_week.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _getDateForHeaderText = function _getDateForHeaderText(index, date, options) {
        if (!_internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_0__["default"].isTimezoneChangeInDate(date)) {
          return date;
        }
        var cellCountInDay = options.cellCountInDay,
          interval = options.interval,
          startDayHour = options.startDayHour,
          startViewDate = options.startViewDate;
        var result = (0, _base__WEBPACK_IMPORTED_MODULE_1__.getStartViewDateWithoutDST)(startViewDate, startDayHour);
        var validIndex = index % cellCountInDay;
        result.setTime(result.getTime() + validIndex * interval);
        return result;
      };

      /***/
    }),
    /***/12871: (
    /*!****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/week.js ***!
      \****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getIntervalDuration": function getIntervalDuration() {
          return /* binding */_getIntervalDuration2;
        },
        /* harmony export */"getValidStartDate": function getValidStartDate() {
          return /* binding */_getValidStartDate;
        },
        /* harmony export */"calculateStartViewDate": function calculateStartViewDate() {
          return /* binding */_calculateStartViewDate6;
        },
        /* harmony export */"calculateViewStartDate": function calculateViewStartDate() {
          return /* binding */_calculateViewStartDate3;
        },
        /* harmony export */"getTimePanelCellText": function getTimePanelCellText() {
          return /* binding */_getTimePanelCellText;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../../core/utils/date */35341);
      /* harmony import */
      var _localization_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../../../localization/date */83881);
      /* harmony import */
      var _base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./base */28123);
      /* harmony import */
      var _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../../../../../__internal/scheduler/m_utils_time_zone */98281);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/week.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _getIntervalDuration2 = function _getIntervalDuration2(intervalCount) {
        return 7 * _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds("day") * intervalCount;
      };
      var _getValidStartDate = function _getValidStartDate(startDate, firstDayOfWeek) {
        return startDate ? _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].getFirstWeekDate(startDate, firstDayOfWeek) : void 0;
      };
      var _calculateStartViewDate6 = function _calculateStartViewDate6(currentDate, startDayHour, startDate, intervalDuration, firstDayOfWeekOption) {
        var firstDayOfWeek = (0, _base__WEBPACK_IMPORTED_MODULE_2__.getCalculatedFirstDayOfWeek)(firstDayOfWeekOption);
        var viewStart = (0, _base__WEBPACK_IMPORTED_MODULE_2__.getViewStartByOptions)(startDate, currentDate, intervalDuration, _getValidStartDate(startDate, firstDayOfWeek));
        var firstViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].getFirstWeekDate(viewStart, firstDayOfWeek);
        return (0, _base__WEBPACK_IMPORTED_MODULE_2__.setOptionHour)(firstViewDate, startDayHour);
      };
      var _calculateViewStartDate3 = function _calculateViewStartDate3(startDateOption, firstDayOfWeek) {
        var validFirstDayOfWeek = null !== firstDayOfWeek && void 0 !== firstDayOfWeek ? firstDayOfWeek : _localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].firstDayOfWeekIndex();
        return _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].getFirstWeekDate(startDateOption, validFirstDayOfWeek);
      };
      var getTimeCellDate = function getTimeCellDate(rowIndex, date, startViewDate, cellDuration, startDayHour) {
        if (!_internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_3__["default"].isTimezoneChangeInDate(date)) {
          return date;
        }
        var startViewDateWithoutDST = _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_3__["default"].getDateWithoutTimezoneChange(startViewDate);
        var result = new Date(startViewDateWithoutDST);
        var timeCellDuration = Math.round(cellDuration);
        var startViewDateOffset = (0, _base__WEBPACK_IMPORTED_MODULE_2__.getStartViewDateTimeOffset)(startViewDate, startDayHour);
        result.setMilliseconds(result.getMilliseconds() + timeCellDuration * rowIndex - startViewDateOffset);
        return result;
      };
      var _getTimePanelCellText = function _getTimePanelCellText(rowIndex, date, startViewDate, cellDuration, startDayHour) {
        if (rowIndex % 2 === 0) {
          var validDate = getTimeCellDate(rowIndex, date, startViewDate, cellDuration, startDayHour);
          return _localization_date__WEBPACK_IMPORTED_MODULE_1__["default"].format(validDate, "shorttime");
        }
        return "";
      };

      /***/
    }),
    /***/95984: (
    /*!*********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/work_week.js ***!
      \*********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"isDataOnWeekend": function isDataOnWeekend() {
          return /* binding */_isDataOnWeekend;
        },
        /* harmony export */"getWeekendsCount": function getWeekendsCount() {
          return /* binding */_getWeekendsCount2;
        },
        /* harmony export */"calculateStartViewDate": function calculateStartViewDate() {
          return /* binding */_calculateStartViewDate7;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../../core/utils/date */35341);
      /* harmony import */
      var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./base */28123);
      /* harmony import */
      var _week__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./week */12871);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/work_week.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var SATURDAY_INDEX = 6;
      var SUNDAY_INDEX = 0;
      var MONDAY_INDEX = 1;
      var DAYS_IN_WEEK = 7;
      var _isDataOnWeekend = function _isDataOnWeekend(date) {
        var day = date.getDay();
        return day === SATURDAY_INDEX || day === SUNDAY_INDEX;
      };
      var _getWeekendsCount2 = function _getWeekendsCount2(days) {
        return 2 * Math.floor(days / 7);
      };
      var _calculateStartViewDate7 = function _calculateStartViewDate7(currentDate, startDayHour, startDate, intervalDuration, firstDayOfWeek) {
        var viewStart = (0, _base__WEBPACK_IMPORTED_MODULE_1__.getViewStartByOptions)(startDate, currentDate, intervalDuration, (0, _week__WEBPACK_IMPORTED_MODULE_2__.getValidStartDate)(startDate, firstDayOfWeek));
        var firstViewDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].getFirstWeekDate(viewStart, firstDayOfWeek);
        if (_isDataOnWeekend(firstViewDate)) {
          var currentDay = firstViewDate.getDay();
          var distance = (MONDAY_INDEX + DAYS_IN_WEEK - currentDay) % 7;
          firstViewDate.setDate(firstViewDate.getDate() + distance);
        }
        return (0, _base__WEBPACK_IMPORTED_MODULE_1__.setOptionHour)(firstViewDate, startDayHour);
      };

      /***/
    }),
    /***/61074: (
    /*!*************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/cell.js ***!
      \*************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction7;
        },
        /* harmony export */"CellBaseProps": function CellBaseProps() {
          return /* binding */_CellBaseProps;
        },
        /* harmony export */"CellBase": function CellBase() {
          return /* binding */_CellBase;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../utils */59016);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["allDay", "ariaLabel", "children", "className", "contentTemplateProps", "endDate", "groupIndex", "groups", "index", "isFirstGroupCell", "isLastGroupCell", "startDate", "text"];
      var _viewFunction7 = function _viewFunction7(viewModel) {
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "td", viewModel.classes, viewModel.props.children, 0, {
          "aria-label": viewModel.props.ariaLabel
        });
      };
      var _CellBaseProps = {
        className: "",
        isFirstGroupCell: false,
        isLastGroupCell: false,
        startDate: Object.freeze(new Date()),
        endDate: Object.freeze(new Date()),
        allDay: false,
        text: "",
        index: 0,
        contentTemplateProps: Object.freeze({
          data: {},
          index: 0
        })
      };
      var _CellBase = /*#__PURE__*/function (_devextreme_runtime_i7) {
        _inherits(_CellBase, _devextreme_runtime_i7);
        function _CellBase(props) {
          var _this182;
          _classCallCheck(this, _CellBase);
          _this182 = _callSuper(this, _CellBase, [props]);
          _this182.state = {};
          return _this182;
        }
        _createClass(_CellBase, [{
          key: "classes",
          get: function get() {
            var _this$props3 = this.props,
              className = _this$props3.className,
              isFirstGroupCell = _this$props3.isFirstGroupCell,
              isLastGroupCell = _this$props3.isLastGroupCell;
            return (0, _utils__WEBPACK_IMPORTED_MODULE_4__.getGroupCellClasses)(isFirstGroupCell, isLastGroupCell, className);
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction7({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props),
              classes: this.classes,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _CellBase;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _CellBase.defaultProps = _CellBaseProps;

      /***/
    }),
    /***/27264: (
    /*!**************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/cell.js ***!
      \**************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction8;
        },
        /* harmony export */"AllDayPanelCell": function AllDayPanelCell() {
          return /* binding */_AllDayPanelCell;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _const__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../const */25222);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../cell */50995);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["allDay", "ariaLabel", "children", "className", "contentTemplateProps", "dataCellTemplate", "endDate", "firstDayOfMonth", "groupIndex", "groups", "index", "isFirstGroupCell", "isFocused", "isLastGroupCell", "isSelected", "otherMonth", "startDate", "text", "today"];
      var _viewFunction8 = function _viewFunction8(_ref) {
        var _ref$props3 = _ref.props,
          className = _ref$props3.className,
          dataCellTemplate = _ref$props3.dataCellTemplate,
          endDate = _ref$props3.endDate,
          groupIndex = _ref$props3.groupIndex,
          groups = _ref$props3.groups,
          index = _ref$props3.index,
          isFirstGroupCell = _ref$props3.isFirstGroupCell,
          isFocused = _ref$props3.isFocused,
          isLastGroupCell = _ref$props3.isLastGroupCell,
          isSelected = _ref$props3.isSelected,
          startDate = _ref$props3.startDate;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_5__.DateTableCellBase, {
          className: "".concat(_const__WEBPACK_IMPORTED_MODULE_4__.ALL_DAY_PANEL_CELL_CLASS, " ").concat(className),
          startDate: startDate,
          endDate: endDate,
          groups: groups,
          groupIndex: groupIndex,
          allDay: true,
          isFirstGroupCell: isFirstGroupCell,
          isLastGroupCell: isLastGroupCell,
          index: index,
          dataCellTemplate: dataCellTemplate,
          isSelected: isSelected,
          isFocused: isFocused
        });
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _AllDayPanelCell = /*#__PURE__*/function (_devextreme_runtime_i8) {
        _inherits(_AllDayPanelCell, _devextreme_runtime_i8);
        function _AllDayPanelCell(props) {
          var _this183;
          _classCallCheck(this, _AllDayPanelCell);
          _this183 = _callSuper(this, _AllDayPanelCell, [props]);
          _this183.state = {};
          return _this183;
        }
        _createClass(_AllDayPanelCell, [{
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction8({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                dataCellTemplate: getTemplate(props.dataCellTemplate)
              }),
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _AllDayPanelCell;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _AllDayPanelCell.defaultProps = _cell__WEBPACK_IMPORTED_MODULE_5__.DateTableCellBaseProps;

      /***/
    }),
    /***/16551: (
    /*!*****************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.j.js ***!
      \*****************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */AllDayTable;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../../core/component_registrator */2382);
      /* harmony import */
      var _component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../../component_wrapper/scheduler/date_table */5733);
      /* harmony import */
      var _table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./table */72135);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.j.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var AllDayTable = /*#__PURE__*/function (_component_wrapper_sc) {
        _inherits(AllDayTable, _component_wrapper_sc);
        function AllDayTable() {
          _classCallCheck(this, AllDayTable);
          return _callSuper(this, AllDayTable, arguments);
        }
        _createClass(AllDayTable, [{
          key: "_propsInfo",
          get: function get() {
            return {
              twoWay: [],
              allowNull: [],
              elements: [],
              templates: ["dataCellTemplate"],
              props: ["viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width", "dataCellTemplate"]
            };
          }
        }, {
          key: "_viewComponent",
          get: function get() {
            return _table__WEBPACK_IMPORTED_MODULE_2__.AllDayTable;
          }
        }]);
        return AllDayTable;
      }(_component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__.DateTable);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxAllDayTable", AllDayTable);

      /***/
    }),
    /***/72135: (
    /*!***************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.js ***!
      \***************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction9;
        },
        /* harmony export */"AllDayTableProps": function AllDayTableProps() {
          return /* binding */_AllDayTableProps;
        },
        /* harmony export */"AllDayTable": function AllDayTable() {
          return /* binding */_AllDayTable;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../table */35686);
      /* harmony import */
      var _table_body__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./table_body */50845);
      /* harmony import */
      var _layout_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../layout_props */21250);
      /* harmony import */
      var _const__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../const */25222);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["addDateTableClass", "addVerticalSizesClassToRows", "bottomVirtualRowHeight", "dataCellTemplate", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "tableRef", "topVirtualRowHeight", "viewData", "width"];
      var _viewFunction9 = function _viewFunction9(_ref) {
        var allDayPanelData = _ref.allDayPanelData,
          emptyTableHeight = _ref.emptyTableHeight,
          _ref$props4 = _ref.props,
          dataCellTemplate = _ref$props4.dataCellTemplate,
          tableRef = _ref$props4.tableRef,
          viewData = _ref$props4.viewData,
          width = _ref$props4.width;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _table__WEBPACK_IMPORTED_MODULE_4__.Table, {
          className: "dx-scheduler-all-day-table",
          height: emptyTableHeight,
          width: width,
          tableRef: tableRef,
          children: (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _table_body__WEBPACK_IMPORTED_MODULE_5__.AllDayPanelTableBody, {
            viewData: allDayPanelData,
            leftVirtualCellWidth: viewData.leftVirtualCellWidth,
            rightVirtualCellWidth: viewData.rightVirtualCellWidth,
            leftVirtualCellCount: viewData.leftVirtualCellCount,
            rightVirtualCellCount: viewData.rightVirtualCellCount,
            dataCellTemplate: dataCellTemplate
          })
        });
      };
      var _AllDayTableProps = _layout_props__WEBPACK_IMPORTED_MODULE_6__.LayoutProps;
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _AllDayTable = /*#__PURE__*/function (_devextreme_runtime_i9) {
        _inherits(_AllDayTable, _devextreme_runtime_i9);
        function _AllDayTable(props) {
          var _this184;
          _classCallCheck(this, _AllDayTable);
          _this184 = _callSuper(this, _AllDayTable, [props]);
          _this184.state = {};
          _this184.__getterCache = {};
          return _this184;
        }
        _createClass(_AllDayTable, [{
          key: "createEffects",
          value: function createEffects() {
            return [(0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()];
          }
        }, {
          key: "allDayPanelData",
          get: function get() {
            var _this185 = this;
            if (void 0 !== this.__getterCache.allDayPanelData) {
              return this.__getterCache.allDayPanelData;
            }
            return this.__getterCache.allDayPanelData = function () {
              return _this185.props.viewData.groupedData[0].allDayPanel;
            }();
          }
        }, {
          key: "emptyTableHeight",
          get: function get() {
            return this.allDayPanelData ? void 0 : _const__WEBPACK_IMPORTED_MODULE_7__.DefaultSizes.allDayPanelHeight;
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "componentWillUpdate",
          value: function componentWillUpdate(nextProps, nextState, context) {
            _get(_getPrototypeOf(_AllDayTable.prototype), "componentWillUpdate", this).call(this);
            if (this.props.viewData !== nextProps.viewData) {
              this.__getterCache.allDayPanelData = void 0;
            }
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction9({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                dataCellTemplate: getTemplate(props.dataCellTemplate)
              }),
              allDayPanelData: this.allDayPanelData,
              emptyTableHeight: this.emptyTableHeight,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _AllDayTable;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent);
      _AllDayTable.defaultProps = _AllDayTableProps;

      /***/
    }),
    /***/50845: (
    /*!********************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table_body.js ***!
      \********************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction10;
        },
        /* harmony export */"AllDayPanelTableBodyProps": function AllDayPanelTableBodyProps() {
          return /* binding */_AllDayPanelTableBodyProps;
        },
        /* harmony export */"AllDayPanelTableBody": function AllDayPanelTableBody() {
          return /* binding */_AllDayPanelTableBody;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../row */50642);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./cell */27264);
      /* harmony import */
      var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../../../../utils/combine_classes */33582);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table_body.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["className", "dataCellTemplate", "isVerticalGroupOrientation", "leftVirtualCellCount", "leftVirtualCellWidth", "rightVirtualCellCount", "rightVirtualCellWidth", "viewData"];
      var _viewFunction10 = function _viewFunction10(viewModel) {
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
          leftVirtualCellWidth: viewModel.props.leftVirtualCellWidth,
          rightVirtualCellWidth: viewModel.props.rightVirtualCellWidth,
          leftVirtualCellCount: viewModel.props.leftVirtualCellCount,
          rightVirtualCellCount: viewModel.props.rightVirtualCellCount,
          className: viewModel.classes,
          children: viewModel.props.viewData.map(function (_ref) {
            var endDate = _ref.endDate,
              cellGroupIndex = _ref.groupIndex,
              groups = _ref.groups,
              cellIndex = _ref.index,
              isFirstGroupCell = _ref.isFirstGroupCell,
              isFocused = _ref.isFocused,
              isLastGroupCell = _ref.isLastGroupCell,
              isSelected = _ref.isSelected,
              key = _ref.key,
              startDate = _ref.startDate;
            return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_5__.AllDayPanelCell, {
              isFirstGroupCell: !viewModel.props.isVerticalGroupOrientation && isFirstGroupCell,
              isLastGroupCell: !viewModel.props.isVerticalGroupOrientation && isLastGroupCell,
              startDate: startDate,
              endDate: endDate,
              groups: groups,
              groupIndex: cellGroupIndex,
              index: cellIndex,
              dataCellTemplate: viewModel.props.dataCellTemplate,
              isSelected: isSelected,
              isFocused: isFocused
            }, key);
          })
        });
      };
      var _AllDayPanelTableBodyProps = {
        viewData: Object.freeze([]),
        isVerticalGroupOrientation: false,
        className: "",
        leftVirtualCellWidth: 0,
        rightVirtualCellWidth: 0
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _AllDayPanelTableBody = /*#__PURE__*/function (_devextreme_runtime_i10) {
        _inherits(_AllDayPanelTableBody, _devextreme_runtime_i10);
        function _AllDayPanelTableBody(props) {
          var _this186;
          _classCallCheck(this, _AllDayPanelTableBody);
          _this186 = _callSuper(this, _AllDayPanelTableBody, [props]);
          _this186.state = {};
          return _this186;
        }
        _createClass(_AllDayPanelTableBody, [{
          key: "classes",
          get: function get() {
            var className = this.props.className;
            return (0, _utils_combine_classes__WEBPACK_IMPORTED_MODULE_6__.combineClasses)(_defineProperty({
              "dx-scheduler-all-day-table-row": true
            }, className, !!className));
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction10({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                dataCellTemplate: getTemplate(props.dataCellTemplate)
              }),
              classes: this.classes,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _AllDayPanelTableBody;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _AllDayPanelTableBody.defaultProps = _AllDayPanelTableBodyProps;

      /***/
    }),
    /***/69883: (
    /*!*****************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.j.js ***!
      \*****************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */AllDayPanelTitle;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../../core/component_registrator */2382);
      /* harmony import */
      var _component_wrapper_common_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../../component_wrapper/common/component */17405);
      /* harmony import */
      var _title__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./title */15905);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.j.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var AllDayPanelTitle = /*#__PURE__*/function (_component_wrapper_co2) {
        _inherits(AllDayPanelTitle, _component_wrapper_co2);
        function AllDayPanelTitle() {
          _classCallCheck(this, AllDayPanelTitle);
          return _callSuper(this, AllDayPanelTitle, arguments);
        }
        _createClass(AllDayPanelTitle, [{
          key: "_propsInfo",
          get: function get() {
            return {
              twoWay: [],
              allowNull: [],
              elements: [],
              templates: [],
              props: []
            };
          }
        }, {
          key: "_viewComponent",
          get: function get() {
            return _title__WEBPACK_IMPORTED_MODULE_2__.AllDayPanelTitle;
          }
        }]);
        return AllDayPanelTitle;
      }(_component_wrapper_common_component__WEBPACK_IMPORTED_MODULE_1__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxAllDayPanelTitle", AllDayPanelTitle);

      /***/
    }),
    /***/15905: (
    /*!***************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.js ***!
      \***************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction11;
        },
        /* harmony export */"AllDayPanelTitleProps": function AllDayPanelTitleProps() {
          return /* binding */_AllDayPanelTitleProps;
        },
        /* harmony export */"AllDayPanelTitle": function AllDayPanelTitle() {
          return /* binding */_AllDayPanelTitle;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectDestructuringEmpty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectDestructuringEmpty */20823);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../../../../localization/message */19336);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _viewFunction11 = function _viewFunction11(viewModel) {
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-all-day-title", viewModel.text, 0);
      };
      var _AllDayPanelTitleProps = {};
      var _AllDayPanelTitle = /*#__PURE__*/function (_devextreme_runtime_i11) {
        _inherits(_AllDayPanelTitle, _devextreme_runtime_i11);
        function _AllDayPanelTitle(props) {
          var _this187;
          _classCallCheck(this, _AllDayPanelTitle);
          _this187 = _callSuper(this, _AllDayPanelTitle, [props]);
          _this187.state = {};
          return _this187;
        }
        _createClass(_AllDayPanelTitle, [{
          key: "createEffects",
          value: function createEffects() {
            return [(0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()];
          }
        }, {
          key: "text",
          get: function get() {
            return _localization_message__WEBPACK_IMPORTED_MODULE_4__["default"].format("dxScheduler-allDay");
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, ((0, _babel_runtime_helpers_esm_objectDestructuringEmpty__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props), _this$props));
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction11({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props),
              text: this.text,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _AllDayPanelTitle;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent);
      _AllDayPanelTitle.defaultProps = _AllDayPanelTitleProps;

      /***/
    }),
    /***/50995: (
    /*!************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/cell.js ***!
      \************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction12;
        },
        /* harmony export */"DateTableCellBaseProps": function DateTableCellBaseProps() {
          return /* binding */_DateTableCellBaseProps;
        },
        /* harmony export */"DateTableCellBase": function DateTableCellBase() {
          return /* binding */_DateTableCellBase;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../cell */61074);
      /* harmony import */
      var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../../../utils/combine_classes */33582);
      /* harmony import */
      var _const__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../const */25222);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["allDay", "ariaLabel", "children", "className", "contentTemplateProps", "dataCellTemplate", "endDate", "firstDayOfMonth", "groupIndex", "groups", "index", "isFirstGroupCell", "isFocused", "isLastGroupCell", "isSelected", "otherMonth", "startDate", "text", "today"];
      var ADD_APPOINTMENT_LABEL = "Add appointment";
      var _viewFunction12 = function _viewFunction12(_ref) {
        var ariaLabel = _ref.ariaLabel,
          classes = _ref.classes,
          dataCellTemplateProps = _ref.dataCellTemplateProps,
          _ref$props5 = _ref.props,
          children = _ref$props5.children,
          DataCellTemplate = _ref$props5.dataCellTemplate,
          isFirstGroupCell = _ref$props5.isFirstGroupCell,
          isLastGroupCell = _ref$props5.isLastGroupCell;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_4__.CellBase, {
          isFirstGroupCell: isFirstGroupCell,
          isLastGroupCell: isLastGroupCell,
          className: classes,
          ariaLabel: ariaLabel,
          children: [!DataCellTemplate && children, !!DataCellTemplate && DataCellTemplate({
            index: dataCellTemplateProps.index,
            data: dataCellTemplateProps.data
          })]
        });
      };
      var _DateTableCellBaseProps = Object.create(Object.prototype, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyDescriptors(_cell__WEBPACK_IMPORTED_MODULE_4__.CellBaseProps), Object.getOwnPropertyDescriptors({
        otherMonth: false,
        today: false,
        firstDayOfMonth: false,
        isSelected: false,
        isFocused: false
      })));
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _DateTableCellBase = /*#__PURE__*/function (_devextreme_runtime_i12) {
        _inherits(_DateTableCellBase, _devextreme_runtime_i12);
        function _DateTableCellBase(props) {
          var _this188;
          _classCallCheck(this, _DateTableCellBase);
          _this188 = _callSuper(this, _DateTableCellBase, [props]);
          _this188.state = {};
          _this188.__getterCache = {};
          return _this188;
        }
        _createClass(_DateTableCellBase, [{
          key: "classes",
          get: function get() {
            var _this$props4 = this.props,
              allDay = _this$props4.allDay,
              className = _this$props4.className,
              isFocused = _this$props4.isFocused,
              isSelected = _this$props4.isSelected;
            return (0, _utils_combine_classes__WEBPACK_IMPORTED_MODULE_5__.combineClasses)(_defineProperty(_defineProperty(_defineProperty(_defineProperty({
              "dx-scheduler-cell-sizes-horizontal": true,
              "dx-scheduler-cell-sizes-vertical": !allDay
            }, _const__WEBPACK_IMPORTED_MODULE_6__.DATE_TABLE_CELL_CLASS, !allDay), "dx-state-focused", isSelected), "dx-scheduler-focused-cell", isFocused), className, true));
          }
        }, {
          key: "dataCellTemplateProps",
          get: function get() {
            var _this189 = this;
            if (void 0 !== this.__getterCache.dataCellTemplateProps) {
              return this.__getterCache.dataCellTemplateProps;
            }
            return this.__getterCache.dataCellTemplateProps = function () {
              var _this189$props = _this189.props,
                allDay = _this189$props.allDay,
                contentTemplateProps = _this189$props.contentTemplateProps,
                endDate = _this189$props.endDate,
                groupIndex = _this189$props.groupIndex,
                groups = _this189$props.groups,
                index = _this189$props.index,
                startDate = _this189$props.startDate;
              return {
                data: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
                  startDate: startDate,
                  endDate: endDate,
                  groups: groups,
                  groupIndex: groups ? groupIndex : void 0,
                  text: "",
                  allDay: !!allDay || void 0
                }, contentTemplateProps.data),
                index: index
              };
            }();
          }
        }, {
          key: "ariaLabel",
          get: function get() {
            return this.props.isSelected ? ADD_APPOINTMENT_LABEL : void 0;
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "componentWillUpdate",
          value: function componentWillUpdate(nextProps, nextState, context) {
            if (this.props.allDay !== nextProps.allDay || this.props.contentTemplateProps !== nextProps.contentTemplateProps || this.props.endDate !== nextProps.endDate || this.props.groupIndex !== nextProps.groupIndex || this.props.groups !== nextProps.groups || this.props.index !== nextProps.index || this.props.startDate !== nextProps.startDate) {
              this.__getterCache.dataCellTemplateProps = void 0;
            }
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction12({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                dataCellTemplate: getTemplate(props.dataCellTemplate)
              }),
              classes: this.classes,
              dataCellTemplateProps: this.dataCellTemplateProps,
              ariaLabel: this.ariaLabel,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _DateTableCellBase;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _DateTableCellBase.defaultProps = _DateTableCellBaseProps;

      /***/
    }),
    /***/85953: (
    /*!****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/layout.j.js ***!
      \****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */DateTableLayoutBase;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../core/component_registrator */2382);
      /* harmony import */
      var _component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../component_wrapper/scheduler/date_table */5733);
      /* harmony import */
      var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./layout */96471);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/layout.j.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var DateTableLayoutBase = /*#__PURE__*/function (_component_wrapper_sc2) {
        _inherits(DateTableLayoutBase, _component_wrapper_sc2);
        function DateTableLayoutBase() {
          _classCallCheck(this, DateTableLayoutBase);
          return _callSuper(this, DateTableLayoutBase, arguments);
        }
        _createClass(DateTableLayoutBase, [{
          key: "_propsInfo",
          get: function get() {
            return {
              twoWay: [],
              allowNull: [],
              elements: [],
              templates: ["cellTemplate", "dataCellTemplate"],
              props: ["cellTemplate", "viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width", "dataCellTemplate"]
            };
          }
        }, {
          key: "_viewComponent",
          get: function get() {
            return _layout__WEBPACK_IMPORTED_MODULE_2__.DateTableLayoutBase;
          }
        }]);
        return DateTableLayoutBase;
      }(_component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__.DateTable);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxDateTableLayoutBase", DateTableLayoutBase);

      /***/
    }),
    /***/96471: (
    /*!**************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/layout.js ***!
      \**************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction13;
        },
        /* harmony export */"DateTableLayoutProps": function DateTableLayoutProps() {
          return /* binding */_DateTableLayoutProps;
        },
        /* harmony export */"DateTableLayoutBase": function DateTableLayoutBase() {
          return /* binding */_DateTableLayoutBase;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../table */35686);
      /* harmony import */
      var _table_body__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./table_body */86255);
      /* harmony import */
      var _layout_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../layout_props */21250);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./cell */50995);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["addDateTableClass", "addVerticalSizesClassToRows", "bottomVirtualRowHeight", "cellTemplate", "dataCellTemplate", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "tableRef", "topVirtualRowHeight", "viewData", "width"];
      var _viewFunction13 = function _viewFunction13(_ref) {
        var bottomVirtualRowHeight = _ref.bottomVirtualRowHeight,
          classes = _ref.classes,
          leftVirtualCellWidth = _ref.leftVirtualCellWidth,
          _ref$props6 = _ref.props,
          addVerticalSizesClassToRows = _ref$props6.addVerticalSizesClassToRows,
          cellTemplate = _ref$props6.cellTemplate,
          dataCellTemplate = _ref$props6.dataCellTemplate,
          groupOrientation = _ref$props6.groupOrientation,
          tableRef = _ref$props6.tableRef,
          viewData = _ref$props6.viewData,
          width = _ref$props6.width,
          restAttributes = _ref.restAttributes,
          rightVirtualCellWidth = _ref.rightVirtualCellWidth,
          topVirtualRowHeight = _ref.topVirtualRowHeight,
          virtualCellsCount = _ref.virtualCellsCount;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _table__WEBPACK_IMPORTED_MODULE_4__.Table, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, restAttributes, {
          tableRef: tableRef,
          topVirtualRowHeight: topVirtualRowHeight,
          bottomVirtualRowHeight: bottomVirtualRowHeight,
          leftVirtualCellWidth: leftVirtualCellWidth,
          rightVirtualCellWidth: rightVirtualCellWidth,
          leftVirtualCellCount: viewData.leftVirtualCellCount,
          rightVirtualCellCount: viewData.rightVirtualCellCount,
          virtualCellsCount: virtualCellsCount,
          className: classes,
          width: width,
          children: (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _table_body__WEBPACK_IMPORTED_MODULE_5__.DateTableBody, {
            cellTemplate: cellTemplate,
            viewData: viewData,
            dataCellTemplate: dataCellTemplate,
            leftVirtualCellWidth: leftVirtualCellWidth,
            rightVirtualCellWidth: rightVirtualCellWidth,
            groupOrientation: groupOrientation,
            addVerticalSizesClassToRows: addVerticalSizesClassToRows
          })
        })));
      };
      var _DateTableLayoutProps = Object.create(Object.prototype, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyDescriptors(_layout_props__WEBPACK_IMPORTED_MODULE_6__.LayoutProps), Object.getOwnPropertyDescriptors({
        cellTemplate: _cell__WEBPACK_IMPORTED_MODULE_7__.DateTableCellBase
      })));
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _DateTableLayoutBase = /*#__PURE__*/function (_devextreme_runtime_i13) {
        _inherits(_DateTableLayoutBase, _devextreme_runtime_i13);
        function _DateTableLayoutBase(props) {
          var _this190;
          _classCallCheck(this, _DateTableLayoutBase);
          _this190 = _callSuper(this, _DateTableLayoutBase, [props]);
          _this190.state = {};
          return _this190;
        }
        _createClass(_DateTableLayoutBase, [{
          key: "createEffects",
          value: function createEffects() {
            return [(0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()];
          }
        }, {
          key: "classes",
          get: function get() {
            var addDateTableClass = this.props.addDateTableClass;
            return addDateTableClass ? "dx-scheduler-date-table" : void 0;
          }
        }, {
          key: "topVirtualRowHeight",
          get: function get() {
            var _this$props$viewData$;
            return null !== (_this$props$viewData$ = this.props.viewData.topVirtualRowHeight) && void 0 !== _this$props$viewData$ ? _this$props$viewData$ : 0;
          }
        }, {
          key: "bottomVirtualRowHeight",
          get: function get() {
            var _this$props$viewData$2;
            return null !== (_this$props$viewData$2 = this.props.viewData.bottomVirtualRowHeight) && void 0 !== _this$props$viewData$2 ? _this$props$viewData$2 : 0;
          }
        }, {
          key: "leftVirtualCellWidth",
          get: function get() {
            var _this$props$viewData$3;
            return null !== (_this$props$viewData$3 = this.props.viewData.leftVirtualCellWidth) && void 0 !== _this$props$viewData$3 ? _this$props$viewData$3 : 0;
          }
        }, {
          key: "rightVirtualCellWidth",
          get: function get() {
            var _this$props$viewData$4;
            return null !== (_this$props$viewData$4 = this.props.viewData.rightVirtualCellWidth) && void 0 !== _this$props$viewData$4 ? _this$props$viewData$4 : 0;
          }
        }, {
          key: "virtualCellsCount",
          get: function get() {
            return this.props.viewData.groupedData[0].dateTable[0].cells.length;
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction13({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                cellTemplate: getTemplate(props.cellTemplate),
                dataCellTemplate: getTemplate(props.dataCellTemplate)
              }),
              classes: this.classes,
              topVirtualRowHeight: this.topVirtualRowHeight,
              bottomVirtualRowHeight: this.bottomVirtualRowHeight,
              leftVirtualCellWidth: this.leftVirtualCellWidth,
              rightVirtualCellWidth: this.rightVirtualCellWidth,
              virtualCellsCount: this.virtualCellsCount,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _DateTableLayoutBase;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent);
      _DateTableLayoutBase.defaultProps = _DateTableLayoutProps;

      /***/
    }),
    /***/86255: (
    /*!******************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js ***!
      \******************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction14;
        },
        /* harmony export */"DateTableBodyProps": function DateTableBodyProps() {
          return /* binding */_DateTableBodyProps;
        },
        /* harmony export */"DateTableBody": function DateTableBody() {
          return /* binding */_DateTableBody;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../row */50642);
      /* harmony import */
      var _all_day_panel_table_body__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./all_day_panel/table_body */50845);
      /* harmony import */
      var _layout_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../layout_props */21250);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./cell */50995);
      /* harmony import */
      var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../../../utils/combine_classes */33582);
      /* harmony import */
      var _const__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../const */25222);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["addDateTableClass", "addVerticalSizesClassToRows", "bottomVirtualRowHeight", "cellTemplate", "dataCellTemplate", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "viewData", "width"];
      var _viewFunction14 = function _viewFunction14(_ref) {
        var _ref$props7 = _ref.props,
          Cell = _ref$props7.cellTemplate,
          dataCellTemplate = _ref$props7.dataCellTemplate,
          viewData = _ref$props7.viewData,
          rowClasses = _ref.rowClasses;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)(viewData.groupedData.map(function (_ref2) {
          var allDayPanel = _ref2.allDayPanel,
            dateTable = _ref2.dateTable,
            isGroupedAllDayPanel = _ref2.isGroupedAllDayPanel,
            fragmentKey = _ref2.key;
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)([isGroupedAllDayPanel && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _all_day_panel_table_body__WEBPACK_IMPORTED_MODULE_5__.AllDayPanelTableBody, {
            viewData: allDayPanel,
            dataCellTemplate: dataCellTemplate,
            isVerticalGroupOrientation: true,
            leftVirtualCellWidth: viewData.leftVirtualCellWidth,
            rightVirtualCellWidth: viewData.rightVirtualCellWidth,
            leftVirtualCellCount: viewData.leftVirtualCellCount,
            rightVirtualCellCount: viewData.rightVirtualCellCount
          }), dateTable.map(function (_ref3) {
            var cells = _ref3.cells,
              rowKey = _ref3.key;
            return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
              className: rowClasses,
              leftVirtualCellWidth: viewData.leftVirtualCellWidth,
              rightVirtualCellWidth: viewData.rightVirtualCellWidth,
              leftVirtualCellCount: viewData.leftVirtualCellCount,
              rightVirtualCellCount: viewData.rightVirtualCellCount,
              children: cells.map(function (_ref4) {
                var endDate = _ref4.endDate,
                  firstDayOfMonth = _ref4.firstDayOfMonth,
                  cellGroupIndex = _ref4.groupIndex,
                  groups = _ref4.groups,
                  cellIndex = _ref4.index,
                  isFirstGroupCell = _ref4.isFirstGroupCell,
                  isFocused = _ref4.isFocused,
                  isLastGroupCell = _ref4.isLastGroupCell,
                  isSelected = _ref4.isSelected,
                  key = _ref4.key,
                  otherMonth = _ref4.otherMonth,
                  startDate = _ref4.startDate,
                  text = _ref4.text,
                  today = _ref4.today;
                return Cell({
                  isFirstGroupCell: isFirstGroupCell,
                  isLastGroupCell: isLastGroupCell,
                  startDate: startDate,
                  endDate: endDate,
                  groups: groups,
                  groupIndex: cellGroupIndex,
                  index: cellIndex,
                  dataCellTemplate: dataCellTemplate,
                  key: key,
                  text: text,
                  today: today,
                  otherMonth: otherMonth,
                  firstDayOfMonth: firstDayOfMonth,
                  isSelected: isSelected,
                  isFocused: isFocused
                });
              })
            }, rowKey);
          })], 0, fragmentKey);
        }), 0);
      };
      var _DateTableBodyProps = Object.create(Object.prototype, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyDescriptors(_layout_props__WEBPACK_IMPORTED_MODULE_6__.LayoutProps), Object.getOwnPropertyDescriptors({
        cellTemplate: _cell__WEBPACK_IMPORTED_MODULE_7__.DateTableCellBase
      })));
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _DateTableBody = /*#__PURE__*/function (_devextreme_runtime_i14) {
        _inherits(_DateTableBody, _devextreme_runtime_i14);
        function _DateTableBody(props) {
          var _this191;
          _classCallCheck(this, _DateTableBody);
          _this191 = _callSuper(this, _DateTableBody, [props]);
          _this191.state = {};
          return _this191;
        }
        _createClass(_DateTableBody, [{
          key: "rowClasses",
          get: function get() {
            var addVerticalSizesClassToRows = this.props.addVerticalSizesClassToRows;
            return (0, _utils_combine_classes__WEBPACK_IMPORTED_MODULE_8__.combineClasses)(_defineProperty(_defineProperty({}, _const__WEBPACK_IMPORTED_MODULE_9__.DATE_TABLE_ROW_CLASS, true), "dx-scheduler-cell-sizes-vertical", addVerticalSizesClassToRows));
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction14({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                cellTemplate: getTemplate(props.cellTemplate),
                dataCellTemplate: getTemplate(props.dataCellTemplate)
              }),
              rowClasses: this.rowClasses,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _DateTableBody;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _DateTableBody.defaultProps = _DateTableBodyProps;

      /***/
    }),
    /***/78966: (
    /*!*******************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/cell_props.js ***!
      \*******************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"GroupPanelCellProps": function GroupPanelCellProps() {
          return /* binding */_GroupPanelCellProps;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/cell_props.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _GroupPanelCellProps = {
        id: 0,
        text: "",
        data: Object.freeze({
          id: 0
        }),
        className: ""
      };

      /***/
    }),
    /***/16783: (
    /*!**********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel.j.js ***!
      \**********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */GroupPanel;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../core/component_registrator */2382);
      /* harmony import */
      var _component_wrapper_scheduler_group_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../component_wrapper/scheduler/group_panel */8294);
      /* harmony import */
      var _group_panel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./group_panel */46149);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel.j.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var GroupPanel = /*#__PURE__*/function (_component_wrapper_sc3) {
        _inherits(GroupPanel, _component_wrapper_sc3);
        function GroupPanel() {
          _classCallCheck(this, GroupPanel);
          return _callSuper(this, GroupPanel, arguments);
        }
        _createClass(GroupPanel, [{
          key: "_propsInfo",
          get: function get() {
            return {
              twoWay: [],
              allowNull: [],
              elements: [],
              templates: ["resourceCellTemplate"],
              props: ["groups", "groupOrientation", "groupPanelData", "groupByDate", "height", "className", "resourceCellTemplate"]
            };
          }
        }, {
          key: "_viewComponent",
          get: function get() {
            return _group_panel__WEBPACK_IMPORTED_MODULE_2__.GroupPanel;
          }
        }]);
        return GroupPanel;
      }(_component_wrapper_scheduler_group_panel__WEBPACK_IMPORTED_MODULE_1__.GroupPanelWrapper);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxGroupPanel", GroupPanel);

      /***/
    }),
    /***/46149: (
    /*!********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel.js ***!
      \********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction15;
        },
        /* harmony export */"GroupPanelProps": function GroupPanelProps() {
          return /* binding */_GroupPanelProps;
        },
        /* harmony export */"GroupPanel": function GroupPanel() {
          return /* binding */_GroupPanel;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../utils */59016);
      /* harmony import */
      var _group_panel_props__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./group_panel_props */34171);
      /* harmony import */
      var _vertical_layout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./vertical/layout */8212);
      /* harmony import */
      var _horizontal_layout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./horizontal/layout */89320);
      /* harmony import */
      var _consts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../consts */29239);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["className", "elementRef", "groupByDate", "groupOrientation", "groupPanelData", "groups", "height", "resourceCellTemplate"];
      var _viewFunction15 = function _viewFunction15(_ref) {
        var isVerticalLayout = _ref.isVerticalLayout,
          _ref$props8 = _ref.props,
          className = _ref$props8.className,
          elementRef = _ref$props8.elementRef,
          groupPanelData = _ref$props8.groupPanelData,
          height = _ref$props8.height,
          resourceCellTemplate = _ref$props8.resourceCellTemplate,
          restAttributes = _ref.restAttributes;
        return isVerticalLayout ? (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _vertical_layout__WEBPACK_IMPORTED_MODULE_6__.GroupPanelVerticalLayout, {
          height: height,
          resourceCellTemplate: resourceCellTemplate,
          className: className,
          groupPanelData: groupPanelData,
          elementRef: elementRef,
          styles: restAttributes.style
        }) : (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _horizontal_layout__WEBPACK_IMPORTED_MODULE_7__.GroupPanelHorizontalLayout, {
          height: height,
          resourceCellTemplate: resourceCellTemplate,
          className: className,
          groupPanelData: groupPanelData,
          elementRef: elementRef,
          styles: restAttributes.style
        });
      };
      var _GroupPanelProps = Object.create(Object.prototype, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyDescriptors(_group_panel_props__WEBPACK_IMPORTED_MODULE_5__.GroupPanelBaseProps), Object.getOwnPropertyDescriptors({
        groups: Object.freeze([]),
        groupOrientation: _consts__WEBPACK_IMPORTED_MODULE_8__.VERTICAL_GROUP_ORIENTATION
      })));
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _GroupPanel = /*#__PURE__*/function (_devextreme_runtime_i15) {
        _inherits(_GroupPanel, _devextreme_runtime_i15);
        function _GroupPanel(props) {
          var _this192;
          _classCallCheck(this, _GroupPanel);
          _this192 = _callSuper(this, _GroupPanel, [props]);
          _this192.state = {};
          return _this192;
        }
        _createClass(_GroupPanel, [{
          key: "createEffects",
          value: function createEffects() {
            return [(0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()];
          }
        }, {
          key: "isVerticalLayout",
          get: function get() {
            var _this$props5 = this.props,
              groupOrientation = _this$props5.groupOrientation,
              groups = _this$props5.groups;
            return (0, _utils__WEBPACK_IMPORTED_MODULE_4__.isVerticalGroupingApplied)(groups, groupOrientation);
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction15({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                resourceCellTemplate: getTemplate(props.resourceCellTemplate)
              }),
              isVerticalLayout: this.isVerticalLayout,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _GroupPanel;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent);
      _GroupPanel.defaultProps = _GroupPanelProps;

      /***/
    }),
    /***/94014: (
    /*!*********************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel_layout_props.js ***!
      \*********************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"GroupPanelLayoutProps": function GroupPanelLayoutProps() {
          return /* binding */_GroupPanelLayoutProps;
        }
        /* harmony export */
      });
      /* harmony import */
      var _group_panel_props__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./group_panel_props */34171);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel_layout_props.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _GroupPanelLayoutProps = _group_panel_props__WEBPACK_IMPORTED_MODULE_0__.GroupPanelBaseProps;

      /***/
    }),
    /***/34171: (
    /*!**************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel_props.js ***!
      \**************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"GroupPanelBaseProps": function GroupPanelBaseProps() {
          return /* binding */_GroupPanelBaseProps;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/group_panel_props.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _GroupPanelBaseProps = {
        groupPanelData: Object.freeze({
          groupPanelItems: [],
          baseColSpan: 1
        }),
        groupByDate: false
      };

      /***/
    }),
    /***/77187: (
    /*!************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/cell.js ***!
      \************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction16;
        },
        /* harmony export */"GroupPanelHorizontalCellProps": function GroupPanelHorizontalCellProps() {
          return /* binding */_GroupPanelHorizontalCellProps;
        },
        /* harmony export */"GroupPanelHorizontalCell": function GroupPanelHorizontalCell() {
          return /* binding */_GroupPanelHorizontalCell;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../../../utils/combine_classes */33582);
      /* harmony import */
      var _cell_props__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../cell_props */78966);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["cellTemplate", "className", "colSpan", "color", "data", "id", "index", "isFirstGroupCell", "isLastGroupCell", "text"];
      var _viewFunction16 = function _viewFunction16(_ref) {
        var classes = _ref.classes,
          _ref$props9 = _ref.props,
          CellTemplate = _ref$props9.cellTemplate,
          colSpan = _ref$props9.colSpan,
          color = _ref$props9.color,
          data = _ref$props9.data,
          id = _ref$props9.id,
          index = _ref$props9.index,
          text = _ref$props9.text;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "th", classes, (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-group-header-content", [!!CellTemplate && CellTemplate({
          data: {
            data: data,
            id: id,
            color: color,
            text: text
          },
          index: index
        }), !CellTemplate && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", null, text, 0)], 0), 2, {
          colSpan: colSpan
        });
      };
      var _GroupPanelHorizontalCellProps = Object.create(Object.prototype, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyDescriptors(_cell_props__WEBPACK_IMPORTED_MODULE_5__.GroupPanelCellProps), Object.getOwnPropertyDescriptors({
        isFirstGroupCell: false,
        isLastGroupCell: false,
        colSpan: 1
      })));
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _GroupPanelHorizontalCell = /*#__PURE__*/function (_devextreme_runtime_i16) {
        _inherits(_GroupPanelHorizontalCell, _devextreme_runtime_i16);
        function _GroupPanelHorizontalCell(props) {
          var _this193;
          _classCallCheck(this, _GroupPanelHorizontalCell);
          _this193 = _callSuper(this, _GroupPanelHorizontalCell, [props]);
          _this193.state = {};
          return _this193;
        }
        _createClass(_GroupPanelHorizontalCell, [{
          key: "classes",
          get: function get() {
            var _this$props6 = this.props,
              className = _this$props6.className,
              isFirstGroupCell = _this$props6.isFirstGroupCell,
              isLastGroupCell = _this$props6.isLastGroupCell;
            return (0, _utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__.combineClasses)(_defineProperty({
              "dx-scheduler-group-header": true,
              "dx-scheduler-first-group-cell": isFirstGroupCell,
              "dx-scheduler-last-group-cell": isLastGroupCell
            }, className, !!className));
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction16({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                cellTemplate: getTemplate(props.cellTemplate)
              }),
              classes: this.classes,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _GroupPanelHorizontalCell;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _GroupPanelHorizontalCell.defaultProps = _GroupPanelHorizontalCellProps;

      /***/
    }),
    /***/89320: (
    /*!**************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/layout.js ***!
      \**************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction17;
        },
        /* harmony export */"HorizontalGroupPanelLayoutProps": function HorizontalGroupPanelLayoutProps() {
          return /* binding */_HorizontalGroupPanelLayoutProps;
        },
        /* harmony export */"GroupPanelHorizontalLayout": function GroupPanelHorizontalLayout() {
          return /* binding */_GroupPanelHorizontalLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./row */45390);
      /* harmony import */
      var _group_panel_layout_props__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../group_panel_layout_props */94014);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["className", "elementRef", "groupByDate", "groupPanelData", "height", "resourceCellTemplate", "styles"];
      var _viewFunction17 = function _viewFunction17(_ref) {
        var groupPanelItems = _ref.groupPanelItems,
          resourceCellTemplate = _ref.props.resourceCellTemplate;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)(groupPanelItems.map(function (group) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
            groupItems: group,
            cellTemplate: resourceCellTemplate
          }, group[0].key);
        }), 0);
      };
      var _HorizontalGroupPanelLayoutProps = _group_panel_layout_props__WEBPACK_IMPORTED_MODULE_5__.GroupPanelLayoutProps;
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _GroupPanelHorizontalLayout = /*#__PURE__*/function (_devextreme_runtime_i17) {
        _inherits(_GroupPanelHorizontalLayout, _devextreme_runtime_i17);
        function _GroupPanelHorizontalLayout(props) {
          var _this194;
          _classCallCheck(this, _GroupPanelHorizontalLayout);
          _this194 = _callSuper(this, _GroupPanelHorizontalLayout, [props]);
          _this194.state = {};
          _this194.__getterCache = {};
          return _this194;
        }
        _createClass(_GroupPanelHorizontalLayout, [{
          key: "groupPanelItems",
          get: function get() {
            var _this195 = this;
            if (void 0 !== this.__getterCache.groupPanelItems) {
              return this.__getterCache.groupPanelItems;
            }
            return this.__getterCache.groupPanelItems = function () {
              var groupPanelData = _this195.props.groupPanelData;
              var baseColSpan = groupPanelData.baseColSpan,
                groupPanelItems = groupPanelData.groupPanelItems;
              var colSpans = groupPanelItems.reduceRight(function (currentColSpans, groupsRow, index) {
                var nextColSpans = currentColSpans;
                var currentLevelGroupCount = groupsRow.length;
                var previousColSpan = index === groupPanelItems.length - 1 ? baseColSpan : currentColSpans[index + 1];
                var previousLevelGroupCount = index === groupPanelItems.length - 1 ? currentLevelGroupCount : groupPanelItems[index + 1].length;
                var groupCountDiff = previousLevelGroupCount / currentLevelGroupCount;
                nextColSpans[index] = groupCountDiff * previousColSpan;
                return nextColSpans;
              }, _toConsumableArray(new Array(groupPanelItems.length)));
              return groupPanelItems.map(function (groupsRenderRow, index) {
                var colSpan = colSpans[index];
                return groupsRenderRow.map(function (groupItem) {
                  return (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, groupItem, {
                    colSpan: colSpan
                  });
                });
              });
            }();
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "componentWillUpdate",
          value: function componentWillUpdate(nextProps, nextState, context) {
            if (this.props.groupPanelData !== nextProps.groupPanelData) {
              this.__getterCache.groupPanelItems = void 0;
            }
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction17({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                resourceCellTemplate: getTemplate(props.resourceCellTemplate)
              }),
              groupPanelItems: this.groupPanelItems,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _GroupPanelHorizontalLayout;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _GroupPanelHorizontalLayout.defaultProps = _HorizontalGroupPanelLayoutProps;

      /***/
    }),
    /***/45390: (
    /*!***********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/row.js ***!
      \***********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction18;
        },
        /* harmony export */"Row": function Row() {
          return /* binding */_Row;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./cell */77187);
      /* harmony import */
      var _row_props__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../row_props */64623);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/row.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["cellTemplate", "className", "groupItems"];
      var _viewFunction18 = function _viewFunction18(_ref) {
        var _ref$props10 = _ref.props,
          cellTemplate = _ref$props10.cellTemplate,
          className = _ref$props10.className,
          groupItems = _ref$props10.groupItems;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "tr", "dx-scheduler-group-row ".concat(className), groupItems.map(function (_ref2, index) {
          var colSpan = _ref2.colSpan,
            color = _ref2.color,
            data = _ref2.data,
            id = _ref2.id,
            isFirstGroupCell = _ref2.isFirstGroupCell,
            isLastGroupCell = _ref2.isLastGroupCell,
            key = _ref2.key,
            text = _ref2.text;
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_4__.GroupPanelHorizontalCell, {
            text: text,
            id: id,
            data: data,
            index: index,
            color: color,
            colSpan: colSpan,
            isFirstGroupCell: !!isFirstGroupCell,
            isLastGroupCell: !!isLastGroupCell,
            cellTemplate: cellTemplate
          }, key);
        }), 0);
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _Row = /*#__PURE__*/function (_devextreme_runtime_i18) {
        _inherits(_Row, _devextreme_runtime_i18);
        function _Row(props) {
          var _this196;
          _classCallCheck(this, _Row);
          _this196 = _callSuper(this, _Row, [props]);
          _this196.state = {};
          return _this196;
        }
        _createClass(_Row, [{
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction18({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                cellTemplate: getTemplate(props.cellTemplate)
              }),
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _Row;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _Row.defaultProps = _row_props__WEBPACK_IMPORTED_MODULE_5__.GroupPanelRowProps;

      /***/
    }),
    /***/64623: (
    /*!******************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/row_props.js ***!
      \******************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"GroupPanelRowProps": function GroupPanelRowProps() {
          return /* binding */_GroupPanelRowProps;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/row_props.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _GroupPanelRowProps = {
        groupItems: Object.freeze([]),
        className: ""
      };

      /***/
    }),
    /***/83582: (
    /*!**********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/cell.js ***!
      \**********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction19;
        },
        /* harmony export */"GroupPanelVerticalCell": function GroupPanelVerticalCell() {
          return /* binding */_GroupPanelVerticalCell;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _cell_props__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../cell_props */78966);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["cellTemplate", "className", "color", "data", "id", "index", "text"];
      var _viewFunction19 = function _viewFunction19(viewModel) {
        var CellTemplate = viewModel.props.cellTemplate;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-group-header ".concat(viewModel.props.className), [!!viewModel.props.cellTemplate && CellTemplate({
          data: {
            data: viewModel.props.data,
            id: viewModel.props.id,
            color: viewModel.props.color,
            text: viewModel.props.text
          },
          index: viewModel.props.index
        }), !viewModel.props.cellTemplate && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-group-header-content", viewModel.props.text, 0)], 0);
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _GroupPanelVerticalCell = /*#__PURE__*/function (_devextreme_runtime_i19) {
        _inherits(_GroupPanelVerticalCell, _devextreme_runtime_i19);
        function _GroupPanelVerticalCell(props) {
          var _this197;
          _classCallCheck(this, _GroupPanelVerticalCell);
          _this197 = _callSuper(this, _GroupPanelVerticalCell, [props]);
          _this197.state = {};
          return _this197;
        }
        _createClass(_GroupPanelVerticalCell, [{
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction19({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                cellTemplate: getTemplate(props.cellTemplate)
              }),
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _GroupPanelVerticalCell;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _GroupPanelVerticalCell.defaultProps = _cell_props__WEBPACK_IMPORTED_MODULE_4__.GroupPanelCellProps;

      /***/
    }),
    /***/8212: (
    /*!************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/layout.js ***!
      \************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction20;
        },
        /* harmony export */"VerticalGroupPanelLayoutProps": function VerticalGroupPanelLayoutProps() {
          return /* binding */_VerticalGroupPanelLayoutProps;
        },
        /* harmony export */"GroupPanelVerticalLayout": function GroupPanelVerticalLayout() {
          return /* binding */_GroupPanelVerticalLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./row */50395);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../utils */59016);
      /* harmony import */
      var _group_panel_layout_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../group_panel_layout_props */94014);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["className", "elementRef", "groupByDate", "groupPanelData", "height", "resourceCellTemplate", "styles"];
      var _viewFunction20 = function _viewFunction20(_ref) {
        var _ref$props11 = _ref.props,
          className = _ref$props11.className,
          elementRef = _ref$props11.elementRef,
          groupPanelData = _ref$props11.groupPanelData,
          resourceCellTemplate = _ref$props11.resourceCellTemplate,
          style = _ref.style;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", className, (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-group-flex-container", groupPanelData.groupPanelItems.map(function (group) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
            groupItems: group,
            cellTemplate: resourceCellTemplate
          }, group[0].key);
        }), 0), 2, {
          style: (0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(style)
        }, null, elementRef);
      };
      var _VerticalGroupPanelLayoutProps = _group_panel_layout_props__WEBPACK_IMPORTED_MODULE_6__.GroupPanelLayoutProps;
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _GroupPanelVerticalLayout = /*#__PURE__*/function (_devextreme_runtime_i20) {
        _inherits(_GroupPanelVerticalLayout, _devextreme_runtime_i20);
        function _GroupPanelVerticalLayout(props) {
          var _this198;
          _classCallCheck(this, _GroupPanelVerticalLayout);
          _this198 = _callSuper(this, _GroupPanelVerticalLayout, [props]);
          _this198.state = {};
          return _this198;
        }
        _createClass(_GroupPanelVerticalLayout, [{
          key: "style",
          get: function get() {
            var _this$props7 = this.props,
              height = _this$props7.height,
              styles = _this$props7.styles;
            return (0, _utils__WEBPACK_IMPORTED_MODULE_5__.addHeightToStyle)(height, styles);
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction20({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                resourceCellTemplate: getTemplate(props.resourceCellTemplate)
              }),
              style: this.style,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _GroupPanelVerticalLayout;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _GroupPanelVerticalLayout.defaultProps = _VerticalGroupPanelLayoutProps;

      /***/
    }),
    /***/50395: (
    /*!*********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/row.js ***!
      \*********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction21;
        },
        /* harmony export */"Row": function Row() {
          return /* binding */_Row2;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./cell */83582);
      /* harmony import */
      var _row_props__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../row_props */64623);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/vertical/row.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["cellTemplate", "className", "groupItems"];
      var _viewFunction21 = function _viewFunction21(viewModel) {
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-group-row ".concat(viewModel.props.className), viewModel.props.groupItems.map(function (_ref, index) {
          var color = _ref.color,
            data = _ref.data,
            id = _ref.id,
            key = _ref.key,
            text = _ref.text;
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_4__.GroupPanelVerticalCell, {
            text: text,
            id: id,
            data: data,
            index: index,
            color: color,
            cellTemplate: viewModel.props.cellTemplate
          }, key);
        }), 0);
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _Row2 = /*#__PURE__*/function (_devextreme_runtime_i21) {
        _inherits(_Row2, _devextreme_runtime_i21);
        function _Row2(props) {
          var _this199;
          _classCallCheck(this, _Row2);
          _this199 = _callSuper(this, _Row2, [props]);
          _this199.state = {};
          return _this199;
        }
        _createClass(_Row2, [{
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction21({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                cellTemplate: getTemplate(props.cellTemplate)
              }),
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _Row2;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _Row2.defaultProps = _row_props__WEBPACK_IMPORTED_MODULE_5__.GroupPanelRowProps;

      /***/
    }),
    /***/92007: (
    /*!********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_cell.js ***!
      \********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction22;
        },
        /* harmony export */"HeaderCell": function HeaderCell() {
          return /* binding */_HeaderCell;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _ordinary_cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./ordinary_cell */35545);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["children", "className", "colSpan", "styles"];
      var _viewFunction22 = function _viewFunction22(_ref) {
        var _ref$props12 = _ref.props,
          children = _ref$props12.children,
          className = _ref$props12.className,
          colSpan = _ref$props12.colSpan,
          styles = _ref$props12.styles;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "th", className, children, 0, {
          style: (0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(styles),
          colSpan: colSpan
        });
      };
      var _HeaderCell = /*#__PURE__*/function (_devextreme_runtime_i22) {
        _inherits(_HeaderCell, _devextreme_runtime_i22);
        function _HeaderCell(props) {
          var _this200;
          _classCallCheck(this, _HeaderCell);
          _this200 = _callSuper(this, _HeaderCell, [props]);
          _this200.state = {};
          return _this200;
        }
        _createClass(_HeaderCell, [{
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction22({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props),
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _HeaderCell;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _HeaderCell.defaultProps = _ordinary_cell__WEBPACK_IMPORTED_MODULE_4__.CellProps;

      /***/
    }),
    /***/4905: (
    /*!**************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/cell.js ***!
      \**************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction23;
        },
        /* harmony export */"DateHeaderCellProps": function DateHeaderCellProps() {
          return /* binding */_DateHeaderCellProps;
        },
        /* harmony export */"DateHeaderCell": function DateHeaderCell() {
          return /* binding */_DateHeaderCell;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../cell */61074);
      /* harmony import */
      var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../../../../utils/combine_classes */33582);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../utils */59016);
      /* harmony import */
      var _dateHeaderText__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./dateHeaderText */69262);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["allDay", "ariaLabel", "children", "className", "colSpan", "contentTemplateProps", "dateCellTemplate", "endDate", "groupIndex", "groups", "index", "isFirstGroupCell", "isLastGroupCell", "isTimeCellTemplate", "isWeekDayCell", "splitText", "startDate", "text", "timeCellTemplate", "today"];
      var _viewFunction23 = function _viewFunction23(_ref) {
        var classes = _ref.classes,
          _ref$props13 = _ref.props,
          colSpan = _ref$props13.colSpan,
          DateCellTemplate = _ref$props13.dateCellTemplate,
          groupIndex = _ref$props13.groupIndex,
          groups = _ref$props13.groups,
          index = _ref$props13.index,
          isTimeCellTemplate = _ref$props13.isTimeCellTemplate,
          splitText = _ref$props13.splitText,
          startDate = _ref$props13.startDate,
          text = _ref$props13.text,
          TimeCellTemplate = _ref$props13.timeCellTemplate,
          useTemplate = _ref.useTemplate;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "th", classes, useTemplate ? (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)([isTimeCellTemplate && TimeCellTemplate && TimeCellTemplate({
          data: {
            date: startDate,
            text: text,
            groups: groups,
            groupIndex: groupIndex
          },
          index: index
        }), !isTimeCellTemplate && DateCellTemplate && DateCellTemplate({
          data: {
            date: startDate,
            text: text,
            groups: groups,
            groupIndex: groupIndex
          },
          index: index
        })], 0) : (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _dateHeaderText__WEBPACK_IMPORTED_MODULE_7__.DateHeaderText, {
          splitText: splitText,
          text: text
        }), 0, {
          colSpan: colSpan,
          title: text
        });
      };
      var _DateHeaderCellProps = Object.create(Object.prototype, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyDescriptors(_cell__WEBPACK_IMPORTED_MODULE_4__.CellBaseProps), Object.getOwnPropertyDescriptors({
        today: false,
        colSpan: 1,
        isWeekDayCell: false,
        splitText: false,
        isTimeCellTemplate: false
      })));
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _DateHeaderCell = /*#__PURE__*/function (_devextreme_runtime_i23) {
        _inherits(_DateHeaderCell, _devextreme_runtime_i23);
        function _DateHeaderCell(props) {
          var _this201;
          _classCallCheck(this, _DateHeaderCell);
          _this201 = _callSuper(this, _DateHeaderCell, [props]);
          _this201.state = {};
          return _this201;
        }
        _createClass(_DateHeaderCell, [{
          key: "classes",
          get: function get() {
            var _this$props8 = this.props,
              className = _this$props8.className,
              isFirstGroupCell = _this$props8.isFirstGroupCell,
              isLastGroupCell = _this$props8.isLastGroupCell,
              isWeekDayCell = _this$props8.isWeekDayCell,
              today = _this$props8.today;
            var cellClasses = (0, _utils_combine_classes__WEBPACK_IMPORTED_MODULE_5__.combineClasses)(_defineProperty({
              "dx-scheduler-header-panel-cell": true,
              "dx-scheduler-cell-sizes-horizontal": true,
              "dx-scheduler-header-panel-current-time-cell": today,
              "dx-scheduler-header-panel-week-cell": isWeekDayCell
            }, className, !!className));
            return (0, _utils__WEBPACK_IMPORTED_MODULE_6__.getGroupCellClasses)(isFirstGroupCell, isLastGroupCell, cellClasses);
          }
        }, {
          key: "useTemplate",
          get: function get() {
            var _this$props9 = this.props,
              dateCellTemplate = _this$props9.dateCellTemplate,
              isTimeCellTemplate = _this$props9.isTimeCellTemplate,
              timeCellTemplate = _this$props9.timeCellTemplate;
            return !isTimeCellTemplate && !!dateCellTemplate || isTimeCellTemplate && !!timeCellTemplate;
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction23({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                timeCellTemplate: getTemplate(props.timeCellTemplate),
                dateCellTemplate: getTemplate(props.dateCellTemplate)
              }),
              classes: this.classes,
              useTemplate: this.useTemplate,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _DateHeaderCell;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _DateHeaderCell.defaultProps = _DateHeaderCellProps;

      /***/
    }),
    /***/69262: (
    /*!************************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/dateHeaderText.js ***!
      \************************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction24;
        },
        /* harmony export */"DateHeaderTextProps": function DateHeaderTextProps() {
          return /* binding */_DateHeaderTextProps;
        },
        /* harmony export */"DateHeaderText": function DateHeaderText() {
          return /* binding */_DateHeaderText;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/dateHeaderText.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["splitText", "text"];
      var _viewFunction24 = function _viewFunction24(_ref) {
        var _ref$props14 = _ref.props,
          splitText = _ref$props14.splitText,
          text = _ref$props14.text,
          textParts = _ref.textParts;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)(splitText ? textParts.map(function (part) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "span", "dx-scheduler-header-panel-cell-date", part, 0);
        }) : text, 0);
      };
      var _DateHeaderTextProps = {
        text: "",
        splitText: false
      };
      var _DateHeaderText = /*#__PURE__*/function (_devextreme_runtime_i24) {
        _inherits(_DateHeaderText, _devextreme_runtime_i24);
        function _DateHeaderText(props) {
          var _this202;
          _classCallCheck(this, _DateHeaderText);
          _this202 = _callSuper(this, _DateHeaderText, [props]);
          _this202.state = {};
          _this202.__getterCache = {};
          return _this202;
        }
        _createClass(_DateHeaderText, [{
          key: "textParts",
          get: function get() {
            var _this203 = this;
            if (void 0 !== this.__getterCache.textParts) {
              return this.__getterCache.textParts;
            }
            return this.__getterCache.textParts = function () {
              var text = _this203.props.text;
              return text ? text.split(" ") : [""];
            }();
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "componentWillUpdate",
          value: function componentWillUpdate(nextProps, nextState, context) {
            if (this.props.text !== nextProps.text) {
              this.__getterCache.textParts = void 0;
            }
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction24({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props),
              textParts: this.textParts,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _DateHeaderText;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _DateHeaderText.defaultProps = _DateHeaderTextProps;

      /***/
    }),
    /***/20046: (
    /*!****************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/layout.js ***!
      \****************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction25;
        },
        /* harmony export */"DateHeaderLayoutProps": function DateHeaderLayoutProps() {
          return /* binding */_DateHeaderLayoutProps;
        },
        /* harmony export */"DateHeaderLayout": function DateHeaderLayout() {
          return /* binding */_DateHeaderLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../row */50642);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../utils */59016);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./cell */4905);
      /* harmony import */
      var _utils_getThemeType__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../../../../utils/getThemeType */82919);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["dateCellTemplate", "dateHeaderData", "groupByDate", "groupOrientation", "groups", "timeCellTemplate"];
      var _ref23 = (0, _utils_getThemeType__WEBPACK_IMPORTED_MODULE_7__["default"])(),
        isMaterial = _ref23.isMaterial;
      var _viewFunction25 = function _viewFunction25(_ref) {
        var isHorizontalGrouping = _ref.isHorizontalGrouping,
          _ref$props15 = _ref.props,
          dateCellTemplate = _ref$props15.dateCellTemplate,
          dateHeaderData = _ref$props15.dateHeaderData;
        var dataMap = dateHeaderData.dataMap,
          leftVirtualCellCount = dateHeaderData.leftVirtualCellCount,
          leftVirtualCellWidth = dateHeaderData.leftVirtualCellWidth,
          rightVirtualCellCount = dateHeaderData.rightVirtualCellCount,
          rightVirtualCellWidth = dateHeaderData.rightVirtualCellWidth;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)(dataMap.map(function (dateHeaderRow, rowIndex) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
            className: "dx-scheduler-header-row",
            leftVirtualCellWidth: leftVirtualCellWidth,
            leftVirtualCellCount: leftVirtualCellCount,
            rightVirtualCellWidth: rightVirtualCellWidth,
            rightVirtualCellCount: rightVirtualCellCount,
            isHeaderRow: true,
            children: dateHeaderRow.map(function (_ref2) {
              var colSpan = _ref2.colSpan,
                endDate = _ref2.endDate,
                groupIndex = _ref2.groupIndex,
                cellGroups = _ref2.groups,
                index = _ref2.index,
                isFirstGroupCell = _ref2.isFirstGroupCell,
                isLastGroupCell = _ref2.isLastGroupCell,
                key = _ref2.key,
                startDate = _ref2.startDate,
                text = _ref2.text,
                today = _ref2.today;
              return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_6__.DateHeaderCell, {
                startDate: startDate,
                endDate: endDate,
                groups: isHorizontalGrouping ? cellGroups : void 0,
                groupIndex: isHorizontalGrouping ? groupIndex : void 0,
                today: today,
                index: index,
                text: text,
                isFirstGroupCell: isFirstGroupCell,
                isLastGroupCell: isLastGroupCell,
                dateCellTemplate: dateCellTemplate,
                colSpan: colSpan,
                splitText: isMaterial
              }, key);
            })
          }, rowIndex.toString());
        }), 0);
      };
      var _DateHeaderLayoutProps = {
        groupOrientation: "horizontal",
        groupByDate: false,
        groups: Object.freeze([])
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _DateHeaderLayout = /*#__PURE__*/function (_devextreme_runtime_i25) {
        _inherits(_DateHeaderLayout, _devextreme_runtime_i25);
        function _DateHeaderLayout(props) {
          var _this204;
          _classCallCheck(this, _DateHeaderLayout);
          _this204 = _callSuper(this, _DateHeaderLayout, [props]);
          _this204.state = {};
          return _this204;
        }
        _createClass(_DateHeaderLayout, [{
          key: "isHorizontalGrouping",
          get: function get() {
            var _this$props10 = this.props,
              groupByDate = _this$props10.groupByDate,
              groupOrientation = _this$props10.groupOrientation,
              groups = _this$props10.groups;
            return (0, _utils__WEBPACK_IMPORTED_MODULE_5__.isHorizontalGroupingApplied)(groups, groupOrientation) && !groupByDate;
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction25({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                dateCellTemplate: getTemplate(props.dateCellTemplate),
                timeCellTemplate: getTemplate(props.timeCellTemplate)
              }),
              isHorizontalGrouping: this.isHorizontalGrouping,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _DateHeaderLayout;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _DateHeaderLayout.defaultProps = _DateHeaderLayoutProps;

      /***/
    }),
    /***/27865: (
    /*!******************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.j.js ***!
      \******************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */HeaderPanelLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../core/component_registrator */2382);
      /* harmony import */
      var _component_wrapper_scheduler_header_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../component_wrapper/scheduler/header_panel */72902);
      /* harmony import */
      var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./layout */61140);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.j.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var HeaderPanelLayout = /*#__PURE__*/function (_component_wrapper_sc4) {
        _inherits(HeaderPanelLayout, _component_wrapper_sc4);
        function HeaderPanelLayout() {
          _classCallCheck(this, HeaderPanelLayout);
          return _callSuper(this, HeaderPanelLayout, arguments);
        }
        _createClass(HeaderPanelLayout, [{
          key: "_propsInfo",
          get: function get() {
            return {
              twoWay: [],
              allowNull: [],
              elements: [],
              templates: ["dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "resourceCellTemplate"],
              props: ["dateHeaderData", "isRenderDateHeader", "dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "groups", "groupOrientation", "groupPanelData", "groupByDate", "height", "className", "resourceCellTemplate"]
            };
          }
        }, {
          key: "_viewComponent",
          get: function get() {
            return _layout__WEBPACK_IMPORTED_MODULE_2__.HeaderPanelLayout;
          }
        }]);
        return HeaderPanelLayout;
      }(_component_wrapper_scheduler_header_panel__WEBPACK_IMPORTED_MODULE_1__.HeaderPanel);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxHeaderPanelLayout", HeaderPanelLayout);

      /***/
    }),
    /***/61140: (
    /*!****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.js ***!
      \****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction26;
        },
        /* harmony export */"HeaderPanelLayoutProps": function HeaderPanelLayoutProps() {
          return /* binding */_HeaderPanelLayoutProps;
        },
        /* harmony export */"HeaderPanelLayout": function HeaderPanelLayout() {
          return /* binding */_HeaderPanelLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../utils */59016);
      /* harmony import */
      var _group_panel_group_panel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../group_panel/group_panel */46149);
      /* harmony import */
      var _date_header_layout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./date_header/layout */20046);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["className", "dateCellTemplate", "dateHeaderData", "dateHeaderTemplate", "elementRef", "groupByDate", "groupOrientation", "groupPanelData", "groups", "height", "isRenderDateHeader", "resourceCellTemplate", "timeCellTemplate"];
      var _viewFunction26 = function _viewFunction26(_ref) {
        var isHorizontalGrouping = _ref.isHorizontalGrouping,
          _ref$props16 = _ref.props,
          dateCellTemplate = _ref$props16.dateCellTemplate,
          dateHeaderData = _ref$props16.dateHeaderData,
          DateHeader = _ref$props16.dateHeaderTemplate,
          groupByDate = _ref$props16.groupByDate,
          groupOrientation = _ref$props16.groupOrientation,
          groupPanelData = _ref$props16.groupPanelData,
          groups = _ref$props16.groups,
          isRenderDateHeader = _ref$props16.isRenderDateHeader,
          resourceCellTemplate = _ref$props16.resourceCellTemplate,
          timeCellTemplate = _ref$props16.timeCellTemplate;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "thead", null, [isHorizontalGrouping && !groupByDate && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _group_panel_group_panel__WEBPACK_IMPORTED_MODULE_5__.GroupPanel, {
          groupPanelData: groupPanelData,
          groups: groups,
          groupByDate: groupByDate,
          groupOrientation: groupOrientation,
          resourceCellTemplate: resourceCellTemplate
        }), isRenderDateHeader && DateHeader({
          groupByDate: groupByDate,
          dateHeaderData: dateHeaderData,
          groupOrientation: groupOrientation,
          groups: groups,
          dateCellTemplate: dateCellTemplate,
          timeCellTemplate: timeCellTemplate
        }), groupByDate && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _group_panel_group_panel__WEBPACK_IMPORTED_MODULE_5__.GroupPanel, {
          groupPanelData: groupPanelData,
          groups: groups,
          groupByDate: groupByDate,
          groupOrientation: groupOrientation,
          resourceCellTemplate: resourceCellTemplate
        })], 0);
      };
      var _HeaderPanelLayoutProps = Object.create(Object.prototype, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyDescriptors(_group_panel_group_panel__WEBPACK_IMPORTED_MODULE_5__.GroupPanelProps), Object.getOwnPropertyDescriptors({
        isRenderDateHeader: true,
        dateHeaderTemplate: _date_header_layout__WEBPACK_IMPORTED_MODULE_6__.DateHeaderLayout
      })));
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _HeaderPanelLayout = /*#__PURE__*/function (_devextreme_runtime_i26) {
        _inherits(_HeaderPanelLayout, _devextreme_runtime_i26);
        function _HeaderPanelLayout(props) {
          var _this205;
          _classCallCheck(this, _HeaderPanelLayout);
          _this205 = _callSuper(this, _HeaderPanelLayout, [props]);
          _this205.state = {};
          return _this205;
        }
        _createClass(_HeaderPanelLayout, [{
          key: "createEffects",
          value: function createEffects() {
            return [(0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()];
          }
        }, {
          key: "isHorizontalGrouping",
          get: function get() {
            var _this$props11 = this.props,
              groupOrientation = _this$props11.groupOrientation,
              groups = _this$props11.groups;
            return (0, _utils__WEBPACK_IMPORTED_MODULE_4__.isHorizontalGroupingApplied)(groups, groupOrientation);
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction26({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                dateCellTemplate: getTemplate(props.dateCellTemplate),
                timeCellTemplate: getTemplate(props.timeCellTemplate),
                dateHeaderTemplate: getTemplate(props.dateHeaderTemplate),
                resourceCellTemplate: getTemplate(props.resourceCellTemplate)
              }),
              isHorizontalGrouping: this.isHorizontalGrouping,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _HeaderPanelLayout;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent);
      _HeaderPanelLayout.defaultProps = _HeaderPanelLayoutProps;

      /***/
    }),
    /***/21250: (
    /*!*********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/layout_props.js ***!
      \*********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"LayoutProps": function LayoutProps() {
          return /* binding */_LayoutProps;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/layout_props.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _LayoutProps = {
        viewData: Object.freeze({
          groupedData: [],
          leftVirtualCellCount: 0,
          rightVirtualCellCount: 0,
          topVirtualRowCount: 0,
          bottomVirtualRowCount: 0
        }),
        leftVirtualCellWidth: 0,
        rightVirtualCellWidth: 0,
        topVirtualRowHeight: 0,
        bottomVirtualRowHeight: 0,
        addDateTableClass: true,
        addVerticalSizesClassToRows: true
      };

      /***/
    }),
    /***/35545: (
    /*!**********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/ordinary_cell.js ***!
      \**********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction27;
        },
        /* harmony export */"CellProps": function CellProps() {
          return /* binding */_CellProps;
        },
        /* harmony export */"OrdinaryCell": function OrdinaryCell() {
          return /* binding */_OrdinaryCell;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/ordinary_cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["children", "className", "colSpan", "styles"];
      var _viewFunction27 = function _viewFunction27(_ref) {
        var _ref$props17 = _ref.props,
          children = _ref$props17.children,
          className = _ref$props17.className,
          colSpan = _ref$props17.colSpan,
          styles = _ref$props17.styles;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "td", className, children, 0, {
          style: (0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(styles),
          colSpan: colSpan
        });
      };
      var _CellProps = {};
      var _OrdinaryCell = /*#__PURE__*/function (_devextreme_runtime_i27) {
        _inherits(_OrdinaryCell, _devextreme_runtime_i27);
        function _OrdinaryCell(props) {
          var _this206;
          _classCallCheck(this, _OrdinaryCell);
          _this206 = _callSuper(this, _OrdinaryCell, [props]);
          _this206.state = {};
          return _this206;
        }
        _createClass(_OrdinaryCell, [{
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction27({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props),
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _OrdinaryCell;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _OrdinaryCell.defaultProps = _CellProps;

      /***/
    }),
    /***/50642: (
    /*!************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/row.js ***!
      \************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction28;
        },
        /* harmony export */"RowProps": function RowProps() {
          return /* binding */_RowProps;
        },
        /* harmony export */"Row": function Row() {
          return /* binding */_Row3;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _virtual_cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./virtual_cell */69850);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/row.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["children", "className", "isHeaderRow", "leftVirtualCellCount", "leftVirtualCellWidth", "rightVirtualCellCount", "rightVirtualCellWidth", "styles"];
      var _viewFunction28 = function _viewFunction28(_ref) {
        var hasLeftVirtualCell = _ref.hasLeftVirtualCell,
          hasRightVirtualCell = _ref.hasRightVirtualCell,
          _ref$props18 = _ref.props,
          children = _ref$props18.children,
          className = _ref$props18.className,
          isHeaderRow = _ref$props18.isHeaderRow,
          leftVirtualCellCount = _ref$props18.leftVirtualCellCount,
          leftVirtualCellWidth = _ref$props18.leftVirtualCellWidth,
          rightVirtualCellCount = _ref$props18.rightVirtualCellCount,
          rightVirtualCellWidth = _ref$props18.rightVirtualCellWidth,
          styles = _ref$props18.styles;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "tr", className, [hasLeftVirtualCell && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _virtual_cell__WEBPACK_IMPORTED_MODULE_4__.VirtualCell, {
          width: leftVirtualCellWidth,
          colSpan: leftVirtualCellCount,
          isHeaderCell: isHeaderRow
        }), children, hasRightVirtualCell && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _virtual_cell__WEBPACK_IMPORTED_MODULE_4__.VirtualCell, {
          width: rightVirtualCellWidth,
          colSpan: rightVirtualCellCount,
          isHeaderCell: isHeaderRow
        })], 0, {
          style: (0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(styles)
        });
      };
      var _RowProps = {
        className: "",
        leftVirtualCellWidth: 0,
        rightVirtualCellWidth: 0,
        isHeaderRow: false
      };
      var _Row3 = /*#__PURE__*/function (_devextreme_runtime_i28) {
        _inherits(_Row3, _devextreme_runtime_i28);
        function _Row3(props) {
          var _this207;
          _classCallCheck(this, _Row3);
          _this207 = _callSuper(this, _Row3, [props]);
          _this207.state = {};
          return _this207;
        }
        _createClass(_Row3, [{
          key: "hasLeftVirtualCell",
          get: function get() {
            var leftVirtualCellCount = this.props.leftVirtualCellCount;
            return !!leftVirtualCellCount;
          }
        }, {
          key: "hasRightVirtualCell",
          get: function get() {
            var rightVirtualCellCount = this.props.rightVirtualCellCount;
            return !!rightVirtualCellCount;
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction28({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props),
              hasLeftVirtualCell: this.hasLeftVirtualCell,
              hasRightVirtualCell: this.hasRightVirtualCell,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _Row3;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _Row3.defaultProps = _RowProps;

      /***/
    }),
    /***/35686: (
    /*!**************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/table.js ***!
      \**************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction29;
        },
        /* harmony export */"TableProps": function TableProps() {
          return /* binding */_TableProps;
        },
        /* harmony export */"Table": function Table() {
          return /* binding */_Table;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../utils */59016);
      /* harmony import */
      var _virtual_row__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./virtual_row */3211);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/table.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["bottomVirtualRowHeight", "children", "className", "height", "leftVirtualCellCount", "leftVirtualCellWidth", "rightVirtualCellCount", "rightVirtualCellWidth", "tableRef", "topVirtualRowHeight", "virtualCellsCount", "width"];
      var _viewFunction29 = function _viewFunction29(_ref) {
        var hasBottomVirtualRow = _ref.hasBottomVirtualRow,
          hasTopVirtualRow = _ref.hasTopVirtualRow,
          _ref$props19 = _ref.props,
          bottomVirtualRowHeight = _ref$props19.bottomVirtualRowHeight,
          children = _ref$props19.children,
          className = _ref$props19.className,
          leftVirtualCellCount = _ref$props19.leftVirtualCellCount,
          leftVirtualCellWidth = _ref$props19.leftVirtualCellWidth,
          rightVirtualCellCount = _ref$props19.rightVirtualCellCount,
          rightVirtualCellWidth = _ref$props19.rightVirtualCellWidth,
          tableRef = _ref$props19.tableRef,
          topVirtualRowHeight = _ref$props19.topVirtualRowHeight,
          virtualCellsCount = _ref$props19.virtualCellsCount,
          style = _ref.style;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "table", className, (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "tbody", null, [hasTopVirtualRow && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _virtual_row__WEBPACK_IMPORTED_MODULE_5__.VirtualRow, {
          height: topVirtualRowHeight,
          cellsCount: virtualCellsCount,
          leftVirtualCellWidth: leftVirtualCellWidth,
          rightVirtualCellWidth: rightVirtualCellWidth,
          leftVirtualCellCount: leftVirtualCellCount,
          rightVirtualCellCount: rightVirtualCellCount
        }), children, hasBottomVirtualRow && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _virtual_row__WEBPACK_IMPORTED_MODULE_5__.VirtualRow, {
          height: bottomVirtualRowHeight,
          cellsCount: virtualCellsCount,
          leftVirtualCellWidth: leftVirtualCellWidth,
          rightVirtualCellWidth: rightVirtualCellWidth,
          leftVirtualCellCount: leftVirtualCellCount,
          rightVirtualCellCount: rightVirtualCellCount
        })], 0), 2, {
          style: (0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.normalizeStyles)(style)
        }, null, tableRef);
      };
      var _TableProps = {
        className: "",
        topVirtualRowHeight: 0,
        bottomVirtualRowHeight: 0,
        leftVirtualCellWidth: 0,
        rightVirtualCellWidth: 0,
        virtualCellsCount: 0
      };
      var _Table = /*#__PURE__*/function (_devextreme_runtime_i29) {
        _inherits(_Table, _devextreme_runtime_i29);
        function _Table(props) {
          var _this208;
          _classCallCheck(this, _Table);
          _this208 = _callSuper(this, _Table, [props]);
          _this208.state = {};
          _this208.elementRef = (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createRef)();
          return _this208;
        }
        _createClass(_Table, [{
          key: "style",
          get: function get() {
            var _this$props12 = this.props,
              height = _this$props12.height,
              width = _this$props12.width;
            var style = this.restAttributes.style;
            var heightAdded = (0, _utils__WEBPACK_IMPORTED_MODULE_4__.addHeightToStyle)(height, style);
            return (0, _utils__WEBPACK_IMPORTED_MODULE_4__.addWidthToStyle)(width, heightAdded);
          }
        }, {
          key: "hasTopVirtualRow",
          get: function get() {
            var topVirtualRowHeight = this.props.topVirtualRowHeight;
            return !!topVirtualRowHeight;
          }
        }, {
          key: "hasBottomVirtualRow",
          get: function get() {
            var bottomVirtualRowHeight = this.props.bottomVirtualRowHeight;
            return !!bottomVirtualRowHeight;
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction29({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props),
              elementRef: this.elementRef,
              style: this.style,
              hasTopVirtualRow: this.hasTopVirtualRow,
              hasBottomVirtualRow: this.hasBottomVirtualRow,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _Table;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _Table.defaultProps = _TableProps;

      /***/
    }),
    /***/33399: (
    /*!************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/time_panel/cell.js ***!
      \************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction30;
        },
        /* harmony export */"TimePanelCellProps": function TimePanelCellProps() {
          return /* binding */_TimePanelCellProps;
        },
        /* harmony export */"TimePanelCell": function TimePanelCell() {
          return /* binding */_TimePanelCell;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../cell */61074);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["allDay", "ariaLabel", "children", "className", "contentTemplateProps", "endDate", "groupIndex", "groups", "highlighted", "index", "isFirstGroupCell", "isLastGroupCell", "startDate", "text", "timeCellTemplate"];
      var _viewFunction30 = function _viewFunction30(_ref) {
        var _ref$props20 = _ref.props,
          className = _ref$props20.className,
          highlighted = _ref$props20.highlighted,
          isFirstGroupCell = _ref$props20.isFirstGroupCell,
          isLastGroupCell = _ref$props20.isLastGroupCell,
          text = _ref$props20.text,
          TimeCellTemplate = _ref$props20.timeCellTemplate,
          timeCellTemplateProps = _ref.timeCellTemplateProps;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_4__.CellBase, {
          isFirstGroupCell: isFirstGroupCell,
          isLastGroupCell: isLastGroupCell,
          className: "dx-scheduler-time-panel-cell dx-scheduler-cell-sizes-vertical ".concat(highlighted ? "dx-scheduler-time-panel-current-time-cell" : "", " ").concat(className),
          children: [!TimeCellTemplate && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", null, text, 0), !!TimeCellTemplate && TimeCellTemplate({
            index: timeCellTemplateProps.index,
            data: timeCellTemplateProps.data
          })]
        });
      };
      var _TimePanelCellProps = _cell__WEBPACK_IMPORTED_MODULE_4__.CellBaseProps;
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _TimePanelCell = /*#__PURE__*/function (_devextreme_runtime_i30) {
        _inherits(_TimePanelCell, _devextreme_runtime_i30);
        function _TimePanelCell(props) {
          var _this209;
          _classCallCheck(this, _TimePanelCell);
          _this209 = _callSuper(this, _TimePanelCell, [props]);
          _this209.state = {};
          _this209.__getterCache = {};
          return _this209;
        }
        _createClass(_TimePanelCell, [{
          key: "timeCellTemplateProps",
          get: function get() {
            var _this210 = this;
            if (void 0 !== this.__getterCache.timeCellTemplateProps) {
              return this.__getterCache.timeCellTemplateProps;
            }
            return this.__getterCache.timeCellTemplateProps = function () {
              var _this210$props = _this210.props,
                groupIndex = _this210$props.groupIndex,
                groups = _this210$props.groups,
                index = _this210$props.index,
                startDate = _this210$props.startDate,
                text = _this210$props.text;
              return {
                data: {
                  date: startDate,
                  groups: groups,
                  groupIndex: groupIndex,
                  text: text
                },
                index: index
              };
            }();
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "componentWillUpdate",
          value: function componentWillUpdate(nextProps, nextState, context) {
            if (this.props.groupIndex !== nextProps.groupIndex || this.props.groups !== nextProps.groups || this.props.index !== nextProps.index || this.props.startDate !== nextProps.startDate || this.props.text !== nextProps.text) {
              this.__getterCache.timeCellTemplateProps = void 0;
            }
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction30({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                timeCellTemplate: getTemplate(props.timeCellTemplate)
              }),
              timeCellTemplateProps: this.timeCellTemplateProps,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _TimePanelCell;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _TimePanelCell.defaultProps = _TimePanelCellProps;

      /***/
    }),
    /***/47756: (
    /*!****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.j.js ***!
      \****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */TimePanelTableLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../core/component_registrator */2382);
      /* harmony import */
      var _component_wrapper_scheduler_time_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../component_wrapper/scheduler/time_panel */16547);
      /* harmony import */
      var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./layout */22004);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.j.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var TimePanelTableLayout = /*#__PURE__*/function (_component_wrapper_sc5) {
        _inherits(TimePanelTableLayout, _component_wrapper_sc5);
        function TimePanelTableLayout() {
          _classCallCheck(this, TimePanelTableLayout);
          return _callSuper(this, TimePanelTableLayout, arguments);
        }
        _createClass(TimePanelTableLayout, [{
          key: "_propsInfo",
          get: function get() {
            return {
              twoWay: [],
              allowNull: [],
              elements: [],
              templates: ["timeCellTemplate"],
              props: ["groupOrientation", "timePanelData", "timeCellTemplate"]
            };
          }
        }, {
          key: "_viewComponent",
          get: function get() {
            return _layout__WEBPACK_IMPORTED_MODULE_2__.TimePanelTableLayout;
          }
        }]);
        return TimePanelTableLayout;
      }(_component_wrapper_scheduler_time_panel__WEBPACK_IMPORTED_MODULE_1__.TimePanel);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxTimePanelTableLayout", TimePanelTableLayout);

      /***/
    }),
    /***/22004: (
    /*!**************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js ***!
      \**************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction31;
        },
        /* harmony export */"TimePanelLayoutProps": function TimePanelLayoutProps() {
          return /* binding */_TimePanelLayoutProps;
        },
        /* harmony export */"TimePanelTableLayout": function TimePanelTableLayout() {
          return /* binding */_TimePanelTableLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../row */50642);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./cell */33399);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../cell */61074);
      /* harmony import */
      var _table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../table */35686);
      /* harmony import */
      var _date_table_all_day_panel_title__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../date_table/all_day_panel/title */15905);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["groupOrientation", "tableRef", "timeCellTemplate", "timePanelData"];
      var _viewFunction31 = function _viewFunction31(_ref) {
        var bottomVirtualRowHeight = _ref.bottomVirtualRowHeight,
          _ref$props21 = _ref.props,
          tableRef = _ref$props21.tableRef,
          timeCellTemplate = _ref$props21.timeCellTemplate,
          timePanelData = _ref$props21.timePanelData,
          restAttributes = _ref.restAttributes,
          topVirtualRowHeight = _ref.topVirtualRowHeight;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _table__WEBPACK_IMPORTED_MODULE_7__.Table, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, restAttributes, {
          topVirtualRowHeight: topVirtualRowHeight,
          bottomVirtualRowHeight: bottomVirtualRowHeight,
          virtualCellsCount: 1,
          className: "dx-scheduler-time-panel",
          tableRef: tableRef,
          children: timePanelData.groupedData.map(function (_ref2) {
            var dateTable = _ref2.dateTable,
              groupIndex = _ref2.groupIndex,
              isGroupedAllDayPanel = _ref2.isGroupedAllDayPanel,
              fragmentKey = _ref2.key;
            return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)([isGroupedAllDayPanel && (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
              children: (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_6__.CellBase, {
                className: "dx-scheduler-time-panel-title-cell",
                children: (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _date_table_all_day_panel_title__WEBPACK_IMPORTED_MODULE_8__.AllDayPanelTitle)
              })
            }), dateTable.map(function (cell) {
              var groups = cell.groups,
                highlighted = cell.highlighted,
                cellIndex = cell.index,
                isFirstGroupCell = cell.isFirstGroupCell,
                isLastGroupCell = cell.isLastGroupCell,
                key = cell.key,
                startDate = cell.startDate,
                text = cell.text;
              return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_4__.Row, {
                className: "dx-scheduler-time-panel-row",
                children: (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _cell__WEBPACK_IMPORTED_MODULE_5__.TimePanelCell, {
                  startDate: startDate,
                  text: text,
                  groups: groups,
                  groupIndex: groupIndex,
                  isFirstGroupCell: isFirstGroupCell,
                  isLastGroupCell: isLastGroupCell,
                  index: cellIndex,
                  timeCellTemplate: timeCellTemplate,
                  highlighted: highlighted
                })
              }, key);
            })], 0, fragmentKey);
          })
        })));
      };
      var _TimePanelLayoutProps = {
        timePanelData: Object.freeze({
          groupedData: [],
          leftVirtualCellCount: 0,
          rightVirtualCellCount: 0,
          topVirtualRowCount: 0,
          bottomVirtualRowCount: 0
        })
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _TimePanelTableLayout = /*#__PURE__*/function (_devextreme_runtime_i31) {
        _inherits(_TimePanelTableLayout, _devextreme_runtime_i31);
        function _TimePanelTableLayout(props) {
          var _this211;
          _classCallCheck(this, _TimePanelTableLayout);
          _this211 = _callSuper(this, _TimePanelTableLayout, [props]);
          _this211.state = {};
          return _this211;
        }
        _createClass(_TimePanelTableLayout, [{
          key: "createEffects",
          value: function createEffects() {
            return [(0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()];
          }
        }, {
          key: "topVirtualRowHeight",
          get: function get() {
            var _this$props$timePanel;
            return null !== (_this$props$timePanel = this.props.timePanelData.topVirtualRowHeight) && void 0 !== _this$props$timePanel ? _this$props$timePanel : 0;
          }
        }, {
          key: "bottomVirtualRowHeight",
          get: function get() {
            var _this$props$timePanel2;
            return null !== (_this$props$timePanel2 = this.props.timePanelData.bottomVirtualRowHeight) && void 0 !== _this$props$timePanel2 ? _this$props$timePanel2 : 0;
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction31({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                timeCellTemplate: getTemplate(props.timeCellTemplate)
              }),
              topVirtualRowHeight: this.topVirtualRowHeight,
              bottomVirtualRowHeight: this.bottomVirtualRowHeight,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _TimePanelTableLayout;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent);
      _TimePanelTableLayout.defaultProps = _TimePanelLayoutProps;

      /***/
    }),
    /***/65866: (
    /*!**************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/utils.js ***!
      \**************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"DATE_TABLE_MIN_CELL_WIDTH": function DATE_TABLE_MIN_CELL_WIDTH() {
          return /* binding */_DATE_TABLE_MIN_CELL_WIDTH;
        },
        /* harmony export */"getTotalRowCount": function getTotalRowCount() {
          return /* binding */_getTotalRowCount2;
        },
        /* harmony export */"getTotalCellCount": function getTotalCellCount() {
          return /* binding */_getTotalCellCount2;
        },
        /* harmony export */"getRowCountWithAllDayRow": function getRowCountWithAllDayRow() {
          return /* binding */_getRowCountWithAllDayRow;
        },
        /* harmony export */"getHiddenInterval": function getHiddenInterval() {
          return /* binding */_getHiddenInterval;
        },
        /* harmony export */"createCellElementMetaData": function createCellElementMetaData() {
          return /* binding */_createCellElementMetaData;
        },
        /* harmony export */"getDateForHeaderText": function getDateForHeaderText() {
          return /* binding */_getDateForHeaderText2;
        },
        /* harmony export */"getDateTableWidth": function getDateTableWidth() {
          return /* binding */_getDateTableWidth;
        },
        /* harmony export */"createVirtualScrollingOptions": function createVirtualScrollingOptions() {
          return /* binding */_createVirtualScrollingOptions;
        },
        /* harmony export */"getCellIndices": function getCellIndices() {
          return /* binding */_getCellIndices;
        },
        /* harmony export */"compareCellsByDateAndIndex": function compareCellsByDateAndIndex() {
          return /* binding */_compareCellsByDateAndIndex;
        },
        /* harmony export */"getSelectedCells": function getSelectedCells() {
          return /* binding */_getSelectedCells;
        },
        /* harmony export */"isCellAllDay": function isCellAllDay() {
          return /* binding */_isCellAllDay;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../core/utils/date */35341);
      /* harmony import */
      var _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../__internal/scheduler/resources/m_utils */48025);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../utils */59016);
      /* harmony import */
      var _const__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../const */25222);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DAY_MS = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds("day");
      var HOUR_MS = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].dateToMilliseconds("hour");
      var _DATE_TABLE_MIN_CELL_WIDTH = 75;
      var _getTotalRowCount2 = function _getTotalRowCount2(rowCount, groupOrientation, groups, isAllDayPanelVisible) {
        var isVerticalGrouping = (0, _utils__WEBPACK_IMPORTED_MODULE_2__.isVerticalGroupingApplied)(groups, groupOrientation);
        var groupCount = (0, _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__.getGroupCount)(groups);
        var totalRowCount = isVerticalGrouping ? rowCount * groupCount : rowCount;
        return isAllDayPanelVisible ? totalRowCount + groupCount : totalRowCount;
      };
      var _getTotalCellCount2 = function _getTotalCellCount2(cellCount, groupOrientation, groups) {
        var isHorizontalGrouping = (0, _utils__WEBPACK_IMPORTED_MODULE_2__.isHorizontalGroupingApplied)(groups, groupOrientation);
        var groupCount = (0, _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__.getGroupCount)(groups);
        return isHorizontalGrouping ? cellCount * groupCount : cellCount;
      };
      var _getRowCountWithAllDayRow = function _getRowCountWithAllDayRow(rowCount, isAllDayPanelVisible) {
        return isAllDayPanelVisible ? rowCount + 1 : rowCount;
      };
      var _getHiddenInterval = function _getHiddenInterval(hoursInterval, cellCountInDay) {
        var visibleInterval = hoursInterval * cellCountInDay * HOUR_MS;
        return DAY_MS - visibleInterval;
      };
      var _createCellElementMetaData = function _createCellElementMetaData(tableRect, cellRect) {
        var bottom = cellRect.bottom,
          height = cellRect.height,
          left = cellRect.left,
          right = cellRect.right,
          top = cellRect.top,
          width = cellRect.width,
          x = cellRect.x,
          y = cellRect.y;
        return {
          right: right,
          bottom: bottom,
          left: left - tableRect.left,
          top: top - tableRect.top,
          width: width,
          height: height,
          x: x,
          y: y
        };
      };
      var _getDateForHeaderText2 = function _getDateForHeaderText2(_, date) {
        return date;
      };
      var _getDateTableWidth = function _getDateTableWidth(scrollableWidth, dateTable, viewDataProvider, workSpaceConfig) {
        var dateTableCell = dateTable.querySelector("td:not(.dx-scheduler-virtual-cell)");
        var cellWidth = dateTableCell.getBoundingClientRect().width;
        if (cellWidth < _DATE_TABLE_MIN_CELL_WIDTH) {
          cellWidth = _DATE_TABLE_MIN_CELL_WIDTH;
        }
        var cellCount = viewDataProvider.getCellCount(workSpaceConfig);
        var totalCellCount = _getTotalCellCount2(cellCount, workSpaceConfig.groupOrientation, workSpaceConfig.groups);
        var minTablesWidth = totalCellCount * cellWidth;
        return scrollableWidth < minTablesWidth ? minTablesWidth : scrollableWidth;
      };
      var _createVirtualScrollingOptions = function _createVirtualScrollingOptions(options) {
        return {
          getCellHeight: function getCellHeight() {
            return options.cellHeight;
          },
          getCellWidth: function getCellWidth() {
            return options.cellWidth;
          },
          getCellMinWidth: function getCellMinWidth() {
            return _DATE_TABLE_MIN_CELL_WIDTH;
          },
          isRTL: function isRTL() {
            return options.rtlEnabled;
          },
          getSchedulerHeight: function getSchedulerHeight() {
            return options.schedulerHeight;
          },
          getSchedulerWidth: function getSchedulerWidth() {
            return options.schedulerWidth;
          },
          getViewHeight: function getViewHeight() {
            return options.viewHeight;
          },
          getViewWidth: function getViewWidth() {
            return options.viewWidth;
          },
          getScrolling: function getScrolling() {
            return options.scrolling;
          },
          getScrollableOuterWidth: function getScrollableOuterWidth() {
            return options.scrollableWidth;
          },
          getGroupCount: function getGroupCount() {
            return (0, _internal_scheduler_resources_m_utils__WEBPACK_IMPORTED_MODULE_1__.getGroupCount)(options.groups);
          },
          isVerticalGrouping: function isVerticalGrouping() {
            return options.isVerticalGrouping;
          },
          getTotalRowCount: function getTotalRowCount() {
            return options.completeRowCount;
          },
          getTotalCellCount: function getTotalCellCount() {
            return options.completeColumnCount;
          },
          getWindowHeight: function getWindowHeight() {
            return options.windowHeight;
          },
          getWindowWidth: function getWindowWidth() {
            return options.windowWidth;
          }
        };
      };
      var _getCellIndices = function _getCellIndices(cell) {
        var row = cell.closest(".".concat(_const__WEBPACK_IMPORTED_MODULE_3__.DATE_TABLE_ROW_CLASS, ", .").concat(_const__WEBPACK_IMPORTED_MODULE_3__.ALL_DAY_ROW_CLASS));
        var rowParent = row.parentNode;
        var cellParent = cell.parentNode;
        var columnIndex = _toConsumableArray(Array.from(cellParent.children)).filter(function (child) {
          return child.className.includes(_const__WEBPACK_IMPORTED_MODULE_3__.DATE_TABLE_CELL_CLASS) || child.className.includes(_const__WEBPACK_IMPORTED_MODULE_3__.ALL_DAY_PANEL_CELL_CLASS);
        }).indexOf(cell);
        var rowIndex = _toConsumableArray(Array.from(rowParent.children)).filter(function (child) {
          return child.className.includes(_const__WEBPACK_IMPORTED_MODULE_3__.DATE_TABLE_ROW_CLASS);
        }).indexOf(row);
        return {
          columnIndex: columnIndex,
          rowIndex: rowIndex
        };
      };
      var _compareCellsByDateAndIndex = function _compareCellsByDateAndIndex(daysAndIndexes) {
        var date = daysAndIndexes.date,
          firstDate = daysAndIndexes.firstDate,
          firstIndex = daysAndIndexes.firstIndex,
          index = daysAndIndexes.index,
          lastDate = daysAndIndexes.lastDate,
          lastIndex = daysAndIndexes.lastIndex;
        if (firstDate === lastDate) {
          var validFirstIndex = firstIndex;
          var validLastIndex = lastIndex;
          if (validFirstIndex > validLastIndex) {
            var _ref24 = [validLastIndex, validFirstIndex];
            validFirstIndex = _ref24[0];
            validLastIndex = _ref24[1];
          }
          return firstDate === date && index >= validFirstIndex && index <= validLastIndex;
        }
        return date === firstDate && index >= firstIndex || date === lastDate && index <= lastIndex || firstDate < date && date < lastDate;
      };
      var filterCellsByDateAndIndex = function filterCellsByDateAndIndex(cellsRow, filterData) {
        var firstDate = filterData.firstDate,
          firstIndex = filterData.firstIndex,
          lastDate = filterData.lastDate,
          lastIndex = filterData.lastIndex;
        var firstDay = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(firstDate).getTime();
        var lastDay = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(lastDate).getTime();
        return cellsRow.filter(function (cell) {
          var index = cell.index,
            startDate = cell.startDate;
          var day = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__["default"].trimTime(startDate).getTime();
          var daysAndIndexes = {
            date: day,
            index: index,
            firstDate: firstDay,
            firstIndex: firstIndex,
            lastDate: lastDay,
            lastIndex: lastIndex
          };
          return _compareCellsByDateAndIndex(daysAndIndexes);
        });
      };
      var _getSelectedCells = function _getSelectedCells(viewDataProvider, firstSelectedCell, lastSelectedCell, isLastSelectedCellAllDay) {
        var firstCell = firstSelectedCell;
        var lastCell = lastSelectedCell;
        if (firstCell.startDate.getTime() > lastCell.startDate.getTime()) {
          var _ref25 = [lastCell, firstCell];
          firstCell = _ref25[0];
          lastCell = _ref25[1];
        }
        var _firstCell = firstCell,
          firstGroupIndex = _firstCell.groupIndex,
          firstCellIndex = _firstCell.index,
          firstStartDate = _firstCell.startDate;
        var _lastCell = lastCell,
          lastCellIndex = _lastCell.index,
          lastStartDate = _lastCell.startDate;
        var cells = viewDataProvider.getCellsByGroupIndexAndAllDay(null !== firstGroupIndex && void 0 !== firstGroupIndex ? firstGroupIndex : 0, isLastSelectedCellAllDay);
        var filteredCells = cells.reduce(function (selectedCells, cellsRow) {
          var filterData = {
            firstDate: firstStartDate,
            lastDate: lastStartDate,
            firstIndex: firstCellIndex,
            lastIndex: lastCellIndex
          };
          var filteredRow = filterCellsByDateAndIndex(cellsRow, filterData);
          selectedCells.push.apply(selectedCells, _toConsumableArray(filteredRow));
          return selectedCells;
        }, []);
        var selectedCells = filteredCells.sort(function (firstArg, secondArg) {
          return firstArg.startDate.getTime() - secondArg.startDate.getTime();
        });
        return selectedCells;
      };
      var _isCellAllDay = function _isCellAllDay(cell) {
        return cell.className.includes(_const__WEBPACK_IMPORTED_MODULE_3__.ALL_DAY_PANEL_CELL_CLASS);
      };

      /***/
    }),
    /***/69850: (
    /*!*********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/virtual_cell.js ***!
      \*********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction32;
        },
        /* harmony export */"VirtualCellProps": function VirtualCellProps() {
          return /* binding */_VirtualCellProps;
        },
        /* harmony export */"VirtualCell": function VirtualCell() {
          return /* binding */_VirtualCell;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../utils */59016);
      /* harmony import */
      var _header_cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./header_cell */92007);
      /* harmony import */
      var _ordinary_cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./ordinary_cell */35545);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/virtual_cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["colSpan", "isHeaderCell", "width"];
      var _viewFunction32 = function _viewFunction32(_ref) {
        var _ref$props22 = _ref.props,
          colSpan = _ref$props22.colSpan,
          isHeaderCell = _ref$props22.isHeaderCell,
          style = _ref.style;
        var Cell = isHeaderCell ? _header_cell__WEBPACK_IMPORTED_MODULE_5__.HeaderCell : _ordinary_cell__WEBPACK_IMPORTED_MODULE_6__.OrdinaryCell;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, Cell, {
          className: "dx-scheduler-virtual-cell",
          styles: style,
          colSpan: colSpan
        });
      };
      var _VirtualCellProps = {
        width: 0,
        isHeaderCell: false
      };
      var _VirtualCell = /*#__PURE__*/function (_devextreme_runtime_i32) {
        _inherits(_VirtualCell, _devextreme_runtime_i32);
        function _VirtualCell(props) {
          var _this212;
          _classCallCheck(this, _VirtualCell);
          _this212 = _callSuper(this, _VirtualCell, [props]);
          _this212.state = {};
          return _this212;
        }
        _createClass(_VirtualCell, [{
          key: "style",
          get: function get() {
            var width = this.props.width;
            var style = this.restAttributes.style;
            return (0, _utils__WEBPACK_IMPORTED_MODULE_4__.addWidthToStyle)(width, style);
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction32({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props),
              style: this.style,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _VirtualCell;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _VirtualCell.defaultProps = _VirtualCellProps;

      /***/
    }),
    /***/3211: (
    /*!********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/virtual_row.js ***!
      \********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction33;
        },
        /* harmony export */"VirtualRowProps": function VirtualRowProps() {
          return /* binding */_VirtualRowProps;
        },
        /* harmony export */"VirtualRow": function VirtualRow() {
          return /* binding */_VirtualRow;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../utils */59016);
      /* harmony import */
      var _row__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./row */50642);
      /* harmony import */
      var _virtual_cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./virtual_cell */69850);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/virtual_row.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["cellsCount", "children", "className", "height", "isHeaderRow", "leftVirtualCellCount", "leftVirtualCellWidth", "rightVirtualCellCount", "rightVirtualCellWidth", "styles"];
      var _viewFunction33 = function _viewFunction33(_ref) {
        var classes = _ref.classes,
          _ref$props23 = _ref.props,
          leftVirtualCellCount = _ref$props23.leftVirtualCellCount,
          leftVirtualCellWidth = _ref$props23.leftVirtualCellWidth,
          rightVirtualCellCount = _ref$props23.rightVirtualCellCount,
          rightVirtualCellWidth = _ref$props23.rightVirtualCellWidth,
          style = _ref.style,
          virtualCells = _ref.virtualCells;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _row__WEBPACK_IMPORTED_MODULE_5__.Row, {
          styles: style,
          className: classes,
          leftVirtualCellWidth: leftVirtualCellWidth,
          rightVirtualCellWidth: rightVirtualCellWidth,
          leftVirtualCellCount: leftVirtualCellCount,
          rightVirtualCellCount: rightVirtualCellCount,
          children: virtualCells.map(function (_, index) {
            return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _virtual_cell__WEBPACK_IMPORTED_MODULE_6__.VirtualCell, null, index.toString());
          })
        });
      };
      var _VirtualRowProps = Object.create(Object.prototype, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyDescriptors(_row__WEBPACK_IMPORTED_MODULE_5__.RowProps), Object.getOwnPropertyDescriptors({
        leftVirtualCellWidth: 0,
        rightVirtualCellWidth: 0,
        cellsCount: 1
      })));
      var _VirtualRow = /*#__PURE__*/function (_devextreme_runtime_i33) {
        _inherits(_VirtualRow, _devextreme_runtime_i33);
        function _VirtualRow(props) {
          var _this213;
          _classCallCheck(this, _VirtualRow);
          _this213 = _callSuper(this, _VirtualRow, [props]);
          _this213.state = {};
          _this213.__getterCache = {};
          return _this213;
        }
        _createClass(_VirtualRow, [{
          key: "style",
          get: function get() {
            var height = this.props.height;
            var style = this.restAttributes.style;
            return (0, _utils__WEBPACK_IMPORTED_MODULE_4__.addHeightToStyle)(height, style);
          }
        }, {
          key: "classes",
          get: function get() {
            var className = this.props.className;
            return "dx-scheduler-virtual-row ".concat(className);
          }
        }, {
          key: "virtualCells",
          get: function get() {
            var _this214 = this;
            if (void 0 !== this.__getterCache.virtualCells) {
              return this.__getterCache.virtualCells;
            }
            return this.__getterCache.virtualCells = function () {
              var cellsCount = _this214.props.cellsCount;
              return _toConsumableArray(Array(cellsCount));
            }();
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "componentWillUpdate",
          value: function componentWillUpdate(nextProps, nextState, context) {
            if (this.props.cellsCount !== nextProps.cellsCount) {
              this.__getterCache.virtualCells = void 0;
            }
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction33({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props),
              style: this.style,
              classes: this.classes,
              virtualCells: this.virtualCells,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _VirtualRow;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _VirtualRow.defaultProps = _VirtualRowProps;

      /***/
    }),
    /***/25222: (
    /*!*********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/const.js ***!
      \*********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"DefaultSizes": function DefaultSizes() {
          return /* binding */_DefaultSizes;
        },
        /* harmony export */"DATE_TABLE_CELL_CLASS": function DATE_TABLE_CELL_CLASS() {
          return /* binding */_DATE_TABLE_CELL_CLASS;
        },
        /* harmony export */"ALL_DAY_PANEL_CELL_CLASS": function ALL_DAY_PANEL_CELL_CLASS() {
          return /* binding */_ALL_DAY_PANEL_CELL_CLASS;
        },
        /* harmony export */"DATE_TABLE_ROW_CLASS": function DATE_TABLE_ROW_CLASS() {
          return /* binding */_DATE_TABLE_ROW_CLASS2;
        },
        /* harmony export */"ALL_DAY_ROW_CLASS": function ALL_DAY_ROW_CLASS() {
          return /* binding */_ALL_DAY_ROW_CLASS;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/const.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _DefaultSizes = {
        allDayPanelHeight: 25
      };
      var _DATE_TABLE_CELL_CLASS = "dx-scheduler-date-table-cell";
      var _ALL_DAY_PANEL_CELL_CLASS = "dx-scheduler-all-day-table-cell";
      var _DATE_TABLE_ROW_CLASS2 = "dx-scheduler-date-table-row";
      var _ALL_DAY_ROW_CLASS = "dx-scheduler-all-day-table-row";

      /***/
    }),
    /***/69077: (
    /*!*************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/month/date_table/cell.js ***!
      \*************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction34;
        },
        /* harmony export */"MonthDateTableCell": function MonthDateTableCell() {
          return /* binding */_MonthDateTableCell;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../../../utils/combine_classes */33582);
      /* harmony import */
      var _base_date_table_cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../base/date_table/cell */50995);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/month/date_table/cell.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["allDay", "ariaLabel", "children", "className", "contentTemplateProps", "dataCellTemplate", "endDate", "firstDayOfMonth", "groupIndex", "groups", "index", "isFirstGroupCell", "isFocused", "isLastGroupCell", "isSelected", "otherMonth", "startDate", "text", "today"];
      var _viewFunction34 = function _viewFunction34(_ref) {
        var classes = _ref.classes,
          contentTemplateProps = _ref.contentTemplateProps,
          _ref$props24 = _ref.props,
          dataCellTemplate = _ref$props24.dataCellTemplate,
          endDate = _ref$props24.endDate,
          groupIndex = _ref$props24.groupIndex,
          groups = _ref$props24.groups,
          index = _ref$props24.index,
          isFirstGroupCell = _ref$props24.isFirstGroupCell,
          isFocused = _ref$props24.isFocused,
          isLastGroupCell = _ref$props24.isLastGroupCell,
          isSelected = _ref$props24.isSelected,
          startDate = _ref$props24.startDate,
          text = _ref$props24.text;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _base_date_table_cell__WEBPACK_IMPORTED_MODULE_5__.DateTableCellBase, {
          className: classes,
          dataCellTemplate: dataCellTemplate,
          startDate: startDate,
          endDate: endDate,
          text: text,
          groups: groups,
          groupIndex: groupIndex,
          index: index,
          isFirstGroupCell: isFirstGroupCell,
          isLastGroupCell: isLastGroupCell,
          isSelected: isSelected,
          isFocused: isFocused,
          contentTemplateProps: contentTemplateProps,
          children: (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createVNode)(1, "div", "dx-scheduler-date-table-cell-text", text, 0)
        });
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _MonthDateTableCell = /*#__PURE__*/function (_devextreme_runtime_i34) {
        _inherits(_MonthDateTableCell, _devextreme_runtime_i34);
        function _MonthDateTableCell(props) {
          var _this215;
          _classCallCheck(this, _MonthDateTableCell);
          _this215 = _callSuper(this, _MonthDateTableCell, [props]);
          _this215.state = {};
          _this215.__getterCache = {};
          return _this215;
        }
        _createClass(_MonthDateTableCell, [{
          key: "classes",
          get: function get() {
            var _this$props13 = this.props,
              className = _this$props13.className,
              firstDayOfMonth = _this$props13.firstDayOfMonth,
              otherMonth = _this$props13.otherMonth,
              today = _this$props13.today;
            return (0, _utils_combine_classes__WEBPACK_IMPORTED_MODULE_4__.combineClasses)(_defineProperty({
              "dx-scheduler-date-table-other-month": !!otherMonth,
              "dx-scheduler-date-table-current-date": !!today,
              "dx-scheduler-date-table-first-of-month": !!firstDayOfMonth
            }, className, !!className));
          }
        }, {
          key: "contentTemplateProps",
          get: function get() {
            var _this216 = this;
            if (void 0 !== this.__getterCache.contentTemplateProps) {
              return this.__getterCache.contentTemplateProps;
            }
            return this.__getterCache.contentTemplateProps = function () {
              var _this216$props = _this216.props,
                index = _this216$props.index,
                text = _this216$props.text;
              return {
                data: {
                  text: text
                },
                index: index
              };
            }();
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "componentWillUpdate",
          value: function componentWillUpdate(nextProps, nextState, context) {
            if (this.props.index !== nextProps.index || this.props.text !== nextProps.text) {
              this.__getterCache.contentTemplateProps = void 0;
            }
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction34({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                dataCellTemplate: getTemplate(props.dataCellTemplate)
              }),
              classes: this.classes,
              contentTemplateProps: this.contentTemplateProps,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _MonthDateTableCell;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _MonthDateTableCell.defaultProps = _base_date_table_cell__WEBPACK_IMPORTED_MODULE_5__.DateTableCellBaseProps;

      /***/
    }),
    /***/93335: (
    /*!*****************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/month/date_table/layout.j.js ***!
      \*****************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */MonthDateTableLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../core/component_registrator */2382);
      /* harmony import */
      var _component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../component_wrapper/scheduler/date_table */5733);
      /* harmony import */
      var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./layout */94701);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/month/date_table/layout.j.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var MonthDateTableLayout = /*#__PURE__*/function (_component_wrapper_sc6) {
        _inherits(MonthDateTableLayout, _component_wrapper_sc6);
        function MonthDateTableLayout() {
          _classCallCheck(this, MonthDateTableLayout);
          return _callSuper(this, MonthDateTableLayout, arguments);
        }
        _createClass(MonthDateTableLayout, [{
          key: "_propsInfo",
          get: function get() {
            return {
              twoWay: [],
              allowNull: [],
              elements: [],
              templates: ["cellTemplate", "dataCellTemplate"],
              props: ["cellTemplate", "viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width", "dataCellTemplate"]
            };
          }
        }, {
          key: "_viewComponent",
          get: function get() {
            return _layout__WEBPACK_IMPORTED_MODULE_2__.MonthDateTableLayout;
          }
        }]);
        return MonthDateTableLayout;
      }(_component_wrapper_scheduler_date_table__WEBPACK_IMPORTED_MODULE_1__.DateTable);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxMonthDateTableLayout", MonthDateTableLayout);

      /***/
    }),
    /***/94701: (
    /*!***************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/month/date_table/layout.js ***!
      \***************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction35;
        },
        /* harmony export */"MonthDateTableLayout": function MonthDateTableLayout() {
          return /* binding */_MonthDateTableLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _base_date_table_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../base/date_table/layout */96471);
      /* harmony import */
      var _cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./cell */69077);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/month/date_table/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["addDateTableClass", "addVerticalSizesClassToRows", "bottomVirtualRowHeight", "cellTemplate", "dataCellTemplate", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "tableRef", "topVirtualRowHeight", "viewData", "width"];
      var _viewFunction35 = function _viewFunction35(_ref) {
        var _ref$props25 = _ref.props,
          addDateTableClass = _ref$props25.addDateTableClass,
          addVerticalSizesClassToRows = _ref$props25.addVerticalSizesClassToRows,
          dataCellTemplate = _ref$props25.dataCellTemplate,
          groupOrientation = _ref$props25.groupOrientation,
          tableRef = _ref$props25.tableRef,
          viewData = _ref$props25.viewData,
          width = _ref$props25.width,
          restAttributes = _ref.restAttributes;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _base_date_table_layout__WEBPACK_IMPORTED_MODULE_4__.DateTableLayoutBase, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
          viewData: viewData,
          groupOrientation: groupOrientation,
          addDateTableClass: addDateTableClass,
          dataCellTemplate: dataCellTemplate,
          cellTemplate: _cell__WEBPACK_IMPORTED_MODULE_5__.MonthDateTableCell,
          tableRef: tableRef,
          addVerticalSizesClassToRows: addVerticalSizesClassToRows,
          width: width
        }, restAttributes)));
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _MonthDateTableLayout = /*#__PURE__*/function (_devextreme_runtime_i35) {
        _inherits(_MonthDateTableLayout, _devextreme_runtime_i35);
        function _MonthDateTableLayout(props) {
          var _this217;
          _classCallCheck(this, _MonthDateTableLayout);
          _this217 = _callSuper(this, _MonthDateTableLayout, [props]);
          _this217.state = {};
          return _this217;
        }
        _createClass(_MonthDateTableLayout, [{
          key: "createEffects",
          value: function createEffects() {
            return [(0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()];
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction35({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                cellTemplate: getTemplate(props.cellTemplate),
                dataCellTemplate: getTemplate(props.dataCellTemplate)
              }),
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _MonthDateTableLayout;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent);
      _MonthDateTableLayout.defaultProps = _base_date_table_layout__WEBPACK_IMPORTED_MODULE_4__.DateTableLayoutProps;

      /***/
    }),
    /***/94576: (
    /*!********************************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/timeline/header_panel/date_header/layout.js ***!
      \********************************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction36;
        },
        /* harmony export */"TimelineDateHeaderLayout": function TimelineDateHeaderLayout() {
          return /* binding */_TimelineDateHeaderLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _base_row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../base/row */50642);
      /* harmony import */
      var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../utils */59016);
      /* harmony import */
      var _base_header_panel_date_header_cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../base/header_panel/date_header/cell */4905);
      /* harmony import */
      var _base_header_panel_date_header_layout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../../base/header_panel/date_header/layout */20046);
      /* harmony import */
      var _utils_getThemeType__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../../../../utils/getThemeType */82919);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/timeline/header_panel/date_header/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["dateCellTemplate", "dateHeaderData", "groupByDate", "groupOrientation", "groups", "timeCellTemplate"];
      var _ref27 = (0, _utils_getThemeType__WEBPACK_IMPORTED_MODULE_8__["default"])(),
        isMaterial = _ref27.isMaterial;
      var _viewFunction36 = function _viewFunction36(_ref) {
        var isHorizontalGrouping = _ref.isHorizontalGrouping,
          _ref$props26 = _ref.props,
          dateCellTemplate = _ref$props26.dateCellTemplate,
          dateHeaderData = _ref$props26.dateHeaderData,
          timeCellTemplate = _ref$props26.timeCellTemplate;
        var dataMap = dateHeaderData.dataMap,
          isMonthDateHeader = dateHeaderData.isMonthDateHeader,
          leftVirtualCellCount = dateHeaderData.leftVirtualCellCount,
          leftVirtualCellWidth = dateHeaderData.leftVirtualCellWidth,
          rightVirtualCellCount = dateHeaderData.rightVirtualCellCount,
          rightVirtualCellWidth = dateHeaderData.rightVirtualCellWidth,
          weekDayLeftVirtualCellCount = dateHeaderData.weekDayLeftVirtualCellCount,
          weekDayLeftVirtualCellWidth = dateHeaderData.weekDayLeftVirtualCellWidth,
          weekDayRightVirtualCellCount = dateHeaderData.weekDayRightVirtualCellCount,
          weekDayRightVirtualCellWidth = dateHeaderData.weekDayRightVirtualCellWidth;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createFragment)(dataMap.map(function (dateHeaderRow, rowIndex) {
          var rowsCount = dataMap.length;
          var isTimeCellTemplate = rowsCount - 1 === rowIndex;
          var isWeekDayRow = rowsCount > 1 && 0 === rowIndex;
          var splitText = isMaterial && (isMonthDateHeader || isWeekDayRow);
          var validLeftVirtualCellCount = leftVirtualCellCount;
          var validRightVirtualCellCount = rightVirtualCellCount;
          var validRightVirtualCellWidth = rightVirtualCellWidth;
          var validLeftVirtualCellWidth = leftVirtualCellWidth;
          if (isWeekDayRow) {
            validLeftVirtualCellCount = weekDayLeftVirtualCellCount;
            validRightVirtualCellCount = weekDayRightVirtualCellCount;
            validRightVirtualCellWidth = weekDayRightVirtualCellWidth;
            validLeftVirtualCellWidth = weekDayLeftVirtualCellWidth;
          }
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _base_row__WEBPACK_IMPORTED_MODULE_4__.Row, {
            className: "dx-scheduler-header-row",
            leftVirtualCellWidth: validLeftVirtualCellWidth,
            leftVirtualCellCount: validLeftVirtualCellCount,
            rightVirtualCellWidth: validRightVirtualCellWidth,
            rightVirtualCellCount: validRightVirtualCellCount,
            children: dateHeaderRow.map(function (_ref2) {
              var colSpan = _ref2.colSpan,
                endDate = _ref2.endDate,
                groupIndex = _ref2.groupIndex,
                cellGroups = _ref2.groups,
                index = _ref2.index,
                isFirstGroupCell = _ref2.isFirstGroupCell,
                isLastGroupCell = _ref2.isLastGroupCell,
                key = _ref2.key,
                startDate = _ref2.startDate,
                text = _ref2.text,
                today = _ref2.today;
              return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _base_header_panel_date_header_cell__WEBPACK_IMPORTED_MODULE_6__.DateHeaderCell, {
                startDate: startDate,
                endDate: endDate,
                groups: isHorizontalGrouping ? cellGroups : void 0,
                groupIndex: isHorizontalGrouping ? groupIndex : void 0,
                today: today,
                index: index,
                text: text,
                isFirstGroupCell: isFirstGroupCell,
                isLastGroupCell: isLastGroupCell,
                isWeekDayCell: isWeekDayRow,
                colSpan: colSpan,
                splitText: splitText,
                dateCellTemplate: dateCellTemplate,
                timeCellTemplate: timeCellTemplate,
                isTimeCellTemplate: isTimeCellTemplate
              }, key);
            })
          }, rowIndex.toString());
        }), 0);
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _TimelineDateHeaderLayout = /*#__PURE__*/function (_devextreme_runtime_i36) {
        _inherits(_TimelineDateHeaderLayout, _devextreme_runtime_i36);
        function _TimelineDateHeaderLayout(props) {
          var _this218;
          _classCallCheck(this, _TimelineDateHeaderLayout);
          _this218 = _callSuper(this, _TimelineDateHeaderLayout, [props]);
          _this218.state = {};
          return _this218;
        }
        _createClass(_TimelineDateHeaderLayout, [{
          key: "isHorizontalGrouping",
          get: function get() {
            var _this$props14 = this.props,
              groupByDate = _this$props14.groupByDate,
              groupOrientation = _this$props14.groupOrientation,
              groups = _this$props14.groups;
            return (0, _utils__WEBPACK_IMPORTED_MODULE_5__.isHorizontalGroupingApplied)(groups, groupOrientation) && !groupByDate;
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction36({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                dateCellTemplate: getTemplate(props.dateCellTemplate),
                timeCellTemplate: getTemplate(props.timeCellTemplate)
              }),
              isHorizontalGrouping: this.isHorizontalGrouping,
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _TimelineDateHeaderLayout;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.BaseInfernoComponent);
      _TimelineDateHeaderLayout.defaultProps = _base_header_panel_date_header_layout__WEBPACK_IMPORTED_MODULE_7__.DateHeaderLayoutProps;

      /***/
    }),
    /***/10889: (
    /*!**********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/timeline/header_panel/layout.j.js ***!
      \**********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */TimelineHeaderPanelLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../../../../core/component_registrator */2382);
      /* harmony import */
      var _component_wrapper_scheduler_header_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../../../component_wrapper/scheduler/header_panel */72902);
      /* harmony import */
      var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./layout */32154);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/timeline/header_panel/layout.j.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var TimelineHeaderPanelLayout = /*#__PURE__*/function (_component_wrapper_sc7) {
        _inherits(TimelineHeaderPanelLayout, _component_wrapper_sc7);
        function TimelineHeaderPanelLayout() {
          _classCallCheck(this, TimelineHeaderPanelLayout);
          return _callSuper(this, TimelineHeaderPanelLayout, arguments);
        }
        _createClass(TimelineHeaderPanelLayout, [{
          key: "_propsInfo",
          get: function get() {
            return {
              twoWay: [],
              allowNull: [],
              elements: [],
              templates: ["dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "resourceCellTemplate"],
              props: ["dateHeaderData", "isRenderDateHeader", "dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "groups", "groupOrientation", "groupPanelData", "groupByDate", "height", "className", "resourceCellTemplate"]
            };
          }
        }, {
          key: "_viewComponent",
          get: function get() {
            return _layout__WEBPACK_IMPORTED_MODULE_2__.TimelineHeaderPanelLayout;
          }
        }]);
        return TimelineHeaderPanelLayout;
      }(_component_wrapper_scheduler_header_panel__WEBPACK_IMPORTED_MODULE_1__.HeaderPanel);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxTimelineHeaderPanelLayout", TimelineHeaderPanelLayout);

      /***/
    }),
    /***/32154: (
    /*!********************************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/timeline/header_panel/layout.js ***!
      \********************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"viewFunction": function viewFunction() {
          return /* binding */_viewFunction37;
        },
        /* harmony export */"TimelineHeaderPanelLayout": function TimelineHeaderPanelLayout() {
          return /* binding */_TimelineHeaderPanelLayout;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var inferno__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! inferno */82702);
      /* harmony import */
      var _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @devextreme/runtime/inferno */78322);
      /* harmony import */
      var _base_header_panel_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../base/header_panel/layout */61140);
      /* harmony import */
      var _date_header_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./date_header/layout */94576);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/timeline/header_panel/layout.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["className", "dateCellTemplate", "dateHeaderData", "dateHeaderTemplate", "elementRef", "groupByDate", "groupOrientation", "groupPanelData", "groups", "height", "isRenderDateHeader", "resourceCellTemplate", "timeCellTemplate"];
      var _viewFunction37 = function _viewFunction37(_ref) {
        var _ref$props27 = _ref.props,
          dateCellTemplate = _ref$props27.dateCellTemplate,
          dateHeaderData = _ref$props27.dateHeaderData,
          groupByDate = _ref$props27.groupByDate,
          groupOrientation = _ref$props27.groupOrientation,
          groupPanelData = _ref$props27.groupPanelData,
          groups = _ref$props27.groups,
          isRenderDateHeader = _ref$props27.isRenderDateHeader,
          resourceCellTemplate = _ref$props27.resourceCellTemplate,
          timeCellTemplate = _ref$props27.timeCellTemplate;
        return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, _base_header_panel_layout__WEBPACK_IMPORTED_MODULE_4__.HeaderPanelLayout, {
          dateHeaderTemplate: _date_header_layout__WEBPACK_IMPORTED_MODULE_5__.TimelineDateHeaderLayout,
          dateHeaderData: dateHeaderData,
          groupPanelData: groupPanelData,
          groupByDate: groupByDate,
          groups: groups,
          groupOrientation: groupOrientation,
          isRenderDateHeader: isRenderDateHeader,
          resourceCellTemplate: resourceCellTemplate,
          dateCellTemplate: dateCellTemplate,
          timeCellTemplate: timeCellTemplate
        });
      };
      var getTemplate = function getTemplate(TemplateProp) {
        return TemplateProp && (TemplateProp.defaultProps ? function (props) {
          return (0, inferno__WEBPACK_IMPORTED_MODULE_2__.normalizeProps)((0, inferno__WEBPACK_IMPORTED_MODULE_2__.createComponentVNode)(2, TemplateProp, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props)));
        } : TemplateProp);
      };
      var _TimelineHeaderPanelLayout = /*#__PURE__*/function (_devextreme_runtime_i37) {
        _inherits(_TimelineHeaderPanelLayout, _devextreme_runtime_i37);
        function _TimelineHeaderPanelLayout(props) {
          var _this219;
          _classCallCheck(this, _TimelineHeaderPanelLayout);
          _this219 = _callSuper(this, _TimelineHeaderPanelLayout, [props]);
          _this219.state = {};
          return _this219;
        }
        _createClass(_TimelineHeaderPanelLayout, [{
          key: "createEffects",
          value: function createEffects() {
            return [(0, _devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.createReRenderEffect)()];
          }
        }, {
          key: "restAttributes",
          get: function get() {
            var _this$props = this.props,
              restProps = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$props, _excluded);
            return restProps;
          }
        }, {
          key: "render",
          value: function render() {
            var props = this.props;
            return _viewFunction37({
              props: (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
                dateCellTemplate: getTemplate(props.dateCellTemplate),
                timeCellTemplate: getTemplate(props.timeCellTemplate),
                dateHeaderTemplate: getTemplate(props.dateHeaderTemplate),
                resourceCellTemplate: getTemplate(props.resourceCellTemplate)
              }),
              restAttributes: this.restAttributes
            });
          }
        }]);
        return _TimelineHeaderPanelLayout;
      }(_devextreme_runtime_inferno__WEBPACK_IMPORTED_MODULE_3__.InfernoWrapperComponent);
      _TimelineHeaderPanelLayout.defaultProps = _base_header_panel_layout__WEBPACK_IMPORTED_MODULE_4__.HeaderPanelLayoutProps;

      /***/
    }),
    /***/59016: (
    /*!*********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/utils.js ***!
      \*********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getKeyByDateAndGroup": function getKeyByDateAndGroup() {
          return /* binding */_getKeyByDateAndGroup;
        },
        /* harmony export */"getKeyByGroup": function getKeyByGroup() {
          return /* binding */_getKeyByGroup;
        },
        /* harmony export */"addToStyles": function addToStyles() {
          return /* binding */_addToStyles;
        },
        /* harmony export */"addHeightToStyle": function addHeightToStyle() {
          return /* binding */_addHeightToStyle;
        },
        /* harmony export */"addWidthToStyle": function addWidthToStyle() {
          return /* binding */_addWidthToStyle;
        },
        /* harmony export */"getGroupCellClasses": function getGroupCellClasses() {
          return /* binding */_getGroupCellClasses;
        },
        /* harmony export */"getIsGroupedAllDayPanel": function getIsGroupedAllDayPanel() {
          return /* binding */_getIsGroupedAllDayPanel;
        },
        /* harmony export */"isVerticalGroupingApplied": function isVerticalGroupingApplied() {
          return /* binding */_isVerticalGroupingApplied;
        },
        /* harmony export */"isHorizontalGroupingApplied": function isHorizontalGroupingApplied() {
          return /* binding */_isHorizontalGroupingApplied;
        },
        /* harmony export */"isGroupingByDate": function isGroupingByDate() {
          return /* binding */_isGroupingByDate;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _utils_combine_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../utils/combine_classes */33582);
      /* harmony import */
      var _consts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../consts */29239);
      /**
       * DevExtreme (esm/renovation/ui/scheduler/workspaces/utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _getKeyByDateAndGroup = function _getKeyByDateAndGroup(date, groupIndex) {
        var key = date.getTime();
        if (!groupIndex) {
          return key.toString();
        }
        return (key + groupIndex).toString();
      };
      var _getKeyByGroup = function _getKeyByGroup(groupIndex, isVerticalGrouping) {
        if (isVerticalGrouping && !!groupIndex) {
          return groupIndex.toString();
        }
        return "0";
      };
      var _addToStyles = function _addToStyles(options, style) {
        var nextStyle = null !== style && void 0 !== style ? style : {};
        var result = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, nextStyle);
        options.forEach(function (_ref) {
          var attr = _ref.attr,
            value = _ref.value;
          result[attr] = value || nextStyle[attr];
        });
        return result;
      };
      var _addHeightToStyle = function _addHeightToStyle(value, style) {
        var height = value ? "".concat(value, "px") : "";
        return _addToStyles([{
          attr: "height",
          value: height
        }], style);
      };
      var _addWidthToStyle = function _addWidthToStyle(value, style) {
        var width = value ? "".concat(value, "px") : "";
        return _addToStyles([{
          attr: "width",
          value: width
        }], style);
      };
      var _getGroupCellClasses = function _getGroupCellClasses() {
        var isFirstGroupCell = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;
        var isLastGroupCell = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
        var className = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
        return (0, _utils_combine_classes__WEBPACK_IMPORTED_MODULE_1__.combineClasses)(_defineProperty({
          "dx-scheduler-first-group-cell": isFirstGroupCell,
          "dx-scheduler-last-group-cell": isLastGroupCell
        }, className, true));
      };
      var _getIsGroupedAllDayPanel = function _getIsGroupedAllDayPanel(hasAllDayRow, isVerticalGrouping) {
        return hasAllDayRow && isVerticalGrouping;
      };
      var _isVerticalGroupingApplied = function _isVerticalGroupingApplied(groups, groupOrientation) {
        return groupOrientation === _consts__WEBPACK_IMPORTED_MODULE_2__.VERTICAL_GROUP_ORIENTATION && !!groups.length;
      };
      var _isHorizontalGroupingApplied = function _isHorizontalGroupingApplied(groups, groupOrientation) {
        return groupOrientation === _consts__WEBPACK_IMPORTED_MODULE_2__.HORIZONTAL_GROUP_ORIENTATION && !!groups.length;
      };
      var _isGroupingByDate = function _isGroupingByDate(groups, groupOrientation, groupByDate) {
        var isHorizontalGrouping = _isHorizontalGroupingApplied(groups, groupOrientation);
        return groupByDate && isHorizontalGrouping;
      };

      /***/
    }),
    /***/3749: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scroll_view/utils/get_boundary_props.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"isReachedLeft": function isReachedLeft() {
          return /* binding */_isReachedLeft;
        },
        /* harmony export */"isReachedRight": function isReachedRight() {
          return /* binding */_isReachedRight;
        },
        /* harmony export */"isReachedTop": function isReachedTop() {
          return /* binding */_isReachedTop;
        },
        /* harmony export */"isReachedBottom": function isReachedBottom() {
          return /* binding */_isReachedBottom;
        },
        /* harmony export */"getBoundaryProps": function getBoundaryProps() {
          return /* binding */_getBoundaryProps;
        }
        /* harmony export */
      });
      /* harmony import */
      var _get_scroll_left_max__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./get_scroll_left_max */15256);
      /* harmony import */
      var _get_scroll_top_max__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./get_scroll_top_max */68073);
      /* harmony import */
      var _scroll_direction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./scroll_direction */27090);
      /**
       * DevExtreme (esm/renovation/ui/scroll_view/utils/get_boundary_props.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      function _isReachedLeft(scrollOffsetLeft, epsilon) {
        return Math.round(scrollOffsetLeft) <= epsilon;
      }
      function _isReachedRight(element, scrollOffsetLeft, epsilon) {
        return Math.round((0, _get_scroll_left_max__WEBPACK_IMPORTED_MODULE_0__.getScrollLeftMax)(element) - scrollOffsetLeft) <= epsilon;
      }
      function _isReachedTop(scrollOffsetTop, epsilon) {
        return Math.round(scrollOffsetTop) <= epsilon;
      }
      function _isReachedBottom(element, scrollOffsetTop, pocketHeight, epsilon) {
        return Math.round((0, _get_scroll_top_max__WEBPACK_IMPORTED_MODULE_1__.getScrollTopMax)(element) - scrollOffsetTop - pocketHeight) <= epsilon;
      }
      function _getBoundaryProps(direction, scrollOffset, element) {
        var pocketHeight = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
        var left = scrollOffset.left,
          top = scrollOffset.top;
        var boundaryProps = {};
        var _scroll_direction__WE = new _scroll_direction__WEBPACK_IMPORTED_MODULE_2__.ScrollDirection(direction),
          isHorizontal = _scroll_direction__WE.isHorizontal,
          isVertical = _scroll_direction__WE.isVertical;
        if (isHorizontal) {
          boundaryProps.reachedLeft = _isReachedLeft(left, 0);
          boundaryProps.reachedRight = _isReachedRight(element, left, 0);
        }
        if (isVertical) {
          boundaryProps.reachedTop = _isReachedTop(top, 0);
          boundaryProps.reachedBottom = _isReachedBottom(element, top, pocketHeight, 0);
        }
        return boundaryProps;
      }

      /***/
    }),
    /***/15256: (
    /*!********************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scroll_view/utils/get_scroll_left_max.js ***!
      \********************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getScrollLeftMax": function getScrollLeftMax() {
          return /* binding */_getScrollLeftMax;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scroll_view/utils/get_scroll_left_max.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      function _getScrollLeftMax(element) {
        return element.scrollWidth - element.clientWidth;
      }

      /***/
    }),
    /***/68073: (
    /*!*******************************************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/ui/scroll_view/utils/get_scroll_top_max.js ***!
      \*******************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"getScrollTopMax": function getScrollTopMax() {
          return /* binding */_getScrollTopMax;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/renovation/ui/scroll_view/utils/get_scroll_top_max.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      function _getScrollTopMax(element) {
        return element.scrollHeight - element.clientHeight;
      }

      /***/
    }),
    /***/82919: (
    /*!**********************************************************************!*\
      !*** ./node_modules/devextreme/esm/renovation/utils/getThemeType.js ***!
      \**********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _ui_themes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../ui/themes */78279);
      /**
       * DevExtreme (esm/renovation/utils/getThemeType.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var getThemeType = function getThemeType() {
        var theme = (0, _ui_themes__WEBPACK_IMPORTED_MODULE_0__.current)();
        return {
          isCompact: (0, _ui_themes__WEBPACK_IMPORTED_MODULE_0__.isCompact)(theme),
          isMaterial: (0, _ui_themes__WEBPACK_IMPORTED_MODULE_0__.isMaterial)(theme)
        };
      };
      /* harmony default export */
      __webpack_exports__["default"] = getThemeType;

      /***/
    }),
    /***/52566: (
    /*!********************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/button_group.js ***!
      \********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./widget/ui.widget */69703);
      /* harmony import */
      var _button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./button */66037);
      /* harmony import */
      var _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./collection/ui.collection_widget.edit */2076);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../core/utils/type */33275);
      /* harmony import */
      var _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../core/templates/bindable_template */32503);
      /**
       * DevExtreme (esm/ui/button_group.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var BUTTON_GROUP_CLASS = "dx-buttongroup";
      var BUTTON_GROUP_WRAPPER_CLASS = BUTTON_GROUP_CLASS + "-wrapper";
      var BUTTON_GROUP_ITEM_CLASS = BUTTON_GROUP_CLASS + "-item";
      var BUTTON_GROUP_FIRST_ITEM_CLASS = BUTTON_GROUP_CLASS + "-first-item";
      var BUTTON_GROUP_LAST_ITEM_CLASS = BUTTON_GROUP_CLASS + "-last-item";
      var BUTTON_GROUP_ITEM_HAS_WIDTH = BUTTON_GROUP_ITEM_CLASS + "-has-width";
      var SHAPE_STANDARD_CLASS = "dx-shape-standard";
      var ButtonCollection = _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_3__["default"].inherit({
        _initTemplates: function _initTemplates() {
          var _this220 = this;
          this.callBase();
          this._templateManager.addDefaultTemplates({
            item: new _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_7__.BindableTemplate(function ($container, data, model) {
              _this220._prepareItemStyles($container);
              var template = _this220.option("buttonTemplate");
              _this220._createComponent($container, _button__WEBPACK_IMPORTED_MODULE_2__["default"], (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)({}, model, data, _this220._getBasicButtonOptions(), {
                _templateData: _this220._hasCustomTemplate(template) ? model : {},
                template: model.template || template
              }));
            }, ["text", "type", "icon", "disabled", "visible", "hint"], this.option("integrationOptions.watchMethod"))
          });
        },
        _getBasicButtonOptions: function _getBasicButtonOptions() {
          return {
            focusStateEnabled: false,
            onClick: null,
            hoverStateEnabled: this.option("hoverStateEnabled"),
            activeStateEnabled: this.option("activeStateEnabled"),
            stylingMode: this.option("stylingMode")
          };
        },
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this.callBase(), {
            itemTemplateProperty: null
          });
        },
        _hasCustomTemplate: function _hasCustomTemplate(template) {
          return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isFunction)(template) || this.option("integrationOptions.templates")[template];
        },
        _prepareItemStyles: function _prepareItemStyles($item) {
          var itemIndex = $item.data("dxItemIndex");
          0 === itemIndex && $item.addClass(BUTTON_GROUP_FIRST_ITEM_CLASS);
          var items = this.option("items");
          items && itemIndex === items.length - 1 && $item.addClass(BUTTON_GROUP_LAST_ITEM_CLASS);
          $item.addClass(SHAPE_STANDARD_CLASS);
        },
        _renderItemContent: function _renderItemContent(args) {
          args.container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(args.container).parent();
          return this.callBase(args);
        },
        _renderItemContentByNode: function _renderItemContentByNode(args, $node) {
          args.container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(args.container.children().first());
          return this.callBase(args, $node);
        },
        _focusTarget: function _focusTarget() {
          return this.$element().parent();
        },
        _keyboardEventBindingTarget: function _keyboardEventBindingTarget() {
          return this._focusTarget();
        },
        _refreshContent: function _refreshContent() {
          this._prepareContent();
          this._renderContent();
        },
        _itemClass: function _itemClass() {
          return BUTTON_GROUP_ITEM_CLASS;
        },
        _itemSelectHandler: function _itemSelectHandler(e) {
          if ("single" === this.option("selectionMode") && this.isItemSelected(e.currentTarget)) {
            return;
          }
          this.callBase(e);
        }
      });
      var ButtonGroup = _widget_ui_widget__WEBPACK_IMPORTED_MODULE_1__["default"].inherit({
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this.callBase(), {
            hoverStateEnabled: true,
            focusStateEnabled: true,
            selectionMode: "single",
            selectedItems: [],
            selectedItemKeys: [],
            stylingMode: "contained",
            keyExpr: "text",
            items: [],
            buttonTemplate: "content",
            onSelectionChanged: null,
            onItemClick: null
          });
        },
        _init: function _init() {
          this.callBase();
          this._createItemClickAction();
        },
        _createItemClickAction: function _createItemClickAction() {
          this._itemClickAction = this._createActionByOption("onItemClick");
        },
        _initMarkup: function _initMarkup() {
          this.setAria("role", "group");
          this.$element().addClass(BUTTON_GROUP_CLASS);
          this._renderButtons();
          this._syncSelectionOptions();
          this.callBase();
        },
        _fireSelectionChangeEvent: function _fireSelectionChangeEvent(addedItems, removedItems) {
          this._createActionByOption("onSelectionChanged", {
            excludeValidators: ["disabled", "readOnly"]
          })({
            addedItems: addedItems,
            removedItems: removedItems
          });
        },
        _renderButtons: function _renderButtons() {
          var _this221 = this;
          var $buttons = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(BUTTON_GROUP_WRAPPER_CLASS).appendTo(this.$element());
          var selectedItems = this.option("selectedItems");
          var options = {
            selectionMode: this.option("selectionMode"),
            items: this.option("items"),
            keyExpr: this.option("keyExpr"),
            buttonTemplate: this.option("buttonTemplate"),
            scrollingEnabled: false,
            selectedItemKeys: this.option("selectedItemKeys"),
            focusStateEnabled: this.option("focusStateEnabled"),
            hoverStateEnabled: this.option("hoverStateEnabled"),
            activeStateEnabled: this.option("activeStateEnabled"),
            stylingMode: this.option("stylingMode"),
            accessKey: this.option("accessKey"),
            tabIndex: this.option("tabIndex"),
            noDataText: "",
            selectionRequired: false,
            onItemRendered: function onItemRendered(e) {
              var width = _this221.option("width");
              (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(width) && (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(e.itemElement).addClass(BUTTON_GROUP_ITEM_HAS_WIDTH);
            },
            onSelectionChanged: function onSelectionChanged(e) {
              _this221._syncSelectionOptions();
              _this221._fireSelectionChangeEvent(e.addedItems, e.removedItems);
            },
            onItemClick: function onItemClick(e) {
              _this221._itemClickAction(e);
            }
          };
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(selectedItems) && selectedItems.length) {
            options.selectedItems = selectedItems;
          }
          this._buttonsCollection = this._createComponent($buttons, ButtonCollection, options);
        },
        _syncSelectionOptions: function _syncSelectionOptions() {
          this._setOptionWithoutOptionChange("selectedItems", this._buttonsCollection.option("selectedItems"));
          this._setOptionWithoutOptionChange("selectedItemKeys", this._buttonsCollection.option("selectedItemKeys"));
        },
        _optionChanged: function _optionChanged(args) {
          switch (args.name) {
            case "stylingMode":
            case "selectionMode":
            case "keyExpr":
            case "buttonTemplate":
            case "items":
            case "activeStateEnabled":
            case "focusStateEnabled":
            case "hoverStateEnabled":
            case "tabIndex":
              this._invalidate();
              break;
            case "selectedItemKeys":
            case "selectedItems":
              this._buttonsCollection.option(args.name, args.value);
              break;
            case "onItemClick":
              this._createItemClickAction();
              break;
            case "onSelectionChanged":
              break;
            case "width":
              this.callBase(args);
              this._buttonsCollection.itemElements().toggleClass(BUTTON_GROUP_ITEM_HAS_WIDTH, !!args.value);
              break;
            default:
              this.callBase(args);
          }
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_4__["default"])("dxButtonGroup", ButtonGroup);
      /* harmony default export */
      __webpack_exports__["default"] = ButtonGroup;

      /***/
    }),
    /***/95752: (
    /*!**************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/dialog.js ***!
      \**************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"FakeDialogComponent": function FakeDialogComponent() {
          return /* binding */_FakeDialogComponent;
        },
        /* harmony export */"custom": function custom() {
          return /* binding */_custom;
        },
        /* harmony export */"alert": function alert() {
          return /* binding */_alert;
        },
        /* harmony export */"confirm": function confirm() {
          return /* binding */_confirm;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _core_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../core/component */55469);
      /* harmony import */
      var _core_action__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../core/action */83221);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../core/devices */41881);
      /* harmony import */
      var _core_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../core/config */99284);
      /* harmony import */
      var _core_utils_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../core/utils/dom */16520);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../core/utils/type */33275);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../core/utils/window */88684);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../events/core/events_engine */99064);
      /* harmony import */
      var _core_utils_view_port__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../core/utils/view_port */30228);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../localization/message */19336);
      /* harmony import */
      var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ./widget/ui.errors */42491);
      /* harmony import */
      var _popup_ui_popup__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ./popup/ui.popup */23772);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__( /*! ../core/utils/common */37552);
      /**
       * DevExtreme (esm/ui/dialog.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var window = (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_11__.getWindow)();
      var DEFAULT_BUTTON = {
        text: "OK",
        onClick: function onClick() {
          return true;
        }
      };
      var DX_DIALOG_CLASSNAME = "dx-dialog";
      var DX_DIALOG_WRAPPER_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-wrapper");
      var DX_DIALOG_ROOT_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-root");
      var DX_DIALOG_CONTENT_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-content");
      var DX_DIALOG_MESSAGE_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-message");
      var DX_DIALOG_BUTTONS_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-buttons");
      var DX_DIALOG_BUTTON_CLASSNAME = "".concat(DX_DIALOG_CLASSNAME, "-button");
      var DX_BUTTON_CLASSNAME = "dx-button";
      var _FakeDialogComponent = _core_component__WEBPACK_IMPORTED_MODULE_2__.Component.inherit({
        ctor: function ctor(element, options) {
          this.callBase(options);
        },
        _defaultOptionsRules: function _defaultOptionsRules() {
          return this.callBase().concat([{
            device: {
              platform: "ios"
            },
            options: {
              width: 276
            }
          }]);
        }
      });
      var _custom = function _custom(options) {
        var _options$title;
        var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_7__.Deferred();
        var defaultOptions = new _FakeDialogComponent().option();
        options = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(defaultOptions, options);
        var $element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(DX_DIALOG_CLASSNAME).appendTo((0, _core_utils_view_port__WEBPACK_IMPORTED_MODULE_13__.value)());
        var isMessageDefined = ("message" in options);
        var isMessageHtmlDefined = ("messageHtml" in options);
        if (isMessageDefined) {
          _widget_ui_errors__WEBPACK_IMPORTED_MODULE_15__["default"].log("W1013");
        }
        var messageHtml = String(isMessageHtmlDefined ? options.messageHtml : options.message);
        var $message = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(DX_DIALOG_MESSAGE_CLASSNAME).html(messageHtml);
        var popupToolbarItems = [];
        (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__.each)(options.buttons || [DEFAULT_BUTTON], function () {
          var action = new _core_action__WEBPACK_IMPORTED_MODULE_3__["default"](this.onClick, {
            context: popupInstance
          });
          popupToolbarItems.push({
            toolbar: "bottom",
            location: _core_devices__WEBPACK_IMPORTED_MODULE_4__["default"].current().android ? "after" : "center",
            widget: "dxButton",
            options: (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)({}, this, {
              onClick: function onClick() {
                var result = action.execute.apply(action, arguments);
                hide(result);
              }
            })
          });
        });
        var popupInstance = new _popup_ui_popup__WEBPACK_IMPORTED_MODULE_16__["default"]($element, (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)({
          title: null !== (_options$title = options.title) && void 0 !== _options$title ? _options$title : "",
          showTitle: (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_17__.ensureDefined)(options.showTitle, true),
          dragEnabled: (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_17__.ensureDefined)(options.dragEnabled, true),
          height: "auto",
          width: options.width,
          showCloseButton: options.showCloseButton || false,
          ignoreChildEvents: false,
          container: $element,
          visualContainer: window,
          dragAndResizeArea: window,
          onContentReady: function onContentReady(args) {
            args.component.$content().addClass(DX_DIALOG_CONTENT_CLASSNAME).append($message);
          },
          onShowing: function onShowing(e) {
            e.component.bottomToolbar().addClass(DX_DIALOG_BUTTONS_CLASSNAME).find(".".concat(DX_BUTTON_CLASSNAME)).addClass(DX_DIALOG_BUTTON_CLASSNAME);
            (0, _core_utils_dom__WEBPACK_IMPORTED_MODULE_6__.resetActiveElement)();
          },
          onShown: function onShown(e) {
            var $firstButton = e.component.bottomToolbar().find(".".concat(DX_BUTTON_CLASSNAME)).first();
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_12__["default"].trigger($firstButton, "focus");
          },
          onHiding: function onHiding() {
            deferred.reject();
          },
          onHidden: function onHidden(_ref) {
            var element = _ref.element;
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(element).remove();
          },
          toolbarItems: popupToolbarItems,
          animation: {
            show: {
              type: "pop",
              duration: 400
            },
            hide: {
              type: "pop",
              duration: 400,
              to: {
                opacity: 0,
                scale: 0
              },
              from: {
                opacity: 1,
                scale: 1
              }
            }
          },
          rtlEnabled: (0, _core_config__WEBPACK_IMPORTED_MODULE_5__["default"])().rtlEnabled,
          position: {
            boundaryOffset: {
              h: 10,
              v: 0
            }
          }
        }, options.popupOptions));
        popupInstance.$wrapper().addClass(DX_DIALOG_WRAPPER_CLASSNAME);
        if (options.position) {
          popupInstance.option("position", options.position);
        }
        popupInstance.$wrapper().addClass(DX_DIALOG_ROOT_CLASSNAME);
        function hide(value) {
          deferred.resolve(value);
          popupInstance.hide();
        }
        return {
          show: function show() {
            if ("android" === _core_devices__WEBPACK_IMPORTED_MODULE_4__["default"].real().platform) {
              var isPortrait = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)(window) > (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(window);
              var width = isPortrait ? "80%" : "60%";
              popupInstance.option({
                width: width
              });
            }
            popupInstance.show();
            return deferred.promise();
          },
          hide: hide
        };
      };
      var _alert = function _alert(messageHtml) {
        var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
        var showTitle = arguments.length > 2 ? arguments[2] : void 0;
        var options = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isPlainObject)(messageHtml) ? messageHtml : {
          title: title,
          messageHtml: messageHtml,
          showTitle: showTitle,
          dragEnabled: showTitle
        };
        return _custom(options).show();
      };
      var _confirm = function _confirm(messageHtml) {
        var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
        var showTitle = arguments.length > 2 ? arguments[2] : void 0;
        var options = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_8__.isPlainObject)(messageHtml) ? messageHtml : {
          title: title,
          messageHtml: messageHtml,
          showTitle: showTitle,
          buttons: [{
            text: _localization_message__WEBPACK_IMPORTED_MODULE_14__["default"].format("Yes"),
            onClick: function onClick() {
              return true;
            }
          }, {
            text: _localization_message__WEBPACK_IMPORTED_MODULE_14__["default"].format("No"),
            onClick: function onClick() {
              return false;
            }
          }],
          dragEnabled: showTitle
        };
        return _custom(options).show();
      };

      /***/
    }),
    /***/63685: (
    /*!*****************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/draggable.js ***!
      \*****************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _internal_m_draggable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../__internal/m_draggable */39348);
      /**
       * DevExtreme (esm/ui/draggable.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      /* harmony default export */
      __webpack_exports__["default"] = _internal_m_draggable__WEBPACK_IMPORTED_MODULE_0__["default"];

      /***/
    }),
    /***/98924: (
    /*!************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/drop_down_button.js ***!
      \************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./widget/ui.widget */69703);
      /* harmony import */
      var _core_templates_function_template__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../core/templates/function_template */51454);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _button_group__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./button_group */52566);
      /* harmony import */
      var _popup_ui_popup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./popup/ui.popup */23772);
      /* harmony import */
      var _list_light__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./list_light */22701);
      /* harmony import */
      var _core_utils_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../core/utils/data */25670);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../core/element */60213);
      /* harmony import */
      var _core_utils_icon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../core/utils/icon */60181);
      /* harmony import */
      var _data_helper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../data_helper */53454);
      /* harmony import */
      var _data_data_source_data_source__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../data/data_source/data_source */56053);
      /* harmony import */
      var _data_array_store__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../data/array_store */55996);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../core/utils/type */33275);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ../core/utils/common */37552);
      /* harmony import */
      var _core_guid__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__( /*! ../core/guid */22203);
      /* harmony import */
      var _drop_down_editor_utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__( /*! ./drop_down_editor/utils */59494);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__( /*! ../localization/message */19336);
      /**
       * DevExtreme (esm/ui/drop_down_button.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DROP_DOWN_BUTTON_CLASS = "dx-dropdownbutton";
      var DROP_DOWN_BUTTON_CONTENT = "dx-dropdownbutton-content";
      var DROP_DOWN_BUTTON_ACTION_CLASS = "dx-dropdownbutton-action";
      var DROP_DOWN_BUTTON_TOGGLE_CLASS = "dx-dropdownbutton-toggle";
      var DROP_DOWN_BUTTON_HAS_ARROW_CLASS = "dx-dropdownbutton-has-arrow";
      var DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = "dx-dropdownbutton-popup-wrapper";
      var DROP_DOWN_EDITOR_OVERLAY_CLASS = "dx-dropdowneditor-overlay";
      var DX_BUTTON_TEXT_CLASS = "dx-button-text";
      var DX_ICON_RIGHT_CLASS = "dx-icon-right";
      var DropDownButton = _widget_ui_widget__WEBPACK_IMPORTED_MODULE_1__["default"].inherit({
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)(this.callBase(), {
            itemTemplate: "item",
            keyExpr: "this",
            displayExpr: void 0,
            selectedItem: null,
            selectedItemKey: null,
            stylingMode: "outlined",
            deferRendering: true,
            noDataText: _localization_message__WEBPACK_IMPORTED_MODULE_19__["default"].format("dxCollectionWidget-noDataText"),
            useSelectMode: false,
            splitButton: false,
            showArrowIcon: true,
            text: "",
            icon: void 0,
            onButtonClick: null,
            onSelectionChanged: null,
            onItemClick: null,
            opened: false,
            items: null,
            dataSource: null,
            focusStateEnabled: true,
            hoverStateEnabled: true,
            dropDownOptions: {},
            dropDownContentTemplate: "content",
            wrapItemText: false,
            useItemTextAsTitle: true,
            grouped: false,
            groupTemplate: "group",
            buttonGroupOptions: {}
          });
        },
        _setOptionsByReference: function _setOptionsByReference() {
          this.callBase();
          (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)(this._optionsByReference, {
            selectedItem: true
          });
        },
        _init: function _init() {
          this.callBase();
          this._createItemClickAction();
          this._createActionClickAction();
          this._createSelectionChangedAction();
          this._initDataSource();
          this._compileKeyGetter();
          this._compileDisplayGetter();
          this._itemsToDataSource(this.option("items"));
          this._options.cache("buttonGroupOptions", this.option("buttonGroupOptions"));
          this._options.cache("dropDownOptions", this.option("dropDownOptions"));
        },
        _initTemplates: function _initTemplates() {
          var _this222 = this;
          this._templateManager.addDefaultTemplates({
            content: new _core_templates_function_template__WEBPACK_IMPORTED_MODULE_2__.FunctionTemplate(function (options) {
              var $popupContent = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(options.container);
              var $listContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").appendTo($popupContent);
              _this222._list = _this222._createComponent($listContainer, _list_light__WEBPACK_IMPORTED_MODULE_6__["default"], _this222._listOptions());
              _this222._list.registerKeyHandler("escape", _this222._escHandler.bind(_this222));
              _this222._list.registerKeyHandler("tab", _this222._escHandler.bind(_this222));
              _this222._list.registerKeyHandler("leftArrow", _this222._escHandler.bind(_this222));
              _this222._list.registerKeyHandler("rightArrow", _this222._escHandler.bind(_this222));
            })
          });
          this.callBase();
        },
        _itemsToDataSource: function _itemsToDataSource(value) {
          if (!this._dataSource) {
            this._dataSource = new _data_data_source_data_source__WEBPACK_IMPORTED_MODULE_11__.DataSource({
              store: new _data_array_store__WEBPACK_IMPORTED_MODULE_12__["default"]({
                key: this._getKey(),
                data: value
              }),
              pageSize: 0
            });
          }
        },
        _getKey: function _getKey() {
          var _this$_dataSource;
          var keyExpr = this.option("keyExpr");
          var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();
          return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(storeKey) && (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(keyExpr) || "this" === keyExpr) ? storeKey : keyExpr;
        },
        _compileKeyGetter: function _compileKeyGetter() {
          this._keyGetter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_7__.compileGetter)(this._getKey());
        },
        _compileDisplayGetter: function _compileDisplayGetter() {
          this._displayGetter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_7__.compileGetter)(this.option("displayExpr"));
        },
        _initMarkup: function _initMarkup() {
          this.callBase();
          this.$element().addClass(DROP_DOWN_BUTTON_CLASS);
          this._renderButtonGroup();
          this._updateArrowClass();
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(this.option("selectedItemKey"))) {
            this._loadSelectedItem().done(this._updateActionButton.bind(this));
          }
        },
        _renderFocusTarget: _core_utils_common__WEBPACK_IMPORTED_MODULE_16__.noop,
        _render: function _render() {
          if (!this.option("deferRendering") || this.option("opened")) {
            this._renderPopup();
          }
          this.callBase();
        },
        _renderContentImpl: function _renderContentImpl() {
          if (this._popup) {
            this._renderPopupContent();
          }
          return this.callBase();
        },
        _loadSelectedItem: function _loadSelectedItem() {
          var _this$_loadSingleDefe;
          null === (_this$_loadSingleDefe = this._loadSingleDeferred) || void 0 === _this$_loadSingleDefe ? void 0 : _this$_loadSingleDefe.reject();
          var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_13__.Deferred();
          if (this._list && void 0 !== this._lastSelectedItemData) {
            var cachedResult = this.option("useSelectMode") ? this._list.option("selectedItem") : this._lastSelectedItemData;
            return d.resolve(cachedResult);
          }
          this._lastSelectedItemData = void 0;
          var selectedItemKey = this.option("selectedItemKey");
          this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(function () {
            d.resolve(null);
          });
          this._loadSingleDeferred = d;
          return d.promise();
        },
        _createActionClickAction: function _createActionClickAction() {
          this._actionClickAction = this._createActionByOption("onButtonClick");
        },
        _createSelectionChangedAction: function _createSelectionChangedAction() {
          this._selectionChangedAction = this._createActionByOption("onSelectionChanged");
        },
        _createItemClickAction: function _createItemClickAction() {
          this._itemClickAction = this._createActionByOption("onItemClick");
        },
        _fireSelectionChangedAction: function _fireSelectionChangedAction(_ref) {
          var previousValue = _ref.previousValue,
            value = _ref.value;
          this._selectionChangedAction({
            item: value,
            previousItem: previousValue
          });
        },
        _fireItemClickAction: function _fireItemClickAction(_ref2) {
          var event = _ref2.event,
            itemElement = _ref2.itemElement,
            itemData = _ref2.itemData;
          return this._itemClickAction({
            event: event,
            itemElement: itemElement,
            itemData: this._actionItem || itemData
          });
        },
        _actionButtonConfig: function _actionButtonConfig() {
          return {
            text: this.option("text"),
            icon: this.option("icon"),
            elementAttr: {
              "class": DROP_DOWN_BUTTON_ACTION_CLASS
            }
          };
        },
        _getButtonGroupItems: function _getButtonGroupItems() {
          var items = [];
          items.push(this._actionButtonConfig());
          if (this.option("splitButton")) {
            items.push({
              icon: "spindown",
              elementAttr: {
                "class": DROP_DOWN_BUTTON_TOGGLE_CLASS
              }
            });
          }
          return items;
        },
        _buttonGroupItemClick: function _buttonGroupItemClick(_ref3) {
          var event = _ref3.event,
            itemData = _ref3.itemData;
          var isActionButton = itemData.elementAttr["class"] === DROP_DOWN_BUTTON_ACTION_CLASS;
          var isToggleButton = itemData.elementAttr["class"] === DROP_DOWN_BUTTON_TOGGLE_CLASS;
          if (isToggleButton) {
            this.toggle();
          } else if (isActionButton) {
            this._actionClickAction({
              event: event,
              selectedItem: this.option("selectedItem")
            });
            if (!this.option("splitButton")) {
              this.toggle();
            }
          }
        },
        _buttonGroupOptions: function _buttonGroupOptions() {
          var _this223 = this;
          var _this$option2 = this.option(),
            splitButton = _this$option2.splitButton,
            showArrowIcon = _this$option2.showArrowIcon,
            focusStateEnabled = _this$option2.focusStateEnabled,
            hoverStateEnabled = _this$option2.hoverStateEnabled,
            stylingMode = _this$option2.stylingMode,
            accessKey = _this$option2.accessKey,
            tabIndex = _this$option2.tabIndex;
          var buttonTemplate = splitButton || !showArrowIcon ? "content" : function (_ref4, buttonContent) {
            var text = _ref4.text,
              icon = _ref4.icon;
            var $firstIcon = (0, _core_utils_icon__WEBPACK_IMPORTED_MODULE_9__.getImageContainer)(icon);
            var $textContainer = text ? (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<span>").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;
            var $secondIcon = (0, _core_utils_icon__WEBPACK_IMPORTED_MODULE_9__.getImageContainer)("spindown").addClass(DX_ICON_RIGHT_CLASS);
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(buttonContent).append($firstIcon, $textContainer, $secondIcon);
          };
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)({
            items: this._getButtonGroupItems(),
            onItemClick: this._buttonGroupItemClick.bind(this),
            width: "100%",
            height: "100%",
            selectionMode: "none",
            onKeyboardHandled: function onKeyboardHandled(e) {
              return _this223._keyboardHandler(e);
            },
            buttonTemplate: buttonTemplate,
            focusStateEnabled: focusStateEnabled,
            hoverStateEnabled: hoverStateEnabled,
            stylingMode: stylingMode,
            accessKey: accessKey,
            tabIndex: tabIndex
          }, this._options.cache("buttonGroupOptions"));
        },
        _renderPopupContent: function _renderPopupContent() {
          var $content = this._popup.$content();
          var template = this._getTemplateByOption("dropDownContentTemplate");
          $content.empty();
          this._popupContentId = "dx-" + new _core_guid__WEBPACK_IMPORTED_MODULE_17__["default"]();
          this.setAria("id", this._popupContentId, $content);
          return template.render({
            container: (0, _core_element__WEBPACK_IMPORTED_MODULE_8__.getPublicElement)($content),
            model: this.option("items") || this._dataSource
          });
        },
        _popupOptions: function _popupOptions() {
          var _this224 = this;
          var horizontalAlignment = this.option("rtlEnabled") ? "right" : "left";
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)({
            dragEnabled: false,
            focusStateEnabled: false,
            deferRendering: this.option("deferRendering"),
            hideOnOutsideClick: function hideOnOutsideClick(e) {
              var $element = _this224.$element();
              var $buttonClicked = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(e.target).closest(".".concat(DROP_DOWN_BUTTON_CLASS));
              return !$buttonClicked.is($element);
            },
            showTitle: false,
            animation: {
              show: {
                type: "fade",
                duration: 0,
                from: 0,
                to: 1
              },
              hide: {
                type: "fade",
                duration: 400,
                from: 1,
                to: 0
              }
            },
            _ignoreFunctionValueDeprecation: true,
            width: function width() {
              return (0, _drop_down_editor_utils__WEBPACK_IMPORTED_MODULE_18__.getElementWidth)(_this224.$element());
            },
            height: "auto",
            shading: false,
            position: {
              of: this.$element(),
              collision: "flipfit",
              my: horizontalAlignment + " top",
              at: horizontalAlignment + " bottom"
            },
            _wrapperClassExternal: DROP_DOWN_EDITOR_OVERLAY_CLASS
          }, this._options.cache("dropDownOptions"), {
            visible: this.option("opened")
          });
        },
        _listOptions: function _listOptions() {
          var _this225 = this;
          var selectedItemKey = this.option("selectedItemKey");
          var useSelectMode = this.option("useSelectMode");
          return {
            selectionMode: useSelectMode ? "single" : "none",
            wrapItemText: this.option("wrapItemText"),
            focusStateEnabled: this.option("focusStateEnabled"),
            hoverStateEnabled: this.option("hoverStateEnabled"),
            useItemTextAsTitle: this.option("useItemTextAsTitle"),
            onContentReady: function onContentReady() {
              return _this225._fireContentReadyAction();
            },
            selectedItemKeys: (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],
            grouped: this.option("grouped"),
            groupTemplate: this.option("groupTemplate"),
            keyExpr: this._getKey(),
            noDataText: this.option("noDataText"),
            displayExpr: this.option("displayExpr"),
            itemTemplate: this.option("itemTemplate"),
            items: this.option("items"),
            dataSource: this._dataSource,
            onItemClick: function onItemClick(e) {
              if (!_this225.option("useSelectMode")) {
                _this225._lastSelectedItemData = e.itemData;
              }
              _this225.option("selectedItemKey", _this225._keyGetter(e.itemData));
              var actionResult = _this225._fireItemClickAction(e);
              if (false !== actionResult) {
                _this225.toggle(false);
                _this225._buttonGroup.focus();
              }
            }
          };
        },
        _upDownKeyHandler: function _upDownKeyHandler() {
          if (this._popup && this._popup.option("visible") && this._list) {
            this._list.focus();
          } else {
            this.open();
          }
          return true;
        },
        _escHandler: function _escHandler() {
          this.close();
          this._buttonGroup.focus();
          return true;
        },
        _tabHandler: function _tabHandler() {
          this.close();
          return true;
        },
        _renderPopup: function _renderPopup() {
          var $popup = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>");
          this.$element().append($popup);
          this._popup = this._createComponent($popup, _popup_ui_popup__WEBPACK_IMPORTED_MODULE_5__["default"], this._popupOptions());
          this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);
          this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);
          this._popup.on("hiding", this._popupHidingHandler.bind(this));
          this._popup.on("showing", this._popupShowingHandler.bind(this));
          this._bindInnerWidgetOptions(this._popup, "dropDownOptions");
        },
        _popupHidingHandler: function _popupHidingHandler() {
          this.option("opened", false);
          this._setAriaExpanded(false);
        },
        _popupOptionChanged: function _popupOptionChanged(args) {
          var options = _widget_ui_widget__WEBPACK_IMPORTED_MODULE_1__["default"].getOptionsFromContainer(args);
          this._setPopupOption(options);
          var optionsKeys = Object.keys(options);
          if (-1 !== optionsKeys.indexOf("width") || -1 !== optionsKeys.indexOf("height")) {
            this._dimensionChanged();
          }
        },
        _dimensionChanged: function _dimensionChanged() {
          var _this226 = this;
          var popupWidth = (0, _drop_down_editor_utils__WEBPACK_IMPORTED_MODULE_18__.getSizeValue)(this.option("dropDownOptions.width"));
          if (void 0 === popupWidth) {
            this._setPopupOption("width", function () {
              return (0, _drop_down_editor_utils__WEBPACK_IMPORTED_MODULE_18__.getElementWidth)(_this226.$element());
            });
          }
        },
        _setPopupOption: function _setPopupOption(optionName, value) {
          this._setWidgetOption("_popup", arguments);
        },
        _popupShowingHandler: function _popupShowingHandler() {
          this.option("opened", true);
          this._setAriaExpanded(true);
        },
        _setAriaExpanded: function _setAriaExpanded(value) {
          var _this227 = this;
          this._ariaExpandedElements.forEach(function (ariaElement) {
            _this227.setAria({
              expanded: value,
              owns: value ? _this227._popupContentId : void 0
            }, (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(ariaElement));
          });
        },
        _renderButtonGroup: function _renderButtonGroup() {
          var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>");
          if (!this._buttonGroup) {
            this.$element().append($buttonGroup);
          }
          this._buttonGroup = this._createComponent($buttonGroup, _button_group__WEBPACK_IMPORTED_MODULE_4__["default"], this._buttonGroupOptions());
          var buttonElements = this._buttonGroup.$element().find(".dx-button").toArray();
          this._ariaExpandedElements = [].concat(_toConsumableArray(buttonElements), [this.$element()]);
          this._buttonGroup.registerKeyHandler("downArrow", this._upDownKeyHandler.bind(this));
          this._buttonGroup.registerKeyHandler("tab", this._tabHandler.bind(this));
          this._buttonGroup.registerKeyHandler("upArrow", this._upDownKeyHandler.bind(this));
          this._buttonGroup.registerKeyHandler("escape", this._escHandler.bind(this));
          this._bindInnerWidgetOptions(this._buttonGroup, "buttonGroupOptions");
          this._setAriaExpanded(this.option("opened"));
        },
        _updateArrowClass: function _updateArrowClass() {
          var hasArrow = this.option("splitButton") || this.option("showArrowIcon");
          this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow);
        },
        toggle: function toggle(visible) {
          if (!this._popup) {
            this._renderPopup();
            this._renderContent();
          }
          return this._popup.toggle(visible);
        },
        open: function open() {
          return this.toggle(true);
        },
        close: function close() {
          return this.toggle(false);
        },
        _setListOption: function _setListOption(name, value) {
          this._list && this._list.option(name, value);
        },
        _getDisplayValue: function _getDisplayValue(item) {
          var isPrimitiveItem = !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isPlainObject)(item);
          var displayValue = isPrimitiveItem ? item : this._displayGetter(item);
          return !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isPlainObject)(displayValue) ? String((0, _core_utils_common__WEBPACK_IMPORTED_MODULE_16__.ensureDefined)(displayValue, "")) : "";
        },
        _updateActionButton: function _updateActionButton(selectedItem) {
          if (this.option("useSelectMode")) {
            this.option({
              text: this._getDisplayValue(selectedItem),
              icon: (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isPlainObject)(selectedItem) ? selectedItem.icon : void 0
            });
          }
          this._setOptionWithoutOptionChange("selectedItem", selectedItem);
          this._setOptionWithoutOptionChange("selectedItemKey", this._keyGetter(selectedItem));
        },
        _clean: function _clean() {
          this._list && this._list.$element().remove();
          this._popup && this._popup.$element().remove();
        },
        _selectedItemKeyChanged: function _selectedItemKeyChanged(value) {
          var _this228 = this;
          this._setListOption("selectedItemKeys", this.option("useSelectMode") && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(value) ? [value] : []);
          var previousItem = this.option("selectedItem");
          this._loadSelectedItem().done(function (selectedItem) {
            _this228._updateActionButton(selectedItem);
            if (_this228._displayGetter(previousItem) !== _this228._displayGetter(selectedItem)) {
              _this228._fireSelectionChangedAction({
                previousValue: previousItem,
                value: selectedItem
              });
            }
          });
        },
        _actionButtonOptionChanged: function _actionButtonOptionChanged(_ref5) {
          var name = _ref5.name,
            value = _ref5.value;
          var newConfig = {};
          newConfig[name] = value;
          this._buttonGroup.option("items[0]", (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_14__.extend)({}, this._actionButtonConfig(), newConfig));
          this._popup && this._popup.repaint();
        },
        _selectModeChanged: function _selectModeChanged(value) {
          if (value) {
            this._setListOption("selectionMode", "single");
            var selectedItemKey = this.option("selectedItemKey");
            this._setListOption("selectedItemKeys", (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(selectedItemKey) ? [selectedItemKey] : []);
            this._selectedItemKeyChanged(this.option("selectedItemKey"));
          } else {
            this._setListOption("selectionMode", "none");
            this.option({
              selectedItemKey: void 0,
              selectedItem: void 0
            });
            this._actionButtonOptionChanged({
              text: this.option("text")
            });
          }
        },
        _updateItemCollection: function _updateItemCollection(optionName) {
          var _this229 = this;
          var selectedItemKey = this.option("selectedItemKey");
          this._setListOption("selectedItem", null);
          this._setWidgetOption("_list", [optionName]);
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_15__.isDefined)(selectedItemKey)) {
            this._loadSelectedItem().done(function (selectedItem) {
              _this229._setListOption("selectedItemKeys", [selectedItemKey]);
              _this229._setListOption("selectedItem", selectedItem);
            }).fail(function (error) {
              _this229._setListOption("selectedItemKeys", []);
            }).always(this._updateActionButton.bind(this));
          }
        },
        _updateDataSource: function _updateDataSource() {
          var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();
          this._dataSource = void 0;
          this._itemsToDataSource(items);
          this._updateKeyExpr();
        },
        _updateKeyExpr: function _updateKeyExpr() {
          this._compileKeyGetter();
          this._setListOption("keyExpr", this._getKey());
        },
        focus: function focus() {
          this._buttonGroup.focus();
        },
        _optionChanged: function _optionChanged(args) {
          var _this$_popup;
          var name = args.name,
            value = args.value;
          switch (name) {
            case "useSelectMode":
              this._selectModeChanged(value);
              break;
            case "splitButton":
              this._updateArrowClass();
              this._renderButtonGroup();
              break;
            case "displayExpr":
              this._compileDisplayGetter();
              this._setListOption(name, value);
              this._updateActionButton(this.option("selectedItem"));
              break;
            case "keyExpr":
              this._updateDataSource();
              break;
            case "buttonGroupOptions":
              this._innerWidgetOptionChanged(this._buttonGroup, args);
              break;
            case "dropDownOptions":
              if ("dropDownOptions.visible" === args.fullName) {
                break;
              }
              if (void 0 !== args.value.visible) {
                delete args.value.visible;
              }
              this._popupOptionChanged(args);
              this._innerWidgetOptionChanged(this._popup, args);
              break;
            case "opened":
              this.toggle(value);
              break;
            case "focusStateEnabled":
            case "hoverStateEnabled":
              this._setListOption(name, value);
              this._buttonGroup.option(name, value);
              this.callBase(args);
              break;
            case "items":
              this._updateDataSource(this.option("items"));
              this._updateItemCollection(name);
              break;
            case "dataSource":
              if (Array.isArray(value)) {
                this._updateDataSource(this.option("dataSource"));
              } else {
                this._initDataSource();
                this._updateKeyExpr();
              }
              this._updateItemCollection(name);
              break;
            case "icon":
            case "text":
              this._actionButtonOptionChanged(args);
              break;
            case "showArrowIcon":
              this._updateArrowClass();
              this._renderButtonGroup();
              this._popup && this._popup.repaint();
              break;
            case "width":
            case "height":
              this.callBase(args);
              null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();
              break;
            case "stylingMode":
              this._buttonGroup.option(name, value);
              break;
            case "itemTemplate":
            case "grouped":
            case "noDataText":
            case "groupTemplate":
            case "wrapItemText":
            case "useItemTextAsTitle":
              this._setListOption(name, value);
              break;
            case "dropDownContentTemplate":
              this._renderContent();
              break;
            case "selectedItemKey":
              this._selectedItemKeyChanged(value);
              break;
            case "selectedItem":
              break;
            case "onItemClick":
              this._createItemClickAction();
              break;
            case "onButtonClick":
              this._createActionClickAction();
              break;
            case "onSelectionChanged":
              this._createSelectionChangedAction();
              break;
            case "deferRendering":
              this.toggle(this.option("opened"));
              break;
            case "tabIndex":
              this._buttonGroup.option(name, value);
              break;
            default:
              this.callBase(args);
          }
        }
      }).include(_data_helper__WEBPACK_IMPORTED_MODULE_10__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__["default"])("dxDropDownButton", DropDownButton);
      /* harmony default export */
      __webpack_exports__["default"] = DropDownButton;

      /***/
    }),
    /***/19128: (
    /*!************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form.js ***!
      \************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _form_ui_form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./form/ui.form */11534);
      /**
       * DevExtreme (esm/ui/form.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      /* harmony default export */
      __webpack_exports__["default"] = _form_ui_form__WEBPACK_IMPORTED_MODULE_0__["default"];

      /***/
    }),
    /***/12801: (
    /*!***********************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/components/button_item.js ***!
      \***********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"renderButtonItem": function renderButtonItem() {
          return /* binding */_renderButtonItem;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /**
       * DevExtreme (esm/ui/form/components/button_item.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var FIELD_BUTTON_ITEM_CLASS = "dx-field-button-item";
      function _renderButtonItem(_ref) {
        var item = _ref.item,
          $parent = _ref.$parent,
          rootElementCssClassList = _ref.rootElementCssClassList,
          validationGroup = _ref.validationGroup,
          createComponentCallback = _ref.createComponentCallback;
        var $rootElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").appendTo($parent).addClass(rootElementCssClassList.join(" ")).addClass(FIELD_BUTTON_ITEM_CLASS).css("textAlign", convertAlignmentToTextAlign(item.horizontalAlignment));
        $parent.css("justifyContent", convertAlignmentToJustifyContent(item.verticalAlignment));
        var $button = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").appendTo($rootElement);
        return {
          $rootElement: $rootElement,
          buttonInstance: createComponentCallback($button, "dxButton", (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({
            validationGroup: validationGroup
          }, item.buttonOptions))
        };
      }
      function convertAlignmentToTextAlign(horizontalAlignment) {
        return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(horizontalAlignment) ? horizontalAlignment : "right";
      }
      function convertAlignmentToJustifyContent(verticalAlignment) {
        switch (verticalAlignment) {
          case "center":
            return "center";
          case "bottom":
            return "flex-end";
          default:
            return "flex-start";
        }
      }

      /***/
    }),
    /***/28269: (
    /*!**********************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/components/empty_item.js ***!
      \**********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"FIELD_EMPTY_ITEM_CLASS": function FIELD_EMPTY_ITEM_CLASS() {
          return /* binding */_FIELD_EMPTY_ITEM_CLASS;
        },
        /* harmony export */"renderEmptyItem": function renderEmptyItem() {
          return /* binding */_renderEmptyItem;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /**
       * DevExtreme (esm/ui/form/components/empty_item.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _FIELD_EMPTY_ITEM_CLASS = "dx-field-empty-item";
      function _renderEmptyItem(_ref) {
        var $parent = _ref.$parent,
          rootElementCssClassList = _ref.rootElementCssClassList;
        return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(_FIELD_EMPTY_ITEM_CLASS).html("&nbsp;").addClass(rootElementCssClassList.join(" ")).appendTo($parent);
      }

      /***/
    }),
    /***/22608: (
    /*!**********************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/components/field_item.js ***!
      \**********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"FLEX_LAYOUT_CLASS": function FLEX_LAYOUT_CLASS() {
          return /* binding */_FLEX_LAYOUT_CLASS;
        },
        /* harmony export */"FIELD_ITEM_OPTIONAL_CLASS": function FIELD_ITEM_OPTIONAL_CLASS() {
          return /* binding */_FIELD_ITEM_OPTIONAL_CLASS;
        },
        /* harmony export */"FIELD_ITEM_REQUIRED_CLASS": function FIELD_ITEM_REQUIRED_CLASS() {
          return /* binding */_FIELD_ITEM_REQUIRED_CLASS;
        },
        /* harmony export */"FIELD_ITEM_CONTENT_WRAPPER_CLASS": function FIELD_ITEM_CONTENT_WRAPPER_CLASS() {
          return /* binding */_FIELD_ITEM_CONTENT_WRAPPER_CLASS;
        },
        /* harmony export */"FIELD_ITEM_CONTENT_LOCATION_CLASS": function FIELD_ITEM_CONTENT_LOCATION_CLASS() {
          return /* binding */_FIELD_ITEM_CONTENT_LOCATION_CLASS;
        },
        /* harmony export */"FIELD_ITEM_LABEL_ALIGN_CLASS": function FIELD_ITEM_LABEL_ALIGN_CLASS() {
          return /* binding */_FIELD_ITEM_LABEL_ALIGN_CLASS;
        },
        /* harmony export */"FIELD_ITEM_HELP_TEXT_CLASS": function FIELD_ITEM_HELP_TEXT_CLASS() {
          return /* binding */_FIELD_ITEM_HELP_TEXT_CLASS;
        },
        /* harmony export */"LABEL_VERTICAL_ALIGNMENT_CLASS": function LABEL_VERTICAL_ALIGNMENT_CLASS() {
          return /* binding */_LABEL_VERTICAL_ALIGNMENT_CLASS;
        },
        /* harmony export */"LABEL_HORIZONTAL_ALIGNMENT_CLASS": function LABEL_HORIZONTAL_ALIGNMENT_CLASS() {
          return /* binding */_LABEL_HORIZONTAL_ALIGNMENT_CLASS;
        },
        /* harmony export */"TOGGLE_CONTROLS_PADDING_CLASS": function TOGGLE_CONTROLS_PADDING_CLASS() {
          return /* binding */_TOGGLE_CONTROLS_PADDING_CLASS;
        },
        /* harmony export */"renderFieldItem": function renderFieldItem() {
          return /* binding */_renderFieldItem;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../events/core/events_engine */99064);
      /* harmony import */
      var _events_click__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../events/click */38894);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/element */60213);
      /* harmony import */
      var _core_utils_inflector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/utils/inflector */75102);
      /* harmony import */
      var _core_utils_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../../core/utils/string */13089);
      /* harmony import */
      var _themes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../themes */78279);
      /* harmony import */
      var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../widget/ui.errors */42491);
      /* harmony import */
      var _validator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../validator */90015);
      /* harmony import */
      var _constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../constants */73833);
      /* harmony import */
      var _label__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ./label */61028);
      /**
       * DevExtreme (esm/ui/form/components/field_item.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _FLEX_LAYOUT_CLASS = "dx-flex-layout";
      var _FIELD_ITEM_OPTIONAL_CLASS = "dx-field-item-optional";
      var _FIELD_ITEM_REQUIRED_CLASS = "dx-field-item-required";
      var _FIELD_ITEM_CONTENT_WRAPPER_CLASS = "dx-field-item-content-wrapper";
      var _FIELD_ITEM_CONTENT_LOCATION_CLASS = "dx-field-item-content-location-";
      var _FIELD_ITEM_LABEL_ALIGN_CLASS = "dx-field-item-label-align";
      var _FIELD_ITEM_HELP_TEXT_CLASS = "dx-field-item-help-text";
      var _LABEL_VERTICAL_ALIGNMENT_CLASS = "dx-label-v-align";
      var _LABEL_HORIZONTAL_ALIGNMENT_CLASS = "dx-label-h-align";
      var _TOGGLE_CONTROLS_PADDING_CLASS = "dx-toggle-controls-paddings";
      var TEMPLATE_WRAPPER_CLASS = "dx-template-wrapper";
      var VALIDATION_TARGET_CLASS = "dx-validation-target";
      var INVALID_CLASS = "dx-invalid";
      function _renderFieldItem(_ref) {
        var $parent = _ref.$parent,
          rootElementCssClassList = _ref.rootElementCssClassList,
          formOrLayoutManager = _ref.formOrLayoutManager,
          createComponentCallback = _ref.createComponentCallback,
          labelOptions = _ref.labelOptions,
          labelNeedBaselineAlign = _ref.labelNeedBaselineAlign,
          labelLocation = _ref.labelLocation,
          needRenderLabel = _ref.needRenderLabel,
          formLabelLocation = _ref.formLabelLocation,
          item = _ref.item,
          editorOptions = _ref.editorOptions,
          isSimpleItem = _ref.isSimpleItem,
          isRequired = _ref.isRequired,
          template = _ref.template,
          helpID = _ref.helpID,
          labelID = _ref.labelID,
          name = _ref.name,
          helpText = _ref.helpText,
          requiredMessageTemplate = _ref.requiredMessageTemplate,
          validationGroup = _ref.validationGroup;
        var $rootElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(rootElementCssClassList.join(" ")).appendTo($parent);
        $rootElement.addClass(isRequired ? _FIELD_ITEM_REQUIRED_CLASS : _FIELD_ITEM_OPTIONAL_CLASS);
        if (isSimpleItem) {
          $rootElement.addClass(_FLEX_LAYOUT_CLASS);
        }
        if (isSimpleItem && labelNeedBaselineAlign) {
          $rootElement.addClass(_FIELD_ITEM_LABEL_ALIGN_CLASS);
        }
        var $fieldEditorContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>");
        $fieldEditorContainer.data("dx-form-item", item);
        $fieldEditorContainer.addClass(_constants__WEBPACK_IMPORTED_MODULE_9__.FIELD_ITEM_CONTENT_CLASS).addClass(_FIELD_ITEM_CONTENT_LOCATION_CLASS + {
          right: "left",
          left: "right",
          top: "bottom"
        }[formLabelLocation]);
        var $label = null;
        if (needRenderLabel) {
          if (labelOptions.labelTemplate) {
            labelOptions.labelTemplateData = getTemplateData(item, editorOptions, formOrLayoutManager);
          }
          $label = (0, _label__WEBPACK_IMPORTED_MODULE_10__.renderLabel)(labelOptions);
        }
        if ($label) {
          var editorType = item.editorType;
          $rootElement.append($label);
          if ("top" === labelLocation || "left" === labelLocation) {
            $rootElement.append($fieldEditorContainer);
          }
          if ("right" === labelLocation) {
            $rootElement.prepend($fieldEditorContainer);
          }
          if ("top" === labelLocation) {
            $rootElement.addClass(_LABEL_VERTICAL_ALIGNMENT_CLASS);
          } else {
            $rootElement.addClass(_LABEL_HORIZONTAL_ALIGNMENT_CLASS);
          }
          if ("dxCheckBox" === editorType || "dxSwitch" === editorType) {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__["default"].on($label, _events_click__WEBPACK_IMPORTED_MODULE_2__.name, function () {
              _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__["default"].trigger($fieldEditorContainer.children(), _events_click__WEBPACK_IMPORTED_MODULE_2__.name);
            });
          }
          var isToggleControls = ["dxCheckBox", "dxSwitch", "dxRadioGroup"].includes(editorType);
          var labelAlignment = labelOptions.alignment;
          var isLabelAlignmentLeft = "left" === labelAlignment || !labelAlignment;
          var hasNotTemplate = !template;
          var isLabelOnTop = "top" === labelLocation;
          if (hasNotTemplate && isToggleControls && isLabelOnTop && isLabelAlignmentLeft) {
            $fieldEditorContainer.addClass(_TOGGLE_CONTROLS_PADDING_CLASS);
          }
        } else {
          $rootElement.append($fieldEditorContainer);
        }
        var widgetInstance;
        if (template) {
          template.render({
            container: (0, _core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)($fieldEditorContainer),
            model: getTemplateData(item, editorOptions, formOrLayoutManager),
            onRendered: function onRendered() {
              var $validationTarget = getValidationTarget($fieldEditorContainer);
              var validationTargetInstance = tryGetValidationTargetInstance($validationTarget);
              subscribeWrapperInvalidClassToggle(validationTargetInstance);
            }
          });
        } else {
          var $div = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").appendTo($fieldEditorContainer);
          try {
            widgetInstance = createComponentCallback($div, item.editorType, editorOptions);
            widgetInstance.setAria("describedby", helpID);
            if (labelID) {
              widgetInstance.setAria("labelledby", labelID);
            }
            widgetInstance.setAria("required", isRequired);
          } catch (e) {
            _widget_ui_errors__WEBPACK_IMPORTED_MODULE_7__["default"].log("E1035", e.message);
          }
        }
        var $validationTarget = getValidationTarget($fieldEditorContainer);
        var validationTargetInstance = $validationTarget && $validationTarget.data(VALIDATION_TARGET_CLASS);
        if (validationTargetInstance) {
          var isItemHaveCustomLabel = item.label && item.label.text;
          var itemName = isItemHaveCustomLabel ? null : name;
          var fieldName = isItemHaveCustomLabel ? item.label.text : itemName && (0, _core_utils_inflector__WEBPACK_IMPORTED_MODULE_4__.captionize)(itemName);
          var validationRules;
          if (isSimpleItem) {
            if (item.validationRules) {
              validationRules = item.validationRules;
            } else {
              var requiredMessage = (0, _core_utils_string__WEBPACK_IMPORTED_MODULE_5__.format)(requiredMessageTemplate, fieldName || "");
              validationRules = item.isRequired ? [{
                type: "required",
                message: requiredMessage
              }] : null;
            }
          }
          if (Array.isArray(validationRules) && validationRules.length) {
            createComponentCallback($validationTarget, _validator__WEBPACK_IMPORTED_MODULE_8__["default"], {
              validationRules: validationRules,
              validationGroup: validationGroup,
              dataGetter: function dataGetter() {
                return {
                  formItem: item
                };
              }
            });
          }
          subscribeWrapperInvalidClassToggle(validationTargetInstance);
        }
        if (helpText && isSimpleItem) {
          var $editorParent = $fieldEditorContainer.parent();
          $editorParent.append((0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(_FIELD_ITEM_CONTENT_WRAPPER_CLASS).append($fieldEditorContainer).append((0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(_FIELD_ITEM_HELP_TEXT_CLASS).attr("id", helpID).text(helpText)));
        }
        return {
          $fieldEditorContainer: $fieldEditorContainer,
          $rootElement: $rootElement,
          widgetInstance: widgetInstance
        };
      }
      function getValidationTarget($fieldEditorContainer) {
        var $editor = $fieldEditorContainer.children().first();
        return $editor.hasClass(TEMPLATE_WRAPPER_CLASS) ? $editor.children().first() : $editor;
      }
      function tryGetValidationTargetInstance($validationTarget) {
        var _$validationTarget$pa, _$validationTarget$pa2;
        return (null === $validationTarget || void 0 === $validationTarget ? void 0 : $validationTarget.data(VALIDATION_TARGET_CLASS)) || (null === $validationTarget || void 0 === $validationTarget ? void 0 : null === (_$validationTarget$pa = $validationTarget.parent) || void 0 === _$validationTarget$pa ? void 0 : null === (_$validationTarget$pa2 = _$validationTarget$pa.call($validationTarget)) || void 0 === _$validationTarget$pa2 ? void 0 : _$validationTarget$pa2.data(VALIDATION_TARGET_CLASS));
      }
      function subscribeWrapperInvalidClassToggle(validationTargetInstance) {
        if (validationTargetInstance && (0, _themes__WEBPACK_IMPORTED_MODULE_6__.isMaterial)()) {
          var wrapperClass = ".".concat(_FIELD_ITEM_CONTENT_WRAPPER_CLASS);
          var toggleInvalidClass = function toggleInvalidClass(_ref2) {
            var element = _ref2.element,
              component = _ref2.component;
            var _component$option = component.option(),
              isValid = _component$option.isValid,
              validationMessageMode = _component$option.validationMessageMode;
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(element).parents(wrapperClass).toggleClass(INVALID_CLASS, false === isValid && (component._isFocused() || "always" === validationMessageMode));
          };
          validationTargetInstance.on("optionChanged", function (e) {
            if ("isValid" !== e.name) {
              return;
            }
            toggleInvalidClass(e);
          });
          validationTargetInstance.on("focusIn", toggleInvalidClass).on("focusOut", toggleInvalidClass).on("enterKey", toggleInvalidClass);
        }
      }
      function getTemplateData(item, editorOptions, formOrLayoutManager) {
        return {
          dataField: item.dataField,
          editorType: item.editorType,
          editorOptions: editorOptions,
          component: formOrLayoutManager,
          name: item.name
        };
      }

      /***/
    }),
    /***/61028: (
    /*!*****************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/components/label.js ***!
      \*****************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"GET_LABEL_WIDTH_BY_TEXT_CLASS": function GET_LABEL_WIDTH_BY_TEXT_CLASS() {
          return /* binding */_GET_LABEL_WIDTH_BY_TEXT_CLASS;
        },
        /* harmony export */"FIELD_ITEM_REQUIRED_MARK_CLASS": function FIELD_ITEM_REQUIRED_MARK_CLASS() {
          return /* binding */_FIELD_ITEM_REQUIRED_MARK_CLASS;
        },
        /* harmony export */"FIELD_ITEM_LABEL_LOCATION_CLASS": function FIELD_ITEM_LABEL_LOCATION_CLASS() {
          return /* binding */_FIELD_ITEM_LABEL_LOCATION_CLASS;
        },
        /* harmony export */"FIELD_ITEM_OPTIONAL_MARK_CLASS": function FIELD_ITEM_OPTIONAL_MARK_CLASS() {
          return /* binding */_FIELD_ITEM_OPTIONAL_MARK_CLASS;
        },
        /* harmony export */"FIELD_ITEM_LABEL_TEXT_CLASS": function FIELD_ITEM_LABEL_TEXT_CLASS() {
          return /* binding */_FIELD_ITEM_LABEL_TEXT_CLASS;
        },
        /* harmony export */"renderLabel": function renderLabel() {
          return /* binding */_renderLabel;
        },
        /* harmony export */"setLabelWidthByMaxLabelWidth": function setLabelWidthByMaxLabelWidth() {
          return /* binding */_setLabelWidthByMaxLabelWidth;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/type */33275);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/element */60213);
      /* harmony import */
      var _ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../ui.form.layout_manager.utils */8838);
      /* harmony import */
      var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../constants */73833);
      /**
       * DevExtreme (esm/ui/form/components/label.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _GET_LABEL_WIDTH_BY_TEXT_CLASS = "dx-layout-manager-hidden-label";
      var _FIELD_ITEM_REQUIRED_MARK_CLASS = "dx-field-item-required-mark";
      var _FIELD_ITEM_LABEL_LOCATION_CLASS = "dx-field-item-label-location-";
      var _FIELD_ITEM_OPTIONAL_MARK_CLASS = "dx-field-item-optional-mark";
      var _FIELD_ITEM_LABEL_TEXT_CLASS = "dx-field-item-label-text";
      function _renderLabel(_ref) {
        var text = _ref.text,
          id = _ref.id,
          location = _ref.location,
          alignment = _ref.alignment,
          _ref$labelID = _ref.labelID,
          labelID = _ref$labelID === void 0 ? null : _ref$labelID,
          _ref$markOptions = _ref.markOptions,
          markOptions = _ref$markOptions === void 0 ? {} : _ref$markOptions,
          labelTemplate = _ref.labelTemplate,
          labelTemplateData = _ref.labelTemplateData,
          onLabelTemplateRendered = _ref.onLabelTemplateRendered;
        if ((!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(text) || text.length <= 0) && !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(labelTemplate)) {
          return null;
        }
        var $label = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<label>").addClass(_constants__WEBPACK_IMPORTED_MODULE_4__.FIELD_ITEM_LABEL_CLASS + " " + _FIELD_ITEM_LABEL_LOCATION_CLASS + location).attr("for", id).attr("id", labelID).css("textAlign", alignment);
        var $labelContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<span>").addClass(_constants__WEBPACK_IMPORTED_MODULE_4__.FIELD_ITEM_LABEL_CONTENT_CLASS);
        var $labelContent = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<span>").addClass(_FIELD_ITEM_LABEL_TEXT_CLASS).text(text);
        if (labelTemplate) {
          $labelContent = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass("dx-field-item-custom-label-content");
          labelTemplateData.text = text;
          labelTemplate.render({
            container: (0, _core_element__WEBPACK_IMPORTED_MODULE_2__.getPublicElement)($labelContent),
            model: labelTemplateData,
            onRendered: function onRendered() {
              null === onLabelTemplateRendered || void 0 === onLabelTemplateRendered ? void 0 : onLabelTemplateRendered();
            }
          });
        }
        return $label.append($labelContainer.append($labelContent, _renderLabelMark(markOptions)));
      }
      function _renderLabelMark(markOptions) {
        var markText = (0, _ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_3__.getLabelMarkText)(markOptions);
        if ("" === markText) {
          return null;
        }
        return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<span>").addClass(markOptions.showRequiredMark ? _FIELD_ITEM_REQUIRED_MARK_CLASS : _FIELD_ITEM_OPTIONAL_MARK_CLASS).text(markText);
      }
      function _setLabelWidthByMaxLabelWidth($targetContainer, labelsSelector, labelMarkOptions) {
        var FIELD_ITEM_LABEL_CONTENT_CLASS_Selector = "".concat(labelsSelector, " > .").concat(_constants__WEBPACK_IMPORTED_MODULE_4__.FIELD_ITEM_LABEL_CLASS, ":not(.").concat(_FIELD_ITEM_LABEL_LOCATION_CLASS, "top) > .").concat(_constants__WEBPACK_IMPORTED_MODULE_4__.FIELD_ITEM_LABEL_CONTENT_CLASS);
        var $FIELD_ITEM_LABEL_CONTENT_CLASS_Items = $targetContainer.find(FIELD_ITEM_LABEL_CONTENT_CLASS_Selector);
        var FIELD_ITEM_LABEL_CONTENT_CLASS_Length = $FIELD_ITEM_LABEL_CONTENT_CLASS_Items.length;
        var labelWidth;
        var i;
        var maxWidth = 0;
        for (i = 0; i < FIELD_ITEM_LABEL_CONTENT_CLASS_Length; i++) {
          labelWidth = getLabelWidthByHTML($FIELD_ITEM_LABEL_CONTENT_CLASS_Items[i]);
          if (labelWidth > maxWidth) {
            maxWidth = labelWidth;
          }
        }
        for (i = 0; i < FIELD_ITEM_LABEL_CONTENT_CLASS_Length; i++) {
          $FIELD_ITEM_LABEL_CONTENT_CLASS_Items[i].style.width = maxWidth + "px";
        }
      }
      function getLabelWidthByHTML(labelContent) {
        var result = 0;
        var itemsCount = labelContent.children.length;
        for (var i = 0; i < itemsCount; i++) {
          var child = labelContent.children[i];
          result += child.offsetWidth;
        }
        return result;
      }

      /***/
    }),
    /***/73833: (
    /*!**********************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/constants.js ***!
      \**********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"WIDGET_CLASS": function WIDGET_CLASS() {
          return /* binding */_WIDGET_CLASS;
        },
        /* harmony export */"FORM_CLASS": function FORM_CLASS() {
          return /* binding */_FORM_CLASS;
        },
        /* harmony export */"FORM_GROUP_CLASS": function FORM_GROUP_CLASS() {
          return /* binding */_FORM_GROUP_CLASS;
        },
        /* harmony export */"FORM_GROUP_CAPTION_CLASS": function FORM_GROUP_CAPTION_CLASS() {
          return /* binding */_FORM_GROUP_CAPTION_CLASS;
        },
        /* harmony export */"FORM_FIELD_ITEM_COL_CLASS": function FORM_FIELD_ITEM_COL_CLASS() {
          return /* binding */_FORM_FIELD_ITEM_COL_CLASS;
        },
        /* harmony export */"FIELD_ITEM_CLASS": function FIELD_ITEM_CLASS() {
          return /* binding */_FIELD_ITEM_CLASS;
        },
        /* harmony export */"LAYOUT_MANAGER_ONE_COLUMN": function LAYOUT_MANAGER_ONE_COLUMN() {
          return /* binding */_LAYOUT_MANAGER_ONE_COLUMN;
        },
        /* harmony export */"FIELD_ITEM_LABEL_CONTENT_CLASS": function FIELD_ITEM_LABEL_CONTENT_CLASS() {
          return /* binding */_FIELD_ITEM_LABEL_CONTENT_CLASS;
        },
        /* harmony export */"FORM_LAYOUT_MANAGER_CLASS": function FORM_LAYOUT_MANAGER_CLASS() {
          return /* binding */_FORM_LAYOUT_MANAGER_CLASS;
        },
        /* harmony export */"FIELD_ITEM_LABEL_CLASS": function FIELD_ITEM_LABEL_CLASS() {
          return /* binding */_FIELD_ITEM_LABEL_CLASS;
        },
        /* harmony export */"FIELD_ITEM_CONTENT_CLASS": function FIELD_ITEM_CONTENT_CLASS() {
          return /* binding */_FIELD_ITEM_CONTENT_CLASS;
        },
        /* harmony export */"SINGLE_COLUMN_ITEM_CONTENT": function SINGLE_COLUMN_ITEM_CONTENT() {
          return /* binding */_SINGLE_COLUMN_ITEM_CONTENT;
        },
        /* harmony export */"ROOT_SIMPLE_ITEM_CLASS": function ROOT_SIMPLE_ITEM_CLASS() {
          return /* binding */_ROOT_SIMPLE_ITEM_CLASS;
        },
        /* harmony export */"FORM_GROUP_CONTENT_CLASS": function FORM_GROUP_CONTENT_CLASS() {
          return /* binding */_FORM_GROUP_CONTENT_CLASS;
        },
        /* harmony export */"FIELD_ITEM_CONTENT_HAS_GROUP_CLASS": function FIELD_ITEM_CONTENT_HAS_GROUP_CLASS() {
          return /* binding */_FIELD_ITEM_CONTENT_HAS_GROUP_CLASS;
        },
        /* harmony export */"FIELD_ITEM_CONTENT_HAS_TABS_CLASS": function FIELD_ITEM_CONTENT_HAS_TABS_CLASS() {
          return /* binding */_FIELD_ITEM_CONTENT_HAS_TABS_CLASS;
        },
        /* harmony export */"FORM_GROUP_WITH_CAPTION_CLASS": function FORM_GROUP_WITH_CAPTION_CLASS() {
          return /* binding */_FORM_GROUP_WITH_CAPTION_CLASS;
        },
        /* harmony export */"FIELD_ITEM_TAB_CLASS": function FIELD_ITEM_TAB_CLASS() {
          return /* binding */_FIELD_ITEM_TAB_CLASS;
        },
        /* harmony export */"GROUP_COL_COUNT_CLASS": function GROUP_COL_COUNT_CLASS() {
          return /* binding */_GROUP_COL_COUNT_CLASS;
        },
        /* harmony export */"GROUP_COL_COUNT_ATTR": function GROUP_COL_COUNT_ATTR() {
          return /* binding */_GROUP_COL_COUNT_ATTR;
        },
        /* harmony export */"FORM_VALIDATION_SUMMARY": function FORM_VALIDATION_SUMMARY() {
          return /* binding */_FORM_VALIDATION_SUMMARY;
        },
        /* harmony export */"FORM_UNDERLINED_CLASS": function FORM_UNDERLINED_CLASS() {
          return /* binding */_FORM_UNDERLINED_CLASS;
        },
        /* harmony export */"SIMPLE_ITEM_TYPE": function SIMPLE_ITEM_TYPE() {
          return /* binding */_SIMPLE_ITEM_TYPE;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/ui/form/constants.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _WIDGET_CLASS = "dx-widget";
      var _FORM_CLASS = "dx-form";
      var _FORM_GROUP_CLASS = "dx-form-group";
      var _FORM_GROUP_CAPTION_CLASS = "dx-form-group-caption";
      var _FORM_FIELD_ITEM_COL_CLASS = "dx-col-";
      var _FIELD_ITEM_CLASS = "dx-field-item";
      var _LAYOUT_MANAGER_ONE_COLUMN = "dx-layout-manager-one-col";
      var _FIELD_ITEM_LABEL_CONTENT_CLASS = "dx-field-item-label-content";
      var _FORM_LAYOUT_MANAGER_CLASS = "dx-layout-manager";
      var _FIELD_ITEM_LABEL_CLASS = "dx-field-item-label";
      var _FIELD_ITEM_CONTENT_CLASS = "dx-field-item-content";
      var _SINGLE_COLUMN_ITEM_CONTENT = "dx-single-column-item-content";
      var _ROOT_SIMPLE_ITEM_CLASS = "dx-root-simple-item";
      var _FORM_GROUP_CONTENT_CLASS = "dx-form-group-content";
      var _FIELD_ITEM_CONTENT_HAS_GROUP_CLASS = "dx-field-item-has-group";
      var _FIELD_ITEM_CONTENT_HAS_TABS_CLASS = "dx-field-item-has-tabs";
      var _FORM_GROUP_WITH_CAPTION_CLASS = "dx-form-group-with-caption";
      var _FIELD_ITEM_TAB_CLASS = "dx-field-item-tab";
      var _GROUP_COL_COUNT_CLASS = "dx-group-colcount-";
      var _GROUP_COL_COUNT_ATTR = "group-col-count";
      var _FORM_VALIDATION_SUMMARY = "dx-form-validation-summary";
      var _FORM_UNDERLINED_CLASS = "dx-form-styling-mode-underlined";
      var _SIMPLE_ITEM_TYPE = "simple";

      /***/
    }),
    /***/27425: (
    /*!***************************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/ui.form.item_option_action.js ***!
      \***************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */ItemOptionAction;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/class */72627);
      /**
       * DevExtreme (esm/ui/form/ui.form.item_option_action.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var ItemOptionAction = /*#__PURE__*/function () {
        function ItemOptionAction(options) {
          _classCallCheck(this, ItemOptionAction);
          this._options = options;
          this._itemsRunTimeInfo = this._options.itemsRunTimeInfo;
        }
        _createClass(ItemOptionAction, [{
          key: "findInstance",
          value: function findInstance() {
            return this._itemsRunTimeInfo.findWidgetInstanceByItem(this._options.item);
          }
        }, {
          key: "findItemContainer",
          value: function findItemContainer() {
            return this._itemsRunTimeInfo.findItemContainerByItem(this._options.item);
          }
        }, {
          key: "findPreparedItem",
          value: function findPreparedItem() {
            return this._itemsRunTimeInfo.findPreparedItemByItem(this._options.item);
          }
        }, {
          key: "tryExecute",
          value: function tryExecute() {
            _core_class__WEBPACK_IMPORTED_MODULE_0__["default"]["abstract"]();
          }
        }]);
        return ItemOptionAction;
      }();
      /***/
    }),
    /***/22540: (
    /*!*****************************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/ui.form.item_options_actions.js ***!
      \*****************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./ui.form.item_option_action */27425);
      /* harmony import */
      var _core_element_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/element_data */25694);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _ui_form_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./ui.form.utils */2034);
      /**
       * DevExtreme (esm/ui/form/ui.form.item_options_actions.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var WidgetOptionItemOptionAction = /*#__PURE__*/function (_ui_form_item_option_) {
        _inherits(WidgetOptionItemOptionAction, _ui_form_item_option_);
        function WidgetOptionItemOptionAction() {
          _classCallCheck(this, WidgetOptionItemOptionAction);
          return _callSuper(this, WidgetOptionItemOptionAction, arguments);
        }
        _createClass(WidgetOptionItemOptionAction, [{
          key: "tryExecute",
          value: function tryExecute() {
            var value = this._options.value;
            var instance = this.findInstance();
            if (instance) {
              instance.option(value);
              return true;
            }
            return false;
          }
        }]);
        return WidgetOptionItemOptionAction;
      }(_ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__["default"]);
      var TabOptionItemOptionAction = /*#__PURE__*/function (_ui_form_item_option_2) {
        _inherits(TabOptionItemOptionAction, _ui_form_item_option_2);
        function TabOptionItemOptionAction() {
          _classCallCheck(this, TabOptionItemOptionAction);
          return _callSuper(this, TabOptionItemOptionAction, arguments);
        }
        _createClass(TabOptionItemOptionAction, [{
          key: "tryExecute",
          value: function tryExecute() {
            var tabPanel = this.findInstance();
            if (tabPanel) {
              var _this$_options = this._options,
                optionName = _this$_options.optionName,
                item = _this$_options.item,
                value = _this$_options.value;
              var itemIndex = this._itemsRunTimeInfo.findItemIndexByItem(item);
              if (itemIndex >= 0) {
                tabPanel.option((0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_3__.getFullOptionName)("items[".concat(itemIndex, "]"), optionName), value);
                return true;
              }
            }
            return false;
          }
        }]);
        return TabOptionItemOptionAction;
      }(_ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__["default"]);
      var SimpleItemTemplateChangedAction = /*#__PURE__*/function (_ui_form_item_option_3) {
        _inherits(SimpleItemTemplateChangedAction, _ui_form_item_option_3);
        function SimpleItemTemplateChangedAction() {
          _classCallCheck(this, SimpleItemTemplateChangedAction);
          return _callSuper(this, SimpleItemTemplateChangedAction, arguments);
        }
        _createClass(SimpleItemTemplateChangedAction, [{
          key: "tryExecute",
          value: function tryExecute() {
            return false;
          }
        }]);
        return SimpleItemTemplateChangedAction;
      }(_ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__["default"]);
      var GroupItemTemplateChangedAction = /*#__PURE__*/function (_ui_form_item_option_4) {
        _inherits(GroupItemTemplateChangedAction, _ui_form_item_option_4);
        function GroupItemTemplateChangedAction() {
          _classCallCheck(this, GroupItemTemplateChangedAction);
          return _callSuper(this, GroupItemTemplateChangedAction, arguments);
        }
        _createClass(GroupItemTemplateChangedAction, [{
          key: "tryExecute",
          value: function tryExecute() {
            var preparedItem = this.findPreparedItem();
            if (null != preparedItem && preparedItem._prepareGroupItemTemplate && preparedItem._renderGroupContentTemplate) {
              preparedItem._prepareGroupItemTemplate(this._options.item.template);
              preparedItem._renderGroupContentTemplate();
              return true;
            }
            return false;
          }
        }]);
        return GroupItemTemplateChangedAction;
      }(_ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__["default"]);
      var TabsOptionItemOptionAction = /*#__PURE__*/function (_ui_form_item_option_5) {
        _inherits(TabsOptionItemOptionAction, _ui_form_item_option_5);
        function TabsOptionItemOptionAction() {
          _classCallCheck(this, TabsOptionItemOptionAction);
          return _callSuper(this, TabsOptionItemOptionAction, arguments);
        }
        _createClass(TabsOptionItemOptionAction, [{
          key: "tryExecute",
          value: function tryExecute() {
            var tabPanel = this.findInstance();
            if (tabPanel) {
              var value = this._options.value;
              tabPanel.option("dataSource", value);
              return true;
            }
            return false;
          }
        }]);
        return TabsOptionItemOptionAction;
      }(_ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__["default"]);
      var ValidationRulesItemOptionAction = /*#__PURE__*/function (_ui_form_item_option_6) {
        _inherits(ValidationRulesItemOptionAction, _ui_form_item_option_6);
        function ValidationRulesItemOptionAction() {
          _classCallCheck(this, ValidationRulesItemOptionAction);
          return _callSuper(this, ValidationRulesItemOptionAction, arguments);
        }
        _createClass(ValidationRulesItemOptionAction, [{
          key: "tryExecute",
          value: function tryExecute() {
            var item = this._options.item;
            var instance = this.findInstance();
            var validator = instance && (0, _core_element_data__WEBPACK_IMPORTED_MODULE_1__.data)(instance.$element()[0], "dxValidator");
            if (validator && item) {
              var filterRequired = function filterRequired(item) {
                return "required" === item.type;
              };
              var oldContainsRequired = (validator.option("validationRules") || []).some(filterRequired);
              var newContainsRequired = (item.validationRules || []).some(filterRequired);
              if (!oldContainsRequired && !newContainsRequired || oldContainsRequired && newContainsRequired) {
                validator.option("validationRules", item.validationRules);
                return true;
              }
            }
            return false;
          }
        }]);
        return ValidationRulesItemOptionAction;
      }(_ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__["default"]);
      var CssClassItemOptionAction = /*#__PURE__*/function (_ui_form_item_option_7) {
        _inherits(CssClassItemOptionAction, _ui_form_item_option_7);
        function CssClassItemOptionAction() {
          _classCallCheck(this, CssClassItemOptionAction);
          return _callSuper(this, CssClassItemOptionAction, arguments);
        }
        _createClass(CssClassItemOptionAction, [{
          key: "tryExecute",
          value: function tryExecute() {
            var $itemContainer = this.findItemContainer();
            var _this$_options2 = this._options,
              previousValue = _this$_options2.previousValue,
              value = _this$_options2.value;
            if ($itemContainer) {
              $itemContainer.removeClass(previousValue).addClass(value);
              return true;
            }
            return false;
          }
        }]);
        return CssClassItemOptionAction;
      }(_ui_form_item_option_action__WEBPACK_IMPORTED_MODULE_0__["default"]);
      var tryCreateItemOptionAction = function tryCreateItemOptionAction(optionName, itemActionOptions) {
        switch (optionName) {
          case "editorOptions":
          case "buttonOptions":
            return new WidgetOptionItemOptionAction(itemActionOptions);
          case "validationRules":
            return new ValidationRulesItemOptionAction(itemActionOptions);
          case "cssClass":
            return new CssClassItemOptionAction(itemActionOptions);
          case "badge":
          case "disabled":
          case "icon":
          case "tabTemplate":
          case "title":
            return new TabOptionItemOptionAction((0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(itemActionOptions, {
              optionName: optionName
            }));
          case "tabs":
            return new TabsOptionItemOptionAction(itemActionOptions);
          case "template":
            var _itemActionOptions$it, _itemActionOptions$it2, _itemActionOptions$it3;
            var itemType = null !== (_itemActionOptions$it = null === itemActionOptions || void 0 === itemActionOptions ? void 0 : null === (_itemActionOptions$it2 = itemActionOptions.item) || void 0 === _itemActionOptions$it2 ? void 0 : _itemActionOptions$it2.itemType) && void 0 !== _itemActionOptions$it ? _itemActionOptions$it : null === (_itemActionOptions$it3 = itemActionOptions.itemsRunTimeInfo.findPreparedItemByItem(null === itemActionOptions || void 0 === itemActionOptions ? void 0 : itemActionOptions.item)) || void 0 === _itemActionOptions$it3 ? void 0 : _itemActionOptions$it3.itemType;
            if ("simple" === itemType) {
              return new SimpleItemTemplateChangedAction(itemActionOptions);
            } else if ("group" === itemType) {
              return new GroupItemTemplateChangedAction(itemActionOptions);
            }
            return new TabOptionItemOptionAction((0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(itemActionOptions, {
              optionName: optionName
            }));
          default:
            return null;
        }
      };
      /* harmony default export */
      __webpack_exports__["default"] = tryCreateItemOptionAction;

      /***/
    }),
    /***/75646: (
    /*!***************************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/ui.form.items_runtime_info.js ***!
      \***************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */FormItemsRunTimeInfo;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_guid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/guid */22203);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /**
       * DevExtreme (esm/ui/form/ui.form.items_runtime_info.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var FormItemsRunTimeInfo = /*#__PURE__*/function () {
        function FormItemsRunTimeInfo() {
          _classCallCheck(this, FormItemsRunTimeInfo);
          this._map = {};
        }
        _createClass(FormItemsRunTimeInfo, [{
          key: "_findWidgetInstance",
          value: function _findWidgetInstance(condition) {
            var result;
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(this._map, function (guid, _ref) {
              var widgetInstance = _ref.widgetInstance,
                item = _ref.item;
              if (condition(item)) {
                result = widgetInstance;
                return false;
              }
            });
            return result;
          }
        }, {
          key: "_findFieldByCondition",
          value: function _findFieldByCondition(callback, valueExpr) {
            var result;
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(this._map, function (key, value) {
              if (callback(value)) {
                result = "guid" === valueExpr ? key : value[valueExpr];
                return false;
              }
            });
            return result;
          }
        }, {
          key: "clear",
          value: function clear() {
            this._map = {};
          }
        }, {
          key: "removeItemsByItems",
          value: function removeItemsByItems(itemsRunTimeInfo) {
            var _this230 = this;
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(itemsRunTimeInfo.getItems(), function (guid) {
              return _this230.removeItemByKey(guid);
            });
          }
        }, {
          key: "removeItemByKey",
          value: function removeItemByKey(key) {
            delete this._map[key];
          }
        }, {
          key: "add",
          value: function add(options) {
            var key = options.guid || new _core_guid__WEBPACK_IMPORTED_MODULE_0__["default"]();
            this._map[key] = options;
            return key;
          }
        }, {
          key: "addItemsOrExtendFrom",
          value: function addItemsOrExtendFrom(itemsRunTimeInfo) {
            var _this231 = this;
            itemsRunTimeInfo.each(function (key, itemRunTimeInfo) {
              if (_this231._map[key]) {
                if (itemRunTimeInfo.widgetInstance) {
                  _this231._map[key].widgetInstance = itemRunTimeInfo.widgetInstance;
                }
                _this231._map[key].$itemContainer = itemRunTimeInfo.$itemContainer;
              } else {
                _this231.add({
                  item: itemRunTimeInfo.item,
                  widgetInstance: itemRunTimeInfo.widgetInstance,
                  guid: key,
                  $itemContainer: itemRunTimeInfo.$itemContainer
                });
              }
            });
          }
        }, {
          key: "extendRunTimeItemInfoByKey",
          value: function extendRunTimeItemInfoByKey(key, options) {
            if (this._map[key]) {
              this._map[key] = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)(this._map[key], options);
            }
          }
        }, {
          key: "findWidgetInstanceByItem",
          value: function findWidgetInstanceByItem(item) {
            return this._findWidgetInstance(function (storedItem) {
              return storedItem === item;
            });
          }
        }, {
          key: "findGroupOrTabLayoutManagerByPath",
          value: function findGroupOrTabLayoutManagerByPath(targetPath) {
            return this._findFieldByCondition(function (_ref2) {
              var path = _ref2.path;
              return path === targetPath;
            }, "layoutManager");
          }
        }, {
          key: "findKeyByPath",
          value: function findKeyByPath(targetPath) {
            return this._findFieldByCondition(function (_ref3) {
              var path = _ref3.path;
              return path === targetPath;
            }, "guid");
          }
        }, {
          key: "findWidgetInstanceByName",
          value: function findWidgetInstanceByName(name) {
            return this._findWidgetInstance(function (item) {
              return name === item.name;
            });
          }
        }, {
          key: "findWidgetInstanceByDataField",
          value: function findWidgetInstanceByDataField(dataField) {
            return this._findWidgetInstance(function (item) {
              return dataField === ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isString)(item) ? item : item.dataField);
            });
          }
        }, {
          key: "findItemContainerByItem",
          value: function findItemContainerByItem(item) {
            for (var key in this._map) {
              if (this._map[key].item === item) {
                return this._map[key].$itemContainer;
              }
            }
            return null;
          }
        }, {
          key: "findItemIndexByItem",
          value: function findItemIndexByItem(targetItem) {
            return this._findFieldByCondition(function (_ref4) {
              var item = _ref4.item;
              return item === targetItem;
            }, "itemIndex");
          }
        }, {
          key: "findPreparedItemByItem",
          value: function findPreparedItemByItem(item) {
            return this._findFieldByCondition(function (_ref5) {
              var currentItem = _ref5.item;
              return currentItem === item;
            }, "preparedItem");
          }
        }, {
          key: "getItems",
          value: function getItems() {
            return this._map;
          }
        }, {
          key: "each",
          value: function each(handler) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(this._map, function (key, itemRunTimeInfo) {
              handler(key, itemRunTimeInfo);
            });
          }
        }, {
          key: "removeItemsByPathStartWith",
          value: function removeItemsByPathStartWith(path) {
            var _this232 = this;
            var keys = Object.keys(this._map);
            var filteredKeys = keys.filter(function (key) {
              if (_this232._map[key].path) {
                return _this232._map[key].path.indexOf(path, 0) > -1;
              }
              return false;
            });
            filteredKeys.forEach(function (key) {
              return _this232.removeItemByKey(key);
            });
          }
        }]);
        return FormItemsRunTimeInfo;
      }();
      /***/
    }),
    /***/11534: (
    /*!********************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/ui.form.js ***!
      \********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../events/core/events_engine */99064);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/component_registrator */2382);
      /* harmony import */
      var _core_guid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/guid */22203);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../core/utils/common */37552);
      /* harmony import */
      var _core_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../core/config */99284);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _events_visibility_change__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../events/visibility_change */23495);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../core/element */60213);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../../localization/message */19336);
      /* harmony import */
      var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../widget/ui.widget */69703);
      /* harmony import */
      var _editor_editor__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../editor/editor */68016);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../../core/utils/window */88684);
      /* harmony import */
      var _validation_engine__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ../validation_engine */83092);
      /* harmony import */
      var _ui_form_items_runtime_info__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__( /*! ./ui.form.items_runtime_info */75646);
      /* harmony import */
      var _tab_panel__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__( /*! ../tab_panel */16515);
      /* harmony import */
      var _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__( /*! ../scroll_view/ui.scrollable */79678);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__( /*! ../../core/utils/deferred */97233);
      /* harmony import */
      var _themes__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__( /*! ../themes */78279);
      /* harmony import */
      var _ui_form_item_options_actions__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__( /*! ./ui.form.item_options_actions */22540);
      /* harmony import */
      var _core_resize_observer__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__( /*! ../../core/resize_observer */15581);
      /* harmony import */
      var _ui_form_layout_manager__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__( /*! ./ui.form.layout_manager */69648);
      /* harmony import */
      var _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__( /*! ./ui.form.utils */2034);
      /* harmony import */
      var _ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__( /*! ./ui.form.layout_manager.utils */8838);
      /* harmony import */
      var _components_label__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__( /*! ./components/label */61028);
      /* harmony import */
      var _validation_summary__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__( /*! ../validation_summary */85575);
      /* harmony import */
      var _validation_group__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__( /*! ../validation_group */40058);
      /* harmony import */
      var _constants__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__( /*! ./constants */73833);
      /* harmony import */
      var _toolbar_constants__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__( /*! ../toolbar/constants */23054);
      /**
       * DevExtreme (esm/ui/form/ui.form.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var FOCUSED_STATE_CLASS = "dx-state-focused";
      var ITEM_OPTIONS_FOR_VALIDATION_UPDATING = ["items", "isRequired", "validationRules", "visible"];
      var Form = _widget_ui_widget__WEBPACK_IMPORTED_MODULE_13__["default"].inherit({
        _init: function _init() {
          this.callBase();
          this._cachedColCountOptions = [];
          this._itemsRunTimeInfo = new _ui_form_items_runtime_info__WEBPACK_IMPORTED_MODULE_17__["default"]();
          this._groupsColCount = [];
          this._attachSyncSubscriptions();
        },
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_9__.extend)(this.callBase(), {
            formID: "dx-" + new _core_guid__WEBPACK_IMPORTED_MODULE_4__["default"](),
            formData: {},
            colCount: 1,
            screenByWidth: _core_utils_window__WEBPACK_IMPORTED_MODULE_15__.defaultScreenFactorFunc,
            colCountByScreen: void 0,
            labelLocation: "left",
            readOnly: false,
            onFieldDataChanged: null,
            customizeItem: null,
            onEditorEnterKey: null,
            minColWidth: 200,
            alignItemLabels: true,
            alignItemLabelsInAllGroups: true,
            alignRootItemLabels: true,
            showColonAfterLabel: true,
            showRequiredMark: true,
            showOptionalMark: false,
            requiredMark: "*",
            optionalMark: _localization_message__WEBPACK_IMPORTED_MODULE_12__["default"].format("dxForm-optionalMark"),
            requiredMessage: _localization_message__WEBPACK_IMPORTED_MODULE_12__["default"].getFormatter("dxForm-requiredMessage"),
            showValidationSummary: false,
            items: void 0,
            scrollingEnabled: false,
            validationGroup: void 0,
            stylingMode: (0, _core_config__WEBPACK_IMPORTED_MODULE_6__["default"])().editorStylingMode,
            labelMode: "outside"
          });
        },
        _defaultOptionsRules: function _defaultOptionsRules() {
          return this.callBase().concat([{
            device: function device() {
              return (0, _themes__WEBPACK_IMPORTED_MODULE_21__.isMaterial)();
            },
            options: {
              showColonAfterLabel: false,
              labelLocation: "top"
            }
          }]);
        },
        _setOptionsByReference: function _setOptionsByReference() {
          this.callBase();
          (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_9__.extend)(this._optionsByReference, {
            formData: true,
            validationGroup: true
          });
        },
        _getGroupColCount: function _getGroupColCount($element) {
          return parseInt($element.attr(_constants__WEBPACK_IMPORTED_MODULE_30__.GROUP_COL_COUNT_ATTR));
        },
        _applyLabelsWidthByCol: function _applyLabelsWidthByCol($container, index) {
          var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          var labelMarkOptions = arguments.length > 3 ? arguments[3] : void 0;
          var fieldItemClass = options.inOneColumn ? _constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_CLASS : _constants__WEBPACK_IMPORTED_MODULE_30__.FORM_FIELD_ITEM_COL_CLASS + index;
          var cssExcludeTabbedSelector = options.excludeTabbed ? ":not(.".concat(_constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_TAB_CLASS, ")") : "";
          (0, _components_label__WEBPACK_IMPORTED_MODULE_27__.setLabelWidthByMaxLabelWidth)($container, ".".concat(fieldItemClass).concat(cssExcludeTabbedSelector), labelMarkOptions);
          return;
        },
        _applyLabelsWidth: function _applyLabelsWidth($container, excludeTabbed, inOneColumn, colCount, labelMarkOptions) {
          colCount = inOneColumn ? 1 : colCount || this._getGroupColCount($container);
          var applyLabelsOptions = {
            excludeTabbed: excludeTabbed,
            inOneColumn: inOneColumn
          };
          var i;
          for (i = 0; i < colCount; i++) {
            this._applyLabelsWidthByCol($container, i, applyLabelsOptions, labelMarkOptions);
          }
        },
        _getGroupElementsInColumn: function _getGroupElementsInColumn($container, columnIndex, colCount) {
          var cssColCountSelector = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(colCount) ? "." + _constants__WEBPACK_IMPORTED_MODULE_30__.GROUP_COL_COUNT_CLASS + colCount : "";
          var groupSelector = "." + _constants__WEBPACK_IMPORTED_MODULE_30__.FORM_FIELD_ITEM_COL_CLASS + columnIndex + " > ." + _constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_CONTENT_CLASS + " > ." + _constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_CLASS + cssColCountSelector;
          return $container.find(groupSelector);
        },
        _applyLabelsWidthWithGroups: function _applyLabelsWidthWithGroups($container, colCount, excludeTabbed, labelMarkOptions) {
          if (true === this.option("alignRootItemLabels")) {
            var $rootSimpleItems = $container.find(".".concat(_constants__WEBPACK_IMPORTED_MODULE_30__.ROOT_SIMPLE_ITEM_CLASS));
            for (var colIndex = 0; colIndex < colCount; colIndex++) {
              this._applyLabelsWidthByCol($rootSimpleItems, colIndex, excludeTabbed, labelMarkOptions);
            }
          }
          var alignItemLabelsInAllGroups = this.option("alignItemLabelsInAllGroups");
          if (alignItemLabelsInAllGroups) {
            this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed, labelMarkOptions);
          } else {
            var $groups = this.$element().find("." + _constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_CLASS);
            var i;
            for (i = 0; i < $groups.length; i++) {
              this._applyLabelsWidth($groups.eq(i), excludeTabbed, void 0, void 0, labelMarkOptions);
            }
          }
        },
        _applyLabelsWidthWithNestedGroups: function _applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed, labelMarkOptions) {
          var applyLabelsOptions = {
            excludeTabbed: excludeTabbed
          };
          var colIndex;
          var groupsColIndex;
          var groupColIndex;
          var $groupsByCol;
          for (colIndex = 0; colIndex < colCount; colIndex++) {
            $groupsByCol = this._getGroupElementsInColumn($container, colIndex);
            this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions, labelMarkOptions);
            for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {
              $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);
              var groupColCount = this._getGroupColCount($groupsByCol);
              for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {
                this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions, labelMarkOptions);
              }
            }
          }
        },
        _labelLocation: function _labelLocation() {
          return this.option("labelLocation");
        },
        _alignLabelsInColumn: function _alignLabelsInColumn(_ref) {
          var layoutManager = _ref.layoutManager,
            inOneColumn = _ref.inOneColumn,
            $container = _ref.$container,
            excludeTabbed = _ref.excludeTabbed,
            items = _ref.items;
          if (!(0, _core_utils_window__WEBPACK_IMPORTED_MODULE_15__.hasWindow)() || "top" === this._labelLocation()) {
            return;
          }
          var labelMarkOptions = (0, _ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_26__.convertToLabelMarkOptions)(layoutManager._getMarkOptions());
          if (inOneColumn) {
            this._applyLabelsWidth($container, excludeTabbed, true, void 0, labelMarkOptions);
          } else if (this._checkGrouping(items)) {
            this._applyLabelsWidthWithGroups($container, layoutManager._getColCount(), excludeTabbed, labelMarkOptions);
          } else {
            this._applyLabelsWidth($container, excludeTabbed, false, layoutManager._getColCount(), labelMarkOptions);
          }
        },
        _prepareFormData: function _prepareFormData() {
          if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(this.option("formData"))) {
            this.option("formData", {});
          }
        },
        _setStylingModeClass: function _setStylingModeClass() {
          if ("underlined" === this.option("stylingMode")) {
            this.$element().addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_UNDERLINED_CLASS);
          }
        },
        _initMarkup: function _initMarkup() {
          _validation_engine__WEBPACK_IMPORTED_MODULE_16__["default"].addGroup(this._getValidationGroup());
          this._clearCachedInstances();
          this._prepareFormData();
          this.$element().addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_CLASS);
          this._setStylingModeClass();
          this.callBase();
          this.setAria("role", "form", this.$element());
          if (this.option("scrollingEnabled")) {
            this._renderScrollable();
          }
          this._renderLayout();
          this._renderValidationSummary();
          this._lastMarkupScreenFactor = this._targetScreenFactor || this._getCurrentScreenFactor();
          this._attachResizeObserverSubscription();
        },
        _attachResizeObserverSubscription: function _attachResizeObserverSubscription() {
          var _this233 = this;
          if ((0, _core_utils_window__WEBPACK_IMPORTED_MODULE_15__.hasWindow)()) {
            var formRootElement = this.$element().get(0);
            _core_resize_observer__WEBPACK_IMPORTED_MODULE_23__["default"].unobserve(formRootElement);
            _core_resize_observer__WEBPACK_IMPORTED_MODULE_23__["default"].observe(formRootElement, function () {
              _this233._resizeHandler();
            });
          }
        },
        _resizeHandler: function _resizeHandler() {
          if (this._cachedLayoutManagers.length) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(this._cachedLayoutManagers, function (_, layoutManager) {
              var _layoutManager$option;
              null === (_layoutManager$option = layoutManager.option("onLayoutChanged")) || void 0 === _layoutManager$option ? void 0 : _layoutManager$option(layoutManager.isSingleColumnMode());
            });
          }
        },
        _getCurrentScreenFactor: function _getCurrentScreenFactor() {
          return (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_15__.hasWindow)() ? (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_15__.getCurrentScreenFactor)(this.option("screenByWidth")) : "lg";
        },
        _clearCachedInstances: function _clearCachedInstances() {
          this._itemsRunTimeInfo.clear();
          this._cachedLayoutManagers = [];
        },
        _alignLabels: function _alignLabels(layoutManager, inOneColumn) {
          this._alignLabelsInColumn({
            $container: this.$element(),
            layoutManager: layoutManager,
            excludeTabbed: true,
            items: this.option("items"),
            inOneColumn: inOneColumn
          });
          (0, _events_visibility_change__WEBPACK_IMPORTED_MODULE_10__.triggerResizeEvent)(this.$element().find(".".concat(_toolbar_constants__WEBPACK_IMPORTED_MODULE_31__.TOOLBAR_CLASS)));
        },
        _clean: function _clean() {
          this._clearValidationSummary();
          this.callBase();
          this._groupsColCount = [];
          this._cachedColCountOptions = [];
          this._lastMarkupScreenFactor = void 0;
          _core_resize_observer__WEBPACK_IMPORTED_MODULE_23__["default"].unobserve(this.$element().get(0));
        },
        _renderScrollable: function _renderScrollable() {
          var useNativeScrolling = this.option("useNativeScrolling");
          this._scrollable = new _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_19__["default"](this.$element(), {
            useNative: !!useNativeScrolling,
            useSimulatedScrollbar: !useNativeScrolling,
            useKeyboard: false,
            direction: "both",
            bounceEnabled: false
          });
        },
        _getContent: function _getContent() {
          return this.option("scrollingEnabled") ? (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(this._scrollable.content()) : this.$element();
        },
        _clearValidationSummary: function _clearValidationSummary() {
          var _this$_$validationSum;
          null === (_this$_$validationSum = this._$validationSummary) || void 0 === _this$_$validationSum ? void 0 : _this$_$validationSum.remove();
          this._$validationSummary = void 0;
          this._validationSummary = void 0;
        },
        _renderValidationSummary: function _renderValidationSummary() {
          this._clearValidationSummary();
          if (this.option("showValidationSummary")) {
            this._$validationSummary = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_VALIDATION_SUMMARY).appendTo(this._getContent());
            this._validationSummary = this._$validationSummary.dxValidationSummary({
              validationGroup: this._getValidationGroup()
            }).dxValidationSummary("instance");
          }
        },
        _prepareItems: function _prepareItems(items, parentIsTabbedItem, currentPath, isTabs) {
          if (items) {
            var result = [];
            for (var i = 0; i < items.length; i++) {
              var item = items[i];
              var path = (0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.concatPaths)(currentPath, (0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.createItemPathByIndex)(i, isTabs));
              var itemRunTimeInfo = {
                item: item,
                itemIndex: i,
                path: path
              };
              var guid = this._itemsRunTimeInfo.add(itemRunTimeInfo);
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isString)(item)) {
                item = {
                  dataField: item
                };
              }
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(item)) {
                var preparedItem = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, item);
                itemRunTimeInfo.preparedItem = preparedItem;
                preparedItem.guid = guid;
                this._tryPrepareGroupItem(preparedItem);
                this._tryPrepareTabbedItem(preparedItem, path);
                this._tryPrepareItemTemplate(preparedItem);
                if (parentIsTabbedItem) {
                  preparedItem.cssItemClass = _constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_TAB_CLASS;
                }
                if (preparedItem.items) {
                  preparedItem.items = this._prepareItems(preparedItem.items, parentIsTabbedItem, path);
                }
                result.push(preparedItem);
              } else {
                result.push(item);
              }
            }
            return result;
          }
        },
        _tryPrepareGroupItem: function _tryPrepareGroupItem(item) {
          var _this234 = this;
          if ("group" === item.itemType) {
            item.alignItemLabels = (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_5__.ensureDefined)(item.alignItemLabels, true);
            item._prepareGroupItemTemplate = function (itemTemplate) {
              if (item.template) {
                item.groupContentTemplate = _this234._getTemplate(itemTemplate);
              }
              item.template = _this234._itemGroupTemplate.bind(_this234, item);
            };
            item._prepareGroupItemTemplate(item.template);
          }
        },
        _tryPrepareTabbedItem: function _tryPrepareTabbedItem(item, path) {
          if ("tabbed" === item.itemType) {
            item.template = this._itemTabbedTemplate.bind(this, item);
            item.tabs = this._prepareItems(item.tabs, true, path, true);
          }
        },
        _tryPrepareItemTemplate: function _tryPrepareItemTemplate(item) {
          if (item.template) {
            item.template = this._getTemplate(item.template);
          }
        },
        _checkGrouping: function _checkGrouping(items) {
          if (items) {
            for (var i = 0; i < items.length; i++) {
              var item = items[i];
              if ("group" === item.itemType) {
                return true;
              }
            }
          }
        },
        _renderLayout: function _renderLayout() {
          var that = this;
          var items = that.option("items");
          var $content = that._getContent();
          items = that._prepareItems(items);
          that._rootLayoutManager = that._renderLayoutManager($content, this._createLayoutManagerOptions(items, {
            isRoot: true,
            colCount: that.option("colCount"),
            alignItemLabels: that.option("alignItemLabels"),
            screenByWidth: this.option("screenByWidth"),
            colCountByScreen: this.option("colCountByScreen"),
            onLayoutChanged: function onLayoutChanged(inOneColumn) {
              that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn);
            },
            onContentReady: function onContentReady(e) {
              that._alignLabels(e.component, e.component.isSingleColumnMode());
            }
          }));
        },
        _tryGetItemsForTemplate: function _tryGetItemsForTemplate(item) {
          return item.items || [];
        },
        _itemTabbedTemplate: function _itemTabbedTemplate(item, e, $container) {
          var _this235 = this;
          var _item$tabs;
          var $tabPanel = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").appendTo($container);
          var tabPanelOptions = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_9__.extend)({}, item.tabPanelOptions, {
            dataSource: item.tabs,
            onItemRendered: function onItemRendered(args) {
              var _item$tabPanelOptions, _item$tabPanelOptions2;
              null === (_item$tabPanelOptions = item.tabPanelOptions) || void 0 === _item$tabPanelOptions ? void 0 : null === (_item$tabPanelOptions2 = _item$tabPanelOptions.onItemRendered) || void 0 === _item$tabPanelOptions2 ? void 0 : _item$tabPanelOptions2.call(_item$tabPanelOptions, args);
              (0, _events_visibility_change__WEBPACK_IMPORTED_MODULE_10__.triggerShownEvent)(args.itemElement);
            },
            itemTemplate: function itemTemplate(itemData, e, container) {
              var $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(container);
              var alignItemLabels = (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_5__.ensureDefined)(itemData.alignItemLabels, true);
              var layoutManager = _this235._renderLayoutManager($container, _this235._createLayoutManagerOptions(_this235._tryGetItemsForTemplate(itemData), {
                colCount: itemData.colCount,
                alignItemLabels: alignItemLabels,
                screenByWidth: _this235.option("screenByWidth"),
                colCountByScreen: itemData.colCountByScreen,
                cssItemClass: itemData.cssItemClass,
                onLayoutChanged: function onLayoutChanged(inOneColumn) {
                  _this235._alignLabelsInColumn({
                    $container: $container,
                    layoutManager: layoutManager,
                    items: itemData.items,
                    inOneColumn: inOneColumn
                  });
                }
              }));
              if (_this235._itemsRunTimeInfo) {
                _this235._itemsRunTimeInfo.extendRunTimeItemInfoByKey(itemData.guid, {
                  layoutManager: layoutManager
                });
              }
              if (alignItemLabels) {
                _this235._alignLabelsInColumn({
                  $container: $container,
                  layoutManager: layoutManager,
                  items: itemData.items,
                  inOneColumn: layoutManager.isSingleColumnMode()
                });
              }
            }
          });
          var tryUpdateTabPanelInstance = function tryUpdateTabPanelInstance(items, instance) {
            if (Array.isArray(items)) {
              items.forEach(function (item) {
                return _this235._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {
                  widgetInstance: instance
                });
              });
            }
          };
          var tabPanel = this._createComponent($tabPanel, _tab_panel__WEBPACK_IMPORTED_MODULE_18__["default"], tabPanelOptions);
          (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])($container).parent().addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_CONTENT_HAS_TABS_CLASS);
          tabPanel.on("optionChanged", function (e) {
            if ("dataSource" === e.fullName) {
              tryUpdateTabPanelInstance(e.value, e.component);
            }
          });
          tryUpdateTabPanelInstance([{
            guid: item.guid
          }].concat(_toConsumableArray(null !== (_item$tabs = item.tabs) && void 0 !== _item$tabs ? _item$tabs : [])), tabPanel);
        },
        _itemGroupTemplate: function _itemGroupTemplate(item, e, $container) {
          var _this236 = this;
          var $group = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").toggleClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_WITH_CAPTION_CLASS, (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(item.caption) && item.caption.length).addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_CLASS).appendTo($container);
          (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])($container).parent().addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_CONTENT_HAS_GROUP_CLASS);
          var colCount;
          var layoutManager;
          if (item.caption) {
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<span>").addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group);
          }
          var $groupContent = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.FORM_GROUP_CONTENT_CLASS).appendTo($group);
          if (item.groupContentTemplate) {
            item._renderGroupContentTemplate = function () {
              $groupContent.empty();
              var data = {
                formData: _this236.option("formData"),
                component: _this236
              };
              item.groupContentTemplate.render({
                model: data,
                container: (0, _core_element__WEBPACK_IMPORTED_MODULE_11__.getPublicElement)($groupContent)
              });
            };
            item._renderGroupContentTemplate();
          } else {
            layoutManager = this._renderLayoutManager($groupContent, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(item), {
              colCount: item.colCount,
              colCountByScreen: item.colCountByScreen,
              alignItemLabels: item.alignItemLabels,
              cssItemClass: item.cssItemClass
            }));
            this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {
              layoutManager: layoutManager
            });
            colCount = layoutManager._getColCount();
            if (!this._groupsColCount.includes(colCount)) {
              this._groupsColCount.push(colCount);
            }
            $group.addClass(_constants__WEBPACK_IMPORTED_MODULE_30__.GROUP_COL_COUNT_CLASS + colCount);
            $group.attr(_constants__WEBPACK_IMPORTED_MODULE_30__.GROUP_COL_COUNT_ATTR, colCount);
          }
        },
        _createLayoutManagerOptions: function _createLayoutManagerOptions(items, extendedLayoutManagerOptions) {
          var _this237 = this;
          return (0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.convertToLayoutManagerOptions)({
            form: this,
            formOptions: this.option(),
            $formElement: this.$element(),
            items: items,
            validationGroup: this._getValidationGroup(),
            extendedLayoutManagerOptions: extendedLayoutManagerOptions,
            onFieldDataChanged: function onFieldDataChanged(args) {
              if (!_this237._isDataUpdating) {
                _this237._triggerOnFieldDataChanged(args);
              }
            },
            onContentReady: function onContentReady(args) {
              _this237._itemsRunTimeInfo.addItemsOrExtendFrom(args.component._itemsRunTimeInfo);
              extendedLayoutManagerOptions.onContentReady && extendedLayoutManagerOptions.onContentReady(args);
            },
            onDisposing: function onDisposing(_ref2) {
              var component = _ref2.component;
              var nestedItemsRunTimeInfo = component.getItemsRunTimeInfo();
              _this237._itemsRunTimeInfo.removeItemsByItems(nestedItemsRunTimeInfo);
            },
            onFieldItemRendered: function onFieldItemRendered() {
              var _this$_validationSumm;
              null === (_this$_validationSumm = _this237._validationSummary) || void 0 === _this$_validationSumm ? void 0 : _this$_validationSumm.refreshValidationGroup();
            }
          });
        },
        _renderLayoutManager: function _renderLayoutManager($parent, layoutManagerOptions) {
          var _this238 = this;
          var baseColCountByScreen = {
            lg: layoutManagerOptions.colCount,
            md: layoutManagerOptions.colCount,
            sm: layoutManagerOptions.colCount,
            xs: 1
          };
          this._cachedColCountOptions.push({
            colCountByScreen: (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_9__.extend)(baseColCountByScreen, layoutManagerOptions.colCountByScreen)
          });
          var $element = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>");
          $element.appendTo($parent);
          var instance = this._createComponent($element, "dxLayoutManager", layoutManagerOptions);
          instance.on("autoColCountChanged", function () {
            _this238._clearAutoColCountChangedTimeout();
            _this238.autoColCountChangedTimeoutId = setTimeout(function () {
              return !_this238._disposed && _this238._refresh();
            }, 0);
          });
          this._cachedLayoutManagers.push(instance);
          return instance;
        },
        _getValidationGroup: function _getValidationGroup() {
          return this.option("validationGroup") || this;
        },
        _createComponent: function _createComponent($element, type, config) {
          config = config || {};
          this._extendConfig(config, {
            readOnly: this.option("readOnly")
          });
          return this.callBase($element, type, config);
        },
        _attachSyncSubscriptions: function _attachSyncSubscriptions() {
          var that = this;
          that.on("optionChanged", function (args) {
            var optionFullName = args.fullName;
            if ("formData" === optionFullName) {
              if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(args.value)) {
                that._options.silent("formData", args.value = {});
              }
              that._triggerOnFieldDataChangedByDataSet(args.value);
            }
            if (that._cachedLayoutManagers.length) {
              (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(that._cachedLayoutManagers, function (index, layoutManager) {
                if ("formData" === optionFullName) {
                  that._isDataUpdating = true;
                  layoutManager.option("layoutData", args.value);
                  that._isDataUpdating = false;
                }
                if ("readOnly" === args.name || "disabled" === args.name) {
                  layoutManager.option(optionFullName, args.value);
                }
              });
            }
          });
        },
        _optionChanged: function _optionChanged(args) {
          var splitFullName = args.fullName.split(".");
          if (splitFullName.length > 1 && -1 !== splitFullName[0].search("items") && this._itemsOptionChangedHandler(args)) {
            return;
          }
          if (splitFullName.length > 1 && -1 !== splitFullName[0].search("formData") && this._formDataOptionChangedHandler(args)) {
            return;
          }
          this._defaultOptionChangedHandler(args);
        },
        _defaultOptionChangedHandler: function _defaultOptionChangedHandler(args) {
          switch (args.name) {
            case "formData":
              if (!this.option("items")) {
                this._invalidate();
              } else if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isEmptyObject)(args.value)) {
                this._resetValues();
              }
              break;
            case "onFieldDataChanged":
              break;
            case "items":
            case "colCount":
            case "onEditorEnterKey":
            case "labelLocation":
            case "labelMode":
            case "alignItemLabels":
            case "showColonAfterLabel":
            case "customizeItem":
            case "alignItemLabelsInAllGroups":
            case "showRequiredMark":
            case "showOptionalMark":
            case "requiredMark":
            case "optionalMark":
            case "requiredMessage":
            case "scrollingEnabled":
            case "formID":
            case "colCountByScreen":
            case "screenByWidth":
            case "stylingMode":
              this._invalidate();
              break;
            case "showValidationSummary":
              this._renderValidationSummary();
              break;
            case "minColWidth":
              if ("auto" === this.option("colCount")) {
                this._invalidate();
              }
              break;
            case "alignRootItemLabels":
            case "readOnly":
              break;
            case "width":
              this.callBase(args);
              this._rootLayoutManager.option(args.name, args.value);
              this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());
              break;
            case "validationGroup":
              _validation_engine__WEBPACK_IMPORTED_MODULE_16__["default"].removeGroup(args.previousValue || this);
              this._invalidate();
              break;
            default:
              this.callBase(args);
          }
        },
        _itemsOptionChangedHandler: function _itemsOptionChangedHandler(args) {
          var nameParts = args.fullName.split(".");
          var value = args.value;
          var itemPath = this._getItemPath(nameParts);
          var item = this.option(itemPath);
          var optionNameWithoutPath = args.fullName.replace(itemPath + ".", "");
          var simpleOptionName = optionNameWithoutPath.split(".")[0].replace(/\[\d+]/, "");
          var itemAction = this._tryCreateItemOptionAction(simpleOptionName, item, item[simpleOptionName], args.previousValue, itemPath);
          var result = this._tryExecuteItemOptionAction(itemAction) || this._tryChangeLayoutManagerItemOption(args.fullName, value);
          if (!result && item) {
            this._changeItemOption(item, optionNameWithoutPath, value);
            var items = this._generateItemsFromData(this.option("items"));
            this.option("items", items);
            result = true;
          }
          return result;
        },
        _formDataOptionChangedHandler: function _formDataOptionChangedHandler(args) {
          var nameParts = args.fullName.split(".");
          var value = args.value;
          var dataField = nameParts.slice(1).join(".");
          var editor = this.getEditor(dataField);
          if (editor) {
            editor.option("value", value);
          } else {
            this._triggerOnFieldDataChanged({
              dataField: dataField,
              value: value
            });
          }
          return true;
        },
        _tryCreateItemOptionAction: function _tryCreateItemOptionAction(optionName, item, value, previousValue, itemPath) {
          if ("tabs" === optionName) {
            this._itemsRunTimeInfo.removeItemsByPathStartWith("".concat(itemPath, ".tabs"));
            value = this._prepareItems(value, true, itemPath, true);
          }
          return (0, _ui_form_item_options_actions__WEBPACK_IMPORTED_MODULE_22__["default"])(optionName, {
            item: item,
            value: value,
            previousValue: previousValue,
            itemsRunTimeInfo: this._itemsRunTimeInfo
          });
        },
        _tryExecuteItemOptionAction: function _tryExecuteItemOptionAction(action) {
          return action && action.tryExecute();
        },
        _updateValidationGroupAndSummaryIfNeeded: function _updateValidationGroupAndSummaryIfNeeded(fullName) {
          var optionName = (0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getOptionNameFromFullName)(fullName);
          if (ITEM_OPTIONS_FOR_VALIDATION_UPDATING.indexOf(optionName) > -1) {
            _validation_engine__WEBPACK_IMPORTED_MODULE_16__["default"].addGroup(this._getValidationGroup());
            if (this.option("showValidationSummary")) {
              var _this$_validationSumm2;
              null === (_this$_validationSumm2 = this._validationSummary) || void 0 === _this$_validationSumm2 ? void 0 : _this$_validationSumm2.refreshValidationGroup();
            }
          }
        },
        _setLayoutManagerItemOption: function _setLayoutManagerItemOption(layoutManager, optionName, value, path) {
          var _this239 = this;
          if (this._updateLockCount > 0) {
            !layoutManager._updateLockCount && layoutManager.beginUpdate();
            var key = this._itemsRunTimeInfo.findKeyByPath(path);
            this.postponedOperations.add(key, function () {
              !layoutManager._disposed && layoutManager.endUpdate();
              return new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__.Deferred().resolve();
            });
          }
          var contentReadyHandler = function contentReadyHandler(e) {
            e.component.off("contentReady", contentReadyHandler);
            if ((0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.isFullPathContainsTabs)(path)) {
              var tabPath = (0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.tryGetTabPath)(path);
              var tabLayoutManager = _this239._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(tabPath);
              if (tabLayoutManager) {
                _this239._alignLabelsInColumn({
                  items: tabLayoutManager.option("items"),
                  layoutManager: tabLayoutManager,
                  $container: tabLayoutManager.$element(),
                  inOneColumn: tabLayoutManager.isSingleColumnMode()
                });
              }
            } else {
              _this239._alignLabels(_this239._rootLayoutManager, _this239._rootLayoutManager.isSingleColumnMode());
            }
          };
          layoutManager.on("contentReady", contentReadyHandler);
          layoutManager.option(optionName, value);
          this._updateValidationGroupAndSummaryIfNeeded(optionName);
        },
        _tryChangeLayoutManagerItemOption: function _tryChangeLayoutManagerItemOption(fullName, value) {
          var nameParts = fullName.split(".");
          var optionName = (0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getOptionNameFromFullName)(fullName);
          if ("items" === optionName && nameParts.length > 1) {
            var itemPath = this._getItemPath(nameParts);
            var layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(itemPath);
            if (layoutManager) {
              this._itemsRunTimeInfo.removeItemsByItems(layoutManager.getItemsRunTimeInfo());
              var items = this._prepareItems(value, false, itemPath);
              this._setLayoutManagerItemOption(layoutManager, optionName, items, itemPath);
              return true;
            }
          } else if (nameParts.length > 2) {
            var endPartIndex = nameParts.length - 2;
            var _itemPath = this._getItemPath(nameParts.slice(0, endPartIndex));
            var _layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(_itemPath);
            if (_layoutManager) {
              var fullOptionName = (0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getFullOptionName)(nameParts[endPartIndex], optionName);
              if ("editorType" === optionName) {
                if (_layoutManager.option(fullOptionName) !== value) {
                  return false;
                }
              }
              if ("visible" === optionName) {
                var formItems = this.option((0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getFullOptionName)(_itemPath, "items"));
                if (formItems && formItems.length) {
                  var layoutManagerItems = _layoutManager.option("items");
                  formItems.forEach(function (item, index) {
                    var layoutItem = layoutManagerItems[index];
                    layoutItem.visibleIndex = item.visibleIndex;
                  });
                }
              }
              this._setLayoutManagerItemOption(_layoutManager, fullOptionName, value, _itemPath);
              return true;
            }
          }
          return false;
        },
        _tryChangeLayoutManagerItemOptions: function _tryChangeLayoutManagerItemOptions(itemPath, options) {
          var _this240 = this;
          var result;
          this.beginUpdate();
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(options, function (optionName, optionValue) {
            result = _this240._tryChangeLayoutManagerItemOption((0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getFullOptionName)(itemPath, optionName), optionValue);
            if (!result) {
              return false;
            }
          });
          this.endUpdate();
          return result;
        },
        _getItemPath: function _getItemPath(nameParts) {
          var itemPath = nameParts[0];
          var i;
          for (i = 1; i < nameParts.length; i++) {
            if (-1 !== nameParts[i].search(/items\[\d+]|tabs\[\d+]/)) {
              itemPath += "." + nameParts[i];
            } else {
              break;
            }
          }
          return itemPath;
        },
        _triggerOnFieldDataChanged: function _triggerOnFieldDataChanged(args) {
          this._createActionByOption("onFieldDataChanged")(args);
        },
        _triggerOnFieldDataChangedByDataSet: function _triggerOnFieldDataChangedByDataSet(data) {
          var that = this;
          if (data && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(data)) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(data, function (dataField, value) {
              that._triggerOnFieldDataChanged({
                dataField: dataField,
                value: value
              });
            });
          }
        },
        _updateFieldValue: function _updateFieldValue(dataField, value) {
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(this.option("formData"))) {
            var editor = this.getEditor(dataField);
            this.option("formData." + dataField, value);
            if (editor) {
              var editorValue = editor.option("value");
              if (editorValue !== value) {
                editor.option("value", value);
              }
            }
          }
        },
        _generateItemsFromData: function _generateItemsFromData(items) {
          var formData = this.option("formData");
          var result = [];
          if (!items && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(formData)) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(formData, function (dataField) {
              result.push({
                dataField: dataField
              });
            });
          }
          if (items) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(items, function (index, item) {
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(item)) {
                result.push(item);
              } else {
                result.push({
                  dataField: item
                });
              }
            });
          }
          return result;
        },
        _getItemByField: function _getItemByField(field, items) {
          var that = this;
          var fieldParts = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(field) ? field : that._getFieldParts(field);
          var fieldName = fieldParts.fieldName;
          var fieldPath = fieldParts.fieldPath;
          var resultItem;
          if (items.length) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(items, function (index, item) {
              var itemType = item.itemType;
              if (fieldPath.length) {
                var path = fieldPath.slice();
                item = that._getItemByFieldPath(path, fieldName, item);
              } else if ("group" === itemType && !(item.caption || item.name) || "tabbed" === itemType && !item.name) {
                var subItemsField = that._getSubItemField(itemType);
                item.items = that._generateItemsFromData(item.items);
                item = that._getItemByField({
                  fieldName: fieldName,
                  fieldPath: fieldPath
                }, item[subItemsField]);
              }
              if ((0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.isEqualToDataFieldOrNameOrTitleOrCaption)(item, fieldName)) {
                resultItem = item;
                return false;
              }
            });
          }
          return resultItem;
        },
        _getFieldParts: function _getFieldParts(field) {
          var fieldName = field;
          var separatorIndex = fieldName.indexOf(".");
          var resultPath = [];
          while (-1 !== separatorIndex) {
            resultPath.push(fieldName.substr(0, separatorIndex));
            fieldName = fieldName.substr(separatorIndex + 1);
            separatorIndex = fieldName.indexOf(".");
          }
          return {
            fieldName: fieldName,
            fieldPath: resultPath.reverse()
          };
        },
        _getItemByFieldPath: function _getItemByFieldPath(path, fieldName, item) {
          var itemType = item.itemType;
          var subItemsField = this._getSubItemField(itemType);
          var isItemWithSubItems = "group" === itemType || "tabbed" === itemType || item.title;
          var result;
          do {
            if (isItemWithSubItems) {
              var name = item.name || item.caption || item.title;
              var isGroupWithName = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(name);
              var nameWithoutSpaces = (0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getTextWithoutSpaces)(name);
              var pathNode = void 0;
              item[subItemsField] = this._generateItemsFromData(item[subItemsField]);
              if (isGroupWithName) {
                pathNode = path.pop();
              }
              if (!path.length) {
                result = this._getItemByField(fieldName, item[subItemsField]);
                if (result) {
                  break;
                }
              }
              if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {
                if (path.length) {
                  result = this._searchItemInEverySubItem(path, fieldName, item[subItemsField]);
                }
              }
            } else {
              break;
            }
          } while (path.length && !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(result));
          return result;
        },
        _getSubItemField: function _getSubItemField(itemType) {
          return "tabbed" === itemType ? "tabs" : "items";
        },
        _searchItemInEverySubItem: function _searchItemInEverySubItem(path, fieldName, items) {
          var that = this;
          var result;
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(items, function (index, groupItem) {
            result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);
            if (result) {
              return false;
            }
          });
          if (!result) {
            result = false;
          }
          return result;
        },
        _changeItemOption: function _changeItemOption(item, option, value) {
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(item)) {
            item[option] = value;
          }
        },
        _dimensionChanged: function _dimensionChanged() {
          var currentScreenFactor = this._getCurrentScreenFactor();
          if (this._lastMarkupScreenFactor !== currentScreenFactor) {
            if (this._isColCountChanged(this._lastMarkupScreenFactor, currentScreenFactor)) {
              this._targetScreenFactor = currentScreenFactor;
              this._refresh();
              this._targetScreenFactor = void 0;
            }
            this._lastMarkupScreenFactor = currentScreenFactor;
          }
        },
        _isColCountChanged: function _isColCountChanged(oldScreenSize, newScreenSize) {
          var isChanged = false;
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(this._cachedColCountOptions, function (index, item) {
            if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {
              isChanged = true;
              return false;
            }
          });
          return isChanged;
        },
        _refresh: function _refresh() {
          var editorSelector = ".".concat(FOCUSED_STATE_CLASS, " > :not(.dx-dropdowneditor-input-wrapper) input,") + " .".concat(FOCUSED_STATE_CLASS, " textarea");
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__["default"].trigger(this.$element().find(editorSelector), "change");
          this.callBase();
        },
        _resetValues: function _resetValues() {
          this._itemsRunTimeInfo.each(function (_, itemRunTimeInfo) {
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(itemRunTimeInfo.widgetInstance) && _editor_editor__WEBPACK_IMPORTED_MODULE_14__["default"].isEditor(itemRunTimeInfo.widgetInstance)) {
              itemRunTimeInfo.widgetInstance.reset();
              itemRunTimeInfo.widgetInstance.option("isValid", true);
            }
          });
          _validation_engine__WEBPACK_IMPORTED_MODULE_16__["default"].resetGroup(this._getValidationGroup());
        },
        _updateData: function _updateData(data, value, isComplexData) {
          var that = this;
          var _data = isComplexData ? value : data;
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(_data)) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(_data, function (dataField, fieldValue) {
              that._updateData(isComplexData ? data + "." + dataField : dataField, fieldValue, (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(fieldValue));
            });
          } else if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isString)(data)) {
            that._updateFieldValue(data, value);
          }
        },
        registerKeyHandler: function registerKeyHandler(key, handler) {
          this.callBase(key, handler);
          this._itemsRunTimeInfo.each(function (_, itemRunTimeInfo) {
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isDefined)(itemRunTimeInfo.widgetInstance)) {
              itemRunTimeInfo.widgetInstance.registerKeyHandler(key, handler);
            }
          });
        },
        _focusTarget: function _focusTarget() {
          return this.$element().find("." + _constants__WEBPACK_IMPORTED_MODULE_30__.FIELD_ITEM_CONTENT_CLASS + " [tabindex]").first();
        },
        _visibilityChanged: function _visibilityChanged() {
          this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());
        },
        _clearAutoColCountChangedTimeout: function _clearAutoColCountChangedTimeout() {
          if (this.autoColCountChangedTimeoutId) {
            clearTimeout(this.autoColCountChangedTimeoutId);
            this.autoColCountChangedTimeoutId = void 0;
          }
        },
        _dispose: function _dispose() {
          this._clearAutoColCountChangedTimeout();
          _validation_engine__WEBPACK_IMPORTED_MODULE_16__["default"].removeGroup(this._getValidationGroup());
          this.callBase();
        },
        resetValues: function resetValues() {
          this._resetValues();
        },
        updateData: function updateData(data, value) {
          this._updateData(data, value);
        },
        getEditor: function getEditor(dataField) {
          return this._itemsRunTimeInfo.findWidgetInstanceByDataField(dataField) || this._itemsRunTimeInfo.findWidgetInstanceByName(dataField);
        },
        getButton: function getButton(name) {
          return this._itemsRunTimeInfo.findWidgetInstanceByName(name);
        },
        updateDimensions: function updateDimensions() {
          var that = this;
          var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__.Deferred();
          if (that._scrollable) {
            that._scrollable.update().done(function () {
              deferred.resolveWith(that);
            });
          } else {
            deferred.resolveWith(that);
          }
          return deferred.promise();
        },
        itemOption: function itemOption(id, option, value) {
          var _this241 = this;
          var items = this._generateItemsFromData(this.option("items"));
          var item = this._getItemByField(id, items);
          var path = (0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getItemPath)(items, item);
          if (!item) {
            return;
          }
          switch (arguments.length) {
            case 1:
              return item;
            case 3:
              var itemAction = this._tryCreateItemOptionAction(option, item, value, item[option], path);
              this._changeItemOption(item, option, value);
              var fullName = (0, _ui_form_utils__WEBPACK_IMPORTED_MODULE_25__.getFullOptionName)(path, option);
              if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(fullName, value)) {
                this.option("items", items);
              }
              break;
            default:
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_7__.isObject)(option)) {
                if (!this._tryChangeLayoutManagerItemOptions(path, option)) {
                  var allowUpdateItems;
                  (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_8__.each)(option, function (optionName, optionValue) {
                    var itemAction = _this241._tryCreateItemOptionAction(optionName, item, optionValue, item[optionName], path);
                    _this241._changeItemOption(item, optionName, optionValue);
                    if (!allowUpdateItems && !_this241._tryExecuteItemOptionAction(itemAction)) {
                      allowUpdateItems = true;
                    }
                  });
                  allowUpdateItems && this.option("items", items);
                }
              }
          }
        },
        validate: function validate() {
          return _validation_engine__WEBPACK_IMPORTED_MODULE_16__["default"].validateGroup(this._getValidationGroup());
        },
        getItemID: function getItemID(name) {
          return "dx_" + this.option("formID") + "_" + (name || new _core_guid__WEBPACK_IMPORTED_MODULE_4__["default"]());
        },
        getTargetScreenFactor: function getTargetScreenFactor() {
          return this._targetScreenFactor;
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_3__["default"])("dxForm", Form);
      /* harmony default export */
      __webpack_exports__["default"] = Form;

      /***/
    }),
    /***/69648: (
    /*!***********************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/ui.form.layout_manager.js ***!
      \***********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../events/core/events_engine */99064);
      /* harmony import */
      var _ui_form_items_runtime_info__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./ui.form.items_runtime_info */75646);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../core/component_registrator */2382);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../core/utils/variable_wrapper */17871);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../core/utils/window */88684);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_array__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../core/utils/array */36959);
      /* harmony import */
      var _core_utils_data__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../../core/utils/data */25670);
      /* harmony import */
      var _events_remove__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../../events/remove */65543);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../../localization/message */19336);
      /* harmony import */
      var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../widget/ui.widget */69703);
      /* harmony import */
      var _responsive_box__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ../responsive_box */3907);
      /* harmony import */
      var _constants__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__( /*! ./constants */73833);
      /* harmony import */
      var _text_box__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__( /*! ../text_box */70426);
      /* harmony import */
      var _number_box__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__( /*! ../number_box */28692);
      /* harmony import */
      var _check_box__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__( /*! ../check_box */54337);
      /* harmony import */
      var _date_box__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__( /*! ../date_box */88496);
      /* harmony import */
      var _button__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__( /*! ../button */66037);
      /* harmony import */
      var _components_field_item__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__( /*! ./components/field_item */22608);
      /* harmony import */
      var _components_button_item__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__( /*! ./components/button_item */12801);
      /* harmony import */
      var _components_empty_item__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__( /*! ./components/empty_item */28269);
      /* harmony import */
      var _ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__( /*! ./ui.form.layout_manager.utils */8838);
      /**
       * DevExtreme (esm/ui/form/ui.form.layout_manager.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var FORM_EDITOR_BY_DEFAULT = "dxTextBox";
      var LAYOUT_MANAGER_FIRST_ROW_CLASS = "dx-first-row";
      var LAYOUT_MANAGER_LAST_ROW_CLASS = "dx-last-row";
      var LAYOUT_MANAGER_FIRST_COL_CLASS = "dx-first-col";
      var LAYOUT_MANAGER_LAST_COL_CLASS = "dx-last-col";
      var LayoutManager = _widget_ui_widget__WEBPACK_IMPORTED_MODULE_15__["default"].inherit({
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(this.callBase(), {
            layoutData: {},
            readOnly: false,
            colCount: 1,
            colCountByScreen: void 0,
            labelLocation: "left",
            onFieldDataChanged: null,
            onEditorEnterKey: null,
            customizeItem: null,
            alignItemLabels: true,
            minColWidth: 200,
            showRequiredMark: true,
            screenByWidth: null,
            showOptionalMark: false,
            requiredMark: "*",
            labelMode: "outside",
            optionalMark: _localization_message__WEBPACK_IMPORTED_MODULE_14__["default"].format("dxForm-optionalMark"),
            requiredMessage: _localization_message__WEBPACK_IMPORTED_MODULE_14__["default"].getFormatter("dxForm-requiredMessage")
          });
        },
        _setOptionsByReference: function _setOptionsByReference() {
          this.callBase();
          (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(this._optionsByReference, {
            layoutData: true,
            validationGroup: true
          });
        },
        _init: function _init() {
          var layoutData = this.option("layoutData");
          this.callBase();
          this._itemWatchers = [];
          this._itemsRunTimeInfo = new _ui_form_items_runtime_info__WEBPACK_IMPORTED_MODULE_4__["default"]();
          this._updateReferencedOptions(layoutData);
          this._initDataAndItems(layoutData);
        },
        _dispose: function _dispose() {
          this.callBase();
          this._cleanItemWatchers();
        },
        _initDataAndItems: function _initDataAndItems(initialData) {
          this._syncDataWithItems();
          this._updateItems(initialData);
        },
        _syncDataWithItems: function _syncDataWithItems() {
          var _this242 = this;
          var layoutData = this.option("layoutData");
          var userItems = this.option("items");
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(userItems)) {
            userItems.forEach(function (item) {
              if (item.dataField && void 0 === _this242._getDataByField(item.dataField)) {
                var value;
                if (item.editorOptions) {
                  value = item.editorOptions.value;
                }
                if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(value) || item.dataField in layoutData) {
                  _this242._updateFieldValue(item.dataField, value);
                }
              }
            });
          }
        },
        _getDataByField: function _getDataByField(dataField) {
          return dataField ? this.option("layoutData." + dataField) : null;
        },
        _isCheckboxUndefinedStateEnabled: function _isCheckboxUndefinedStateEnabled(_ref) {
          var allowIndeterminateState = _ref.allowIndeterminateState,
            editorType = _ref.editorType,
            dataField = _ref.dataField;
          if (true === allowIndeterminateState && "dxCheckBox" === editorType) {
            var nameParts = ["layoutData"].concat(_toConsumableArray(dataField.split(".")));
            var propertyName = nameParts.pop();
            var layoutData = this.option(nameParts.join("."));
            return layoutData && propertyName in layoutData;
          }
          return false;
        },
        _updateFieldValue: function _updateFieldValue(dataField, value) {
          var layoutData = this.option("layoutData");
          var newValue = value;
          if (!_core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__["default"].isWrapped(layoutData[dataField]) && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(dataField)) {
            this.option("layoutData." + dataField, newValue);
          } else if (_core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__["default"].isWritableWrapped(layoutData[dataField])) {
            newValue = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isFunction)(newValue) ? newValue() : newValue;
            layoutData[dataField](newValue);
          }
          this._triggerOnFieldDataChanged({
            dataField: dataField,
            value: newValue
          });
        },
        _triggerOnFieldDataChanged: function _triggerOnFieldDataChanged(args) {
          this._createActionByOption("onFieldDataChanged")(args);
        },
        _updateItems: function _updateItems(layoutData) {
          var that = this;
          var userItems = this.option("items");
          var isUserItemsExist = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(userItems);
          var customizeItem = that.option("customizeItem");
          var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(items)) {
            var processedItems = [];
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__.each)(items, function (index, item) {
              if (that._isAcceptableItem(item)) {
                item = that._processItem(item);
                customizeItem && customizeItem(item);
                if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(item) && false !== _core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__["default"].unwrap(item.visible)) {
                  processedItems.push(item);
                }
              }
            });
            if (!that._itemWatchers.length || !isUserItemsExist) {
              that._updateItemWatchers(items);
            }
            this._setItems(processedItems);
            this._sortItems();
          }
        },
        _cleanItemWatchers: function _cleanItemWatchers() {
          this._itemWatchers.forEach(function (dispose) {
            dispose();
          });
          this._itemWatchers = [];
        },
        _updateItemWatchers: function _updateItemWatchers(items) {
          var that = this;
          var watch = that._getWatch();
          items.forEach(function (item) {
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(item) && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.visible) && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isFunction)(watch)) {
              that._itemWatchers.push(watch(function () {
                return _core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__["default"].unwrap(item.visible);
              }, function () {
                that._updateItems(that.option("layoutData"));
                that.repaint();
              }, {
                skipImmediate: true
              }));
            }
          });
        },
        _generateItemsByData: function _generateItemsByData(layoutData) {
          var result = [];
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(layoutData)) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__.each)(layoutData, function (dataField) {
              result.push({
                dataField: dataField
              });
            });
          }
          return result;
        },
        _isAcceptableItem: function _isAcceptableItem(item) {
          var itemField = item.dataField || item;
          var itemData = this._getDataByField(itemField);
          return !((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isFunction)(itemData) && !_core_utils_variable_wrapper__WEBPACK_IMPORTED_MODULE_7__["default"].isWrapped(itemData));
        },
        _processItem: function _processItem(item) {
          if ("string" === typeof item) {
            item = {
              dataField: item
            };
          }
          if ("object" === typeof item && !item.itemType) {
            item.itemType = _constants__WEBPACK_IMPORTED_MODULE_17__.SIMPLE_ITEM_TYPE;
          }
          if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.editorType) && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.dataField)) {
            var value = this._getDataByField(item.dataField);
            item.editorType = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(value) ? this._getEditorTypeByDataType((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.type)(value)) : FORM_EDITOR_BY_DEFAULT;
          }
          if ("dxCheckBox" === item.editorType) {
            var _item$allowIndetermin;
            item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true;
          }
          return item;
        },
        _getEditorTypeByDataType: function _getEditorTypeByDataType(dataType) {
          switch (dataType) {
            case "number":
              return "dxNumberBox";
            case "date":
              return "dxDateBox";
            case "boolean":
              return "dxCheckBox";
            default:
              return "dxTextBox";
          }
        },
        _sortItems: function _sortItems() {
          (0, _core_utils_array__WEBPACK_IMPORTED_MODULE_11__.normalizeIndexes)(this._items, "visibleIndex");
          this._sortIndexes();
        },
        _sortIndexes: function _sortIndexes() {
          this._items.sort(function (itemA, itemB) {
            var indexA = itemA.visibleIndex;
            var indexB = itemB.visibleIndex;
            var result;
            if (indexA > indexB) {
              result = 1;
            } else if (indexA < indexB) {
              result = -1;
            } else {
              result = 0;
            }
            return result;
          });
        },
        _initMarkup: function _initMarkup() {
          this._itemsRunTimeInfo.clear();
          this.$element().addClass(_constants__WEBPACK_IMPORTED_MODULE_17__.FORM_LAYOUT_MANAGER_CLASS);
          this.callBase();
          this._renderResponsiveBox();
        },
        _renderResponsiveBox: function _renderResponsiveBox() {
          var templatesInfo = [];
          if (this._items && this._items.length) {
            var colCount = this._getColCount();
            var $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_2__["default"])("<div>").appendTo(this.$element());
            this._prepareItemsWithMerging(colCount);
            var layoutItems = this._generateLayoutItems();
            this._responsiveBox = this._createComponent($container, _responsive_box__WEBPACK_IMPORTED_MODULE_16__["default"], this._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));
            if (!(0, _core_utils_window__WEBPACK_IMPORTED_MODULE_8__.hasWindow)()) {
              this._renderTemplates(templatesInfo);
            }
          }
        },
        _itemStateChangedHandler: function _itemStateChangedHandler(e) {
          this._refresh();
        },
        _renderTemplates: function _renderTemplates(templatesInfo) {
          var that = this;
          var itemsWithLabelTemplateCount = 0;
          templatesInfo.forEach(function (_ref2) {
            var _item$label;
            var item = _ref2.item;
            if (null !== item && void 0 !== item && null !== (_item$label = item.label) && void 0 !== _item$label && _item$label.template) {
              itemsWithLabelTemplateCount++;
            }
          });
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__.each)(templatesInfo, function (index, info) {
            switch (info.itemType) {
              case "empty":
                (0, _components_empty_item__WEBPACK_IMPORTED_MODULE_25__.renderEmptyItem)(info);
                break;
              case "button":
                that._renderButtonItem(info);
                break;
              default:
                that._renderFieldItem(info, itemsWithLabelTemplateCount);
            }
          });
        },
        _getResponsiveBoxConfig: function _getResponsiveBoxConfig(layoutItems, colCount, templatesInfo) {
          var that = this;
          var colCountByScreen = that.option("colCountByScreen");
          var xsColCount = colCountByScreen && colCountByScreen.xs;
          return {
            onItemStateChanged: this._itemStateChangedHandler.bind(this),
            onLayoutChanged: function onLayoutChanged() {
              var onLayoutChanged = that.option("onLayoutChanged");
              var isSingleColumnMode = that.isSingleColumnMode();
              if (onLayoutChanged) {
                that.$element().toggleClass(_constants__WEBPACK_IMPORTED_MODULE_17__.LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);
                onLayoutChanged(isSingleColumnMode);
              }
            },
            onContentReady: function onContentReady(e) {
              if ((0, _core_utils_window__WEBPACK_IMPORTED_MODULE_8__.hasWindow)()) {
                that._renderTemplates(templatesInfo);
              }
              if (that.option("onLayoutChanged")) {
                that.$element().toggleClass(_constants__WEBPACK_IMPORTED_MODULE_17__.LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component));
              }
            },
            itemTemplate: function itemTemplate(e, itemData, itemElement) {
              if (!e.location) {
                return;
              }
              var $itemElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_2__["default"])(itemElement);
              var itemRenderedCountInPreviousRows = e.location.row * colCount;
              var item = that._items[e.location.col + itemRenderedCountInPreviousRows];
              if (!item) {
                return;
              }
              var itemCssClassList = [item.cssClass];
              $itemElement.toggleClass(_constants__WEBPACK_IMPORTED_MODULE_17__.SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));
              if (0 === e.location.row) {
                itemCssClassList.push(LAYOUT_MANAGER_FIRST_ROW_CLASS);
              }
              if (0 === e.location.col) {
                itemCssClassList.push(LAYOUT_MANAGER_FIRST_COL_CLASS);
              }
              if (item.itemType === _constants__WEBPACK_IMPORTED_MODULE_17__.SIMPLE_ITEM_TYPE && that.option("isRoot")) {
                $itemElement.addClass(_constants__WEBPACK_IMPORTED_MODULE_17__.ROOT_SIMPLE_ITEM_CLASS);
              }
              var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;
              var rowsCount = that._getRowsCount();
              var isLastRow = e.location.row === rowsCount - 1;
              if (isLastColumn) {
                itemCssClassList.push(LAYOUT_MANAGER_LAST_COL_CLASS);
              }
              if (isLastRow) {
                itemCssClassList.push(LAYOUT_MANAGER_LAST_ROW_CLASS);
              }
              if ("empty" !== item.itemType) {
                itemCssClassList.push(_constants__WEBPACK_IMPORTED_MODULE_17__.FIELD_ITEM_CLASS);
                itemCssClassList.push(that.option("cssItemClass"));
                if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.col)) {
                  itemCssClassList.push("dx-col-" + item.col);
                }
              }
              templatesInfo.push({
                itemType: item.itemType,
                item: item,
                $parent: $itemElement,
                rootElementCssClassList: itemCssClassList
              });
            },
            cols: that._generateRatio(colCount),
            rows: that._generateRatio(that._getRowsCount(), true),
            dataSource: layoutItems,
            screenByWidth: that.option("screenByWidth"),
            singleColumnScreen: xsColCount ? false : "xs"
          };
        },
        _getColCount: function _getColCount() {
          var colCount = this.option("colCount");
          var colCountByScreen = this.option("colCountByScreen");
          if (colCountByScreen) {
            var screenFactor = this.option("form").getTargetScreenFactor();
            if (!screenFactor) {
              screenFactor = (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_8__.hasWindow)() ? (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_8__.getCurrentScreenFactor)(this.option("screenByWidth")) : "lg";
            }
            colCount = colCountByScreen[screenFactor] || colCount;
          }
          if ("auto" === colCount) {
            if (this._cashedColCount) {
              return this._cashedColCount;
            }
            this._cashedColCount = colCount = this._getMaxColCount();
          }
          return colCount < 1 ? 1 : colCount;
        },
        _getMaxColCount: function _getMaxColCount() {
          if (!(0, _core_utils_window__WEBPACK_IMPORTED_MODULE_8__.hasWindow)()) {
            return 1;
          }
          var minColWidth = this.option("minColWidth");
          var width = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_1__.getWidth)(this.$element());
          var itemsCount = this._items.length;
          var maxColCount = Math.floor(width / minColWidth) || 1;
          return itemsCount < maxColCount ? itemsCount : maxColCount;
        },
        isCachedColCountObsolete: function isCachedColCountObsolete() {
          return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount;
        },
        _prepareItemsWithMerging: function _prepareItemsWithMerging(colCount) {
          var items = this._items.slice(0);
          var item;
          var itemsMergedByCol;
          var result = [];
          var j;
          var i;
          for (i = 0; i < items.length; i++) {
            item = items[i];
            result.push(item);
            if (this.option("alignItemLabels") || item.alignItemLabels || item.colSpan) {
              item.col = this._getColByIndex(result.length - 1, colCount);
            }
            if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {
              itemsMergedByCol = [];
              for (j = 0; j < item.colSpan - 1; j++) {
                itemsMergedByCol.push({
                  merged: true
                });
              }
              result = result.concat(itemsMergedByCol);
            } else {
              delete item.colSpan;
            }
          }
          this._setItems(result);
        },
        _getColByIndex: function _getColByIndex(index, colCount) {
          return index % colCount;
        },
        _setItems: function _setItems(items) {
          this._items = items;
          this._cashedColCount = null;
        },
        _generateLayoutItems: function _generateLayoutItems() {
          var items = this._items;
          var colCount = this._getColCount();
          var result = [];
          var item;
          var i;
          for (i = 0; i < items.length; i++) {
            item = items[i];
            if (!item.merged) {
              var generatedItem = {
                location: {
                  row: parseInt(i / colCount),
                  col: this._getColByIndex(i, colCount)
                }
              };
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.disabled)) {
                generatedItem.disabled = item.disabled;
              }
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.visible)) {
                generatedItem.visible = item.visible;
              }
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.colSpan)) {
                generatedItem.location.colspan = item.colSpan;
              }
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(item.rowSpan)) {
                generatedItem.location.rowspan = item.rowSpan;
              }
              result.push(generatedItem);
            }
          }
          return result;
        },
        _renderEmptyItem: function _renderEmptyItem($container) {
          (0, _components_empty_item__WEBPACK_IMPORTED_MODULE_25__.renderEmptyItem)({
            $container: $container
          });
        },
        _renderButtonItem: function _renderButtonItem(_ref3) {
          var item = _ref3.item,
            $parent = _ref3.$parent,
            rootElementCssClassList = _ref3.rootElementCssClassList;
          var _ref29 = (0, _components_button_item__WEBPACK_IMPORTED_MODULE_24__.renderButtonItem)({
              item: item,
              $parent: $parent,
              rootElementCssClassList: rootElementCssClassList,
              validationGroup: this.option("validationGroup"),
              createComponentCallback: this._createComponent.bind(this)
            }),
            $rootElement = _ref29.$rootElement,
            buttonInstance = _ref29.buttonInstance;
          this._itemsRunTimeInfo.add({
            item: item,
            widgetInstance: buttonInstance,
            guid: item.guid,
            $itemContainer: $rootElement
          });
        },
        _renderFieldItem: function _renderFieldItem(_ref4, itemsWithLabelTemplateCount) {
          var _this243 = this;
          var _item$label2, _this$option;
          var item = _ref4.item,
            $parent = _ref4.$parent,
            rootElementCssClassList = _ref4.rootElementCssClassList;
          var editorValue = this._getDataByField(item.dataField);
          var canAssignUndefinedValueToEditor = false;
          if (void 0 === editorValue) {
            var allowIndeterminateState = item.allowIndeterminateState,
              editorType = item.editorType,
              dataField = item.dataField;
            canAssignUndefinedValueToEditor = this._isCheckboxUndefinedStateEnabled({
              allowIndeterminateState: allowIndeterminateState,
              editorType: editorType,
              dataField: dataField
            });
          }
          var name = item.dataField || item.name;
          var formOrLayoutManager = this._getFormOrThis();
          var _ref30 = (0, _components_field_item__WEBPACK_IMPORTED_MODULE_23__.renderFieldItem)((0, _ui_form_layout_manager_utils__WEBPACK_IMPORTED_MODULE_26__.convertToRenderFieldItemOptions)({
              $parent: $parent,
              rootElementCssClassList: rootElementCssClassList,
              item: item,
              name: name,
              editorValue: editorValue,
              canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,
              formOrLayoutManager: this._getFormOrThis(),
              createComponentCallback: this._createComponent.bind(this),
              formLabelLocation: this.option("labelLocation"),
              requiredMessageTemplate: this.option("requiredMessage"),
              validationGroup: this.option("validationGroup"),
              editorValidationBoundary: this.option("validationBoundary"),
              editorStylingMode: this.option("form") && this.option("form").option("stylingMode"),
              showColonAfterLabel: this.option("showColonAfterLabel"),
              managerLabelLocation: this.option("labelLocation"),
              template: item.template ? this._getTemplate(item.template) : null,
              labelTemplate: null !== (_item$label2 = item.label) && void 0 !== _item$label2 && _item$label2.template ? this._getTemplate(item.label.template) : null,
              itemId: this.option("form") && this.option("form").getItemID(name),
              managerMarkOptions: this._getMarkOptions(),
              labelMode: this.option("labelMode"),
              onLabelTemplateRendered: function onLabelTemplateRendered() {
                _this243._incTemplateRenderedCallCount();
                if (_this243._shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, itemsWithLabelTemplateCount)) {
                  formOrLayoutManager._alignLabels(_this243, _this243.isSingleColumnMode(formOrLayoutManager));
                }
              }
            })),
            $fieldEditorContainer = _ref30.$fieldEditorContainer,
            widgetInstance = _ref30.widgetInstance,
            $rootElement = _ref30.$rootElement;
          null === (_this$option = this.option("onFieldItemRendered")) || void 0 === _this$option ? void 0 : _this$option();
          if (widgetInstance && item.dataField) {
            this._bindDataField(widgetInstance, item.dataField, item.editorType, $fieldEditorContainer);
          }
          this._itemsRunTimeInfo.add({
            item: item,
            widgetInstance: widgetInstance,
            guid: item.guid,
            $itemContainer: $rootElement
          });
        },
        _incTemplateRenderedCallCount: function _incTemplateRenderedCallCount() {
          var _this$_labelTemplateR;
          this._labelTemplateRenderedCallCount = (null !== (_this$_labelTemplateR = this._labelTemplateRenderedCallCount) && void 0 !== _this$_labelTemplateR ? _this$_labelTemplateR : 0) + 1;
        },
        _shouldAlignLabelsOnTemplateRendered: function _shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, totalItemsWithLabelTemplate) {
          return formOrLayoutManager.option("templatesRenderAsynchronously") && this._labelTemplateRenderedCallCount === totalItemsWithLabelTemplate;
        },
        _getMarkOptions: function _getMarkOptions() {
          return {
            showRequiredMark: this.option("showRequiredMark"),
            requiredMark: this.option("requiredMark"),
            showOptionalMark: this.option("showOptionalMark"),
            optionalMark: this.option("optionalMark")
          };
        },
        _getFormOrThis: function _getFormOrThis() {
          return this.option("form") || this;
        },
        _bindDataField: function _bindDataField(editorInstance, dataField, editorType, $container) {
          var formOrThis = this._getFormOrThis();
          editorInstance.on("enterKey", function (args) {
            formOrThis._createActionByOption("onEditorEnterKey")((0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_10__.extend)(args, {
              dataField: dataField
            }));
          });
          this._createWatcher(editorInstance, $container, dataField);
          this.linkEditorToDataField(editorInstance, dataField, editorType);
        },
        _createWatcher: function _createWatcher(editorInstance, $container, dataField) {
          var that = this;
          var watch = that._getWatch();
          if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isFunction)(watch)) {
            return;
          }
          var dispose = watch(function () {
            return that._getDataByField(dataField);
          }, function () {
            var fieldValue = that._getDataByField(dataField);
            if ("dxTagBox" === editorInstance.NAME) {
              var editorValue = editorInstance.option("value");
              if (fieldValue !== editorValue && function (array1, array2) {
                if (!Array.isArray(array1) || !Array.isArray(array2) || array1.length !== array2.length) {
                  return false;
                }
                for (var i = 0; i < array1.length; i++) {
                  if (array1[i] !== array2[i]) {
                    return false;
                  }
                }
                return true;
              }(fieldValue, editorValue)) {
                return;
              }
            }
            editorInstance.option("value", fieldValue);
          }, {
            deep: true,
            skipImmediate: true
          });
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_3__["default"].on($container, _events_remove__WEBPACK_IMPORTED_MODULE_13__.removeEvent, dispose);
        },
        _getWatch: function _getWatch() {
          if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(this._watch)) {
            var formInstance = this.option("form");
            this._watch = formInstance && formInstance.option("integrationOptions.watchMethod");
          }
          return this._watch;
        },
        _createComponent: function _createComponent($editor, type, editorOptions) {
          var readOnlyState = this.option("readOnly");
          var hasEditorReadOnly = Object.hasOwn(editorOptions, "readOnly");
          var instance = this.callBase($editor, type, (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, editorOptions, {
            readOnly: !hasEditorReadOnly ? readOnlyState : editorOptions.readOnly
          }));
          var isChangeByForm = false;
          instance.on("optionChanged", function (args) {
            if ("readOnly" === args.name && !isChangeByForm) {
              hasEditorReadOnly = true;
            }
          });
          this.on("optionChanged", function (args) {
            if ("readOnly" === args.name && !hasEditorReadOnly) {
              isChangeByForm = true;
              instance.option(args.name, args.value);
              isChangeByForm = false;
            }
          });
          return instance;
        },
        _generateRatio: function _generateRatio(count, isAutoSize) {
          var result = [];
          var ratio;
          var i;
          for (i = 0; i < count; i++) {
            ratio = {
              ratio: 1
            };
            if (isAutoSize) {
              ratio.baseSize = "auto";
            }
            result.push(ratio);
          }
          return result;
        },
        _getRowsCount: function _getRowsCount() {
          return Math.ceil(this._items.length / this._getColCount());
        },
        _updateReferencedOptions: function _updateReferencedOptions(newLayoutData) {
          var _this244 = this;
          var layoutData = this.option("layoutData");
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(layoutData)) {
            Object.getOwnPropertyNames(layoutData).forEach(function (property) {
              return delete _this244._optionsByReference["layoutData." + property];
            });
          }
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(newLayoutData)) {
            Object.getOwnPropertyNames(newLayoutData).forEach(function (property) {
              return _this244._optionsByReference["layoutData." + property] = true;
            });
          }
        },
        _resetWidget: function _resetWidget(instance) {
          this._disableEditorValueChangedHandler = true;
          instance.reset();
          this._disableEditorValueChangedHandler = false;
          instance.option("isValid", true);
        },
        _optionChanged: function _optionChanged(args) {
          var _this245 = this;
          if (0 === args.fullName.search("layoutData.")) {
            return;
          }
          switch (args.name) {
            case "showRequiredMark":
            case "showOptionalMark":
            case "requiredMark":
            case "optionalMark":
              this._cashedRequiredConfig = null;
              this._invalidate();
              break;
            case "layoutData":
              this._updateReferencedOptions(args.value);
              if (this.option("items")) {
                if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isEmptyObject)(args.value)) {
                  this._itemsRunTimeInfo.each(function (_, itemRunTimeInfo) {
                    if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(itemRunTimeInfo.item)) {
                      var dataField = itemRunTimeInfo.item.dataField;
                      if (dataField && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(itemRunTimeInfo.widgetInstance)) {
                        var valueGetter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_12__.compileGetter)(dataField);
                        var dataValue = valueGetter(args.value);
                        var _itemRunTimeInfo$item = itemRunTimeInfo.item,
                          allowIndeterminateState = _itemRunTimeInfo$item.allowIndeterminateState,
                          editorType = _itemRunTimeInfo$item.editorType;
                        if (void 0 !== dataValue || _this245._isCheckboxUndefinedStateEnabled({
                          allowIndeterminateState: allowIndeterminateState,
                          editorType: editorType,
                          dataField: dataField
                        })) {
                          itemRunTimeInfo.widgetInstance.option("value", dataValue);
                        } else {
                          _this245._resetWidget(itemRunTimeInfo.widgetInstance);
                        }
                      }
                    }
                  });
                }
              } else {
                this._initDataAndItems(args.value);
                this._invalidate();
              }
              break;
            case "items":
              this._cleanItemWatchers();
              this._initDataAndItems(args.value);
              this._invalidate();
              break;
            case "alignItemLabels":
            case "labelLocation":
            case "labelMode":
            case "requiredMessage":
              this._invalidate();
              break;
            case "customizeItem":
              this._updateItems(this.option("layoutData"));
              this._invalidate();
              break;
            case "colCount":
            case "colCountByScreen":
              this._resetColCount();
              break;
            case "minColWidth":
              if ("auto" === this.option("colCount")) {
                this._resetColCount();
              }
              break;
            case "readOnly":
              break;
            case "width":
              this.callBase(args);
              if ("auto" === this.option("colCount")) {
                this._resetColCount();
              }
              break;
            case "onFieldDataChanged":
              break;
            default:
              this.callBase(args);
          }
        },
        _resetColCount: function _resetColCount() {
          this._cashedColCount = null;
          this._invalidate();
        },
        linkEditorToDataField: function linkEditorToDataField(editorInstance, dataField) {
          var _this246 = this;
          this.on("optionChanged", function (args) {
            if (args.fullName === "layoutData.".concat(dataField)) {
              editorInstance._setOptionWithoutOptionChange("value", args.value);
            }
          });
          editorInstance.on("valueChanged", function (args) {
            var isValueReferenceType = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(args.value) || Array.isArray(args.value);
            if (!_this246._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {
              _this246._updateFieldValue(dataField, args.value);
            }
          });
        },
        _dimensionChanged: function _dimensionChanged() {
          if ("auto" === this.option("colCount") && this.isCachedColCountObsolete()) {
            this._eventsStrategy.fireEvent("autoColCountChanged");
          }
        },
        updateData: function updateData(data, value) {
          var that = this;
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isObject)(data)) {
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_9__.each)(data, function (dataField, fieldValue) {
              that._updateFieldValue(dataField, fieldValue);
            });
          } else if ("string" === typeof data) {
            that._updateFieldValue(data, value);
          }
        },
        getEditor: function getEditor(field) {
          return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field);
        },
        isSingleColumnMode: function isSingleColumnMode(component) {
          var responsiveBox = this._responsiveBox || component;
          if (responsiveBox) {
            return responsiveBox.option("currentScreenFactor") === responsiveBox.option("singleColumnScreen");
          }
        },
        getItemsRunTimeInfo: function getItemsRunTimeInfo() {
          return this._itemsRunTimeInfo;
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__["default"])("dxLayoutManager", LayoutManager);
      /* harmony default export */
      __webpack_exports__["default"] = LayoutManager;

      /***/
    }),
    /***/8838: (
    /*!*****************************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/ui.form.layout_manager.utils.js ***!
      \*****************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"EDITORS_WITHOUT_LABELS": function EDITORS_WITHOUT_LABELS() {
          return /* binding */_EDITORS_WITHOUT_LABELS;
        },
        /* harmony export */"convertToRenderFieldItemOptions": function convertToRenderFieldItemOptions() {
          return /* binding */_convertToRenderFieldItemOptions;
        },
        /* harmony export */"getLabelMarkText": function getLabelMarkText() {
          return /* binding */_getLabelMarkText;
        },
        /* harmony export */"convertToLabelMarkOptions": function convertToLabelMarkOptions() {
          return /* binding */_convertToLabelMarkOptions;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_inflector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/utils/inflector */75102);
      /* harmony import */
      var _core_guid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/guid */22203);
      /* harmony import */
      var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./constants */73833);
      /**
       * DevExtreme (esm/ui/form/ui.form.layout_manager.utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var EDITORS_WITH_ARRAY_VALUE = ["dxTagBox", "dxRangeSlider"];
      var _EDITORS_WITHOUT_LABELS = ["dxCalendar", "dxCheckBox", "dxHtmlEditor", "dxRadioGroup", "dxRangeSlider", "dxSlider", "dxSwitch"];
      function _convertToRenderFieldItemOptions(_ref) {
        var $parent = _ref.$parent,
          rootElementCssClassList = _ref.rootElementCssClassList,
          formOrLayoutManager = _ref.formOrLayoutManager,
          createComponentCallback = _ref.createComponentCallback,
          item = _ref.item,
          template = _ref.template,
          labelTemplate = _ref.labelTemplate,
          name = _ref.name,
          formLabelLocation = _ref.formLabelLocation,
          requiredMessageTemplate = _ref.requiredMessageTemplate,
          validationGroup = _ref.validationGroup,
          editorValue = _ref.editorValue,
          canAssignUndefinedValueToEditor = _ref.canAssignUndefinedValueToEditor,
          editorValidationBoundary = _ref.editorValidationBoundary,
          editorStylingMode = _ref.editorStylingMode,
          showColonAfterLabel = _ref.showColonAfterLabel,
          managerLabelLocation = _ref.managerLabelLocation,
          itemId = _ref.itemId,
          managerMarkOptions = _ref.managerMarkOptions,
          labelMode = _ref.labelMode,
          onLabelTemplateRendered = _ref.onLabelTemplateRendered;
        var isRequired = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(item.isRequired) ? item.isRequired : !!_hasRequiredRuleInSet(item.validationRules);
        var isSimpleItem = item.itemType === _constants__WEBPACK_IMPORTED_MODULE_5__.SIMPLE_ITEM_TYPE;
        var helpID = item.helpText ? "dx-" + new _core_guid__WEBPACK_IMPORTED_MODULE_4__["default"]() : null;
        var labelOptions = _convertToLabelOptions({
          item: item,
          id: itemId,
          isRequired: isRequired,
          managerMarkOptions: managerMarkOptions,
          showColonAfterLabel: showColonAfterLabel,
          labelLocation: managerLabelLocation,
          formLabelMode: labelMode,
          labelTemplate: labelTemplate,
          onLabelTemplateRendered: onLabelTemplateRendered
        });
        var needRenderLabel = labelOptions.visible && (labelOptions.text || labelOptions.labelTemplate && isSimpleItem);
        var labelLocation = labelOptions.location,
          labelID = labelOptions.labelID;
        var labelNeedBaselineAlign = "top" !== labelLocation && ["dxTextArea", "dxRadioGroup", "dxCalendar", "dxHtmlEditor"].includes(item.editorType);
        var editorOptions = _convertToEditorOptions({
          editorType: item.editorType,
          editorValue: editorValue,
          defaultEditorName: item.dataField,
          canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,
          externalEditorOptions: item.editorOptions,
          editorInputId: itemId,
          editorValidationBoundary: editorValidationBoundary,
          editorStylingMode: editorStylingMode,
          formLabelMode: labelMode,
          labelText: labelOptions.textWithoutColon,
          labelMark: labelOptions.markOptions.showRequiredMark ? String.fromCharCode(160) + labelOptions.markOptions.requiredMark : ""
        });
        var needRenderOptionalMarkAsHelpText = labelOptions.markOptions.showOptionalMark && !labelOptions.visible && "hidden" !== editorOptions.labelMode && !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(item.helpText);
        var helpText = needRenderOptionalMarkAsHelpText ? labelOptions.markOptions.optionalMark : item.helpText;
        return {
          $parent: $parent,
          rootElementCssClassList: rootElementCssClassList,
          formOrLayoutManager: formOrLayoutManager,
          createComponentCallback: createComponentCallback,
          labelOptions: labelOptions,
          labelNeedBaselineAlign: labelNeedBaselineAlign,
          labelLocation: labelLocation,
          needRenderLabel: needRenderLabel,
          item: item,
          isSimpleItem: isSimpleItem,
          isRequired: isRequired,
          template: template,
          helpID: helpID,
          labelID: labelID,
          name: name,
          helpText: helpText,
          formLabelLocation: formLabelLocation,
          requiredMessageTemplate: requiredMessageTemplate,
          validationGroup: validationGroup,
          editorOptions: editorOptions
        };
      }
      function _getLabelMarkText(_ref2) {
        var showRequiredMark = _ref2.showRequiredMark,
          requiredMark = _ref2.requiredMark,
          showOptionalMark = _ref2.showOptionalMark,
          optionalMark = _ref2.optionalMark;
        if (!showRequiredMark && !showOptionalMark) {
          return "";
        }
        return String.fromCharCode(160) + (showRequiredMark ? requiredMark : optionalMark);
      }
      function _convertToLabelMarkOptions(_ref3, isRequired) {
        var showRequiredMark = _ref3.showRequiredMark,
          requiredMark = _ref3.requiredMark,
          showOptionalMark = _ref3.showOptionalMark,
          optionalMark = _ref3.optionalMark;
        return {
          showRequiredMark: showRequiredMark && isRequired,
          requiredMark: requiredMark,
          showOptionalMark: showOptionalMark && !isRequired,
          optionalMark: optionalMark
        };
      }
      function _convertToEditorOptions(_ref4) {
        var editorType = _ref4.editorType,
          defaultEditorName = _ref4.defaultEditorName,
          editorValue = _ref4.editorValue,
          canAssignUndefinedValueToEditor = _ref4.canAssignUndefinedValueToEditor,
          externalEditorOptions = _ref4.externalEditorOptions,
          editorInputId = _ref4.editorInputId,
          editorValidationBoundary = _ref4.editorValidationBoundary,
          editorStylingMode = _ref4.editorStylingMode,
          formLabelMode = _ref4.formLabelMode,
          labelText = _ref4.labelText,
          labelMark = _ref4.labelMark;
        var editorOptionsWithValue = {};
        if (void 0 !== editorValue || canAssignUndefinedValueToEditor) {
          editorOptionsWithValue.value = editorValue;
        }
        if (-1 !== EDITORS_WITH_ARRAY_VALUE.indexOf(editorType)) {
          editorOptionsWithValue.value = editorOptionsWithValue.value || [];
        }
        var labelMode = null === externalEditorOptions || void 0 === externalEditorOptions ? void 0 : externalEditorOptions.labelMode;
        if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_1__.isDefined)(labelMode)) {
          labelMode = "outside" === formLabelMode ? "hidden" : formLabelMode;
        }
        var stylingMode = (null === externalEditorOptions || void 0 === externalEditorOptions ? void 0 : externalEditorOptions.stylingMode) || editorStylingMode;
        var result = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_0__.extend)(true, editorOptionsWithValue, externalEditorOptions, {
          inputAttr: {
            id: editorInputId
          },
          validationBoundary: editorValidationBoundary,
          stylingMode: stylingMode,
          label: labelText,
          labelMode: labelMode,
          labelMark: labelMark
        });
        if (externalEditorOptions) {
          if (result.dataSource) {
            result.dataSource = externalEditorOptions.dataSource;
          }
          if (result.items) {
            result.items = externalEditorOptions.items;
          }
        }
        if (defaultEditorName && !result.name) {
          result.name = defaultEditorName;
        }
        return result;
      }
      function _hasRequiredRuleInSet(rules) {
        var hasRequiredRule;
        if (rules && rules.length) {
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__.each)(rules, function (index, rule) {
            if ("required" === rule.type) {
              hasRequiredRule = true;
              return false;
            }
          });
        }
        return hasRequiredRule;
      }
      function _convertToLabelOptions(_ref5) {
        var item = _ref5.item,
          id = _ref5.id,
          isRequired = _ref5.isRequired,
          managerMarkOptions = _ref5.managerMarkOptions,
          showColonAfterLabel = _ref5.showColonAfterLabel,
          labelLocation = _ref5.labelLocation,
          labelTemplate = _ref5.labelTemplate,
          formLabelMode = _ref5.formLabelMode,
          onLabelTemplateRendered = _ref5.onLabelTemplateRendered;
        var isEditorWithoutLabels = _EDITORS_WITHOUT_LABELS.includes(item.editorType);
        var labelOptions = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_0__.extend)({
          showColon: showColonAfterLabel,
          location: labelLocation,
          id: id,
          visible: "outside" === formLabelMode || isEditorWithoutLabels && "hidden" !== formLabelMode,
          isRequired: isRequired
        }, item ? item.label : {}, {
          markOptions: _convertToLabelMarkOptions(managerMarkOptions, isRequired),
          labelTemplate: labelTemplate,
          onLabelTemplateRendered: onLabelTemplateRendered
        });
        if (["dxRadioGroup", "dxCheckBox", "dxLookup", "dxSlider", "dxRangeSlider", "dxSwitch", "dxHtmlEditor"].includes(item.editorType)) {
          labelOptions.labelID = "dx-label-".concat(new _core_guid__WEBPACK_IMPORTED_MODULE_4__["default"]());
        }
        if (!labelOptions.text && item.dataField) {
          labelOptions.text = (0, _core_utils_inflector__WEBPACK_IMPORTED_MODULE_3__.captionize)(item.dataField);
        }
        if (labelOptions.text) {
          labelOptions.textWithoutColon = labelOptions.text;
          labelOptions.text += labelOptions.showColon ? ":" : "";
        }
        return labelOptions;
      }

      /***/
    }),
    /***/2034: (
    /*!**************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/form/ui.form.utils.js ***!
      \**************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"createItemPathByIndex": function createItemPathByIndex() {
          return /* binding */_createItemPathByIndex;
        },
        /* harmony export */"concatPaths": function concatPaths() {
          return /* binding */_concatPaths;
        },
        /* harmony export */"getTextWithoutSpaces": function getTextWithoutSpaces() {
          return /* binding */_getTextWithoutSpaces;
        },
        /* harmony export */"isEqualToDataFieldOrNameOrTitleOrCaption": function isEqualToDataFieldOrNameOrTitleOrCaption() {
          return /* binding */_isEqualToDataFieldOrNameOrTitleOrCaption;
        },
        /* harmony export */"getFullOptionName": function getFullOptionName() {
          return /* binding */_getFullOptionName;
        },
        /* harmony export */"getOptionNameFromFullName": function getOptionNameFromFullName() {
          return /* binding */_getOptionNameFromFullName;
        },
        /* harmony export */"tryGetTabPath": function tryGetTabPath() {
          return /* binding */_tryGetTabPath;
        },
        /* harmony export */"isFullPathContainsTabs": function isFullPathContainsTabs() {
          return /* binding */_isFullPathContainsTabs;
        },
        /* harmony export */"getItemPath": function getItemPath() {
          return /* binding */_getItemPath2;
        },
        /* harmony export */"convertToLayoutManagerOptions": function convertToLayoutManagerOptions() {
          return /* binding */_convertToLayoutManagerOptions;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /**
       * DevExtreme (esm/ui/form/ui.form.utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _createItemPathByIndex = function _createItemPathByIndex(index, isTabs) {
        return "".concat(isTabs ? "tabs" : "items", "[").concat(index, "]");
      };
      var _concatPaths = function _concatPaths(path1, path2) {
        if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(path1) && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_0__.isDefined)(path2)) {
          return "".concat(path1, ".").concat(path2);
        }
        return path1 || path2;
      };
      var _getTextWithoutSpaces = function _getTextWithoutSpaces(text) {
        return text ? text.replace(/\s/g, "") : void 0;
      };
      var _isEqualToDataFieldOrNameOrTitleOrCaption = function _isEqualToDataFieldOrNameOrTitleOrCaption(item, fieldName) {
        if (item) {
          return item.dataField === fieldName || item.name === fieldName || _getTextWithoutSpaces(item.title) === fieldName || "group" === item.itemType && _getTextWithoutSpaces(item.caption) === fieldName;
        }
        return false;
      };
      var _getFullOptionName = function _getFullOptionName(path, optionName) {
        return "".concat(path, ".").concat(optionName);
      };
      var _getOptionNameFromFullName = function _getOptionNameFromFullName(fullName) {
        var parts = fullName.split(".");
        return parts[parts.length - 1].replace(/\[\d+]/, "");
      };
      var _tryGetTabPath = function _tryGetTabPath(fullPath) {
        var pathParts = fullPath.split(".");
        var resultPathParts = _toConsumableArray(pathParts);
        for (var i = pathParts.length - 1; i >= 0; i--) {
          if (_isFullPathContainsTabs(pathParts[i])) {
            return resultPathParts.join(".");
          }
          resultPathParts.splice(i, 1);
        }
        return "";
      };
      var _isFullPathContainsTabs = function _isFullPathContainsTabs(fullPath) {
        return fullPath.indexOf("tabs") > -1;
      };
      var _getItemPath2 = function _getItemPath2(items, item, isTabs) {
        var index = items.indexOf(item);
        if (index > -1) {
          return _createItemPathByIndex(index, isTabs);
        }
        for (var i = 0; i < items.length; i++) {
          var targetItem = items[i];
          var tabOrGroupItems = targetItem.tabs || targetItem.items;
          if (tabOrGroupItems) {
            var itemPath = _getItemPath2(tabOrGroupItems, item, targetItem.tabs);
            if (itemPath) {
              return _concatPaths(_createItemPathByIndex(i, isTabs), itemPath);
            }
          }
        }
      };
      function _convertToLayoutManagerOptions(_ref) {
        var form = _ref.form,
          $formElement = _ref.$formElement,
          formOptions = _ref.formOptions,
          items = _ref.items,
          validationGroup = _ref.validationGroup,
          extendedLayoutManagerOptions = _ref.extendedLayoutManagerOptions,
          onFieldDataChanged = _ref.onFieldDataChanged,
          onContentReady = _ref.onContentReady,
          onDisposing = _ref.onDisposing,
          onFieldItemRendered = _ref.onFieldItemRendered;
        var baseOptions = {
          form: form,
          items: items,
          $formElement: $formElement,
          validationGroup: validationGroup,
          onFieldDataChanged: onFieldDataChanged,
          onContentReady: onContentReady,
          onDisposing: onDisposing,
          onFieldItemRendered: onFieldItemRendered,
          validationBoundary: formOptions.scrollingEnabled ? $formElement : void 0,
          scrollingEnabled: formOptions.scrollingEnabled,
          showRequiredMark: formOptions.showRequiredMark,
          showOptionalMark: formOptions.showOptionalMark,
          requiredMark: formOptions.requiredMark,
          optionalMark: formOptions.optionalMark,
          requiredMessage: formOptions.requiredMessage,
          screenByWidth: formOptions.screenByWidth,
          layoutData: formOptions.formData,
          labelLocation: formOptions.labelLocation,
          customizeItem: formOptions.customizeItem,
          minColWidth: formOptions.minColWidth,
          showColonAfterLabel: formOptions.showColonAfterLabel,
          onEditorEnterKey: formOptions.onEditorEnterKey,
          labelMode: formOptions.labelMode
        };
        var result = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(baseOptions, {
          isRoot: extendedLayoutManagerOptions.isRoot,
          colCount: extendedLayoutManagerOptions.colCount,
          alignItemLabels: extendedLayoutManagerOptions.alignItemLabels,
          cssItemClass: extendedLayoutManagerOptions.cssItemClass,
          colCountByScreen: extendedLayoutManagerOptions.colCountByScreen,
          onLayoutChanged: extendedLayoutManagerOptions.onLayoutChanged,
          width: extendedLayoutManagerOptions.width
        });
        return result;
      }

      /***/
    }),
    /***/19073: (
    /*!******************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/multi_view.js ***!
      \******************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _animation_translator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../animation/translator */10829);
      /* harmony import */
      var _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./multi_view/ui.multi_view.animation */35646);
      /* harmony import */
      var _core_utils_math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../core/utils/math */78148);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../core/utils/common */37552);
      /* harmony import */
      var _events_visibility_change__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../events/visibility_change */23495);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../core/element */60213);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../core/utils/type */33275);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../core/devices */41881);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _collection_ui_collection_widget_live_update__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ./collection/ui.collection_widget.live_update */61608);
      /* harmony import */
      var _events_gesture_swipeable__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../events/gesture/swipeable */50161);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../core/utils/deferred */97233);
      /**
       * DevExtreme (esm/ui/multi_view.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var MULTIVIEW_CLASS = "dx-multiview";
      var MULTIVIEW_WRAPPER_CLASS = "dx-multiview-wrapper";
      var MULTIVIEW_ITEM_CONTAINER_CLASS = "dx-multiview-item-container";
      var MULTIVIEW_ITEM_CLASS = "dx-multiview-item";
      var MULTIVIEW_ITEM_HIDDEN_CLASS = "dx-multiview-item-hidden";
      var MULTIVIEW_ITEM_DATA_KEY = "dxMultiViewItemData";
      var MULTIVIEW_ANIMATION_DURATION = 200;
      var toNumber = function toNumber(value) {
        return +value;
      };
      var position = function position($element) {
        return (0, _animation_translator__WEBPACK_IMPORTED_MODULE_2__.locate)($element).left;
      };
      var MultiView = _collection_ui_collection_widget_live_update__WEBPACK_IMPORTED_MODULE_12__["default"].inherit({
        _activeStateUnit: "." + MULTIVIEW_ITEM_CLASS,
        _supportedKeys: function _supportedKeys() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this.callBase(), {
            pageUp: _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop,
            pageDown: _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop
          });
        },
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this.callBase(), {
            selectedIndex: 0,
            swipeEnabled: true,
            animationEnabled: true,
            loop: false,
            deferRendering: true,
            _itemAttributes: {
              role: "tabpanel"
            },
            loopItemFocus: false,
            selectOnFocus: true,
            selectionMode: "single",
            selectionRequired: true,
            selectionByClick: false
          });
        },
        _defaultOptionsRules: function _defaultOptionsRules() {
          return this.callBase().concat([{
            device: function device() {
              return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_10__["default"].real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_10__["default"].isSimulator();
            },
            options: {
              focusStateEnabled: true
            }
          }]);
        },
        _itemClass: function _itemClass() {
          return MULTIVIEW_ITEM_CLASS;
        },
        _itemDataKey: function _itemDataKey() {
          return MULTIVIEW_ITEM_DATA_KEY;
        },
        _itemContainer: function _itemContainer() {
          return this._$itemContainer;
        },
        _itemElements: function _itemElements() {
          return this._itemContainer().children(this._itemSelector());
        },
        _itemWidth: function _itemWidth() {
          if (!this._itemWidthValue) {
            this._itemWidthValue = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this._$wrapper);
          }
          return this._itemWidthValue;
        },
        _clearItemWidthCache: function _clearItemWidthCache() {
          delete this._itemWidthValue;
        },
        _itemsCount: function _itemsCount() {
          return this.option("items").length;
        },
        _normalizeIndex: function _normalizeIndex(index) {
          var count = this._itemsCount();
          if (index < 0) {
            index += count;
          }
          if (index >= count) {
            index -= count;
          }
          return index;
        },
        _getRTLSignCorrection: function _getRTLSignCorrection() {
          return this.option("rtlEnabled") ? -1 : 1;
        },
        _init: function _init() {
          this.callBase.apply(this, arguments);
          var $element = this.$element();
          $element.addClass(MULTIVIEW_CLASS);
          this._$wrapper = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(MULTIVIEW_WRAPPER_CLASS);
          this._$wrapper.appendTo($element);
          this._$itemContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(MULTIVIEW_ITEM_CONTAINER_CLASS);
          this._$itemContainer.appendTo(this._$wrapper);
          this.option("loopItemFocus", this.option("loop"));
          this._initSwipeable();
        },
        _initMarkup: function _initMarkup() {
          this._deferredItems = [];
          this.callBase();
          var selectedItemIndices = this._getSelectedItemIndices();
          this._updateItemsVisibility(selectedItemIndices[0]);
        },
        _afterItemElementDeleted: function _afterItemElementDeleted($item, deletedActionArgs) {
          this.callBase($item, deletedActionArgs);
          if (this._deferredItems) {
            this._deferredItems.splice(deletedActionArgs.itemIndex, 1);
          }
        },
        _beforeItemElementInserted: function _beforeItemElementInserted(change) {
          this.callBase.apply(this, arguments);
          if (this._deferredItems) {
            this._deferredItems.splice(change.index, 0, null);
          }
        },
        _executeItemRenderAction: function _executeItemRenderAction(index, itemData, itemElement) {
          index = (this.option("items") || []).indexOf(itemData);
          this.callBase(index, itemData, itemElement);
        },
        _renderItemContent: function _renderItemContent(args) {
          var renderContentDeferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_14__.Deferred();
          var that = this;
          var callBase = this.callBase;
          var deferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_14__.Deferred();
          deferred.done(function () {
            var $itemContent = callBase.call(that, args);
            renderContentDeferred.resolve($itemContent);
          });
          this._deferredItems[args.index] = deferred;
          this.option("deferRendering") || deferred.resolve();
          return renderContentDeferred.promise();
        },
        _render: function _render() {
          var _this247 = this;
          this.callBase();
          (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.deferRender)(function () {
            var selectedItemIndices = _this247._getSelectedItemIndices();
            _this247._updateItems(selectedItemIndices[0]);
          });
        },
        _updateItems: function _updateItems(selectedIndex, newIndex) {
          this._updateItemsPosition(selectedIndex, newIndex);
          this._updateItemsVisibility(selectedIndex, newIndex);
        },
        _modifyByChanges: function _modifyByChanges() {
          this.callBase.apply(this, arguments);
          var selectedItemIndices = this._getSelectedItemIndices();
          this._updateItemsVisibility(selectedItemIndices[0]);
        },
        _updateItemsPosition: function _updateItemsPosition(selectedIndex, newIndex) {
          var $itemElements = this._itemElements();
          var positionSign = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_9__.isDefined)(newIndex) ? -this._animationDirection(newIndex, selectedIndex) : void 0;
          var $selectedItem = $itemElements.eq(selectedIndex);
          _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__._translator.move($selectedItem, 0);
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_9__.isDefined)(newIndex)) {
            _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__._translator.move($itemElements.eq(newIndex), 100 * positionSign + "%");
          }
        },
        _updateItemsVisibility: function _updateItemsVisibility(selectedIndex, newIndex) {
          var $itemElements = this._itemElements();
          $itemElements.each(function (itemIndex, item) {
            var $item = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(item);
            var isHidden = itemIndex !== selectedIndex && itemIndex !== newIndex;
            if (!isHidden) {
              this._renderSpecificItem(itemIndex);
            }
            $item.toggleClass(MULTIVIEW_ITEM_HIDDEN_CLASS, isHidden);
            this.setAria("hidden", isHidden || void 0, $item);
          }.bind(this));
        },
        _renderSpecificItem: function _renderSpecificItem(index) {
          var $item = this._itemElements().eq(index);
          var hasItemContent = $item.find(this._itemContentClass()).length > 0;
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_9__.isDefined)(index) && !hasItemContent) {
            this._deferredItems[index].resolve();
            (0, _events_visibility_change__WEBPACK_IMPORTED_MODULE_7__.triggerResizeEvent)($item);
          }
        },
        _refreshItem: function _refreshItem($item, item) {
          this.callBase($item, item);
          this._updateItemsVisibility(this.option("selectedIndex"));
        },
        _setAriaSelected: _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop,
        _updateSelection: function _updateSelection(addedSelection, removedSelection) {
          var newIndex = addedSelection[0];
          var prevIndex = removedSelection[0];
          _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__.animation.complete(this._$itemContainer);
          this._updateItems(prevIndex, newIndex);
          var animationDirection = this._animationDirection(newIndex, prevIndex);
          this._animateItemContainer(animationDirection * this._itemWidth(), function () {
            _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__._translator.move(this._$itemContainer, 0);
            this._updateItems(newIndex);
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this._$itemContainer);
          }.bind(this));
        },
        _animateItemContainer: function _animateItemContainer(position, completeCallback) {
          var duration = this.option("animationEnabled") ? MULTIVIEW_ANIMATION_DURATION : 0;
          _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__.animation.moveTo(this._$itemContainer, position, duration, completeCallback);
        },
        _animationDirection: function _animationDirection(newIndex, prevIndex) {
          var containerPosition = position(this._$itemContainer);
          var indexDifference = (prevIndex - newIndex) * this._getRTLSignCorrection() * this._getItemFocusLoopSignCorrection();
          var isSwipePresent = 0 !== containerPosition;
          var directionSignVariable = isSwipePresent ? containerPosition : indexDifference;
          return (0, _core_utils_math__WEBPACK_IMPORTED_MODULE_4__.sign)(directionSignVariable);
        },
        _getSwipeDisabledState: function _getSwipeDisabledState() {
          return !this.option("swipeEnabled") || this._itemsCount() <= 1;
        },
        _initSwipeable: function _initSwipeable() {
          var _this248 = this;
          this._createComponent(this.$element(), _events_gesture_swipeable__WEBPACK_IMPORTED_MODULE_13__["default"], {
            disabled: this._getSwipeDisabledState(),
            elastic: false,
            itemSizeFunc: this._itemWidth.bind(this),
            onStart: function onStart(args) {
              return _this248._swipeStartHandler(args.event);
            },
            onUpdated: function onUpdated(args) {
              return _this248._swipeUpdateHandler(args.event);
            },
            onEnd: function onEnd(args) {
              return _this248._swipeEndHandler(args.event);
            }
          });
        },
        _swipeStartHandler: function _swipeStartHandler(e) {
          _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__.animation.complete(this._$itemContainer);
          var selectedIndex = this.option("selectedIndex");
          var loop = this.option("loop");
          var lastIndex = this._itemsCount() - 1;
          var rtl = this.option("rtlEnabled");
          e.maxLeftOffset = toNumber(loop || (rtl ? selectedIndex > 0 : selectedIndex < lastIndex));
          e.maxRightOffset = toNumber(loop || (rtl ? selectedIndex < lastIndex : selectedIndex > 0));
          this._swipeDirection = null;
        },
        _swipeUpdateHandler: function _swipeUpdateHandler(e) {
          var offset = e.offset;
          var swipeDirection = (0, _core_utils_math__WEBPACK_IMPORTED_MODULE_4__.sign)(offset) * this._getRTLSignCorrection();
          _multi_view_ui_multi_view_animation__WEBPACK_IMPORTED_MODULE_3__._translator.move(this._$itemContainer, offset * this._itemWidth());
          if (swipeDirection !== this._swipeDirection) {
            this._swipeDirection = swipeDirection;
            var selectedIndex = this.option("selectedIndex");
            var newIndex = this._normalizeIndex(selectedIndex - swipeDirection);
            this._updateItems(selectedIndex, newIndex);
          }
        },
        _swipeEndHandler: function _swipeEndHandler(e) {
          var targetOffset = e.targetOffset * this._getRTLSignCorrection();
          if (targetOffset) {
            this.option("selectedIndex", this._normalizeIndex(this.option("selectedIndex") - targetOffset));
            var $selectedElement = this.itemElements().filter(".dx-item-selected");
            this.option("focusStateEnabled") && this.option("focusedElement", (0, _core_element__WEBPACK_IMPORTED_MODULE_8__.getPublicElement)($selectedElement));
          } else {
            this._animateItemContainer(0, _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop);
          }
        },
        _getItemFocusLoopSignCorrection: function _getItemFocusLoopSignCorrection() {
          return this._itemFocusLooped ? -1 : 1;
        },
        _moveFocus: function _moveFocus() {
          this.callBase.apply(this, arguments);
          this._itemFocusLooped = false;
        },
        _prevItem: function _prevItem($items) {
          var $result = this.callBase.apply(this, arguments);
          this._itemFocusLooped = $result.is($items.last());
          return $result;
        },
        _nextItem: function _nextItem($items) {
          var $result = this.callBase.apply(this, arguments);
          this._itemFocusLooped = $result.is($items.first());
          return $result;
        },
        _dimensionChanged: function _dimensionChanged() {
          this._clearItemWidthCache();
        },
        _visibilityChanged: function _visibilityChanged(visible) {
          if (visible) {
            this._dimensionChanged();
          }
        },
        _updateSwipeDisabledState: function _updateSwipeDisabledState() {
          var disabled = this._getSwipeDisabledState();
          _events_gesture_swipeable__WEBPACK_IMPORTED_MODULE_13__["default"].getInstance(this.$element()).option("disabled", disabled);
        },
        _optionChanged: function _optionChanged(args) {
          var value = args.value;
          switch (args.name) {
            case "loop":
              this.option("loopItemFocus", value);
              break;
            case "animationEnabled":
              break;
            case "swipeEnabled":
              this._updateSwipeDisabledState();
              break;
            case "deferRendering":
              this._invalidate();
              break;
            case "items":
              this._updateSwipeDisabledState();
              this.callBase(args);
              break;
            default:
              this.callBase(args);
          }
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_11__["default"])("dxMultiView", MultiView);
      /* harmony default export */
      __webpack_exports__["default"] = MultiView;

      /***/
    }),
    /***/35646: (
    /*!******************************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/multi_view/ui.multi_view.animation.js ***!
      \******************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"_translator": function _translator() {
          return /* binding */_translator2;
        },
        /* harmony export */"animation": function animation() {
          return /* binding */_animation;
        }
        /* harmony export */
      });
      /* harmony import */
      var _animation_fx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../animation/fx */65736);
      /* harmony import */
      var _animation_translator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../animation/translator */10829);
      /**
       * DevExtreme (esm/ui/multi_view/ui.multi_view.animation.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _translator2 = {
        move: function move($element, position) {
          (0, _animation_translator__WEBPACK_IMPORTED_MODULE_1__.move)($element, {
            left: position
          });
        }
      };
      var _animation = {
        moveTo: function moveTo($element, position, duration, completeAction) {
          _animation_fx__WEBPACK_IMPORTED_MODULE_0__["default"].animate($element, {
            type: "slide",
            to: {
              left: position
            },
            duration: duration,
            complete: completeAction
          });
        },
        complete: function complete($element) {
          _animation_fx__WEBPACK_IMPORTED_MODULE_0__["default"].stop($element, true);
        }
      };

      /***/
    }),
    /***/77621: (
    /*!*******************************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/popover/popover_position_controller.js ***!
      \*******************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"PopoverPositionController": function PopoverPositionController() {
          return /* binding */_PopoverPositionController;
        },
        /* harmony export */"POPOVER_POSITION_ALIASES": function POPOVER_POSITION_ALIASES() {
          return /* binding */_POPOVER_POSITION_ALIASES;
        }
        /* harmony export */
      });
      /* harmony import */
      var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @babel/runtime/helpers/esm/extends */76518);
      /* harmony import */
      var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */21493);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _animation_position__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../animation/position */85094);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../core/utils/common */37552);
      /* harmony import */
      var _renovation_ui_resizable_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../renovation/ui/resizable/utils */61960);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../core/utils/size */84167);
      /* harmony import */
      var _overlay_overlay_position_controller__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../overlay/overlay_position_controller */64916);
      /**
       * DevExtreme (esm/ui/popover/popover_position_controller.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _excluded = ["shading", "target", "$arrow"];
      var WEIGHT_OF_SIDES = {
        left: -1,
        top: -1,
        center: 0,
        right: 1,
        bottom: 1
      };
      var _POPOVER_POSITION_ALIASES = {
        top: {
          my: "bottom center",
          at: "top center",
          collision: "fit flip"
        },
        bottom: {
          my: "top center",
          at: "bottom center",
          collision: "fit flip"
        },
        right: {
          my: "left center",
          at: "right center",
          collision: "flip fit"
        },
        left: {
          my: "right center",
          at: "left center",
          collision: "flip fit"
        }
      };
      var POPOVER_DEFAULT_BOUNDARY_OFFSET = {
        h: 10,
        v: 10
      };
      var _PopoverPositionController = /*#__PURE__*/function (_overlay_overlay_posi) {
        _inherits(_PopoverPositionController, _overlay_overlay_posi);
        function _PopoverPositionController(_ref) {
          var _this249;
          _classCallCheck(this, _PopoverPositionController);
          var shading = _ref.shading,
            target = _ref.target,
            $arrow = _ref.$arrow,
            args = (0, _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_ref, _excluded);
          _this249 = _callSuper(this, _PopoverPositionController, [args]);
          _this249._props = (0, _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, _this249._props, {
            shading: shading,
            target: target
          });
          _this249._$arrow = $arrow;
          _this249._positionSide = void 0;
          _this249.updatePosition(_this249._props.position);
          return _this249;
        }
        _createClass(_PopoverPositionController, [{
          key: "positionWrapper",
          value: function positionWrapper() {
            if (this._props.shading) {
              this._$wrapper.css({
                top: 0,
                left: 0
              });
            }
          }
        }, {
          key: "updateTarget",
          value: function updateTarget(target) {
            this._props.target = target;
            this.updatePosition(this._props.position);
          }
        }, {
          key: "_renderBoundaryOffset",
          value: function _renderBoundaryOffset() {}
        }, {
          key: "_getContainerPosition",
          value: function _getContainerPosition() {
            var offset = (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_5__.pairToObject)(this._position.offset || "");
            var hOffset = offset.h,
              vOffset = offset.v;
            var isVerticalSide = this._isVerticalSide();
            var isHorizontalSide = this._isHorizontalSide();
            if (isVerticalSide || isHorizontalSide) {
              var isPopoverInside = this._isPopoverInside();
              var sign = (isPopoverInside ? -1 : 1) * WEIGHT_OF_SIDES[this._positionSide];
              var arrowSize = isVerticalSide ? (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_7__.getHeight)(this._$arrow) : (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_7__.getWidth)(this._$arrow);
              var arrowSizeCorrection = this._getContentBorderWidth(this._positionSide);
              var arrowOffset = sign * (arrowSize - arrowSizeCorrection);
              isVerticalSide ? vOffset += arrowOffset : hOffset += arrowOffset;
            }
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)({}, this._position, {
              offset: hOffset + " " + vOffset
            });
          }
        }, {
          key: "_getContentBorderWidth",
          value: function _getContentBorderWidth(side) {
            var borderWidth = this._$content.css(_renovation_ui_resizable_utils__WEBPACK_IMPORTED_MODULE_6__.borderWidthStyles[side]);
            return parseInt(borderWidth) || 0;
          }
        }, {
          key: "_isPopoverInside",
          value: function _isPopoverInside() {
            var my = _animation_position__WEBPACK_IMPORTED_MODULE_4__["default"].setup.normalizeAlign(this._position.my);
            var at = _animation_position__WEBPACK_IMPORTED_MODULE_4__["default"].setup.normalizeAlign(this._position.at);
            return my.h === at.h && my.v === at.v;
          }
        }, {
          key: "_isVerticalSide",
          value: function _isVerticalSide() {
            var side = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._positionSide;
            return "top" === side || "bottom" === side;
          }
        }, {
          key: "_isHorizontalSide",
          value: function _isHorizontalSide() {
            var side = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._positionSide;
            return "left" === side || "right" === side;
          }
        }, {
          key: "_getDisplaySide",
          value: function _getDisplaySide(position) {
            var my = _animation_position__WEBPACK_IMPORTED_MODULE_4__["default"].setup.normalizeAlign(position.my);
            var at = _animation_position__WEBPACK_IMPORTED_MODULE_4__["default"].setup.normalizeAlign(position.at);
            var weightSign = WEIGHT_OF_SIDES[my.h] === WEIGHT_OF_SIDES[at.h] && WEIGHT_OF_SIDES[my.v] === WEIGHT_OF_SIDES[at.v] ? -1 : 1;
            var horizontalWeight = Math.abs(WEIGHT_OF_SIDES[my.h] - weightSign * WEIGHT_OF_SIDES[at.h]);
            var verticalWeight = Math.abs(WEIGHT_OF_SIDES[my.v] - weightSign * WEIGHT_OF_SIDES[at.v]);
            return horizontalWeight > verticalWeight ? at.h : at.v;
          }
        }, {
          key: "_normalizePosition",
          value: function _normalizePosition(positionProp) {
            var defaultPositionConfig = {
              of: this._props.target,
              boundaryOffset: POPOVER_DEFAULT_BOUNDARY_OFFSET
            };
            var resultPosition;
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isDefined)(positionProp)) {
              resultPosition = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(true, {}, defaultPositionConfig, this._positionToObject(positionProp));
            } else {
              resultPosition = defaultPositionConfig;
            }
            this._positionSide = this._getDisplaySide(resultPosition);
            return resultPosition;
          }
        }, {
          key: "_positionToObject",
          value: function _positionToObject(positionProp) {
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_2__.isString)(positionProp)) {
              return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)({}, _POPOVER_POSITION_ALIASES[positionProp]);
            }
            return positionProp;
          }
        }]);
        return _PopoverPositionController;
      }(_overlay_overlay_position_controller__WEBPACK_IMPORTED_MODULE_8__.OverlayPositionController);
      /***/
    }),
    /***/23679: (
    /*!**************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/popover/ui.popover.js ***!
      \**************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/utils/window */88684);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/element */60213);
      /* harmony import */
      var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/dom_adapter */81113);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../events/core/events_engine */99064);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../core/component_registrator */2382);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _animation_translator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../animation/translator */10829);
      /* harmony import */
      var _animation_position__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../animation/position */85094);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /* harmony import */
      var _core_utils_math__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../core/utils/math */78148);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../../events/utils/index */3151);
      /* harmony import */
      var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../widget/ui.errors */42491);
      /* harmony import */
      var _popup_ui_popup__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../popup/ui.popup */23772);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../../core/utils/position */9622);
      /* harmony import */
      var _popover_position_controller__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ./popover_position_controller */77621);
      /**
       * DevExtreme (esm/ui/popover/ui.popover.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var POPOVER_CLASS = "dx-popover";
      var POPOVER_WRAPPER_CLASS = "dx-popover-wrapper";
      var POPOVER_ARROW_CLASS = "dx-popover-arrow";
      var POPOVER_WITHOUT_TITLE_CLASS = "dx-popover-without-title";
      var POSITION_FLIP_MAP = {
        left: "right",
        top: "bottom",
        right: "left",
        bottom: "top",
        center: "center"
      };
      var getEventNameByOption = function getEventNameByOption(optionValue) {
        return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_10__.isObject)(optionValue) ? optionValue.name : optionValue;
      };
      var getEventName = function getEventName(that, optionName) {
        var optionValue = that.option(optionName);
        return getEventNameByOption(optionValue);
      };
      var getEventDelay = function getEventDelay(that, optionName) {
        var optionValue = that.option(optionName);
        return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_10__.isObject)(optionValue) && optionValue.delay;
      };
      var attachEvent = function attachEvent(that, name) {
        var _that$option = that.option(),
          target = _that$option.target,
          shading = _that$option.shading,
          disabled = _that$option.disabled,
          hideEvent = _that$option.hideEvent;
        var isSelector = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_10__.isString)(target);
        var shouldIgnoreHideEvent = shading && "hide" === name;
        var event = shouldIgnoreHideEvent ? null : getEventName(that, "".concat(name, "Event"));
        if (shouldIgnoreHideEvent && hideEvent) {
          _widget_ui_errors__WEBPACK_IMPORTED_MODULE_13__["default"].log("W1020");
        }
        if (!event || disabled) {
          return;
        }
        var eventName = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_12__.addNamespace)(event, that.NAME);
        var action = that._createAction(function () {
          var delay = getEventDelay(that, name + "Event");
          this._clearEventsTimeouts();
          if (delay) {
            this._timeouts[name] = setTimeout(function () {
              that[name]();
            }, delay);
          } else {
            that[name]();
          }
        }.bind(that), {
          validatingTargetName: "target"
        });
        var handler = function handler(e) {
          action({
            event: e,
            target: (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(e.currentTarget)
          });
        };
        var EVENT_HANDLER_NAME = "_" + name + "EventHandler";
        if (isSelector) {
          that[EVENT_HANDLER_NAME] = handler;
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_5__["default"].on(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__["default"].getDocument(), eventName, target, handler);
        } else {
          var targetElement = (0, _core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)((0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(target));
          that[EVENT_HANDLER_NAME] = void 0;
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_5__["default"].on(targetElement, eventName, handler);
        }
      };
      var detachEvent = function detachEvent(that, target, name, event) {
        var eventName = event || getEventName(that, name + "Event");
        if (!eventName) {
          return;
        }
        eventName = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_12__.addNamespace)(eventName, that.NAME);
        var EVENT_HANDLER_NAME = "_" + name + "EventHandler";
        if (that[EVENT_HANDLER_NAME]) {
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_5__["default"].off(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_4__["default"].getDocument(), eventName, target, that[EVENT_HANDLER_NAME]);
        } else {
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_5__["default"].off((0, _core_element__WEBPACK_IMPORTED_MODULE_3__.getPublicElement)((0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(target)), eventName);
        }
      };
      var Popover = _popup_ui_popup__WEBPACK_IMPORTED_MODULE_14__["default"].inherit({
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(this.callBase(), {
            target: void 0,
            shading: false,
            position: (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)({}, _popover_position_controller__WEBPACK_IMPORTED_MODULE_16__.POPOVER_POSITION_ALIASES.bottom),
            hideOnOutsideClick: true,
            animation: {
              show: {
                type: "fade",
                from: 0,
                to: 1
              },
              hide: {
                type: "fade",
                from: 1,
                to: 0
              }
            },
            showTitle: false,
            width: "auto",
            height: "auto",
            dragEnabled: false,
            resizeEnabled: false,
            fullScreen: false,
            hideOnParentScroll: true,
            arrowPosition: "",
            arrowOffset: 0,
            _fixWrapperPosition: true
          });
        },
        _defaultOptionsRules: function _defaultOptionsRules() {
          return [{
            device: {
              platform: "ios"
            },
            options: {
              arrowPosition: {
                boundaryOffset: {
                  h: 20,
                  v: -10
                },
                collision: "fit"
              }
            }
          }, {
            device: function device() {
              return !(0, _core_utils_window__WEBPACK_IMPORTED_MODULE_2__.hasWindow)();
            },
            options: {
              animation: null
            }
          }];
        },
        _init: function _init() {
          this.callBase();
          this._renderArrow();
          this._timeouts = {};
          this.$element().addClass(POPOVER_CLASS);
          this.$wrapper().addClass(POPOVER_WRAPPER_CLASS);
        },
        _render: function _render() {
          this.callBase.apply(this, arguments);
          this._detachEvents(this.option("target"));
          this._attachEvents();
        },
        _detachEvents: function _detachEvents(target) {
          detachEvent(this, target, "show");
          detachEvent(this, target, "hide");
        },
        _attachEvents: function _attachEvents() {
          attachEvent(this, "show");
          attachEvent(this, "hide");
        },
        _renderArrow: function _renderArrow() {
          this._$arrow = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(POPOVER_ARROW_CLASS).prependTo(this.$overlayContent());
        },
        _documentDownHandler: function _documentDownHandler(e) {
          if (this._isOutsideClick(e)) {
            return this.callBase(e);
          }
          return true;
        },
        _isOutsideClick: function _isOutsideClick(e) {
          return !(0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(e.target).closest(this.option("target")).length;
        },
        _animate: function _animate(animation) {
          if (animation && animation.to && "object" === typeof animation.to) {
            (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(animation.to, {
              position: this._getContainerPosition()
            });
          }
          this.callBase.apply(this, arguments);
        },
        _stopAnimation: function _stopAnimation() {
          this.callBase.apply(this, arguments);
        },
        _renderTitle: function _renderTitle() {
          this.$wrapper().toggleClass(POPOVER_WITHOUT_TITLE_CLASS, !this.option("showTitle"));
          this.callBase();
        },
        _renderPosition: function _renderPosition() {
          var shouldUpdateDimensions = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : true;
          this.callBase();
          this._renderOverlayPosition(shouldUpdateDimensions);
          this._actions.onPositioned();
        },
        _renderOverlayPosition: function _renderOverlayPosition(shouldUpdateDimensions) {
          this._resetOverlayPosition(shouldUpdateDimensions);
          this._updateContentSize(shouldUpdateDimensions);
          var contentPosition = this._getContainerPosition();
          var resultLocation = _animation_position__WEBPACK_IMPORTED_MODULE_9__["default"].setup(this.$overlayContent(), contentPosition);
          var positionSide = this._getSideByLocation(resultLocation);
          this._togglePositionClass("dx-position-" + positionSide);
          this._toggleFlippedClass(resultLocation.h.flip, resultLocation.v.flip);
          var isArrowVisible = this._isHorizontalSide() || this._isVerticalSide();
          if (isArrowVisible) {
            this._renderArrowPosition(positionSide);
          }
        },
        _resetOverlayPosition: function _resetOverlayPosition(shouldUpdateDimensions) {
          this._setContentHeight(shouldUpdateDimensions);
          this._togglePositionClass("dx-position-" + this._positionController._positionSide);
          (0, _animation_translator__WEBPACK_IMPORTED_MODULE_8__.move)(this.$overlayContent(), {
            left: 0,
            top: 0
          });
          this._$arrow.css({
            top: "auto",
            right: "auto",
            bottom: "auto",
            left: "auto"
          });
        },
        _updateContentSize: function _updateContentSize(shouldUpdateDimensions) {
          if (!this.$content() || !shouldUpdateDimensions) {
            return;
          }
          var containerLocation = _animation_position__WEBPACK_IMPORTED_MODULE_9__["default"].calculate(this.$overlayContent(), this._getContainerPosition());
          if (containerLocation.h.oversize > 0 && this._isHorizontalSide() && !containerLocation.h.fit) {
            var newContainerWidth = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this.$overlayContent()) - containerLocation.h.oversize;
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setWidth)(this.$overlayContent(), newContainerWidth);
          }
          if (containerLocation.v.oversize > 0 && this._isVerticalSide() && !containerLocation.v.fit) {
            var newOverlayContentHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)(this.$overlayContent()) - containerLocation.v.oversize;
            var newPopupContentHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)(this.$content()) - containerLocation.v.oversize;
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setHeight)(this.$overlayContent(), newOverlayContentHeight);
            (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.setHeight)(this.$content(), newPopupContentHeight);
          }
        },
        _getContainerPosition: function _getContainerPosition() {
          return this._positionController._getContainerPosition();
        },
        _getHideOnParentScrollTarget: function _getHideOnParentScrollTarget() {
          return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(this._positionController._position.of || this.callBase());
        },
        _getSideByLocation: function _getSideByLocation(location) {
          var isFlippedByVertical = location.v.flip;
          var isFlippedByHorizontal = location.h.flip;
          return this._isVerticalSide() && isFlippedByVertical || this._isHorizontalSide() && isFlippedByHorizontal || this._isPopoverInside() ? POSITION_FLIP_MAP[this._positionController._positionSide] : this._positionController._positionSide;
        },
        _togglePositionClass: function _togglePositionClass(positionClass) {
          this.$wrapper().removeClass("dx-position-left dx-position-right dx-position-top dx-position-bottom").addClass(positionClass);
        },
        _toggleFlippedClass: function _toggleFlippedClass(isFlippedHorizontal, isFlippedVertical) {
          this.$wrapper().toggleClass("dx-popover-flipped-horizontal", isFlippedHorizontal).toggleClass("dx-popover-flipped-vertical", isFlippedVertical);
        },
        _renderArrowPosition: function _renderArrowPosition(side) {
          var arrowRect = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_15__.getBoundingRect)(this._$arrow.get(0));
          var arrowFlip = -(this._isVerticalSide(side) ? arrowRect.height : arrowRect.width);
          this._$arrow.css(POSITION_FLIP_MAP[side], arrowFlip);
          var axis = this._isVerticalSide(side) ? "left" : "top";
          var sizeProperty = this._isVerticalSide(side) ? "width" : "height";
          var $target = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(this._positionController._position.of);
          var targetOffset = _animation_position__WEBPACK_IMPORTED_MODULE_9__["default"].offset($target) || {
            top: 0,
            left: 0
          };
          var contentOffset = _animation_position__WEBPACK_IMPORTED_MODULE_9__["default"].offset(this.$overlayContent());
          var arrowSize = arrowRect[sizeProperty];
          var contentLocation = contentOffset[axis];
          var contentSize = (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_15__.getBoundingRect)(this.$overlayContent().get(0))[sizeProperty];
          var targetLocation = targetOffset[axis];
          var targetElement = $target.get(0);
          var targetSize = targetElement && !targetElement.preventDefault ? (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_15__.getBoundingRect)(targetElement)[sizeProperty] : 0;
          var min = Math.max(contentLocation, targetLocation);
          var max = Math.min(contentLocation + contentSize, targetLocation + targetSize);
          var arrowLocation;
          if ("start" === this.option("arrowPosition")) {
            arrowLocation = min - contentLocation;
          } else if ("end" === this.option("arrowPosition")) {
            arrowLocation = max - contentLocation - arrowSize;
          } else {
            arrowLocation = (min + max) / 2 - contentLocation - arrowSize / 2;
          }
          var borderWidth = this._positionController._getContentBorderWidth(side);
          var finalArrowLocation = (0, _core_utils_math__WEBPACK_IMPORTED_MODULE_11__.fitIntoRange)(arrowLocation - borderWidth + this.option("arrowOffset"), borderWidth, contentSize - arrowSize - 2 * borderWidth);
          this._$arrow.css(axis, finalArrowLocation);
        },
        _isPopoverInside: function _isPopoverInside() {
          return this._positionController._isPopoverInside();
        },
        _setContentHeight: function _setContentHeight(fullUpdate) {
          if (fullUpdate) {
            this.callBase();
          }
        },
        _getPositionControllerConfig: function _getPositionControllerConfig() {
          var _this$option3 = this.option(),
            shading = _this$option3.shading,
            target = _this$option3.target;
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)({}, this.callBase(), {
            target: target,
            shading: shading,
            $arrow: this._$arrow
          });
        },
        _initPositionController: function _initPositionController() {
          this._positionController = new _popover_position_controller__WEBPACK_IMPORTED_MODULE_16__.PopoverPositionController(this._getPositionControllerConfig());
        },
        _renderWrapperDimensions: function _renderWrapperDimensions() {
          if (this.option("shading")) {
            this.$wrapper().css({
              width: "100%",
              height: "100%"
            });
          }
        },
        _isVerticalSide: function _isVerticalSide(side) {
          return this._positionController._isVerticalSide(side);
        },
        _isHorizontalSide: function _isHorizontalSide(side) {
          return this._positionController._isHorizontalSide(side);
        },
        _clearEventTimeout: function _clearEventTimeout(name) {
          clearTimeout(this._timeouts[name]);
        },
        _clearEventsTimeouts: function _clearEventsTimeouts() {
          this._clearEventTimeout("show");
          this._clearEventTimeout("hide");
        },
        _clean: function _clean() {
          this._detachEvents(this.option("target"));
          this.callBase.apply(this, arguments);
        },
        _optionChanged: function _optionChanged(args) {
          switch (args.name) {
            case "arrowPosition":
            case "arrowOffset":
              this._renderGeometry();
              break;
            case "fullScreen":
              if (args.value) {
                this.option("fullScreen", false);
              }
              break;
            case "target":
              args.previousValue && this._detachEvents(args.previousValue);
              this._positionController.updateTarget(args.value);
              this._invalidate();
              break;
            case "showEvent":
            case "hideEvent":
              var name = args.name.substring(0, 4);
              var event = getEventNameByOption(args.previousValue);
              this.hide();
              detachEvent(this, this.option("target"), name, event);
              attachEvent(this, name);
              break;
            case "visible":
              this._clearEventTimeout(args.value ? "show" : "hide");
              this.callBase(args);
              break;
            default:
              this.callBase(args);
          }
        },
        show: function show(target) {
          if (target) {
            this.option("target", target);
          }
          return this.callBase();
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_6__["default"])("dxPopover", Popover);
      /* harmony default export */
      __webpack_exports__["default"] = Popover;

      /***/
    }),
    /***/24113: (
    /*!*************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/popup.js ***!
      \*************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _popup_ui_popup_full__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./popup/ui.popup.full */34410);
      /**
       * DevExtreme (esm/ui/popup.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      /* harmony default export */
      __webpack_exports__["default"] = _popup_ui_popup_full__WEBPACK_IMPORTED_MODULE_0__["default"];

      /***/
    }),
    /***/34410: (
    /*!***************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/popup/ui.popup.full.js ***!
      \***************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */PopupFull;
        }
        /* harmony export */
      });
      /* harmony import */
      var _toolbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../toolbar */8866);
      /* harmony import */
      var _popup_ui_popup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../popup/ui.popup */23772);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/component_registrator */2382);
      /**
       * DevExtreme (esm/ui/popup/ui.popup.full.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var PopupFull = /*#__PURE__*/function (_popup_ui_popup__WEBP) {
        _inherits(PopupFull, _popup_ui_popup__WEBP);
        function PopupFull() {
          _classCallCheck(this, PopupFull);
          return _callSuper(this, PopupFull, arguments);
        }
        _createClass(PopupFull, [{
          key: "_getToolbarName",
          value: function _getToolbarName() {
            return "dxToolbar";
          }
        }]);
        return PopupFull;
      }(_popup_ui_popup__WEBPACK_IMPORTED_MODULE_1__["default"]);
      PopupFull.defaultOptions = function (rule) {
        _popup_ui_popup__WEBPACK_IMPORTED_MODULE_1__["default"].defaultOptions(rule);
      };
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_2__["default"])("dxPopup", PopupFull);

      /***/
    }),
    /***/97044: (
    /*!*******************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/radio_group.js ***!
      \*******************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _radio_group_radio_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./radio_group/radio_group */52522);
      /**
       * DevExtreme (esm/ui/radio_group.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      /* harmony default export */
      __webpack_exports__["default"] = _radio_group_radio_group__WEBPACK_IMPORTED_MODULE_0__["default"];

      /***/
    }),
    /***/52522: (
    /*!*******************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/radio_group/radio_group.js ***!
      \*******************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/devices */41881);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/utils/common */37552);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../core/component_registrator */2382);
      /* harmony import */
      var _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../collection/ui.collection_widget.edit */2076);
      /* harmony import */
      var _editor_ui_data_expression__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../editor/ui.data_expression */28084);
      /* harmony import */
      var _editor_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../editor/editor */68016);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../../core/utils/deferred */97233);
      /**
       * DevExtreme (esm/ui/radio_group/radio_group.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var RADIO_BUTTON_CHECKED_CLASS = "dx-radiobutton-checked";
      var RADIO_BUTTON_CLASS = "dx-radiobutton";
      var RADIO_BUTTON_ICON_CHECKED_CLASS = "dx-radiobutton-icon-checked";
      var RADIO_BUTTON_ICON_CLASS = "dx-radiobutton-icon";
      var RADIO_BUTTON_ICON_DOT_CLASS = "dx-radiobutton-icon-dot";
      var RADIO_GROUP_HORIZONTAL_CLASS = "dx-radiogroup-horizontal";
      var RADIO_GROUP_VERTICAL_CLASS = "dx-radiogroup-vertical";
      var RADIO_VALUE_CONTAINER_CLASS = "dx-radio-value-container";
      var RADIO_GROUP_CLASS = "dx-radiogroup";
      var RADIO_FEEDBACK_HIDE_TIMEOUT = 100;
      var RadioCollection = /*#__PURE__*/function (_collection_ui_collec) {
        _inherits(RadioCollection, _collection_ui_collec);
        function RadioCollection() {
          _classCallCheck(this, RadioCollection);
          return _callSuper(this, RadioCollection, arguments);
        }
        _createClass(RadioCollection, [{
          key: "_focusTarget",
          value: function _focusTarget() {
            return this.$element().parent();
          }
        }, {
          key: "_nullValueSelectionSupported",
          value: function _nullValueSelectionSupported() {
            return true;
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            var defaultOptions = _get(_getPrototypeOf(RadioCollection.prototype), "_getDefaultOptions", this).call(this);
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(defaultOptions, _editor_ui_data_expression__WEBPACK_IMPORTED_MODULE_7__["default"]._dataExpressionDefaultOptions(), {
              _itemAttributes: {
                role: "radio"
              }
            });
          }
        }, {
          key: "_initMarkup",
          value: function _initMarkup() {
            var _this250 = this;
            _get(_getPrototypeOf(RadioCollection.prototype), "_initMarkup", this).call(this);
            (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.deferRender)(function () {
              _this250.itemElements().addClass(RADIO_BUTTON_CLASS);
            });
          }
        }, {
          key: "_keyboardEventBindingTarget",
          value: function _keyboardEventBindingTarget() {
            return this._focusTarget();
          }
        }, {
          key: "_postprocessRenderItem",
          value: function _postprocessRenderItem(args) {
            var html = args.itemData.html,
              itemElement = args.itemElement;
            if (!html) {
              var $radio = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(RADIO_BUTTON_ICON_CLASS);
              (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(RADIO_BUTTON_ICON_DOT_CLASS).appendTo($radio);
              var $radioContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").append($radio).addClass(RADIO_VALUE_CONTAINER_CLASS);
              (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(itemElement).prepend($radioContainer);
            }
            _get(_getPrototypeOf(RadioCollection.prototype), "_postprocessRenderItem", this).call(this, args);
          }
        }, {
          key: "_processSelectableItem",
          value: function _processSelectableItem($itemElement, isSelected) {
            _get(_getPrototypeOf(RadioCollection.prototype), "_processSelectableItem", this).call(this, $itemElement, isSelected);
            $itemElement.toggleClass(RADIO_BUTTON_CHECKED_CLASS, isSelected).find(".".concat(RADIO_BUTTON_ICON_CLASS)).first().toggleClass(RADIO_BUTTON_ICON_CHECKED_CLASS, isSelected);
            this.setAria("checked", isSelected, $itemElement);
          }
        }, {
          key: "_refreshContent",
          value: function _refreshContent() {
            this._prepareContent();
            this._renderContent();
          }
        }, {
          key: "_supportedKeys",
          value: function _supportedKeys() {
            var parent = _get(_getPrototypeOf(RadioCollection.prototype), "_supportedKeys", this).call(this);
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)({}, parent, {
              enter: function enter(e) {
                e.preventDefault();
                return parent.enter.apply(this, arguments);
              },
              space: function space(e) {
                e.preventDefault();
                return parent.space.apply(this, arguments);
              }
            });
          }
        }, {
          key: "_itemElements",
          value: function _itemElements() {
            return this._itemContainer().children(this._itemSelector());
          }
        }, {
          key: "_setAriaSelected",
          value: function _setAriaSelected() {}
        }]);
        return RadioCollection;
      }(_collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_6__["default"]);
      var RadioGroup = /*#__PURE__*/function (_editor_editor__WEBPA) {
        _inherits(RadioGroup, _editor_editor__WEBPA);
        function RadioGroup() {
          _classCallCheck(this, RadioGroup);
          return _callSuper(this, RadioGroup, arguments);
        }
        _createClass(RadioGroup, [{
          key: "_dataSourceOptions",
          value: function _dataSourceOptions() {
            return {
              paginate: false
            };
          }
        }, {
          key: "_defaultOptionsRules",
          value: function _defaultOptionsRules() {
            var defaultOptionsRules = _get(_getPrototypeOf(RadioGroup.prototype), "_defaultOptionsRules", this).call(this);
            return defaultOptionsRules.concat([{
              device: {
                tablet: true
              },
              options: {
                layout: "horizontal"
              }
            }, {
              device: function device() {
                return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_2__["default"].real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_2__["default"].isSimulator();
              },
              options: {
                focusStateEnabled: true
              }
            }]);
          }
        }, {
          key: "_fireContentReadyAction",
          value: function _fireContentReadyAction(force) {
            force && _get(_getPrototypeOf(RadioGroup.prototype), "_fireContentReadyAction", this).call(this);
          }
        }, {
          key: "_focusTarget",
          value: function _focusTarget() {
            return this.$element();
          }
        }, {
          key: "_getAriaTarget",
          value: function _getAriaTarget() {
            return this.$element();
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            var defaultOptions = _get(_getPrototypeOf(RadioGroup.prototype), "_getDefaultOptions", this).call(this);
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(defaultOptions, (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(_editor_ui_data_expression__WEBPACK_IMPORTED_MODULE_7__["default"]._dataExpressionDefaultOptions(), {
              hoverStateEnabled: true,
              activeStateEnabled: true,
              layout: "vertical"
            }));
          }
        }, {
          key: "_getItemValue",
          value: function _getItemValue(item) {
            return this._valueGetter ? this._valueGetter(item) : item.text;
          }
        }, {
          key: "_getSubmitElement",
          value: function _getSubmitElement() {
            return this._$submitElement;
          }
        }, {
          key: "_init",
          value: function _init() {
            _get(_getPrototypeOf(RadioGroup.prototype), "_init", this).call(this);
            this._activeStateUnit = ".".concat(RADIO_BUTTON_CLASS);
            this._feedbackHideTimeout = RADIO_FEEDBACK_HIDE_TIMEOUT;
            this._initDataExpressions();
          }
        }, {
          key: "_initMarkup",
          value: function _initMarkup() {
            this.$element().addClass(RADIO_GROUP_CLASS);
            this._renderSubmitElement();
            this.setAria("role", "radiogroup");
            this._renderRadios();
            this._renderLayout();
            _get(_getPrototypeOf(RadioGroup.prototype), "_initMarkup", this).call(this);
          }
        }, {
          key: "_itemClickHandler",
          value: function _itemClickHandler(_ref) {
            var itemElement = _ref.itemElement,
              event = _ref.event,
              itemData = _ref.itemData;
            if (this.itemElements().is(itemElement)) {
              var newValue = this._getItemValue(itemData);
              if (newValue !== this.option("value")) {
                this._saveValueChangeEvent(event);
                this.option("value", newValue);
              }
            }
          }
        }, {
          key: "_getSelectedItemKeys",
          value: function _getSelectedItemKeys() {
            var value = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.option("value");
            var isNullSelectable = "this" !== this.option("valueExpr");
            var shouldSelectValue = isNullSelectable && null === value || (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_4__.isDefined)(value);
            return shouldSelectValue ? [value] : [];
          }
        }, {
          key: "_setSelection",
          value: function _setSelection(currentValue) {
            var value = this._unwrappedValue(currentValue);
            this._setCollectionWidgetOption("selectedItemKeys", this._getSelectedItemKeys(value));
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(args) {
            var name = args.name,
              value = args.value;
            this._dataExpressionOptionChanged(args);
            switch (name) {
              case "dataSource":
                this._invalidate();
                break;
              case "focusStateEnabled":
              case "accessKey":
              case "tabIndex":
                this._setCollectionWidgetOption(name, value);
                break;
              case "disabled":
                _get(_getPrototypeOf(RadioGroup.prototype), "_optionChanged", this).call(this, args);
                this._setCollectionWidgetOption(name, value);
                break;
              case "valueExpr":
                this._setCollectionWidgetOption("keyExpr", this._getCollectionKeyExpr());
                break;
              case "value":
                this._setSelection(value);
                this._setSubmitValue(value);
                _get(_getPrototypeOf(RadioGroup.prototype), "_optionChanged", this).call(this, args);
                break;
              case "items":
                this._setSelection(this.option("value"));
                break;
              case "itemTemplate":
              case "displayExpr":
                break;
              case "layout":
                this._renderLayout();
                this._updateItemsSize();
                break;
              default:
                _get(_getPrototypeOf(RadioGroup.prototype), "_optionChanged", this).call(this, args);
            }
          }
        }, {
          key: "_render",
          value: function _render() {
            _get(_getPrototypeOf(RadioGroup.prototype), "_render", this).call(this);
            this._updateItemsSize();
          }
        }, {
          key: "_renderLayout",
          value: function _renderLayout() {
            var layout = this.option("layout");
            var $element = this.$element();
            $element.toggleClass(RADIO_GROUP_VERTICAL_CLASS, "vertical" === layout);
            $element.toggleClass(RADIO_GROUP_HORIZONTAL_CLASS, "horizontal" === layout);
          }
        }, {
          key: "_renderRadios",
          value: function _renderRadios() {
            var _this251 = this;
            this._areRadiosCreated = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_9__.Deferred();
            var $radios = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").appendTo(this.$element());
            var _this$option4 = this.option(),
              displayExpr = _this$option4.displayExpr,
              accessKey = _this$option4.accessKey,
              focusStateEnabled = _this$option4.focusStateEnabled,
              itemTemplate = _this$option4.itemTemplate,
              tabIndex = _this$option4.tabIndex;
            this._createComponent($radios, RadioCollection, {
              onInitialized: function onInitialized(_ref2) {
                var component = _ref2.component;
                _this251._radios = component;
              },
              onContentReady: function onContentReady(e) {
                _this251._fireContentReadyAction(true);
              },
              onItemClick: this._itemClickHandler.bind(this),
              displayExpr: displayExpr,
              accessKey: accessKey,
              dataSource: this._dataSource,
              focusStateEnabled: focusStateEnabled,
              itemTemplate: itemTemplate,
              keyExpr: this._getCollectionKeyExpr(),
              noDataText: "",
              scrollingEnabled: false,
              selectionByClick: false,
              selectionMode: "single",
              selectedItemKeys: this._getSelectedItemKeys(),
              tabIndex: tabIndex
            });
            this._areRadiosCreated.resolve();
          }
        }, {
          key: "_renderSubmitElement",
          value: function _renderSubmitElement() {
            this._$submitElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<input>").attr("type", "hidden").appendTo(this.$element());
            this._setSubmitValue();
          }
        }, {
          key: "_setOptionsByReference",
          value: function _setOptionsByReference() {
            _get(_getPrototypeOf(RadioGroup.prototype), "_setOptionsByReference", this).call(this);
            (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(this._optionsByReference, {
              value: true
            });
          }
        }, {
          key: "_setSubmitValue",
          value: function _setSubmitValue(value) {
            var _value;
            value = null !== (_value = value) && void 0 !== _value ? _value : this.option("value");
            var submitValue = "this" === this.option("valueExpr") ? this._displayGetter(value) : value;
            this._$submitElement.val(submitValue);
          }
        }, {
          key: "_setCollectionWidgetOption",
          value: function _setCollectionWidgetOption() {
            this._areRadiosCreated.done(this._setWidgetOption.bind(this, "_radios", arguments));
          }
        }, {
          key: "_updateItemsSize",
          value: function _updateItemsSize() {
            if ("horizontal" === this.option("layout")) {
              this.itemElements().css("height", "auto");
            } else {
              var itemsCount = this.option("items").length;
              this.itemElements().css("height", 100 / itemsCount + "%");
            }
          }
        }, {
          key: "focus",
          value: function focus() {
            var _this$_radios;
            null === (_this$_radios = this._radios) || void 0 === _this$_radios ? void 0 : _this$_radios.focus();
          }
        }, {
          key: "itemElements",
          value: function itemElements() {
            var _this$_radios2;
            return null === (_this$_radios2 = this._radios) || void 0 === _this$_radios2 ? void 0 : _this$_radios2.itemElements();
          }
        }]);
        return RadioGroup;
      }(_editor_editor__WEBPACK_IMPORTED_MODULE_8__["default"]);
      RadioGroup.include(_editor_ui_data_expression__WEBPACK_IMPORTED_MODULE_7__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__["default"])("dxRadioGroup", RadioGroup);
      /* harmony default export */
      __webpack_exports__["default"] = RadioGroup;

      /***/
    }),
    /***/3907: (
    /*!**********************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/responsive_box.js ***!
      \**********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../core/utils/common */37552);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../core/utils/type */33275);
      /* harmony import */
      var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./widget/ui.errors */42491);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../core/utils/window */88684);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _box__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ./box */67914);
      /* harmony import */
      var _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ./collection/ui.collection_widget.edit */2076);
      /**
       * DevExtreme (esm/ui/responsive_box.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var RESPONSIVE_BOX_CLASS = "dx-responsivebox";
      var SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + "-screen-";
      var BOX_ITEM_CLASS = "dx-box-item";
      var BOX_ITEM_DATA_KEY = "dxBoxItemData";
      var HD_SCREEN_WIDTH = 1920;
      var ResponsiveBox = _collection_ui_collection_widget_edit__WEBPACK_IMPORTED_MODULE_10__["default"].inherit({
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(this.callBase(), {
            rows: [],
            cols: [],
            screenByWidth: null,
            singleColumnScreen: "",
            height: "100%",
            width: "100%",
            activeStateEnabled: false,
            focusStateEnabled: false,
            onItemStateChanged: void 0,
            onLayoutChanged: null,
            currentScreenFactor: void 0
          });
        },
        _init: function _init() {
          if (!this.option("screenByWidth")) {
            this._options.silent("screenByWidth", _core_utils_window__WEBPACK_IMPORTED_MODULE_5__.defaultScreenFactorFunc);
          }
          this.callBase();
          this._initLayoutChangedAction();
        },
        _initLayoutChangedAction: function _initLayoutChangedAction() {
          this._layoutChangedAction = this._createActionByOption("onLayoutChanged", {
            excludeValidators: ["disabled", "readonly"]
          });
        },
        _itemClass: function _itemClass() {
          return BOX_ITEM_CLASS;
        },
        _itemDataKey: function _itemDataKey() {
          return BOX_ITEM_DATA_KEY;
        },
        _initMarkup: function _initMarkup() {
          this.callBase();
          this.$element().addClass(RESPONSIVE_BOX_CLASS);
        },
        _renderItems: function _renderItems() {
          this._setScreenSize();
          this._screenItems = this._itemsByScreen();
          this._prepareGrid();
          this._spreadItems();
          this._layoutItems();
          this._linkNodeToItem();
        },
        _itemOptionChanged: function _itemOptionChanged(item) {
          var $item = this._findItemElementByItem(item);
          if (!$item.length) {
            return;
          }
          this._refreshItem($item, item);
          this._clearItemNodeTemplates();
          this._update(true);
        },
        _setScreenSize: function _setScreenSize() {
          var currentScreen = this._getCurrentScreen();
          this._removeScreenSizeClass();
          this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);
          this.option("currentScreenFactor", currentScreen);
        },
        _removeScreenSizeClass: function _removeScreenSizeClass() {
          var currentScreenFactor = this.option("currentScreenFactor");
          currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor);
        },
        _prepareGrid: function _prepareGrid() {
          var grid = this._grid = [];
          this._prepareRowsAndCols();
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._rows, function () {
            var row = [];
            grid.push(row);
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._cols, function () {
              row.push(this._createEmptyCell());
            }.bind(this));
          }.bind(this));
        },
        getSingleColumnRows: function getSingleColumnRows() {
          var rows = this.option("rows");
          var screenItemsLength = this._screenItems.length;
          if (rows.length) {
            var filteredRows = this._filterByScreen(rows);
            var result = [];
            for (var i = 0; i < screenItemsLength; i++) {
              var sizeConfig = this._defaultSizeConfig();
              if (i < filteredRows.length && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isDefined)(filteredRows[i].shrink)) {
                sizeConfig.shrink = filteredRows[i].shrink;
              }
              result.push(sizeConfig);
            }
            return result;
          } else {
            return this._defaultSizeConfig(screenItemsLength);
          }
        },
        _prepareRowsAndCols: function _prepareRowsAndCols() {
          if (this._isSingleColumnScreen()) {
            this._prepareSingleColumnScreenItems();
            this._rows = this.getSingleColumnRows();
            this._cols = this._defaultSizeConfig(1);
          } else {
            this._rows = this._sizesByScreen(this.option("rows"));
            this._cols = this._sizesByScreen(this.option("cols"));
          }
        },
        _isSingleColumnScreen: function _isSingleColumnScreen() {
          return this._screenRegExp().test(this.option("singleColumnScreen")) || !this.option("rows").length || !this.option("cols").length;
        },
        _prepareSingleColumnScreenItems: function _prepareSingleColumnScreenItems() {
          this._screenItems.sort(function (item1, item2) {
            return item1.location.row - item2.location.row || item1.location.col - item2.location.col;
          });
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._screenItems, function (index, item) {
            (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(item.location, {
              row: index,
              col: 0,
              rowspan: 1,
              colspan: 1
            });
          });
        },
        _sizesByScreen: function _sizesByScreen(sizeConfigs) {
          return (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.map)(this._filterByScreen(sizeConfigs), function (sizeConfig) {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(this._defaultSizeConfig(), sizeConfig);
          }.bind(this));
        },
        _createDefaultSizeConfig: function _createDefaultSizeConfig() {
          return {
            ratio: 1,
            baseSize: 0,
            minSize: 0,
            maxSize: 0
          };
        },
        _defaultSizeConfig: function _defaultSizeConfig(size) {
          var defaultSizeConfig = this._createDefaultSizeConfig();
          if (!arguments.length) {
            return defaultSizeConfig;
          }
          var result = [];
          for (var i = 0; i < size; i++) {
            result.push(defaultSizeConfig);
          }
          return result;
        },
        _filterByScreen: function _filterByScreen(items) {
          var screenRegExp = this._screenRegExp();
          return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.grep)(items, function (item) {
            return !item.screen || screenRegExp.test(item.screen);
          });
        },
        _screenRegExp: function _screenRegExp() {
          var screen = this._getCurrentScreen();
          return new RegExp("(^|\\s)" + screen + "($|\\s)", "i");
        },
        _getCurrentScreen: function _getCurrentScreen() {
          var width = this._screenWidth();
          return this.option("screenByWidth")(width);
        },
        _screenWidth: function _screenWidth() {
          return (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_5__.hasWindow)() ? (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)((0, _core_utils_window__WEBPACK_IMPORTED_MODULE_5__.getWindow)()) : HD_SCREEN_WIDTH;
        },
        _createEmptyCell: function _createEmptyCell() {
          return {
            item: {},
            location: {
              colspan: 1,
              rowspan: 1
            }
          };
        },
        _spreadItems: function _spreadItems() {
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._screenItems, function (_, itemInfo) {
            var location = itemInfo.location || {};
            var itemCol = location.col;
            var itemRow = location.row;
            var row = this._grid[itemRow];
            var itemCell = row && row[itemCol];
            this._occupyCells(itemCell, itemInfo);
          }.bind(this));
        },
        _itemsByScreen: function _itemsByScreen() {
          var _this252 = this;
          return this.option("items").reduce(function (result, item) {
            var locations = item.location || {};
            locations = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isPlainObject)(locations) ? [locations] : locations;
            _this252._filterByScreen(locations).forEach(function (location) {
              result.push({
                item: item,
                location: (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)({
                  rowspan: 1,
                  colspan: 1
                }, location)
              });
            });
            return result;
          }, []);
        },
        _occupyCells: function _occupyCells(itemCell, itemInfo) {
          if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {
            return;
          }
          (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(itemCell, itemInfo);
          this._markSpanningCell(itemCell);
        },
        _isItemCellOccupied: function _isItemCellOccupied(itemCell, itemInfo) {
          if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(itemCell.item)) {
            return true;
          }
          var result = false;
          this._loopOverSpanning(itemInfo.location, function (cell) {
            result = result || !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isEmptyObject)(cell.item);
          });
          return result;
        },
        _loopOverSpanning: function _loopOverSpanning(location, callback) {
          var rowEnd = location.row + location.rowspan - 1;
          var colEnd = location.col + location.colspan - 1;
          var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);
          var boundColEnd = Math.min(colEnd, this._cols.length - 1);
          location.rowspan -= rowEnd - boundRowEnd;
          location.colspan -= colEnd - boundColEnd;
          for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {
            for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {
              if (rowIndex !== location.row || colIndex !== location.col) {
                callback(this._grid[rowIndex][colIndex]);
              }
            }
          }
        },
        _markSpanningCell: function _markSpanningCell(itemCell) {
          this._loopOverSpanning(itemCell.location, function (cell) {
            (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(cell, {
              item: itemCell.item,
              spanningCell: itemCell
            });
          });
        },
        _linkNodeToItem: function _linkNodeToItem() {
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._itemElements(), function (_, itemNode) {
            var $item = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(itemNode);
            var item = $item.data(BOX_ITEM_DATA_KEY);
            if (!item.box) {
              item.node = $item.children();
            }
          });
        },
        _layoutItems: function _layoutItems() {
          var rowsCount = this._grid.length;
          var colsCount = rowsCount && this._grid[0].length;
          if (!rowsCount && !colsCount) {
            return;
          }
          var result = this._layoutBlock({
            direction: "col",
            row: {
              start: 0,
              end: rowsCount - 1
            },
            col: {
              start: 0,
              end: colsCount - 1
            }
          });
          var rootBox = this._prepareBoxConfig(result.box || {
            direction: "row",
            items: [(0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(result, {
              ratio: 1
            })]
          });
          (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(rootBox, this._rootBoxConfig(rootBox.items));
          this._$root = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").appendTo(this._itemContainer());
          this._createComponent(this._$root, _box__WEBPACK_IMPORTED_MODULE_9__["default"], rootBox);
        },
        _rootBoxConfig: function _rootBoxConfig(items) {
          var rootItems = (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(items, function (index, item) {
            this._needApplyAutoBaseSize(item) && (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(item, {
              baseSize: "auto"
            });
          }.bind(this));
          return {
            width: "100%",
            height: "100%",
            items: rootItems,
            itemTemplate: this._getTemplateByOption("itemTemplate"),
            itemHoldTimeout: this.option("itemHoldTimeout"),
            onItemHold: this._createActionByOption("onItemHold"),
            onItemClick: this._createActionByOption("onItemClick"),
            onItemContextMenu: this._createActionByOption("onItemContextMenu"),
            onItemRendered: this._createActionByOption("onItemRendered")
          };
        },
        _needApplyAutoBaseSize: function _needApplyAutoBaseSize(item) {
          return !item.baseSize && (!item.minSize || "auto" === item.minSize) && (!item.maxSize || "auto" === item.maxSize);
        },
        _prepareBoxConfig: function _prepareBoxConfig(config) {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(config || {}, {
            crossAlign: "stretch",
            onItemStateChanged: this.option("onItemStateChanged")
          });
        },
        _layoutBlock: function _layoutBlock(options) {
          if (this._isSingleItem(options)) {
            return this._itemByCell(options.row.start, options.col.start);
          }
          return this._layoutDirection(options);
        },
        _isSingleItem: function _isSingleItem(options) {
          var firstCellLocation = this._grid[options.row.start][options.col.start].location;
          var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;
          var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;
          return isItemRowSpanned && isItemColSpanned;
        },
        _itemByCell: function _itemByCell(rowIndex, colIndex) {
          var itemCell = this._grid[rowIndex][colIndex];
          return itemCell.spanningCell ? null : itemCell.item;
        },
        _layoutDirection: function _layoutDirection(options) {
          var items = [];
          var direction = options.direction;
          var crossDirection = this._crossDirection(direction);
          var block;
          while (block = this._nextBlock(options)) {
            if (this._isBlockIndivisible(options.prevBlockOptions, block)) {
              throw _widget_ui_errors__WEBPACK_IMPORTED_MODULE_4__["default"].Error("E1025");
            }
            var item = this._layoutBlock({
              direction: crossDirection,
              row: block.row,
              col: block.col,
              prevBlockOptions: options
            });
            if (item) {
              (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(item, this._blockSize(block, crossDirection));
              items.push(item);
            }
            options[crossDirection].start = block[crossDirection].end + 1;
          }
          return {
            box: this._prepareBoxConfig({
              direction: direction,
              items: items
            })
          };
        },
        _isBlockIndivisible: function _isBlockIndivisible(options, block) {
          return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end;
        },
        _crossDirection: function _crossDirection(direction) {
          return "col" === direction ? "row" : "col";
        },
        _nextBlock: function _nextBlock(options) {
          var direction = options.direction;
          var crossDirection = this._crossDirection(direction);
          var startIndex = options[direction].start;
          var endIndex = options[direction].end;
          var crossStartIndex = options[crossDirection].start;
          if (crossStartIndex > options[crossDirection].end) {
            return null;
          }
          var crossSpan = 1;
          for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {
            var lineCrossSpan = 1;
            for (var index = startIndex; index <= endIndex; index++) {
              var cell = this._cellByDirection(direction, index, crossIndex);
              lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + "span"]);
            }
            var lineCrossEndIndex = crossIndex + lineCrossSpan;
            var crossEndIndex = crossStartIndex + crossSpan;
            if (lineCrossEndIndex > crossEndIndex) {
              crossSpan += lineCrossEndIndex - crossEndIndex;
            }
          }
          var result = {};
          result[direction] = {
            start: startIndex,
            end: endIndex
          };
          result[crossDirection] = {
            start: crossStartIndex,
            end: crossStartIndex + crossSpan - 1
          };
          return result;
        },
        _cellByDirection: function _cellByDirection(direction, index, crossIndex) {
          return "col" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex];
        },
        _blockSize: function _blockSize(block, direction) {
          var defaultMinSize = "row" === direction ? "auto" : 0;
          var sizeConfigs = "row" === direction ? this._rows : this._cols;
          var result = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_7__.extend)(this._createDefaultSizeConfig(), {
            ratio: 0
          });
          for (var index = block[direction].start; index <= block[direction].end; index++) {
            var sizeConfig = sizeConfigs[index];
            result.ratio += sizeConfig.ratio;
            result.baseSize += sizeConfig.baseSize;
            result.minSize += sizeConfig.minSize;
            result.maxSize += sizeConfig.maxSize;
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_3__.isDefined)(sizeConfig.shrink)) {
              result.shrink = sizeConfig.shrink;
            }
          }
          result.minSize = result.minSize ? result.minSize : defaultMinSize;
          result.maxSize = result.maxSize ? result.maxSize : "auto";
          this._isSingleColumnScreen() && (result.baseSize = "auto");
          return result;
        },
        _update: function _update(forceRemoveRoot) {
          var $existingRoot = this._$root;
          this._renderItems();
          if ($existingRoot) {
            if (forceRemoveRoot) {
              $existingRoot.remove();
            } else {
              $existingRoot.detach();
              this._saveAssistantRoot($existingRoot);
            }
          }
          this._layoutChangedAction();
        },
        _saveAssistantRoot: function _saveAssistantRoot($root) {
          this._assistantRoots = this._assistantRoots || [];
          this._assistantRoots.push($root);
        },
        _dispose: function _dispose() {
          this._clearItemNodeTemplates();
          this._cleanUnusedRoots();
          this.callBase.apply(this, arguments);
        },
        _cleanUnusedRoots: function _cleanUnusedRoots() {
          if (!this._assistantRoots) {
            return;
          }
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this._assistantRoots, function (_, item) {
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(item).remove();
          });
        },
        _clearItemNodeTemplates: function _clearItemNodeTemplates() {
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_6__.each)(this.option("items"), function () {
            delete this.node;
          });
        },
        _attachClickEvent: _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop,
        _optionChanged: function _optionChanged(args) {
          switch (args.name) {
            case "rows":
            case "cols":
            case "screenByWidth":
            case "singleColumnScreen":
              this._clearItemNodeTemplates();
              this._invalidate();
              break;
            case "width":
            case "height":
              this.callBase(args);
              this._update();
              break;
            case "onLayoutChanged":
              this._initLayoutChangedAction();
              break;
            case "itemTemplate":
              this._clearItemNodeTemplates();
              this.callBase(args);
              break;
            case "currentScreenFactor":
              break;
            default:
              this.callBase(args);
          }
        },
        _dimensionChanged: function _dimensionChanged() {
          if (this._getCurrentScreen() !== this.option("currentScreenFactor")) {
            this._update();
          }
        },
        repaint: function repaint() {
          this._update();
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_8__["default"])("dxResponsiveBox", ResponsiveBox);
      /* harmony default export */
      __webpack_exports__["default"] = ResponsiveBox;

      /***/
    }),
    /***/70610: (
    /*!*****************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/scheduler.js ***!
      \*****************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _scheduler_ui_scheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./scheduler/ui.scheduler */18817);
      /**
       * DevExtreme (esm/ui/scheduler.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      /* harmony default export */
      __webpack_exports__["default"] = _scheduler_ui_scheduler__WEBPACK_IMPORTED_MODULE_0__["default"];

      /***/
    }),
    /***/18817: (
    /*!******************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/scheduler/ui.scheduler.js ***!
      \******************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _internal_scheduler_m_scheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../__internal/scheduler/m_scheduler */74931);
      /**
       * DevExtreme (esm/ui/scheduler/ui.scheduler.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      /* harmony default export */
      __webpack_exports__["default"] = _internal_scheduler_m_scheduler__WEBPACK_IMPORTED_MODULE_0__["default"];

      /***/
    }),
    /***/53374: (
    /*!********************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/scheduler/utils.timeZone.js ***!
      \********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../__internal/scheduler/m_utils_time_zone */98281);
      /**
       * DevExtreme (esm/ui/scheduler/utils.timeZone.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      /* harmony default export */
      __webpack_exports__["default"] = _internal_scheduler_m_utils_time_zone__WEBPACK_IMPORTED_MODULE_0__["default"];

      /***/
    }),
    /***/98222: (
    /*!**************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/switch.js ***!
      \**************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../events/core/events_engine */99064);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../core/devices */41881);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _editor_editor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./editor/editor */68016);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../events/utils/index */3151);
      /* harmony import */
      var _events_core_emitter_feedback__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../events/core/emitter.feedback */88215);
      /* harmony import */
      var _core_utils_position__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../core/utils/position */9622);
      /* harmony import */
      var _animation_fx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../animation/fx */65736);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../localization/message */19336);
      /* harmony import */
      var _events_click__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../events/click */38894);
      /* harmony import */
      var _events_gesture_swipeable__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../events/gesture/swipeable */50161);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../core/utils/deferred */97233);
      /**
       * DevExtreme (esm/ui/switch.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var SWITCH_CLASS = "dx-switch";
      var SWITCH_WRAPPER_CLASS = SWITCH_CLASS + "-wrapper";
      var SWITCH_CONTAINER_CLASS = SWITCH_CLASS + "-container";
      var SWITCH_INNER_CLASS = SWITCH_CLASS + "-inner";
      var SWITCH_HANDLE_CLASS = SWITCH_CLASS + "-handle";
      var SWITCH_ON_VALUE_CLASS = SWITCH_CLASS + "-on-value";
      var SWITCH_ON_CLASS = SWITCH_CLASS + "-on";
      var SWITCH_OFF_CLASS = SWITCH_CLASS + "-off";
      var SWITCH_ANIMATION_DURATION = 100;
      var Switch = _editor_editor__WEBPACK_IMPORTED_MODULE_6__["default"].inherit({
        _supportedKeys: function _supportedKeys() {
          var isRTL = this.option("rtlEnabled");
          var click = function click(e) {
            e.preventDefault();
            this._clickAction({
              event: e
            });
          };
          var move = function move(value, e) {
            e.preventDefault();
            e.stopPropagation();
            this._saveValueChangeEvent(e);
            this._animateValue(value);
          };
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)(this.callBase(), {
            space: click,
            enter: click,
            leftArrow: move.bind(this, isRTL ? true : false),
            rightArrow: move.bind(this, isRTL ? false : true)
          });
        },
        _useTemplates: function _useTemplates() {
          return false;
        },
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)(this.callBase(), {
            hoverStateEnabled: true,
            activeStateEnabled: true,
            switchedOnText: _localization_message__WEBPACK_IMPORTED_MODULE_11__["default"].format("dxSwitch-switchedOnText"),
            switchedOffText: _localization_message__WEBPACK_IMPORTED_MODULE_11__["default"].format("dxSwitch-switchedOffText"),
            value: false
          });
        },
        _defaultOptionsRules: function _defaultOptionsRules() {
          return this.callBase().concat([{
            device: function device() {
              return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_3__["default"].real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_3__["default"].isSimulator();
            },
            options: {
              focusStateEnabled: true
            }
          }]);
        },
        _feedbackHideTimeout: 0,
        _animating: false,
        _initMarkup: function _initMarkup() {
          this._renderContainers();
          this.$element().addClass(SWITCH_CLASS).append(this._$switchWrapper);
          this._renderSubmitElement();
          this._renderClick();
          this.setAria("role", "button");
          this._renderSwipeable();
          this.callBase();
          this._renderSwitchInner();
          this._renderLabels();
          this._renderValue();
        },
        _getInnerOffset: function _getInnerOffset(value, offset) {
          var ratio = (offset - this._offsetDirection() * Number(!value)) / 2;
          return 100 * ratio + "%";
        },
        _getHandleOffset: function _getHandleOffset(value, offset) {
          if (this.option("rtlEnabled")) {
            value = !value;
          }
          if (value) {
            var calcValue = 100 * -offset - 100;
            return calcValue + "%";
          } else {
            return 100 * -offset + "%";
          }
        },
        _renderSwitchInner: function _renderSwitchInner() {
          this._$switchInner = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(SWITCH_INNER_CLASS).appendTo(this._$switchContainer);
          this._$handle = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(SWITCH_HANDLE_CLASS).appendTo(this._$switchInner);
        },
        _renderLabels: function _renderLabels() {
          this._$labelOn = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(SWITCH_ON_CLASS).prependTo(this._$switchInner);
          this._$labelOff = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(SWITCH_OFF_CLASS).appendTo(this._$switchInner);
          this._setLabelsText();
        },
        _renderContainers: function _renderContainers() {
          this._$switchContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(SWITCH_CONTAINER_CLASS);
          this._$switchWrapper = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(SWITCH_WRAPPER_CLASS).append(this._$switchContainer);
        },
        _renderSwipeable: function _renderSwipeable() {
          this._createComponent(this.$element(), _events_gesture_swipeable__WEBPACK_IMPORTED_MODULE_13__["default"], {
            elastic: false,
            immediate: true,
            onStart: this._swipeStartHandler.bind(this),
            onUpdated: this._swipeUpdateHandler.bind(this),
            onEnd: this._swipeEndHandler.bind(this),
            itemSizeFunc: this._getItemSizeFunc.bind(this)
          });
        },
        _getItemSizeFunc: function _getItemSizeFunc() {
          return (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)(this._$switchContainer, true) - (0, _core_utils_position__WEBPACK_IMPORTED_MODULE_9__.getBoundingRect)(this._$handle.get(0)).width;
        },
        _renderSubmitElement: function _renderSubmitElement() {
          this._$submitElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<input>").attr("type", "hidden").appendTo(this.$element());
        },
        _getSubmitElement: function _getSubmitElement() {
          return this._$submitElement;
        },
        _offsetDirection: function _offsetDirection() {
          return this.option("rtlEnabled") ? -1 : 1;
        },
        _renderPosition: function _renderPosition(state, swipeOffset) {
          var innerOffset = this._getInnerOffset(state, swipeOffset);
          var handleOffset = this._getHandleOffset(state, swipeOffset);
          this._$switchInner.css("transform", " translateX(" + innerOffset + ")");
          this._$handle.css("transform", " translateX(" + handleOffset + ")");
        },
        _validateValue: function _validateValue() {
          var check = this.option("value");
          if ("boolean" !== typeof check) {
            this._options.silent("value", !!check);
          }
        },
        _renderClick: function _renderClick() {
          var eventName = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_click__WEBPACK_IMPORTED_MODULE_12__.name, this.NAME);
          var $element = this.$element();
          this._clickAction = this._createAction(this._clickHandler.bind(this));
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__["default"].off($element, eventName);
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__["default"].on($element, eventName, function (e) {
            this._clickAction({
              event: e
            });
          }.bind(this));
        },
        _clickHandler: function _clickHandler(args) {
          var e = args.event;
          this._saveValueChangeEvent(e);
          if (this._animating || this._swiping) {
            return;
          }
          this._animateValue(!this.option("value"));
        },
        _animateValue: function _animateValue(value) {
          var startValue = this.option("value");
          var endValue = value;
          if (startValue === endValue) {
            return;
          }
          this._animating = true;
          var fromInnerOffset = this._getInnerOffset(startValue, 0);
          var toInnerOffset = this._getInnerOffset(endValue, 0);
          var fromHandleOffset = this._getHandleOffset(startValue, 0);
          var toHandleOffset = this._getHandleOffset(endValue, 0);
          var that = this;
          var fromInnerConfig = {};
          var toInnerConfig = {};
          var fromHandleConfig = {};
          var toHandlerConfig = {};
          fromInnerConfig.transform = " translateX(" + fromInnerOffset + ")";
          toInnerConfig.transform = " translateX(" + toInnerOffset + ")";
          fromHandleConfig.transform = " translateX(" + fromHandleOffset + ")";
          toHandlerConfig.transform = " translateX(" + toHandleOffset + ")";
          this.$element().toggleClass(SWITCH_ON_VALUE_CLASS, endValue);
          _animation_fx__WEBPACK_IMPORTED_MODULE_10__["default"].animate(this._$handle, {
            from: fromHandleConfig,
            to: toHandlerConfig,
            duration: SWITCH_ANIMATION_DURATION
          });
          _animation_fx__WEBPACK_IMPORTED_MODULE_10__["default"].animate(this._$switchInner, {
            from: fromInnerConfig,
            to: toInnerConfig,
            duration: SWITCH_ANIMATION_DURATION,
            complete: function complete() {
              that._animating = false;
              that.option("value", endValue);
            }
          });
        },
        _swipeStartHandler: function _swipeStartHandler(e) {
          var state = this.option("value");
          var rtlEnabled = this.option("rtlEnabled");
          var maxOffOffset = rtlEnabled ? 0 : 1;
          var maxOnOffset = rtlEnabled ? 1 : 0;
          e.event.maxLeftOffset = state ? maxOffOffset : maxOnOffset;
          e.event.maxRightOffset = state ? maxOnOffset : maxOffOffset;
          this._swiping = true;
          this._feedbackDeferred = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_14__.Deferred();
          (0, _events_core_emitter_feedback__WEBPACK_IMPORTED_MODULE_8__.lock)(this._feedbackDeferred);
          this._toggleActiveState(this.$element(), this.option("activeStateEnabled"));
        },
        _swipeUpdateHandler: function _swipeUpdateHandler(e) {
          this._renderPosition(this.option("value"), e.event.offset);
        },
        _swipeEndHandler: function _swipeEndHandler(e) {
          var that = this;
          var offsetDirection = this._offsetDirection();
          var toInnerConfig = {};
          var toHandleConfig = {};
          var innerOffset = this._getInnerOffset(that.option("value"), e.event.targetOffset);
          var handleOffset = this._getHandleOffset(that.option("value"), e.event.targetOffset);
          toInnerConfig.transform = " translateX(" + innerOffset + ")";
          toHandleConfig.transform = " translateX(" + handleOffset + ")";
          _animation_fx__WEBPACK_IMPORTED_MODULE_10__["default"].animate(this._$handle, {
            to: toHandleConfig,
            duration: SWITCH_ANIMATION_DURATION
          });
          _animation_fx__WEBPACK_IMPORTED_MODULE_10__["default"].animate(this._$switchInner, {
            to: toInnerConfig,
            duration: SWITCH_ANIMATION_DURATION,
            complete: function complete() {
              that._swiping = false;
              var pos = that.option("value") + offsetDirection * e.event.targetOffset;
              that._saveValueChangeEvent(e.event);
              that.option("value", Boolean(pos));
              that._feedbackDeferred.resolve();
              that._toggleActiveState(that.$element(), false);
            }
          });
        },
        _renderValue: function _renderValue() {
          this._validateValue();
          var val = this.option("value");
          this._renderPosition(val, 0);
          this.$element().toggleClass(SWITCH_ON_VALUE_CLASS, val);
          this._getSubmitElement().val(val);
          this.setAria({
            pressed: val,
            label: val ? this.option("switchedOnText") : this.option("switchedOffText")
          });
        },
        _setLabelsText: function _setLabelsText() {
          this._$labelOn && this._$labelOn.text(this.option("switchedOnText"));
          this._$labelOff && this._$labelOff.text(this.option("switchedOffText"));
        },
        _visibilityChanged: function _visibilityChanged(visible) {
          if (visible) {
            this.repaint();
          }
        },
        _optionChanged: function _optionChanged(args) {
          switch (args.name) {
            case "width":
              delete this._marginBound;
              this._refresh();
              break;
            case "switchedOnText":
            case "switchedOffText":
              this._setLabelsText();
              break;
            case "value":
              this._renderValue();
              this.callBase(args);
              break;
            default:
              this.callBase(args);
          }
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__["default"])("dxSwitch", Switch);
      /* harmony default export */
      __webpack_exports__["default"] = Switch;

      /***/
    }),
    /***/16515: (
    /*!*****************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/tab_panel.js ***!
      \*****************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _core_utils_support__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../core/utils/support */48491);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../core/devices */41881);
      /* harmony import */
      var _core_dom_adapter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../core/dom_adapter */81113);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _multi_view__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./multi_view */19073);
      /* harmony import */
      var _tabs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ./tabs */28909);
      /* harmony import */
      var _tab_panel_item__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ./tab_panel/item */76946);
      /* harmony import */
      var _core_utils_icon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../core/utils/icon */60181);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../core/element */60213);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../core/utils/type */33275);
      /* harmony import */
      var _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../core/templates/bindable_template */32503);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../core/utils/window */88684);
      /**
       * DevExtreme (esm/ui/tab_panel.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TABPANEL_CLASS = "dx-tabpanel";
      var TABPANEL_TABS_CLASS = "dx-tabpanel-tabs";
      var TABPANEL_CONTAINER_CLASS = "dx-tabpanel-container";
      var TABS_ITEM_TEXT_CLASS = "dx-tab-text";
      var TabPanel = _multi_view__WEBPACK_IMPORTED_MODULE_7__["default"].inherit({
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(this.callBase(), {
            itemTitleTemplate: "title",
            hoverStateEnabled: true,
            showNavButtons: false,
            scrollByContent: true,
            scrollingEnabled: true,
            onTitleClick: null,
            onTitleHold: null,
            onTitleRendered: null,
            badgeExpr: function badgeExpr(data) {
              return data ? data.badge : void 0;
            }
          });
        },
        _defaultOptionsRules: function _defaultOptionsRules() {
          return this.callBase().concat([{
            device: function device() {
              return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_4__["default"].real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_4__["default"].isSimulator();
            },
            options: {
              focusStateEnabled: true
            }
          }, {
            device: function device() {
              return !_core_utils_support__WEBPACK_IMPORTED_MODULE_2__.touch;
            },
            options: {
              swipeEnabled: false
            }
          }, {
            device: {
              platform: "generic"
            },
            options: {
              animationEnabled: false
            }
          }]);
        },
        _init: function _init() {
          this.callBase();
          this.$element().addClass(TABPANEL_CLASS);
          this.setAria("role", "tabpanel");
        },
        _initMarkup: function _initMarkup() {
          this.callBase();
          this._createTitleActions();
          this._renderLayout();
        },
        _initTemplates: function _initTemplates() {
          this.callBase();
          this._templateManager.addDefaultTemplates({
            title: new _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_13__.BindableTemplate(function ($container, data) {
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_12__.isPlainObject)(data)) {
                var $iconElement = (0, _core_utils_icon__WEBPACK_IMPORTED_MODULE_10__.getImageContainer)(data.icon);
                if ($iconElement) {
                  $container.append($iconElement);
                }
                if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_12__.isDefined)(data.title) && !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_12__.isPlainObject)(data.title)) {
                  $container.append(_core_dom_adapter__WEBPACK_IMPORTED_MODULE_5__["default"].createTextNode(data.title));
                }
              } else if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_12__.isDefined)(data)) {
                $container.text(String(data));
              }
              $container.wrapInner((0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<span>").addClass(TABS_ITEM_TEXT_CLASS));
            }, ["title", "icon"], this.option("integrationOptions.watchMethod"))
          });
        },
        _createTitleActions: function _createTitleActions() {
          this._createTitleClickAction();
          this._createTitleHoldAction();
          this._createTitleRenderedAction();
        },
        _createTitleClickAction: function _createTitleClickAction() {
          this._titleClickAction = this._createActionByOption("onTitleClick");
        },
        _createTitleHoldAction: function _createTitleHoldAction() {
          this._titleHoldAction = this._createActionByOption("onTitleHold");
        },
        _createTitleRenderedAction: function _createTitleRenderedAction() {
          this._titleRenderedAction = this._createActionByOption("onTitleRendered");
        },
        _renderContent: function _renderContent() {
          var that = this;
          this.callBase();
          if (this.option("templatesRenderAsynchronously")) {
            this._resizeEventTimer = setTimeout(function () {
              that._updateLayout();
            }, 0);
          }
        },
        _renderLayout: function _renderLayout() {
          if (this._tabs) {
            this._updateLayout();
            return;
          }
          var $element = this.$element();
          this._$tabContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(TABPANEL_TABS_CLASS).appendTo($element);
          var $tabs = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").appendTo(this._$tabContainer);
          this._tabs = this._createComponent($tabs, _tabs__WEBPACK_IMPORTED_MODULE_8__["default"], this._tabConfig());
          this._$container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(TABPANEL_CONTAINER_CLASS).appendTo($element);
          this._$container.append(this._$wrapper);
          this._updateLayout();
        },
        _updateLayout: function _updateLayout() {
          if ((0, _core_utils_window__WEBPACK_IMPORTED_MODULE_14__.hasWindow)()) {
            var tabsHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterHeight)(this._$tabContainer);
            this._$container.css({
              marginTop: -tabsHeight,
              paddingTop: tabsHeight
            });
          }
        },
        _refreshActiveDescendant: function _refreshActiveDescendant() {
          if (!this._tabs) {
            return;
          }
          var tabs = this._tabs;
          var tabItems = tabs.itemElements();
          var $activeTab = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(tabItems[tabs.option("selectedIndex")]);
          var id = this.getFocusedItemId();
          this.setAria("controls", void 0, (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(tabItems));
          this.setAria("controls", id, $activeTab);
        },
        _tabConfig: function _tabConfig() {
          return {
            selectOnFocus: true,
            focusStateEnabled: this.option("focusStateEnabled"),
            hoverStateEnabled: this.option("hoverStateEnabled"),
            repaintChangesOnly: this.option("repaintChangesOnly"),
            tabIndex: this.option("tabIndex"),
            selectedIndex: this.option("selectedIndex"),
            badgeExpr: this.option("badgeExpr"),
            onItemClick: this._titleClickAction.bind(this),
            onItemHold: this._titleHoldAction.bind(this),
            itemHoldTimeout: this.option("itemHoldTimeout"),
            onSelectionChanged: function (e) {
              this.option("selectedIndex", e.component.option("selectedIndex"));
              this._refreshActiveDescendant();
            }.bind(this),
            onItemRendered: this._titleRenderedAction.bind(this),
            itemTemplate: this._getTemplateByOption("itemTitleTemplate"),
            items: this.option("items"),
            noDataText: null,
            scrollingEnabled: this.option("scrollingEnabled"),
            scrollByContent: this.option("scrollByContent"),
            showNavButtons: this.option("showNavButtons"),
            itemTemplateProperty: "tabTemplate",
            loopItemFocus: this.option("loop"),
            selectionRequired: true,
            onOptionChanged: function (args) {
              if ("focusedElement" === args.name) {
                if (args.value) {
                  var $value = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(args.value);
                  var $newItem = this._itemElements().eq($value.index());
                  this.option("focusedElement", (0, _core_element__WEBPACK_IMPORTED_MODULE_11__.getPublicElement)($newItem));
                } else {
                  this.option("focusedElement", args.value);
                }
              }
            }.bind(this),
            onFocusIn: function (args) {
              this._focusInHandler(args.event);
            }.bind(this),
            onFocusOut: function (args) {
              if (!this._isFocusOutHandlerExecuting) {
                this._focusOutHandler(args.event);
              }
            }.bind(this)
          };
        },
        _renderFocusTarget: function _renderFocusTarget() {
          this._focusTarget().attr("tabIndex", -1);
        },
        _updateFocusState: function _updateFocusState(e, isFocused) {
          this.callBase(e, isFocused);
          if (e.target === this._tabs._focusTarget().get(0)) {
            this._toggleFocusClass(isFocused, this._focusTarget());
          }
        },
        _focusOutHandler: function _focusOutHandler(e) {
          this._isFocusOutHandlerExecuting = true;
          this.callBase.apply(this, arguments);
          this._tabs._focusOutHandler(e);
          this._isFocusOutHandlerExecuting = false;
        },
        _setTabsOption: function _setTabsOption(name, value) {
          if (this._tabs) {
            this._tabs.option(name, value);
          }
        },
        _visibilityChanged: function _visibilityChanged(visible) {
          if (visible) {
            this._tabs._dimensionChanged();
            this._updateLayout();
          }
        },
        registerKeyHandler: function registerKeyHandler(key, handler) {
          this.callBase(key, handler);
          if (this._tabs) {
            this._tabs.registerKeyHandler(key, handler);
          }
        },
        repaint: function repaint() {
          this.callBase();
          this._tabs.repaint();
        },
        _optionChanged: function _optionChanged(args) {
          var name = args.name;
          var value = args.value;
          var fullName = args.fullName;
          switch (name) {
            case "dataSource":
              this.callBase(args);
              break;
            case "items":
              this._setTabsOption(name, this.option(name));
              this._updateLayout();
              if (!this.option("repaintChangesOnly")) {
                this._tabs.repaint();
              }
              this.callBase(args);
              break;
            case "width":
              this.callBase(args);
              this._tabs.repaint();
              break;
            case "selectedIndex":
            case "selectedItem":
              this._setTabsOption(fullName, value);
              this.callBase(args);
              if (true === this.option("focusStateEnabled")) {
                var selectedIndex = this.option("selectedIndex");
                var selectedTabContent = this._itemElements().eq(selectedIndex);
                this.option("focusedElement", (0, _core_element__WEBPACK_IMPORTED_MODULE_11__.getPublicElement)(selectedTabContent));
              }
              break;
            case "itemHoldTimeout":
            case "focusStateEnabled":
            case "hoverStateEnabled":
              this._setTabsOption(fullName, value);
              this.callBase(args);
              break;
            case "scrollingEnabled":
            case "scrollByContent":
            case "showNavButtons":
              this._setTabsOption(fullName, value);
              break;
            case "focusedElement":
              var id = value ? (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(value).index() : value;
              var newItem = value ? this._tabs._itemElements().eq(id) : value;
              this._setTabsOption("focusedElement", (0, _core_element__WEBPACK_IMPORTED_MODULE_11__.getPublicElement)(newItem));
              this.callBase(args);
              break;
            case "itemTitleTemplate":
              this._setTabsOption("itemTemplate", this._getTemplateByOption("itemTitleTemplate"));
              break;
            case "onTitleClick":
              this._createTitleClickAction();
              this._setTabsOption("onItemClick", this._titleClickAction.bind(this));
              break;
            case "onTitleHold":
              this._createTitleHoldAction();
              this._setTabsOption("onItemHold", this._titleHoldAction.bind(this));
              break;
            case "onTitleRendered":
              this._createTitleRenderedAction();
              this._setTabsOption("onItemRendered", this._titleRenderedAction.bind(this));
              break;
            case "loop":
              this._setTabsOption("loopItemFocus", value);
              break;
            case "badgeExpr":
              this._invalidate();
              break;
            default:
              this.callBase(args);
          }
        },
        _clean: function _clean() {
          clearTimeout(this._resizeEventTimer);
          this.callBase();
        }
      });
      TabPanel.ItemClass = _tab_panel_item__WEBPACK_IMPORTED_MODULE_9__["default"];
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_6__["default"])("dxTabPanel", TabPanel);
      /* harmony default export */
      __webpack_exports__["default"] = TabPanel;

      /***/
    }),
    /***/76946: (
    /*!**********************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/tab_panel/item.js ***!
      \**********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */TabPanelItem;
        }
        /* harmony export */
      });
      /* harmony import */
      var _collection_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../collection/item */70855);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/common */37552);
      /**
       * DevExtreme (esm/ui/tab_panel/item.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var TabPanelItem = /*#__PURE__*/function (_collection_item__WEB) {
        _inherits(TabPanelItem, _collection_item__WEB);
        function TabPanelItem() {
          _classCallCheck(this, TabPanelItem);
          return _callSuper(this, TabPanelItem, arguments);
        }
        _createClass(TabPanelItem, [{
          key: "_renderWatchers",
          value: function _renderWatchers() {
            this._startWatcher("badge", _core_utils_common__WEBPACK_IMPORTED_MODULE_1__.noop);
            return _get(_getPrototypeOf(TabPanelItem.prototype), "_renderWatchers", this).call(this);
          }
        }]);
        return TabPanelItem;
      }(_collection_item__WEBPACK_IMPORTED_MODULE_0__["default"]);
      /***/
    }),
    /***/28909: (
    /*!************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/tabs.js ***!
      \************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../events/core/events_engine */99064);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../core/devices */41881);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./button */66037);
      /* harmony import */
      var _widget_utils_ink_ripple__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./widget/utils.ink_ripple */10906);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../events/utils/index */3151);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../core/utils/type */33275);
      /* harmony import */
      var _events_pointer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../events/pointer */24842);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../core/utils/iterator */14975);
      /* harmony import */
      var _tabs_item__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ./tabs/item */60312);
      /* harmony import */
      var _tabs_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ./tabs/constants */28925);
      /* harmony import */
      var _themes__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ./themes */78279);
      /* harmony import */
      var _events_hold__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../events/hold */69668);
      /* harmony import */
      var _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ./scroll_view/ui.scrollable */79678);
      /* harmony import */
      var _collection_ui_collection_widget_live_update__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__( /*! ./collection/ui.collection_widget.live_update */61608);
      /* harmony import */
      var _core_utils_icon__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__( /*! ../core/utils/icon */60181);
      /* harmony import */
      var _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__( /*! ../core/templates/bindable_template */32503);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__( /*! ../core/utils/deferred */97233);
      /* harmony import */
      var _renovation_ui_scroll_view_utils_get_boundary_props__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__( /*! ../renovation/ui/scroll_view/utils/get_boundary_props */3749);
      /* harmony import */
      var _renovation_ui_scroll_view_utils_get_scroll_left_max__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__( /*! ../renovation/ui/scroll_view/utils/get_scroll_left_max */15256);
      /**
       * DevExtreme (esm/ui/tabs.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TABS_CLASS = "dx-tabs";
      var TABS_WRAPPER_CLASS = "dx-tabs-wrapper";
      var TABS_STRETCHED_CLASS = "dx-tabs-stretched";
      var TABS_SCROLLABLE_CLASS = "dx-tabs-scrollable";
      var TABS_NAV_BUTTONS_CLASS = "dx-tabs-nav-buttons";
      var OVERFLOW_HIDDEN_CLASS = "dx-overflow-hidden";
      var TABS_ITEM_CLASS = "dx-tab";
      var TABS_ITEM_SELECTED_CLASS = "dx-tab-selected";
      var TABS_NAV_BUTTON_CLASS = "dx-tabs-nav-button";
      var TABS_LEFT_NAV_BUTTON_CLASS = "dx-tabs-nav-button-left";
      var TABS_RIGHT_NAV_BUTTON_CLASS = "dx-tabs-nav-button-right";
      var TABS_ITEM_TEXT_CLASS = "dx-tab-text";
      var TABS_ITEM_DATA_KEY = "dxTabData";
      var BUTTON_NEXT_ICON = "chevronnext";
      var BUTTON_PREV_ICON = "chevronprev";
      var FEEDBACK_HIDE_TIMEOUT = 100;
      var FEEDBACK_DURATION_INTERVAL = 5;
      var FEEDBACK_SCROLL_TIMEOUT = 300;
      var TAB_OFFSET = 30;
      var Tabs = _collection_ui_collection_widget_live_update__WEBPACK_IMPORTED_MODULE_17__["default"].inherit({
        _activeStateUnit: "." + TABS_ITEM_CLASS,
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_8__.extend)(this.callBase(), {
            hoverStateEnabled: true,
            showNavButtons: true,
            scrollByContent: true,
            scrollingEnabled: true,
            selectionMode: "single",
            activeStateEnabled: true,
            selectionRequired: false,
            selectOnFocus: true,
            loopItemFocus: false,
            useInkRipple: false,
            badgeExpr: function badgeExpr(data) {
              return data ? data.badge : void 0;
            },
            _itemAttributes: {
              role: "tab"
            }
          });
        },
        _defaultOptionsRules: function _defaultOptionsRules() {
          var themeName = (0, _themes__WEBPACK_IMPORTED_MODULE_14__.current)();
          return this.callBase().concat([{
            device: function device() {
              return "desktop" !== _core_devices__WEBPACK_IMPORTED_MODULE_3__["default"].real().deviceType;
            },
            options: {
              showNavButtons: false
            }
          }, {
            device: {
              deviceType: "desktop"
            },
            options: {
              scrollByContent: false
            }
          }, {
            device: function device() {
              return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_3__["default"].real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_3__["default"].isSimulator();
            },
            options: {
              focusStateEnabled: true
            }
          }, {
            device: function device() {
              return (0, _themes__WEBPACK_IMPORTED_MODULE_14__.isMaterial)(themeName);
            },
            options: {
              useInkRipple: true,
              selectOnFocus: false
            }
          }]);
        },
        _init: function _init() {
          this.callBase();
          this.setAria("role", "tablist");
          this.$element().addClass(TABS_CLASS);
          this._renderWrapper();
          this._renderMultiple();
          this._feedbackHideTimeout = FEEDBACK_HIDE_TIMEOUT;
        },
        _initTemplates: function _initTemplates() {
          this.callBase();
          this._templateManager.addDefaultTemplates({
            item: new _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_19__.BindableTemplate(function ($container, data) {
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_9__.isPlainObject)(data)) {
                this._prepareDefaultItemTemplate(data, $container);
              } else {
                $container.text(String(data));
              }
              var $iconElement = (0, _core_utils_icon__WEBPACK_IMPORTED_MODULE_18__.getImageContainer)(data.icon);
              $iconElement && $iconElement.prependTo($container);
              $container.wrapInner((0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<span>").addClass(TABS_ITEM_TEXT_CLASS));
            }.bind(this), ["text", "html", "icon"], this.option("integrationOptions.watchMethod"))
          });
        },
        _createItemByTemplate: function _createItemByTemplate(itemTemplate, renderArgs) {
          var _this253 = this;
          var itemData = renderArgs.itemData,
            container = renderArgs.container,
            index = renderArgs.index;
          this._deferredTemplates[index] = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__.Deferred();
          return itemTemplate.render({
            model: itemData,
            container: container,
            index: index,
            onRendered: function onRendered() {
              return _this253._deferredTemplates[index].resolve();
            }
          });
        },
        _itemClass: function _itemClass() {
          return TABS_ITEM_CLASS;
        },
        _selectedItemClass: function _selectedItemClass() {
          return TABS_ITEM_SELECTED_CLASS;
        },
        _itemDataKey: function _itemDataKey() {
          return TABS_ITEM_DATA_KEY;
        },
        _initMarkup: function _initMarkup() {
          this._deferredTemplates = [];
          this.callBase();
          this.option("useInkRipple") && this._renderInkRipple();
          this.$element().addClass(OVERFLOW_HIDDEN_CLASS);
        },
        _render: function _render() {
          this.callBase();
          this._deferRenderScrolling();
        },
        _deferRenderScrolling: function _deferRenderScrolling() {
          var _this254 = this;
          _core_utils_deferred__WEBPACK_IMPORTED_MODULE_20__.when.apply(this, this._deferredTemplates).done(function () {
            return _this254._renderScrolling();
          });
        },
        _renderScrolling: function _renderScrolling() {
          var removeClasses = [TABS_STRETCHED_CLASS, _tabs_constants__WEBPACK_IMPORTED_MODULE_13__.TABS_EXPANDED_CLASS, OVERFLOW_HIDDEN_CLASS];
          this.$element().removeClass(removeClasses.join(" "));
          if (this.option("scrollingEnabled") && this._isItemsWidthExceeded()) {
            if (!this._scrollable) {
              this._renderScrollable();
              this._renderNavButtons();
            }
            var scrollable = this.getScrollable();
            scrollable.update();
            if (this.option("rtlEnabled")) {
              var maxLeftOffset = (0, _renovation_ui_scroll_view_utils_get_scroll_left_max__WEBPACK_IMPORTED_MODULE_22__.getScrollLeftMax)((0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(this.getScrollable().container()).get(0));
              scrollable.scrollTo({
                left: maxLeftOffset
              });
            }
            this._updateNavButtonsVisibility();
            this._scrollToItem(this.option("selectedItem"));
          }
          if (!(this.option("scrollingEnabled") && this._isItemsWidthExceeded())) {
            this._cleanScrolling();
            if (this._needStretchItems() && !this._isItemsWidthExceeded()) {
              this.$element().addClass(TABS_STRETCHED_CLASS);
            }
            this.$element().removeClass(TABS_NAV_BUTTONS_CLASS).addClass(_tabs_constants__WEBPACK_IMPORTED_MODULE_13__.TABS_EXPANDED_CLASS);
          }
        },
        _isItemsWidthExceeded: function _isItemsWidthExceeded() {
          var tabItemsWidth = this._getSummaryItemsWidth(this._getVisibleItems(), true);
          return tabItemsWidth - 1 > (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this.$element());
        },
        _needStretchItems: function _needStretchItems() {
          var $visibleItems = this._getVisibleItems();
          var elementWidth = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this.$element());
          var itemsWidth = [];
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_11__.each)($visibleItems, function (_, item) {
            itemsWidth.push((0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)(item, true));
          });
          var maxTabWidth = Math.max.apply(null, itemsWidth);
          return maxTabWidth >= elementWidth / $visibleItems.length;
        },
        _cleanNavButtons: function _cleanNavButtons() {
          if (!this._leftButton || !this._rightButton) {
            return;
          }
          this._leftButton.$element().remove();
          this._rightButton.$element().remove();
          this._leftButton = null;
          this._rightButton = null;
        },
        _cleanScrolling: function _cleanScrolling() {
          if (!this._scrollable) {
            return;
          }
          this._$wrapper.appendTo(this.$element());
          this._scrollable.$element().remove();
          this._scrollable = null;
          this._cleanNavButtons();
        },
        _renderInkRipple: function _renderInkRipple() {
          this._inkRipple = (0, _widget_utils_ink_ripple__WEBPACK_IMPORTED_MODULE_6__.render)();
        },
        _toggleActiveState: function _toggleActiveState($element, value, e) {
          this.callBase.apply(this, arguments);
          if (!this._inkRipple) {
            return;
          }
          var config = {
            element: $element,
            event: e
          };
          if (value) {
            this._inkRipple.showWave(config);
          } else {
            this._inkRipple.hideWave(config);
          }
        },
        _renderMultiple: function _renderMultiple() {
          if ("multiple" === this.option("selectionMode")) {
            this.option("selectOnFocus", false);
          }
        },
        _renderWrapper: function _renderWrapper() {
          this._$wrapper = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(TABS_WRAPPER_CLASS);
          this.$element().append(this._$wrapper);
        },
        _itemContainer: function _itemContainer() {
          return this._$wrapper;
        },
        _renderScrollable: function _renderScrollable() {
          var _this255 = this;
          var $itemContainer = this.$element().wrapInner((0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(TABS_SCROLLABLE_CLASS)).children();
          this._scrollable = this._createComponent($itemContainer, _scroll_view_ui_scrollable__WEBPACK_IMPORTED_MODULE_16__["default"], {
            direction: "horizontal",
            showScrollbar: "never",
            useKeyboard: false,
            useNative: false,
            scrollByContent: this.option("scrollByContent"),
            onScroll: function onScroll() {
              _this255._updateNavButtonsVisibility();
            }
          });
          this.$element().append(this._scrollable.$element());
        },
        _scrollToItem: function _scrollToItem(itemData) {
          if (!this._scrollable) {
            return;
          }
          var $item = this._editStrategy.getItemElement(itemData);
          this._scrollable.scrollToElement($item);
        },
        _renderNavButtons: function _renderNavButtons() {
          this.$element().toggleClass(TABS_NAV_BUTTONS_CLASS, this.option("showNavButtons"));
          if (!this.option("showNavButtons")) {
            return;
          }
          var rtlEnabled = this.option("rtlEnabled");
          this._leftButton = this._createNavButton(-TAB_OFFSET, rtlEnabled ? BUTTON_NEXT_ICON : BUTTON_PREV_ICON);
          var $leftButton = this._leftButton.$element();
          $leftButton.addClass(TABS_LEFT_NAV_BUTTON_CLASS);
          this.$element().prepend($leftButton);
          this._rightButton = this._createNavButton(TAB_OFFSET, rtlEnabled ? BUTTON_PREV_ICON : BUTTON_NEXT_ICON);
          var $rightButton = this._rightButton.$element();
          $rightButton.addClass(TABS_RIGHT_NAV_BUTTON_CLASS);
          this.$element().append($rightButton);
        },
        _updateNavButtonsVisibility: function _updateNavButtonsVisibility() {
          var scrollable = this.getScrollable();
          this._leftButton && this._leftButton.option("disabled", (0, _renovation_ui_scroll_view_utils_get_boundary_props__WEBPACK_IMPORTED_MODULE_21__.isReachedLeft)(scrollable.scrollLeft(), 1));
          this._rightButton && this._rightButton.option("disabled", (0, _renovation_ui_scroll_view_utils_get_boundary_props__WEBPACK_IMPORTED_MODULE_21__.isReachedRight)((0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(scrollable.container()).get(0), scrollable.scrollLeft(), 1));
        },
        _updateScrollPosition: function _updateScrollPosition(offset, duration) {
          this._scrollable.update();
          this._scrollable.scrollBy(offset / duration);
        },
        _createNavButton: function _createNavButton(offset, icon) {
          var that = this;
          var holdAction = that._createAction(function () {
            that._holdInterval = setInterval(function () {
              that._updateScrollPosition(offset, FEEDBACK_DURATION_INTERVAL);
            }, FEEDBACK_DURATION_INTERVAL);
          });
          var holdEventName = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_hold__WEBPACK_IMPORTED_MODULE_15__["default"].name, "dxNavButton");
          var pointerUpEventName = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_10__["default"].up, "dxNavButton");
          var pointerOutEventName = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_10__["default"].out, "dxNavButton");
          var navButton = this._createComponent((0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(TABS_NAV_BUTTON_CLASS), _button__WEBPACK_IMPORTED_MODULE_5__["default"], {
            focusStateEnabled: false,
            icon: icon,
            onClick: function onClick() {
              that._updateScrollPosition(offset, 1);
            },
            integrationOptions: {}
          });
          var $navButton = navButton.$element();
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__["default"].on($navButton, holdEventName, {
            timeout: FEEDBACK_SCROLL_TIMEOUT
          }, function (e) {
            holdAction({
              event: e
            });
          }.bind(this));
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__["default"].on($navButton, pointerUpEventName, function () {
            that._clearInterval();
          });
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_2__["default"].on($navButton, pointerOutEventName, function () {
            that._clearInterval();
          });
          return navButton;
        },
        _clearInterval: function _clearInterval() {
          if (this._holdInterval) {
            clearInterval(this._holdInterval);
          }
        },
        _updateSelection: function _updateSelection(addedSelection) {
          this._scrollable && this._scrollable.scrollToElement(this.itemElements().eq(addedSelection[0]), {
            left: 1,
            right: 1
          });
        },
        _visibilityChanged: function _visibilityChanged(visible) {
          if (visible) {
            this._dimensionChanged();
          }
        },
        _dimensionChanged: function _dimensionChanged() {
          this._renderScrolling();
        },
        _itemSelectHandler: function _itemSelectHandler(e) {
          if ("single" === this.option("selectionMode") && this.isItemSelected(e.currentTarget)) {
            return;
          }
          this.callBase(e);
        },
        _clean: function _clean() {
          this._deferredTemplates = [];
          this._cleanScrolling();
          this.callBase();
        },
        _updateFocusedElement: function _updateFocusedElement() {
          var _this$option5 = this.option(),
            focusStateEnabled = _this$option5.focusStateEnabled,
            selectedIndex = _this$option5.selectedIndex;
          var itemElements = this._itemElements();
          if (focusStateEnabled && itemElements.length) {
            var selectedItem = itemElements.get(selectedIndex);
            this.option({
              focusedElement: selectedItem
            });
          }
        },
        _optionChanged: function _optionChanged(args) {
          switch (args.name) {
            case "useInkRipple":
            case "scrollingEnabled":
            case "showNavButtons":
              this._invalidate();
              break;
            case "scrollByContent":
              this._scrollable && this._scrollable.option(args.name, args.value);
              break;
            case "width":
              this.callBase(args);
              this._dimensionChanged();
              break;
            case "selectionMode":
              this._renderMultiple();
              this.callBase(args);
              break;
            case "badgeExpr":
              this._invalidate();
              break;
            case "selectedIndex":
            case "selectedItem":
            case "selectedItems":
              this.callBase(args);
              this._updateFocusedElement();
              break;
            default:
              this.callBase(args);
          }
        },
        _afterItemElementInserted: function _afterItemElementInserted() {
          this.callBase();
          this._deferRenderScrolling();
        },
        _afterItemElementDeleted: function _afterItemElementDeleted($item, deletedActionArgs) {
          this.callBase($item, deletedActionArgs);
          this._renderScrolling();
        },
        getScrollable: function getScrollable() {
          return this._scrollable;
        }
      });
      Tabs.ItemClass = _tabs_item__WEBPACK_IMPORTED_MODULE_12__["default"];
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_4__["default"])("dxTabs", Tabs);
      /* harmony default export */
      __webpack_exports__["default"] = Tabs;

      /***/
    }),
    /***/28925: (
    /*!**********************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/tabs/constants.js ***!
      \**********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"TABS_EXPANDED_CLASS": function TABS_EXPANDED_CLASS() {
          return /* binding */_TABS_EXPANDED_CLASS;
        }
        /* harmony export */
      });
      /**
       * DevExtreme (esm/ui/tabs/constants.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */
      var _TABS_EXPANDED_CLASS = "dx-tabs-expanded";

      /***/
    }),
    /***/60312: (
    /*!*****************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/tabs/item.js ***!
      \*****************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _collection_item__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../collection/item */70855);
      /**
       * DevExtreme (esm/ui/tabs/item.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TABS_ITEM_BADGE_CLASS = "dx-tabs-item-badge";
      var BADGE_CLASS = "dx-badge";
      var TabsItem = _collection_item__WEBPACK_IMPORTED_MODULE_1__["default"].inherit({
        _renderWatchers: function _renderWatchers() {
          this.callBase();
          this._startWatcher("badge", this._renderBadge.bind(this));
        },
        _renderBadge: function _renderBadge(badge) {
          this._$element.children("." + BADGE_CLASS).remove();
          if (!badge) {
            return;
          }
          var $badge = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(TABS_ITEM_BADGE_CLASS).addClass(BADGE_CLASS).text(badge);
          this._$element.append($badge);
        }
      });
      /* harmony default export */
      __webpack_exports__["default"] = TabsItem;

      /***/
    }),
    /***/77100: (
    /*!***************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/tag_box.js ***!
      \***************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../core/devices */41881);
      /* harmony import */
      var _core_element_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../core/element_data */25694);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../events/core/events_engine */99064);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../core/utils/common */37552);
      /* harmony import */
      var _core_utils_selection_filter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../core/utils/selection_filter */43722);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_dom__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../core/utils/dom */16520);
      /* harmony import */
      var _core_element__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../core/element */60213);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../core/utils/type */33275);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ../core/utils/window */88684);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__( /*! ../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_array__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__( /*! ../core/utils/array */36959);
      /* harmony import */
      var _localization_message__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__( /*! ../localization/message */19336);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__( /*! ../events/utils/index */3151);
      /* harmony import */
      var _events_click__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__( /*! ../events/click */38894);
      /* harmony import */
      var _text_box_utils_caret__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__( /*! ./text_box/utils.caret */76199);
      /* harmony import */
      var _data_data_source_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__( /*! ../data/data_source/utils */77382);
      /* harmony import */
      var _select_box__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__( /*! ./select_box */67373);
      /* harmony import */
      var _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__( /*! ../core/templates/bindable_template */32503);
      /* harmony import */
      var _text_box_utils_scroll__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__( /*! ./text_box/utils.scroll */89797);
      /* harmony import */
      var _widget_ui_errors__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__( /*! ./widget/ui.errors */42491);
      /**
       * DevExtreme (esm/ui/tag_box.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TAGBOX_TAG_DATA_KEY = "dxTagData";
      var TAGBOX_CLASS = "dx-tagbox";
      var TAGBOX_TAG_CONTAINER_CLASS = "dx-tag-container";
      var TAGBOX_TAG_CLASS = "dx-tag";
      var TAGBOX_MULTI_TAG_CLASS = "dx-tagbox-multi-tag";
      var TAGBOX_CUSTOM_TAG_CLASS = "dx-tag-custom";
      var TAGBOX_TAG_REMOVE_BUTTON_CLASS = "dx-tag-remove-button";
      var TAGBOX_ONLY_SELECT_CLASS = "dx-tagbox-only-select";
      var TAGBOX_SINGLE_LINE_CLASS = "dx-tagbox-single-line";
      var TAGBOX_POPUP_WRAPPER_CLASS = "dx-tagbox-popup-wrapper";
      var TAGBOX_TAG_CONTENT_CLASS = "dx-tag-content";
      var TAGBOX_DEFAULT_FIELD_TEMPLATE_CLASS = "dx-tagbox-default-template";
      var TAGBOX_CUSTOM_FIELD_TEMPLATE_CLASS = "dx-tagbox-custom-template";
      var TEXTEDITOR_INPUT_CONTAINER_CLASS = "dx-texteditor-input-container";
      var TAGBOX_MOUSE_WHEEL_DELTA_MULTIPLIER = -.3;
      var TagBox = _select_box__WEBPACK_IMPORTED_MODULE_21__["default"].inherit({
        _supportedKeys: function _supportedKeys() {
          var _this256 = this;
          var parent = this.callBase();
          var sendToList = function sendToList(options) {
            return _this256._list._keyboardHandler(options);
          };
          var rtlEnabled = this.option("rtlEnabled");
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)({}, parent, {
            backspace: function backspace(e) {
              if (!this._isCaretAtTheStart()) {
                return;
              }
              this._processKeyboardEvent(e);
              this._isTagRemoved = true;
              var $tagToDelete = this._$focusedTag || this._tagElements().last();
              if (this._$focusedTag) {
                this._moveTagFocus("prev", true);
              }
              if (0 === $tagToDelete.length) {
                return;
              }
              this._preserveFocusedTag = true;
              this._removeTagElement($tagToDelete);
              delete this._preserveFocusedTag;
            },
            upArrow: function upArrow(e, opts) {
              return e.altKey || !_this256._list ? parent.upArrow.call(_this256, e) : sendToList(opts);
            },
            downArrow: function downArrow(e, opts) {
              return e.altKey || !_this256._list ? parent.downArrow.call(_this256, e) : sendToList(opts);
            },
            del: function del(e) {
              if (!this._$focusedTag || !this._isCaretAtTheStart()) {
                return;
              }
              this._processKeyboardEvent(e);
              this._isTagRemoved = true;
              var $tagToDelete = this._$focusedTag;
              this._moveTagFocus("next", true);
              this._preserveFocusedTag = true;
              this._removeTagElement($tagToDelete);
              delete this._preserveFocusedTag;
            },
            enter: function enter(e, options) {
              var isListItemFocused = this._list && null !== this._list.option("focusedElement");
              var isCustomItem = this.option("acceptCustomValue") && !isListItemFocused;
              if (isCustomItem) {
                e.preventDefault();
                "" !== this._searchValue() && this._customItemAddedHandler(e);
                return;
              }
              if (this.option("opened")) {
                this._saveValueChangeEvent(e);
                sendToList(options);
                e.preventDefault();
              }
            },
            space: function space(e, options) {
              var isOpened = this.option("opened");
              var isInputActive = this._shouldRenderSearchEvent();
              if (isOpened && !isInputActive) {
                this._saveValueChangeEvent(e);
                sendToList(options);
                e.preventDefault();
              }
            },
            leftArrow: function leftArrow(e) {
              if (!this._isCaretAtTheStart() || this._isEmpty() || this._isEditable() && rtlEnabled && !this._$focusedTag) {
                return;
              }
              e.preventDefault();
              var direction = rtlEnabled ? "next" : "prev";
              this._moveTagFocus(direction);
              !this.option("multiline") && this._scrollContainer(direction);
            },
            rightArrow: function rightArrow(e) {
              if (!this._isCaretAtTheStart() || this._isEmpty() || this._isEditable() && !rtlEnabled && !this._$focusedTag) {
                return;
              }
              e.preventDefault();
              var direction = rtlEnabled ? "prev" : "next";
              this._moveTagFocus(direction);
              !this.option("multiline") && this._scrollContainer(direction);
            }
          });
        },
        _processKeyboardEvent: function _processKeyboardEvent(e) {
          e.preventDefault();
          e.stopPropagation();
          this._saveValueChangeEvent(e);
        },
        _isEmpty: function _isEmpty() {
          return 0 === this._getValue().length;
        },
        _updateTagsContainer: function _updateTagsContainer($element) {
          this._$tagsContainer = $element.addClass(TAGBOX_TAG_CONTAINER_CLASS);
        },
        _allowSelectItemByTab: function _allowSelectItemByTab() {
          return false;
        },
        _isCaretAtTheStart: function _isCaretAtTheStart() {
          var position = (0, _text_box_utils_caret__WEBPACK_IMPORTED_MODULE_19__["default"])(this._input());
          return 0 === position.start && 0 === position.end;
        },
        _moveTagFocus: function _moveTagFocus(direction, clearOnBoundary) {
          if (!this._$focusedTag) {
            var tagElements = this._tagElements();
            this._$focusedTag = "next" === direction ? tagElements.first() : tagElements.last();
            this._toggleFocusClass(true, this._$focusedTag);
            return;
          }
          var $nextFocusedTag = this._$focusedTag[direction](".".concat(TAGBOX_TAG_CLASS));
          if ($nextFocusedTag.length > 0) {
            this._replaceFocusedTag($nextFocusedTag);
          } else if (clearOnBoundary || "next" === direction && this._isEditable()) {
            this._clearTagFocus();
          }
        },
        _replaceFocusedTag: function _replaceFocusedTag($nextFocusedTag) {
          this._toggleFocusClass(false, this._$focusedTag);
          this._$focusedTag = $nextFocusedTag;
          this._toggleFocusClass(true, this._$focusedTag);
        },
        _clearTagFocus: function _clearTagFocus() {
          if (!this._$focusedTag) {
            return;
          }
          this._toggleFocusClass(false, this._$focusedTag);
          delete this._$focusedTag;
        },
        _focusClassTarget: function _focusClassTarget($element) {
          if ($element && $element.length && $element[0] !== this._focusTarget()[0]) {
            return $element;
          }
          return this.callBase();
        },
        _getLabelContainer: function _getLabelContainer() {
          return this._$tagsContainer;
        },
        _scrollContainer: function _scrollContainer(direction) {
          if (this.option("multiline") || !(0, _core_utils_window__WEBPACK_IMPORTED_MODULE_12__.hasWindow)()) {
            return;
          }
          if (!this._$tagsContainer) {
            return;
          }
          var scrollPosition = this._getScrollPosition(direction);
          this._$tagsContainer.scrollLeft(scrollPosition);
        },
        _getScrollPosition: function _getScrollPosition(direction) {
          if ("start" === direction || "end" === direction) {
            return this._getBorderPosition(direction);
          }
          return this._$focusedTag ? this._getFocusedTagPosition(direction) : this._getBorderPosition("end");
        },
        _getBorderPosition: function _getBorderPosition(direction) {
          var rtlEnabled = this.option("rtlEnabled");
          var isScrollLeft = "end" === direction ^ rtlEnabled;
          var scrollSign = rtlEnabled ? -1 : 1;
          return isScrollLeft ^ !rtlEnabled ? 0 : scrollSign * (this._$tagsContainer.get(0).scrollWidth - (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)(this._$tagsContainer));
        },
        _getFocusedTagPosition: function _getFocusedTagPosition(direction) {
          var rtlEnabled = this.option("rtlEnabled");
          var isScrollLeft = "next" === direction ^ rtlEnabled;
          var _this$_$focusedTag$po = this._$focusedTag.position(),
            scrollOffset = _this$_$focusedTag$po.left;
          var scrollLeft = this._$tagsContainer.scrollLeft();
          if (isScrollLeft) {
            scrollOffset += (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)(this._$focusedTag, true) - (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)(this._$tagsContainer);
          }
          if (isScrollLeft ^ scrollOffset < 0) {
            scrollLeft += scrollOffset;
          }
          return scrollLeft;
        },
        _setNextValue: _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop,
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)(this.callBase(), {
            value: [],
            showDropDownButton: false,
            maxFilterQueryLength: 1500,
            tagTemplate: "tag",
            selectAllText: _localization_message__WEBPACK_IMPORTED_MODULE_16__["default"].format("dxList-selectAll"),
            hideSelectedItems: false,
            selectedItems: [],
            selectAllMode: "page",
            onSelectAllValueChanged: null,
            maxDisplayedTags: void 0,
            showMultiTagOnly: true,
            onMultiTagPreparing: null,
            multiline: true,
            useSubmitBehavior: true
          });
        },
        _init: function _init() {
          this.callBase();
          this._selectedItems = [];
          this._initSelectAllValueChangedAction();
        },
        _initActions: function _initActions() {
          this.callBase();
          this._initMultiTagPreparingAction();
        },
        _initMultiTagPreparingAction: function _initMultiTagPreparingAction() {
          this._multiTagPreparingAction = this._createActionByOption("onMultiTagPreparing", {
            beforeExecute: function (e) {
              this._multiTagPreparingHandler(e.args[0]);
            }.bind(this),
            excludeValidators: ["disabled", "readOnly"]
          });
        },
        _multiTagPreparingHandler: function _multiTagPreparingHandler(args) {
          var _this$_getValue = this._getValue(),
            selectedCount = _this$_getValue.length;
          if (!this.option("showMultiTagOnly")) {
            args.text = _localization_message__WEBPACK_IMPORTED_MODULE_16__["default"].getFormatter("dxTagBox-moreSelected")(selectedCount - this.option("maxDisplayedTags") + 1);
          } else {
            args.text = _localization_message__WEBPACK_IMPORTED_MODULE_16__["default"].getFormatter("dxTagBox-selected")(selectedCount);
          }
        },
        _initDynamicTemplates: function _initDynamicTemplates() {
          this.callBase();
          this._templateManager.addDefaultTemplates({
            tag: new _core_templates_bindable_template__WEBPACK_IMPORTED_MODULE_22__.BindableTemplate(function ($container, data) {
              var _data$text;
              var $tagContent = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(TAGBOX_TAG_CONTENT_CLASS);
              (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<span>").text(null !== (_data$text = data.text) && void 0 !== _data$text ? _data$text : data).appendTo($tagContent);
              (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(TAGBOX_TAG_REMOVE_BUTTON_CLASS).appendTo($tagContent);
              $container.append($tagContent);
            }, ["text"], this.option("integrationOptions.watchMethod"), {
              text: this._displayGetter
            })
          });
        },
        _toggleSubmitElement: function _toggleSubmitElement(enabled) {
          if (enabled) {
            this._renderSubmitElement();
            this._setSubmitValue();
          } else {
            this._$submitElement && this._$submitElement.remove();
            delete this._$submitElement;
          }
        },
        _renderSubmitElement: function _renderSubmitElement() {
          if (!this.option("useSubmitBehavior")) {
            return;
          }
          this._$submitElement = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<select>").attr("multiple", "multiple").css("display", "none").appendTo(this.$element());
        },
        _setSubmitValue: function _setSubmitValue() {
          if (!this.option("useSubmitBehavior")) {
            return;
          }
          var value = this._getValue();
          var $options = [];
          for (var i = 0, n = value.length; i < n; i++) {
            var useDisplayText = this._shouldUseDisplayValue(value[i]);
            $options.push((0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<option>").val(useDisplayText ? this._displayGetter(value[i]) : value[i]).attr("selected", "selected"));
          }
          this._getSubmitElement().empty().append($options);
        },
        _initMarkup: function _initMarkup() {
          this._tagElementsCache = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])();
          var isSingleLineMode = !this.option("multiline");
          this.$element().addClass(TAGBOX_CLASS).toggleClass(TAGBOX_ONLY_SELECT_CLASS, !(this.option("searchEnabled") || this.option("acceptCustomValue"))).toggleClass(TAGBOX_SINGLE_LINE_CLASS, isSingleLineMode);
          this._initTagTemplate();
          this.callBase();
        },
        _render: function _render() {
          this.callBase();
          this._renderTagRemoveAction();
          this._renderSingleLineScroll();
          this._scrollContainer("start");
        },
        _initTagTemplate: function _initTagTemplate() {
          this._tagTemplate = this._getTemplateByOption("tagTemplate");
        },
        _renderField: function _renderField() {
          var isDefaultFieldTemplate = !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(this.option("fieldTemplate"));
          this.$element().toggleClass(TAGBOX_DEFAULT_FIELD_TEMPLATE_CLASS, isDefaultFieldTemplate).toggleClass(TAGBOX_CUSTOM_FIELD_TEMPLATE_CLASS, !isDefaultFieldTemplate);
          this.callBase();
        },
        _renderTagRemoveAction: function _renderTagRemoveAction() {
          var tagRemoveAction = this._createAction(this._removeTagHandler.bind(this));
          var eventName = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_17__.addNamespace)(_events_click__WEBPACK_IMPORTED_MODULE_18__.name, "dxTagBoxTagRemove");
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__["default"].off(this._$tagsContainer, eventName);
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__["default"].on(this._$tagsContainer, eventName, ".".concat(TAGBOX_TAG_REMOVE_BUTTON_CLASS), function (event) {
            tagRemoveAction({
              event: event
            });
          });
        },
        _renderSingleLineScroll: function _renderSingleLineScroll() {
          var mouseWheelEvent = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_17__.addNamespace)("dxmousewheel", this.NAME);
          var $element = this.$element();
          var isMultiline = this.option("multiline");
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__["default"].off($element, mouseWheelEvent);
          if ("desktop" !== _core_devices__WEBPACK_IMPORTED_MODULE_2__["default"].real().deviceType) {
            this._$tagsContainer && this._$tagsContainer.css("overflowX", isMultiline ? "" : "auto");
            return;
          }
          if (isMultiline) {
            return;
          }
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__["default"].on($element, mouseWheelEvent, this._tagContainerMouseWheelHandler.bind(this));
        },
        _tagContainerMouseWheelHandler: function _tagContainerMouseWheelHandler(e) {
          var scrollLeft = this._$tagsContainer.scrollLeft();
          var delta = e.delta * TAGBOX_MOUSE_WHEEL_DELTA_MULTIPLIER;
          if (!(0, _events_utils_index__WEBPACK_IMPORTED_MODULE_17__.isCommandKeyPressed)(e) && (0, _text_box_utils_scroll__WEBPACK_IMPORTED_MODULE_23__.allowScroll)(this._$tagsContainer, delta, true)) {
            this._$tagsContainer.scrollLeft(scrollLeft + delta);
            return false;
          }
        },
        _renderEvents: function _renderEvents() {
          var _this257 = this;
          this.callBase();
          var input = this._input();
          var namespace = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_17__.addNamespace)("keydown", this.NAME);
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__["default"].on(input, namespace, function (e) {
            var keyName = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_17__.normalizeKeyName)(e);
            if (!_this257._isControlKey(keyName) && _this257._isEditable()) {
              _this257._clearTagFocus();
            }
          });
        },
        _popupWrapperClass: function _popupWrapperClass() {
          return this.callBase() + " " + TAGBOX_POPUP_WRAPPER_CLASS;
        },
        _renderInput: function _renderInput() {
          this.callBase();
          this._renderPreventBlurOnInputClick();
        },
        _renderPreventBlurOnInputClick: function _renderPreventBlurOnInputClick() {
          var _this258 = this;
          var eventName = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_17__.addNamespace)("mousedown", "dxTagBox");
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__["default"].off(this._inputWrapper(), eventName);
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_4__["default"].on(this._inputWrapper(), eventName, function (e) {
            if (e.target !== _this258._input()[0] && _this258._isFocused()) {
              e.preventDefault();
            }
          });
        },
        _renderInputValueImpl: function _renderInputValueImpl() {
          return this._renderMultiSelect();
        },
        _loadInputValue: function _loadInputValue() {
          return (0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.when)();
        },
        _clearTextValue: function _clearTextValue() {
          this._input().val("");
          this._toggleEmptinessEventHandler();
          this.option("text", "");
        },
        _focusInHandler: function _focusInHandler(e) {
          if (!this._preventNestedFocusEvent(e)) {
            this._scrollContainer("end");
          }
          this.callBase(e);
        },
        _renderInputValue: function _renderInputValue() {
          this.option("displayValue", this._searchValue());
          return this.callBase();
        },
        _restoreInputText: function _restoreInputText(saveEditingValue) {
          if (!saveEditingValue) {
            this._clearTextValue();
          }
        },
        _focusOutHandler: function _focusOutHandler(e) {
          if (!this._preventNestedFocusEvent(e)) {
            this._clearTagFocus();
            this._scrollContainer("start");
          }
          this.callBase(e);
        },
        _getFirstPopupElement: function _getFirstPopupElement() {
          return this.option("showSelectionControls") ? this._list.$element() : this.callBase();
        },
        _initSelectAllValueChangedAction: function _initSelectAllValueChangedAction() {
          this._selectAllValueChangeAction = this._createActionByOption("onSelectAllValueChanged");
        },
        _renderList: function _renderList() {
          var _this259 = this;
          this.callBase();
          this._setListDataSourceFilter();
          if (this.option("showSelectionControls")) {
            this._list.registerKeyHandler("tab", function (e) {
              return _this259._popupElementTabHandler(e);
            });
            this._list.registerKeyHandler("escape", function (e) {
              return _this259._popupElementEscHandler(e);
            });
          }
        },
        _canListHaveFocus: function _canListHaveFocus() {
          return "useButtons" === this.option("applyValueMode");
        },
        _listConfig: function _listConfig() {
          var _this260 = this;
          var selectionMode = this.option("showSelectionControls") ? "all" : "multiple";
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_13__.extend)(this.callBase(), {
            maxFilterLengthInRequest: this.option("maxFilterQueryLength"),
            selectionMode: selectionMode,
            selectAllText: this.option("selectAllText"),
            onSelectAllValueChanged: function onSelectAllValueChanged(_ref) {
              var value = _ref.value;
              _this260._selectAllValueChangeAction({
                value: value
              });
            },
            selectAllMode: this.option("selectAllMode"),
            selectedItems: this._selectedItems,
            onFocusedItemChanged: null
          });
        },
        _renderMultiSelect: function _renderMultiSelect() {
          var _this261 = this;
          var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred();
          this._updateTagsContainer(this._$textEditorInputContainer);
          this._renderInputSize();
          this._renderTags().done(function () {
            _this261._popup && _this261._popup.refreshPosition();
            d.resolve();
          }).fail(d.reject);
          return d.promise();
        },
        _listItemClickHandler: function _listItemClickHandler(e) {
          !this.option("showSelectionControls") && this._clearTextValue();
          if ("useButtons" === this.option("applyValueMode")) {
            return;
          }
          this.callBase(e);
          this._saveValueChangeEvent(void 0);
        },
        _shouldClearFilter: function _shouldClearFilter() {
          var shouldClearFilter = this.callBase();
          var showSelectionControls = this.option("showSelectionControls");
          return !showSelectionControls && shouldClearFilter;
        },
        _renderInputSize: function _renderInputSize() {
          var $input = this._input();
          var value = $input.val();
          var isEmptyInput = (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isString)(value) && value;
          var width = "";
          var size = "";
          var canTypeText = this.option("searchEnabled") || this.option("acceptCustomValue");
          if (isEmptyInput && canTypeText) {
            var $calculationElement = (0, _core_utils_dom__WEBPACK_IMPORTED_MODULE_9__.createTextElementHiddenCopy)($input, value, {
              includePaddings: true
            });
            $calculationElement.insertAfter($input);
            width = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)($calculationElement) + 5;
            $calculationElement.remove();
          } else if (!value) {
            size = 1;
          }
          $input.css("width", width);
          $input.attr("size", size);
        },
        _renderInputSubstitution: function _renderInputSubstitution() {
          this.callBase();
          this._updateWidgetHeight();
        },
        _getValue: function _getValue() {
          return this.option("value") || [];
        },
        _multiTagRequired: function _multiTagRequired() {
          var values = this._getValue();
          var maxDisplayedTags = this.option("maxDisplayedTags");
          return (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(maxDisplayedTags) && values.length > maxDisplayedTags;
        },
        _renderMultiTag: function _renderMultiTag($input) {
          var $tag = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(TAGBOX_TAG_CLASS).addClass(TAGBOX_MULTI_TAG_CLASS);
          var args = {
            multiTagElement: (0, _core_element__WEBPACK_IMPORTED_MODULE_10__.getPublicElement)($tag),
            selectedItems: this.option("selectedItems")
          };
          this._multiTagPreparingAction(args);
          if (args.cancel) {
            return false;
          }
          $tag.data(TAGBOX_TAG_DATA_KEY, args.text);
          $tag.insertBefore($input);
          this._tagTemplate.render({
            model: args.text,
            container: (0, _core_element__WEBPACK_IMPORTED_MODULE_10__.getPublicElement)($tag)
          });
          return $tag;
        },
        _getFilter: function _getFilter(creator) {
          var dataSourceFilter = this._dataController.filter();
          var filterExpr = creator.getCombinedFilter(this.option("valueExpr"), dataSourceFilter);
          var filterQueryLength = encodeURI(JSON.stringify(filterExpr)).length;
          var maxFilterQueryLength = this.option("maxFilterQueryLength");
          if (filterQueryLength <= maxFilterQueryLength) {
            return filterExpr;
          }
          _widget_ui_errors__WEBPACK_IMPORTED_MODULE_24__["default"].log("W1019", maxFilterQueryLength);
        },
        _getFilteredItems: function _getFilteredItems(values) {
          var _this262 = this;
          var _this$_loadFilteredIt, _this$_list;
          null === (_this$_loadFilteredIt = this._loadFilteredItemsPromise) || void 0 === _this$_loadFilteredIt ? void 0 : _this$_loadFilteredIt.reject();
          var creator = new _core_utils_selection_filter__WEBPACK_IMPORTED_MODULE_7__.SelectionFilterCreator(values);
          var listSelectedItems = null === (_this$_list = this._list) || void 0 === _this$_list ? void 0 : _this$_list.option("selectedItems");
          var isListItemsLoaded = !!listSelectedItems && this._list._dataController.isLoaded();
          var selectedItems = listSelectedItems || this.option("selectedItems");
          var clientFilterFunction = creator.getLocalFilter(this._valueGetter);
          var filteredItems = selectedItems.filter(clientFilterFunction);
          var selectedItemsAlreadyLoaded = filteredItems.length === values.length;
          var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred();
          var dataController = this._dataController;
          if ((!this._isDataSourceChanged || isListItemsLoaded) && selectedItemsAlreadyLoaded) {
            return d.resolve(filteredItems).promise();
          } else {
            var _dataController$loadO = dataController.loadOptions(),
              customQueryParams = _dataController$loadO.customQueryParams,
              expand = _dataController$loadO.expand,
              select = _dataController$loadO.select;
            var filter = this._getFilter(creator);
            dataController.loadFromStore({
              filter: filter,
              customQueryParams: customQueryParams,
              expand: expand,
              select: select
            }).done(function (data, extra) {
              _this262._isDataSourceChanged = false;
              if (_this262._disposed) {
                d.reject();
                return;
              }
              var _ref31 = (0, _data_data_source_utils__WEBPACK_IMPORTED_MODULE_20__.normalizeLoadResult)(data, extra),
                items = _ref31.data;
              var mappedItems = dataController.applyMapFunction(items);
              d.resolve(mappedItems.filter(clientFilterFunction));
            }).fail(d.reject);
            this._loadFilteredItemsPromise = d;
            return d.promise();
          }
        },
        _createTagsData: function _createTagsData(values, filteredItems) {
          var _this263 = this;
          var items = [];
          var cache = {};
          var isValueExprSpecified = "this" === this._valueGetterExpr();
          var filteredValues = {};
          filteredItems.forEach(function (filteredItem) {
            var filteredItemValue = isValueExprSpecified ? JSON.stringify(filteredItem) : _this263._valueGetter(filteredItem);
            filteredValues[filteredItemValue] = filteredItem;
          });
          var loadItemPromises = [];
          values.forEach(function (value, index) {
            var currentItem = filteredValues[isValueExprSpecified ? JSON.stringify(value) : value];
            if (isValueExprSpecified && !(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(currentItem)) {
              loadItemPromises.push(_this263._loadItem(value, cache).always(function (item) {
                var newItem = _this263._createTagData(item, value);
                items.splice(index, 0, newItem);
              }));
            } else {
              var newItem = _this263._createTagData(currentItem, value);
              items.splice(index, 0, newItem);
            }
          });
          var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred();
          _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.when.apply(this, loadItemPromises).always(function () {
            d.resolve(items);
          });
          return d.promise();
        },
        _createTagData: function _createTagData(item, value) {
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(item)) {
            this._selectedItems.push(item);
            return item;
          } else {
            var selectedItem = this.option("selectedItem");
            var customItem = this._valueGetter(selectedItem) === value ? selectedItem : value;
            return customItem;
          }
        },
        _isGroupedData: function _isGroupedData() {
          return this.option("grouped") && !this._dataController.group();
        },
        _getItemsByValues: function _getItemsByValues(values) {
          var resultItems = [];
          values.forEach(function (value) {
            var item = this._getItemFromPlain(value);
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(item)) {
              resultItems.push(item);
            }
          }.bind(this));
          return resultItems;
        },
        _getFilteredGroupedItems: function _getFilteredGroupedItems(values) {
          var _this264 = this;
          var selectedItems = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred();
          if (this._filteredGroupedItemsLoadPromise) {
            this._dataController.cancel(this._filteredGroupedItemsLoadPromise.operationId);
          }
          if (!this._dataController.items().length) {
            this._filteredGroupedItemsLoadPromise = this._dataController.load().done(function () {
              selectedItems.resolve(_this264._getItemsByValues(values));
            }).fail(function () {
              selectedItems.resolve([]);
            }).always(function () {
              _this264._filteredGroupedItemsLoadPromise = void 0;
            });
          } else {
            selectedItems.resolve(this._getItemsByValues(values));
          }
          return selectedItems.promise();
        },
        _loadTagsData: function _loadTagsData() {
          var _this265 = this;
          var values = this._getValue();
          var tagData = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred();
          this._selectedItems = [];
          var filteredItemsPromise = this._isGroupedData() ? this._getFilteredGroupedItems(values) : this._getFilteredItems(values);
          filteredItemsPromise.done(function (filteredItems) {
            var items = _this265._createTagsData(values, filteredItems);
            items.always(function (data) {
              tagData.resolve(data);
            });
          }).fail(tagData.reject.bind(this));
          return tagData.promise();
        },
        _renderTags: function _renderTags() {
          var _this266 = this;
          var d = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred();
          var isPlainDataUsed = false;
          if (this._shouldGetItemsFromPlain(this._valuesToUpdate)) {
            this._selectedItems = this._getItemsFromPlain(this._valuesToUpdate);
            if (this._selectedItems.length === this._valuesToUpdate.length) {
              this._renderTagsImpl(this._selectedItems);
              isPlainDataUsed = true;
              d.resolve();
            }
          }
          if (!isPlainDataUsed) {
            this._loadTagsData().done(function (items) {
              if (_this266._disposed) {
                d.reject();
                return;
              }
              _this266._renderTagsImpl(items);
              d.resolve();
            }).fail(d.reject);
          }
          return d.promise();
        },
        _renderTagsImpl: function _renderTagsImpl(items) {
          this._renderTagsCore(items);
          this._renderEmptyState();
          if (!this._preserveFocusedTag) {
            this._clearTagFocus();
          }
        },
        _shouldGetItemsFromPlain: function _shouldGetItemsFromPlain(values) {
          return values && this._dataController.isLoaded() && values.length <= this._getPlainItems().length;
        },
        _getItemsFromPlain: function _getItemsFromPlain(values) {
          var selectedItems = this._getSelectedItemsFromList(values);
          var needFilterPlainItems = 0 === selectedItems.length && values.length > 0 || selectedItems.length < values.length;
          if (needFilterPlainItems) {
            var plainItems = this._getPlainItems();
            selectedItems = this._filterSelectedItems(plainItems, values);
          }
          return selectedItems;
        },
        _getSelectedItemsFromList: function _getSelectedItemsFromList(values) {
          var _this$_list2;
          var listSelectedItems = null === (_this$_list2 = this._list) || void 0 === _this$_list2 ? void 0 : _this$_list2.option("selectedItems");
          var selectedItems = [];
          if (values.length === (null === listSelectedItems || void 0 === listSelectedItems ? void 0 : listSelectedItems.length)) {
            selectedItems = this._filterSelectedItems(listSelectedItems, values);
          }
          return selectedItems;
        },
        _filterSelectedItems: function _filterSelectedItems(plainItems, values) {
          var _this267 = this;
          var selectedItems = plainItems.filter(function (dataItem) {
            var currentValue;
            for (var i = 0; i < values.length; i++) {
              currentValue = values[i];
              if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isObject)(currentValue)) {
                if (_this267._isValueEquals(dataItem, currentValue)) {
                  return true;
                }
              } else if (_this267._isValueEquals(_this267._valueGetter(dataItem), currentValue)) {
                return true;
              }
            }
            return false;
          }, this);
          return selectedItems;
        },
        _integrateInput: function _integrateInput() {
          this._isInputReady.resolve();
          this.callBase();
          var tagsContainer = this.$element().find(".".concat(TEXTEDITOR_INPUT_CONTAINER_CLASS));
          this._updateTagsContainer(tagsContainer);
          this._renderTagRemoveAction();
        },
        _renderTagsCore: function _renderTagsCore(items) {
          var _this268 = this;
          var _this$_isInputReady;
          null === (_this$_isInputReady = this._isInputReady) || void 0 === _this$_isInputReady ? void 0 : _this$_isInputReady.reject();
          this._isInputReady = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.Deferred();
          this._renderField();
          this.option("selectedItems", this._selectedItems.slice());
          this._cleanTags();
          if (this._input().length > 0) {
            this._isInputReady.resolve();
          }
          (0, _core_utils_deferred__WEBPACK_IMPORTED_MODULE_8__.when)(this._isInputReady).done(function () {
            _this268._renderTagsElements(items);
          });
        },
        _renderTagsElements: function _renderTagsElements(items) {
          var _this269 = this;
          var $multiTag = this._multiTagRequired() && this._renderMultiTag(this._input());
          var showMultiTagOnly = this.option("showMultiTagOnly");
          var maxDisplayedTags = this.option("maxDisplayedTags");
          items.forEach(function (item, index) {
            if ($multiTag && showMultiTagOnly || $multiTag && !showMultiTagOnly && index - maxDisplayedTags >= -1) {
              return false;
            }
            _this269._renderTag(item, $multiTag || _this269._input());
          });
          if (this._isFocused()) {
            this._scrollContainer("end");
          }
          this._refreshTagElements();
        },
        _cleanTags: function _cleanTags() {
          if (this._multiTagRequired()) {
            this._tagElements().remove();
          } else {
            var $tags = this._tagElements();
            var values = this._getValue();
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)($tags, function (_, tag) {
              var $tag = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(tag);
              var tagData = $tag.data(TAGBOX_TAG_DATA_KEY);
              if (!(null !== values && void 0 !== values && values.includes(tagData))) {
                $tag.remove();
              }
            });
          }
        },
        _renderEmptyState: function _renderEmptyState() {
          var isEmpty = !(this._getValue().length || this._selectedItems.length || this._searchValue());
          this._toggleEmptiness(isEmpty);
          this._renderDisplayText();
        },
        _renderDisplayText: function _renderDisplayText() {
          this._renderInputSize();
        },
        _refreshTagElements: function _refreshTagElements() {
          this._tagElementsCache = this.$element().find(".".concat(TAGBOX_TAG_CLASS));
        },
        _tagElements: function _tagElements() {
          return this._tagElementsCache;
        },
        _applyTagTemplate: function _applyTagTemplate(item, $tag) {
          this._tagTemplate.render({
            model: item,
            container: (0, _core_element__WEBPACK_IMPORTED_MODULE_10__.getPublicElement)($tag)
          });
        },
        _renderTag: function _renderTag(item, $input) {
          var value = this._valueGetter(item);
          if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(value)) {
            return;
          }
          var $tag = this._getTag(value);
          var displayValue = this._displayGetter(item);
          var itemModel = this._getItemModel(item, displayValue);
          if ($tag) {
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(displayValue)) {
              $tag.empty();
              this._applyTagTemplate(itemModel, $tag);
            }
            $tag.removeClass(TAGBOX_CUSTOM_TAG_CLASS);
          } else {
            $tag = this._createTag(value, $input);
            if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(item)) {
              this._applyTagTemplate(itemModel, $tag);
            } else {
              $tag.addClass(TAGBOX_CUSTOM_TAG_CLASS);
              this._applyTagTemplate(value, $tag);
            }
          }
        },
        _getItemModel: function _getItemModel(item, displayValue) {
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isObject)(item) && (0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isDefined)(displayValue)) {
            return item;
          } else {
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.ensureDefined)(displayValue, "");
          }
        },
        _getTag: function _getTag(value) {
          var $tags = this._tagElements();
          var tagsLength = $tags.length;
          var result = false;
          for (var i = 0; i < tagsLength; i++) {
            var $tag = $tags[i];
            var tagData = (0, _core_element_data__WEBPACK_IMPORTED_MODULE_3__.data)($tag, TAGBOX_TAG_DATA_KEY);
            if (value === tagData || (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.equalByValue)(value, tagData)) {
              result = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])($tag);
              break;
            }
          }
          return result;
        },
        _createTag: function _createTag(value, $input) {
          return (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(TAGBOX_TAG_CLASS).data(TAGBOX_TAG_DATA_KEY, value).insertBefore($input);
        },
        _toggleEmptinessEventHandler: function _toggleEmptinessEventHandler() {
          this._toggleEmptiness(!this._getValue().length && !this._searchValue().length);
        },
        _customItemAddedHandler: function _customItemAddedHandler(e) {
          this.callBase(e);
          this._clearTextValue();
        },
        _removeTagHandler: function _removeTagHandler(args) {
          var e = args.event;
          e.stopPropagation();
          this._saveValueChangeEvent(e);
          var $tag = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(e.target).closest(".".concat(TAGBOX_TAG_CLASS));
          this._removeTagElement($tag);
        },
        _removeTagElement: function _removeTagElement($tag) {
          if ($tag.hasClass(TAGBOX_MULTI_TAG_CLASS)) {
            if (!this.option("showMultiTagOnly")) {
              this.option("value", this._getValue().slice(0, this.option("maxDisplayedTags")));
            } else {
              this.reset();
            }
            return;
          }
          var itemValue = $tag.data(TAGBOX_TAG_DATA_KEY);
          this._removeTagWithUpdate(itemValue);
          this._refreshTagElements();
        },
        _updateField: _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.noop,
        _removeTagWithUpdate: function _removeTagWithUpdate(itemValue) {
          var value = this._getValue().slice();
          this._removeTag(value, itemValue);
          this.option("value", value);
          this.option("selectedItem", null);
          if (0 === value.length) {
            this._clearTagFocus();
          }
        },
        _getCurrentValue: function _getCurrentValue() {
          return this._lastValue();
        },
        _selectionChangeHandler: function _selectionChangeHandler(e) {
          var _this270 = this;
          if ("useButtons" === this.option("applyValueMode")) {
            return;
          }
          var value = this._getValue().slice();
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)(e.removedItems || [], function (_, removedItem) {
            _this270._removeTag(value, _this270._valueGetter(removedItem));
          });
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)(e.addedItems || [], function (_, addedItem) {
            _this270._addTag(value, _this270._valueGetter(addedItem));
          });
          this._updateWidgetHeight();
          if (!(0, _core_utils_common__WEBPACK_IMPORTED_MODULE_6__.equalByValue)(this._list.option("selectedItemKeys"), this.option("value"))) {
            var listSelectionChangeEvent = this._list._getSelectionChangeEvent();
            listSelectionChangeEvent && this._saveValueChangeEvent(listSelectionChangeEvent);
            this.option("value", value);
          }
          this._list._saveSelectionChangeEvent(void 0);
        },
        _removeTag: function _removeTag(value, item) {
          var index = this._valueIndex(item, value);
          if (index >= 0) {
            value.splice(index, 1);
          }
        },
        _addTag: function _addTag(value, item) {
          var index = this._valueIndex(item);
          if (index < 0) {
            value.push(item);
          }
        },
        _fieldRenderData: function _fieldRenderData() {
          return this._selectedItems.slice();
        },
        _completeSelection: function _completeSelection(value) {
          if (!this.option("showSelectionControls")) {
            this._setValue(value);
          }
        },
        _setValue: function _setValue(value) {
          if (null === value) {
            return;
          }
          var useButtons = "useButtons" === this.option("applyValueMode");
          var valueIndex = this._valueIndex(value);
          var values = (useButtons ? this._list.option("selectedItemKeys") : this._getValue()).slice();
          if (valueIndex >= 0) {
            values.splice(valueIndex, 1);
          } else {
            values.push(value);
          }
          if ("useButtons" === this.option("applyValueMode")) {
            this._list.option("selectedItemKeys", values);
          } else {
            this.option("value", values);
          }
        },
        _isSelectedValue: function _isSelectedValue(value, cache) {
          return this._valueIndex(value, null, cache) > -1;
        },
        _valueIndex: function _valueIndex(value, values, cache) {
          var _this271 = this;
          var result = -1;
          if (cache && "object" !== typeof value) {
            if (!cache.indexByValues) {
              cache.indexByValues = {};
              values = values || this._getValue();
              values.forEach(function (value, index) {
                cache.indexByValues[value] = index;
              });
            }
            if (value in cache.indexByValues) {
              return cache.indexByValues[value];
            }
          }
          values = values || this._getValue();
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)(values, function (index, selectedValue) {
            if (_this271._isValueEquals(value, selectedValue)) {
              result = index;
              return false;
            }
          });
          return result;
        },
        _lastValue: function _lastValue() {
          var values = this._getValue();
          var lastValue = values[values.length - 1];
          return null !== lastValue && void 0 !== lastValue ? lastValue : null;
        },
        _shouldRenderSearchEvent: function _shouldRenderSearchEvent() {
          return this.option("searchEnabled") || this.option("acceptCustomValue");
        },
        _searchHandler: function _searchHandler(e) {
          if (this.option("searchEnabled") && !!e && !this._isTagRemoved) {
            this.callBase(arguments);
            this._setListDataSourceFilter();
          }
          this._updateWidgetHeight();
          delete this._isTagRemoved;
        },
        _updateWidgetHeight: function _updateWidgetHeight() {
          var element = this.$element();
          var originalHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)(element);
          this._renderInputSize();
          var currentHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getHeight)(element);
          if (this._popup && this.option("opened") && this._isEditable() && currentHeight !== originalHeight) {
            this._popup.repaint();
          }
        },
        _refreshSelected: function _refreshSelected() {
          var _this$_list3;
          (null === (_this$_list3 = this._list) || void 0 === _this$_list3 ? void 0 : _this$_list3.getDataSource()) && this._list.option("selectedItems", this._selectedItems);
        },
        _resetListDataSourceFilter: function _resetListDataSourceFilter() {
          var dataController = this._dataController;
          delete this._userFilter;
          dataController.filter(null);
          dataController.reload();
        },
        _setListDataSourceFilter: function _setListDataSourceFilter() {
          if (!this.option("hideSelectedItems") || !this._list) {
            return;
          }
          var dataController = this._dataController;
          var valueGetterExpr = this._valueGetterExpr();
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_11__.isString)(valueGetterExpr) && "this" !== valueGetterExpr) {
            var filter = this._dataSourceFilterExpr();
            if (void 0 === this._userFilter) {
              this._userFilter = dataController.filter() || null;
            }
            this._userFilter && filter.push(this._userFilter);
            filter.length ? dataController.filter(filter) : dataController.filter(null);
          } else {
            dataController.filter(this._dataSourceFilterFunction.bind(this));
          }
          dataController.load();
        },
        _dataSourceFilterExpr: function _dataSourceFilterExpr() {
          var _this272 = this;
          var filter = [];
          this._getValue().forEach(function (value) {
            return filter.push(["!", [_this272._valueGetterExpr(), value]]);
          });
          return filter;
        },
        _dataSourceFilterFunction: function _dataSourceFilterFunction(itemData) {
          var _this273 = this;
          var itemValue = this._valueGetter(itemData);
          var result = true;
          (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_14__.each)(this._getValue(), function (index, value) {
            if (_this273._isValueEquals(value, itemValue)) {
              result = false;
              return false;
            }
          });
          return result;
        },
        _dataSourceChangedHandler: function _dataSourceChangedHandler() {
          this._isDataSourceChanged = true;
          this.callBase.apply(this, arguments);
        },
        _applyButtonHandler: function _applyButtonHandler(args) {
          this._saveValueChangeEvent(args.event);
          this.option("value", this._getSortedListValues());
          this._clearTextValue();
          this.callBase();
          this._cancelSearchIfNeed();
        },
        _getSortedListValues: function _getSortedListValues() {
          var listValues = this._getListValues();
          var currentValue = this.option("value") || [];
          var existedItems = listValues.length ? (0, _core_utils_array__WEBPACK_IMPORTED_MODULE_15__.getIntersection)(currentValue, listValues) : [];
          var newItems = existedItems.length ? (0, _core_utils_array__WEBPACK_IMPORTED_MODULE_15__.removeDuplicates)(listValues, currentValue) : listValues;
          return existedItems.concat(newItems);
        },
        _getListValues: function _getListValues() {
          var _this274 = this;
          if (!this._list) {
            return [];
          }
          return this._getPlainItems(this._list.option("selectedItems")).map(function (item) {
            return _this274._valueGetter(item);
          });
        },
        _setListDataSource: function _setListDataSource() {
          var currentValue = this._getValue();
          this.callBase();
          if (currentValue !== this.option("value")) {
            this.option("value", currentValue);
          }
          this._refreshSelected();
        },
        _renderOpenedState: function _renderOpenedState() {
          this.callBase();
          if ("useButtons" === this.option("applyValueMode") && !this.option("opened")) {
            this._refreshSelected();
          }
        },
        reset: function reset() {
          this._restoreInputText();
          var defaultValue = this._getDefaultOptions().value;
          var currentValue = this.option("value");
          if (defaultValue && 0 === defaultValue.length && currentValue && defaultValue.length === currentValue.length) {
            return;
          }
          this.callBase();
        },
        _clean: function _clean() {
          this.callBase();
          delete this._defaultTagTemplate;
          delete this._valuesToUpdate;
          delete this._tagTemplate;
        },
        _getSelectedItemsDifference: function _getSelectedItemsDifference(newItems, previousItems) {
          var _this275 = this;
          if (!newItems.length) {
            return {
              addedItems: [],
              removedItems: previousItems.slice()
            };
          }
          if (!previousItems.length) {
            return {
              addedItems: newItems.slice(),
              removedItems: []
            };
          }
          var previousItemsValuesMap = previousItems.reduce(function (map, item) {
            var value = _this275._valueGetter(item);
            map[value] = item;
            return map;
          }, {});
          var addedItems = [];
          newItems.forEach(function (item) {
            var value = _this275._valueGetter(item);
            if (!previousItemsValuesMap[value]) {
              addedItems.push(item);
            }
            delete previousItemsValuesMap[value];
          });
          return {
            addedItems: addedItems,
            removedItems: Object.values(previousItemsValuesMap)
          };
        },
        _optionChanged: function _optionChanged(args) {
          var name = args.name,
            value = args.value,
            previousValue = args.previousValue;
          switch (name) {
            case "onSelectAllValueChanged":
              this._initSelectAllValueChangedAction();
              break;
            case "onMultiTagPreparing":
              this._initMultiTagPreparingAction();
              this._renderTags();
              break;
            case "hideSelectedItems":
              if (value) {
                this._setListDataSourceFilter();
              } else {
                this._resetListDataSourceFilter();
              }
              break;
            case "useSubmitBehavior":
              this._toggleSubmitElement(value);
              break;
            case "displayExpr":
              this.callBase(args);
              this._initTemplates();
              this._invalidate();
              break;
            case "tagTemplate":
              this._initTagTemplate();
              this._invalidate();
              break;
            case "selectAllText":
              this._setListOption("selectAllText", this.option("selectAllText"));
              break;
            case "readOnly":
            case "disabled":
              this.callBase(args);
              !value && this._refreshEvents();
              break;
            case "value":
              this._valuesToUpdate = value;
              this.callBase(args);
              this._valuesToUpdate = void 0;
              this._setListDataSourceFilter();
              break;
            case "maxDisplayedTags":
            case "showMultiTagOnly":
              this._renderTags();
              break;
            case "selectAllMode":
              this._setListOption(name, value);
              break;
            case "selectedItem":
              break;
            case "selectedItems":
              this._selectionChangedAction(this._getSelectedItemsDifference(value, previousValue));
              break;
            case "multiline":
              this.$element().toggleClass(TAGBOX_SINGLE_LINE_CLASS, !value);
              this._renderSingleLineScroll();
              break;
            case "maxFilterQueryLength":
              break;
            default:
              this.callBase(args);
          }
        },
        _getActualSearchValue: function _getActualSearchValue() {
          return this.callBase() || this._searchValue();
        },
        _popupHidingHandler: function _popupHidingHandler() {
          this.callBase();
          this._clearFilter();
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_5__["default"])("dxTagBox", TagBox);
      /* harmony default export */
      __webpack_exports__["default"] = TagBox;

      /***/
    }),
    /***/46740: (
    /*!*****************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/text_area.js ***!
      \*****************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../events/core/events_engine */99064);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../core/utils/common */37552);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../core/utils/window */88684);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../core/utils/type */33275);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../events/utils/index */3151);
      /* harmony import */
      var _events_pointer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../events/pointer */24842);
      /* harmony import */
      var _events_gesture_emitter_gesture_scroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../events/gesture/emitter.gesture.scroll */2136);
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../core/utils/size */84167);
      /* harmony import */
      var _text_box_utils_scroll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ./text_box/utils.scroll */89797);
      /* harmony import */
      var _text_box__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__( /*! ./text_box */70426);
      /**
       * DevExtreme (esm/ui/text_area.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TEXTAREA_CLASS = "dx-textarea";
      var TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE = "dx-texteditor-input-auto-resize";
      var TextArea = _text_box__WEBPACK_IMPORTED_MODULE_12__["default"].inherit({
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_5__.extend)(this.callBase(), {
            spellcheck: true,
            minHeight: void 0,
            maxHeight: void 0,
            autoResizeEnabled: false
          });
        },
        _initMarkup: function _initMarkup() {
          this.$element().addClass(TEXTAREA_CLASS);
          this.callBase();
          this.setAria("multiline", "true");
        },
        _renderContentImpl: function _renderContentImpl() {
          this._updateInputHeight();
          this.callBase();
        },
        _renderInput: function _renderInput() {
          this.callBase();
          this._renderScrollHandler();
        },
        _createInput: function _createInput() {
          var $input = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<textarea>");
          this._applyInputAttributes($input, this.option("inputAttr"));
          this._updateInputAutoResizeAppearance($input);
          return $input;
        },
        _getDefaultAttributes: function _getDefaultAttributes() {
          return {
            autocomplete: "off"
          };
        },
        _setInputMinHeight: _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop,
        _renderScrollHandler: function _renderScrollHandler() {
          this._eventY = 0;
          var $input = this._input();
          var initScrollData = (0, _text_box_utils_scroll__WEBPACK_IMPORTED_MODULE_11__.prepareScrollData)($input, true);
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__["default"].on($input, (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_gesture_emitter_gesture_scroll__WEBPACK_IMPORTED_MODULE_9__["default"].init, this.NAME), initScrollData, _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop);
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__["default"].on($input, (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_8__["default"].down, this.NAME), this._pointerDownHandler.bind(this));
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__["default"].on($input, (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)(_events_pointer__WEBPACK_IMPORTED_MODULE_8__["default"].move, this.NAME), this._pointerMoveHandler.bind(this));
        },
        _pointerDownHandler: function _pointerDownHandler(e) {
          this._eventY = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.eventData)(e).y;
        },
        _pointerMoveHandler: function _pointerMoveHandler(e) {
          var currentEventY = (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.eventData)(e).y;
          var delta = this._eventY - currentEventY;
          if ((0, _text_box_utils_scroll__WEBPACK_IMPORTED_MODULE_11__.allowScroll)(this._input(), delta)) {
            e.isScrollingEvent = true;
            e.stopPropagation();
          }
          this._eventY = currentEventY;
        },
        _renderDimensions: function _renderDimensions() {
          var $element = this.$element();
          var element = $element.get(0);
          var width = this._getOptionValue("width", element);
          var height = this._getOptionValue("height", element);
          var minHeight = this.option("minHeight");
          var maxHeight = this.option("maxHeight");
          $element.css({
            minHeight: void 0 !== minHeight ? minHeight : "",
            maxHeight: void 0 !== maxHeight ? maxHeight : "",
            width: width,
            height: height
          });
        },
        _resetDimensions: function _resetDimensions() {
          this.$element().css({
            height: "",
            minHeight: "",
            maxHeight: ""
          });
        },
        _renderEvents: function _renderEvents() {
          if (this.option("autoResizeEnabled")) {
            _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__["default"].on(this._input(), (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)("input paste", this.NAME), this._updateInputHeight.bind(this));
          }
          this.callBase();
        },
        _refreshEvents: function _refreshEvents() {
          _events_core_events_engine__WEBPACK_IMPORTED_MODULE_1__["default"].off(this._input(), (0, _events_utils_index__WEBPACK_IMPORTED_MODULE_7__.addNamespace)("input paste", this.NAME));
          this.callBase();
        },
        _getHeightDifference: function _getHeightDifference($input) {
          return (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getVerticalOffsets)(this._$element.get(0), false) + (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getVerticalOffsets)(this._$textEditorContainer.get(0), false) + (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getVerticalOffsets)(this._$textEditorInputContainer.get(0), false) + (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getElementBoxParams)("height", (0, _core_utils_window__WEBPACK_IMPORTED_MODULE_3__.getWindow)().getComputedStyle($input.get(0))).margin;
        },
        _updateInputHeight: function _updateInputHeight() {
          if (!(0, _core_utils_window__WEBPACK_IMPORTED_MODULE_3__.hasWindow)()) {
            return;
          }
          var $input = this._input();
          var height = this.option("height");
          var autoHeightResizing = void 0 === height && this.option("autoResizeEnabled");
          var shouldCalculateInputHeight = autoHeightResizing || void 0 === height && this.option("minHeight");
          if (!shouldCalculateInputHeight) {
            $input.css("height", "");
            return;
          }
          this._resetDimensions();
          this._$element.css("height", (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.getOuterHeight)(this._$element));
          $input.css("height", 0);
          var heightDifference = this._getHeightDifference($input);
          this._renderDimensions();
          var minHeight = this._getBoundaryHeight("minHeight");
          var maxHeight = this._getBoundaryHeight("maxHeight");
          var inputHeight = $input[0].scrollHeight;
          if (void 0 !== minHeight) {
            inputHeight = Math.max(inputHeight, minHeight - heightDifference);
          }
          if (void 0 !== maxHeight) {
            var adjustedMaxHeight = maxHeight - heightDifference;
            var needScroll = inputHeight > adjustedMaxHeight;
            inputHeight = Math.min(inputHeight, adjustedMaxHeight);
            this._updateInputAutoResizeAppearance($input, !needScroll);
          }
          $input.css("height", inputHeight);
          if (autoHeightResizing) {
            this._$element.css("height", "auto");
          }
        },
        _getBoundaryHeight: function _getBoundaryHeight(optionName) {
          var boundaryValue = this.option(optionName);
          if ((0, _core_utils_type__WEBPACK_IMPORTED_MODULE_6__.isDefined)(boundaryValue)) {
            return "number" === typeof boundaryValue ? boundaryValue : (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_10__.parseHeight)(boundaryValue, this.$element().get(0).parentElement, this._$element.get(0));
          }
        },
        _renderInputType: _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.noop,
        _visibilityChanged: function _visibilityChanged(visible) {
          if (visible) {
            this._updateInputHeight();
          }
        },
        _updateInputAutoResizeAppearance: function _updateInputAutoResizeAppearance($input, isAutoResizeEnabled) {
          if ($input) {
            var autoResizeEnabled = (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_2__.ensureDefined)(isAutoResizeEnabled, this.option("autoResizeEnabled"));
            $input.toggleClass(TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE, autoResizeEnabled);
          }
        },
        _dimensionChanged: function _dimensionChanged() {
          if (this.option("visible")) {
            this._updateInputHeight();
          }
        },
        _optionChanged: function _optionChanged(args) {
          switch (args.name) {
            case "autoResizeEnabled":
              this._updateInputAutoResizeAppearance(this._input(), args.value);
              this._refreshEvents();
              this._updateInputHeight();
              break;
            case "value":
            case "height":
              this.callBase(args);
              this._updateInputHeight();
              break;
            case "minHeight":
            case "maxHeight":
              this._renderDimensions();
              this._updateInputHeight();
              break;
            case "visible":
              this.callBase(args);
              args.value && this._updateInputHeight();
              break;
            default:
              this.callBase(args);
          }
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_4__["default"])("dxTextArea", TextArea);
      /* harmony default export */
      __webpack_exports__["default"] = TextArea;

      /***/
    }),
    /***/89797: (
    /*!*****************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/text_box/utils.scroll.js ***!
      \*****************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"allowScroll": function allowScroll() {
          return /* binding */_allowScroll;
        },
        /* harmony export */"prepareScrollData": function prepareScrollData() {
          return /* binding */_prepareScrollData;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _events_utils_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../events/utils/index */3151);
      /**
       * DevExtreme (esm/ui/text_box/utils.scroll.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var _allowScroll = function _allowScroll(container, delta, shiftKey) {
        var $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(container);
        var scrollTopPos = shiftKey ? $container.scrollLeft() : $container.scrollTop();
        var prop = shiftKey ? "Width" : "Height";
        var scrollSize = $container.prop("scroll".concat(prop));
        var clientSize = $container.prop("client".concat(prop));
        var scrollBottomPos = scrollSize - clientSize - scrollTopPos | 0;
        if (0 === scrollTopPos && 0 === scrollBottomPos) {
          return false;
        }
        var isScrollFromTop = 0 === scrollTopPos && delta >= 0;
        var isScrollFromBottom = 0 === scrollBottomPos && delta <= 0;
        var isScrollFromMiddle = scrollTopPos > 0 && scrollBottomPos > 0;
        if (isScrollFromTop || isScrollFromBottom || isScrollFromMiddle) {
          return true;
        }
      };
      var _prepareScrollData = function _prepareScrollData(container, validateTarget) {
        var $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(container);
        return {
          validate: function validate(e) {
            if ((0, _events_utils_index__WEBPACK_IMPORTED_MODULE_1__.isDxMouseWheelEvent)(e) && (eventTarget = e.target, validateTarget ? (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(eventTarget).is(container) : true)) {
              if (_allowScroll($container, -e.delta, e.shiftKey)) {
                e._needSkipEvent = true;
                return true;
              }
              return false;
            }
            var eventTarget;
          }
        };
      };

      /***/
    }),
    /***/8866: (
    /*!***************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/toolbar.js ***!
      \***************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _toolbar_ui_toolbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./toolbar/ui.toolbar */63739);
      /**
       * DevExtreme (esm/ui/toolbar.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      /* harmony default export */
      __webpack_exports__["default"] = _toolbar_ui_toolbar__WEBPACK_IMPORTED_MODULE_0__["default"];

      /***/
    }),
    /***/4025: (
    /*!****************************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/toolbar/internal/ui.toolbar.menu.js ***!
      \****************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */DropDownMenu;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/devices */41881);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _widget_ui_widget__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../widget/ui.widget */69703);
      /* harmony import */
      var _button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../button */66037);
      /* harmony import */
      var _ui_toolbar_menu_list__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./ui.toolbar.menu.list */96460);
      /* harmony import */
      var _themes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../../themes */78279);
      /* harmony import */
      var _core_templates_child_default_template__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../../../core/templates/child_default_template */51968);
      /* harmony import */
      var _ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ../ui.toolbar.utils */49636);
      /* harmony import */
      var _core_utils_window__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ../../../core/utils/window */88684);
      /* harmony import */
      var _popup__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! ../../popup */24113);
      /**
       * DevExtreme (esm/ui/toolbar/internal/ui.toolbar.menu.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var DROP_DOWN_MENU_CLASS = "dx-dropdownmenu";
      var DROP_DOWN_MENU_POPUP_CLASS = "dx-dropdownmenu-popup";
      var DROP_DOWN_MENU_POPUP_WRAPPER_CLASS = "dx-dropdownmenu-popup-wrapper";
      var DROP_DOWN_MENU_LIST_CLASS = "dx-dropdownmenu-list";
      var DROP_DOWN_MENU_BUTTON_CLASS = "dx-dropdownmenu-button";
      var POPUP_BOUNDARY_VERTICAL_OFFSET = 10;
      var POPUP_VERTICAL_OFFSET = 3;
      var DropDownMenu = /*#__PURE__*/function (_widget_ui_widget__WE) {
        _inherits(DropDownMenu, _widget_ui_widget__WE);
        function DropDownMenu() {
          _classCallCheck(this, DropDownMenu);
          return _callSuper(this, DropDownMenu, arguments);
        }
        _createClass(DropDownMenu, [{
          key: "_supportedKeys",
          value: function _supportedKeys() {
            var extension = {};
            if (!this.option("opened") || !this._list.option("focusedElement")) {
              extension = this._button._supportedKeys();
            }
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(_get(_getPrototypeOf(DropDownMenu.prototype), "_supportedKeys", this).call(this), extension, {
              tab: function tab() {
                this._popup && this._popup.hide();
              }
            });
          }
        }, {
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(_get(_getPrototypeOf(DropDownMenu.prototype), "_getDefaultOptions", this).call(this), {
              items: [],
              onItemClick: null,
              dataSource: null,
              itemTemplate: "item",
              onButtonClick: null,
              activeStateEnabled: true,
              hoverStateEnabled: true,
              opened: false,
              onItemRendered: null,
              closeOnClick: true,
              useInkRipple: false,
              container: void 0,
              animation: {
                show: {
                  type: "fade",
                  from: 0,
                  to: 1
                },
                hide: {
                  type: "fade",
                  to: 0
                }
              }
            });
          }
        }, {
          key: "_defaultOptionsRules",
          value: function _defaultOptionsRules() {
            return _get(_getPrototypeOf(DropDownMenu.prototype), "_defaultOptionsRules", this).call(this).concat([{
              device: function device() {
                return "desktop" === _core_devices__WEBPACK_IMPORTED_MODULE_2__["default"].real().deviceType && !_core_devices__WEBPACK_IMPORTED_MODULE_2__["default"].isSimulator();
              },
              options: {
                focusStateEnabled: true
              }
            }, {
              device: function device() {
                return (0, _themes__WEBPACK_IMPORTED_MODULE_7__.isMaterial)();
              },
              options: {
                useInkRipple: true,
                animation: {
                  show: {
                    type: "pop",
                    duration: 200,
                    from: {
                      scale: 0
                    },
                    to: {
                      scale: 1
                    }
                  },
                  hide: {
                    type: "pop",
                    duration: 200,
                    from: {
                      scale: 1
                    },
                    to: {
                      scale: 0
                    }
                  }
                }
              }
            }]);
          }
        }, {
          key: "_init",
          value: function _init() {
            _get(_getPrototypeOf(DropDownMenu.prototype), "_init", this).call(this);
            this.$element().addClass(DROP_DOWN_MENU_CLASS);
            this._initItemClickAction();
            this._initButtonClickAction();
          }
        }, {
          key: "_initItemClickAction",
          value: function _initItemClickAction() {
            this._itemClickAction = this._createActionByOption("onItemClick");
          }
        }, {
          key: "_initButtonClickAction",
          value: function _initButtonClickAction() {
            this._buttonClickAction = this._createActionByOption("onButtonClick");
          }
        }, {
          key: "_initTemplates",
          value: function _initTemplates() {
            this._templateManager.addDefaultTemplates({
              content: new _core_templates_child_default_template__WEBPACK_IMPORTED_MODULE_8__.ChildDefaultTemplate("content")
            });
            _get(_getPrototypeOf(DropDownMenu.prototype), "_initTemplates", this).call(this);
          }
        }, {
          key: "_initMarkup",
          value: function _initMarkup() {
            this._renderButton();
            _get(_getPrototypeOf(DropDownMenu.prototype), "_initMarkup", this).call(this);
          }
        }, {
          key: "_render",
          value: function _render() {
            _get(_getPrototypeOf(DropDownMenu.prototype), "_render", this).call(this);
            this.setAria({
              haspopup: true,
              expanded: this.option("opened")
            });
          }
        }, {
          key: "_renderContentImpl",
          value: function _renderContentImpl() {
            if (this.option("opened")) {
              this._renderPopup();
            }
          }
        }, {
          key: "_clean",
          value: function _clean() {
            this._cleanFocusState();
            this._list && this._list.$element().remove();
            this._popup && this._popup.$element().remove();
            delete this._list;
            delete this._popup;
          }
        }, {
          key: "_renderButton",
          value: function _renderButton() {
            var _this276 = this;
            var $button = this.$element().addClass(DROP_DOWN_MENU_BUTTON_CLASS);
            this._button = this._createComponent($button, _button__WEBPACK_IMPORTED_MODULE_5__["default"], {
              icon: "overflow",
              template: "content",
              useInkRipple: this.option("useInkRipple"),
              hoverStateEnabled: false,
              focusStateEnabled: false,
              onClick: function onClick(e) {
                _this276.option("opened", !_this276.option("opened"));
                _this276._buttonClickAction(e);
              }
            });
          }
        }, {
          key: "_toggleActiveState",
          value: function _toggleActiveState($element, value, e) {
            this._button._toggleActiveState($element, value, e);
          }
        }, {
          key: "_toggleMenuVisibility",
          value: function _toggleMenuVisibility(opened) {
            var state = null !== opened && void 0 !== opened ? opened : !this._popup.option("visible");
            if (opened) {
              this._renderPopup();
            }
            this._popup.toggle(state);
            this.setAria("expanded", state);
          }
        }, {
          key: "_renderPopup",
          value: function _renderPopup() {
            var _this277 = this;
            if (this._$popup) {
              return;
            }
            this._$popup = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").appendTo(this.$element());
            var _this$option6 = this.option(),
              rtlEnabled = _this$option6.rtlEnabled,
              container = _this$option6.container,
              animation = _this$option6.animation;
            this._popup = this._createComponent(this._$popup, "dxPopup", {
              onInitialized: function onInitialized(_ref) {
                var component = _ref.component;
                component.$wrapper().addClass(DROP_DOWN_MENU_POPUP_WRAPPER_CLASS).addClass(DROP_DOWN_MENU_POPUP_CLASS);
              },
              deferRendering: false,
              contentTemplate: function contentTemplate(contentElement) {
                return _this277._renderList(contentElement);
              },
              _ignoreFunctionValueDeprecation: true,
              maxHeight: function maxHeight() {
                return _this277._getMaxHeight();
              },
              position: {
                my: "top ".concat(rtlEnabled ? "left" : "right"),
                at: "bottom ".concat(rtlEnabled ? "left" : "right"),
                collision: "fit flip",
                offset: {
                  v: POPUP_VERTICAL_OFFSET
                },
                of: this.$element()
              },
              animation: animation,
              onOptionChanged: function onOptionChanged(_ref2) {
                var name = _ref2.name,
                  value = _ref2.value;
                if ("visible" === name) {
                  _this277.option("opened", value);
                }
              },
              container: container,
              autoResizeEnabled: false,
              height: "auto",
              width: "auto",
              hideOnOutsideClick: function hideOnOutsideClick(e) {
                return _this277._closeOutsideDropDownHandler(e);
              },
              hideOnParentScroll: true,
              shading: false,
              dragEnabled: false,
              showTitle: false,
              fullScreen: false,
              _fixWrapperPosition: true
            });
          }
        }, {
          key: "_getMaxHeight",
          value: function _getMaxHeight() {
            var $element = this.$element();
            var offsetTop = $element.offset().top;
            var windowHeight = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterHeight)((0, _core_utils_window__WEBPACK_IMPORTED_MODULE_10__.getWindow)());
            var maxHeight = Math.max(offsetTop, windowHeight - offsetTop - (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterHeight)($element));
            return Math.min(windowHeight, maxHeight - POPUP_VERTICAL_OFFSET - POPUP_BOUNDARY_VERTICAL_OFFSET);
          }
        }, {
          key: "_closeOutsideDropDownHandler",
          value: function _closeOutsideDropDownHandler(e) {
            var isOutsideClick = !(0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(e.target).closest(this.$element()).length;
            return isOutsideClick;
          }
        }, {
          key: "_renderList",
          value: function _renderList(contentElement) {
            var _this278 = this;
            var $content = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(contentElement);
            $content.addClass(DROP_DOWN_MENU_LIST_CLASS);
            this._list = this._createComponent($content, _ui_toolbar_menu_list__WEBPACK_IMPORTED_MODULE_6__["default"], {
              dataSource: this._getListDataSource(),
              pageLoadMode: "scrollBottom",
              indicateLoading: false,
              noDataText: "",
              itemTemplate: this.option("itemTemplate"),
              onItemClick: function onItemClick(e) {
                if (_this278.option("closeOnClick")) {
                  _this278.option("opened", false);
                }
                _this278._itemClickAction(e);
              },
              tabIndex: -1,
              focusStateEnabled: false,
              activeStateEnabled: true,
              onItemRendered: this.option("onItemRendered"),
              _areaTarget: this.$element(),
              _itemAttributes: {
                role: "menuitem"
              },
              _listAttributes: {
                role: "button"
              }
            });
          }
        }, {
          key: "_itemOptionChanged",
          value: function _itemOptionChanged(item, property, value) {
            var _this$_list;
            null === (_this$_list = this._list) || void 0 === _this$_list ? void 0 : _this$_list._itemOptionChanged(item, property, value);
            (0, _ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_9__.toggleItemFocusableElementTabIndex)(this._list, item);
          }
        }, {
          key: "_getListDataSource",
          value: function _getListDataSource() {
            var _this$option;
            return null !== (_this$option = this.option("dataSource")) && void 0 !== _this$option ? _this$option : this.option("items");
          }
        }, {
          key: "_setListDataSource",
          value: function _setListDataSource() {
            var _this$_list2;
            null === (_this$_list2 = this._list) || void 0 === _this$_list2 ? void 0 : _this$_list2.option("dataSource", this._getListDataSource());
            delete this._deferRendering;
          }
        }, {
          key: "_getKeyboardListeners",
          value: function _getKeyboardListeners() {
            return _get(_getPrototypeOf(DropDownMenu.prototype), "_getKeyboardListeners", this).call(this).concat([this._list]);
          }
        }, {
          key: "_toggleVisibility",
          value: function _toggleVisibility(visible) {
            _get(_getPrototypeOf(DropDownMenu.prototype), "_toggleVisibility", this).call(this, visible);
            this._button.option("visible", visible);
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(args) {
            var _this$_list3, _this$_list4, _this$_list5;
            var name = args.name,
              value = args.value;
            switch (name) {
              case "items":
              case "dataSource":
                if (!this.option("opened")) {
                  this._deferRendering = true;
                } else {
                  this._setListDataSource();
                }
                break;
              case "itemTemplate":
                null === (_this$_list3 = this._list) || void 0 === _this$_list3 ? void 0 : _this$_list3.option(name, this._getTemplate(value));
                break;
              case "onItemClick":
                this._initItemClickAction();
                break;
              case "onButtonClick":
                this._buttonClickAction();
                break;
              case "useInkRipple":
                this._invalidate();
                break;
              case "focusStateEnabled":
                null === (_this$_list4 = this._list) || void 0 === _this$_list4 ? void 0 : _this$_list4.option(name, value);
                _get(_getPrototypeOf(DropDownMenu.prototype), "_optionChanged", this).call(this, args);
                break;
              case "onItemRendered":
                null === (_this$_list5 = this._list) || void 0 === _this$_list5 ? void 0 : _this$_list5.option(name, value);
                break;
              case "opened":
                if (this._deferRendering) {
                  this._setListDataSource();
                }
                this._toggleMenuVisibility(value);
                this._updateFocusableItemsTabIndex();
                break;
              case "closeOnClick":
                break;
              case "container":
                this._popup && this._popup.option(name, value);
                break;
              case "disabled":
                if (this._list) {
                  this._updateFocusableItemsTabIndex();
                }
                break;
              default:
                _get(_getPrototypeOf(DropDownMenu.prototype), "_optionChanged", this).call(this, args);
            }
          }
        }, {
          key: "_updateFocusableItemsTabIndex",
          value: function _updateFocusableItemsTabIndex() {
            var _this279 = this;
            this.option("items").forEach(function (item) {
              return (0, _ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_9__.toggleItemFocusableElementTabIndex)(_this279._list, item);
            });
          }
        }]);
        return DropDownMenu;
      }(_widget_ui_widget__WEBPACK_IMPORTED_MODULE_4__["default"]);
      /***/
    }),
    /***/96460: (
    /*!*********************************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/toolbar/internal/ui.toolbar.menu.list.js ***!
      \*********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */ToolbarMenuList;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/utils/iterator */14975);
      /* harmony import */
      var _list_ui_list_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../list/ui.list.base */75520);
      /**
       * DevExtreme (esm/ui/toolbar/internal/ui.toolbar.menu.list.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TOOLBAR_MENU_ACTION_CLASS = "dx-toolbar-menu-action";
      var TOOLBAR_HIDDEN_BUTTON_CLASS = "dx-toolbar-hidden-button";
      var TOOLBAR_HIDDEN_BUTTON_GROUP_CLASS = "dx-toolbar-hidden-button-group";
      var TOOLBAR_MENU_SECTION_CLASS = "dx-toolbar-menu-section";
      var TOOLBAR_MENU_CUSTOM_CLASS = "dx-toolbar-menu-custom";
      var TOOLBAR_MENU_LAST_SECTION_CLASS = "dx-toolbar-menu-last-section";
      var SCROLLVIEW_CONTENT_CLASS = "dx-scrollview-content";
      var ToolbarMenuList = /*#__PURE__*/function (_list_ui_list_base__W) {
        _inherits(ToolbarMenuList, _list_ui_list_base__W);
        function ToolbarMenuList() {
          _classCallCheck(this, ToolbarMenuList);
          return _callSuper(this, ToolbarMenuList, arguments);
        }
        _createClass(ToolbarMenuList, [{
          key: "_init",
          value: function _init() {
            _get(_getPrototypeOf(ToolbarMenuList.prototype), "_init", this).call(this);
            this._activeStateUnit = ".".concat(TOOLBAR_MENU_ACTION_CLASS, ":not(.").concat(TOOLBAR_HIDDEN_BUTTON_GROUP_CLASS, ")");
          }
        }, {
          key: "_initMarkup",
          value: function _initMarkup() {
            this._renderSections();
            _get(_getPrototypeOf(ToolbarMenuList.prototype), "_initMarkup", this).call(this);
            this._setMenuRole();
          }
        }, {
          key: "_getSections",
          value: function _getSections() {
            return this._itemContainer().children();
          }
        }, {
          key: "_itemElements",
          value: function _itemElements() {
            return this._getSections().children(this._itemSelector());
          }
        }, {
          key: "_renderSections",
          value: function _renderSections() {
            var _this280 = this;
            var $container = this._itemContainer();
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__.each)(["before", "center", "after", "menu"], function (_, section) {
              var sectionName = "_$".concat(section, "Section");
              if (!_this280[sectionName]) {
                _this280[sectionName] = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").addClass(TOOLBAR_MENU_SECTION_CLASS);
              }
              _this280[sectionName].appendTo($container);
            });
          }
        }, {
          key: "_renderItems",
          value: function _renderItems() {
            _get(_getPrototypeOf(ToolbarMenuList.prototype), "_renderItems", this).apply(this, arguments);
            this._updateSections();
          }
        }, {
          key: "_setMenuRole",
          value: function _setMenuRole() {
            var $menuContainer = this.$element().find(".".concat(SCROLLVIEW_CONTENT_CLASS));
            $menuContainer.attr("role", "menu");
          }
        }, {
          key: "_updateSections",
          value: function _updateSections() {
            var $sections = this.$element().find(".".concat(TOOLBAR_MENU_SECTION_CLASS));
            $sections.removeClass(TOOLBAR_MENU_LAST_SECTION_CLASS);
            $sections.not(":empty").eq(-1).addClass(TOOLBAR_MENU_LAST_SECTION_CLASS);
          }
        }, {
          key: "_renderItem",
          value: function _renderItem(index, item, itemContainer, $after) {
            var _item$location;
            var location = null !== (_item$location = item.location) && void 0 !== _item$location ? _item$location : "menu";
            var $container = this["_$".concat(location, "Section")];
            var itemElement = _get(_getPrototypeOf(ToolbarMenuList.prototype), "_renderItem", this).call(this, index, item, $container, $after);
            if (this._getItemTemplateName({
              itemData: item
            })) {
              itemElement.addClass(TOOLBAR_MENU_CUSTOM_CLASS);
            }
            if ("menu" === location || "dxButton" === item.widget || "dxButtonGroup" === item.widget || item.isAction) {
              itemElement.addClass(TOOLBAR_MENU_ACTION_CLASS);
            }
            if ("dxButton" === item.widget) {
              itemElement.addClass(TOOLBAR_HIDDEN_BUTTON_CLASS);
            }
            if ("dxButtonGroup" === item.widget) {
              itemElement.addClass(TOOLBAR_HIDDEN_BUTTON_GROUP_CLASS);
            }
            itemElement.addClass(item.cssClass);
            return itemElement;
          }
        }, {
          key: "_getItemTemplateName",
          value: function _getItemTemplateName(args) {
            var template = _get(_getPrototypeOf(ToolbarMenuList.prototype), "_getItemTemplateName", this).call(this, args);
            var data = args.itemData;
            var menuTemplate = data && data.menuItemTemplate;
            return menuTemplate || template;
          }
        }, {
          key: "_dataSourceOptions",
          value: function _dataSourceOptions() {
            return {
              paginate: false
            };
          }
        }, {
          key: "_itemClickHandler",
          value: function _itemClickHandler(e, args, config) {
            if ((0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(e.target).closest(".".concat(TOOLBAR_MENU_ACTION_CLASS)).length) {
              _get(_getPrototypeOf(ToolbarMenuList.prototype), "_itemClickHandler", this).call(this, e, args, config);
            }
          }
        }, {
          key: "_getAriaTarget",
          value: function _getAriaTarget() {
            var _this$option;
            return null !== (_this$option = this.option("_areaTarget")) && void 0 !== _this$option ? _this$option : _get(_getPrototypeOf(ToolbarMenuList.prototype), "_getAriaTarget", this).call(this);
          }
        }, {
          key: "_clean",
          value: function _clean() {
            this._getSections().empty();
            _get(_getPrototypeOf(ToolbarMenuList.prototype), "_clean", this).call(this);
          }
        }]);
        return ToolbarMenuList;
      }(_list_ui_list_base__WEBPACK_IMPORTED_MODULE_2__.ListBase);
      /***/
    }),
    /***/29322: (
    /*!******************************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/toolbar/strategy/toolbar.multiline.js ***!
      \******************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"MultiLineStrategy": function MultiLineStrategy() {
          return /* binding */_MultiLineStrategy;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /**
       * DevExtreme (esm/ui/toolbar/strategy/toolbar.multiline.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TOOLBAR_LABEL_CLASS = "dx-toolbar-label";
      var _MultiLineStrategy = /*#__PURE__*/function () {
        function _MultiLineStrategy(toolbar) {
          _classCallCheck(this, _MultiLineStrategy);
          this._toolbar = toolbar;
        }
        _createClass(_MultiLineStrategy, [{
          key: "_initMarkup",
          value: function _initMarkup() {}
        }, {
          key: "_updateMenuVisibility",
          value: function _updateMenuVisibility() {}
        }, {
          key: "_renderMenuItems",
          value: function _renderMenuItems() {}
        }, {
          key: "_renderItem",
          value: function _renderItem() {}
        }, {
          key: "_getMenuItems",
          value: function _getMenuItems() {}
        }, {
          key: "_getToolbarItems",
          value: function _getToolbarItems() {
            var _this$_toolbar$option;
            return null !== (_this$_toolbar$option = this._toolbar.option("items")) && void 0 !== _this$_toolbar$option ? _this$_toolbar$option : [];
          }
        }, {
          key: "_getItemsWidth",
          value: function _getItemsWidth() {
            return this._toolbar._getSummaryItemsWidth(this._toolbar.itemElements(), true);
          }
        }, {
          key: "_arrangeItems",
          value: function _arrangeItems() {
            var $label = this._toolbar._$toolbarItemsContainer.find(".".concat(TOOLBAR_LABEL_CLASS)).eq(0);
            if (!$label.length) {
              return;
            }
            var elementWidth = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this._toolbar.$element());
            var labelPaddings = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getOuterWidth)($label) - (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)($label);
            $label.css("maxWidth", elementWidth - labelPaddings);
          }
        }, {
          key: "_hideOverflowItems",
          value: function _hideOverflowItems() {}
        }, {
          key: "_dimensionChanged",
          value: function _dimensionChanged() {}
        }, {
          key: "_itemOptionChanged",
          value: function _itemOptionChanged() {}
        }, {
          key: "_optionChanged",
          value: function _optionChanged() {}
        }]);
        return _MultiLineStrategy;
      }();
      /***/
    }),
    /***/11178: (
    /*!*******************************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/toolbar/strategy/toolbar.singleline.js ***!
      \*******************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"SingleLineStrategy": function SingleLineStrategy() {
          return /* binding */_SingleLineStrategy;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../core/utils/size */84167);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../../core/renderer */84529);
      /* harmony import */
      var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../../core/utils/iterator */14975);
      /* harmony import */
      var _core_utils_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../../core/utils/common */37552);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../core/utils/extend */59253);
      /* harmony import */
      var _internal_ui_toolbar_menu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../internal/ui.toolbar.menu */4025);
      /* harmony import */
      var _core_utils_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../../../core/utils/data */25670);
      /**
       * DevExtreme (esm/ui/toolbar/strategy/toolbar.singleline.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var INVISIBLE_STATE_CLASS = "dx-state-invisible";
      var TOOLBAR_DROP_DOWN_MENU_CONTAINER_CLASS = "dx-toolbar-menu-container";
      var TOOLBAR_BUTTON_CLASS = "dx-toolbar-button";
      var TOOLBAR_AUTO_HIDE_ITEM_CLASS = "dx-toolbar-item-auto-hide";
      var TOOLBAR_HIDDEN_ITEM = "dx-toolbar-item-invisible";
      var _SingleLineStrategy = /*#__PURE__*/function () {
        function _SingleLineStrategy(toolbar) {
          _classCallCheck(this, _SingleLineStrategy);
          this._toolbar = toolbar;
        }
        _createClass(_SingleLineStrategy, [{
          key: "_initMarkup",
          value: function _initMarkup() {
            var _this281 = this;
            (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.deferRender)(function () {
              _this281._renderOverflowMenu();
              _this281._renderMenuItems();
            });
          }
        }, {
          key: "_renderOverflowMenu",
          value: function _renderOverflowMenu() {
            var _this282 = this;
            if (!this._hasVisibleMenuItems()) {
              return;
            }
            this._renderMenuButtonContainer();
            var $menu = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").appendTo(this._overflowMenuContainer());
            var itemClickAction = this._toolbar._createActionByOption("onItemClick");
            var menuItemTemplate = this._toolbar._getTemplateByOption("menuItemTemplate");
            this._menu = this._toolbar._createComponent($menu, _internal_ui_toolbar_menu__WEBPACK_IMPORTED_MODULE_5__["default"], {
              disabled: this._toolbar.option("disabled"),
              itemTemplate: function itemTemplate() {
                return menuItemTemplate;
              },
              onItemClick: function onItemClick(e) {
                itemClickAction(e);
              },
              container: this._toolbar.option("menuContainer"),
              onOptionChanged: function onOptionChanged(_ref) {
                var name = _ref.name,
                  value = _ref.value;
                if ("opened" === name) {
                  _this282._toolbar.option("overflowMenuVisible", value);
                }
                if ("items" === name) {
                  _this282._updateMenuVisibility(value);
                }
              }
            });
          }
        }, {
          key: "renderMenuItems",
          value: function renderMenuItems() {
            if (!this._menu) {
              this._renderOverflowMenu();
            }
            this._menu && this._menu.option("items", this._getMenuItems());
            if (this._menu && !this._menu.option("items").length) {
              this._menu.option("opened", false);
            }
          }
        }, {
          key: "_renderMenuButtonContainer",
          value: function _renderMenuButtonContainer() {
            this._$overflowMenuContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").appendTo(this._toolbar._$afterSection).addClass(TOOLBAR_BUTTON_CLASS).addClass(TOOLBAR_DROP_DOWN_MENU_CONTAINER_CLASS);
          }
        }, {
          key: "_overflowMenuContainer",
          value: function _overflowMenuContainer() {
            return this._$overflowMenuContainer;
          }
        }, {
          key: "_updateMenuVisibility",
          value: function _updateMenuVisibility(menuItems) {
            var items = null !== menuItems && void 0 !== menuItems ? menuItems : this._getMenuItems();
            var isMenuVisible = items.length && this._hasVisibleMenuItems(items);
            this._toggleMenuVisibility(isMenuVisible);
          }
        }, {
          key: "_toggleMenuVisibility",
          value: function _toggleMenuVisibility(value) {
            if (!this._overflowMenuContainer()) {
              return;
            }
            this._overflowMenuContainer().toggleClass(INVISIBLE_STATE_CLASS, !value);
          }
        }, {
          key: "_renderMenuItems",
          value: function _renderMenuItems() {
            var _this283 = this;
            (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.deferRender)(function () {
              _this283.renderMenuItems();
            });
          }
        }, {
          key: "_dimensionChanged",
          value: function _dimensionChanged() {
            this.renderMenuItems();
          }
        }, {
          key: "_getToolbarItems",
          value: function _getToolbarItems() {
            var _this284 = this;
            var _this$_toolbar$option;
            return (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.grep)(null !== (_this$_toolbar$option = this._toolbar.option("items")) && void 0 !== _this$_toolbar$option ? _this$_toolbar$option : [], function (item) {
              return !_this284._toolbar._isMenuItem(item);
            });
          }
        }, {
          key: "_getHiddenItems",
          value: function _getHiddenItems() {
            return this._toolbar._itemContainer().children(".".concat(TOOLBAR_AUTO_HIDE_ITEM_CLASS, ".").concat(TOOLBAR_HIDDEN_ITEM)).not(".".concat(INVISIBLE_STATE_CLASS));
          }
        }, {
          key: "_getMenuItems",
          value: function _getMenuItems() {
            var _this285 = this;
            var _this$_toolbar$option2, _this$_restoreItems;
            var menuItems = (0, _core_utils_common__WEBPACK_IMPORTED_MODULE_3__.grep)(null !== (_this$_toolbar$option2 = this._toolbar.option("items")) && void 0 !== _this$_toolbar$option2 ? _this$_toolbar$option2 : [], function (item) {
              return _this285._toolbar._isMenuItem(item);
            });
            var $hiddenItems = this._getHiddenItems();
            this._restoreItems = null !== (_this$_restoreItems = this._restoreItems) && void 0 !== _this$_restoreItems ? _this$_restoreItems : [];
            var overflowItems = [].slice.call($hiddenItems).map(function (hiddenItem) {
              var itemData = _this285._toolbar._getItemData(hiddenItem);
              var $itemContainer = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(hiddenItem);
              var $itemMarkup = $itemContainer.children();
              return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__.extend)({
                menuItemTemplate: function menuItemTemplate() {
                  _this285._restoreItems.push({
                    container: $itemContainer,
                    item: $itemMarkup
                  });
                  var $container = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])("<div>").addClass(TOOLBAR_AUTO_HIDE_ITEM_CLASS);
                  return $container.append($itemMarkup);
                }
              }, itemData);
            });
            return [].concat(_toConsumableArray(overflowItems), _toConsumableArray(menuItems));
          }
        }, {
          key: "_hasVisibleMenuItems",
          value: function _hasVisibleMenuItems(items) {
            var menuItems = null !== items && void 0 !== items ? items : this._toolbar.option("items");
            var result = false;
            var optionGetter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_6__.compileGetter)("visible");
            var overflowGetter = (0, _core_utils_data__WEBPACK_IMPORTED_MODULE_6__.compileGetter)("locateInMenu");
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__.each)(menuItems, function (index, item) {
              var itemVisible = optionGetter(item, {
                functionsAsIs: true
              });
              var itemOverflow = overflowGetter(item, {
                functionsAsIs: true
              });
              if (false !== itemVisible && ("auto" === itemOverflow || "always" === itemOverflow) || "menu" === item.location) {
                result = true;
              }
            });
            return result;
          }
        }, {
          key: "_arrangeItems",
          value: function _arrangeItems() {
            var _this$_restoreItems2;
            this._toolbar._$centerSection.css({
              margin: "0 auto",
              "float": "none"
            });
            (0, _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__.each)(null !== (_this$_restoreItems2 = this._restoreItems) && void 0 !== _this$_restoreItems2 ? _this$_restoreItems2 : [], function (_, obj) {
              (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(obj.container).append(obj.item);
            });
            this._restoreItems = [];
            var elementWidth = (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this._toolbar.$element());
            this._hideOverflowItems(elementWidth);
            return elementWidth;
          }
        }, {
          key: "_hideOverflowItems",
          value: function _hideOverflowItems(elementWidth) {
            var _elementWidth;
            var overflowItems = this._toolbar.$element().find(".".concat(TOOLBAR_AUTO_HIDE_ITEM_CLASS));
            if (!overflowItems.length) {
              return;
            }
            elementWidth = null !== (_elementWidth = elementWidth) && void 0 !== _elementWidth ? _elementWidth : (0, _core_utils_size__WEBPACK_IMPORTED_MODULE_0__.getWidth)(this._toolbar.$element());
            (0, _core_renderer__WEBPACK_IMPORTED_MODULE_1__["default"])(overflowItems).removeClass(TOOLBAR_HIDDEN_ITEM);
            var itemsWidth = this._getItemsWidth();
            while (overflowItems.length && elementWidth < itemsWidth) {
              var $item = overflowItems.eq(-1);
              $item.addClass(TOOLBAR_HIDDEN_ITEM);
              itemsWidth = this._getItemsWidth();
              overflowItems.splice(-1, 1);
            }
          }
        }, {
          key: "_getItemsWidth",
          value: function _getItemsWidth() {
            return this._toolbar._getSummaryItemsWidth([this._toolbar._$beforeSection, this._toolbar._$centerSection, this._toolbar._$afterSection]);
          }
        }, {
          key: "_itemOptionChanged",
          value: function _itemOptionChanged(item, property, value) {
            if ("disabled" === property || "options.disabled" === property) {
              if (this._toolbar._isMenuItem(item)) {
                var _this$_menu;
                null === (_this$_menu = this._menu) || void 0 === _this$_menu ? void 0 : _this$_menu._itemOptionChanged(item, property, value);
                return;
              }
            }
            this.renderMenuItems();
          }
        }, {
          key: "_renderItem",
          value: function _renderItem(item, itemElement) {
            if ("auto" === item.locateInMenu) {
              itemElement.addClass(TOOLBAR_AUTO_HIDE_ITEM_CLASS);
            }
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(name, value) {
            var _this$_menu2, _this$_menu3, _this$_menu4, _this$_menu5, _this$_menu6;
            switch (name) {
              case "disabled":
                null === (_this$_menu2 = this._menu) || void 0 === _this$_menu2 ? void 0 : _this$_menu2.option(name, value);
                break;
              case "overflowMenuVisible":
                null === (_this$_menu3 = this._menu) || void 0 === _this$_menu3 ? void 0 : _this$_menu3.option("opened", value);
                break;
              case "onItemClick":
                null === (_this$_menu4 = this._menu) || void 0 === _this$_menu4 ? void 0 : _this$_menu4.option(name, value);
                break;
              case "menuContainer":
                null === (_this$_menu5 = this._menu) || void 0 === _this$_menu5 ? void 0 : _this$_menu5.option("container", value);
                break;
              case "menuItemTemplate":
                null === (_this$_menu6 = this._menu) || void 0 === _this$_menu6 ? void 0 : _this$_menu6.option("itemTemplate", value);
            }
          }
        }]);
        return _SingleLineStrategy;
      }();
      /***/
    }),
    /***/63739: (
    /*!**************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/toolbar/ui.toolbar.js ***!
      \**************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/component_registrator */2382);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _ui_toolbar_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./ui.toolbar.base */9835);
      /* harmony import */
      var _ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./ui.toolbar.utils */49636);
      /* harmony import */
      var _strategy_toolbar_multiline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./strategy/toolbar.multiline */29322);
      /* harmony import */
      var _strategy_toolbar_singleline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./strategy/toolbar.singleline */11178);
      /**
       * DevExtreme (esm/ui/toolbar/ui.toolbar.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TOOLBAR_MULTILINE_CLASS = "dx-toolbar-multiline";
      var TOOLBAR_AUTO_HIDE_TEXT_CLASS = "dx-toolbar-text-auto-hide";
      var Toolbar = /*#__PURE__*/function (_ui_toolbar_base__WEB) {
        _inherits(Toolbar, _ui_toolbar_base__WEB);
        function Toolbar() {
          _classCallCheck(this, Toolbar);
          return _callSuper(this, Toolbar, arguments);
        }
        _createClass(Toolbar, [{
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__.extend)(_get(_getPrototypeOf(Toolbar.prototype), "_getDefaultOptions", this).call(this), {
              menuItemTemplate: "menuItem",
              menuContainer: void 0,
              overflowMenuVisible: false,
              multiline: false
            });
          }
        }, {
          key: "_isMultiline",
          value: function _isMultiline() {
            return this.option("multiline");
          }
        }, {
          key: "_dimensionChanged",
          value: function _dimensionChanged(dimension) {
            if ("height" === dimension) {
              return;
            }
            _get(_getPrototypeOf(Toolbar.prototype), "_dimensionChanged", this).call(this);
            this._layoutStrategy._dimensionChanged();
          }
        }, {
          key: "_initMarkup",
          value: function _initMarkup() {
            _get(_getPrototypeOf(Toolbar.prototype), "_initMarkup", this).call(this);
            this._updateFocusableItemsTabIndex();
            this._layoutStrategy._initMarkup();
          }
        }, {
          key: "_renderToolbar",
          value: function _renderToolbar() {
            _get(_getPrototypeOf(Toolbar.prototype), "_renderToolbar", this).call(this);
            this._renderLayoutStrategy();
          }
        }, {
          key: "_itemContainer",
          value: function _itemContainer() {
            if (this._isMultiline()) {
              return this._$toolbarItemsContainer;
            }
            return _get(_getPrototypeOf(Toolbar.prototype), "_itemContainer", this).call(this);
          }
        }, {
          key: "_renderLayoutStrategy",
          value: function _renderLayoutStrategy() {
            this.$element().toggleClass(TOOLBAR_MULTILINE_CLASS, this._isMultiline());
            this._layoutStrategy = this._isMultiline() ? new _strategy_toolbar_multiline__WEBPACK_IMPORTED_MODULE_4__.MultiLineStrategy(this) : new _strategy_toolbar_singleline__WEBPACK_IMPORTED_MODULE_5__.SingleLineStrategy(this);
          }
        }, {
          key: "_renderSections",
          value: function _renderSections() {
            if (this._isMultiline()) {
              return;
            }
            return _get(_getPrototypeOf(Toolbar.prototype), "_renderSections", this).call(this);
          }
        }, {
          key: "_postProcessRenderItems",
          value: function _postProcessRenderItems() {
            this._layoutStrategy._hideOverflowItems();
            this._layoutStrategy._updateMenuVisibility();
            _get(_getPrototypeOf(Toolbar.prototype), "_postProcessRenderItems", this).call(this);
            this._layoutStrategy._renderMenuItems();
          }
        }, {
          key: "_renderItem",
          value: function _renderItem(index, item, itemContainer, $after) {
            var itemElement = _get(_getPrototypeOf(Toolbar.prototype), "_renderItem", this).call(this, index, item, itemContainer, $after);
            this._layoutStrategy._renderItem(item, itemElement);
            var widget = item.widget,
              showText = item.showText;
            if ("dxButton" === widget && "inMenu" === showText) {
              itemElement.toggleClass(TOOLBAR_AUTO_HIDE_TEXT_CLASS);
            }
            return itemElement;
          }
        }, {
          key: "_getItemsWidth",
          value: function _getItemsWidth() {
            return this._layoutStrategy._getItemsWidth();
          }
        }, {
          key: "_getMenuItems",
          value: function _getMenuItems() {
            return this._layoutStrategy._getMenuItems();
          }
        }, {
          key: "_getToolbarItems",
          value: function _getToolbarItems() {
            return this._layoutStrategy._getToolbarItems();
          }
        }, {
          key: "_arrangeItems",
          value: function _arrangeItems() {
            if (this.$element().is(":hidden")) {
              return;
            }
            var elementWidth = this._layoutStrategy._arrangeItems();
            if (!this._isMultiline()) {
              _get(_getPrototypeOf(Toolbar.prototype), "_arrangeItems", this).call(this, elementWidth);
            }
          }
        }, {
          key: "_itemOptionChanged",
          value: function _itemOptionChanged(item, property, value) {
            if (!this._isMenuItem(item)) {
              _get(_getPrototypeOf(Toolbar.prototype), "_itemOptionChanged", this).call(this, item, property, value);
            }
            this._layoutStrategy._itemOptionChanged(item, property, value);
            if ("disabled" === property || "options.disabled" === property) {
              (0, _ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_3__.toggleItemFocusableElementTabIndex)(this, item);
            }
            if ("location" === property) {
              this.repaint();
            }
          }
        }, {
          key: "_updateFocusableItemsTabIndex",
          value: function _updateFocusableItemsTabIndex() {
            var _this286 = this;
            this._getToolbarItems().forEach(function (item) {
              return (0, _ui_toolbar_utils__WEBPACK_IMPORTED_MODULE_3__.toggleItemFocusableElementTabIndex)(_this286, item);
            });
          }
        }, {
          key: "_isMenuItem",
          value: function _isMenuItem(itemData) {
            return "menu" === itemData.location || "always" === itemData.locateInMenu;
          }
        }, {
          key: "_isToolbarItem",
          value: function _isToolbarItem(itemData) {
            return void 0 === itemData.location || "never" === itemData.locateInMenu;
          }
        }, {
          key: "_optionChanged",
          value: function _optionChanged(_ref) {
            var name = _ref.name,
              value = _ref.value;
            this._layoutStrategy._optionChanged(name, value);
            switch (name) {
              case "menuContainer":
              case "menuItemTemplate":
              case "overflowMenuVisible":
                break;
              case "multiline":
                this._invalidate();
                break;
              case "disabled":
                _get(_getPrototypeOf(Toolbar.prototype), "_optionChanged", this).apply(this, arguments);
                this._updateFocusableItemsTabIndex();
                break;
              default:
                _get(_getPrototypeOf(Toolbar.prototype), "_optionChanged", this).apply(this, arguments);
            }
          }
        }, {
          key: "updateDimensions",
          value: function updateDimensions() {
            this._dimensionChanged();
          }
        }]);
        return Toolbar;
      }(_ui_toolbar_base__WEBPACK_IMPORTED_MODULE_2__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_0__["default"])("dxToolbar", Toolbar);
      /* harmony default export */
      __webpack_exports__["default"] = Toolbar;

      /***/
    }),
    /***/49636: (
    /*!********************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/toolbar/ui.toolbar.utils.js ***!
      \********************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"toggleItemFocusableElementTabIndex": function toggleItemFocusableElementTabIndex() {
          return /* binding */_toggleItemFocusableElementTabIndex;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/renderer */84529);
      /**
       * DevExtreme (esm/ui/toolbar/ui.toolbar.utils.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var BUTTON_GROUP_CLASS = "dx-buttongroup";
      var TOOLBAR_ITEMS = ["dxAutocomplete", "dxButton", "dxCheckBox", "dxDateBox", "dxMenu", "dxSelectBox", "dxTabs", "dxTextBox", "dxButtonGroup", "dxDropDownButton"];
      var getItemInstance = function getItemInstance($element) {
        var itemData = $element.data && $element.data();
        var dxComponents = itemData && itemData.dxComponents;
        var widgetName = dxComponents && dxComponents[0];
        return widgetName && itemData[widgetName];
      };
      function _toggleItemFocusableElementTabIndex(context, item) {
        var _itemData$options;
        if (!context) {
          return;
        }
        var $item = context._findItemElementByItem(item);
        if (!$item.length) {
          return;
        }
        var itemData = context._getItemData($item);
        var isItemNotFocusable = !!(null !== (_itemData$options = itemData.options) && void 0 !== _itemData$options && _itemData$options.disabled || itemData.disabled || context.option("disabled"));
        var widget = itemData.widget;
        if (widget && -1 !== TOOLBAR_ITEMS.indexOf(widget)) {
          var $widget = $item.find(widget.toLowerCase().replace("dx", ".dx-"));
          if ($widget.length) {
            var _itemInstance$_focusT, _itemData$options2;
            var itemInstance = getItemInstance($widget);
            if (!itemInstance) {
              return;
            }
            var $focusTarget = null === (_itemInstance$_focusT = itemInstance._focusTarget) || void 0 === _itemInstance$_focusT ? void 0 : _itemInstance$_focusT.call(itemInstance);
            if ("dxDropDownButton" === widget) {
              $focusTarget = $focusTarget && $focusTarget.find(".".concat(BUTTON_GROUP_CLASS));
            } else {
              var _$focusTarget;
              $focusTarget = null !== (_$focusTarget = $focusTarget) && void 0 !== _$focusTarget ? _$focusTarget : (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(itemInstance.element());
            }
            var tabIndex = null === (_itemData$options2 = itemData.options) || void 0 === _itemData$options2 ? void 0 : _itemData$options2.tabIndex;
            if (isItemNotFocusable) {
              $focusTarget.attr("tabIndex", -1);
            } else {
              $focusTarget.attr("tabIndex", null !== tabIndex && void 0 !== tabIndex ? tabIndex : 0);
            }
          }
        }
      }

      /***/
    }),
    /***/78553: (
    /*!***************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/tooltip.js ***!
      \***************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _tooltip_tooltip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./tooltip/tooltip */48915);
      /**
       * DevExtreme (esm/ui/tooltip.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      /* harmony default export */
      __webpack_exports__["default"] = _tooltip_tooltip__WEBPACK_IMPORTED_MODULE_0__["default"];

      /***/
    }),
    /***/48915: (
    /*!***********************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/tooltip/tooltip.js ***!
      \***********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _core_guid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../../core/guid */22203);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/component_registrator */2382);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _popover_ui_popover__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../popover/ui.popover */23679);
      /* harmony import */
      var _core_utils_type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../../core/utils/type */33275);
      /**
       * DevExtreme (esm/ui/tooltip/tooltip.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var TOOLTIP_CLASS = "dx-tooltip";
      var TOOLTIP_WRAPPER_CLASS = "dx-tooltip-wrapper";
      var Tooltip = _popover_ui_popover__WEBPACK_IMPORTED_MODULE_4__["default"].inherit({
        _getDefaultOptions: function _getDefaultOptions() {
          return (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__.extend)(this.callBase(), {
            toolbarItems: [],
            showCloseButton: false,
            showTitle: false,
            title: null,
            titleTemplate: null,
            onTitleRendered: null,
            bottomTemplate: null,
            propagateOutsideClick: true
          });
        },
        _render: function _render() {
          this.$element().addClass(TOOLTIP_CLASS);
          this.$wrapper().addClass(TOOLTIP_WRAPPER_CLASS);
          this.callBase();
        },
        _renderContent: function _renderContent() {
          this.callBase();
          this._contentId = "dx-" + new _core_guid__WEBPACK_IMPORTED_MODULE_1__["default"]();
          this.$overlayContent().attr({
            id: this._contentId,
            role: "tooltip"
          });
          this._toggleAriaDescription(true);
        },
        _toggleAriaDescription: function _toggleAriaDescription(showing) {
          var $target = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(this.option("target"));
          var label = showing ? this._contentId : void 0;
          if (!(0, _core_utils_type__WEBPACK_IMPORTED_MODULE_5__.isWindow)($target.get(0))) {
            this.setAria("describedby", label, $target);
          }
        }
      });
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_2__["default"])("dxTooltip", Tooltip);
      /* harmony default export */
      __webpack_exports__["default"] = Tooltip;

      /***/
    }),
    /***/75934: (
    /*!**************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/tooltip/ui.tooltip.js ***!
      \**************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"show": function show() {
          return /* binding */_show2;
        },
        /* harmony export */"hide": function hide() {
          return /* binding */_hide2;
        }
        /* harmony export */
      });
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../core/renderer */84529);
      /* harmony import */
      var _tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./tooltip */48915);
      /* harmony import */
      var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../../core/utils/extend */59253);
      /* harmony import */
      var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../../core/utils/deferred */97233);
      /* harmony import */
      var _core_utils_view_port__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../core/utils/view_port */30228);
      /**
       * DevExtreme (esm/ui/tooltip/ui.tooltip.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var tooltip = null;
      var removeTooltipElement = null;
      var createTooltip = function createTooltip(options) {
        options = (0, _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__.extend)({
          position: "top"
        }, options);
        var content = options.content;
        delete options.content;
        var $tooltip = (0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])("<div>").html(content).appendTo((0, _core_utils_view_port__WEBPACK_IMPORTED_MODULE_4__.value)());
        removeTooltipElement = function removeTooltipElement() {
          $tooltip.remove();
        };
        tooltip = new _tooltip__WEBPACK_IMPORTED_MODULE_1__["default"]($tooltip, options);
      };
      var removeTooltip = function removeTooltip() {
        if (!tooltip) {
          return;
        }
        removeTooltipElement();
        tooltip = null;
      };
      function _show2(options) {
        removeTooltip();
        createTooltip(options);
        return tooltip.show();
      }
      function _hide2() {
        if (!tooltip) {
          return new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_3__.Deferred().resolve();
        }
        return tooltip.hide().done(removeTooltip).promise();
      }

      /***/
    }),
    /***/40058: (
    /*!************************************************************!*\
      !*** ./node_modules/devextreme/esm/ui/validation_group.js ***!
      \************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _core_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../core/renderer */84529);
      /* harmony import */
      var _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../core/component_registrator */2382);
      /* harmony import */
      var _core_dom_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../core/dom_component */530);
      /* harmony import */
      var _validation_summary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./validation_summary */85575);
      /* harmony import */
      var _validation_engine__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./validation_engine */83092);
      /* harmony import */
      var _validator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./validator */90015);
      /**
       * DevExtreme (esm/ui/validation_group.js)
       * Version: 22.2.11
       * Build date: Fri Feb 09 2024
       *
       * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
       * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
       */

      var VALIDATION_ENGINE_CLASS = "dx-validationgroup";
      var VALIDATOR_CLASS = "dx-validator";
      var VALIDATION_SUMMARY_CLASS = "dx-validationsummary";
      var ValidationGroup = /*#__PURE__*/function (_core_dom_component__2) {
        _inherits(ValidationGroup, _core_dom_component__2);
        function ValidationGroup() {
          _classCallCheck(this, ValidationGroup);
          return _callSuper(this, ValidationGroup, arguments);
        }
        _createClass(ValidationGroup, [{
          key: "_getDefaultOptions",
          value: function _getDefaultOptions() {
            return _get(_getPrototypeOf(ValidationGroup.prototype), "_getDefaultOptions", this).call(this);
          }
        }, {
          key: "_init",
          value: function _init() {
            _get(_getPrototypeOf(ValidationGroup.prototype), "_init", this).call(this);
            _validation_engine__WEBPACK_IMPORTED_MODULE_4__["default"].addGroup(this);
          }
        }, {
          key: "_initMarkup",
          value: function _initMarkup() {
            var $element = this.$element();
            $element.addClass(VALIDATION_ENGINE_CLASS);
            $element.find(".".concat(VALIDATOR_CLASS)).each(function (_, validatorContainer) {
              _validator__WEBPACK_IMPORTED_MODULE_5__["default"].getInstance((0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(validatorContainer))._initGroupRegistration();
            });
            $element.find(".".concat(VALIDATION_SUMMARY_CLASS)).each(function (_, summaryContainer) {
              _validation_summary__WEBPACK_IMPORTED_MODULE_3__["default"].getInstance((0, _core_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(summaryContainer)).refreshValidationGroup();
            });
            _get(_getPrototypeOf(ValidationGroup.prototype), "_initMarkup", this).call(this);
          }
        }, {
          key: "validate",
          value: function validate() {
            return _validation_engine__WEBPACK_IMPORTED_MODULE_4__["default"].validateGroup(this);
          }
        }, {
          key: "reset",
          value: function reset() {
            return _validation_engine__WEBPACK_IMPORTED_MODULE_4__["default"].resetGroup(this);
          }
        }, {
          key: "_dispose",
          value: function _dispose() {
            _validation_engine__WEBPACK_IMPORTED_MODULE_4__["default"].removeGroup(this);
            this.$element().removeClass(VALIDATION_ENGINE_CLASS);
            _get(_getPrototypeOf(ValidationGroup.prototype), "_dispose", this).call(this);
          }
        }, {
          key: "_useTemplates",
          value: function _useTemplates() {
            return false;
          }
        }]);
        return ValidationGroup;
      }(_core_dom_component__WEBPACK_IMPORTED_MODULE_2__["default"]);
      (0, _core_component_registrator__WEBPACK_IMPORTED_MODULE_1__["default"])("dxValidationGroup", ValidationGroup);
      /* harmony default export */
      __webpack_exports__["default"] = ValidationGroup;

      /***/
    }),
    /***/82450: (
    /*!**********************************************!*\
      !*** ./node_modules/rrule/dist/esm/cache.js ***!
      \**********************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Cache": function Cache() {
          return /* binding */_Cache2;
        }
        /* harmony export */
      });
      /* harmony import */
      var _iterresult__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./iterresult */8210);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./dateutil */98054);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./helpers */36853);
      function argsMatch(left, right) {
        if (Array.isArray(left)) {
          if (!Array.isArray(right)) return false;
          if (left.length !== right.length) return false;
          return left.every(function (date, i) {
            return date.getTime() === right[i].getTime();
          });
        }
        if (left instanceof Date) {
          return right instanceof Date && left.getTime() === right.getTime();
        }
        return left === right;
      }
      var _Cache2 = /** @class */function () {
        function Cache() {
          this.all = false;
          this.before = [];
          this.after = [];
          this.between = [];
        }
        /**
         * @param {String} what - all/before/after/between
         * @param {Array,Date} value - an array of dates, one date, or null
         * @param {Object?} args - _iter arguments
         */
        Cache.prototype._cacheAdd = function (what, value, args) {
          if (value) {
            value = value instanceof Date ? (0, _dateutil__WEBPACK_IMPORTED_MODULE_1__.clone)(value) : (0, _dateutil__WEBPACK_IMPORTED_MODULE_1__.cloneDates)(value);
          }
          if (what === 'all') {
            this.all = value;
          } else {
            args._value = value;
            this[what].push(args);
          }
        };
        /**
         * @return false - not in the cache
         * @return null  - cached, but zero occurrences (before/after)
         * @return Date  - cached (before/after)
         * @return []    - cached, but zero occurrences (all/between)
         * @return [Date1, DateN] - cached (all/between)
         */
        Cache.prototype._cacheGet = function (what, args) {
          var cached = false;
          var argsKeys = args ? Object.keys(args) : [];
          var findCacheDiff = function findCacheDiff(item) {
            for (var i = 0; i < argsKeys.length; i++) {
              var key = argsKeys[i];
              if (!argsMatch(args[key], item[key])) {
                return true;
              }
            }
            return false;
          };
          var cachedObject = this[what];
          if (what === 'all') {
            cached = this.all;
          } else if ((0, _helpers__WEBPACK_IMPORTED_MODULE_2__.isArray)(cachedObject)) {
            // Let's see whether we've already called the
            // 'what' method with the same 'args'
            for (var i = 0; i < cachedObject.length; i++) {
              var item = cachedObject[i];
              if (argsKeys.length && findCacheDiff(item)) continue;
              cached = item._value;
              break;
            }
          }
          if (!cached && this.all) {
            // Not in the cache, but we already know all the occurrences,
            // so we can find the correct dates from the cached ones.
            var iterResult = new _iterresult__WEBPACK_IMPORTED_MODULE_0__["default"](what, args);
            for (var i = 0; i < this.all.length; i++) {
              if (!iterResult.accept(this.all[i])) break;
            }
            cached = iterResult.getValue();
            this._cacheAdd(what, cached, args);
          }
          return (0, _helpers__WEBPACK_IMPORTED_MODULE_2__.isArray)(cached) ? (0, _dateutil__WEBPACK_IMPORTED_MODULE_1__.cloneDates)(cached) : cached instanceof Date ? (0, _dateutil__WEBPACK_IMPORTED_MODULE_1__.clone)(cached) : cached;
        };
        return Cache;
      }();

      /***/
    }),
    /***/72673: (
    /*!***********************************************************!*\
      !*** ./node_modules/rrule/dist/esm/callbackiterresult.js ***!
      \***********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! tslib */42321);
      /* harmony import */
      var _iterresult__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./iterresult */8210);

      /**
       * IterResult subclass that calls a callback function on each add,
       * and stops iterating when the callback returns false.
       */
      var CallbackIterResult = /** @class */function (_super) {
        (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(CallbackIterResult, _super);
        function CallbackIterResult(method, args, iterator) {
          var _this = _super.call(this, method, args) || this;
          _this.iterator = iterator;
          return _this;
        }
        CallbackIterResult.prototype.add = function (date) {
          if (this.iterator(date, this._result.length)) {
            this._result.push(date);
            return true;
          }
          return false;
        };
        return CallbackIterResult;
      }(_iterresult__WEBPACK_IMPORTED_MODULE_0__["default"]);
      /* harmony default export */
      __webpack_exports__["default"] = CallbackIterResult;

      /***/
    }),
    /***/42236: (
    /*!*************************************************!*\
      !*** ./node_modules/rrule/dist/esm/datetime.js ***!
      \*************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Time": function Time() {
          return /* binding */_Time;
        },
        /* harmony export */"DateTime": function DateTime() {
          return /* binding */_DateTime;
        }
        /* harmony export */
      });
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! tslib */42321);
      /* harmony import */
      var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./types */12905);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./helpers */36853);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./dateutil */98054);
      var _Time = /** @class */function () {
        function Time(hour, minute, second, millisecond) {
          this.hour = hour;
          this.minute = minute;
          this.second = second;
          this.millisecond = millisecond || 0;
        }
        Time.prototype.getHours = function () {
          return this.hour;
        };
        Time.prototype.getMinutes = function () {
          return this.minute;
        };
        Time.prototype.getSeconds = function () {
          return this.second;
        };
        Time.prototype.getMilliseconds = function () {
          return this.millisecond;
        };
        Time.prototype.getTime = function () {
          return (this.hour * 60 * 60 + this.minute * 60 + this.second) * 1000 + this.millisecond;
        };
        return Time;
      }();
      var _DateTime = /** @class */function (_super) {
        (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(DateTime, _super);
        function DateTime(year, month, day, hour, minute, second, millisecond) {
          var _this = _super.call(this, hour, minute, second, millisecond) || this;
          _this.year = year;
          _this.month = month;
          _this.day = day;
          return _this;
        }
        DateTime.fromDate = function (date) {
          return new this(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.valueOf() % 1000);
        };
        DateTime.prototype.getWeekday = function () {
          return (0, _dateutil__WEBPACK_IMPORTED_MODULE_2__.getWeekday)(new Date(this.getTime()));
        };
        DateTime.prototype.getTime = function () {
          return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)).getTime();
        };
        DateTime.prototype.getDay = function () {
          return this.day;
        };
        DateTime.prototype.getMonth = function () {
          return this.month;
        };
        DateTime.prototype.getYear = function () {
          return this.year;
        };
        DateTime.prototype.addYears = function (years) {
          this.year += years;
        };
        DateTime.prototype.addMonths = function (months) {
          this.month += months;
          if (this.month > 12) {
            var yearDiv = Math.floor(this.month / 12);
            var monthMod = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(this.month, 12);
            this.month = monthMod;
            this.year += yearDiv;
            if (this.month === 0) {
              this.month = 12;
              --this.year;
            }
          }
        };
        DateTime.prototype.addWeekly = function (days, wkst) {
          if (wkst > this.getWeekday()) {
            this.day += -(this.getWeekday() + 1 + (6 - wkst)) + days * 7;
          } else {
            this.day += -(this.getWeekday() - wkst) + days * 7;
          }
          this.fixDay();
        };
        DateTime.prototype.addDaily = function (days) {
          this.day += days;
          this.fixDay();
        };
        DateTime.prototype.addHours = function (hours, filtered, byhour) {
          if (filtered) {
            // Jump to one iteration before next day
            this.hour += Math.floor((23 - this.hour) / hours) * hours;
          }
          for (;;) {
            this.hour += hours;
            var _a = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.divmod)(this.hour, 24),
              dayDiv = _a.div,
              hourMod = _a.mod;
            if (dayDiv) {
              this.hour = hourMod;
              this.addDaily(dayDiv);
            }
            if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(byhour) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(byhour, this.hour)) break;
          }
        };
        DateTime.prototype.addMinutes = function (minutes, filtered, byhour, byminute) {
          if (filtered) {
            // Jump to one iteration before next day
            this.minute += Math.floor((1439 - (this.hour * 60 + this.minute)) / minutes) * minutes;
          }
          for (;;) {
            this.minute += minutes;
            var _a = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.divmod)(this.minute, 60),
              hourDiv = _a.div,
              minuteMod = _a.mod;
            if (hourDiv) {
              this.minute = minuteMod;
              this.addHours(hourDiv, false, byhour);
            }
            if (((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(byhour) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(byhour, this.hour)) && ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(byminute) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(byminute, this.minute))) {
              break;
            }
          }
        };
        DateTime.prototype.addSeconds = function (seconds, filtered, byhour, byminute, bysecond) {
          if (filtered) {
            // Jump to one iteration before next day
            this.second += Math.floor((86399 - (this.hour * 3600 + this.minute * 60 + this.second)) / seconds) * seconds;
          }
          for (;;) {
            this.second += seconds;
            var _a = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.divmod)(this.second, 60),
              minuteDiv = _a.div,
              secondMod = _a.mod;
            if (minuteDiv) {
              this.second = secondMod;
              this.addMinutes(minuteDiv, false, byhour, byminute);
            }
            if (((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(byhour) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(byhour, this.hour)) && ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(byminute) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(byminute, this.minute)) && ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(bysecond) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(bysecond, this.second))) {
              break;
            }
          }
        };
        DateTime.prototype.fixDay = function () {
          if (this.day <= 28) {
            return;
          }
          var daysinmonth = (0, _dateutil__WEBPACK_IMPORTED_MODULE_2__.monthRange)(this.year, this.month - 1)[1];
          if (this.day <= daysinmonth) {
            return;
          }
          while (this.day > daysinmonth) {
            this.day -= daysinmonth;
            ++this.month;
            if (this.month === 13) {
              this.month = 1;
              ++this.year;
              if (this.year > _dateutil__WEBPACK_IMPORTED_MODULE_2__.MAXYEAR) {
                return;
              }
            }
            daysinmonth = (0, _dateutil__WEBPACK_IMPORTED_MODULE_2__.monthRange)(this.year, this.month - 1)[1];
          }
        };
        DateTime.prototype.add = function (options, filtered) {
          var freq = options.freq,
            interval = options.interval,
            wkst = options.wkst,
            byhour = options.byhour,
            byminute = options.byminute,
            bysecond = options.bysecond;
          switch (freq) {
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.YEARLY:
              return this.addYears(interval);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.MONTHLY:
              return this.addMonths(interval);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.WEEKLY:
              return this.addWeekly(interval, wkst);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.DAILY:
              return this.addDaily(interval);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.HOURLY:
              return this.addHours(interval, filtered, byhour);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.MINUTELY:
              return this.addMinutes(interval, filtered, byhour, byminute);
            case _types__WEBPACK_IMPORTED_MODULE_0__.Frequency.SECONDLY:
              return this.addSeconds(interval, filtered, byhour, byminute, bysecond);
          }
        };
        return DateTime;
      }(_Time);

      /***/
    }),
    /***/98054: (
    /*!*************************************************!*\
      !*** ./node_modules/rrule/dist/esm/dateutil.js ***!
      \*************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"datetime": function datetime() {
          return /* binding */_datetime;
        },
        /* harmony export */"MONTH_DAYS": function MONTH_DAYS() {
          return /* binding */_MONTH_DAYS;
        },
        /* harmony export */"ONE_DAY": function ONE_DAY() {
          return /* binding */_ONE_DAY;
        },
        /* harmony export */"MAXYEAR": function MAXYEAR() {
          return /* binding */_MAXYEAR;
        },
        /* harmony export */"ORDINAL_BASE": function ORDINAL_BASE() {
          return /* binding */_ORDINAL_BASE;
        },
        /* harmony export */"PY_WEEKDAYS": function PY_WEEKDAYS() {
          return /* binding */_PY_WEEKDAYS;
        },
        /* harmony export */"getYearDay": function getYearDay() {
          return /* binding */_getYearDay;
        },
        /* harmony export */"isLeapYear": function isLeapYear() {
          return /* binding */_isLeapYear;
        },
        /* harmony export */"isDate": function isDate() {
          return /* binding */_isDate;
        },
        /* harmony export */"isValidDate": function isValidDate() {
          return /* binding */_isValidDate;
        },
        /* harmony export */"tzOffset": function tzOffset() {
          return /* binding */_tzOffset;
        },
        /* harmony export */"daysBetween": function daysBetween() {
          return /* binding */_daysBetween;
        },
        /* harmony export */"toOrdinal": function toOrdinal() {
          return /* binding */_toOrdinal;
        },
        /* harmony export */"fromOrdinal": function fromOrdinal() {
          return /* binding */_fromOrdinal;
        },
        /* harmony export */"getMonthDays": function getMonthDays() {
          return /* binding */_getMonthDays;
        },
        /* harmony export */"getWeekday": function getWeekday() {
          return /* binding */_getWeekday;
        },
        /* harmony export */"monthRange": function monthRange() {
          return /* binding */_monthRange;
        },
        /* harmony export */"combine": function combine() {
          return /* binding */_combine;
        },
        /* harmony export */"clone": function clone() {
          return /* binding */_clone;
        },
        /* harmony export */"cloneDates": function cloneDates() {
          return /* binding */_cloneDates;
        },
        /* harmony export */"sort": function sort() {
          return /* binding */_sort;
        },
        /* harmony export */"timeToUntilString": function timeToUntilString() {
          return /* binding */_timeToUntilString;
        },
        /* harmony export */"untilStringToDate": function untilStringToDate() {
          return /* binding */_untilStringToDate;
        },
        /* harmony export */"dateInTimeZone": function dateInTimeZone() {
          return /* binding */_dateInTimeZone;
        }
        /* harmony export */
      });
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./helpers */36853);
      var _datetime = function _datetime(y, m, d, h, i, s) {
        if (h === void 0) {
          h = 0;
        }
        if (i === void 0) {
          i = 0;
        }
        if (s === void 0) {
          s = 0;
        }
        return new Date(Date.UTC(y, m - 1, d, h, i, s));
      };
      /**
       * General date-related utilities.
       * Also handles several incompatibilities between JavaScript and Python
       *
       */
      var _MONTH_DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      /**
       * Number of milliseconds of one day
       */
      var _ONE_DAY = 1000 * 60 * 60 * 24;
      /**
       * @see: <http://docs.python.org/library/datetime.html#datetime.MAXYEAR>
       */
      var _MAXYEAR = 9999;
      /**
       * Python uses 1-Jan-1 as the base for calculating ordinals but we don't
       * want to confuse the JS engine with milliseconds > Number.MAX_NUMBER,
       * therefore we use 1-Jan-1970 instead
       */
      var _ORDINAL_BASE = _datetime(1970, 1, 1);
      /**
       * Python: MO-SU: 0 - 6
       * JS: SU-SAT 0 - 6
       */
      var _PY_WEEKDAYS = [6, 0, 1, 2, 3, 4, 5];
      /**
       * py_date.timetuple()[7]
       */
      var _getYearDay = function _getYearDay(date) {
        var dateNoTime = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
        return Math.ceil((dateNoTime.valueOf() - new Date(date.getUTCFullYear(), 0, 1).valueOf()) / _ONE_DAY) + 1;
      };
      var _isLeapYear = function _isLeapYear(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
      };
      var _isDate = function _isDate(value) {
        return value instanceof Date;
      };
      var _isValidDate = function _isValidDate(value) {
        return _isDate(value) && !isNaN(value.getTime());
      };
      /**
       * @return {Number} the date's timezone offset in ms
       */
      var _tzOffset = function _tzOffset(date) {
        return date.getTimezoneOffset() * 60 * 1000;
      };
      /**
       * @see: <http://www.mcfedries.com/JavaScript/DaysBetween.asp>
       */
      var _daysBetween = function _daysBetween(date1, date2) {
        // The number of milliseconds in one day
        // Convert both dates to milliseconds
        var date1ms = date1.getTime();
        var date2ms = date2.getTime();
        // Calculate the difference in milliseconds
        var differencems = date1ms - date2ms;
        // Convert back to days and return
        return Math.round(differencems / _ONE_DAY);
      };
      /**
       * @see: <http://docs.python.org/library/datetime.html#datetime.date.toordinal>
       */
      var _toOrdinal = function _toOrdinal(date) {
        return _daysBetween(date, _ORDINAL_BASE);
      };
      /**
       * @see - <http://docs.python.org/library/datetime.html#datetime.date.fromordinal>
       */
      var _fromOrdinal = function _fromOrdinal(ordinal) {
        return new Date(_ORDINAL_BASE.getTime() + ordinal * _ONE_DAY);
      };
      var _getMonthDays = function _getMonthDays(date) {
        var month = date.getUTCMonth();
        return month === 1 && _isLeapYear(date.getUTCFullYear()) ? 29 : _MONTH_DAYS[month];
      };
      /**
       * @return {Number} python-like weekday
       */
      var _getWeekday = function _getWeekday(date) {
        return _PY_WEEKDAYS[date.getUTCDay()];
      };
      /**
       * @see: <http://docs.python.org/library/calendar.html#calendar.monthrange>
       */
      var _monthRange = function _monthRange(year, month) {
        var date = _datetime(year, month + 1, 1);
        return [_getWeekday(date), _getMonthDays(date)];
      };
      /**
       * @see: <http://docs.python.org/library/datetime.html#datetime.datetime.combine>
       */
      var _combine = function _combine(date, time) {
        time = time || date;
        return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds()));
      };
      var _clone = function _clone(date) {
        var dolly = new Date(date.getTime());
        return dolly;
      };
      var _cloneDates = function _cloneDates(dates) {
        var clones = [];
        for (var i = 0; i < dates.length; i++) {
          clones.push(_clone(dates[i]));
        }
        return clones;
      };
      /**
       * Sorts an array of Date or Time objects
       */
      var _sort = function _sort(dates) {
        dates.sort(function (a, b) {
          return a.getTime() - b.getTime();
        });
      };
      var _timeToUntilString = function _timeToUntilString(time, utc) {
        if (utc === void 0) {
          utc = true;
        }
        var date = new Date(time);
        return [(0, _helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCFullYear().toString(), 4, '0'), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCMonth() + 1, 2, '0'), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCDate(), 2, '0'), 'T', (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCHours(), 2, '0'), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCMinutes(), 2, '0'), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.padStart)(date.getUTCSeconds(), 2, '0'), utc ? 'Z' : ''].join('');
      };
      var _untilStringToDate = function _untilStringToDate(until) {
        var re = /^(\d{4})(\d{2})(\d{2})(T(\d{2})(\d{2})(\d{2})Z?)?$/;
        var bits = re.exec(until);
        if (!bits) throw new Error("Invalid UNTIL value: ".concat(until));
        return new Date(Date.UTC(parseInt(bits[1], 10), parseInt(bits[2], 10) - 1, parseInt(bits[3], 10), parseInt(bits[5], 10) || 0, parseInt(bits[6], 10) || 0, parseInt(bits[7], 10) || 0));
      };
      var dateTZtoISO8601 = function dateTZtoISO8601(date, timeZone) {
        // date format for sv-SE is almost ISO8601
        var dateStr = date.toLocaleString('sv-SE', {
          timeZone: timeZone
        });
        // '2023-02-07 10:41:36'
        return dateStr.replace(' ', 'T') + 'Z';
      };
      var _dateInTimeZone = function _dateInTimeZone(date, timeZone) {
        var localTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;
        // Date constructor can only reliably parse dates in ISO8601 format
        var dateInLocalTZ = new Date(dateTZtoISO8601(date, localTimeZone));
        var dateInTargetTZ = new Date(dateTZtoISO8601(date, timeZone !== null && timeZone !== void 0 ? timeZone : 'UTC'));
        var tzOffset = dateInTargetTZ.getTime() - dateInLocalTZ.getTime();
        return new Date(date.getTime() - tzOffset);
      };

      /***/
    }),
    /***/14642: (
    /*!*****************************************************!*\
      !*** ./node_modules/rrule/dist/esm/datewithzone.js ***!
      \*****************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"DateWithZone": function DateWithZone() {
          return /* binding */_DateWithZone;
        }
        /* harmony export */
      });
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./dateutil */98054);
      var _DateWithZone = /** @class */function () {
        function DateWithZone(date, tzid) {
          if (isNaN(date.getTime())) {
            throw new RangeError('Invalid date passed to DateWithZone');
          }
          this.date = date;
          this.tzid = tzid;
        }
        Object.defineProperty(DateWithZone.prototype, "isUTC", {
          get: function get() {
            return !this.tzid || this.tzid.toUpperCase() === 'UTC';
          },
          enumerable: false,
          configurable: true
        });
        DateWithZone.prototype.toString = function () {
          var datestr = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.timeToUntilString)(this.date.getTime(), this.isUTC);
          if (!this.isUTC) {
            return ";TZID=".concat(this.tzid, ":").concat(datestr);
          }
          return ":".concat(datestr);
        };
        DateWithZone.prototype.getTime = function () {
          return this.date.getTime();
        };
        DateWithZone.prototype.rezonedDate = function () {
          if (this.isUTC) {
            return this.date;
          }
          return (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.dateInTimeZone)(this.date, this.tzid);
        };
        return DateWithZone;
      }();

      /***/
    }),
    /***/36853: (
    /*!************************************************!*\
      !*** ./node_modules/rrule/dist/esm/helpers.js ***!
      \************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"isPresent": function isPresent() {
          return /* binding */_isPresent;
        },
        /* harmony export */"isNumber": function isNumber() {
          return /* binding */_isNumber;
        },
        /* harmony export */"isWeekdayStr": function isWeekdayStr() {
          return /* binding */_isWeekdayStr;
        },
        /* harmony export */"isArray": function isArray() {
          return /* binding */_isArray;
        },
        /* harmony export */"range": function range() {
          return /* binding */_range;
        },
        /* harmony export */"clone": function clone() {
          return /* binding */_clone2;
        },
        /* harmony export */"repeat": function repeat() {
          return /* binding */_repeat;
        },
        /* harmony export */"toArray": function toArray() {
          return /* binding */_toArray;
        },
        /* harmony export */"padStart": function padStart() {
          return /* binding */_padStart;
        },
        /* harmony export */"split": function split() {
          return /* binding */_split;
        },
        /* harmony export */"pymod": function pymod() {
          return /* binding */_pymod;
        },
        /* harmony export */"divmod": function divmod() {
          return /* binding */_divmod;
        },
        /* harmony export */"empty": function empty() {
          return /* binding */_empty;
        },
        /* harmony export */"notEmpty": function notEmpty() {
          return /* binding */_notEmpty;
        },
        /* harmony export */"includes": function includes() {
          return /* binding */_includes;
        }
        /* harmony export */
      });
      /* harmony import */
      var _weekday__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./weekday */57845);
      // =============================================================================
      // Helper functions
      // =============================================================================

      var _isPresent = function _isPresent(value) {
        return value !== null && value !== undefined;
      };
      var _isNumber = function _isNumber(value) {
        return typeof value === 'number';
      };
      var _isWeekdayStr = function _isWeekdayStr(value) {
        return typeof value === 'string' && _weekday__WEBPACK_IMPORTED_MODULE_0__.ALL_WEEKDAYS.includes(value);
      };
      var _isArray = Array.isArray;
      /**
       * Simplified version of python's range()
       */
      var _range = function _range(start, end) {
        if (end === void 0) {
          end = start;
        }
        if (arguments.length === 1) {
          end = start;
          start = 0;
        }
        var rang = [];
        for (var i = start; i < end; i++) rang.push(i);
        return rang;
      };
      var _clone2 = function _clone2(array) {
        return [].concat(array);
      };
      var _repeat = function _repeat(value, times) {
        var i = 0;
        var array = [];
        if (_isArray(value)) {
          for (; i < times; i++) array[i] = [].concat(value);
        } else {
          for (; i < times; i++) array[i] = value;
        }
        return array;
      };
      var _toArray = function _toArray(item) {
        if (_isArray(item)) {
          return item;
        }
        return [item];
      };
      function _padStart(item, targetLength, padString) {
        if (padString === void 0) {
          padString = ' ';
        }
        var str = String(item);
        targetLength = targetLength >> 0;
        if (str.length > targetLength) {
          return String(str);
        }
        targetLength = targetLength - str.length;
        if (targetLength > padString.length) {
          padString += _repeat(padString, targetLength / padString.length);
        }
        return padString.slice(0, targetLength) + String(str);
      }
      /**
       * Python like split
       */
      var _split = function _split(str, sep, num) {
        var splits = str.split(sep);
        return num ? splits.slice(0, num).concat([splits.slice(num).join(sep)]) : splits;
      };
      /**
       * closure/goog/math/math.js:modulo
       * Copyright 2006 The Closure Library Authors.
       * The % operator in JavaScript returns the remainder of a / b, but differs from
       * some other languages in that the result will have the same sign as the
       * dividend. For example, -1 % 8 == -1, whereas in some other languages
       * (such as Python) the result would be 7. This function emulates the more
       * correct modulo behavior, which is useful for certain applications such as
       * calculating an offset index in a circular list.
       *
       * @param {number} a The dividend.
       * @param {number} b The divisor.
       * @return {number} a % b where the result is between 0 and b (either 0 <= x < b
       * or b < x <= 0, depending on the sign of b).
       */
      var _pymod = function _pymod(a, b) {
        var r = a % b;
        // If r and b differ in sign, add b to wrap the result to the correct sign.
        return r * b < 0 ? r + b : r;
      };
      /**
       * @see: <http://docs.python.org/library/functions.html#divmod>
       */
      var _divmod = function _divmod(a, b) {
        return {
          div: Math.floor(a / b),
          mod: _pymod(a, b)
        };
      };
      var _empty = function _empty(obj) {
        return !_isPresent(obj) || obj.length === 0;
      };
      /**
       * Python-like boolean
       *
       * @return {Boolean} value of an object/primitive, taking into account
       * the fact that in Python an empty list's/tuple's
       * boolean value is False, whereas in JS it's true
       */
      var _notEmpty = function _notEmpty(obj) {
        return !_empty(obj);
      };
      /**
       * Return true if a value is in an array
       */
      var _includes = function _includes(arr, val) {
        return _notEmpty(arr) && arr.indexOf(val) !== -1;
      };

      /***/
    }),
    /***/68382: (
    /*!**********************************************!*\
      !*** ./node_modules/rrule/dist/esm/index.js ***!
      \**********************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"RRule": function RRule() {
          return /* reexport safe */_rrule__WEBPACK_IMPORTED_MODULE_0__.RRule;
        },
        /* harmony export */"RRuleSet": function RRuleSet() {
          return /* reexport safe */_rruleset__WEBPACK_IMPORTED_MODULE_1__.RRuleSet;
        },
        /* harmony export */"rrulestr": function rrulestr() {
          return /* reexport safe */_rrulestr__WEBPACK_IMPORTED_MODULE_2__.rrulestr;
        },
        /* harmony export */"Frequency": function Frequency() {
          return /* reexport safe */_types__WEBPACK_IMPORTED_MODULE_3__.Frequency;
        },
        /* harmony export */"Weekday": function Weekday() {
          return /* reexport safe */_weekday__WEBPACK_IMPORTED_MODULE_4__.Weekday;
        },
        /* harmony export */"ALL_WEEKDAYS": function ALL_WEEKDAYS() {
          return /* reexport safe */_weekday__WEBPACK_IMPORTED_MODULE_4__.ALL_WEEKDAYS;
        },
        /* harmony export */"datetime": function datetime() {
          return /* reexport safe */_dateutil__WEBPACK_IMPORTED_MODULE_5__.datetime;
        }
        /* harmony export */
      });
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./rrule */8932);
      /* harmony import */
      var _rruleset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./rruleset */2476);
      /* harmony import */
      var _rrulestr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./rrulestr */4134);
      /* harmony import */
      var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./types */12905);
      /* harmony import */
      var _weekday__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./weekday */57845);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./dateutil */98054);
      /* !
       * rrule.js - Library for working with recurrence rules for calendar dates.
       * https://github.com/jakubroztocil/rrule
       *
       * Copyright 2010, Jakub Roztocil and Lars Schoning
       * Licenced under the BSD licence.
       * https://github.com/jakubroztocil/rrule/blob/master/LICENCE
       *
       * Based on:
       * python-dateutil - Extensions to the standard Python datetime module.
       * Copyright (c) 2003-2011 - Gustavo Niemeyer <gustavo@niemeyer.net>
       * Copyright (c) 2012 - Tomi Pieviläinen <tomi.pievilainen@iki.fi>
       * https://github.com/jakubroztocil/rrule/blob/master/LICENCE
       *
       */

      /***/
    }),
    /***/60630: (
    /*!***************************************************!*\
      !*** ./node_modules/rrule/dist/esm/iter/index.js ***!
      \***************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"iter": function iter() {
          return /* binding */_iter;
        }
        /* harmony export */
      });
      /* harmony import */
      var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../types */12905);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../dateutil */98054);
      /* harmony import */
      var _iterinfo_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../iterinfo/index */79021);
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../rrule */8932);
      /* harmony import */
      var _parseoptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../parseoptions */73181);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../helpers */36853);
      /* harmony import */
      var _datewithzone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../datewithzone */14642);
      /* harmony import */
      var _poslist__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./poslist */19996);
      /* harmony import */
      var _datetime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ../datetime */42236);
      function _iter(iterResult, options) {
        var dtstart = options.dtstart,
          freq = options.freq,
          interval = options.interval,
          until = options.until,
          bysetpos = options.bysetpos;
        var count = options.count;
        if (count === 0 || interval === 0) {
          return emitResult(iterResult);
        }
        var counterDate = _datetime__WEBPACK_IMPORTED_MODULE_8__.DateTime.fromDate(dtstart);
        var ii = new _iterinfo_index__WEBPACK_IMPORTED_MODULE_2__["default"](options);
        ii.rebuild(counterDate.year, counterDate.month);
        var timeset = makeTimeset(ii, counterDate, options);
        for (;;) {
          var _a = ii.getdayset(freq)(counterDate.year, counterDate.month, counterDate.day),
            dayset = _a[0],
            start = _a[1],
            end = _a[2];
          var filtered = removeFilteredDays(dayset, start, end, ii, options);
          if ((0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(bysetpos)) {
            var poslist = (0, _poslist__WEBPACK_IMPORTED_MODULE_7__.buildPoslist)(bysetpos, timeset, start, end, ii, dayset);
            for (var j = 0; j < poslist.length; j++) {
              var res = poslist[j];
              if (until && res > until) {
                return emitResult(iterResult);
              }
              if (res >= dtstart) {
                var rezonedDate = rezoneIfNeeded(res, options);
                if (!iterResult.accept(rezonedDate)) {
                  return emitResult(iterResult);
                }
                if (count) {
                  --count;
                  if (!count) {
                    return emitResult(iterResult);
                  }
                }
              }
            }
          } else {
            for (var j = start; j < end; j++) {
              var currentDay = dayset[j];
              if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.isPresent)(currentDay)) {
                continue;
              }
              var date = (0, _dateutil__WEBPACK_IMPORTED_MODULE_1__.fromOrdinal)(ii.yearordinal + currentDay);
              for (var k = 0; k < timeset.length; k++) {
                var time = timeset[k];
                var res = (0, _dateutil__WEBPACK_IMPORTED_MODULE_1__.combine)(date, time);
                if (until && res > until) {
                  return emitResult(iterResult);
                }
                if (res >= dtstart) {
                  var rezonedDate = rezoneIfNeeded(res, options);
                  if (!iterResult.accept(rezonedDate)) {
                    return emitResult(iterResult);
                  }
                  if (count) {
                    --count;
                    if (!count) {
                      return emitResult(iterResult);
                    }
                  }
                }
              }
            }
          }
          if (options.interval === 0) {
            return emitResult(iterResult);
          }
          // Handle frequency and interval
          counterDate.add(options, filtered);
          if (counterDate.year > _dateutil__WEBPACK_IMPORTED_MODULE_1__.MAXYEAR) {
            return emitResult(iterResult);
          }
          if (!(0, _types__WEBPACK_IMPORTED_MODULE_0__.freqIsDailyOrGreater)(freq)) {
            timeset = ii.gettimeset(freq)(counterDate.hour, counterDate.minute, counterDate.second, 0);
          }
          ii.rebuild(counterDate.year, counterDate.month);
        }
      }
      function isFiltered(ii, currentDay, options) {
        var bymonth = options.bymonth,
          byweekno = options.byweekno,
          byweekday = options.byweekday,
          byeaster = options.byeaster,
          bymonthday = options.bymonthday,
          bynmonthday = options.bynmonthday,
          byyearday = options.byyearday;
        return (0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(bymonth) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(bymonth, ii.mmask[currentDay]) || (0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(byweekno) && !ii.wnomask[currentDay] || (0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(byweekday) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byweekday, ii.wdaymask[currentDay]) || (0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(ii.nwdaymask) && !ii.nwdaymask[currentDay] || byeaster !== null && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(ii.eastermask, currentDay) || ((0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(bymonthday) || (0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(bynmonthday)) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(bymonthday, ii.mdaymask[currentDay]) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(bynmonthday, ii.nmdaymask[currentDay]) || (0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(byyearday) && (currentDay < ii.yearlen && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byyearday, currentDay + 1) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byyearday, -ii.yearlen + currentDay) || currentDay >= ii.yearlen && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byyearday, currentDay + 1 - ii.yearlen) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byyearday, -ii.nextyearlen + currentDay - ii.yearlen));
      }
      function rezoneIfNeeded(date, options) {
        return new _datewithzone__WEBPACK_IMPORTED_MODULE_6__.DateWithZone(date, options.tzid).rezonedDate();
      }
      function emitResult(iterResult) {
        return iterResult.getValue();
      }
      function removeFilteredDays(dayset, start, end, ii, options) {
        var filtered = false;
        for (var dayCounter = start; dayCounter < end; dayCounter++) {
          var currentDay = dayset[dayCounter];
          filtered = isFiltered(ii, currentDay, options);
          if (filtered) dayset[currentDay] = null;
        }
        return filtered;
      }
      function makeTimeset(ii, counterDate, options) {
        var freq = options.freq,
          byhour = options.byhour,
          byminute = options.byminute,
          bysecond = options.bysecond;
        if ((0, _types__WEBPACK_IMPORTED_MODULE_0__.freqIsDailyOrGreater)(freq)) {
          return (0, _parseoptions__WEBPACK_IMPORTED_MODULE_4__.buildTimeset)(options);
        }
        if (freq >= _rrule__WEBPACK_IMPORTED_MODULE_3__.RRule.HOURLY && (0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(byhour) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byhour, counterDate.hour) || freq >= _rrule__WEBPACK_IMPORTED_MODULE_3__.RRule.MINUTELY && (0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(byminute) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(byminute, counterDate.minute) || freq >= _rrule__WEBPACK_IMPORTED_MODULE_3__.RRule.SECONDLY && (0, _helpers__WEBPACK_IMPORTED_MODULE_5__.notEmpty)(bysecond) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_5__.includes)(bysecond, counterDate.second)) {
          return [];
        }
        return ii.gettimeset(freq)(counterDate.hour, counterDate.minute, counterDate.second, counterDate.millisecond);
      }

      /***/
    }),
    /***/19996: (
    /*!*****************************************************!*\
      !*** ./node_modules/rrule/dist/esm/iter/poslist.js ***!
      \*****************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"buildPoslist": function buildPoslist() {
          return /* binding */_buildPoslist;
        }
        /* harmony export */
      });
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../dateutil */98054);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../helpers */36853);
      function _buildPoslist(bysetpos, timeset, start, end, ii, dayset) {
        var poslist = [];
        for (var j = 0; j < bysetpos.length; j++) {
          var daypos = void 0;
          var timepos = void 0;
          var pos = bysetpos[j];
          if (pos < 0) {
            daypos = Math.floor(pos / timeset.length);
            timepos = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(pos, timeset.length);
          } else {
            daypos = Math.floor((pos - 1) / timeset.length);
            timepos = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(pos - 1, timeset.length);
          }
          var tmp = [];
          for (var k = start; k < end; k++) {
            var val = dayset[k];
            if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(val)) continue;
            tmp.push(val);
          }
          var i = void 0;
          if (daypos < 0) {
            i = tmp.slice(daypos)[0];
          } else {
            i = tmp[daypos];
          }
          var time = timeset[timepos];
          var date = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.fromOrdinal)(ii.yearordinal + i);
          var res = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.combine)(date, time);
          // XXX: can this ever be in the array?
          // - compare the actual date instead?
          if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(poslist, res)) poslist.push(res);
        }
        (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.sort)(poslist);
        return poslist;
      }

      /***/
    }),
    /***/15501: (
    /*!********************************************************!*\
      !*** ./node_modules/rrule/dist/esm/iterinfo/easter.js ***!
      \********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"easter": function easter() {
          return /* binding */_easter;
        }
        /* harmony export */
      });
      function _easter(y, offset) {
        if (offset === void 0) {
          offset = 0;
        }
        var a = y % 19;
        var b = Math.floor(y / 100);
        var c = y % 100;
        var d = Math.floor(b / 4);
        var e = b % 4;
        var f = Math.floor((b + 8) / 25);
        var g = Math.floor((b - f + 1) / 3);
        var h = Math.floor(19 * a + b - d - g + 15) % 30;
        var i = Math.floor(c / 4);
        var k = c % 4;
        var l = Math.floor(32 + 2 * e + 2 * i - h - k) % 7;
        var m = Math.floor((a + 11 * h + 22 * l) / 451);
        var month = Math.floor((h + l - 7 * m + 114) / 31);
        var day = (h + l - 7 * m + 114) % 31 + 1;
        var date = Date.UTC(y, month - 1, day + offset);
        var yearStart = Date.UTC(y, 0, 1);
        return [Math.ceil((date - yearStart) / (1000 * 60 * 60 * 24))];
      }

      /***/
    }),
    /***/79021: (
    /*!*******************************************************!*\
      !*** ./node_modules/rrule/dist/esm/iterinfo/index.js ***!
      \*******************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../helpers */36853);
      /* harmony import */
      var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../types */12905);
      /* harmony import */
      var _yearinfo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./yearinfo */36957);
      /* harmony import */
      var _monthinfo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./monthinfo */79997);
      /* harmony import */
      var _easter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./easter */15501);
      /* harmony import */
      var _datetime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ../datetime */42236);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../dateutil */98054);

      // =============================================================================
      // Iterinfo
      // =============================================================================
      var Iterinfo = /** @class */function () {
        // eslint-disable-next-line no-empty-function
        function Iterinfo(options) {
          this.options = options;
        }
        Iterinfo.prototype.rebuild = function (year, month) {
          var options = this.options;
          if (year !== this.lastyear) {
            this.yearinfo = (0, _yearinfo__WEBPACK_IMPORTED_MODULE_2__.rebuildYear)(year, options);
          }
          if ((0, _helpers__WEBPACK_IMPORTED_MODULE_0__.notEmpty)(options.bynweekday) && (month !== this.lastmonth || year !== this.lastyear)) {
            var _a = this.yearinfo,
              yearlen = _a.yearlen,
              mrange = _a.mrange,
              wdaymask = _a.wdaymask;
            this.monthinfo = (0, _monthinfo__WEBPACK_IMPORTED_MODULE_3__.rebuildMonth)(year, month, yearlen, mrange, wdaymask, options);
          }
          if ((0, _helpers__WEBPACK_IMPORTED_MODULE_0__.isPresent)(options.byeaster)) {
            this.eastermask = (0, _easter__WEBPACK_IMPORTED_MODULE_4__.easter)(year, options.byeaster);
          }
        };
        Object.defineProperty(Iterinfo.prototype, "lastyear", {
          get: function get() {
            return this.monthinfo ? this.monthinfo.lastyear : null;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "lastmonth", {
          get: function get() {
            return this.monthinfo ? this.monthinfo.lastmonth : null;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "yearlen", {
          get: function get() {
            return this.yearinfo.yearlen;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "yearordinal", {
          get: function get() {
            return this.yearinfo.yearordinal;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "mrange", {
          get: function get() {
            return this.yearinfo.mrange;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "wdaymask", {
          get: function get() {
            return this.yearinfo.wdaymask;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "mmask", {
          get: function get() {
            return this.yearinfo.mmask;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "wnomask", {
          get: function get() {
            return this.yearinfo.wnomask;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "nwdaymask", {
          get: function get() {
            return this.monthinfo ? this.monthinfo.nwdaymask : [];
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "nextyearlen", {
          get: function get() {
            return this.yearinfo.nextyearlen;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "mdaymask", {
          get: function get() {
            return this.yearinfo.mdaymask;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Iterinfo.prototype, "nmdaymask", {
          get: function get() {
            return this.yearinfo.nmdaymask;
          },
          enumerable: false,
          configurable: true
        });
        Iterinfo.prototype.ydayset = function () {
          return [(0, _helpers__WEBPACK_IMPORTED_MODULE_0__.range)(this.yearlen), 0, this.yearlen];
        };
        Iterinfo.prototype.mdayset = function (_, month) {
          var start = this.mrange[month - 1];
          var end = this.mrange[month];
          var set = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(null, this.yearlen);
          for (var i = start; i < end; i++) set[i] = i;
          return [set, start, end];
        };
        Iterinfo.prototype.wdayset = function (year, month, day) {
          // We need to handle cross-year weeks here.
          var set = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(null, this.yearlen + 7);
          var i = (0, _dateutil__WEBPACK_IMPORTED_MODULE_6__.toOrdinal)((0, _dateutil__WEBPACK_IMPORTED_MODULE_6__.datetime)(year, month, day)) - this.yearordinal;
          var start = i;
          for (var j = 0; j < 7; j++) {
            set[i] = i;
            ++i;
            if (this.wdaymask[i] === this.options.wkst) break;
          }
          return [set, start, i];
        };
        Iterinfo.prototype.ddayset = function (year, month, day) {
          var set = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(null, this.yearlen);
          var i = (0, _dateutil__WEBPACK_IMPORTED_MODULE_6__.toOrdinal)((0, _dateutil__WEBPACK_IMPORTED_MODULE_6__.datetime)(year, month, day)) - this.yearordinal;
          set[i] = i;
          return [set, i, i + 1];
        };
        Iterinfo.prototype.htimeset = function (hour, _, second, millisecond) {
          var _this = this;
          var set = [];
          this.options.byminute.forEach(function (minute) {
            set = set.concat(_this.mtimeset(hour, minute, second, millisecond));
          });
          (0, _dateutil__WEBPACK_IMPORTED_MODULE_6__.sort)(set);
          return set;
        };
        Iterinfo.prototype.mtimeset = function (hour, minute, _, millisecond) {
          var set = this.options.bysecond.map(function (second) {
            return new _datetime__WEBPACK_IMPORTED_MODULE_5__.Time(hour, minute, second, millisecond);
          });
          (0, _dateutil__WEBPACK_IMPORTED_MODULE_6__.sort)(set);
          return set;
        };
        Iterinfo.prototype.stimeset = function (hour, minute, second, millisecond) {
          return [new _datetime__WEBPACK_IMPORTED_MODULE_5__.Time(hour, minute, second, millisecond)];
        };
        Iterinfo.prototype.getdayset = function (freq) {
          switch (freq) {
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.YEARLY:
              return this.ydayset.bind(this);
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.MONTHLY:
              return this.mdayset.bind(this);
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.WEEKLY:
              return this.wdayset.bind(this);
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.DAILY:
              return this.ddayset.bind(this);
            default:
              return this.ddayset.bind(this);
          }
        };
        Iterinfo.prototype.gettimeset = function (freq) {
          switch (freq) {
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.HOURLY:
              return this.htimeset.bind(this);
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.MINUTELY:
              return this.mtimeset.bind(this);
            case _types__WEBPACK_IMPORTED_MODULE_1__.Frequency.SECONDLY:
              return this.stimeset.bind(this);
          }
        };
        return Iterinfo;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = Iterinfo;

      /***/
    }),
    /***/79997: (
    /*!***********************************************************!*\
      !*** ./node_modules/rrule/dist/esm/iterinfo/monthinfo.js ***!
      \***********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"rebuildMonth": function rebuildMonth() {
          return /* binding */_rebuildMonth;
        }
        /* harmony export */
      });
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../rrule */8932);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../helpers */36853);
      function _rebuildMonth(year, month, yearlen, mrange, wdaymask, options) {
        var result = {
          lastyear: year,
          lastmonth: month,
          nwdaymask: []
        };
        var ranges = [];
        if (options.freq === _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule.YEARLY) {
          if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(options.bymonth)) {
            ranges = [[0, yearlen]];
          } else {
            for (var j = 0; j < options.bymonth.length; j++) {
              month = options.bymonth[j];
              ranges.push(mrange.slice(month - 1, month + 1));
            }
          }
        } else if (options.freq === _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule.MONTHLY) {
          ranges = [mrange.slice(month - 1, month + 1)];
        }
        if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(ranges)) {
          return result;
        }
        // Weekly frequency won't get here, so we may not
        // care about cross-year weekly periods.
        result.nwdaymask = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.repeat)(0, yearlen);
        for (var j = 0; j < ranges.length; j++) {
          var rang = ranges[j];
          var first = rang[0];
          var last = rang[1] - 1;
          for (var k = 0; k < options.bynweekday.length; k++) {
            var i = void 0;
            var _a = options.bynweekday[k],
              wday = _a[0],
              n = _a[1];
            if (n < 0) {
              i = last + (n + 1) * 7;
              i -= (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(wdaymask[i] - wday, 7);
            } else {
              i = first + (n - 1) * 7;
              i += (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(7 - wdaymask[i] + wday, 7);
            }
            if (first <= i && i <= last) result.nwdaymask[i] = 1;
          }
        }
        return result;
      }

      /***/
    }),
    /***/36957: (
    /*!**********************************************************!*\
      !*** ./node_modules/rrule/dist/esm/iterinfo/yearinfo.js ***!
      \**********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"rebuildYear": function rebuildYear() {
          return /* binding */_rebuildYear;
        }
        /* harmony export */
      });
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! tslib */42321);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../dateutil */98054);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../helpers */36853);
      /* harmony import */
      var _masks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../masks */68777);
      function _rebuildYear(year, options) {
        var firstyday = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.datetime)(year, 1, 1);
        var yearlen = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.isLeapYear)(year) ? 366 : 365;
        var nextyearlen = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.isLeapYear)(year + 1) ? 366 : 365;
        var yearordinal = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.toOrdinal)(firstyday);
        var yearweekday = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.getWeekday)(firstyday);
        var result = (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({
          yearlen: yearlen,
          nextyearlen: nextyearlen,
          yearordinal: yearordinal,
          yearweekday: yearweekday
        }, baseYearMasks(year)), {
          wnomask: null
        });
        if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.empty)(options.byweekno)) {
          return result;
        }
        result.wnomask = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.repeat)(0, yearlen + 7);
        var firstwkst;
        var wyearlen;
        var no1wkst = firstwkst = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(7 - yearweekday + options.wkst, 7);
        if (no1wkst >= 4) {
          no1wkst = 0;
          // Number of days in the year, plus the days we got
          // from last year.
          wyearlen = result.yearlen + (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(yearweekday - options.wkst, 7);
        } else {
          // Number of days in the year, minus the days we
          // left in last year.
          wyearlen = yearlen - no1wkst;
        }
        var div = Math.floor(wyearlen / 7);
        var mod = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(wyearlen, 7);
        var numweeks = Math.floor(div + mod / 4);
        for (var j = 0; j < options.byweekno.length; j++) {
          var n = options.byweekno[j];
          if (n < 0) {
            n += numweeks + 1;
          }
          if (!(n > 0 && n <= numweeks)) {
            continue;
          }
          var i = void 0;
          if (n > 1) {
            i = no1wkst + (n - 1) * 7;
            if (no1wkst !== firstwkst) {
              i -= 7 - firstwkst;
            }
          } else {
            i = no1wkst;
          }
          for (var k = 0; k < 7; k++) {
            result.wnomask[i] = 1;
            i++;
            if (result.wdaymask[i] === options.wkst) break;
          }
        }
        if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(options.byweekno, 1)) {
          // Check week number 1 of next year as well
          // orig-TODO : Check -numweeks for next year.
          var i = no1wkst + numweeks * 7;
          if (no1wkst !== firstwkst) i -= 7 - firstwkst;
          if (i < yearlen) {
            // If week starts in next year, we
            // don't care about it.
            for (var j = 0; j < 7; j++) {
              result.wnomask[i] = 1;
              i += 1;
              if (result.wdaymask[i] === options.wkst) break;
            }
          }
        }
        if (no1wkst) {
          // Check last week number of last year as
          // well. If no1wkst is 0, either the year
          // started on week start, or week number 1
          // got days from last year, so there are no
          // days from last year's last week number in
          // this year.
          var lnumweeks = void 0;
          if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(options.byweekno, -1)) {
            var lyearweekday = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.getWeekday)((0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.datetime)(year - 1, 1, 1));
            var lno1wkst = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(7 - lyearweekday.valueOf() + options.wkst, 7);
            var lyearlen = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.isLeapYear)(year - 1) ? 366 : 365;
            var weekst = void 0;
            if (lno1wkst >= 4) {
              lno1wkst = 0;
              weekst = lyearlen + (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(lyearweekday - options.wkst, 7);
            } else {
              weekst = yearlen - no1wkst;
            }
            lnumweeks = Math.floor(52 + (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.pymod)(weekst, 7) / 4);
          } else {
            lnumweeks = -1;
          }
          if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(options.byweekno, lnumweeks)) {
            for (var i = 0; i < no1wkst; i++) result.wnomask[i] = 1;
          }
        }
        return result;
      }
      function baseYearMasks(year) {
        var yearlen = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.isLeapYear)(year) ? 366 : 365;
        var firstyday = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.datetime)(year, 1, 1);
        var wday = (0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.getWeekday)(firstyday);
        if (yearlen === 365) {
          return {
            mmask: _masks__WEBPACK_IMPORTED_MODULE_2__.M365MASK,
            mdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.MDAY365MASK,
            nmdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.NMDAY365MASK,
            wdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.WDAYMASK.slice(wday),
            mrange: _masks__WEBPACK_IMPORTED_MODULE_2__.M365RANGE
          };
        }
        return {
          mmask: _masks__WEBPACK_IMPORTED_MODULE_2__.M366MASK,
          mdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.MDAY366MASK,
          nmdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.NMDAY366MASK,
          wdaymask: _masks__WEBPACK_IMPORTED_MODULE_2__.WDAYMASK.slice(wday),
          mrange: _masks__WEBPACK_IMPORTED_MODULE_2__.M366RANGE
        };
      }

      /***/
    }),
    /***/8210: (
    /*!***************************************************!*\
      !*** ./node_modules/rrule/dist/esm/iterresult.js ***!
      \***************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /**
       * This class helps us to emulate python's generators, sorta.
       */
      var IterResult = /** @class */function () {
        function IterResult(method, args) {
          this.minDate = null;
          this.maxDate = null;
          this._result = [];
          this.total = 0;
          this.method = method;
          this.args = args;
          if (method === 'between') {
            this.maxDate = args.inc ? args.before : new Date(args.before.getTime() - 1);
            this.minDate = args.inc ? args.after : new Date(args.after.getTime() + 1);
          } else if (method === 'before') {
            this.maxDate = args.inc ? args.dt : new Date(args.dt.getTime() - 1);
          } else if (method === 'after') {
            this.minDate = args.inc ? args.dt : new Date(args.dt.getTime() + 1);
          }
        }
        /**
         * Possibly adds a date into the result.
         *
         * @param {Date} date - the date isn't necessarly added to the result
         * list (if it is too late/too early)
         * @return {Boolean} true if it makes sense to continue the iteration
         * false if we're done.
         */
        IterResult.prototype.accept = function (date) {
          ++this.total;
          var tooEarly = this.minDate && date < this.minDate;
          var tooLate = this.maxDate && date > this.maxDate;
          if (this.method === 'between') {
            if (tooEarly) return true;
            if (tooLate) return false;
          } else if (this.method === 'before') {
            if (tooLate) return false;
          } else if (this.method === 'after') {
            if (tooEarly) return true;
            this.add(date);
            return false;
          }
          return this.add(date);
        };
        /**
         *
         * @param {Date} date that is part of the result.
         * @return {Boolean} whether we are interested in more values.
         */
        IterResult.prototype.add = function (date) {
          this._result.push(date);
          return true;
        };
        /**
         * 'before' and 'after' return only one date, whereas 'all'
         * and 'between' an array.
         *
         * @return {Date,Array?}
         */
        IterResult.prototype.getValue = function () {
          var res = this._result;
          switch (this.method) {
            case 'all':
            case 'between':
              return res;
            case 'before':
            case 'after':
            default:
              return res.length ? res[res.length - 1] : null;
          }
        };
        IterResult.prototype.clone = function () {
          return new IterResult(this.method, this.args);
        };
        return IterResult;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = IterResult;

      /***/
    }),
    /***/25882: (
    /*!************************************************!*\
      !*** ./node_modules/rrule/dist/esm/iterset.js ***!
      \************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"iterSet": function iterSet() {
          return /* binding */_iterSet;
        }
        /* harmony export */
      });
      /* harmony import */
      var _datewithzone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./datewithzone */14642);
      /* harmony import */
      var _iter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./iter */60630);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./dateutil */98054);
      function _iterSet(iterResult, _rrule, _exrule, _rdate, _exdate, tzid) {
        var _exdateHash = {};
        var _accept = iterResult.accept;
        function evalExdate(after, before) {
          _exrule.forEach(function (rrule) {
            rrule.between(after, before, true).forEach(function (date) {
              _exdateHash[Number(date)] = true;
            });
          });
        }
        _exdate.forEach(function (date) {
          var zonedDate = new _datewithzone__WEBPACK_IMPORTED_MODULE_0__.DateWithZone(date, tzid).rezonedDate();
          _exdateHash[Number(zonedDate)] = true;
        });
        iterResult.accept = function (date) {
          var dt = Number(date);
          if (isNaN(dt)) return _accept.call(this, date);
          if (!_exdateHash[dt]) {
            evalExdate(new Date(dt - 1), new Date(dt + 1));
            if (!_exdateHash[dt]) {
              _exdateHash[dt] = true;
              return _accept.call(this, date);
            }
          }
          return true;
        };
        if (iterResult.method === 'between') {
          evalExdate(iterResult.args.after, iterResult.args.before);
          iterResult.accept = function (date) {
            var dt = Number(date);
            if (!_exdateHash[dt]) {
              _exdateHash[dt] = true;
              return _accept.call(this, date);
            }
            return true;
          };
        }
        for (var i = 0; i < _rdate.length; i++) {
          var zonedDate = new _datewithzone__WEBPACK_IMPORTED_MODULE_0__.DateWithZone(_rdate[i], tzid).rezonedDate();
          if (!iterResult.accept(new Date(zonedDate.getTime()))) break;
        }
        _rrule.forEach(function (rrule) {
          (0, _iter__WEBPACK_IMPORTED_MODULE_1__.iter)(iterResult, rrule.options);
        });
        var res = iterResult._result;
        (0, _dateutil__WEBPACK_IMPORTED_MODULE_2__.sort)(res);
        switch (iterResult.method) {
          case 'all':
          case 'between':
            return res;
          case 'before':
            return res.length && res[res.length - 1] || null;
          case 'after':
          default:
            return res.length && res[0] || null;
        }
      }

      /***/
    }),
    /***/68777: (
    /*!**********************************************!*\
      !*** ./node_modules/rrule/dist/esm/masks.js ***!
      \**********************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"WDAYMASK": function WDAYMASK() {
          return /* binding */_WDAYMASK;
        },
        /* harmony export */"M365MASK": function M365MASK() {
          return /* binding */_M365MASK;
        },
        /* harmony export */"M365RANGE": function M365RANGE() {
          return /* binding */_M365RANGE;
        },
        /* harmony export */"M366MASK": function M366MASK() {
          return /* binding */_M366MASK;
        },
        /* harmony export */"M366RANGE": function M366RANGE() {
          return /* binding */_M366RANGE;
        },
        /* harmony export */"MDAY365MASK": function MDAY365MASK() {
          return /* binding */_MDAY365MASK;
        },
        /* harmony export */"MDAY366MASK": function MDAY366MASK() {
          return /* binding */_MDAY366MASK;
        },
        /* harmony export */"NMDAY365MASK": function NMDAY365MASK() {
          return /* binding */_NMDAY365MASK;
        },
        /* harmony export */"NMDAY366MASK": function NMDAY366MASK() {
          return /* binding */_NMDAY366MASK;
        }
        /* harmony export */
      });
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! tslib */42321);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./helpers */36853);

      // =============================================================================
      // Date masks
      // =============================================================================
      // Every mask is 7 days longer to handle cross-year weekly periods.
      var _M365MASK = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(1, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(2, 28), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(3, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(4, 30), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(5, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(6, 30), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(7, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(8, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(9, 30), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(10, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(11, 30), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(12, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(1, 7), true);
      var _M366MASK = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(1, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(2, 29), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(3, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(4, 30), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(5, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(6, 30), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(7, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(8, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(9, 30), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(10, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(11, 30), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(12, 31), true), (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.repeat)(1, 7), true);
      var M28 = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.range)(1, 29);
      var M29 = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.range)(1, 30);
      var M30 = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.range)(1, 31);
      var M31 = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.range)(1, 32);
      var _MDAY366MASK = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], M31, true), M29, true), M31, true), M30, true), M31, true), M30, true), M31, true), M31, true), M30, true), M31, true), M30, true), M31, true), M31.slice(0, 7), true);
      var _MDAY365MASK = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], M31, true), M28, true), M31, true), M30, true), M31, true), M30, true), M31, true), M31, true), M30, true), M31, true), M30, true), M31, true), M31.slice(0, 7), true);
      var NM28 = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.range)(-28, 0);
      var NM29 = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.range)(-29, 0);
      var NM30 = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.range)(-30, 0);
      var NM31 = (0, _helpers__WEBPACK_IMPORTED_MODULE_0__.range)(-31, 0);
      var _NMDAY366MASK = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], NM31, true), NM29, true), NM31, true), NM30, true), NM31, true), NM30, true), NM31, true), NM31, true), NM30, true), NM31, true), NM30, true), NM31, true), NM31.slice(0, 7), true);
      var _NMDAY365MASK = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], NM31, true), NM28, true), NM31, true), NM30, true), NM31, true), NM30, true), NM31, true), NM31, true), NM30, true), NM31, true), NM30, true), NM31, true), NM31.slice(0, 7), true);
      var _M366RANGE = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];
      var _M365RANGE = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];
      var _WDAYMASK = function () {
        var wdaymask = [];
        for (var i = 0; i < 55; i++) wdaymask = wdaymask.concat((0, _helpers__WEBPACK_IMPORTED_MODULE_0__.range)(7));
        return wdaymask;
      }();

      /***/
    }),
    /***/95075: (
    /*!*************************************************!*\
      !*** ./node_modules/rrule/dist/esm/nlp/i18n.js ***!
      \*************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      // =============================================================================
      // i18n
      // =============================================================================
      var ENGLISH = {
        dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
        monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
        tokens: {
          SKIP: /^[ \r\n\t]+|^\.$/,
          number: /^[1-9][0-9]*/,
          numberAsText: /^(one|two|three)/i,
          every: /^every/i,
          'day(s)': /^days?/i,
          'weekday(s)': /^weekdays?/i,
          'week(s)': /^weeks?/i,
          'hour(s)': /^hours?/i,
          'minute(s)': /^minutes?/i,
          'month(s)': /^months?/i,
          'year(s)': /^years?/i,
          on: /^(on|in)/i,
          at: /^(at)/i,
          the: /^the/i,
          first: /^first/i,
          second: /^second/i,
          third: /^third/i,
          nth: /^([1-9][0-9]*)(\.|th|nd|rd|st)/i,
          last: /^last/i,
          "for": /^for/i,
          'time(s)': /^times?/i,
          until: /^(un)?til/i,
          monday: /^mo(n(day)?)?/i,
          tuesday: /^tu(e(s(day)?)?)?/i,
          wednesday: /^we(d(n(esday)?)?)?/i,
          thursday: /^th(u(r(sday)?)?)?/i,
          friday: /^fr(i(day)?)?/i,
          saturday: /^sa(t(urday)?)?/i,
          sunday: /^su(n(day)?)?/i,
          january: /^jan(uary)?/i,
          february: /^feb(ruary)?/i,
          march: /^mar(ch)?/i,
          april: /^apr(il)?/i,
          may: /^may/i,
          june: /^june?/i,
          july: /^july?/i,
          august: /^aug(ust)?/i,
          september: /^sep(t(ember)?)?/i,
          october: /^oct(ober)?/i,
          november: /^nov(ember)?/i,
          december: /^dec(ember)?/i,
          comma: /^(,\s*|(and|or)\s*)+/i
        }
      };
      /* harmony default export */
      __webpack_exports__["default"] = ENGLISH;

      /***/
    }),
    /***/19512: (
    /*!**************************************************!*\
      !*** ./node_modules/rrule/dist/esm/nlp/index.js ***!
      \**************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"fromText": function fromText() {
          return /* binding */_fromText;
        },
        /* harmony export */"parseText": function parseText() {
          return /* reexport safe */_parsetext__WEBPACK_IMPORTED_MODULE_1__["default"];
        },
        /* harmony export */"isFullyConvertible": function isFullyConvertible() {
          return /* binding */_isFullyConvertible;
        },
        /* harmony export */"toText": function toText() {
          return /* binding */_toText;
        }
        /* harmony export */
      });
      /* harmony import */
      var _totext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./totext */71650);
      /* harmony import */
      var _parsetext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./parsetext */78766);
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../rrule */8932);
      /* harmony import */
      var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../types */12905);
      /* harmony import */
      var _i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./i18n */95075);

      /* !
       * rrule.js - Library for working with recurrence rules for calendar dates.
       * https://github.com/jakubroztocil/rrule
       *
       * Copyright 2010, Jakub Roztocil and Lars Schoning
       * Licenced under the BSD licence.
       * https://github.com/jakubroztocil/rrule/blob/master/LICENCE
       *
       */
      /**
       *
       * Implementation of RRule.fromText() and RRule::toText().
       *
       *
       * On the client side, this file needs to be included
       * when those functions are used.
       *
       */
      // =============================================================================
      // fromText
      // =============================================================================
      /**
       * Will be able to convert some of the below described rules from
       * text format to a rule object.
       *
       *
       * RULES
       *
       * Every ([n])
       * day(s)
       * | [weekday], ..., (and) [weekday]
       * | weekday(s)
       * | week(s)
       * | month(s)
       * | [month], ..., (and) [month]
       * | year(s)
       *
       *
       * Plus 0, 1, or multiple of these:
       *
       * on [weekday], ..., (or) [weekday] the [monthday], [monthday], ... (or) [monthday]
       *
       * on [weekday], ..., (and) [weekday]
       *
       * on the [monthday], [monthday], ... (and) [monthday] (day of the month)
       *
       * on the [nth-weekday], ..., (and) [nth-weekday] (of the month/year)
       *
       *
       * Plus 0 or 1 of these:
       *
       * for [n] time(s)
       *
       * until [date]
       *
       * Plus (.)
       *
       *
       * Definitely no supported for parsing:
       *
       * (for year):
       * in week(s) [n], ..., (and) [n]
       *
       * on the [yearday], ..., (and) [n] day of the year
       * on day [yearday], ..., (and) [n]
       *
       *
       * NON-TERMINALS
       *
       * [n]: 1, 2 ..., one, two, three ..
       * [month]: January, February, March, April, May, ... December
       * [weekday]: Monday, ... Sunday
       * [nth-weekday]: first [weekday], 2nd [weekday], ... last [weekday], ...
       * [monthday]: first, 1., 2., 1st, 2nd, second, ... 31st, last day, 2nd last day, ..
       * [date]:
       * - [month] (0-31(,) ([year])),
       * - (the) 0-31.(1-12.([year])),
       * - (the) 0-31/(1-12/([year])),
       * - [weekday]
       *
       * [year]: 0000, 0001, ... 01, 02, ..
       *
       * Definitely not supported for parsing:
       *
       * [yearday]: first, 1., 2., 1st, 2nd, second, ... 366th, last day, 2nd last day, ..
       *
       * @param {String} text
       * @return {Object, Boolean} the rule, or null.
       */
      var _fromText = function _fromText(text, language) {
        if (language === void 0) {
          language = _i18n__WEBPACK_IMPORTED_MODULE_4__["default"];
        }
        return new _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule((0, _parsetext__WEBPACK_IMPORTED_MODULE_1__["default"])(text, language) || undefined);
      };
      var common = ['count', 'until', 'interval', 'byweekday', 'bymonthday', 'bymonth'];
      _totext__WEBPACK_IMPORTED_MODULE_0__["default"].IMPLEMENTED = [];
      _totext__WEBPACK_IMPORTED_MODULE_0__["default"].IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.HOURLY] = common;
      _totext__WEBPACK_IMPORTED_MODULE_0__["default"].IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.MINUTELY] = common;
      _totext__WEBPACK_IMPORTED_MODULE_0__["default"].IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.DAILY] = ['byhour'].concat(common);
      _totext__WEBPACK_IMPORTED_MODULE_0__["default"].IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.WEEKLY] = common;
      _totext__WEBPACK_IMPORTED_MODULE_0__["default"].IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.MONTHLY] = common;
      _totext__WEBPACK_IMPORTED_MODULE_0__["default"].IMPLEMENTED[_types__WEBPACK_IMPORTED_MODULE_3__.Frequency.YEARLY] = ['byweekno', 'byyearday'].concat(common);
      // =============================================================================
      // Export
      // =============================================================================
      var _toText = function _toText(rrule, gettext, language, dateFormatter) {
        return new _totext__WEBPACK_IMPORTED_MODULE_0__["default"](rrule, gettext, language, dateFormatter).toString();
      };
      var _isFullyConvertible = _totext__WEBPACK_IMPORTED_MODULE_0__["default"].isFullyConvertible;

      /***/
    }),
    /***/78766: (
    /*!******************************************************!*\
      !*** ./node_modules/rrule/dist/esm/nlp/parsetext.js ***!
      \******************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */parseText;
        }
        /* harmony export */
      });
      /* harmony import */
      var _i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./i18n */95075);
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../rrule */8932);

      // =============================================================================
      // Parser
      // =============================================================================
      var Parser = /** @class */function () {
        function Parser(rules) {
          this.done = true;
          this.rules = rules;
        }
        Parser.prototype.start = function (text) {
          this.text = text;
          this.done = false;
          return this.nextSymbol();
        };
        Parser.prototype.isDone = function () {
          return this.done && this.symbol === null;
        };
        Parser.prototype.nextSymbol = function () {
          var best;
          var bestSymbol;
          this.symbol = null;
          this.value = null;
          do {
            if (this.done) return false;
            var rule = void 0;
            best = null;
            for (var name_1 in this.rules) {
              rule = this.rules[name_1];
              var match = rule.exec(this.text);
              if (match) {
                if (best === null || match[0].length > best[0].length) {
                  best = match;
                  bestSymbol = name_1;
                }
              }
            }
            if (best != null) {
              this.text = this.text.substr(best[0].length);
              if (this.text === '') this.done = true;
            }
            if (best == null) {
              this.done = true;
              this.symbol = null;
              this.value = null;
              return;
            }
          } while (bestSymbol === 'SKIP');
          this.symbol = bestSymbol;
          this.value = best;
          return true;
        };
        Parser.prototype.accept = function (name) {
          if (this.symbol === name) {
            if (this.value) {
              var v = this.value;
              this.nextSymbol();
              return v;
            }
            this.nextSymbol();
            return true;
          }
          return false;
        };
        Parser.prototype.acceptNumber = function () {
          return this.accept('number');
        };
        Parser.prototype.expect = function (name) {
          if (this.accept(name)) return true;
          throw new Error('expected ' + name + ' but found ' + this.symbol);
        };
        return Parser;
      }();
      function parseText(text, language) {
        if (language === void 0) {
          language = _i18n__WEBPACK_IMPORTED_MODULE_0__["default"];
        }
        var options = {};
        var ttr = new Parser(language.tokens);
        if (!ttr.start(text)) return null;
        S();
        return options;
        function S() {
          // every [n]
          ttr.expect('every');
          var n = ttr.acceptNumber();
          if (n) options.interval = parseInt(n[0], 10);
          if (ttr.isDone()) throw new Error('Unexpected end');
          switch (ttr.symbol) {
            case 'day(s)':
              options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.DAILY;
              if (ttr.nextSymbol()) {
                AT();
                F();
              }
              break;
            // FIXME Note: every 2 weekdays != every two weeks on weekdays.
            // DAILY on weekdays is not a valid rule
            case 'weekday(s)':
              options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.WEEKLY;
              options.byweekday = [_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.MO, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.TU, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.WE, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.TH, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.FR];
              ttr.nextSymbol();
              AT();
              F();
              break;
            case 'week(s)':
              options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.WEEKLY;
              if (ttr.nextSymbol()) {
                ON();
                AT();
                F();
              }
              break;
            case 'hour(s)':
              options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.HOURLY;
              if (ttr.nextSymbol()) {
                ON();
                F();
              }
              break;
            case 'minute(s)':
              options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.MINUTELY;
              if (ttr.nextSymbol()) {
                ON();
                F();
              }
              break;
            case 'month(s)':
              options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.MONTHLY;
              if (ttr.nextSymbol()) {
                ON();
                F();
              }
              break;
            case 'year(s)':
              options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.YEARLY;
              if (ttr.nextSymbol()) {
                ON();
                F();
              }
              break;
            case 'monday':
            case 'tuesday':
            case 'wednesday':
            case 'thursday':
            case 'friday':
            case 'saturday':
            case 'sunday':
              options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.WEEKLY;
              var key = ttr.symbol.substr(0, 2).toUpperCase();
              options.byweekday = [_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule[key]];
              if (!ttr.nextSymbol()) return;
              // TODO check for duplicates
              while (ttr.accept('comma')) {
                if (ttr.isDone()) throw new Error('Unexpected end');
                var wkd = decodeWKD();
                if (!wkd) {
                  throw new Error('Unexpected symbol ' + ttr.symbol + ', expected weekday');
                }
                options.byweekday.push(_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule[wkd]);
                ttr.nextSymbol();
              }
              AT();
              MDAYs();
              F();
              break;
            case 'january':
            case 'february':
            case 'march':
            case 'april':
            case 'may':
            case 'june':
            case 'july':
            case 'august':
            case 'september':
            case 'october':
            case 'november':
            case 'december':
              options.freq = _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.YEARLY;
              options.bymonth = [decodeM()];
              if (!ttr.nextSymbol()) return;
              // TODO check for duplicates
              while (ttr.accept('comma')) {
                if (ttr.isDone()) throw new Error('Unexpected end');
                var m = decodeM();
                if (!m) {
                  throw new Error('Unexpected symbol ' + ttr.symbol + ', expected month');
                }
                options.bymonth.push(m);
                ttr.nextSymbol();
              }
              ON();
              F();
              break;
            default:
              throw new Error('Unknown symbol');
          }
        }
        function ON() {
          var on = ttr.accept('on');
          var the = ttr.accept('the');
          if (!(on || the)) return;
          do {
            var nth = decodeNTH();
            var wkd = decodeWKD();
            var m = decodeM();
            // nth <weekday> | <weekday>
            if (nth) {
              // ttr.nextSymbol()
              if (wkd) {
                ttr.nextSymbol();
                if (!options.byweekday) options.byweekday = [];
                options.byweekday.push(_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule[wkd].nth(nth));
              } else {
                if (!options.bymonthday) options.bymonthday = [];
                options.bymonthday.push(nth);
                ttr.accept('day(s)');
              }
              // <weekday>
            } else if (wkd) {
              ttr.nextSymbol();
              if (!options.byweekday) options.byweekday = [];
              options.byweekday.push(_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule[wkd]);
            } else if (ttr.symbol === 'weekday(s)') {
              ttr.nextSymbol();
              if (!options.byweekday) {
                options.byweekday = [_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.MO, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.TU, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.WE, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.TH, _rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.FR];
              }
            } else if (ttr.symbol === 'week(s)') {
              ttr.nextSymbol();
              var n = ttr.acceptNumber();
              if (!n) {
                throw new Error('Unexpected symbol ' + ttr.symbol + ', expected week number');
              }
              options.byweekno = [parseInt(n[0], 10)];
              while (ttr.accept('comma')) {
                n = ttr.acceptNumber();
                if (!n) {
                  throw new Error('Unexpected symbol ' + ttr.symbol + '; expected monthday');
                }
                options.byweekno.push(parseInt(n[0], 10));
              }
            } else if (m) {
              ttr.nextSymbol();
              if (!options.bymonth) options.bymonth = [];
              options.bymonth.push(m);
            } else {
              return;
            }
          } while (ttr.accept('comma') || ttr.accept('the') || ttr.accept('on'));
        }
        function AT() {
          var at = ttr.accept('at');
          if (!at) return;
          do {
            var n = ttr.acceptNumber();
            if (!n) {
              throw new Error('Unexpected symbol ' + ttr.symbol + ', expected hour');
            }
            options.byhour = [parseInt(n[0], 10)];
            while (ttr.accept('comma')) {
              n = ttr.acceptNumber();
              if (!n) {
                throw new Error('Unexpected symbol ' + ttr.symbol + '; expected hour');
              }
              options.byhour.push(parseInt(n[0], 10));
            }
          } while (ttr.accept('comma') || ttr.accept('at'));
        }
        function decodeM() {
          switch (ttr.symbol) {
            case 'january':
              return 1;
            case 'february':
              return 2;
            case 'march':
              return 3;
            case 'april':
              return 4;
            case 'may':
              return 5;
            case 'june':
              return 6;
            case 'july':
              return 7;
            case 'august':
              return 8;
            case 'september':
              return 9;
            case 'october':
              return 10;
            case 'november':
              return 11;
            case 'december':
              return 12;
            default:
              return false;
          }
        }
        function decodeWKD() {
          switch (ttr.symbol) {
            case 'monday':
            case 'tuesday':
            case 'wednesday':
            case 'thursday':
            case 'friday':
            case 'saturday':
            case 'sunday':
              return ttr.symbol.substr(0, 2).toUpperCase();
            default:
              return false;
          }
        }
        function decodeNTH() {
          switch (ttr.symbol) {
            case 'last':
              ttr.nextSymbol();
              return -1;
            case 'first':
              ttr.nextSymbol();
              return 1;
            case 'second':
              ttr.nextSymbol();
              return ttr.accept('last') ? -2 : 2;
            case 'third':
              ttr.nextSymbol();
              return ttr.accept('last') ? -3 : 3;
            case 'nth':
              var v = parseInt(ttr.value[1], 10);
              if (v < -366 || v > 366) throw new Error('Nth out of range: ' + v);
              ttr.nextSymbol();
              return ttr.accept('last') ? -v : v;
            default:
              return false;
          }
        }
        function MDAYs() {
          ttr.accept('on');
          ttr.accept('the');
          var nth = decodeNTH();
          if (!nth) return;
          options.bymonthday = [nth];
          ttr.nextSymbol();
          while (ttr.accept('comma')) {
            nth = decodeNTH();
            if (!nth) {
              throw new Error('Unexpected symbol ' + ttr.symbol + '; expected monthday');
            }
            options.bymonthday.push(nth);
            ttr.nextSymbol();
          }
        }
        function F() {
          if (ttr.symbol === 'until') {
            var date = Date.parse(ttr.text);
            if (!date) throw new Error('Cannot parse until date:' + ttr.text);
            options.until = new Date(date);
          } else if (ttr.accept('for')) {
            options.count = parseInt(ttr.value[0], 10);
            ttr.expect('number');
            // ttr.expect('times')
          }
        }
      }

      /***/
    }),
    /***/71650: (
    /*!***************************************************!*\
      !*** ./node_modules/rrule/dist/esm/nlp/totext.js ***!
      \***************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./i18n */95075);
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../rrule */8932);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../helpers */36853);

      // =============================================================================
      // Helper functions
      // =============================================================================
      /**
       * Return true if a value is in an array
       */
      var contains = function contains(arr, val) {
        return arr.indexOf(val) !== -1;
      };
      var defaultGetText = function defaultGetText(id) {
        return id.toString();
      };
      var defaultDateFormatter = function defaultDateFormatter(year, month, day) {
        return "".concat(month, " ").concat(day, ", ").concat(year);
      };
      /**
       *
       * @param {RRule} rrule
       * Optional:
       * @param {Function} gettext function
       * @param {Object} language definition
       * @constructor
       */
      var ToText = /** @class */function () {
        function ToText(rrule, gettext, language, dateFormatter) {
          if (gettext === void 0) {
            gettext = defaultGetText;
          }
          if (language === void 0) {
            language = _i18n__WEBPACK_IMPORTED_MODULE_0__["default"];
          }
          if (dateFormatter === void 0) {
            dateFormatter = defaultDateFormatter;
          }
          this.text = [];
          this.language = language || _i18n__WEBPACK_IMPORTED_MODULE_0__["default"];
          this.gettext = gettext;
          this.dateFormatter = dateFormatter;
          this.rrule = rrule;
          this.options = rrule.options;
          this.origOptions = rrule.origOptions;
          if (this.origOptions.bymonthday) {
            var bymonthday = [].concat(this.options.bymonthday);
            var bynmonthday = [].concat(this.options.bynmonthday);
            bymonthday.sort(function (a, b) {
              return a - b;
            });
            bynmonthday.sort(function (a, b) {
              return b - a;
            });
            // 1, 2, 3, .., -5, -4, -3, ..
            this.bymonthday = bymonthday.concat(bynmonthday);
            if (!this.bymonthday.length) this.bymonthday = null;
          }
          if ((0, _helpers__WEBPACK_IMPORTED_MODULE_2__.isPresent)(this.origOptions.byweekday)) {
            var byweekday = !(0, _helpers__WEBPACK_IMPORTED_MODULE_2__.isArray)(this.origOptions.byweekday) ? [this.origOptions.byweekday] : this.origOptions.byweekday;
            var days = String(byweekday);
            this.byweekday = {
              allWeeks: byweekday.filter(function (weekday) {
                return !weekday.n;
              }),
              someWeeks: byweekday.filter(function (weekday) {
                return Boolean(weekday.n);
              }),
              isWeekdays: days.indexOf('MO') !== -1 && days.indexOf('TU') !== -1 && days.indexOf('WE') !== -1 && days.indexOf('TH') !== -1 && days.indexOf('FR') !== -1 && days.indexOf('SA') === -1 && days.indexOf('SU') === -1,
              isEveryDay: days.indexOf('MO') !== -1 && days.indexOf('TU') !== -1 && days.indexOf('WE') !== -1 && days.indexOf('TH') !== -1 && days.indexOf('FR') !== -1 && days.indexOf('SA') !== -1 && days.indexOf('SU') !== -1
            };
            var sortWeekDays = function sortWeekDays(a, b) {
              return a.weekday - b.weekday;
            };
            this.byweekday.allWeeks.sort(sortWeekDays);
            this.byweekday.someWeeks.sort(sortWeekDays);
            if (!this.byweekday.allWeeks.length) this.byweekday.allWeeks = null;
            if (!this.byweekday.someWeeks.length) this.byweekday.someWeeks = null;
          } else {
            this.byweekday = null;
          }
        }
        /**
         * Test whether the rrule can be fully converted to text.
         *
         * @param {RRule} rrule
         * @return {Boolean}
         */
        ToText.isFullyConvertible = function (rrule) {
          var canConvert = true;
          if (!(rrule.options.freq in ToText.IMPLEMENTED)) return false;
          if (rrule.origOptions.until && rrule.origOptions.count) return false;
          for (var key in rrule.origOptions) {
            if (contains(['dtstart', 'tzid', 'wkst', 'freq'], key)) return true;
            if (!contains(ToText.IMPLEMENTED[rrule.options.freq], key)) return false;
          }
          return canConvert;
        };
        ToText.prototype.isFullyConvertible = function () {
          return ToText.isFullyConvertible(this.rrule);
        };
        /**
         * Perform the conversion. Only some of the frequencies are supported.
         * If some of the rrule's options aren't supported, they'll
         * be omitted from the output an "(~ approximate)" will be appended.
         *
         * @return {*}
         */
        ToText.prototype.toString = function () {
          var gettext = this.gettext;
          if (!(this.options.freq in ToText.IMPLEMENTED)) {
            return gettext('RRule error: Unable to fully convert this rrule to text');
          }
          this.text = [gettext('every')];
          // eslint-disable-next-line @typescript-eslint/ban-ts-comment
          // @ts-ignore
          this[_rrule__WEBPACK_IMPORTED_MODULE_1__.RRule.FREQUENCIES[this.options.freq]]();
          if (this.options.until) {
            this.add(gettext('until'));
            var until = this.options.until;
            this.add(this.dateFormatter(until.getUTCFullYear(), this.language.monthNames[until.getUTCMonth()], until.getUTCDate()));
          } else if (this.options.count) {
            this.add(gettext('for')).add(this.options.count.toString()).add(this.plural(this.options.count) ? gettext('times') : gettext('time'));
          }
          if (!this.isFullyConvertible()) this.add(gettext('(~ approximate)'));
          return this.text.join('');
        };
        ToText.prototype.HOURLY = function () {
          var gettext = this.gettext;
          if (this.options.interval !== 1) this.add(this.options.interval.toString());
          this.add(this.plural(this.options.interval) ? gettext('hours') : gettext('hour'));
        };
        ToText.prototype.MINUTELY = function () {
          var gettext = this.gettext;
          if (this.options.interval !== 1) this.add(this.options.interval.toString());
          this.add(this.plural(this.options.interval) ? gettext('minutes') : gettext('minute'));
        };
        ToText.prototype.DAILY = function () {
          var gettext = this.gettext;
          if (this.options.interval !== 1) this.add(this.options.interval.toString());
          if (this.byweekday && this.byweekday.isWeekdays) {
            this.add(this.plural(this.options.interval) ? gettext('weekdays') : gettext('weekday'));
          } else {
            this.add(this.plural(this.options.interval) ? gettext('days') : gettext('day'));
          }
          if (this.origOptions.bymonth) {
            this.add(gettext('in'));
            this._bymonth();
          }
          if (this.bymonthday) {
            this._bymonthday();
          } else if (this.byweekday) {
            this._byweekday();
          } else if (this.origOptions.byhour) {
            this._byhour();
          }
        };
        ToText.prototype.WEEKLY = function () {
          var gettext = this.gettext;
          if (this.options.interval !== 1) {
            this.add(this.options.interval.toString()).add(this.plural(this.options.interval) ? gettext('weeks') : gettext('week'));
          }
          if (this.byweekday && this.byweekday.isWeekdays) {
            if (this.options.interval === 1) {
              this.add(this.plural(this.options.interval) ? gettext('weekdays') : gettext('weekday'));
            } else {
              this.add(gettext('on')).add(gettext('weekdays'));
            }
          } else if (this.byweekday && this.byweekday.isEveryDay) {
            this.add(this.plural(this.options.interval) ? gettext('days') : gettext('day'));
          } else {
            if (this.options.interval === 1) this.add(gettext('week'));
            if (this.origOptions.bymonth) {
              this.add(gettext('in'));
              this._bymonth();
            }
            if (this.bymonthday) {
              this._bymonthday();
            } else if (this.byweekday) {
              this._byweekday();
            }
            if (this.origOptions.byhour) {
              this._byhour();
            }
          }
        };
        ToText.prototype.MONTHLY = function () {
          var gettext = this.gettext;
          if (this.origOptions.bymonth) {
            if (this.options.interval !== 1) {
              this.add(this.options.interval.toString()).add(gettext('months'));
              if (this.plural(this.options.interval)) this.add(gettext('in'));
            } else {
              // this.add(gettext('MONTH'))
            }
            this._bymonth();
          } else {
            if (this.options.interval !== 1) {
              this.add(this.options.interval.toString());
            }
            this.add(this.plural(this.options.interval) ? gettext('months') : gettext('month'));
          }
          if (this.bymonthday) {
            this._bymonthday();
          } else if (this.byweekday && this.byweekday.isWeekdays) {
            this.add(gettext('on')).add(gettext('weekdays'));
          } else if (this.byweekday) {
            this._byweekday();
          }
        };
        ToText.prototype.YEARLY = function () {
          var gettext = this.gettext;
          if (this.origOptions.bymonth) {
            if (this.options.interval !== 1) {
              this.add(this.options.interval.toString());
              this.add(gettext('years'));
            } else {
              // this.add(gettext('YEAR'))
            }
            this._bymonth();
          } else {
            if (this.options.interval !== 1) {
              this.add(this.options.interval.toString());
            }
            this.add(this.plural(this.options.interval) ? gettext('years') : gettext('year'));
          }
          if (this.bymonthday) {
            this._bymonthday();
          } else if (this.byweekday) {
            this._byweekday();
          }
          if (this.options.byyearday) {
            this.add(gettext('on the')).add(this.list(this.options.byyearday, this.nth, gettext('and'))).add(gettext('day'));
          }
          if (this.options.byweekno) {
            this.add(gettext('in')).add(this.plural(this.options.byweekno.length) ? gettext('weeks') : gettext('week')).add(this.list(this.options.byweekno, undefined, gettext('and')));
          }
        };
        ToText.prototype._bymonthday = function () {
          var gettext = this.gettext;
          if (this.byweekday && this.byweekday.allWeeks) {
            this.add(gettext('on')).add(this.list(this.byweekday.allWeeks, this.weekdaytext, gettext('or'))).add(gettext('the')).add(this.list(this.bymonthday, this.nth, gettext('or')));
          } else {
            this.add(gettext('on the')).add(this.list(this.bymonthday, this.nth, gettext('and')));
          }
          // this.add(gettext('DAY'))
        };
        ToText.prototype._byweekday = function () {
          var gettext = this.gettext;
          if (this.byweekday.allWeeks && !this.byweekday.isWeekdays) {
            this.add(gettext('on')).add(this.list(this.byweekday.allWeeks, this.weekdaytext));
          }
          if (this.byweekday.someWeeks) {
            if (this.byweekday.allWeeks) this.add(gettext('and'));
            this.add(gettext('on the')).add(this.list(this.byweekday.someWeeks, this.weekdaytext, gettext('and')));
          }
        };
        ToText.prototype._byhour = function () {
          var gettext = this.gettext;
          this.add(gettext('at')).add(this.list(this.origOptions.byhour, undefined, gettext('and')));
        };
        ToText.prototype._bymonth = function () {
          this.add(this.list(this.options.bymonth, this.monthtext, this.gettext('and')));
        };
        ToText.prototype.nth = function (n) {
          n = parseInt(n.toString(), 10);
          var nth;
          var gettext = this.gettext;
          if (n === -1) return gettext('last');
          var npos = Math.abs(n);
          switch (npos) {
            case 1:
            case 21:
            case 31:
              nth = npos + gettext('st');
              break;
            case 2:
            case 22:
              nth = npos + gettext('nd');
              break;
            case 3:
            case 23:
              nth = npos + gettext('rd');
              break;
            default:
              nth = npos + gettext('th');
          }
          return n < 0 ? nth + ' ' + gettext('last') : nth;
        };
        ToText.prototype.monthtext = function (m) {
          return this.language.monthNames[m - 1];
        };
        ToText.prototype.weekdaytext = function (wday) {
          var weekday = (0, _helpers__WEBPACK_IMPORTED_MODULE_2__.isNumber)(wday) ? (wday + 1) % 7 : wday.getJsWeekday();
          return (wday.n ? this.nth(wday.n) + ' ' : '') + this.language.dayNames[weekday];
        };
        ToText.prototype.plural = function (n) {
          return n % 100 !== 1;
        };
        ToText.prototype.add = function (s) {
          this.text.push(' ');
          this.text.push(s);
          return this;
        };
        ToText.prototype.list = function (arr, callback, finalDelim, delim) {
          var _this = this;
          if (delim === void 0) {
            delim = ',';
          }
          if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_2__.isArray)(arr)) {
            arr = [arr];
          }
          var delimJoin = function delimJoin(array, delimiter, finalDelimiter) {
            var list = '';
            for (var i = 0; i < array.length; i++) {
              if (i !== 0) {
                if (i === array.length - 1) {
                  list += ' ' + finalDelimiter + ' ';
                } else {
                  list += delimiter + ' ';
                }
              }
              list += array[i];
            }
            return list;
          };
          callback = callback || function (o) {
            return o.toString();
          };
          var realCallback = function realCallback(arg) {
            return callback && callback.call(_this, arg);
          };
          if (finalDelim) {
            return delimJoin(arr.map(realCallback), delim, finalDelim);
          } else {
            return arr.map(realCallback).join(delim + ' ');
          }
        };
        return ToText;
      }();
      /* harmony default export */
      __webpack_exports__["default"] = ToText;

      /***/
    }),
    /***/13135: (
    /*!********************************************************!*\
      !*** ./node_modules/rrule/dist/esm/optionstostring.js ***!
      \********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"optionsToString": function optionsToString() {
          return /* binding */_optionsToString;
        }
        /* harmony export */
      });
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./rrule */8932);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./helpers */36853);
      /* harmony import */
      var _weekday__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./weekday */57845);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./dateutil */98054);
      /* harmony import */
      var _datewithzone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./datewithzone */14642);
      function _optionsToString(options) {
        var rrule = [];
        var dtstart = '';
        var keys = Object.keys(options);
        var defaultKeys = Object.keys(_rrule__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_OPTIONS);
        for (var i = 0; i < keys.length; i++) {
          if (keys[i] === 'tzid') continue;
          if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(defaultKeys, keys[i])) continue;
          var key = keys[i].toUpperCase();
          var value = options[keys[i]];
          var outValue = '';
          if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(value) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(value) && !value.length) continue;
          switch (key) {
            case 'FREQ':
              outValue = _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule.FREQUENCIES[options.freq];
              break;
            case 'WKST':
              if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(value)) {
                outValue = new _weekday__WEBPACK_IMPORTED_MODULE_2__.Weekday(value).toString();
              } else {
                outValue = value.toString();
              }
              break;
            case 'BYWEEKDAY':
              /*
                NOTE: BYWEEKDAY is a special case.
                RRule() deconstructs the rule.options.byweekday array
                into an array of Weekday arguments.
                On the other hand, rule.origOptions is an array of Weekdays.
                We need to handle both cases here.
                It might be worth change RRule to keep the Weekdays.
                         Also, BYWEEKDAY (used by RRule) vs. BYDAY (RFC)
                         */
              key = 'BYDAY';
              outValue = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.toArray)(value).map(function (wday) {
                if (wday instanceof _weekday__WEBPACK_IMPORTED_MODULE_2__.Weekday) {
                  return wday;
                }
                if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(wday)) {
                  return new _weekday__WEBPACK_IMPORTED_MODULE_2__.Weekday(wday[0], wday[1]);
                }
                return new _weekday__WEBPACK_IMPORTED_MODULE_2__.Weekday(wday);
              }).toString();
              break;
            case 'DTSTART':
              dtstart = buildDtstart(value, options.tzid);
              break;
            case 'UNTIL':
              outValue = (0, _dateutil__WEBPACK_IMPORTED_MODULE_3__.timeToUntilString)(value, !options.tzid);
              break;
            default:
              if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {
                var strValues = [];
                for (var j = 0; j < value.length; j++) {
                  strValues[j] = String(value[j]);
                }
                outValue = strValues.toString();
              } else {
                outValue = String(value);
              }
          }
          if (outValue) {
            rrule.push([key, outValue]);
          }
        }
        var rules = rrule.map(function (_a) {
          var key = _a[0],
            value = _a[1];
          return "".concat(key, "=").concat(value.toString());
        }).join(';');
        var ruleString = '';
        if (rules !== '') {
          ruleString = "RRULE:".concat(rules);
        }
        return [dtstart, ruleString].filter(function (x) {
          return !!x;
        }).join('\n');
      }
      function buildDtstart(dtstart, tzid) {
        if (!dtstart) {
          return '';
        }
        return 'DTSTART' + new _datewithzone__WEBPACK_IMPORTED_MODULE_4__.DateWithZone(new Date(dtstart), tzid).toString();
      }

      /***/
    }),
    /***/73181: (
    /*!*****************************************************!*\
      !*** ./node_modules/rrule/dist/esm/parseoptions.js ***!
      \*****************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"initializeOptions": function initializeOptions() {
          return /* binding */_initializeOptions;
        },
        /* harmony export */"parseOptions": function parseOptions() {
          return /* binding */_parseOptions;
        },
        /* harmony export */"buildTimeset": function buildTimeset() {
          return /* binding */_buildTimeset;
        }
        /* harmony export */
      });
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! tslib */42321);
      /* harmony import */
      var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./types */12905);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./helpers */36853);
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./rrule */8932);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./dateutil */98054);
      /* harmony import */
      var _weekday__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./weekday */57845);
      /* harmony import */
      var _datetime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./datetime */42236);
      function _initializeOptions(options) {
        var invalid = [];
        var keys = Object.keys(options);
        // Shallow copy for options and origOptions and check for invalid
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
          var key = keys_1[_i];
          if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.includes)(_rrule__WEBPACK_IMPORTED_MODULE_2__.defaultKeys, key)) invalid.push(key);
          if ((0, _dateutil__WEBPACK_IMPORTED_MODULE_3__.isDate)(options[key]) && !(0, _dateutil__WEBPACK_IMPORTED_MODULE_3__.isValidDate)(options[key])) {
            invalid.push(key);
          }
        }
        if (invalid.length) {
          throw new Error('Invalid options: ' + invalid.join(', '));
        }
        return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, options);
      }
      function _parseOptions(options) {
        var opts = (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, _rrule__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_OPTIONS), _initializeOptions(options));
        if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byeaster)) opts.freq = _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.YEARLY;
        if (!((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.freq) && _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.FREQUENCIES[opts.freq])) {
          throw new Error("Invalid frequency: ".concat(opts.freq, " ").concat(options.freq));
        }
        if (!opts.dtstart) opts.dtstart = new Date(new Date().setMilliseconds(0));
        if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.wkst)) {
          opts.wkst = _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.MO.weekday;
        } else if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.wkst)) {
          // cool, just keep it like that
        } else {
          opts.wkst = opts.wkst.weekday;
        }
        if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.bysetpos)) {
          if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.bysetpos)) opts.bysetpos = [opts.bysetpos];
          for (var i = 0; i < opts.bysetpos.length; i++) {
            var v = opts.bysetpos[i];
            if (v === 0 || !(v >= -366 && v <= 366)) {
              throw new Error('bysetpos must be between 1 and 366,' + ' or between -366 and -1');
            }
          }
        }
        if (!(Boolean(opts.byweekno) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.notEmpty)(opts.byweekno) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.notEmpty)(opts.byyearday) || Boolean(opts.bymonthday) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.notEmpty)(opts.bymonthday) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byweekday) || (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byeaster))) {
          switch (opts.freq) {
            case _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.YEARLY:
              if (!opts.bymonth) opts.bymonth = opts.dtstart.getUTCMonth() + 1;
              opts.bymonthday = opts.dtstart.getUTCDate();
              break;
            case _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.MONTHLY:
              opts.bymonthday = opts.dtstart.getUTCDate();
              break;
            case _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.WEEKLY:
              opts.byweekday = [(0, _dateutil__WEBPACK_IMPORTED_MODULE_3__.getWeekday)(opts.dtstart)];
              break;
          }
        }
        // bymonth
        if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.bymonth) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(opts.bymonth)) {
          opts.bymonth = [opts.bymonth];
        }
        // byyearday
        if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byyearday) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(opts.byyearday) && (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.byyearday)) {
          opts.byyearday = [opts.byyearday];
        }
        // bymonthday
        if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.bymonthday)) {
          opts.bymonthday = [];
          opts.bynmonthday = [];
        } else if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(opts.bymonthday)) {
          var bymonthday = [];
          var bynmonthday = [];
          for (var i = 0; i < opts.bymonthday.length; i++) {
            var v = opts.bymonthday[i];
            if (v > 0) {
              bymonthday.push(v);
            } else if (v < 0) {
              bynmonthday.push(v);
            }
          }
          opts.bymonthday = bymonthday;
          opts.bynmonthday = bynmonthday;
        } else if (opts.bymonthday < 0) {
          opts.bynmonthday = [opts.bymonthday];
          opts.bymonthday = [];
        } else {
          opts.bynmonthday = [];
          opts.bymonthday = [opts.bymonthday];
        }
        // byweekno
        if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byweekno) && !(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isArray)(opts.byweekno)) {
          opts.byweekno = [opts.byweekno];
        }
        // byweekday / bynweekday
        if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byweekday)) {
          opts.bynweekday = null;
        } else if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.byweekday)) {
          opts.byweekday = [opts.byweekday];
          opts.bynweekday = null;
        } else if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isWeekdayStr)(opts.byweekday)) {
          opts.byweekday = [_weekday__WEBPACK_IMPORTED_MODULE_4__.Weekday.fromStr(opts.byweekday).weekday];
          opts.bynweekday = null;
        } else if (opts.byweekday instanceof _weekday__WEBPACK_IMPORTED_MODULE_4__.Weekday) {
          if (!opts.byweekday.n || opts.freq > _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.MONTHLY) {
            opts.byweekday = [opts.byweekday.weekday];
            opts.bynweekday = null;
          } else {
            opts.bynweekday = [[opts.byweekday.weekday, opts.byweekday.n]];
            opts.byweekday = null;
          }
        } else {
          var byweekday = [];
          var bynweekday = [];
          for (var i = 0; i < opts.byweekday.length; i++) {
            var wday = opts.byweekday[i];
            if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(wday)) {
              byweekday.push(wday);
              continue;
            } else if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isWeekdayStr)(wday)) {
              byweekday.push(_weekday__WEBPACK_IMPORTED_MODULE_4__.Weekday.fromStr(wday).weekday);
              continue;
            }
            if (!wday.n || opts.freq > _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.MONTHLY) {
              byweekday.push(wday.weekday);
            } else {
              bynweekday.push([wday.weekday, wday.n]);
            }
          }
          opts.byweekday = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.notEmpty)(byweekday) ? byweekday : null;
          opts.bynweekday = (0, _helpers__WEBPACK_IMPORTED_MODULE_1__.notEmpty)(bynweekday) ? bynweekday : null;
        }
        // byhour
        if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byhour)) {
          opts.byhour = opts.freq < _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.HOURLY ? [opts.dtstart.getUTCHours()] : null;
        } else if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.byhour)) {
          opts.byhour = [opts.byhour];
        }
        // byminute
        if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.byminute)) {
          opts.byminute = opts.freq < _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.MINUTELY ? [opts.dtstart.getUTCMinutes()] : null;
        } else if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.byminute)) {
          opts.byminute = [opts.byminute];
        }
        // bysecond
        if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isPresent)(opts.bysecond)) {
          opts.bysecond = opts.freq < _rrule__WEBPACK_IMPORTED_MODULE_2__.RRule.SECONDLY ? [opts.dtstart.getUTCSeconds()] : null;
        } else if ((0, _helpers__WEBPACK_IMPORTED_MODULE_1__.isNumber)(opts.bysecond)) {
          opts.bysecond = [opts.bysecond];
        }
        return {
          parsedOptions: opts
        };
      }
      function _buildTimeset(opts) {
        var millisecondModulo = opts.dtstart.getTime() % 1000;
        if (!(0, _types__WEBPACK_IMPORTED_MODULE_0__.freqIsDailyOrGreater)(opts.freq)) {
          return [];
        }
        var timeset = [];
        opts.byhour.forEach(function (hour) {
          opts.byminute.forEach(function (minute) {
            opts.bysecond.forEach(function (second) {
              timeset.push(new _datetime__WEBPACK_IMPORTED_MODULE_5__.Time(hour, minute, second, millisecondModulo));
            });
          });
        });
        return timeset;
      }

      /***/
    }),
    /***/59643: (
    /*!****************************************************!*\
      !*** ./node_modules/rrule/dist/esm/parsestring.js ***!
      \****************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"parseString": function parseString() {
          return /* binding */_parseString;
        },
        /* harmony export */"parseDtstart": function parseDtstart() {
          return /* binding */_parseDtstart;
        }
        /* harmony export */
      });
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! tslib */42321);
      /* harmony import */
      var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./types */12905);
      /* harmony import */
      var _weekday__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./weekday */57845);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./dateutil */98054);
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./rrule */8932);
      function _parseString(rfcString) {
        var options = rfcString.split('\n').map(parseLine).filter(function (x) {
          return x !== null;
        });
        return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, options[0]), options[1]);
      }
      function _parseDtstart(line) {
        var options = {};
        var dtstartWithZone = /DTSTART(?:;TZID=([^:=]+?))?(?::|=)([^;\s]+)/i.exec(line);
        if (!dtstartWithZone) {
          return options;
        }
        var tzid = dtstartWithZone[1],
          dtstart = dtstartWithZone[2];
        if (tzid) {
          options.tzid = tzid;
        }
        options.dtstart = (0, _dateutil__WEBPACK_IMPORTED_MODULE_2__.untilStringToDate)(dtstart);
        return options;
      }
      function parseLine(rfcString) {
        rfcString = rfcString.replace(/^\s+|\s+$/, '');
        if (!rfcString.length) return null;
        var header = /^([A-Z]+?)[:;]/.exec(rfcString.toUpperCase());
        if (!header) {
          return parseRrule(rfcString);
        }
        var key = header[1];
        switch (key.toUpperCase()) {
          case 'RRULE':
          case 'EXRULE':
            return parseRrule(rfcString);
          case 'DTSTART':
            return _parseDtstart(rfcString);
          default:
            throw new Error("Unsupported RFC prop ".concat(key, " in ").concat(rfcString));
        }
      }
      function parseRrule(line) {
        var strippedLine = line.replace(/^RRULE:/i, '');
        var options = _parseDtstart(strippedLine);
        var attrs = line.replace(/^(?:RRULE|EXRULE):/i, '').split(';');
        attrs.forEach(function (attr) {
          var _a = attr.split('='),
            key = _a[0],
            value = _a[1];
          switch (key.toUpperCase()) {
            case 'FREQ':
              options.freq = _types__WEBPACK_IMPORTED_MODULE_0__.Frequency[value.toUpperCase()];
              break;
            case 'WKST':
              options.wkst = _rrule__WEBPACK_IMPORTED_MODULE_3__.Days[value.toUpperCase()];
              break;
            case 'COUNT':
            case 'INTERVAL':
            case 'BYSETPOS':
            case 'BYMONTH':
            case 'BYMONTHDAY':
            case 'BYYEARDAY':
            case 'BYWEEKNO':
            case 'BYHOUR':
            case 'BYMINUTE':
            case 'BYSECOND':
              var num = parseNumber(value);
              var optionKey = key.toLowerCase();
              // eslint-disable-next-line @typescript-eslint/ban-ts-comment
              // @ts-ignore
              options[optionKey] = num;
              break;
            case 'BYWEEKDAY':
            case 'BYDAY':
              options.byweekday = parseWeekday(value);
              break;
            case 'DTSTART':
            case 'TZID':
              // for backwards compatibility
              var dtstart = _parseDtstart(line);
              options.tzid = dtstart.tzid;
              options.dtstart = dtstart.dtstart;
              break;
            case 'UNTIL':
              options.until = (0, _dateutil__WEBPACK_IMPORTED_MODULE_2__.untilStringToDate)(value);
              break;
            case 'BYEASTER':
              options.byeaster = Number(value);
              break;
            default:
              throw new Error("Unknown RRULE property '" + key + "'");
          }
        });
        return options;
      }
      function parseNumber(value) {
        if (value.indexOf(',') !== -1) {
          var values = value.split(',');
          return values.map(parseIndividualNumber);
        }
        return parseIndividualNumber(value);
      }
      function parseIndividualNumber(value) {
        if (/^[+-]?\d+$/.test(value)) {
          return Number(value);
        }
        return value;
      }
      function parseWeekday(value) {
        var days = value.split(',');
        return days.map(function (day) {
          if (day.length === 2) {
            // MO, TU, ...
            return _rrule__WEBPACK_IMPORTED_MODULE_3__.Days[day]; // wday instanceof Weekday
          }
          // -1MO, +3FR, 1SO, 13TU ...
          var parts = day.match(/^([+-]?\d{1,2})([A-Z]{2})$/);
          if (!parts || parts.length < 3) {
            throw new SyntaxError("Invalid weekday string: ".concat(day));
          }
          var n = Number(parts[1]);
          var wdaypart = parts[2];
          var wday = _rrule__WEBPACK_IMPORTED_MODULE_3__.Days[wdaypart].weekday;
          return new _weekday__WEBPACK_IMPORTED_MODULE_1__.Weekday(wday, n);
        });
      }

      /***/
    }),
    /***/8932: (
    /*!**********************************************!*\
      !*** ./node_modules/rrule/dist/esm/rrule.js ***!
      \**********************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Days": function Days() {
          return /* binding */_Days;
        },
        /* harmony export */"DEFAULT_OPTIONS": function DEFAULT_OPTIONS() {
          return /* binding */_DEFAULT_OPTIONS;
        },
        /* harmony export */"defaultKeys": function defaultKeys() {
          return /* binding */_defaultKeys;
        },
        /* harmony export */"RRule": function RRule() {
          return /* binding */_RRule;
        }
        /* harmony export */
      });
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./dateutil */98054);
      /* harmony import */
      var _iterresult__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./iterresult */8210);
      /* harmony import */
      var _callbackiterresult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./callbackiterresult */72673);
      /* harmony import */
      var _nlp_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./nlp/index */19512);
      /* harmony import */
      var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./types */12905);
      /* harmony import */
      var _parseoptions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./parseoptions */73181);
      /* harmony import */
      var _parsestring__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ./parsestring */59643);
      /* harmony import */
      var _optionstostring__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ./optionstostring */13135);
      /* harmony import */
      var _cache__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! ./cache */82450);
      /* harmony import */
      var _weekday__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! ./weekday */57845);
      /* harmony import */
      var _iter_index__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! ./iter/index */60630);

      // =============================================================================
      // RRule
      // =============================================================================
      var _Days = {
        MO: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(0),
        TU: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(1),
        WE: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(2),
        TH: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(3),
        FR: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(4),
        SA: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(5),
        SU: new _weekday__WEBPACK_IMPORTED_MODULE_9__.Weekday(6)
      };
      var _DEFAULT_OPTIONS = {
        freq: _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.YEARLY,
        dtstart: null,
        interval: 1,
        wkst: _Days.MO,
        count: null,
        until: null,
        tzid: null,
        bysetpos: null,
        bymonth: null,
        bymonthday: null,
        bynmonthday: null,
        byyearday: null,
        byweekno: null,
        byweekday: null,
        bynweekday: null,
        byhour: null,
        byminute: null,
        bysecond: null,
        byeaster: null
      };
      var _defaultKeys = Object.keys(_DEFAULT_OPTIONS);
      /**
       *
       * @param {Options?} options - see <http://labix.org/python-dateutil/#head-cf004ee9a75592797e076752b2a889c10f445418>
       * - The only required option is `freq`, one of RRule.YEARLY, RRule.MONTHLY, ...
       * @constructor
       */
      var _RRule = /** @class */function () {
        function RRule(options, noCache) {
          if (options === void 0) {
            options = {};
          }
          if (noCache === void 0) {
            noCache = false;
          }
          // RFC string
          this._cache = noCache ? null : new _cache__WEBPACK_IMPORTED_MODULE_8__.Cache();
          // used by toString()
          this.origOptions = (0, _parseoptions__WEBPACK_IMPORTED_MODULE_5__.initializeOptions)(options);
          var parsedOptions = (0, _parseoptions__WEBPACK_IMPORTED_MODULE_5__.parseOptions)(options).parsedOptions;
          this.options = parsedOptions;
        }
        RRule.parseText = function (text, language) {
          return (0, _nlp_index__WEBPACK_IMPORTED_MODULE_3__.parseText)(text, language);
        };
        RRule.fromText = function (text, language) {
          return (0, _nlp_index__WEBPACK_IMPORTED_MODULE_3__.fromText)(text, language);
        };
        RRule.fromString = function (str) {
          return new RRule(RRule.parseString(str) || undefined);
        };
        RRule.prototype._iter = function (iterResult) {
          return (0, _iter_index__WEBPACK_IMPORTED_MODULE_10__.iter)(iterResult, this.options);
        };
        RRule.prototype._cacheGet = function (what, args) {
          if (!this._cache) return false;
          return this._cache._cacheGet(what, args);
        };
        RRule.prototype._cacheAdd = function (what, value, args) {
          if (!this._cache) return;
          return this._cache._cacheAdd(what, value, args);
        };
        /**
         * @param {Function} iterator - optional function that will be called
         * on each date that is added. It can return false
         * to stop the iteration.
         * @return Array containing all recurrences.
         */
        RRule.prototype.all = function (iterator) {
          if (iterator) {
            return this._iter(new _callbackiterresult__WEBPACK_IMPORTED_MODULE_2__["default"]('all', {}, iterator));
          }
          var result = this._cacheGet('all');
          if (result === false) {
            result = this._iter(new _iterresult__WEBPACK_IMPORTED_MODULE_1__["default"]('all', {}));
            this._cacheAdd('all', result);
          }
          return result;
        };
        /**
         * Returns all the occurrences of the rrule between after and before.
         * The inc keyword defines what happens if after and/or before are
         * themselves occurrences. With inc == True, they will be included in the
         * list, if they are found in the recurrence set.
         *
         * @return Array
         */
        RRule.prototype.between = function (after, before, inc, iterator) {
          if (inc === void 0) {
            inc = false;
          }
          if (!(0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.isValidDate)(after) || !(0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.isValidDate)(before)) {
            throw new Error('Invalid date passed in to RRule.between');
          }
          var args = {
            before: before,
            after: after,
            inc: inc
          };
          if (iterator) {
            return this._iter(new _callbackiterresult__WEBPACK_IMPORTED_MODULE_2__["default"]('between', args, iterator));
          }
          var result = this._cacheGet('between', args);
          if (result === false) {
            result = this._iter(new _iterresult__WEBPACK_IMPORTED_MODULE_1__["default"]('between', args));
            this._cacheAdd('between', result, args);
          }
          return result;
        };
        /**
         * Returns the last recurrence before the given datetime instance.
         * The inc keyword defines what happens if dt is an occurrence.
         * With inc == True, if dt itself is an occurrence, it will be returned.
         *
         * @return Date or null
         */
        RRule.prototype.before = function (dt, inc) {
          if (inc === void 0) {
            inc = false;
          }
          if (!(0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.isValidDate)(dt)) {
            throw new Error('Invalid date passed in to RRule.before');
          }
          var args = {
            dt: dt,
            inc: inc
          };
          var result = this._cacheGet('before', args);
          if (result === false) {
            result = this._iter(new _iterresult__WEBPACK_IMPORTED_MODULE_1__["default"]('before', args));
            this._cacheAdd('before', result, args);
          }
          return result;
        };
        /**
         * Returns the first recurrence after the given datetime instance.
         * The inc keyword defines what happens if dt is an occurrence.
         * With inc == True, if dt itself is an occurrence, it will be returned.
         *
         * @return Date or null
         */
        RRule.prototype.after = function (dt, inc) {
          if (inc === void 0) {
            inc = false;
          }
          if (!(0, _dateutil__WEBPACK_IMPORTED_MODULE_0__.isValidDate)(dt)) {
            throw new Error('Invalid date passed in to RRule.after');
          }
          var args = {
            dt: dt,
            inc: inc
          };
          var result = this._cacheGet('after', args);
          if (result === false) {
            result = this._iter(new _iterresult__WEBPACK_IMPORTED_MODULE_1__["default"]('after', args));
            this._cacheAdd('after', result, args);
          }
          return result;
        };
        /**
         * Returns the number of recurrences in this set. It will have go trough
         * the whole recurrence, if this hasn't been done before.
         */
        RRule.prototype.count = function () {
          return this.all().length;
        };
        /**
         * Converts the rrule into its string representation
         *
         * @see <http://www.ietf.org/rfc/rfc2445.txt>
         * @return String
         */
        RRule.prototype.toString = function () {
          return (0, _optionstostring__WEBPACK_IMPORTED_MODULE_7__.optionsToString)(this.origOptions);
        };
        /**
         * Will convert all rules described in nlp:ToText
         * to text.
         */
        RRule.prototype.toText = function (gettext, language, dateFormatter) {
          return (0, _nlp_index__WEBPACK_IMPORTED_MODULE_3__.toText)(this, gettext, language, dateFormatter);
        };
        RRule.prototype.isFullyConvertibleToText = function () {
          return (0, _nlp_index__WEBPACK_IMPORTED_MODULE_3__.isFullyConvertible)(this);
        };
        /**
         * @return a RRule instance with the same freq and options
         * as this one (cache is not cloned)
         */
        RRule.prototype.clone = function () {
          return new RRule(this.origOptions);
        };
        // RRule class 'constants'
        RRule.FREQUENCIES = ['YEARLY', 'MONTHLY', 'WEEKLY', 'DAILY', 'HOURLY', 'MINUTELY', 'SECONDLY'];
        RRule.YEARLY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.YEARLY;
        RRule.MONTHLY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.MONTHLY;
        RRule.WEEKLY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.WEEKLY;
        RRule.DAILY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.DAILY;
        RRule.HOURLY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.HOURLY;
        RRule.MINUTELY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.MINUTELY;
        RRule.SECONDLY = _types__WEBPACK_IMPORTED_MODULE_4__.Frequency.SECONDLY;
        RRule.MO = _Days.MO;
        RRule.TU = _Days.TU;
        RRule.WE = _Days.WE;
        RRule.TH = _Days.TH;
        RRule.FR = _Days.FR;
        RRule.SA = _Days.SA;
        RRule.SU = _Days.SU;
        RRule.parseString = _parsestring__WEBPACK_IMPORTED_MODULE_6__.parseString;
        RRule.optionsToString = _optionstostring__WEBPACK_IMPORTED_MODULE_7__.optionsToString;
        return RRule;
      }();

      /***/
    }),
    /***/2476: (
    /*!*************************************************!*\
      !*** ./node_modules/rrule/dist/esm/rruleset.js ***!
      \*************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"RRuleSet": function RRuleSet() {
          return /* binding */_RRuleSet;
        }
        /* harmony export */
      });
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! tslib */42321);
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./rrule */8932);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./dateutil */98054);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./helpers */36853);
      /* harmony import */
      var _iterset__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./iterset */25882);
      /* harmony import */
      var _rrulestr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./rrulestr */4134);
      /* harmony import */
      var _optionstostring__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./optionstostring */13135);
      function createGetterSetter(fieldName) {
        var _this = this;
        return function (field) {
          if (field !== undefined) {
            _this["_".concat(fieldName)] = field;
          }
          if (_this["_".concat(fieldName)] !== undefined) {
            return _this["_".concat(fieldName)];
          }
          for (var i = 0; i < _this._rrule.length; i++) {
            var field_1 = _this._rrule[i].origOptions[fieldName];
            if (field_1) {
              return field_1;
            }
          }
        };
      }
      var _RRuleSet = /** @class */function (_super) {
        (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__extends)(RRuleSet, _super);
        /**
         *
         * @param {Boolean?} noCache
         * The same stratagy as RRule on cache, default to false
         * @constructor
         */
        function RRuleSet(noCache) {
          if (noCache === void 0) {
            noCache = false;
          }
          var _this = _super.call(this, {}, noCache) || this;
          _this.dtstart = createGetterSetter.apply(_this, ['dtstart']);
          _this.tzid = createGetterSetter.apply(_this, ['tzid']);
          _this._rrule = [];
          _this._rdate = [];
          _this._exrule = [];
          _this._exdate = [];
          return _this;
        }
        RRuleSet.prototype._iter = function (iterResult) {
          return (0, _iterset__WEBPACK_IMPORTED_MODULE_3__.iterSet)(iterResult, this._rrule, this._exrule, this._rdate, this._exdate, this.tzid());
        };
        /**
         * Adds an RRule to the set
         *
         * @param {RRule}
         */
        RRuleSet.prototype.rrule = function (rrule) {
          _addRule(rrule, this._rrule);
        };
        /**
         * Adds an EXRULE to the set
         *
         * @param {RRule}
         */
        RRuleSet.prototype.exrule = function (rrule) {
          _addRule(rrule, this._exrule);
        };
        /**
         * Adds an RDate to the set
         *
         * @param {Date}
         */
        RRuleSet.prototype.rdate = function (date) {
          _addDate(date, this._rdate);
        };
        /**
         * Adds an EXDATE to the set
         *
         * @param {Date}
         */
        RRuleSet.prototype.exdate = function (date) {
          _addDate(date, this._exdate);
        };
        /**
         * Get list of included rrules in this recurrence set.
         *
         * @return List of rrules
         */
        RRuleSet.prototype.rrules = function () {
          return this._rrule.map(function (e) {
            return (0, _rrulestr__WEBPACK_IMPORTED_MODULE_4__.rrulestr)(e.toString());
          });
        };
        /**
         * Get list of excluded rrules in this recurrence set.
         *
         * @return List of exrules
         */
        RRuleSet.prototype.exrules = function () {
          return this._exrule.map(function (e) {
            return (0, _rrulestr__WEBPACK_IMPORTED_MODULE_4__.rrulestr)(e.toString());
          });
        };
        /**
         * Get list of included datetimes in this recurrence set.
         *
         * @return List of rdates
         */
        RRuleSet.prototype.rdates = function () {
          return this._rdate.map(function (e) {
            return new Date(e.getTime());
          });
        };
        /**
         * Get list of included datetimes in this recurrence set.
         *
         * @return List of exdates
         */
        RRuleSet.prototype.exdates = function () {
          return this._exdate.map(function (e) {
            return new Date(e.getTime());
          });
        };
        RRuleSet.prototype.valueOf = function () {
          var result = [];
          if (!this._rrule.length && this._dtstart) {
            result = result.concat((0, _optionstostring__WEBPACK_IMPORTED_MODULE_5__.optionsToString)({
              dtstart: this._dtstart
            }));
          }
          this._rrule.forEach(function (rrule) {
            result = result.concat(rrule.toString().split('\n'));
          });
          this._exrule.forEach(function (exrule) {
            result = result.concat(exrule.toString().split('\n').map(function (line) {
              return line.replace(/^RRULE:/, 'EXRULE:');
            }).filter(function (line) {
              return !/^DTSTART/.test(line);
            }));
          });
          if (this._rdate.length) {
            result.push(rdatesToString('RDATE', this._rdate, this.tzid()));
          }
          if (this._exdate.length) {
            result.push(rdatesToString('EXDATE', this._exdate, this.tzid()));
          }
          return result;
        };
        /**
         * to generate recurrence field such as:
         * DTSTART:19970902T010000Z
         * RRULE:FREQ=YEARLY;COUNT=2;BYDAY=TU
         * RRULE:FREQ=YEARLY;COUNT=1;BYDAY=TH
         */
        RRuleSet.prototype.toString = function () {
          return this.valueOf().join('\n');
        };
        /**
         * Create a new RRuleSet Object completely base on current instance
         */
        RRuleSet.prototype.clone = function () {
          var rrs = new RRuleSet(!!this._cache);
          this._rrule.forEach(function (rule) {
            return rrs.rrule(rule.clone());
          });
          this._exrule.forEach(function (rule) {
            return rrs.exrule(rule.clone());
          });
          this._rdate.forEach(function (date) {
            return rrs.rdate(new Date(date.getTime()));
          });
          this._exdate.forEach(function (date) {
            return rrs.exdate(new Date(date.getTime()));
          });
          return rrs;
        };
        return RRuleSet;
      }(_rrule__WEBPACK_IMPORTED_MODULE_0__.RRule);
      function _addRule(rrule, collection) {
        if (!(rrule instanceof _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule)) {
          throw new TypeError(String(rrule) + ' is not RRule instance');
        }
        if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_2__.includes)(collection.map(String), String(rrule))) {
          collection.push(rrule);
        }
      }
      function _addDate(date, collection) {
        if (!(date instanceof Date)) {
          throw new TypeError(String(date) + ' is not Date instance');
        }
        if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_2__.includes)(collection.map(Number), Number(date))) {
          collection.push(date);
          (0, _dateutil__WEBPACK_IMPORTED_MODULE_1__.sort)(collection);
        }
      }
      function rdatesToString(param, rdates, tzid) {
        var isUTC = !tzid || tzid.toUpperCase() === 'UTC';
        var header = isUTC ? "".concat(param, ":") : "".concat(param, ";TZID=").concat(tzid, ":");
        var dateString = rdates.map(function (rdate) {
          return (0, _dateutil__WEBPACK_IMPORTED_MODULE_1__.timeToUntilString)(rdate.valueOf(), isUTC);
        }).join(',');
        return "".concat(header).concat(dateString);
      }

      /***/
    }),
    /***/4134: (
    /*!*************************************************!*\
      !*** ./node_modules/rrule/dist/esm/rrulestr.js ***!
      \*************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"parseInput": function parseInput() {
          return /* binding */_parseInput;
        },
        /* harmony export */"rrulestr": function rrulestr() {
          return /* binding */_rrulestr;
        }
        /* harmony export */
      });
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! tslib */42321);
      /* harmony import */
      var _rrule__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./rrule */8932);
      /* harmony import */
      var _rruleset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./rruleset */2476);
      /* harmony import */
      var _dateutil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./dateutil */98054);
      /* harmony import */
      var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./helpers */36853);
      /* harmony import */
      var _parsestring__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./parsestring */59643);

      /**
       * RRuleStr
       * To parse a set of rrule strings
       */
      var DEFAULT_OPTIONS = {
        dtstart: null,
        cache: false,
        unfold: false,
        forceset: false,
        compatible: false,
        tzid: null
      };
      function _parseInput(s, options) {
        var rrulevals = [];
        var rdatevals = [];
        var exrulevals = [];
        var exdatevals = [];
        var parsedDtstart = (0, _parsestring__WEBPACK_IMPORTED_MODULE_4__.parseDtstart)(s);
        var dtstart = parsedDtstart.dtstart;
        var tzid = parsedDtstart.tzid;
        var lines = splitIntoLines(s, options.unfold);
        lines.forEach(function (line) {
          var _a;
          if (!line) return;
          var _b = breakDownLine(line),
            name = _b.name,
            parms = _b.parms,
            value = _b.value;
          switch (name.toUpperCase()) {
            case 'RRULE':
              if (parms.length) {
                throw new Error("unsupported RRULE parm: ".concat(parms.join(',')));
              }
              rrulevals.push((0, _parsestring__WEBPACK_IMPORTED_MODULE_4__.parseString)(line));
              break;
            case 'RDATE':
              var _c = (_a = /RDATE(?:;TZID=([^:=]+))?/i.exec(line)) !== null && _a !== void 0 ? _a : [],
                rdateTzid = _c[1];
              if (rdateTzid && !tzid) {
                tzid = rdateTzid;
              }
              rdatevals = rdatevals.concat(parseRDate(value, parms));
              break;
            case 'EXRULE':
              if (parms.length) {
                throw new Error("unsupported EXRULE parm: ".concat(parms.join(',')));
              }
              exrulevals.push((0, _parsestring__WEBPACK_IMPORTED_MODULE_4__.parseString)(value));
              break;
            case 'EXDATE':
              exdatevals = exdatevals.concat(parseRDate(value, parms));
              break;
            case 'DTSTART':
              break;
            default:
              throw new Error('unsupported property: ' + name);
          }
        });
        return {
          dtstart: dtstart,
          tzid: tzid,
          rrulevals: rrulevals,
          rdatevals: rdatevals,
          exrulevals: exrulevals,
          exdatevals: exdatevals
        };
      }
      function buildRule(s, options) {
        var _a = _parseInput(s, options),
          rrulevals = _a.rrulevals,
          rdatevals = _a.rdatevals,
          exrulevals = _a.exrulevals,
          exdatevals = _a.exdatevals,
          dtstart = _a.dtstart,
          tzid = _a.tzid;
        var noCache = options.cache === false;
        if (options.compatible) {
          options.forceset = true;
          options.unfold = true;
        }
        if (options.forceset || rrulevals.length > 1 || rdatevals.length || exrulevals.length || exdatevals.length) {
          var rset_1 = new _rruleset__WEBPACK_IMPORTED_MODULE_1__.RRuleSet(noCache);
          rset_1.dtstart(dtstart);
          rset_1.tzid(tzid || undefined);
          rrulevals.forEach(function (val) {
            rset_1.rrule(new _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule(groomRruleOptions(val, dtstart, tzid), noCache));
          });
          rdatevals.forEach(function (date) {
            rset_1.rdate(date);
          });
          exrulevals.forEach(function (val) {
            rset_1.exrule(new _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule(groomRruleOptions(val, dtstart, tzid), noCache));
          });
          exdatevals.forEach(function (date) {
            rset_1.exdate(date);
          });
          if (options.compatible && options.dtstart) rset_1.rdate(dtstart);
          return rset_1;
        }
        var val = rrulevals[0] || {};
        return new _rrule__WEBPACK_IMPORTED_MODULE_0__.RRule(groomRruleOptions(val, val.dtstart || options.dtstart || dtstart, val.tzid || options.tzid || tzid), noCache);
      }
      function _rrulestr(s, options) {
        if (options === void 0) {
          options = {};
        }
        return buildRule(s, initializeOptions(options));
      }
      function groomRruleOptions(val, dtstart, tzid) {
        return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, val), {
          dtstart: dtstart,
          tzid: tzid
        });
      }
      function initializeOptions(options) {
        var invalid = [];
        var keys = Object.keys(options);
        var defaultKeys = Object.keys(DEFAULT_OPTIONS);
        keys.forEach(function (key) {
          if (!(0, _helpers__WEBPACK_IMPORTED_MODULE_3__.includes)(defaultKeys, key)) invalid.push(key);
        });
        if (invalid.length) {
          throw new Error('Invalid options: ' + invalid.join(', '));
        }
        return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, DEFAULT_OPTIONS), options);
      }
      function extractName(line) {
        if (line.indexOf(':') === -1) {
          return {
            name: 'RRULE',
            value: line
          };
        }
        var _a = (0, _helpers__WEBPACK_IMPORTED_MODULE_3__.split)(line, ':', 1),
          name = _a[0],
          value = _a[1];
        return {
          name: name,
          value: value
        };
      }
      function breakDownLine(line) {
        var _a = extractName(line),
          name = _a.name,
          value = _a.value;
        var parms = name.split(';');
        if (!parms) throw new Error('empty property name');
        return {
          name: parms[0].toUpperCase(),
          parms: parms.slice(1),
          value: value
        };
      }
      function splitIntoLines(s, unfold) {
        if (unfold === void 0) {
          unfold = false;
        }
        s = s && s.trim();
        if (!s) throw new Error('Invalid empty string');
        // More info about 'unfold' option
        // Go head to http://www.ietf.org/rfc/rfc2445.txt
        if (!unfold) {
          return s.split(/\s/);
        }
        var lines = s.split('\n');
        var i = 0;
        while (i < lines.length) {
          // TODO
          var line = lines[i] = lines[i].replace(/\s+$/g, '');
          if (!line) {
            lines.splice(i, 1);
          } else if (i > 0 && line[0] === ' ') {
            lines[i - 1] += line.slice(1);
            lines.splice(i, 1);
          } else {
            i += 1;
          }
        }
        return lines;
      }
      function validateDateParm(parms) {
        parms.forEach(function (parm) {
          if (!/(VALUE=DATE(-TIME)?)|(TZID=)/.test(parm)) {
            throw new Error('unsupported RDATE/EXDATE parm: ' + parm);
          }
        });
      }
      function parseRDate(rdateval, parms) {
        validateDateParm(parms);
        return rdateval.split(',').map(function (datestr) {
          return (0, _dateutil__WEBPACK_IMPORTED_MODULE_2__.untilStringToDate)(datestr);
        });
      }

      /***/
    }),
    /***/12905: (
    /*!**********************************************!*\
      !*** ./node_modules/rrule/dist/esm/types.js ***!
      \**********************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Frequency": function Frequency() {
          return /* binding */_Frequency;
        },
        /* harmony export */"freqIsDailyOrGreater": function freqIsDailyOrGreater() {
          return /* binding */_freqIsDailyOrGreater;
        }
        /* harmony export */
      });
      var _Frequency;
      (function (Frequency) {
        Frequency[Frequency["YEARLY"] = 0] = "YEARLY";
        Frequency[Frequency["MONTHLY"] = 1] = "MONTHLY";
        Frequency[Frequency["WEEKLY"] = 2] = "WEEKLY";
        Frequency[Frequency["DAILY"] = 3] = "DAILY";
        Frequency[Frequency["HOURLY"] = 4] = "HOURLY";
        Frequency[Frequency["MINUTELY"] = 5] = "MINUTELY";
        Frequency[Frequency["SECONDLY"] = 6] = "SECONDLY";
      })(_Frequency || (_Frequency = {}));
      function _freqIsDailyOrGreater(freq) {
        return freq < _Frequency.HOURLY;
      }

      /***/
    }),
    /***/57845: (
    /*!************************************************!*\
      !*** ./node_modules/rrule/dist/esm/weekday.js ***!
      \************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"ALL_WEEKDAYS": function ALL_WEEKDAYS() {
          return /* binding */_ALL_WEEKDAYS;
        },
        /* harmony export */"Weekday": function Weekday() {
          return /* binding */_Weekday;
        }
        /* harmony export */
      });
      // =============================================================================
      // Weekday
      // =============================================================================
      var _ALL_WEEKDAYS = ['MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];
      var _Weekday = /** @class */function () {
        function Weekday(weekday, n) {
          if (n === 0) throw new Error("Can't create weekday with n == 0");
          this.weekday = weekday;
          this.n = n;
        }
        Weekday.fromStr = function (str) {
          return new Weekday(_ALL_WEEKDAYS.indexOf(str));
        };
        // __call__ - Cannot call the object directly, do it through
        // e.g. RRule.TH.nth(-1) instead,
        Weekday.prototype.nth = function (n) {
          return this.n === n ? this : new Weekday(this.weekday, n);
        };
        // __eq__
        Weekday.prototype.equals = function (other) {
          return this.weekday === other.weekday && this.n === other.n;
        };
        // __repr__
        Weekday.prototype.toString = function () {
          var s = _ALL_WEEKDAYS[this.weekday];
          if (this.n) s = (this.n > 0 ? '+' : '') + String(this.n) + s;
          return s;
        };
        Weekday.prototype.getJsWeekday = function () {
          return this.weekday === 6 ? 0 : this.weekday + 1;
        };
        return Weekday;
      }();

      /***/
    }),
    /***/20823: (
    /*!*****************************************************************************!*\
      !*** ./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js ***!
      \*****************************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"default": function _default() {
          return /* binding */_objectDestructuringEmpty;
        }
        /* harmony export */
      });
      function _objectDestructuringEmpty(obj) {
        if (obj == null) throw new TypeError("Cannot destructure " + obj);
      }

      /***/
    })
  }]);
})();
//# sourceMappingURL=default-node_modules_devextreme-angular_fesm2015_devextreme-angular-ui-scheduler_js-es5.js.map