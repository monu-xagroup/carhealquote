{"version":3,"mappings":"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","names":["ReapirTableConfig","columns","id","sortable","header","text","tooltip","selector","field","widget","type","cellStyle","CasesTableConfig","CustomerTableConfig","CustomerCompanyTableConfig","_angular_core__WEBPACK_IMPORTED_MODULE_10__","PATHS","repair","cases","caseStatusMapper","src_app_config_route_mapper_repair_status_mapper__WEBPACK_IMPORTED_MODULE_3__","repairStatusMapper","CustomerDetailsComponent","monitorService","customerService","route","commonService","router","xaCurrencyPipe","_classCallCheck","src_app_widgets_chq_paginator_chq_paginator_component__WEBPACK_IMPORTED_MODULE_0__","src_app_config_display_customer_details_config__WEBPACK_IMPORTED_MODULE_1__","src_app_model_menu__WEBPACK_IMPORTED_MODULE_2__","row","column","find","ele","result","value","clickedRawData","_this","tableDataRepair","RepairNumber","routeToRedirect","Status","toLowerCase","navigate","replace","RepairGuid","tableDataCase","EstimateNumber","EstimationStatus","others","CaseGuid","sort","paginationRepair","orderBy","active","sortDirection","direction","getRepairOrders","paginationCase","getCases","i18n","geti18nInfo","_createClass","key","logEvent","userProfileData","subscribe","res","automotiveServices","data","userPermission","_this2","haveQuotePermissions","automotiveServiceName","params","customerId","uniqueId","userType","activeTab","tableConfigRepair","configDataRepair","tableConfigCase","configDataCase","count","totalCountRepair","currentPage","currentPageRepair","totalCountCase","currentPageCase","getUserDetails","_context2","userDetailsLoading","getCompanyDetails","then","response","_this3","userDetails","amount","amountReceived","amountDue","err","logException","_microsoft_applicationinsights_web__WEBPACK_IMPORTED_MODULE_13__","getCustomerDetails","showLoading","getReapirOrders","map","AmountDue","TotalInvoiceAmount","PaidAmount","FormattedTotalAmount","_this4","transform","currencySymbol","digitsInfo","locale","position","FormattedPaidAmount","FormattedDueAmount","hideLoading","FormattedTotalEstimateAmount","TotalEstimateAmount","_this5","event","pagination","pageSize","offset","pageChangedRepair","pageChangedCase","item","url","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_14__","ACTIVE_PATHS","COMPANY","PERSONAL","CustomerTableComponent","tableDataSer","caseService","calendarService","src_app_config_display_customer_table_config__WEBPACK_IMPORTED_MODULE_1__","personName","companyName","label","icon","onclick","applyFilter","bind","reSetFilter","options","placeHolder","name","displayValue","selectedOption","keyFieldName","isMultiSelect","required","_this6","getCustomers","paginationCompany","getCompanyCustomers","customerDetails","tableData","ContactId","next","Id","companyId","tableDataCompany","tableConfig","configData","tableConfigCompany","configDataCompany","_context5","paginationInfo","handlePaginationChange","getTotalDueAmountPerson","currentPageCompnay","getCompanyWorkProviders","responseB","length","workProviderFromBooking","CompanyOrgType","getTotalDueAmountCompany","dropdownModelFilter","observable","getProviders","onObservableLoad","onObservableLoadWorkProviderData","workProvider","dropdownModel","getObservable","subscription","_this7","userDetail","unsubscribe","queryParams","selectedCompanyForFilter","x","CompanyId","join","dueAmountClass","Amount","AmountReceived","undefined","dueAmountPrecent","_this8","FormattedCompanyName","CompanyName","LicenseNumber","_microsoft_applicationinsights_web__WEBPACK_IMPORTED_MODULE_17__","selectedFilter","dropdownModelFilterPerson","_context7","textToSearch","empName","_this9","showTotalDueAmountCompany","query","_this10","dueAmountCompanyClass","totalDueAmountCompany","TotalAmount","TotalAmountReceived","showTotalDueAmountPerson","_context9","_this11","dueAmountPersonClass","totalDueAmountPerson","pageChanged","pageChangedCompany","$event","organizationDetail","hideShowDropdown","dropdownModelCompany","getCustomer","onObservableLoadCompanyData","setTimeout","updateApplyButtonState","nameTextBox","state","activeTabOptions","toString","input","applyButtonModel","Object","keys","forEach","_this13","items","i","html","filteredItems","filter","_this14","indexOf","dropdownOptions","viewQuery","path","component","_customer_list_customer_table_component__WEBPACK_IMPORTED_MODULE_3__","resolve","version","src_app_resolvers_versionControl_resolver__WEBPACK_IMPORTED_MODULE_0__","_customer_details_customer_details_component__WEBPACK_IMPORTED_MODULE_4__","CustomerTableModule","_angular_common__WEBPACK_IMPORTED_MODULE_7__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_8__","src_app_icons_module__WEBPACK_IMPORTED_MODULE_1__","_angular_router__WEBPACK_IMPORTED_MODULE_9__","_angular_material_menu__WEBPACK_IMPORTED_MODULE_10__","src_app_widgets_chq_widgets_module__WEBPACK_IMPORTED_MODULE_2__","_angular_material_expansion__WEBPACK_IMPORTED_MODULE_11__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_12__","src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_5__","declarations","imports","VersionControlResolver","checkVersion","pipe","_this15","localVersion","localStorage","getItem","appVersion","buildRevision","setItem","location","reload","factory","providedIn","CustomerService","http","skip","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","get"],"sources":["webpack:///src/app/config/display/customer-details-config.ts","webpack:///src/app/config/display/customer-table-config.ts","webpack:///src/app/modules/repair/customer/customer-details/customer-details.component.html","webpack:///src/app/modules/repair/customer/customer-details/customer-details.component.ts","webpack:///src/app/modules/repair/customer/customer-list/customer-table.component.html","webpack:///src/app/modules/repair/customer/customer-list/customer-table.component.ts","webpack:///src/app/modules/repair/customer/customer.module.ts","webpack:///src/app/resolvers/versionControl.resolver.ts","webpack:///src/app/services/customer/customer.service.ts"],"sourcesContent":["export const ReapirTableConfig = {\n  columns: [\n    {\n      id: 'Id',\n      sortable: true,\n      header: {\n        text: 'booking_id',\n        tooltip: '',\n      },\n      selector: {\n        field: 'RepairNumber',\n      },\n      widget: {\n        type: 'text'\n      },\n      cellStyle: 'text-decoration: underline; color: var(--xa-primary);',\n    },\n    {\n      id: 'CreatedDate',\n      sortable: true,\n      header: {\n        text: 'creation_date',\n        tooltip: '',\n      },\n      selector: {\n        field: 'CreatedDate',\n      },\n      widget: {\n        type: 'dateTime'\n      },\n    },\n    {\n      id: 'VehicleMake',\n      sortable: true,\n      header: {\n        text: 'vehicle_make',\n        tooltip: '',\n      },\n      selector: {\n        field: 'VehicleMake',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'VehicleModel',\n      sortable: true,\n      header: {\n        text: 'vehicle_model',\n        tooltip: '',\n      },\n      selector: {\n        field: 'VehicleModel',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'LicensePlateNumber',\n      sortable: true,\n      header: {\n        text: 'license_plate',\n        tooltip: '',\n      },\n      selector: {\n        field: 'LicensePlateNumber',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'BookingType',\n      sortable: true,\n      header: {\n        text: 'booking_type',\n        tooltip: '',\n      },\n      selector: {\n        field: 'BookingType',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'RepairType',\n      sortable: true,\n      header: {\n        text: 'repair_type',\n        tooltip: '',\n      },\n      selector: {\n        field: 'RepairType',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'TotalInvoiceAmount',\n      sortable: true,\n      header: {\n        text: 'total_amount_invoiced',\n        tooltip: '',\n      },\n      selector: {\n        field: 'FormattedTotalAmount',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'PaidAmount',\n      sortable: true,\n      header: {\n        text: 'paid_amount',\n        tooltip: '',\n      },\n      selector: {\n        field: 'FormattedPaidAmount',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'AmountDue',\n      sortable: true,\n      header: {\n        text: 'due_amount',\n        tooltip: '',\n      },\n      selector: {\n        field: 'FormattedDueAmount',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'Status',\n      sortable: true,\n      header: {\n        text: 'status',\n        tooltip: '',\n      },\n      selector: {\n        field: 'Status',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n  ]\n}\n\n\nexport const CasesTableConfig = {\n  columns: [\n    {\n      id: 'Id',\n      sortable: true,\n      header: {\n        text: 'estimate_id',\n        tooltip: '',\n      },\n      selector: {\n        field: 'EstimateNumber',\n      },\n      widget: {\n        type: 'text'\n      },\n      cellStyle: 'text-decoration: underline; color: var(--xa-primary);',\n    },\n    {\n      id: 'CreatedDate',\n      sortable: true,\n      header: {\n        text: 'creation_date',\n        tooltip: '',\n      },\n      selector: {\n        field: 'CreatedDate',\n      },\n      widget: {\n        type: 'dateTime'\n      },\n    },\n    {\n      id: 'VehicleMake',\n      sortable: true,\n      header: {\n        text: 'vehicle_make',\n        tooltip: '',\n      },\n      selector: {\n        field: 'VehicleMake',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'VehicleModel',\n      sortable: true,\n      header: {\n        text: 'vehicle_model',\n        tooltip: '',\n      },\n      selector: {\n        field: 'VehicleModel',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'LicensePlateNumber',\n      sortable: true,\n      header: {\n        text: 'license_plate',\n        tooltip: '',\n      },\n      selector: {\n        field: 'LicensePlateNumber',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'TotalEstimateAmount ',\n      sortable: true,\n      header: {\n        text: 'total_estimate_amount',\n        tooltip: '',\n      },\n      selector: {\n        field: 'FormattedTotalEstimateAmount',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n    {\n      id: 'EstimationStatus',\n      sortable: true,\n      header: {\n        text: 'estimation_status',\n        tooltip: '',\n      },\n      selector: {\n        field: 'EstimationStatus',\n      },\n      widget: {\n        type: 'text'\n      }\n    },\n  ]\n}","\nexport const CustomerTableConfig = {\n  columns: [\n    {\n      id: 'ContactId',\n      sortable: true,\n      header: {\n        text: 'id',\n        tooltip: '',\n      },\n      selector: {\n        field: 'ContactId',\n      },\n      widget: {\n        type: 'text'\n      },\n      cellStyle: 'text-decoration: underline; color: var(--xa-primary);',\n    },\n    {\n      id: 'CreatedDate',\n      sortable: true,\n      header: {\n        text: 'creation_date',\n        tooltip: '',\n      },\n      selector: {\n        field: 'CreatedDate',\n      },\n      widget: {\n        type: 'dateTime'\n      }\n    },\n    {\n      id: 'FirstName',\n      sortable: true,\n      selector: {\n        field: 'FirstName',\n      },\n      header: {\n        text: 'first_name',\n        tooltip: '',\n      },\n      widget: {\n        type: 'text',\n      },\n    },\n    {\n      id: 'LastName',\n      sortable: true,\n      selector: {\n        field: 'LastName',\n      },\n      header: {\n        text: 'last_name',\n        tooltip: '',\n      },\n      widget: {\n        type: 'text',\n      },\n    },\n    {\n      id: 'MobileNumber',\n      sortable: true,\n      selector: {\n        field: 'MobileNumber',\n      },\n      header: {\n        text: 'mobile_number',\n        tooltip: '',\n      },\n      widget: {\n        type: 'text',\n      },\n    },\n    {\n      id: 'Email',\n      sortable: true,\n      selector: {\n        field: 'Email',\n      },\n      header: {\n        text: 'email_address',\n        tooltip: '',\n      },\n      widget: {\n        type: 'text',\n      },\n    },\n    {\n      id: 'Amount',\n      sortable: true,\n      selector: {\n        field: 'FormattedTotalAmount',\n      },\n      cellStyle: 'justify-content:center;',\n      header: {\n        text: 'total_amount_invoiced',\n        tooltip: '',\n      },\n      widget: {\n        type: 'text',\n      },\n    },\n    {\n      id: 'AmountReceived',\n      sortable: true,\n      cellStyle: 'justify-content:center;',\n      selector: {\n        field: 'FormattedPaidAmount',\n      },\n      header: {\n        text: 'paid_amount',\n        tooltip: '',\n      },\n      widget: {\n        type: 'text',\n      },\n    },\n    {\n      id: 'AmountDue',\n      sortable: true,\n      cellStyle: 'justify-content:center;',\n      selector: {\n        field: 'FormattedDueAmount',\n      },\n      header: {\n        text: 'due_amount',\n        tooltip: '',\n      },\n      widget: {\n        type: 'html',\n      },\n    }\n  ]\n}\n\nexport const CustomerCompanyTableConfig = {\n  columns: [\n    {\n      id: 'ContactId',\n      sortable: true,\n      header: {\n        text: 'id',\n        tooltip: '',\n      },\n      selector: {\n        field: 'ContactId',\n      },\n      widget: {\n        type: 'text'\n      },\n      cellStyle: 'text-decoration: underline; color: var(--xa-primary);',\n    },\n    {\n      id: 'CreatedDate',\n      sortable: true,\n      header: {\n        text: 'creation_date',\n        tooltip: '',\n      },\n      selector: {\n        field: 'CreatedDate',\n      },\n      widget: {\n        type: 'dateTime'\n      }\n    },\n    {\n      id: 'CompanyName',\n      sortable: true,\n      selector: {\n        field: 'FormattedCompanyName',\n      },\n      header: {\n        text: 'company_name',\n        tooltip: '',\n      },\n      widget: {\n        type: 'html',\n      },\n    },\n    {\n      id: 'Amount',\n      sortable: true,\n      selector: {\n        field: 'FormattedTotalAmount',\n      },\n      header: {\n        text: 'total_amount_invoiced',\n        tooltip: '',\n      },\n      widget: {\n        type: 'text',\n      },\n      cellStyle: 'justify-content:center;',\n    },\n    {\n      id: 'AmountReceived',\n      sortable: true,\n      selector: {\n        field: 'FormattedPaidAmount',\n      },\n      header: {\n        text: 'paid_amount',\n        tooltip: '',\n      },\n      widget: {\n        type: 'text',\n      },\n      cellStyle: 'justify-content:center;',\n    },\n    {\n      id: 'AmountDue',\n      sortable: true,\n      selector: {\n        field: 'FormattedDueAmount',\n      },\n      header: {\n        text: 'due_amount',\n        tooltip: '',\n      },\n      widget: {\n        type: 'html',\n      },\n      cellStyle: 'justify-content:center;',\n    }\n  ]\n}","<div class=\"main-customer-details fx-col\">\n    <section class=\"header d-flex align-center position-relative fx-0\">\n        <div class=\"\">\n            <div class=\"back-section d-flex align-center\" (click)=\"handleBackClick()\">\n                <mat-icon [svgIcon]=\"'left-arrow'\" class=\"cross\"></mat-icon> \n                <span>{{ 'back' | translate}} / {{userType | translate}}  </span>\n            </div>\n            <chq-tabs *ngIf=\"haveQuotePermissions\" [mode]=\"'button'\" [menuItems]=\"customerDetailsMenus\" (menuItemClick)=\"navigate($event);\"></chq-tabs>\n        </div>\n        <div class=\"user-details\" *ngIf=\"userDetails && !userDetailsLoading\">\n            <mat-accordion *ngIf=\"userType === 'company'\">\n                <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        <h4>{{ userDetails?.companyName }}</h4>\n                        <p class=\"sub-heading\">\n                            <label >{{ 'contact_id' | translate }}:</label>  \n                            {{userDetails?.contactId }}\n                        </p>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div>\n                    <p class=\"expanded-sub-heading\"><label>{{ 'creation_date' | translate }}:</label>  {{userDetails?.createdDate | date:'dd/MM/YYYY hh:mm:ss'}}</p>\n                    <p class=\"expanded-sub-heading\"><label>{{ 'total_invoiced' | translate }}:</label>  {{userDetails?.amount | xaCurrency:i18n.currencySymbol:i18n.digitsInfo:i18n.locale:i18n.position}}</p>\n                    <p class=\"expanded-sub-heading\"><label>{{ 'paid_amount' | translate }}:</label>  {{userDetails?.amountReceived | xaCurrency:i18n.currencySymbol:i18n.digitsInfo:i18n.locale:i18n.position}}</p>\n                    <p class=\"expanded-sub-heading\"><label>{{ 'due_amount' | translate }}:</label>  {{userDetails?.amountDue | xaCurrency:i18n.currencySymbol:i18n.digitsInfo:i18n.locale:i18n.position}}</p>\n                    <p class=\"expanded-sub-heading\"><label>{{ 'contact_name' | translate }}:</label>  {{userDetails?.contactName}}</p>\n                    <!-- <p class=\"expanded-sub-heading\"><label>{{ 'contact_surname' | translate }}:</label>  {{userDetails?.ContactSurname}}</p> -->\n                    <p class=\"expanded-sub-heading\"><label>{{ 'contact_phone' | translate }}:</label>  {{userDetails?.contactPhoneNumber}}</p>\n                    <p class=\"expanded-sub-heading\"><label>{{ 'contact_email' | translate }}:</label>  {{userDetails?.contactEmail}}</p>\n                </div>\n                </mat-expansion-panel>\n            </mat-accordion>\n\n            <mat-accordion *ngIf=\"userType === 'individual'\">\n                <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        <h4>{{ userDetails?.firstName }} {{ userDetails?.lastName }}</h4>\n                        <p class=\"sub-heading\"><label>{{ 'contact_id' | translate }}:</label>  {{userDetails?.contactId }}</p>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div>\n                    <p class=\"expanded-sub-heading\"><label>{{ 'email' | translate }}:</label>  {{userDetails.email}}</p>\n                    <p class=\"expanded-sub-heading\"><label>{{ 'phone_number' | translate }}:</label>  {{userDetails.mobileNumber}}</p>\n                </div>\n                </mat-expansion-panel>\n            </mat-accordion>\n        </div>\n    </section>\n    <div class=\"table-section fx-1\">\n        <section *ngIf=\"this.activeTab === this.tabOptions.repair\">\n            <div class=\"table-container\">\n                <div class=\"table-wrapper\">\n                    <chq-mat-table \n                        [config]=\"tableConfigRepair\" \n                        [tableData]=\"tableDataRepair\" \n                        [cellClicked]=\"handleCellClickRepair\"\n                        [sortChanged]=\"handleSortChangeRepair\" \n                        [pageChanged]=\"pageChangedRepair\" [i18n]=\"i18n\"\n                    ></chq-mat-table>\n                </div>\n                <div class=\"pagination-wrapper\" *ngIf=\"tableDataRepair?.length > 0 && (paginationRepair.count > paginationRepair.pageSize)\">\n                    <chq-paginator #paginator (paginationChange)=\"handlePaginationChangeReapir($event)\"\n                        [pagination]=\"paginationRepair\">\n                    </chq-paginator>\n                </div>        \n            </div>\n        </section>\n        <section *ngIf=\"this.activeTab === this.tabOptions.cases\">\n            <div class=\"table-container\">\n                <div class=\"table-wrapper\">\n                    <chq-mat-table [config]=\"tableConfigCase\" [tableData]=\"tableDataCase\" [cellClicked]=\"handleCellClickCase\"\n                    [sortChanged]=\"handleSortChangeCase\"\n                    [pageChanged]=\"pageChangedCase\" [i18n]=\"i18n\"></chq-mat-table>\n                </div>\n                <div class=\"pagination-wrapper\" *ngIf=\"tableDataCase?.length > 0 && (paginationCase.count > paginationCase.pageSize)\">\n                    <chq-paginator #paginator (paginationChange)=\"handlePaginationChangeCase($event)\"\n                        [pagination]=\"paginationCase\">\n                    </chq-paginator>\n                </div>        \n            </div>\n        </section> \n    </div>\n    <footer>\n        <div class=\"footer-full-wrapper\">\n            <div class=\"footer-image-wrapper\">\n                <div class=\"image-wrapper\">\n                    <img src=\"assets/img/addenda-repair.png\" />\n                </div>\n            </div>\n        </div>\n    </footer>\n</div>","import { Component } from '@angular/core';\nimport { CellClickedCallback, SortChangedCallback, TableCellData, TableConfig, TableRowData } from 'src/app/widgets/chq-mat-table/chq-mat-table.component';\nimport { Sort } from '@angular/material/sort';\nimport { firstValueFrom } from 'rxjs';\nimport { ApiPagination, defaultPagination, PaginateInfo } from 'src/app/widgets/chq-paginator/chq-paginator.component';\nimport { CustomerService } from 'src/app/services/customer/customer.service';\nimport { CommonService, i18nInfo } from 'src/app/services/common/common.service';\nimport { ReapirTableConfig, CasesTableConfig } from 'src/app/config/display/customer-details-config';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { customerDetailsMenus, menuItem } from 'src/app/model/menu';\nimport { formatCurrency, formatNumber } from '@angular/common';\nimport { SeverityLevel } from '@microsoft/applicationinsights-web';\nimport { MonitorService } from 'src/app/services/monitor-service/monitor.service';\nimport { XaCurrencyPipe } from 'src/app/helper/pipe/xa-currency/xa-currency.pipe';\n\nimport { CaseStatusMapper, RepairStatusMapper } from 'src/app/config/route-mapper/repair-status-mapper';\nconst PATHS = {\n  repair: 'repair-order',\n  cases: 'estimates'\n}\n\nconst caseStatusMapper = CaseStatusMapper\n\nconst repairStatusMapper = RepairStatusMapper\n\n@Component({\n  selector: 'customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: [ './customer-details.component.scss' ]\n})\nexport class CustomerDetailsComponent {\n  panelOpenState = false;\n  public tableConfigRepair: TableConfig;\n  public tableDataRepair: any;\n  public pageChangedRepair: boolean = false;\n  public paginationRepair: ApiPagination = defaultPagination;\n  public static currentPageRepair: number = 1;\n  public totalCountRepair: number = 0;\n  private readonly configDataRepair: any = ReapirTableConfig;\n\n\n  public tableConfigCase: TableConfig;\n  public tableDataCase: any;\n  public pageChangedCase: boolean = false;\n  public paginationCase: ApiPagination = defaultPagination;\n  public static currentPageCase: number = 1;\n  public totalCountCase: number = 0;\n  private readonly configDataCase: any = CasesTableConfig;\n\n\n  public userDetails: any = {};\n  public customerId: string = '';\n  public uniqueId: string = '';\n  public userType: string = '';\n  public haveQuotePermissions: boolean = false;\n  public userDetailsLoading: boolean = false;\n\n  // Tabs Menu\n  public customerDetailsMenus = customerDetailsMenus;\n  public activeTab: string = ''\n  public tabOptions = PATHS;\n  \n  i18n: i18nInfo;\n\n  /**\n    Constructor for the CustomerService class.\n    @constructor\n    @param {CustomerService} customerService - The CustomerService instance to be used in the constructor.\n    @param {CommonService} commonService - The CommonService instance to be used in the constructor.\n    @param {Router} router - The Router instance.\n  */\n  constructor(\n    private monitorService: MonitorService,\n    private customerService: CustomerService,\n    private route: ActivatedRoute,\n    private commonService: CommonService,\n    private router: Router,\n    private xaCurrencyPipe: XaCurrencyPipe) {\n    this.i18n = this.commonService.geti18nInfo();\n  }\n\n  /**\n    Lifecycle hook that is called after the component is initialized.\n    @returns {Promise} A promise that resolves when the initialization is complete.\n  */\n  async ngOnInit(): Promise<void> {\n    this.monitorService.logEvent('ngOnInit', [ 'CustomerDetailsComponent', 'addenda-repair' ]);\n\n    this.commonService.userProfileData.subscribe((res: any) => {\n      const automotiveServices = res?.data?.userPermission?.automotiveServices || []; \n      this.haveQuotePermissions = automotiveServices.find(ele => ele.automotiveServiceName === 'Carheal Quote')\n    })\n\n    this.route.params.subscribe((params) => {\n      this.customerId = params['contactId'];\n      this.uniqueId = params['id'];\n      this.userType = params['userType']; \n\n      this.activeTab = params['orderType'];\n      this.tableConfigRepair = this.configDataRepair;\n      this.tableConfigCase = this.configDataCase;\n\n      this.paginationRepair = {\n        ...this.paginationRepair, ...{\n          count: this.totalCountRepair,\n          currentPage: CustomerDetailsComponent.currentPageRepair,\n          orderBy: 'CreatedDate',\n          sortDirection: 'desc'\n        }\n      };\n      this.paginationCase = {\n        ...this.paginationCase, ...{\n          count: this.totalCountCase,\n          currentPage: CustomerDetailsComponent.currentPageCase,\n          orderBy: 'CreatedDate',\n          sortDirection: 'desc'\n        }\n      };\n      if(this.activeTab === PATHS.repair) this.getRepairOrders();\n      else this.getCases();\n      this.getUserDetails();\n    });\n\n    \n  }\n\n  /**\n    Get Customer details\n    @returns {Promise} A promise that resolves when the repair orders are retrieved and the table data is updated.\n  */\n  public async getUserDetails(): Promise<any> {\n    if(this.userType === 'company') {\n      this.userDetailsLoading = true;\n      return firstValueFrom(this.customerService.getCompanyDetails(this.customerId)).then((response) => {\n        if(response?.data) {\n          this.userDetails = response.data;\n          if(!this.userDetails.amount) this.userDetails.amount = 0\n          if(!this.userDetails.amountReceived) this.userDetails.amountReceived = 0\n          if(!this.userDetails.amountDue) this.userDetails.amountDue = 0\n          this.userDetailsLoading = false;\n        }\n      }).catch((err) => {\n        this.monitorService.logException(err, SeverityLevel.Error);\n      });\n    } else {\n      this.userDetailsLoading = true;\n      return firstValueFrom(this.customerService.getCustomerDetails(this.uniqueId)).then((response) => {\n        if(response?.data) {\n          this.userDetails = response.data;\n          this.userDetailsLoading = false;\n        }\n      }).catch((err) => {\n        this.monitorService.logException(err, SeverityLevel.Error);\n      });\n    }\n  }\n\n  /**\n    Retrieves repair orders from the customer service and updates the table data for the repair orders.\n    @returns {Promise} A promise that resolves when the repair orders are retrieved and the table data is updated.\n  */\n  public async getRepairOrders(): Promise<any> {\n    this.commonService.showLoading();\n    return firstValueFrom(this.customerService.getReapirOrders(this.customerId, this.userType, this.paginationRepair)).then((response) => {\n      const result = response.value\n      result.map((ele) => {\n        ele.AmountDue = ele.TotalInvoiceAmount - ele.PaidAmount;\n        ele.FormattedTotalAmount = ele.TotalInvoiceAmount ? this.xaCurrencyPipe.transform(ele.TotalInvoiceAmount, this.i18n.currencySymbol, this.i18n.digitsInfo, this.i18n.locale, this.i18n.position) : '-'\n        ele.FormattedPaidAmount = ele.PaidAmount ? this.xaCurrencyPipe.transform(ele.PaidAmount, this.i18n.currencySymbol, this.i18n.digitsInfo, this.i18n.locale, this.i18n.position) : '-'\n        ele.FormattedDueAmount = ele.TotalInvoiceAmount ? this.xaCurrencyPipe.transform(ele.AmountDue, this.i18n.currencySymbol, this.i18n.digitsInfo, this.i18n.locale, this.i18n.position) : '-'\n      })\n      this.tableDataRepair = result;\n      this.paginationRepair = { ...this.paginationRepair, count: response['@odata.count'] || 0 };\n      this.commonService.hideLoading();\n    }).catch((err) => {\n      this.monitorService.logException(err, SeverityLevel.Error);\n      this.commonService.hideLoading();\n    });\n  }\n\n  /**\n    Retrieves cases from the customer service and updates the table data with the response.\n    @returns {Promise} A promise that resolves when the cases are retrieved and the table data is updated.\n  */\n  public async getCases(): Promise<any> {\n    this.commonService.showLoading();\n    return firstValueFrom(this.customerService.getCases(this.customerId, this.userType, this.paginationCase)).then((response) => {\n      const result = response.value\n      result.map((ele) => {\n        ele.FormattedTotalEstimateAmount = ele.TotalEstimateAmount ? this.xaCurrencyPipe.transform(ele.TotalEstimateAmount, this.i18n.currencySymbol, this.i18n.digitsInfo, this.i18n.locale, this.i18n.position) : '-'\n      })\n      this.tableDataCase = result;\n      this.paginationCase = { ...this.paginationCase, count: response['@odata.count'] || 0 };\n      this.commonService.hideLoading();\n    }).catch((err) => {\n      this.monitorService.logException(err, SeverityLevel.Error);\n      this.commonService.hideLoading();\n    });\n  }\n\n  /**\n    @description Handles a cell click event for a repair table.\n    @param {TableRowData} row - The row data for the clicked cell.\n    @param {Partial} column - The column data for the clicked cell.\n    @returns {void}\n  */\n  handleCellClickRepair: CellClickedCallback = (row: TableRowData, column: Partial<TableCellData>): void => {\n    if(column.id === 'Id') {\n      const id = row.find(ele => ele.id === column.id)?.result?.value;\n      if(id) {\n        const clickedRawData = this.tableDataRepair.find(ele => ele.RepairNumber === id)\n        if(clickedRawData) {\n          const routeToRedirect = RepairStatusMapper[clickedRawData.Status.toLowerCase()] || RepairStatusMapper.others;\n          this.router.navigate([ routeToRedirect.replace('{{repairGUID}}', clickedRawData.RepairGuid) ]);\n        }\n      }\n    }\n  }\n\n  /**\n    @description Handles a cell click event for a case.\n    @param {TableRowData} row - The row data for the clicked cell.\n    @param {Partial} column - The column data for the clicked cell.\n    @returns {void}\n  */\n  handleCellClickCase: CellClickedCallback = (row: TableRowData, column: Partial<TableCellData>): void => {\n    if(column.id === 'Id') {\n      const id = row.find(ele => ele.id === column.id)?.result?.value;\n      if(id) {\n        const clickedRawData = this.tableDataCase.find(ele => ele.EstimateNumber === id)\n        if(clickedRawData) {\n          const routeToRedirect = caseStatusMapper[clickedRawData.EstimationStatus.toLowerCase()] || caseStatusMapper.others;\n          this.router.navigate([ routeToRedirect.replace('{{caseGUID}}', clickedRawData.CaseGuid) ]);\n        }\n      }\n    }\n  }\n\n  /**\n    A function that handles a change in the sorting of data for a repair table.\n    @param {Sort} sort - The new sorting criteria.\n    @returns {void}\n  */\n  handleSortChangeRepair: SortChangedCallback = (sort: Sort): void => {\n    if (sort) {\n      this.paginationRepair = { ...this.paginationRepair, ...{ orderBy: sort.active, sortDirection: sort.direction } };\n      this.getRepairOrders()\n    }\n  }\n\n  /**\n    @description Handles a change in the sorting of data for a case table.\n    @param {Sort} sort - The new sorting criteria.\n    @returns {void}\n  */\n  handleSortChangeCase: SortChangedCallback = (sort: Sort): void => {\n    if (sort) {\n      this.paginationCase = { ...this.paginationCase, ...{ orderBy: sort.active, sortDirection: sort.direction } };\n      this.getCases()\n    }\n  }\n\n  /**\n   * handlePaginationChange\n   * @param event\n   */\n  handlePaginationChangeReapir(event: PaginateInfo): void {\n    const pagination: ApiPagination = {\n      pageSize: event.pageSize,\n      offset: event.offset,\n      currentPage: event.currentPage\n    };\n\n    this.paginationRepair.currentPage = event.currentPage;\n    this.paginationRepair = { ...this.paginationRepair, ...pagination };\n\n    this.pageChangedRepair = true;\n    this.getRepairOrders()\n  }\n\n  /**\n   * handlePaginationChange\n   * @param event\n   */\n  handlePaginationChangeCase(event: PaginateInfo): void {\n    const pagination: ApiPagination = {\n      pageSize: event.pageSize,\n      offset: event.offset,\n      currentPage: event.currentPage\n    };\n\n    this.paginationCase.currentPage = event.currentPage;\n    this.paginationCase = { ...this.paginationCase, ...pagination };\n\n    this.pageChangedCase = true;\n    this.getCases()\n  }\n\n  /**\n    Navigates to the specified menu item's URL using the Angular Router.\n    @param {menuItem} item - The menu item to navigate to.\n    @returns {void}\n  */\n  navigate(item:menuItem): void{\n    const url = item.url;\n    if(this.userType && this.customerId) {\n      this.router.navigate([ url.replace('{userType}', this.userType).replace('{customerId}', this.customerId).replace('{id}', this.uniqueId) ]);\n    }\n    \n  }\n\n  /**\n    Navigates to the customer listing based on usertype using the Angular Router.\n    @returns {void}\n  */\n  handleBackClick(): void{\n    this.router.navigate([ '/repair/customers/{userType}'.replace('{userType}', this.userType) ]);\n  }\n}\n","<div class=\"main-customer-list customer-list fx-col\">\n    <div class=\"header-container fx-0\">\n        <chq-tabs [mode]=\"'button'\" [menuItems]=\"customerListMenus\" (menuItemClick)=\"navigate($event);\"></chq-tabs>\n        <div class=\"filter\" *ngIf=\"this.activeTab === activeTabOptions.COMPANY\">\n            <chq-dropdown [dropdownModel]=\"dropdownModelFilter\" #workProvider \n                (selected)=\"selectFilter($event)\" class=\"company-filter-dropdown\">\n            </chq-dropdown>\n            <chq-dropdown #companyName *ngIf=\"input.companyName\" [dropdownModel]=\"dropdownModelCompany\" (selected)=\"selectFilter($event)\" class=\"bodyShop-filter-dropdown\">\n            </chq-dropdown>\n            <chq-button [buttonModel]=\"applyButtonModel\"></chq-button>\n            <chq-button [buttonModel]=\"resetButtonModel\"></chq-button>\n        </div>\n        <div class=\"filter\" *ngIf=\"this.activeTab === activeTabOptions.PERSONAL\">\n            <chq-dropdown [dropdownModel]=\"dropdownModelFilterPerson\" #filterPerson\n                (selected)=\"selectFilter($event)\" class=\"person-filter-dropdown\">\n            </chq-dropdown>\n            <chq-input *ngIf=\"input.personName\" [inputModel]=\"nameTextBox\" (controlOutput)=\"updateInput($event)\">\n            </chq-input>\n            <chq-button [buttonModel]=\"applyButtonModel\"></chq-button>\n            <chq-button [buttonModel]=\"resetButtonModel\"></chq-button>\n        </div>\n\n    </div>\n    <div class=\"pending-amount fx-0\">\n        <div class=\"total-due-amount\" *ngIf=\"activeTab === activeTabOptions.PERSONAL && tableData?.length > 0 && showTotalDueAmountPerson\">\n            <span>{{'total_due_amount' | translate}}: \n                <span *ngIf=\"totalDueAmountPerson !== '-'\" class=\"{{dueAmountPersonClass}}\">{{totalDueAmountPerson | xaCurrency:i18n.currencySymbol:i18n.digitsInfo:i18n.locale:i18n.position}}</span> \n                <span *ngIf=\"totalDueAmountPerson === '-'\">{{totalDueAmountPerson}}</span> \n            </span>\n        </div>\n        <div class=\"total-due-amount\" *ngIf=\"activeTab === activeTabOptions.COMPANY && tableDataCompany?.length > 0 && showTotalDueAmountCompany\">\n            <span>{{'total_due_amount' | translate}}: \n                <span *ngIf=\"totalDueAmountCompany !== '-'\" class=\"{{dueAmountCompanyClass}}\">{{totalDueAmountCompany | xaCurrency:i18n.currencySymbol:i18n.digitsInfo:i18n.locale:i18n.position}}</span> \n                <span *ngIf=\"totalDueAmountCompany === '-'\">{{totalDueAmountCompany}}</span> \n            </span>\n        </div>\n    </div>\n    <div class=\"table-section fx-1\">\n        <div class=\"table-container\" *ngIf=\"activeTab === activeTabOptions.PERSONAL\">\n            <div class=\"table-wrapper\">\n                <chq-mat-table [config]=\"tableConfig\" [tableData]=\"tableData\" [sortChanged]=\"handleSortChange\"\n                [pageChanged]=\"pageChanged\" [cellClicked]=\"handleCellClick\" [i18n]=\"i18n\"></chq-mat-table>\n            </div>\n            <div class=\"pagination-wrapper\" *ngIf=\"tableData?.length > 0 && (pagination.count > pagination.pageSize)\">\n                <chq-paginator #paginator (paginationChange)=\"handlePaginationChange($event)\"\n                    [pagination]=\"pagination\">\n                </chq-paginator>\n            </div>      \n        </div>\n        <div class=\"table-container\" *ngIf=\"activeTab === activeTabOptions.COMPANY\">\n            <div class=\"table-wrapper\">\n                <chq-mat-table [config]=\"tableConfigCompany\" [tableData]=\"tableDataCompany\" [sortChanged]=\"handleSortChangeCompany\"\n                [pageChanged]=\"pageChangedCompany\" [cellClicked]=\"handleCellClickCompany\" [i18n]=\"i18n\"></chq-mat-table>\n            </div>\n            <div class=\"pagination-wrapper\" *ngIf=\"tableDataCompany?.length > 0 && (paginationCompany.count > pagination.pageSize)\">\n                <chq-paginator #paginatorCompany (paginationChange)=\"handlePaginationChangeCompany($event)\"\n                    [pagination]=\"paginationCompany\">\n                </chq-paginator>\n            </div>      \n        </div>\n    </div>\n    <div class=\"footer-full-wrapper\">\n        <div class=\"footer-image-wrapper\">\n            <div class=\"image-wrapper\">\n                <img src=\"assets/img/addenda-repair.png\" />\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Sort } from '@angular/material/sort';\nimport { Subscription, firstValueFrom } from 'rxjs';\nimport { ChqWidgetsButtonModel } from 'src/app/model/chq-widgets-button-model';\nimport { ChqWidgetsDropdownModel } from 'src/app/model/chq-widgets-dropdown-model';\nimport { ChqWidgetsInputModel, IControlValue } from 'src/app/model/chq-widgets-input-model';\nimport { CommonService, i18nInfo } from 'src/app/services/common/common.service';\nimport { MonitorService } from 'src/app/services/monitor-service/monitor.service';\nimport { ChqDropdownComponent } from 'src/app/widgets/chq-dropdown/chq-dropdown.component';\nimport { CellClickedCallback, SortChangedCallback, TableCellData, TableConfig, TableRowData } from 'src/app/widgets/chq-mat-table/chq-mat-table.component';\nimport { ApiPagination, PaginateInfo, defaultPagination } from 'src/app/widgets/chq-paginator/chq-paginator.component';\nimport { CustomerService } from 'src/app/services/customer/customer.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CustomerCompanyTableConfig, CustomerTableConfig } from 'src/app/config/display/customer-table-config';\nimport { customerListMenus, menuItem } from 'src/app/model/menu';\nimport { CaseService } from 'src/app/services/case/case.service';\nimport { SeverityLevel } from '@microsoft/applicationinsights-web';\nimport { XaCurrencyPipe } from 'src/app/helper/pipe/xa-currency/xa-currency.pipe';\nimport { CalendarService } from 'src/app/services/calendar/calendar.service';\n\nconst ACTIVE_PATHS = {\n  COMPANY: 'company',\n  PERSONAL: 'individual'\n}\n\n@Component({\n  selector: 'add-customer-table',\n  templateUrl: './customer-table.component.html',\n  styleUrls: [ './customer-table.component.scss' ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CustomerTableComponent implements OnInit {\n\n  // Personal Customer list variables\n  public pageChanged: boolean = false;\n  public tableConfig: TableConfig;\n  public pagination: ApiPagination = defaultPagination;\n  public static currentPage: number = 1;\n  private readonly configData: any = CustomerTableConfig;\n  public tableData: any;\n  public textToSearch: string = '';\n\n  // Filter variable\n  @ViewChild('companyName') companyName: ChqDropdownComponent;\n  @ViewChild('workProvider') workProvider: ChqDropdownComponent;\n  public input: any = { personName: false, companyName: false };\n\n  // Tabs Menu\n  public customerListMenus = customerListMenus;\n  public activeTab: string = ''\n  public activeTabOptions = ACTIVE_PATHS\n\n  // Company Customer list variables\n  public pageChangedCompany: boolean = false;\n  public tableConfigCompany: TableConfig;\n  public paginationCompany: ApiPagination = defaultPagination;\n  public static currentPageCompnay: number = 1;\n  private readonly configDataCompany: any = CustomerCompanyTableConfig;\n  public tableDataCompany: any;\n  public workProviderFromBooking: Array<string> = [];\n  public selectedCompanyForFilter = [] \n\n  // Extra Variables\n  public dueAmountPersonClass = '';\n  public dueAmountCompanyClass = '';\n  public totalDueAmountCompany: any = 0;\n  public totalDueAmountPerson:any = 0;\n  public showTotalDueAmountCompany = false;\n  public showTotalDueAmountPerson = false;\n  public userDetail;\n  private subscription: Subscription;\n  public applyButtonModel: ChqWidgetsButtonModel = {\n    label: 'apply',\n    type: 'disabled',\n    icon: '',\n    onclick: this.applyFilter.bind(this)\n  }\n  public resetButtonModel: ChqWidgetsButtonModel = {\n    label: 'reset_all',\n    type: 'outline',\n    icon: '',\n    onclick: this.reSetFilter.bind(this)\n  }\n\n  // Company Filter\n  public dropdownModelFilter: ChqWidgetsDropdownModel = {\n    options: [ ],\n    placeHolder: 'select_type',\n    label: 'select_type',\n    name: 'filterDropdown',\n    displayValue: 'label',\n    selectedOption: { label: '' }\n  };\n\n  public dropdownModelCompany: ChqWidgetsDropdownModel = {\n    options: [],\n    placeHolder: 'company_name',\n    label: 'company_name',\n    name: 'companyDropdown',\n    displayValue: 'companyName',\n    keyFieldName: 'CompanyId',\n    selectedOption: [],\n    isMultiSelect: true\n  };\n\n  //PERSONAL Filters\n  public dropdownModelFilterPerson: ChqWidgetsDropdownModel = {\n    options: [ { label: 'Retail - Individual' } ],\n    placeHolder: 'select_type',\n    label: 'select_type',\n    name: 'filterDropdownPerson',\n    displayValue: 'label',\n    selectedOption: { label: '' }\n  };\n\n  public nameTextBox: ChqWidgetsInputModel = {\n    placeHolder: 'customer_name',\n    label: 'customer_name',\n    name: 'name',\n    type: 'text',\n    value: '',\n    required: false\n  }\n\n  i18n: i18nInfo;\n\n  /**\n   * constructor\n   * @param monitorService \n   * @param commonService \n   * @param tableDataSer \n   */\n  constructor(\n    private monitorService: MonitorService,\n    private commonService: CommonService,\n    private tableDataSer: CustomerService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private caseService: CaseService,\n    private xaCurrencyPipe: XaCurrencyPipe,\n    private calendarService: CalendarService,\n  ) {\n    this.i18n = this.commonService.geti18nInfo();\n  }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n    this.monitorService.logEvent('ngOnInit', [ 'CustomerTableComponent', 'addenda-repair' ]);\n    this.tableConfig = this.configData;\n    this.tableConfigCompany = this.configDataCompany\n\n    this.route.params.subscribe(async (params) => {\n      this.activeTab = params['userType'];\n      if (this.activeTab === ACTIVE_PATHS.PERSONAL) {\n        this.pagination = {\n          ...this.pagination, ...{\n            count: 0,\n            currentPage: CustomerTableComponent.currentPage,\n            orderBy: 'CreatedDate',\n            sortDirection: 'desc'\n          }\n        };\n\n        const paginationInfo: PaginateInfo = {\n          currentPage: CustomerTableComponent.currentPage,\n          offset: this.pagination.pageSize * (CustomerTableComponent.currentPage - 1),\n          pageSize: this.pagination.pageSize\n        }\n        this.handlePaginationChange(paginationInfo);\n        this.getTotalDueAmountPerson();\n      } else {\n        this.paginationCompany = {\n          ...this.paginationCompany, ...{\n            count: 0,\n            currentPage: CustomerTableComponent.currentPageCompnay,\n            orderBy: 'CreatedDate',\n            sortDirection: 'desc'\n          }\n        };\n        this.commonService.showLoading()\n        const responseB = await firstValueFrom(this.tableDataSer.getCompanyWorkProviders('$apply=groupby((CompanyOrgType))'));\n        if (responseB && responseB.length > 0) {\n          this.workProviderFromBooking = responseB.map(ele => ele.CompanyOrgType)\n        }\n        this.getCompanyCustomers();\n        this.getTotalDueAmountCompany()\n        if (!this.dropdownModelFilter.observable) {\n          this.dropdownModelFilter = {\n            ...this.dropdownModelFilter,\n            observable: this.caseService.getProviders(),\n            onObservableLoad: this.onObservableLoadWorkProviderData.bind(this)\n          }\n          this.workProvider.dropdownModel.observable = this.caseService.getProviders();\n          this.workProvider.getObservable();\n        }\n      }\n    });\n    this.subscription = this.commonService.userProfileData.subscribe((res) => {\n      this.userDetail = res?.data;\n    })\n  }\n\n  /**\n    @returns {void} ngOnDestroy for GenerateInvoicesComponent\n  */\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n    Retrieves a list of customers for a company.\n    @returns {Promise} A promise that resolves with the list of customers.\n  */\n  public async getCompanyCustomers(): Promise<any> {\n    this.commonService.showLoading()\n    let queryParams = '';\n    if(this.selectedCompanyForFilter?.length > 0) {\n      queryParams = `$filter=(${this.selectedCompanyForFilter.map((x) => { return `ContactId eq ${x.CompanyId}` }).join(' or ')})`;\n    }\n    return firstValueFrom(this.tableDataSer.getCompanyCustomers(this.paginationCompany, queryParams)).then((response) => {\n      const result = response.value;\n      result.map((ele) => {\n        let dueAmountClass = '';\n        ele.AmountDue = ele.Amount - ele.AmountReceived;\n        if (ele.Amount && ele.AmountDue !== undefined) {\n          const dueAmountPrecent = (ele.AmountDue * 100) / ele.Amount\n          if (dueAmountPrecent >= 30) dueAmountClass = 'color-xa-dark-red';\n          if (dueAmountPrecent <= 10 && dueAmountPrecent > 0) dueAmountClass = 'col-xa-orange2';\n          if (dueAmountPrecent == 0) dueAmountClass = 'color-xa-repair-header';\n        }\n        ele.FormattedTotalAmount = ele.Amount ? this.xaCurrencyPipe.transform(ele.Amount, this.i18n.currencySymbol, this.i18n.digitsInfo, this.i18n.locale, this.i18n.position) : '-'\n        ele.FormattedPaidAmount = ele.AmountReceived ? this.xaCurrencyPipe.transform(ele.AmountReceived, this.i18n.currencySymbol, this.i18n.digitsInfo, this.i18n.locale, this.i18n.position) : '-'\n        ele.FormattedDueAmount = ele.Amount ?\n          '<span class=\"' + dueAmountClass + '\">' + this.xaCurrencyPipe.transform(ele.AmountDue, this.i18n.currencySymbol, this.i18n.digitsInfo, this.i18n.locale, this.i18n.position) : '-' + '</span>'\n        ele.FormattedCompanyName = ele.CompanyName ? `<span class=\"company-name\">${ele.CompanyName}${ele.LicenseNumber ? '-<i>' + ele.LicenseNumber + '</i>': ''}</span>` : ''  \n      })\n      this.tableDataCompany = result;\n      this.paginationCompany = { ...this.paginationCompany, count: response['@odata.count'] || 0 };\n      this.commonService.hideLoading();\n    }).catch((err) => {\n      this.monitorService.logException(err, SeverityLevel.Error);\n      this.commonService.hideLoading();\n    });\n  }\n\n\n  /**\n    Retrieves customer data from a table data service and sets it to the table data property.\n    If an error occurs, the apply button type is set to primary and the loading spinner is hidden.\n    @returns {Promise} A promise that resolves to the customer data or rejects with an error.\n  */\n  public async getCustomers(): Promise<any> { // individual customer list\n    const selectedFilter = this.dropdownModelFilterPerson.selectedOption?.label;\n    let queryParams = '';\n    switch (selectedFilter?.toLowerCase()) {\n    case 'retail - individual':\n      if (this.textToSearch != '') {\n        // To Fix typescript error convert the value to string by appending ''\n        const empName = this.textToSearch + '';\n        queryParams = `$filter=(contains(tolower(FirstName),'${empName.toLowerCase()}')) or (contains(tolower(LastName),'${empName.toLowerCase()}'))`;\n      }\n      break;\n    default:\n      break;\n    }\n\n    this.commonService.showLoading();\n    return firstValueFrom(this.tableDataSer.getCustomers(this.pagination, queryParams)).then((response) => {\n      const result = response.value;\n      result.map((ele) => {\n        let dueAmountClass = '';\n        ele.AmountDue = ele.Amount - ele.AmountReceived;\n        if (ele.Amount && ele.AmountDue !== undefined) {\n          const dueAmountPrecent = (ele.AmountDue * 100) / ele.Amount\n          if (dueAmountPrecent >= 30) dueAmountClass = 'color-xa-dark-red';\n          if (dueAmountPrecent <= 10 && dueAmountPrecent > 0) dueAmountClass = 'col-xa-orange2';\n          if (dueAmountPrecent == 0) dueAmountClass = 'color-xa-repair-header';\n        }\n        ele.FormattedTotalAmount = ele.Amount ? this.xaCurrencyPipe.transform(ele.Amount, this.i18n.currencySymbol, this.i18n.digitsInfo, this.i18n.locale, this.i18n.position) : '-'\n        ele.FormattedPaidAmount = ele.AmountReceived ? this.xaCurrencyPipe.transform(ele.AmountReceived, this.i18n.currencySymbol, this.i18n.digitsInfo, this.i18n.locale, this.i18n.position) : '-'\n        ele.FormattedDueAmount = ele.Amount && ele.AmountDue !== undefined ?\n          '<span class=\"' + dueAmountClass + '\">' + this.xaCurrencyPipe.transform(ele.AmountDue, this.i18n.currencySymbol, this.i18n.digitsInfo, this.i18n.locale, this.i18n.position) + '</span>' : '-'\n      })\n      this.tableData = result;\n      this.pagination = { ...this.pagination, count: response['@odata.count'] || 0 };\n      this.commonService.hideLoading();\n    }).catch((err) => {\n      this.monitorService.logException(err, SeverityLevel.Error);\n      this.commonService.hideLoading();\n    });\n  }\n\n  /**\n    @returns {Promise} A promise that resolves to the customer data or rejects with an error.\n  */\n  public async getTotalDueAmountCompany(): Promise<any> {\n    this.showTotalDueAmountCompany = false\n    let query = '$apply=';\n    if(this.selectedCompanyForFilter?.length > 0) {\n      query += `filter(${this.selectedCompanyForFilter.map((x) => { return `ContactId eq ${x.CompanyId}` }).join(' or ')})/`;\n    }\n    query += 'aggregate(Amount with sum as TotalAmount, AmountReceived with sum as TotalAmountReceived)'\n    return firstValueFrom(this.tableDataSer.getTotalDueAmountCompany(query)).then((response: any) => {\n      if(response && response[0]) {\n        this.showTotalDueAmountCompany = true\n        this.dueAmountCompanyClass = ''\n        this.totalDueAmountCompany = response[0].TotalAmount ? response[0].TotalAmount - response[0].TotalAmountReceived : '-';\n        if(response[0].TotalAmount) {\n          const dueAmountPrecent = (this.totalDueAmountCompany * 100) / response[0].TotalAmount;\n          if (dueAmountPrecent >= 30) this.dueAmountCompanyClass = 'color-xa-dark-red';\n          if (dueAmountPrecent <= 10 && dueAmountPrecent > 0) this.dueAmountCompanyClass = 'col-xa-orange2';\n          if (dueAmountPrecent == 0) this.dueAmountCompanyClass = 'color-xa-repair-header';\n        }\n      }\n    }).catch((err) => {\n      this.showTotalDueAmountCompany = true\n      this.monitorService.logException(err, SeverityLevel.Error);\n    });\n  }\n\n  /**\n    @returns {Promise} A promise that resolves to the customer data or rejects with an error.\n  */\n  public async getTotalDueAmountPerson(): Promise<any> {\n    this.showTotalDueAmountPerson = false\n    let query = '$apply=';\n    const selectedFilter = this.dropdownModelFilterPerson.selectedOption?.label;\n    switch (selectedFilter?.toLowerCase()) {\n    case 'retail - individual':\n      if (this.textToSearch != '') {\n        // To Fix typescript error convert the value to string by appending ''\n        const empName = this.textToSearch + '';\n        query += `filter(contains(tolower(FirstName),'${empName.toLowerCase()}') or contains(tolower(LastName),'${empName.toLowerCase()}'))/`;\n      }\n      break;\n    default:\n      break;\n    }\n\n    query += 'aggregate(Amount with sum as TotalAmount, AmountReceived with sum as TotalAmountReceived)'\n    return firstValueFrom(this.tableDataSer.getTotalDueAmountPerson(query)).then((response: any) => {\n      if(response && response[0]) {\n        this.showTotalDueAmountPerson = true;\n        this.dueAmountPersonClass = ''\n        this.totalDueAmountPerson = response[0].TotalAmount ? response[0].TotalAmount - response[0].TotalAmountReceived : '-';\n        if(response[0].TotalAmount) {\n          const dueAmountPrecent = (this.totalDueAmountPerson * 100) / response[0].TotalAmount;\n          if (dueAmountPrecent >= 30) this.dueAmountPersonClass = 'color-xa-dark-red';\n          if (dueAmountPrecent <= 10 && dueAmountPrecent > 0) this.dueAmountPersonClass = 'col-xa-orange2';\n          if (dueAmountPrecent == 0) this.dueAmountPersonClass = 'color-xa-repair-header';\n        }\n      }\n    }).catch((err) => {\n      this.showTotalDueAmountPerson = true\n      this.monitorService.logException(err, SeverityLevel.Error);\n    });\n  }\n\n  /**\n    Handles a change in the sorting of the customer data.\n    @param {Sort} sort - The new sorting criteria.\n    @returns {void}\n  */\n  handleSortChange: SortChangedCallback = (sort: Sort): void => {\n    if (sort) {\n      this.pagination = { ...this.pagination, ...{ orderBy: sort.active, sortDirection: sort.direction } };\n      this.getCustomers()\n    }\n  }\n\n  /**\n    Handles a change in the sorting of company customers.\n    @param {Sort} sort - The new sorting criteria.\n    @returns {void}\n  */\n  handleSortChangeCompany: SortChangedCallback = (sort: Sort): void => {\n    if (sort) {\n      this.paginationCompany = { ...this.paginationCompany, ...{ orderBy: sort.active, sortDirection: sort.direction } };\n      this.getCompanyCustomers()\n    }\n  }\n\n  /**\n   * page change\n   * @param event \n   */\n  handlePaginationChange(event: PaginateInfo): void {\n    const pagination: ApiPagination = {\n      pageSize: event.pageSize,\n      offset: event.offset,\n      currentPage: event.currentPage\n    };\n\n    this.pagination.currentPage = event.currentPage;\n    this.pagination = { ...this.pagination, ...pagination };\n\n    this.pageChanged = true;\n    this.getCustomers();\n  }\n\n\n  /**\n   * page change\n   * @param event \n   */\n  handlePaginationChangeCompany(event: PaginateInfo): void {\n    const pagination: ApiPagination = {\n      pageSize: event.pageSize,\n      offset: event.offset,\n      currentPage: event.currentPage\n    };\n\n    this.paginationCompany.currentPage = event.currentPage;\n    this.paginationCompany = { ...this.paginationCompany, ...pagination };\n\n    this.pageChangedCompany = true;\n    this.getCompanyCustomers();\n  }\n\n  /**\n   * selected any filter in the dropdown\n   * @param $event \n   */\n  public selectFilter($event: any): void {\n    this.monitorService.logEvent('selectFilter', [ 'CustomerTableComponent', 'addenda-repair', {\n      $event\n    } ]);\n    if ($event?.name == 'filterDropdown') {\n      const query = `?$filter=( OrgId eq ${this.userDetail?.organizationDetail?.id} and CompanyOrgType eq '${$event.value.label}' and IsIndividual eq false)`;\n      this.dropdownModelFilter.selectedOption = $event.value;\n      this.hideShowDropdown('companyName');\n      this.dropdownModelCompany = {\n        ...this.dropdownModelCompany, \n        selectedOption: [],\n        options: [],\n        displayValue: 'label', \n        observable: this.calendarService.getCustomer(query),\n        onObservableLoad: this.onObservableLoadCompanyData.bind(this)  \n      }\n      setTimeout(() => {\n        this.companyName?.getObservable()\n      }, 100)\n      this.updateApplyButtonState()\n    } else if ($event.name == 'filterDropdownPerson') {\n      this.dropdownModelFilterPerson.selectedOption = $event.value\n      switch ($event.value[this.dropdownModelFilterPerson.displayValue]?.toLowerCase()) {\n      case 'retail - individual':\n        this.hideShowDropdown('personName');\n        this.nameTextBox.value = ''\n        break;\n      default:\n        this.hideShowDropdown('');\n        break;\n      }\n    } else if ($event?.name == 'companyDropdown') {\n      this.dropdownModelCompany.selectedOption = $event.value;\n      this.updateApplyButtonState()\n    } \n  }\n\n\n  /**\n   * \n   * @param event \n   */\n  public updateInput(event: IControlValue): void {\n    if (event.name == 'name') {\n      this.nameTextBox.value = event.value;\n      this.updateApplyButtonState()\n    }\n  }\n\n  /**\n   * \n   * @param event \n   */\n  public updateApplyButtonState(): void {\n    let state: 'disabled' | 'secondary' = 'disabled';\n    if (this.activeTab === this.activeTabOptions.PERSONAL) {\n      if (this.nameTextBox.value && this.nameTextBox.value.toString().length >= 3) {\n        state = 'secondary'\n      }\n    } else if (this.activeTab === this.activeTabOptions.COMPANY) {\n      if (this.dropdownModelCompany.selectedOption?.length > 0 && this.input.companyName) {\n        state = 'secondary'\n      }\n    }\n    this.applyButtonModel.type = state\n  }\n\n  /**\n   * hide show dropdown\n  */\n  private hideShowDropdown(key: string): void {\n    this.input[key] = true;\n    Object.keys(this.input).forEach(\n      (value) => {\n        if (value != key) {\n          this.input[value] = false;\n        }\n      }\n    )\n  }\n\n  /**\n    Handles a cell click event.\n    @param {TableRowData} row - The row data.\n    @param {Partial} column - The column data.\n    @returns {void}\n  */\n  handleCellClick: CellClickedCallback = (row: TableRowData, column: Partial<TableCellData>): void => {\n    if(column.id === 'ContactId') {\n      const customerId = row.find(ele => ele.id === column.id)?.result?.value;\n      if(customerId) {\n        const customerDetails = this.tableData.find(ele => ele.ContactId === customerId)\n        if(customerDetails) this.commonService.customerDetails.next(customerDetails);\n        if(customerId) this.router.navigate([ `/repair/customers/individual/${customerId}/${customerDetails.Id}/repair-order` ])\n      }\n      \n    }\n  };\n\n  /**\n    Handles a cell click event for a company column.\n    @param {TableRowData} row - The row data for the clicked cell.\n    @param {Partial} column - The column data for the clicked cell.\n    @returns {void}\n  */\n  handleCellClickCompany: CellClickedCallback = (row: TableRowData, column: Partial<TableCellData>): void => {\n    if(column.id === 'ContactId') {\n      const companyId = row.find(ele => ele.id === column.id)?.result?.value\n      if(companyId) {\n        const customerDetails = this.tableDataCompany.find(ele => ele.ContactId === companyId)\n        if(customerDetails) this.commonService.customerDetails.next(customerDetails);\n        if(companyId) this.router.navigate([ `/repair/customers/company/${companyId}/${customerDetails.Id}/repair-order` ])\n      }\n      \n    }\n  };\n\n  /**\n    Navigates to the specified menu item's URL using the Angular Router.\n    @param {menuItem} item - The menu item to navigate to.\n    @returns {void}\n  */\n  navigate(item: menuItem): void {\n    const url = item.url;\n    this.router.navigate([ url ]);\n    if(this.dropdownModelFilter?.selectedOption) {\n      this.input.companyName = false\n      this.dropdownModelFilter = { ...this.dropdownModelFilter, selectedOption: {} }\n    }\n    if(this.dropdownModelCompany?.selectedOption) {\n      this.dropdownModelCompany = { ...this.dropdownModelCompany, selectedOption: [] }\n    }\n    if(this.dropdownModelFilterPerson?.selectedOption) {\n      this.input.personName = false;\n      this.dropdownModelFilterPerson = { ...this.dropdownModelFilterPerson, selectedOption: {} }\n    }\n    if(this.nameTextBox?.value) {\n      this.nameTextBox = { ...this.nameTextBox, value: '' }\n    }\n  }\n\n  /**\n    Applies a filter based on the active tab selected by the user.\n    If the active tab is \"COMPANY\", it calls the \"getCompanyCustomers\" function.\n    If the active tab is \"PERSONAL\", it calls the \"getCustomers\" function.\n    @returns {void}\n  */\n  applyFilter(): void {\n    if (this.activeTab === this.activeTabOptions.COMPANY) {\n      this.paginationCompany = { ...this.paginationCompany, currentPage: 1 }\n      this.selectedCompanyForFilter = [ ...this.dropdownModelCompany.selectedOption ]\n      this.getCompanyCustomers();\n      this.getTotalDueAmountCompany();\n    } else if (this.activeTab === this.activeTabOptions.PERSONAL) {\n      this.pagination = { ...this.pagination, currentPage: 1 }\n      this.textToSearch = this.nameTextBox.value + ''\n      this.getCustomers()\n      this.getTotalDueAmountPerson()\n    }\n  }\n  /**\n    Reset a filter based on the active tab selected by the user.\n    If the active tab is \"COMPANY\", it calls the \"getCompanyCustomers\" function.\n    If the active tab is \"PERSONAL\", it calls the \"getCustomers\" function.\n    @returns {void}\n  */\n  reSetFilter(): void {\n    if (this.activeTab === this.activeTabOptions.COMPANY) {\n      this.dropdownModelCompany = { ...this.dropdownModelCompany, selectedOption: [] }\n      this.dropdownModelFilter = { ...this.dropdownModelFilter, selectedOption: {} }\n      this.paginationCompany = { ...this.paginationCompany, currentPage: 1 }\n      this.input.companyName = false;\n      this.selectedCompanyForFilter = []\n      this.updateApplyButtonState()\n      this.getCompanyCustomers()\n      this.getTotalDueAmountCompany();\n    } else if (this.activeTab === this.activeTabOptions.PERSONAL) {\n      this.nameTextBox = { ...this.nameTextBox, value: '' }\n      this.pagination = { ...this.pagination, currentPage: 1 }\n      this.dropdownModelFilterPerson = { ...this.dropdownModelFilterPerson, selectedOption: {} }\n      this.input.personName = false;\n      this.textToSearch = ''\n      this.getCustomers()\n      this.getTotalDueAmountPerson()\n    }\n    this.updateApplyButtonState();\n  }\n\n  /**\n    @param {any} items - The compnay items to update the form model with.\n    @returns {void}\n  */\n  onObservableLoadCompanyData(items: any): void { \n    if (items && items.length > 0) {\n      items.forEach((item, i) => {\n        items[i] = { \n          ...items[i], \n          label: `${item.CompanyName}${item.LicenseNumber ? '-' + item.LicenseNumber : ''}`, \n          html: `<span class=\"company-name-dropdown\">${item.CompanyName}${item.LicenseNumber? '-<i>' + item.LicenseNumber + '</i>': ''}</span>`, \n        }\n      });\n      this.dropdownModelCompany = { ...this.dropdownModelCompany, options: items, selectedOption: items }\n      this.updateApplyButtonState()\n    }\n  }\n\n  /**\n    @param {any} items - The compnay items to update the form model with.\n    @returns {void}\n  */\n  onObservableLoadWorkProviderData(items: any): void { \n    if (items && items.length > 0) {\n      const filteredItems = items.filter((item, i) => {\n        return this.workProviderFromBooking.indexOf(item.label) !== -1 ? true : false\n      });\n      this.workProvider.dropdownOptions = filteredItems;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VersionControlResolver } from 'src/app/resolvers/versionControl.resolver';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconsModule } from 'src/app/icons.module';\nimport { WidgetsModule } from 'src/app/widgets/chq-widgets.module';\nimport { CustomerTableComponent } from './customer-list/customer-table.component';\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst route: Route[] = [\n  {\n    path: ':userType',\n    component: CustomerTableComponent,\n    resolve: { version: VersionControlResolver }\n  },\n  {\n    path: ':userType/:contactId/:id/:orderType',\n    component: CustomerDetailsComponent,\n    resolve: { version: VersionControlResolver }\n  },\n];\n\n@NgModule({\n  declarations: [ CustomerTableComponent, CustomerDetailsComponent ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    IconsModule,\n    RouterModule.forChild(route),\n    MatMenuModule,\n    WidgetsModule,\n    MatExpansionModule,\n    TranslateModule,\n    SharedModule\n  ]\n})\nexport class CustomerTableModule { }\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { catchError, map, Observable, of } from 'rxjs';\nimport { CommonService } from '../services/common/common.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VersionControlResolver implements Resolve<Observable<any>> {\n  /**\n   * contructor\n   * @param commonService \n   */\n  constructor(private commonService: CommonService) { }\n  /**\n   * resolve the \n   * @returns \n   */\n  resolve(): Observable<any> {\n    this.commonService.showLoading();\n    return this.commonService.checkVersion().pipe(\n      map((res) => {\n        this.commonService.hideLoading();\n        const localVersion = localStorage.getItem('appVersion');\n        const appVersion = res.buildRevision;\n        if (localVersion && localVersion != appVersion) {\n          localStorage.setItem('appVersion', appVersion);\n          setTimeout(() => {\n            location.reload();\n          }, 10);\n          return of('new version available');\n        } else {\n          localStorage.setItem('appVersion', appVersion);\n          return of('new version is not available');\n        }\n      }),\n      catchError(() => {\n        this.commonService.hideLoading();\n        return of('data not available at this time');\n      })\n    )\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ApiPagination } from 'src/app/widgets/chq-paginator/chq-paginator.component';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  /**\n   * constructor\n   * @param http \n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * \n   * @param getCustomers  \n   * @returns observable\n   * fake data have to remove once api is implemented\n   */\n  public getCustomers(pagination: ApiPagination, queryParams: string = null): Observable<any> {\n    const skip = (pagination.currentPage - 1) * pagination.pageSize;\n    queryParams = (!queryParams) ? `$top=${pagination.pageSize}&$skip=${skip}` : `$top=${pagination.pageSize}&$skip=${skip}&${queryParams}`\n    const orderBy = `&$orderby=${pagination.orderBy} ${pagination.sortDirection}`\n    const url = `${environment.caseMgmtUrl}/odata/customerinvoice?${queryParams}${orderBy}&count=true`;\n    return this.http.get<any>(url);\n  }\n\n  /**\n   * \n   * @param   getCompanyCustomers\n   * @returns observable\n   * fake data have to remove once api is implemented\n   */\n  public getCompanyCustomers(pagination: ApiPagination, queryParams=''): Observable<any> {\n    const skip = (pagination.currentPage - 1) * pagination.pageSize;\n    queryParams = (!queryParams) ? `$top=${pagination.pageSize}&$skip=${skip}` : `$top=${pagination.pageSize}&$skip=${skip}&${queryParams}`\n    const orderBy = `&$orderby=${pagination.orderBy} ${pagination.sortDirection}`\n    const url = `${environment.caseMgmtUrl}/odata/companyinvoice?${queryParams}${orderBy}&count=true`;\n    return this.http.get<any>(url);\n  }\n\n  /**\n   * \n   * @param   getCompanyCustomers\n   * @returns observable\n   * fake data have to remove once api is implemented\n   */\n  public getCompanyWorkProviders(queryParams=''): Observable<any> {\n    const url = `${environment.caseMgmtUrl}/odata/companyinvoice?${queryParams}`;\n    return this.http.get<any>(url);\n  }\n\n\n  /**\n    Retrieves repair orders from a mock data source.\n    @param {ApiPagination} pagination - The pagination object containing the page number and page size.\n    @param {string} [queryParams] - Optional query parameters to filter the results.\n    @returns {Observable} - An observable that emits the retrieved repair orders.\n  */\n  public getReapirOrders(customerId: string, userType:string, pagination: ApiPagination): Observable<any> {\n    const skip = (pagination.currentPage - 1) * pagination.pageSize;\n    const queryParams = `$top=${pagination.pageSize}&$skip=${skip}`\n    const orderBy = `&$orderby=${pagination.orderBy} ${pagination.sortDirection}`\n    let filter = ''\n    if(userType === 'company') {\n      filter = `&$filter=(companyId eq ${customerId})&companyIndividualType=1`\n    } else {\n      filter = `&$filter=(contactId eq ${customerId})&companyIndividualType=2`\n    }\n    // const filter = ''\n    const url = `${environment.caseMgmtUrl}/odata/repairorder?${queryParams}${orderBy}${filter}&count=true`;\n    return this.http.get<any>(url);\n  }\n\n  /**\n    Retrieves a list of cases based on the provided pagination and query parameters.\n    @param {ApiPagination} pagination - An object containing information about the pagination to be applied to the results.\n    @param {string} [queryParams] - An optional string containing any additional query parameters to be included in the request.\n    @returns {Observable} - An Observable that emits the retrieved list of cases.\n  */\n  public getCases(customerId: string, userType:string, pagination: ApiPagination): Observable<any> {\n    const skip = (pagination.currentPage - 1) * pagination.pageSize;\n    const queryParams = `$top=${pagination.pageSize}&$skip=${skip}`\n    const orderBy = `&$orderby=${pagination.orderBy} ${pagination.sortDirection}`\n    let filter = '';\n    if(userType === 'company') {\n      filter = `&$filter=(companyId eq ${customerId})&companyIndividualType=1`\n    } else {\n      filter = `&$filter=(contactId eq ${customerId})&companyIndividualType=2`\n    }\n    const url = `${environment.caseMgmtUrl}/odata/repairestimation?${queryParams}${orderBy}${filter}&count=true`;\n    return this.http.get<any>(url);\n  }\n  \n  /**\n    Retrieves total due amount compnay, provided query parameters.\n    @param {string} [queryParams] - An optional string containing any additional query parameters to be included in the request.\n    @returns {Observable} - An Observable that emits the retrieved list of cases.\n  */\n  public getTotalDueAmountCompany(queryParams = ''): Observable<any> {\n    return this.http.get<any>(`${environment.caseMgmtUrl}/odata/companyinvoice?${queryParams}`);\n  }\n\n  /**\n    Retrieves total due amount compnay, provided query parameters.\n    @param {string} [queryParams] - An optional string containing any additional query parameters to be included in the request.\n    @returns {Observable} - An Observable that emits the retrieved list of cases.\n  */\n  public getTotalDueAmountPerson(queryParams = ''): Observable<any> {\n    return this.http.get<any>(`${environment.caseMgmtUrl}/odata/customerinvoice?${queryParams}`);\n  }\n\n  /**\n    Retrieves company details\n    @returns {Observable} - An Observable that emits the retrieved list of cases.\n  */\n  public getCompanyDetails(companyId: any): Observable<any> {\n    return this.http.get<any>(`${environment.caseMgmtUrl}/api/companyinvoice/${companyId}`);\n  }\n\n  /**\n    Retrieves Customer details\n    @returns {Observable} - An Observable that emits the retrieved list of cases.\n  */\n  public getCustomerDetails(customerId: any): Observable<any> {\n    return this.http.get<any>(`${environment.caseMgmtUrl}/api/customerinvoice/${customerId}`);\n  }\n}\n"]}